uint64_t Catalog.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList.hash(into:));
}

uint64_t sub_256AB26FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000004FLL;
  *(void *)(a1 + 8) = 0x8000000256B42E10;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList.hash(into:));
}

uint64_t sub_256AB27AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003ALL;
  *(void *)(a1 + 8) = 0x8000000256B430D0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.hash(into:));
}

uint64_t sub_256AB2864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000037;
  *(void *)(a1 + 8) = 0x8000000256B43150;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.hash(into:));
}

uint64_t sub_256AB291C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003CLL;
  *(void *)(a1 + 8) = 0x8000000256B431D0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.hash(into:));
}

uint64_t sub_256AB29D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000032;
  *(void *)(a1 + 8) = 0x8000000256B43250;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.hash(into:));
}

uint64_t sub_256AB2A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000032;
  *(void *)(a1 + 8) = 0x8000000256B43350;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.hash(into:));
}

uint64_t sub_256AB2B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000034;
  *(void *)(a1 + 8) = 0x8000000256B43B60;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.hash(into:));
}

uint64_t sub_256AB2BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003CLL;
  *(void *)(a1 + 8) = 0x8000000256B43BE0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.hash(into:));
}

uint64_t sub_256AB2CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000037;
  *(void *)(a1 + 8) = 0x8000000256B43E00;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.hash(into:));
}

uint64_t sub_256AB2D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003BLL;
  *(void *)(a1 + 8) = 0x8000000256B44180;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.hash(into:));
}

uint64_t sub_256AB2E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003ALL;
  *(void *)(a1 + 8) = 0x8000000256B443E0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.hash(into:));
}

uint64_t sub_256AB2EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000032;
  *(void *)(a1 + 8) = 0x8000000256B457C0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.hash(into:));
}

uint64_t sub_256AB2F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000042;
  *(void *)(a1 + 8) = 0x8000000256B45890;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList.hash(into:));
}

uint64_t sub_256AB304C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000038;
  *(void *)(a1 + 8) = 0x8000000256B458E0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.hash(into:));
}

uint64_t sub_256AB3104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000042;
  *(void *)(a1 + 8) = 0x8000000256B45970;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList.hash(into:));
}

uint64_t sub_256AB31BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000038;
  *(void *)(a1 + 8) = 0x8000000256B45A00;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.hash(into:));
}

uint64_t sub_256AB3274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003CLL;
  *(void *)(a1 + 8) = 0x8000000256B45A80;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.hash(into:));
}

uint64_t sub_256AB332C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003BLL;
  *(void *)(a1 + 8) = 0x8000000256B45B00;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.hash(into:));
}

uint64_t sub_256AB33E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000033;
  *(void *)(a1 + 8) = 0x8000000256B45EE0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList.hash(into:));
}

uint64_t sub_256AB3494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000031;
  *(void *)(a1 + 8) = 0x8000000256B45F60;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.hash(into:));
}

uint64_t sub_256AB354C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000035;
  *(void *)(a1 + 8) = 0x8000000256B45FE0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList.hash(into:));
}

uint64_t sub_256AB35FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000047;
  *(void *)(a1 + 8) = 0x8000000256B46070;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList.hash(into:));
}

uint64_t sub_256AB36AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000002CLL;
  *(void *)(a1 + 8) = 0x8000000256B460F0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.hash(into:));
}

uint64_t sub_256AB3764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000002DLL;
  *(void *)(a1 + 8) = 0x8000000256B46150;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.hash(into:));
}

uint64_t sub_256AB381C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000002DLL;
  *(void *)(a1 + 8) = 0x8000000256B461B0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.hash(into:));
}

uint64_t sub_256AB38D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000031;
  *(void *)(a1 + 8) = 0x8000000256B46220;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList.hash(into:));
}

uint64_t sub_256AB398C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000034;
  *(void *)(a1 + 8) = 0x8000000256B462A0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList.hash(into:));
}

uint64_t sub_256AB3A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000002FLL;
  *(void *)(a1 + 8) = 0x8000000256B46310;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.hash(into:));
}

uint64_t sub_256AB3AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000003ELL;
  *(void *)(a1 + 8) = 0x8000000256B46380;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList.hash(into:));
}

uint64_t sub_256AB3BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000031;
  *(void *)(a1 + 8) = 0x8000000256B46400;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.hash(into:));
}

uint64_t sub_256AB3C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000033;
  *(void *)(a1 + 8) = 0x8000000256B46480;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.hash(into:));
}

uint64_t sub_256AB3D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000030;
  *(void *)(a1 + 8) = 0x8000000256B464F0;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.hash(into:));
}

uint64_t sub_256AB3DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.hash(into:));
}

uint64_t (*Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.executionContexts.modify())()
{
  return nullsub_1;
}

void Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000033;
  *(void *)(a1 + 8) = 0x8000000256B46570;
  uint64_t v1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 16) = MEMORY[0x263F8EE88];
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 39) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(void *)(a1 + 56) = v2;
  *(_WORD *)(a1 + 64) = 256;
  sub_256AE1E24(a1);
}

void _s12ModelCatalog0B0O9DiffusionO7AdapterO9AnimationV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  int v25 = *(unsigned __int8 *)(a1 + 41);
  int v24 = *(unsigned __int8 *)(a1 + 42);
  int v21 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  int v10 = *(unsigned __int8 *)(a2 + 41);
  int v11 = *(unsigned __int8 *)(a2 + 42);
  v22 = *(void **)(a2 + 48);
  v23 = *(void **)(a1 + 48);
  int v20 = *(unsigned __int8 *)(a2 + 64);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  uint64_t v18 = *(void *)(a2 + 72);
  if (v12 || (sub_256B3FEA0())
    && (sub_256AA1A38(v2, v7) & 1) != 0
    && (sub_256AA1D04(v4, v6) & 1) != 0
    && v3 == v8
    && ((v5 ^ v9) & 1) == 0
    && ((v25 ^ v10) & 1) == 0
    && ((v24 ^ v11) & 1) == 0
    && (sub_256A87844(v23, v22) & 1) != 0
    && (sub_256A87910(), (v13 & 1) != 0)
    && ((v21 ^ v20) & 1) == 0
    && (sub_256AE2508(), (v14 & 1) == 0)
    && (sub_256A87AE4(v19, v18) & 1) != 0)
  {
    sub_256AE25D4();
    sub_256A87BC0(v15, v16);
  }
  else
  {
    sub_256AE25D4();
  }
}

uint64_t Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.hash(into:));
}

uint64_t sub_256AB401C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.hash(into:));
}

uint64_t (*Catalog.Tokenizer.AFMTextInstruct300MTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.AFMTextInstruct300MTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.AFMTextInstruct300MTokenizer.hash(into:));
}

uint64_t sub_256AB4078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.AFMTextInstruct300MTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.AFMTextInstructEnglish49k.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.AFMTextInstructEnglish49k.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.AFMTextInstructEnglish49k.hash(into:));
}

uint64_t sub_256AB40D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.AFMTextInstructEnglish49k.hash(into:));
}

uint64_t (*Catalog.Tokenizer.ChatGPTTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.ChatGPTTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.ChatGPTTokenizer.hash(into:));
}

uint64_t sub_256AB4130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.ChatGPTTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMLargeV1Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMLargeV1Tokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMLargeV1Tokenizer.hash(into:));
}

uint64_t sub_256AB418C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMLargeV1Tokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMLargeV2Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMLargeV2Tokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMLargeV2Tokenizer.hash(into:));
}

uint64_t sub_256AB41E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMLargeV2Tokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMLargeV3Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMLargeV3Tokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMLargeV3Tokenizer.hash(into:));
}

uint64_t sub_256AB4244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMLargeV3Tokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.hash(into:));
}

uint64_t sub_256AB42A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMSmallV1Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMSmallV1Tokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSmallV1Tokenizer.hash(into:));
}

uint64_t sub_256AB42FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSmallV1Tokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMSmallV2Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMSmallV2Tokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSmallV2Tokenizer.hash(into:));
}

uint64_t sub_256AB4358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSmallV2Tokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMSmallV3Tokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMSmallV3Tokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSmallV3Tokenizer.hash(into:));
}

uint64_t sub_256AB43B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.CodeLMSmallV3Tokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMTokenizer.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeLMTokenizer.hash(into:));
}

uint64_t sub_256AB4410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeLMTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerExperimental.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMTokenizerExperimental.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerExperimental.hash(into:));
}

uint64_t sub_256AB446C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerExperimental.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerV2.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMTokenizerV2.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerV2.hash(into:));
}

uint64_t sub_256AB44C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerV2.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerV3.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMTokenizerV3.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerV3.hash(into:));
}

uint64_t sub_256AB4524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerV3.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMTokenizerV4.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMTokenizerV4.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerV4.hash(into:));
}

uint64_t sub_256AB4580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeLMTokenizerV4.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.hash(into:));
}

uint64_t sub_256AB45DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V4hash4intoys6HasherVz_tF_0()
{
  sub_256A7A910();
  uint64_t v2 = v1;
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v7 = v0[11];
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256AB8644(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256AB83F8(v2, v4);
  swift_bridgeObjectRelease();
  sub_256B3FF50();
  sub_256B3FF60();
  sub_256B3FF60();
  sub_256B3FF60();
  swift_bridgeObjectRetain();
  sub_256A97D1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256A97C6C();
  swift_bridgeObjectRelease();
  sub_256B3FF60();
  sub_256B3FF60();
  swift_bridgeObjectRetain();
  sub_256A97AA8(v2, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256A97970();
  sub_256A7A8F4();
  return swift_bridgeObjectRelease();
}

uint64_t Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.hashValue.getter()
{
  return sub_256AA84E4((void (*)(void *))Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.hash(into:));
}

uint64_t sub_256AB47DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA85C0(a1, a2, a3, (void (*)(void *))Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.InstructServerTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.InstructServerTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.InstructServerTokenizer.hash(into:));
}

uint64_t sub_256AB4838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.InstructServerTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.NLRouterTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.NLRouterTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.NLRouterTokenizer.hash(into:));
}

uint64_t sub_256AB4894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.NLRouterTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.hash(into:));
}

uint64_t sub_256AB48F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.hash(into:));
}

uint64_t (*Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.executionContexts.modify())()
{
  return nullsub_1;
}

uint64_t _s12ModelCatalog0B0O9DiffusionO7AdapterO9AnimationV4hash4intoys6HasherVz_tF_0()
{
  sub_256AA01C4();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  sub_256AE25BC();
  uint64_t v5 = v0[9];
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256AB8644(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256AB83F8(v2, v4);
  swift_bridgeObjectRelease();
  sub_256B3FF50();
  sub_256B3FF60();
  sub_256B3FF60();
  sub_256B3FF60();
  swift_bridgeObjectRetain();
  sub_256A97D1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256A97C6C();
  swift_bridgeObjectRelease();
  sub_256B3FF60();
  sub_256B3FF60();
  swift_bridgeObjectRetain();
  sub_256A97AA8(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256A97970();
  sub_256AA019C();
  return swift_bridgeObjectRelease();
}

uint64_t Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.hashValue.getter()
{
  return sub_256AA21F8((void (*)(uint64_t *))Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.hash(into:));
}

uint64_t sub_256AB4AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256AA2260(a1, a2, a3, (void (*)(uint64_t *))Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.hash(into:));
}

void sub_256AB4AC4()
{
  sub_256A39D2C((uint64_t *)&unk_26B2B5D68);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_256B62A00;
  *(void *)(v0 + 56) = &type metadata for Catalog.Diffusion.Adapter.Animation;
  *(void *)(v0 + 64) = sub_256AB88B0();
  *(void *)(v0 + 32) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.Animation.init()();
  *(void *)(v0 + 96) = &type metadata for Catalog.Diffusion.Adapter.Emoji;
  *(void *)(v0 + 104) = sub_256AB8AAC();
  *(void *)(v0 + 72) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.Emoji.init()();
  *(void *)(v0 + 136) = &type metadata for Catalog.Diffusion.Adapter.Illustration;
  *(void *)(v0 + 144) = sub_256AB8CA8();
  *(void *)(v0 + 112) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.Illustration.init()();
  *(void *)(v0 + 176) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedAnimation;
  *(void *)(v0 + 184) = sub_256AB8EA4();
  *(void *)(v0 + 152) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.PersonalizedAnimation.init()();
  *(void *)(v0 + 216) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedEmoji;
  *(void *)(v0 + 224) = sub_256AB90A0();
  *(void *)(v0 + 192) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.PersonalizedEmoji.init()();
  *(void *)(v0 + 256) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedIllustration;
  *(void *)(v0 + 264) = sub_256AB929C();
  *(void *)(v0 + 232) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.PersonalizedIllustration.init()();
  *(void *)(v0 + 296) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedScribble;
  *(void *)(v0 + 304) = sub_256AB9498();
  *(void *)(v0 + 272) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.PersonalizedScribble.init()();
  *(void *)(v0 + 336) = &type metadata for Catalog.Diffusion.Adapter.PersonalizedSketch;
  *(void *)(v0 + 344) = sub_256AB9694();
  *(void *)(v0 + 312) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.PersonalizedSketch.init()();
  *(void *)(v0 + 376) = &type metadata for Catalog.Diffusion.Adapter.Refiner;
  *(void *)(v0 + 384) = sub_256AB9890();
  *(void *)(v0 + 352) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.Refiner.init()();
  *(void *)(v0 + 416) = &type metadata for Catalog.Diffusion.Adapter.Scribble;
  *(void *)(v0 + 424) = sub_256AB9A8C();
  uint64_t v1 = sub_256AE1E0C();
  *(void *)(v0 + 392) = v1;
  Catalog.Diffusion.Adapter.Scribble.init()((void *)(v1 + 16));
  *(void *)(v0 + 456) = &type metadata for Catalog.Diffusion.Adapter.Sketch;
  *(void *)(v0 + 464) = sub_256AB9C88();
  *(void *)(v0 + 432) = sub_256AE1E0C();
  Catalog.Diffusion.Adapter.Sketch.init()();
  *(void *)(v0 + 496) = &type metadata for Catalog.Diffusion.Adapter.SkinToneEmoji;
  *(void *)(v0 + 504) = sub_256AB9E84();
  uint64_t v2 = sub_256AE1E0C();
  *(void *)(v0 + 472) = v2;
  Catalog.Diffusion.Adapter.SkinToneEmoji.init()((void *)(v2 + 16));
  *(void *)(v0 + 536) = &type metadata for Catalog.Diffusion.Model.VisualGenerationBase;
  *(void *)(v0 + 544) = sub_256ABA080();
  *(void *)(v0 + 512) = sub_256AE1E0C();
  Catalog.Diffusion.Model.VisualGenerationBase.init()();
  *(void *)(v0 + 576) = &type metadata for Catalog.DisabledUseCaseList.All;
  *(void *)(v0 + 584) = sub_256ABA208();
  uint64_t v3 = sub_256AE1E0C();
  *(void *)(v0 + 552) = v3;
  Catalog.DisabledUseCaseList.All.init()(v3 + 16);
  *(void *)(v0 + 616) = &type metadata for Catalog.GenerativeFunctionOverrides.All;
  *(void *)(v0 + 624) = sub_256ABA390();
  uint64_t v4 = sub_256AE1E0C();
  *(void *)(v0 + 592) = v4;
  Catalog.GenerativeFunctionOverrides.All.init()(v4 + 16);
  *(void *)(v0 + 656) = &type metadata for Catalog.HandwritingSynthesizer.HandwritingSynthesis;
  *(void *)(v0 + 664) = sub_256ABA518();
  uint64_t v5 = sub_256AE1E0C();
  *(void *)(v0 + 632) = v5;
  Catalog.HandwritingSynthesizer.HandwritingSynthesis.init()(v5 + 16);
  *(void *)(v0 + 696) = &type metadata for Catalog.ImageCuratedPrompts.All;
  *(void *)(v0 + 704) = sub_256ABA6A0();
  uint64_t v6 = sub_256AE1E0C();
  *(void *)(v0 + 672) = v6;
  Catalog.ImageCuratedPrompts.All.init()(v6 + 16);
  *(void *)(v0 + 736) = &type metadata for Catalog.ImageFilter.Conditioning;
  *(void *)(v0 + 744) = sub_256ABA828();
  uint64_t v7 = sub_256AE1E0C();
  *(void *)(v0 + 712) = v7;
  Catalog.ImageFilter.Conditioning.init()(v7 + 16);
  *(void *)(v0 + 776) = &type metadata for Catalog.ImageFilter.Face2Word;
  *(void *)(v0 + 784) = sub_256ABA9B0();
  uint64_t v8 = sub_256AE1E0C();
  *(void *)(v0 + 752) = v8;
  Catalog.ImageFilter.Face2Word.init()(v8 + 16);
  *(void *)(v0 + 816) = &type metadata for Catalog.ImageFilter.HolisticallyNestedEdgeDetector;
  *(void *)(v0 + 824) = sub_256ABAB38();
  uint64_t v9 = sub_256AE1E0C();
  *(void *)(v0 + 792) = v9;
  Catalog.ImageFilter.HolisticallyNestedEdgeDetector.init()(v9 + 16);
  *(void *)(v0 + 856) = &type metadata for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp;
  *(void *)(v0 + 864) = sub_256ABACC0();
  uint64_t v10 = sub_256AE2204();
  *(void *)(v0 + 832) = v10;
  Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp.init()(v10 + 16);
  *(void *)(v0 + 896) = &type metadata for Catalog.ImageScaler.GenerativePlaygroundsUpscaler;
  *(void *)(v0 + 904) = sub_256ABAE48();
  uint64_t v11 = sub_256AE1E0C();
  *(void *)(v0 + 872) = v11;
  Catalog.ImageScaler.GenerativePlaygroundsUpscaler.init()(v11 + 16);
  *(void *)(v0 + 936) = &type metadata for Catalog.LLM.Adapter.ADMPeopleGrounding;
  *(void *)(v0 + 944) = sub_256ABB108();
  *(void *)(v0 + 912) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ADMPeopleGrounding.init()();
  *(void *)(v0 + 976) = &type metadata for Catalog.LLM.Adapter.ADMPromptRewriting;
  *(void *)(v0 + 984) = sub_256ABB378();
  *(void *)(v0 + 952) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ADMPromptRewriting.init()();
  *(void *)(v0 + 1016) = &type metadata for Catalog.LLM.Adapter.AnswerSynthesis;
  *(void *)(v0 + 1024) = sub_256ABB638();
  *(void *)(v0 + 992) = sub_256AE1E7C();
  Catalog.LLM.Adapter.AnswerSynthesis.init()();
  *(void *)(v0 + 1056) = &type metadata for Catalog.LLM.Adapter.AnswerSynthesisServer;
  *(void *)(v0 + 1064) = sub_256ABB8F8();
  uint64_t v12 = sub_256AE1E7C();
  *(void *)(v0 + 1032) = v12;
  Catalog.LLM.Adapter.AnswerSynthesisServer.init()((void *)(v12 + 16));
  *(void *)(v0 + 1096) = &type metadata for Catalog.LLM.Adapter.AutonamingMessages;
  *(void *)(v0 + 1104) = sub_256ABBB68();
  *(void *)(v0 + 1072) = sub_256AE1E7C();
  Catalog.LLM.Adapter.AutonamingMessages.init()();
  *(void *)(v0 + 1136) = &type metadata for Catalog.LLM.Adapter.BaseAdapter;
  *(void *)(v0 + 1144) = sub_256ABBDD8();
  uint64_t v13 = sub_256AE1E7C();
  *(void *)(v0 + 1112) = v13;
  Catalog.LLM.Adapter.BaseAdapter.init()((void *)(v13 + 16));
  *(void *)(v0 + 1176) = &type metadata for Catalog.LLM.Adapter.ConciseTone;
  *(void *)(v0 + 1184) = sub_256ABC048();
  *(void *)(v0 + 1152) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ConciseTone.init()();
  *(void *)(v0 + 1216) = &type metadata for Catalog.LLM.Adapter.FriendlyTone;
  *(void *)(v0 + 1224) = sub_256ABC2B8();
  *(void *)(v0 + 1192) = sub_256AE1E7C();
  Catalog.LLM.Adapter.FriendlyTone.init()();
  *(void *)(v0 + 1256) = &type metadata for Catalog.LLM.Adapter.MagicRewrite;
  *(void *)(v0 + 1264) = sub_256ABC528();
  *(void *)(v0 + 1232) = sub_256AE1E7C();
  Catalog.LLM.Adapter.MagicRewrite.init()();
  *(void *)(v0 + 1296) = &type metadata for Catalog.LLM.Adapter.MailReply;
  *(void *)(v0 + 1304) = sub_256ABC798();
  *(void *)(v0 + 1272) = sub_256AE1E7C();
  Catalog.LLM.Adapter.MailReply.init()();
  *(void *)(v0 + 1336) = &type metadata for Catalog.LLM.Adapter.MessagesReply;
  *(void *)(v0 + 1344) = sub_256ABCA08();
  *(void *)(v0 + 1312) = sub_256AE1E7C();
  Catalog.LLM.Adapter.MessagesReply.init()();
  *(void *)(v0 + 1376) = &type metadata for Catalog.LLM.Adapter.OpenEndedSchema;
  *(void *)(v0 + 1384) = sub_256ABCC78();
  *(void *)(v0 + 1352) = sub_256AE1E7C();
  Catalog.LLM.Adapter.OpenEndedSchema.init()();
  *(void *)(v0 + 1416) = &type metadata for Catalog.LLM.Adapter.OpenEndedTone;
  *(void *)(v0 + 1424) = sub_256ABCEE8();
  *(void *)(v0 + 1392) = sub_256AE1E7C();
  Catalog.LLM.Adapter.OpenEndedTone.init()();
  *(void *)(v0 + 1456) = &type metadata for Catalog.LLM.Adapter.OpenEndedToneQueryResponse;
  *(void *)(v0 + 1464) = sub_256ABD158();
  *(void *)(v0 + 1432) = sub_256AE1E7C();
  Catalog.LLM.Adapter.OpenEndedToneQueryResponse.init()();
  *(void *)(v0 + 1496) = &type metadata for Catalog.LLM.Adapter.PQAVerification;
  *(void *)(v0 + 1504) = sub_256ABD3C8();
  uint64_t v14 = sub_256AE1E7C();
  *(void *)(v0 + 1472) = v14;
  Catalog.LLM.Adapter.PQAVerification.init()((void *)(v14 + 16));
  *(void *)(v0 + 1536) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration;
  *(void *)(v0 + 1544) = sub_256ABD688();
  *(void *)(v0 + 1512) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration.init()();
  *(void *)(v0 + 1576) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2;
  *(void *)(v0 + 1584) = sub_256ABD8F8();
  *(void *)(v0 + 1552) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2.init()();
  *(void *)(v0 + 1616) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits;
  *(void *)(v0 + 1624) = sub_256ABDB68();
  *(void *)(v0 + 1592) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits.init()();
  *(void *)(v0 + 1656) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2;
  *(void *)(v0 + 1664) = sub_256ABDDD8();
  *(void *)(v0 + 1632) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2.init()();
  *(void *)(v0 + 1696) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding;
  *(void *)(v0 + 1704) = sub_256ABE048();
  *(void *)(v0 + 1672) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding.init()();
  *(void *)(v0 + 1736) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2;
  *(void *)(v0 + 1744) = sub_256ABE2B8();
  *(void *)(v0 + 1712) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2.init()();
  *(void *)(v0 + 1776) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV3;
  *(void *)(v0 + 1784) = sub_256ABE528();
  *(void *)(v0 + 1752) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV3.init()();
  *(void *)(v0 + 1816) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller;
  *(void *)(v0 + 1824) = sub_256ABE798();
  *(void *)(v0 + 1792) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller.init()();
  *(void *)(v0 + 1856) = &type metadata for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2;
  *(void *)(v0 + 1864) = sub_256ABEA08();
  *(void *)(v0 + 1832) = sub_256AE1E7C();
  Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2.init()();
  *(void *)(v0 + 1896) = &type metadata for Catalog.LLM.Adapter.Planner;
  *(void *)(v0 + 1904) = sub_256ABEC78();
  *(void *)(v0 + 1872) = sub_256AE1E7C();
  Catalog.LLM.Adapter.Planner.init()();
  *(void *)(v0 + 1936) = &type metadata for Catalog.LLM.Adapter.PlannerV2;
  *(void *)(v0 + 1944) = sub_256ABEEE8();
  uint64_t v15 = sub_256AE1E7C();
  *(void *)(v0 + 1912) = v15;
  Catalog.LLM.Adapter.PlannerV2.init()((void *)(v15 + 16));
  *(void *)(v0 + 1976) = &type metadata for Catalog.LLM.Adapter.PlannerV3;
  *(void *)(v0 + 1984) = sub_256ABF158();
  uint64_t v16 = sub_256AE1E7C();
  *(void *)(v0 + 1952) = v16;
  Catalog.LLM.Adapter.PlannerV3.init()((void *)(v16 + 16));
  *(void *)(v0 + 2016) = &type metadata for Catalog.LLM.Adapter.ProfessionalTone;
  *(void *)(v0 + 2024) = sub_256ABF3C8();
  *(void *)(v0 + 1992) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ProfessionalTone.init()();
  *(void *)(v0 + 2056) = &type metadata for Catalog.LLM.Adapter.ProofreadingReview;
  *(void *)(v0 + 2064) = sub_256ABF638();
  *(void *)(v0 + 2032) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ProofreadingReview.init()();
  *(void *)(v0 + 2096) = &type metadata for Catalog.LLM.Adapter.ResponseGeneration;
  *(void *)(v0 + 2104) = sub_256ABF8A8();
  uint64_t v17 = sub_256AE1E7C();
  *(void *)(v0 + 2072) = v17;
  Catalog.LLM.Adapter.ResponseGeneration.init()((void *)(v17 + 16));
  *(void *)(v0 + 2136) = &type metadata for Catalog.LLM.Adapter.ResponseGenerationV2;
  *(void *)(v0 + 2144) = sub_256ABFB18();
  uint64_t v18 = sub_256AE1E7C();
  *(void *)(v0 + 2112) = v18;
  Catalog.LLM.Adapter.ResponseGenerationV2.init()((void *)(v18 + 16));
  *(void *)(v0 + 2176) = &type metadata for Catalog.LLM.Adapter.ResponseGenerationV3;
  *(void *)(v0 + 2184) = sub_256ABFD88();
  uint64_t v19 = sub_256AE1E7C();
  *(void *)(v0 + 2152) = v19;
  Catalog.LLM.Adapter.ResponseGenerationV3.init()((void *)(v19 + 16));
  *(void *)(v0 + 2216) = &type metadata for Catalog.LLM.Adapter.Safety;
  *(void *)(v0 + 2224) = sub_256ABFFF8();
  *(void *)(v0 + 2192) = sub_256AE1E7C();
  Catalog.LLM.Adapter.Safety.init()();
  *(void *)(v0 + 2256) = &type metadata for Catalog.LLM.Adapter.SafetyGuardrail;
  *(void *)(v0 + 2264) = sub_256AC0268();
  *(void *)(v0 + 2232) = sub_256AE1E7C();
  Catalog.LLM.Adapter.SafetyGuardrail.init()();
  *(void *)(v0 + 2296) = &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice;
  *(void *)(v0 + 2304) = sub_256AC04D8();
  *(void *)(v0 + 2272) = sub_256AE1E7C();
  Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice.init()();
  *(void *)(v0 + 2336) = &type metadata for Catalog.LLM.Adapter.SearchQueryUnderstandingServer;
  *(void *)(v0 + 2344) = sub_256AC0748();
  *(void *)(v0 + 2312) = sub_256AE1E7C();
  Catalog.LLM.Adapter.SearchQueryUnderstandingServer.init()();
  *(void *)(v0 + 2376) = &type metadata for Catalog.LLM.Adapter.ServerBulletsTransform;
  *(void *)(v0 + 2384) = sub_256AC09B8();
  *(void *)(v0 + 2352) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerBulletsTransform.init()();
  *(void *)(v0 + 2416) = &type metadata for Catalog.LLM.Adapter.ServerConciseTone;
  *(void *)(v0 + 2424) = sub_256AC0C28();
  uint64_t v20 = sub_256AE1E7C();
  *(void *)(v0 + 2392) = v20;
  Catalog.LLM.Adapter.ServerConciseTone.init()((void *)(v20 + 16));
  *(void *)(v0 + 2456) = &type metadata for Catalog.LLM.Adapter.ServerFriendlyTone;
  *(void *)(v0 + 2464) = sub_256AC0E98();
  *(void *)(v0 + 2432) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerFriendlyTone.init()();
  *(void *)(v0 + 2496) = &type metadata for Catalog.LLM.Adapter.ServerMagicRewrite;
  *(void *)(v0 + 2504) = sub_256AC1108();
  *(void *)(v0 + 2472) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerMagicRewrite.init()();
  *(void *)(v0 + 2536) = &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic;
  *(void *)(v0 + 2544) = sub_256AC1378();
  *(void *)(v0 + 2512) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerMailReplyLongFormBasic.init()();
  *(void *)(v0 + 2576) = &type metadata for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite;
  *(void *)(v0 + 2584) = sub_256AC15E8();
  *(void *)(v0 + 2552) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite.init()();
  *(void *)(v0 + 2616) = &type metadata for Catalog.LLM.Adapter.ServerMailReplyQA;
  *(void *)(v0 + 2624) = sub_256AC1858();
  *(void *)(v0 + 2592) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerMailReplyQA.init()();
  *(void *)(v0 + 2656) = &type metadata for Catalog.LLM.Adapter.ServerProfessionalTone;
  *(void *)(v0 + 2664) = sub_256AC1AC8();
  *(void *)(v0 + 2632) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerProfessionalTone.init()();
  *(void *)(v0 + 2696) = &type metadata for Catalog.LLM.Adapter.ServerProofreadingReview;
  *(void *)(v0 + 2704) = sub_256AC1D38();
  *(void *)(v0 + 2672) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerProofreadingReview.init()();
  *(void *)(v0 + 2736) = &type metadata for Catalog.LLM.Adapter.ServerTablesTransform;
  *(void *)(v0 + 2744) = sub_256AC1FA8();
  uint64_t v21 = sub_256AE1E7C();
  *(void *)(v0 + 2712) = v21;
  Catalog.LLM.Adapter.ServerTablesTransform.init()((void *)(v21 + 16));
  *(void *)(v0 + 2776) = &type metadata for Catalog.LLM.Adapter.ServerTakeawaysTransform;
  *(void *)(v0 + 2784) = sub_256AC2218();
  *(void *)(v0 + 2752) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerTakeawaysTransform.init()();
  *(void *)(v0 + 2816) = &type metadata for Catalog.LLM.Adapter.ServerTextSummarizer;
  *(void *)(v0 + 2824) = sub_256AC2488();
  *(void *)(v0 + 2792) = sub_256AE1E7C();
  Catalog.LLM.Adapter.ServerTextSummarizer.init()();
  *(void *)(v0 + 2856) = &type metadata for Catalog.LLM.Adapter.Summarization;
  *(void *)(v0 + 2864) = sub_256AC26F8();
  *(void *)(v0 + 2832) = sub_256AE1E7C();
  Catalog.LLM.Adapter.Summarization.init()();
  *(void *)(v0 + 2896) = &type metadata for Catalog.LLM.Adapter.TextEventExtraction;
  *(void *)(v0 + 2904) = sub_256AC2968();
  *(void *)(v0 + 2872) = sub_256AE1E7C();
  Catalog.LLM.Adapter.TextEventExtraction.init()();
  *(void *)(v0 + 2936) = &type metadata for Catalog.LLM.Adapter.TextPersonExtraction;
  *(void *)(v0 + 2944) = sub_256AC2BD8();
  *(void *)(v0 + 2912) = sub_256AE1E7C();
  Catalog.LLM.Adapter.TextPersonExtraction.init()();
  *(void *)(v0 + 2976) = &type metadata for Catalog.LLM.Adapter.UIPreviews;
  *(void *)(v0 + 2984) = sub_256AC2E48();
  *(void *)(v0 + 2952) = swift_allocObject();
  Catalog.LLM.Adapter.UIPreviews.init()();
  *(void *)(v0 + 3016) = &type metadata for Catalog.LLM.Adapter.UrgencyClassification;
  *(void *)(v0 + 3024) = sub_256AC30B8();
  *(void *)(v0 + 2992) = sub_256AE1E7C();
  Catalog.LLM.Adapter.UrgencyClassification.init()();
  *(void *)(v0 + 3056) = &type metadata for Catalog.LLM.DraftModel.AnswerSynthesis;
  *(void *)(v0 + 3064) = sub_256AC32B4();
  *(void *)(v0 + 3032) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.AnswerSynthesis.init()();
  *(void *)(v0 + 3096) = &type metadata for Catalog.LLM.DraftModel.AnswerSynthesisServer;
  *(void *)(v0 + 3104) = sub_256AC34B0();
  uint64_t v22 = sub_256AE1E0C();
  *(void *)(v0 + 3072) = v22;
  Catalog.LLM.DraftModel.AnswerSynthesisServer.init()(v22 + 16);
  *(void *)(v0 + 3136) = &type metadata for Catalog.LLM.DraftModel.AutonamingMessages;
  *(void *)(v0 + 3144) = sub_256AC36AC();
  uint64_t v23 = sub_256AE1E0C();
  *(void *)(v0 + 3112) = v23;
  Catalog.LLM.DraftModel.AutonamingMessages.init()((void *)(v23 + 16));
  *(void *)(v0 + 3176) = &type metadata for Catalog.LLM.DraftModel.CodeLM;
  *(void *)(v0 + 3184) = sub_256AC38A8();
  *(void *)(v0 + 3152) = sub_256AE2204();
  Catalog.LLM.DraftModel.CodeLM.init()();
  *(void *)(v0 + 3216) = &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV1;
  *(void *)(v0 + 3224) = sub_256AC3AA4();
  *(void *)(v0 + 3192) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.CodeLMLargeV1.init()();
  *(void *)(v0 + 3256) = &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV2;
  *(void *)(v0 + 3264) = sub_256AC3CA0();
  *(void *)(v0 + 3232) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.CodeLMLargeV2.init()();
  *(void *)(v0 + 3296) = &type metadata for Catalog.LLM.DraftModel.CodeLMLargeV3;
  *(void *)(v0 + 3304) = sub_256AC3E9C();
  *(void *)(v0 + 3272) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.CodeLMLargeV3.init()();
  *(void *)(v0 + 3336) = &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV1;
  *(void *)(v0 + 3344) = sub_256AC4098();
  *(void *)(v0 + 3312) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.CodeLMSmallV1.init()();
  *(void *)(v0 + 3376) = &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV2;
  *(void *)(v0 + 3384) = sub_256AC4294();
  *(void *)(v0 + 3352) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.CodeLMSmallV2.init()();
  *(void *)(v0 + 3416) = &type metadata for Catalog.LLM.DraftModel.CodeLMSmallV3;
  *(void *)(v0 + 3424) = sub_256AC4490();
  *(void *)(v0 + 3392) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.CodeLMSmallV3.init()();
  *(void *)(v0 + 3456) = &type metadata for Catalog.LLM.DraftModel.CodeLMV1ANE3B;
  *(void *)(v0 + 3464) = sub_256AC468C();
  uint64_t v24 = sub_256AE2204();
  *(void *)(v0 + 3432) = v24;
  Catalog.LLM.DraftModel.CodeLMV1ANE3B.init()((void *)(v24 + 16));
  *(void *)(v0 + 3496) = &type metadata for Catalog.LLM.DraftModel.ConciseTone;
  *(void *)(v0 + 3504) = sub_256AC4888();
  uint64_t v25 = sub_256AE1E0C();
  *(void *)(v0 + 3472) = v25;
  Catalog.LLM.DraftModel.ConciseTone.init()((void *)(v25 + 16));
  *(void *)(v0 + 3536) = &type metadata for Catalog.LLM.DraftModel.FriendlyTone;
  *(void *)(v0 + 3544) = sub_256AC4A84();
  *(void *)(v0 + 3512) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.FriendlyTone.init()();
  *(void *)(v0 + 3576) = &type metadata for Catalog.LLM.DraftModel.MagicRewrite;
  *(void *)(v0 + 3584) = sub_256AC4C80();
  *(void *)(v0 + 3552) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.MagicRewrite.init()();
  *(void *)(v0 + 3616) = &type metadata for Catalog.LLM.DraftModel.MailReply;
  *(void *)(v0 + 3624) = sub_256AC4E7C();
  *(void *)(v0 + 3592) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.MailReply.init()();
  *(void *)(v0 + 3656) = &type metadata for Catalog.LLM.DraftModel.MessagesReply;
  *(void *)(v0 + 3664) = sub_256AC5078();
  *(void *)(v0 + 3632) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.MessagesReply.init()();
  *(void *)(v0 + 3696) = &type metadata for Catalog.LLM.DraftModel.OpenEndedSchema;
  *(void *)(v0 + 3704) = sub_256AC5274();
  *(void *)(v0 + 3672) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.OpenEndedSchema.init()();
  *(void *)(v0 + 3736) = &type metadata for Catalog.LLM.DraftModel.OpenEndedTone;
  *(void *)(v0 + 3744) = sub_256AC5470();
  *(void *)(v0 + 3712) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.OpenEndedTone.init()();
  *(void *)(v0 + 3776) = &type metadata for Catalog.LLM.DraftModel.OpenEndedToneQueryResponse;
  *(void *)(v0 + 3784) = sub_256AC566C();
  *(void *)(v0 + 3752) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.OpenEndedToneQueryResponse.init()();
  *(void *)(v0 + 3816) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration;
  *(void *)(v0 + 3824) = sub_256AC5868();
  *(void *)(v0 + 3792) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration.init()();
  *(void *)(v0 + 3856) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2;
  *(void *)(v0 + 3864) = sub_256AC5A64();
  *(void *)(v0 + 3832) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2.init()();
  *(void *)(v0 + 3896) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits;
  *(void *)(v0 + 3904) = sub_256AC5C60();
  *(void *)(v0 + 3872) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits.init()();
  *(void *)(v0 + 3936) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2;
  *(void *)(v0 + 3944) = sub_256AC5E5C();
  *(void *)(v0 + 3912) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2.init()();
  *(void *)(v0 + 3976) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding;
  *(void *)(v0 + 3984) = sub_256AC6058();
  *(void *)(v0 + 3952) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding.init()();
  *(void *)(v0 + 4016) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2;
  *(void *)(v0 + 4024) = sub_256AC6254();
  uint64_t v26 = sub_256AE1E0C();
  *(void *)(v0 + 3992) = v26;
  Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2.init()((void *)(v26 + 16));
  *(void *)(v0 + 4056) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV3;
  *(void *)(v0 + 4064) = sub_256AC6450();
  uint64_t v27 = sub_256AE1E0C();
  *(void *)(v0 + 4032) = v27;
  Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV3.init()((void *)(v27 + 16));
  *(void *)(v0 + 4096) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller;
  *(void *)(v0 + 4104) = sub_256AC664C();
  *(void *)(v0 + 4072) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller.init()();
  *(void *)(v0 + 4136) = &type metadata for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2;
  *(void *)(v0 + 4144) = sub_256AC6848();
  *(void *)(v0 + 4112) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2.init()();
  *(void *)(v0 + 4176) = &type metadata for Catalog.LLM.DraftModel.Planner;
  *(void *)(v0 + 4184) = sub_256AC6A44();
  *(void *)(v0 + 4152) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.Planner.init()();
  *(void *)(v0 + 4216) = &type metadata for Catalog.LLM.DraftModel.PlannerV2;
  *(void *)(v0 + 4224) = sub_256AC6C40();
  uint64_t v28 = sub_256AE1E0C();
  *(void *)(v0 + 4192) = v28;
  Catalog.LLM.DraftModel.PlannerV2.init()((void *)(v28 + 16));
  *(void *)(v0 + 4256) = &type metadata for Catalog.LLM.DraftModel.PlannerV3;
  *(void *)(v0 + 4264) = sub_256AC6E3C();
  uint64_t v29 = sub_256AE1E0C();
  *(void *)(v0 + 4232) = v29;
  Catalog.LLM.DraftModel.PlannerV3.init()((void *)(v29 + 16));
  *(void *)(v0 + 4296) = &type metadata for Catalog.LLM.DraftModel.ProfessionalTone;
  *(void *)(v0 + 4304) = sub_256AC7038();
  *(void *)(v0 + 4272) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ProfessionalTone.init()();
  *(void *)(v0 + 4336) = &type metadata for Catalog.LLM.DraftModel.ProofreadingReview;
  *(void *)(v0 + 4344) = sub_256AC7234();
  uint64_t v30 = sub_256AE1E0C();
  *(void *)(v0 + 4312) = v30;
  Catalog.LLM.DraftModel.ProofreadingReview.init()((void *)(v30 + 16));
  *(void *)(v0 + 4376) = &type metadata for Catalog.LLM.DraftModel.ResponseGeneration;
  *(void *)(v0 + 4384) = sub_256AC7430();
  uint64_t v31 = sub_256AE1E0C();
  *(void *)(v0 + 4352) = v31;
  Catalog.LLM.DraftModel.ResponseGeneration.init()((void *)(v31 + 16));
  *(void *)(v0 + 4416) = &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV2;
  *(void *)(v0 + 4424) = sub_256AC762C();
  *(void *)(v0 + 4392) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ResponseGenerationV2.init()();
  *(void *)(v0 + 4456) = &type metadata for Catalog.LLM.DraftModel.ResponseGenerationV3;
  *(void *)(v0 + 4464) = sub_256AC7828();
  uint64_t v32 = sub_256AE1E0C();
  *(void *)(v0 + 4432) = v32;
  Catalog.LLM.DraftModel.ResponseGenerationV3.init()((void *)(v32 + 16));
  *(void *)(v0 + 4496) = &type metadata for Catalog.LLM.DraftModel.SafetyGuardrail;
  *(void *)(v0 + 4504) = sub_256AC7A24();
  *(void *)(v0 + 4472) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.SafetyGuardrail.init()();
  *(void *)(v0 + 4536) = &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice;
  *(void *)(v0 + 4544) = sub_256AC7C20();
  *(void *)(v0 + 4512) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice.init()();
  *(void *)(v0 + 4576) = &type metadata for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer;
  *(void *)(v0 + 4584) = sub_256AC7E1C();
  uint64_t v33 = sub_256AE1E0C();
  *(void *)(v0 + 4552) = v33;
  Catalog.LLM.DraftModel.SearchQueryUnderstandingServer.init()(v33 + 16);
  *(void *)(v0 + 4616) = &type metadata for Catalog.LLM.DraftModel.ServerBulletsTransform;
  *(void *)(v0 + 4624) = sub_256AC8018();
  *(void *)(v0 + 4592) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerBulletsTransform.init()();
  *(void *)(v0 + 4656) = &type metadata for Catalog.LLM.DraftModel.ServerConciseTone;
  *(void *)(v0 + 4664) = sub_256AC8214();
  uint64_t v34 = sub_256AE1E0C();
  *(void *)(v0 + 4632) = v34;
  Catalog.LLM.DraftModel.ServerConciseTone.init()((void *)(v34 + 16));
  *(void *)(v0 + 4696) = &type metadata for Catalog.LLM.DraftModel.ServerFriendlyTone;
  *(void *)(v0 + 4704) = sub_256AC8410();
  *(void *)(v0 + 4672) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerFriendlyTone.init()();
  *(void *)(v0 + 4736) = &type metadata for Catalog.LLM.DraftModel.ServerMagicRewrite;
  *(void *)(v0 + 4744) = sub_256AC860C();
  *(void *)(v0 + 4712) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerMagicRewrite.init()();
  *(void *)(v0 + 4776) = &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic;
  *(void *)(v0 + 4784) = sub_256AC8808();
  *(void *)(v0 + 4752) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic.init()();
  *(void *)(v0 + 4816) = &type metadata for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite;
  *(void *)(v0 + 4824) = sub_256AC8A04();
  *(void *)(v0 + 4792) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite.init()();
  *(void *)(v0 + 4856) = &type metadata for Catalog.LLM.DraftModel.ServerMailReplyQA;
  *(void *)(v0 + 4864) = sub_256AC8C00();
  *(void *)(v0 + 4832) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerMailReplyQA.init()();
  *(void *)(v0 + 4896) = &type metadata for Catalog.LLM.DraftModel.ServerProfessionalTone;
  *(void *)(v0 + 4904) = sub_256AC8DFC();
  *(void *)(v0 + 4872) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerProfessionalTone.init()();
  *(void *)(v0 + 4936) = &type metadata for Catalog.LLM.DraftModel.ServerProofreadingReview;
  *(void *)(v0 + 4944) = sub_256AC8FF8();
  *(void *)(v0 + 4912) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerProofreadingReview.init()();
  *(void *)(v0 + 4976) = &type metadata for Catalog.LLM.DraftModel.ServerTablesTransform;
  *(void *)(v0 + 4984) = sub_256AC91F4();
  uint64_t v35 = sub_256AE1E0C();
  *(void *)(v0 + 4952) = v35;
  Catalog.LLM.DraftModel.ServerTablesTransform.init()((void *)(v35 + 16));
  *(void *)(v0 + 5016) = &type metadata for Catalog.LLM.DraftModel.ServerTakeawaysTransform;
  *(void *)(v0 + 5024) = sub_256AC93F0();
  *(void *)(v0 + 4992) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.ServerTakeawaysTransform.init()();
  *(void *)(v0 + 5056) = &type metadata for Catalog.LLM.DraftModel.ServerTextSummarizer;
  *(void *)(v0 + 5064) = sub_256AC95EC();
  uint64_t v36 = sub_256AE1E0C();
  *(void *)(v0 + 5032) = v36;
  Catalog.LLM.DraftModel.ServerTextSummarizer.init()(v36 + 16);
  *(void *)(v0 + 5096) = &type metadata for Catalog.LLM.DraftModel.Summarization;
  *(void *)(v0 + 5104) = sub_256AC97E8();
  *(void *)(v0 + 5072) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.Summarization.init()();
  *(void *)(v0 + 5136) = &type metadata for Catalog.LLM.DraftModel.TextEventExtraction;
  *(void *)(v0 + 5144) = sub_256AC99E4();
  *(void *)(v0 + 5112) = sub_256AE1E0C();
  Catalog.LLM.DraftModel.TextEventExtraction.init()();
  *(void *)(v0 + 5176) = &type metadata for Catalog.LLM.DraftModel.TextPersonExtraction;
  *(void *)(v0 + 5184) = sub_256AC9BE0();
  uint64_t v37 = sub_256AE1E0C();
  *(void *)(v0 + 5152) = v37;
  Catalog.LLM.DraftModel.TextPersonExtraction.init()((void *)(v37 + 16));
  *(void *)(v0 + 5216) = &type metadata for Catalog.LLM.DraftModel.UIPreviews;
  *(void *)(v0 + 5224) = sub_256AC9DDC();
  *(void *)(v0 + 5192) = sub_256AE2204();
  Catalog.LLM.DraftModel.UIPreviews.init()();
  *(void *)(v0 + 5256) = &type metadata for Catalog.LLM.DraftModel.UrgencyClassification;
  *(void *)(v0 + 5264) = sub_256AC9FD8();
  uint64_t v38 = sub_256AE1E0C();
  *(void *)(v0 + 5232) = v38;
  Catalog.LLM.DraftModel.UrgencyClassification.init()((void *)(v38 + 16));
  *(void *)(v0 + 5296) = &type metadata for Catalog.LLM.Model.AFMTextInstruct300MBase;
  *(void *)(v0 + 5304) = sub_256ACA24C();
  *(void *)(v0 + 5272) = sub_256A52528();
  Catalog.LLM.Model.AFMTextInstruct300MBase.init()();
  *(void *)(v0 + 5336) = &type metadata for Catalog.LLM.Model.AFMTextInstruct3BBase;
  *(void *)(v0 + 5344) = sub_256ACA4C0();
  *(void *)(v0 + 5312) = sub_256A52528();
  Catalog.LLM.Model.AFMTextInstruct3BBase.init()();
  *(void *)(v0 + 5376) = &type metadata for Catalog.LLM.Model.ChatGPT;
  *(void *)(v0 + 5384) = sub_256ACA780();
  uint64_t v39 = sub_256A52528();
  *(void *)(v0 + 5352) = v39;
  Catalog.LLM.Model.ChatGPT.init()((void *)(v39 + 16));
  *(void *)(v0 + 5416) = &type metadata for Catalog.LLM.Model.CodeLM;
  *(void *)(v0 + 5424) = sub_256ACAA40();
  *(void *)(v0 + 5392) = sub_256AE2420();
  Catalog.LLM.Model.CodeLM.init()();
  *(void *)(v0 + 5456) = &type metadata for Catalog.LLM.Model.CodeLMExperimental;
  *(void *)(v0 + 5464) = sub_256ACAD00();
  uint64_t v40 = sub_256AE2420();
  *(void *)(v0 + 5432) = v40;
  Catalog.LLM.Model.CodeLMExperimental.init()((void *)(v40 + 16));
  *(void *)(v0 + 5496) = &type metadata for Catalog.LLM.Model.CodeLMLargeV1;
  *(void *)(v0 + 5504) = sub_256ACAFC0();
  uint64_t v41 = sub_256A52528();
  *(void *)(v0 + 5472) = v41;
  Catalog.LLM.Model.CodeLMLargeV1.init()(v41 + 16);
  *(void *)(v0 + 5536) = &type metadata for Catalog.LLM.Model.CodeLMLargeV2;
  *(void *)(v0 + 5544) = sub_256ACB280();
  uint64_t v42 = sub_256A52528();
  *(void *)(v0 + 5512) = v42;
  Catalog.LLM.Model.CodeLMLargeV2.init()(v42 + 16);
  *(void *)(v0 + 5576) = &type metadata for Catalog.LLM.Model.CodeLMLargeV3;
  *(void *)(v0 + 5584) = sub_256ACB540();
  uint64_t v43 = sub_256A52528();
  *(void *)(v0 + 5552) = v43;
  Catalog.LLM.Model.CodeLMLargeV3.init()(v43 + 16);
  *(void *)(v0 + 5616) = &type metadata for Catalog.LLM.Model.CodeLMSafetyGuardrail;
  *(void *)(v0 + 5624) = sub_256ACB800();
  *(void *)(v0 + 5592) = sub_256A52528();
  Catalog.LLM.Model.CodeLMSafetyGuardrail.init()();
  *(void *)(v0 + 5656) = &type metadata for Catalog.LLM.Model.CodeLMSmallV1;
  *(void *)(v0 + 5664) = sub_256ACBAC0();
  uint64_t v44 = sub_256A52528();
  *(void *)(v0 + 5632) = v44;
  Catalog.LLM.Model.CodeLMSmallV1.init()(v44 + 16);
  *(void *)(v0 + 5696) = &type metadata for Catalog.LLM.Model.CodeLMSmallV2;
  *(void *)(v0 + 5704) = sub_256ACBD80();
  uint64_t v45 = sub_256A52528();
  *(void *)(v0 + 5672) = v45;
  Catalog.LLM.Model.CodeLMSmallV2.init()(v45 + 16);
  *(void *)(v0 + 5736) = &type metadata for Catalog.LLM.Model.CodeLMSmallV3;
  *(void *)(v0 + 5744) = sub_256ACC040();
  uint64_t v46 = sub_256A52528();
  *(void *)(v0 + 5712) = v46;
  Catalog.LLM.Model.CodeLMSmallV3.init()(v46 + 16);
  *(void *)(v0 + 5776) = &type metadata for Catalog.LLM.Model.CodeLMV1ANE3B;
  *(void *)(v0 + 5784) = sub_256ACC300();
  uint64_t v47 = sub_256AE2420();
  *(void *)(v0 + 5752) = v47;
  Catalog.LLM.Model.CodeLMV1ANE3B.init()((void *)(v47 + 16));
  *(void *)(v0 + 5816) = &type metadata for Catalog.LLM.Model.CodeLMV2;
  *(void *)(v0 + 5824) = sub_256ACC5C0();
  *(void *)(v0 + 5792) = sub_256AE2420();
  Catalog.LLM.Model.CodeLMV2.init()();
  *(void *)(v0 + 5856) = &type metadata for Catalog.LLM.Model.CodeLMV3;
  *(void *)(v0 + 5864) = sub_256ACC880();
  *(void *)(v0 + 5832) = sub_256AE2420();
  Catalog.LLM.Model.CodeLMV3.init()();
  *(void *)(v0 + 5896) = &type metadata for Catalog.LLM.Model.CodeLMV4;
  *(void *)(v0 + 5904) = sub_256ACCB40();
  *(void *)(v0 + 5872) = sub_256AE2420();
  Catalog.LLM.Model.CodeLMV4.init()();
  *(void *)(v0 + 5936) = &type metadata for Catalog.LLM.Model.CodeSafetyGuardrail;
  *(void *)(v0 + 5944) = sub_256ACCE00();
  uint64_t v48 = sub_256AE2420();
  *(void *)(v0 + 5912) = v48;
  Catalog.LLM.Model.CodeSafetyGuardrail.init()(v48 + 16);
  *(void *)(v0 + 5976) = &type metadata for Catalog.LLM.Model.InstructServerBase;
  *(void *)(v0 + 5984) = sub_256ACD074();
  *(void *)(v0 + 5952) = sub_256A52528();
  Catalog.LLM.Model.InstructServerBase.init()();
  *(void *)(v0 + 6016) = &type metadata for Catalog.LLM.Model.NLRouterBase;
  *(void *)(v0 + 6024) = sub_256ACD334();
  *(void *)(v0 + 5992) = sub_256A52528();
  Catalog.LLM.Model.NLRouterBase.init()();
  *(void *)(v0 + 6056) = &type metadata for Catalog.LLM.Model.PQAVerificationBase;
  *(void *)(v0 + 6064) = sub_256ACD5A4();
  *(void *)(v0 + 6032) = sub_256A52528();
  Catalog.LLM.Model.PQAVerificationBase.init()();
  *(void *)(v0 + 6096) = &type metadata for Catalog.LLM.Model.PhotosMemoriesCreationBase;
  *(void *)(v0 + 6104) = sub_256ACD7C8();
  uint64_t v49 = sub_256A52528();
  *(void *)(v0 + 6072) = v49;
  Catalog.LLM.Model.PhotosMemoriesCreationBase.init()((void *)(v49 + 16));
  *(void *)(v0 + 6136) = &type metadata for Catalog.LLM.Model.SafetyGuardrailLite;
  *(void *)(v0 + 6144) = sub_256ACDA88();
  *(void *)(v0 + 6112) = sub_256A52528();
  Catalog.LLM.Model.SafetyGuardrailLite.init()();
  *(void *)(v0 + 6176) = &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase;
  *(void *)(v0 + 6184) = sub_256ACDCF8();
  uint64_t v50 = sub_256A52528();
  *(void *)(v0 + 6152) = v50;
  Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase.init()((void *)(v50 + 16));
  *(void *)(v0 + 6216) = &type metadata for Catalog.LLM.Model.SummarizationTextSummarizerBase;
  *(void *)(v0 + 6224) = sub_256ACDF68();
  *(void *)(v0 + 6192) = sub_256A52528();
  Catalog.LLM.Model.SummarizationTextSummarizerBase.init()();
  *(void *)(v0 + 6256) = &type metadata for Catalog.LLM.Model.VisualGenerationQueryHandlingLite;
  *(void *)(v0 + 6264) = sub_256ACE228();
  *(void *)(v0 + 6232) = sub_256A52528();
  Catalog.LLM.Model.VisualGenerationQueryHandlingLite.init()();
  *(void *)(v0 + 6296) = &type metadata for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer;
  *(void *)(v0 + 6304) = sub_256ACE3B0();
  uint64_t v51 = sub_256AE1E0C();
  *(void *)(v0 + 6272) = v51;
  Catalog.LLM.ServerConfiguration.AnswerSynthesisServer.init()(v51 + 16);
  *(void *)(v0 + 6336) = &type metadata for Catalog.LLM.ServerConfiguration.InstructServerBase;
  *(void *)(v0 + 6344) = sub_256ACE538();
  uint64_t v52 = sub_256AE1E0C();
  *(void *)(v0 + 6312) = v52;
  Catalog.LLM.ServerConfiguration.InstructServerBase.init()(v52 + 16);
  *(void *)(v0 + 6376) = &type metadata for Catalog.LLM.ServerConfiguration.NLRouterBase;
  *(void *)(v0 + 6384) = sub_256ACE6C0();
  uint64_t v53 = sub_256AE1E0C();
  *(void *)(v0 + 6352) = v53;
  Catalog.LLM.ServerConfiguration.NLRouterBase.init()(v53 + 16);
  *(void *)(v0 + 6416) = &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedSchema;
  *(void *)(v0 + 6424) = sub_256ACE848();
  uint64_t v54 = sub_256AE1E0C();
  *(void *)(v0 + 6392) = v54;
  Catalog.LLM.ServerConfiguration.OpenEndedSchema.init()(v54 + 16);
  *(void *)(v0 + 6456) = &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedTone;
  *(void *)(v0 + 6464) = sub_256ACE9D0();
  uint64_t v55 = sub_256AE1E0C();
  *(void *)(v0 + 6432) = v55;
  Catalog.LLM.ServerConfiguration.OpenEndedTone.init()(v55 + 16);
  *(void *)(v0 + 6496) = &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedToneBase;
  *(void *)(v0 + 6504) = sub_256ACEB58();
  uint64_t v56 = sub_256AE1E0C();
  *(void *)(v0 + 6472) = v56;
  Catalog.LLM.ServerConfiguration.OpenEndedToneBase.init()(v56 + 16);
  *(void *)(v0 + 6536) = &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedToneQueryResponse;
  *(void *)(v0 + 6544) = sub_256ACECE0();
  uint64_t v57 = sub_256AE1E0C();
  *(void *)(v0 + 6512) = v57;
  Catalog.LLM.ServerConfiguration.OpenEndedToneQueryResponse.init()(v57 + 16);
  *(void *)(v0 + 6576) = &type metadata for Catalog.LLM.ServerConfiguration.OpenEndedToneV2;
  *(void *)(v0 + 6584) = sub_256ACEE68();
  uint64_t v58 = sub_256AE1E0C();
  *(void *)(v0 + 6552) = v58;
  Catalog.LLM.ServerConfiguration.OpenEndedToneV2.init()(v58 + 16);
  *(void *)(v0 + 6616) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration;
  *(void *)(v0 + 6624) = sub_256ACEFF0();
  uint64_t v59 = sub_256AE1E0C();
  *(void *)(v0 + 6592) = v59;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration.init()(v59 + 16);
  *(void *)(v0 + 6656) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2;
  *(void *)(v0 + 6664) = sub_256ACF178();
  uint64_t v60 = sub_256AE1E0C();
  *(void *)(v0 + 6632) = v60;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2.init()(v60 + 16);
  *(void *)(v0 + 6696) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase;
  *(void *)(v0 + 6704) = sub_256ACF300();
  uint64_t v61 = sub_256AE1E0C();
  *(void *)(v0 + 6672) = v61;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase.init()(v61 + 16);
  *(void *)(v0 + 6736) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits;
  *(void *)(v0 + 6744) = sub_256ACF488();
  uint64_t v62 = sub_256AE1E0C();
  *(void *)(v0 + 6712) = v62;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits.init()(v62 + 16);
  *(void *)(v0 + 6776) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2;
  *(void *)(v0 + 6784) = sub_256ACF610();
  uint64_t v63 = sub_256AE1E0C();
  *(void *)(v0 + 6752) = v63;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2.init()(v63 + 16);
  *(void *)(v0 + 6816) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding;
  *(void *)(v0 + 6824) = sub_256ACF798();
  uint64_t v64 = sub_256AE1E0C();
  *(void *)(v0 + 6792) = v64;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding.init()(v64 + 16);
  *(void *)(v0 + 6856) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2;
  *(void *)(v0 + 6864) = sub_256ACF920();
  uint64_t v65 = sub_256AE1E0C();
  *(void *)(v0 + 6832) = v65;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2.init()(v65 + 16);
  *(void *)(v0 + 6896) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV3;
  *(void *)(v0 + 6904) = sub_256ACFAA8();
  uint64_t v66 = sub_256AE1E0C();
  *(void *)(v0 + 6872) = v66;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV3.init()(v66 + 16);
  *(void *)(v0 + 6936) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller;
  *(void *)(v0 + 6944) = sub_256ACFC30();
  uint64_t v67 = sub_256AE1E0C();
  *(void *)(v0 + 6912) = v67;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller.init()(v67 + 16);
  *(void *)(v0 + 6976) = &type metadata for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2;
  *(void *)(v0 + 6984) = sub_256ACFDB8();
  uint64_t v68 = sub_256AE1E0C();
  *(void *)(v0 + 6952) = v68;
  Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2.init()(v68 + 16);
  *(void *)(v0 + 7016) = &type metadata for Catalog.LLM.ServerConfiguration.Planner;
  *(void *)(v0 + 7024) = sub_256ACFF40();
  uint64_t v69 = sub_256AE1E0C();
  *(void *)(v0 + 6992) = v69;
  Catalog.LLM.ServerConfiguration.Planner.init()(v69 + 16);
  *(void *)(v0 + 7056) = &type metadata for Catalog.LLM.ServerConfiguration.PlannerV2;
  *(void *)(v0 + 7064) = sub_256AD00C8();
  uint64_t v70 = sub_256AE1E0C();
  *(void *)(v0 + 7032) = v70;
  Catalog.LLM.ServerConfiguration.PlannerV2.init()(v70 + 16);
  *(void *)(v0 + 7096) = &type metadata for Catalog.LLM.ServerConfiguration.PlannerV3;
  *(void *)(v0 + 7104) = sub_256AD0250();
  uint64_t v71 = sub_256AE1E0C();
  *(void *)(v0 + 7072) = v71;
  Catalog.LLM.ServerConfiguration.PlannerV3.init()(v71 + 16);
  *(void *)(v0 + 7136) = &type metadata for Catalog.LLM.ServerConfiguration.PrivateCloudResearchAdapter;
  *(void *)(v0 + 7144) = sub_256AD03D8();
  uint64_t v72 = sub_256AE1E0C();
  *(void *)(v0 + 7112) = v72;
  Catalog.LLM.ServerConfiguration.PrivateCloudResearchAdapter.init()(v72 + 16);
  *(void *)(v0 + 7176) = &type metadata for Catalog.LLM.ServerConfiguration.ResponseGeneration;
  *(void *)(v0 + 7184) = sub_256AD0560();
  uint64_t v73 = sub_256AE1E0C();
  *(void *)(v0 + 7152) = v73;
  Catalog.LLM.ServerConfiguration.ResponseGeneration.init()(v73 + 16);
  *(void *)(v0 + 7216) = &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV2;
  *(void *)(v0 + 7224) = sub_256AD06E8();
  uint64_t v74 = sub_256AE1E0C();
  *(void *)(v0 + 7192) = v74;
  Catalog.LLM.ServerConfiguration.ResponseGenerationV2.init()(v74 + 16);
  *(void *)(v0 + 7256) = &type metadata for Catalog.LLM.ServerConfiguration.ResponseGenerationV3;
  *(void *)(v0 + 7264) = sub_256AD0870();
  uint64_t v75 = sub_256AE1E0C();
  *(void *)(v0 + 7232) = v75;
  Catalog.LLM.ServerConfiguration.ResponseGenerationV3.init()(v75 + 16);
  *(void *)(v0 + 7296) = &type metadata for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer;
  *(void *)(v0 + 7304) = sub_256AD09F8();
  uint64_t v76 = sub_256AE1E0C();
  *(void *)(v0 + 7272) = v76;
  Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer.init()(v76 + 16);
  *(void *)(v0 + 7336) = &type metadata for Catalog.LLM.ServerConfiguration.ServerBulletsTransform;
  *(void *)(v0 + 7344) = sub_256AD0B80();
  uint64_t v77 = sub_256AE1E0C();
  *(void *)(v0 + 7312) = v77;
  Catalog.LLM.ServerConfiguration.ServerBulletsTransform.init()(v77 + 16);
  *(void *)(v0 + 7376) = &type metadata for Catalog.LLM.ServerConfiguration.ServerConciseTone;
  *(void *)(v0 + 7384) = sub_256AD0D08();
  uint64_t v78 = sub_256AE1E0C();
  *(void *)(v0 + 7352) = v78;
  Catalog.LLM.ServerConfiguration.ServerConciseTone.init()(v78 + 16);
  *(void *)(v0 + 7416) = &type metadata for Catalog.LLM.ServerConfiguration.ServerFriendlyTone;
  *(void *)(v0 + 7424) = sub_256AD0E90();
  uint64_t v79 = sub_256AE1E0C();
  *(void *)(v0 + 7392) = v79;
  Catalog.LLM.ServerConfiguration.ServerFriendlyTone.init()(v79 + 16);
  *(void *)(v0 + 7456) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMagicRewrite;
  *(void *)(v0 + 7464) = sub_256AD1018();
  uint64_t v80 = sub_256AE1E0C();
  *(void *)(v0 + 7432) = v80;
  Catalog.LLM.ServerConfiguration.ServerMagicRewrite.init()(v80 + 16);
  *(void *)(v0 + 7496) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic;
  *(void *)(v0 + 7504) = sub_256AD11A0();
  uint64_t v81 = sub_256AE1E0C();
  *(void *)(v0 + 7472) = v81;
  Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic.init()(v81 + 16);
  *(void *)(v0 + 7536) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite;
  *(void *)(v0 + 7544) = sub_256AD1328();
  uint64_t v82 = sub_256AE1E0C();
  *(void *)(v0 + 7512) = v82;
  Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite.init()(v82 + 16);
  *(void *)(v0 + 7576) = &type metadata for Catalog.LLM.ServerConfiguration.ServerMailReplyQA;
  *(void *)(v0 + 7584) = sub_256AD14B0();
  uint64_t v83 = sub_256AE1E0C();
  *(void *)(v0 + 7552) = v83;
  Catalog.LLM.ServerConfiguration.ServerMailReplyQA.init()(v83 + 16);
  *(void *)(v0 + 7616) = &type metadata for Catalog.LLM.ServerConfiguration.ServerProfessionalTone;
  *(void *)(v0 + 7624) = sub_256AD1638();
  uint64_t v84 = sub_256AE1E0C();
  *(void *)(v0 + 7592) = v84;
  Catalog.LLM.ServerConfiguration.ServerProfessionalTone.init()(v84 + 16);
  *(void *)(v0 + 7656) = &type metadata for Catalog.LLM.ServerConfiguration.ServerProofreadingReview;
  *(void *)(v0 + 7664) = sub_256AD17C0();
  uint64_t v85 = sub_256AE1E0C();
  *(void *)(v0 + 7632) = v85;
  Catalog.LLM.ServerConfiguration.ServerProofreadingReview.init()(v85 + 16);
  *(void *)(v0 + 7696) = &type metadata for Catalog.LLM.ServerConfiguration.ServerTablesTransform;
  *(void *)(v0 + 7704) = sub_256AD1948();
  uint64_t v86 = sub_256AE1E0C();
  *(void *)(v0 + 7672) = v86;
  Catalog.LLM.ServerConfiguration.ServerTablesTransform.init()(v86 + 16);
  *(void *)(v0 + 7736) = &type metadata for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform;
  *(void *)(v0 + 7744) = sub_256AD1AD0();
  uint64_t v87 = sub_256AE1E0C();
  *(void *)(v0 + 7712) = v87;
  Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform.init()(v87 + 16);
  *(void *)(v0 + 7776) = &type metadata for Catalog.LLM.ServerConfiguration.ServerTextSummarizer;
  *(void *)(v0 + 7784) = sub_256AD1C58();
  uint64_t v88 = sub_256AE1E0C();
  *(void *)(v0 + 7752) = v88;
  Catalog.LLM.ServerConfiguration.ServerTextSummarizer.init()(v88 + 16);
  *(void *)(v0 + 7816) = &type metadata for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase;
  *(void *)(v0 + 7824) = sub_256AD1DE0();
  uint64_t v89 = sub_256AE1E0C();
  *(void *)(v0 + 7792) = v89;
  Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase.init()(v89 + 16);
  *(void *)(v0 + 7856) = &type metadata for Catalog.LLM.ServerConfiguration.VisualIntelligence;
  *(void *)(v0 + 7864) = sub_256AD1F68();
  uint64_t v90 = sub_256AE1E0C();
  *(void *)(v0 + 7832) = v90;
  Catalog.LLM.ServerConfiguration.VisualIntelligence.init()(v90 + 16);
  *(void *)(v0 + 7896) = &type metadata for Catalog.ModelConfigurationReplacement.All;
  *(void *)(v0 + 7904) = sub_256AD20F0();
  uint64_t v91 = sub_256AE1E0C();
  *(void *)(v0 + 7872) = v91;
  Catalog.ModelConfigurationReplacement.All.init()(v91 + 16);
  *(void *)(v0 + 7936) = &type metadata for Catalog.Sanitizer.TextModerationLM;
  *(void *)(v0 + 7944) = sub_256AD22EC();
  *(void *)(v0 + 7912) = sub_256AE1E0C();
  Catalog.Sanitizer.TextModerationLM.init()();
  *(void *)(v0 + 7976) = &type metadata for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList;
  *(void *)(v0 + 7984) = sub_256AD2474();
  uint64_t v92 = sub_256AE2204();
  *(void *)(v0 + 7952) = v92;
  Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList.init()(v92 + 16);
  *(void *)(v0 + 8016) = &type metadata for Catalog.TokenInputDenyList.GenerativeAssistantCompositionInputDenyList;
  *(void *)(v0 + 8024) = sub_256AD25FC();
  uint64_t v93 = sub_256AE1E0C();
  *(void *)(v0 + 7992) = v93;
  Catalog.TokenInputDenyList.GenerativeAssistantCompositionInputDenyList.init()(v93 + 16);
  *(void *)(v0 + 8056) = &type metadata for Catalog.TokenInputDenyList.GenerativeAssistantKnowledgeFallbackInputDenyList;
  *(void *)(v0 + 8064) = sub_256AD2784();
  uint64_t v94 = sub_256AE1E0C();
  *(void *)(v0 + 8032) = v94;
  Catalog.TokenInputDenyList.GenerativeAssistantKnowledgeFallbackInputDenyList.init()(v94 + 16);
  *(void *)(v0 + 8096) = &type metadata for Catalog.TokenInputDenyList.GenerativeAssistantKnowledgeInputDenyList;
  *(void *)(v0 + 8104) = sub_256AD290C();
  uint64_t v95 = sub_256AE1E0C();
  *(void *)(v0 + 8072) = v95;
  Catalog.TokenInputDenyList.GenerativeAssistantKnowledgeInputDenyList.init()(v95 + 16);
  *(void *)(v0 + 8136) = &type metadata for Catalog.TokenInputDenyList.GenerativeAssistantMediaQAInputDenyList;
  *(void *)(v0 + 8144) = sub_256AD2A94();
  uint64_t v96 = sub_256AE1E0C();
  *(void *)(v0 + 8112) = v96;
  Catalog.TokenInputDenyList.GenerativeAssistantMediaQAInputDenyList.init()(v96 + 16);
  *(void *)(v0 + 8176) = &type metadata for Catalog.TokenInputDenyList.GenerativeAssistantVisualIntelligenceCameraInputDenyList;
  *(void *)(v0 + 8184) = sub_256AD2C1C();
  uint64_t v97 = sub_256AE1E0C();
  *(void *)(v0 + 8152) = v97;
  Catalog.TokenInputDenyList.GenerativeAssistantVisualIntelligenceCameraInputDenyList.init()(v97 + 16);
  *(void *)(v0 + 8216) = &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList;
  *(void *)(v0 + 8224) = sub_256AD2DA4();
  uint64_t v98 = sub_256AE1E0C();
  *(void *)(v0 + 0x2000) = v98;
  Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList.init()(v98 + 16);
  *(void *)(v0 + 8256) = &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList;
  *(void *)(v0 + 8264) = sub_256AD2F2C();
  uint64_t v99 = sub_256AE1E0C();
  *(void *)(v0 + 8232) = v99;
  Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList.init()(v99 + 16);
  *(void *)(v0 + 8296) = &type metadata for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList;
  *(void *)(v0 + 8304) = sub_256AD30B4();
  uint64_t v100 = sub_256AE1E0C();
  *(void *)(v0 + 8272) = v100;
  Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList.init()(v100 + 16);
  *(void *)(v0 + 8336) = &type metadata for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList;
  *(void *)(v0 + 8344) = sub_256AD323C();
  uint64_t v101 = sub_256AE1E0C();
  *(void *)(v0 + 8312) = v101;
  Catalog.TokenInputDenyList.MailReplySnippetInputDenyList.init()(v101 + 16);
  *(void *)(v0 + 8376) = &type metadata for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList;
  *(void *)(v0 + 8384) = sub_256AD33C4();
  uint64_t v102 = sub_256AE1E0C();
  *(void *)(v0 + 8352) = v102;
  Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList.init()(v102 + 16);
  *(void *)(v0 + 8416) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList;
  *(void *)(v0 + 8424) = sub_256AD354C();
  uint64_t v103 = sub_256AE1E0C();
  *(void *)(v0 + 8392) = v103;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList.init()(v103 + 16);
  *(void *)(v0 + 8456) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList;
  *(void *)(v0 + 8464) = sub_256AD36D4();
  uint64_t v104 = sub_256AE1E0C();
  *(void *)(v0 + 8432) = v104;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList.init()(v104 + 16);
  *(void *)(v0 + 8496) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList;
  *(void *)(v0 + 8504) = sub_256AD385C();
  uint64_t v105 = sub_256AE1E0C();
  *(void *)(v0 + 8472) = v105;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList.init()(v105 + 16);
  *(void *)(v0 + 8536) = &type metadata for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList;
  *(void *)(v0 + 8544) = sub_256AD39E4();
  uint64_t v106 = sub_256AE1E0C();
  *(void *)(v0 + 8512) = v106;
  Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList.init()(v106 + 16);
  *(void *)(v0 + 8576) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList;
  *(void *)(v0 + 8584) = sub_256AD3B6C();
  uint64_t v107 = sub_256AE1E0C();
  *(void *)(v0 + 8552) = v107;
  Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList.init()(v107 + 16);
  *(void *)(v0 + 8616) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList;
  *(void *)(v0 + 8624) = sub_256AD3CF4();
  uint64_t v108 = sub_256AE1E0C();
  *(void *)(v0 + 8592) = v108;
  Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList.init()(v108 + 16);
  *(void *)(v0 + 8656) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryOnDemandInputDenyList;
  *(void *)(v0 + 8664) = sub_256AD3E7C();
  uint64_t v109 = sub_256AE1E0C();
  *(void *)(v0 + 8632) = v109;
  Catalog.TokenInputDenyList.SummarizationKitCUSummaryOnDemandInputDenyList.init()(v109 + 16);
  *(void *)(v0 + 8696) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUSummaryProactiveInputDenyList;
  *(void *)(v0 + 8704) = sub_256AD4004();
  uint64_t v110 = sub_256AE1E0C();
  *(void *)(v0 + 8672) = v110;
  Catalog.TokenInputDenyList.SummarizationKitCUSummaryProactiveInputDenyList.init()(v110 + 16);
  *(void *)(v0 + 8736) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList;
  *(void *)(v0 + 8744) = sub_256AD418C();
  uint64_t v111 = sub_256AE1E0C();
  *(void *)(v0 + 8712) = v111;
  Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList.init()(v111 + 16);
  *(void *)(v0 + 8776) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList;
  *(void *)(v0 + 8784) = sub_256AD4314();
  uint64_t v112 = sub_256AE1E0C();
  *(void *)(v0 + 8752) = v112;
  Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList.init()(v112 + 16);
  *(void *)(v0 + 8816) = &type metadata for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList;
  *(void *)(v0 + 8824) = sub_256AD449C();
  uint64_t v113 = sub_256AE1E0C();
  *(void *)(v0 + 8792) = v113;
  Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList.init()(v113 + 16);
  *(void *)(v0 + 8856) = &type metadata for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList;
  *(void *)(v0 + 8864) = sub_256AD4624();
  uint64_t v114 = sub_256AE1E0C();
  *(void *)(v0 + 8832) = v114;
  Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList.init()(v114 + 16);
  *(void *)(v0 + 8896) = &type metadata for Catalog.TokenInputDenyList.VisualIntelligenceInputDenyList;
  *(void *)(v0 + 8904) = sub_256AD47AC();
  uint64_t v115 = sub_256AE1E0C();
  *(void *)(v0 + 8872) = v115;
  Catalog.TokenInputDenyList.VisualIntelligenceInputDenyList.init()(v115 + 16);
  *(void *)(v0 + 8936) = &type metadata for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList;
  *(void *)(v0 + 8944) = sub_256AD4934();
  uint64_t v116 = sub_256AE1E0C();
  *(void *)(v0 + 8912) = v116;
  Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList.init()(v116 + 16);
  *(void *)(v0 + 8976) = &type metadata for Catalog.TokenInputDenyList.WritingToolsComposeInputDenyList;
  *(void *)(v0 + 8984) = sub_256AD4ABC();
  uint64_t v117 = sub_256AE1E0C();
  *(void *)(v0 + 8952) = v117;
  Catalog.TokenInputDenyList.WritingToolsComposeInputDenyList.init()(v117 + 16);
  *(void *)(v0 + 9016) = &type metadata for Catalog.TokenInputDenyList.WritingToolsComposeRecentsSummariesInputDenyList;
  *(void *)(v0 + 9024) = sub_256AD4C44();
  uint64_t v118 = sub_256AE1E0C();
  *(void *)(v0 + 8992) = v118;
  Catalog.TokenInputDenyList.WritingToolsComposeRecentsSummariesInputDenyList.init()(v118 + 16);
  *(void *)(v0 + 9056) = &type metadata for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList;
  *(void *)(v0 + 9064) = sub_256AD4DCC();
  uint64_t v119 = sub_256AE1E0C();
  *(void *)(v0 + 9032) = v119;
  Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList.init()(v119 + 16);
  *(void *)(v0 + 9096) = &type metadata for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList;
  *(void *)(v0 + 9104) = sub_256AD4F54();
  uint64_t v120 = sub_256AE1E0C();
  *(void *)(v0 + 9072) = v120;
  Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList.init()(v120 + 16);
  *(void *)(v0 + 9136) = &type metadata for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList;
  *(void *)(v0 + 9144) = sub_256AD50DC();
  uint64_t v121 = sub_256AE1E0C();
  *(void *)(v0 + 9112) = v121;
  Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList.init()(v121 + 16);
  *(void *)(v0 + 9176) = &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedSchemaInputDenyList;
  *(void *)(v0 + 9184) = sub_256AD5264();
  uint64_t v122 = sub_256AE1E0C();
  *(void *)(v0 + 9152) = v122;
  Catalog.TokenInputDenyList.WritingToolsOpenEndedSchemaInputDenyList.init()(v122 + 16);
  *(void *)(v0 + 9216) = &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneBaseInputDenyList;
  *(void *)(v0 + 9224) = sub_256AD53EC();
  uint64_t v123 = sub_256AE1E0C();
  *(void *)(v0 + 9192) = v123;
  Catalog.TokenInputDenyList.WritingToolsOpenEndedToneBaseInputDenyList.init()(v123 + 16);
  *(void *)(v0 + 9256) = &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList;
  *(void *)(v0 + 9264) = sub_256AD5574();
  uint64_t v124 = sub_256AE1E0C();
  *(void *)(v0 + 9232) = v124;
  Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList.init()(v124 + 16);
  *(void *)(v0 + 9296) = &type metadata for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneQueryResponseInputDenyList;
  *(void *)(v0 + 9304) = sub_256AD56FC();
  uint64_t v125 = sub_256AE1E0C();
  *(void *)(v0 + 9272) = v125;
  Catalog.TokenInputDenyList.WritingToolsOpenEndedToneQueryResponseInputDenyList.init()(v125 + 16);
  *(void *)(v0 + 9336) = &type metadata for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList;
  *(void *)(v0 + 9344) = sub_256AD5884();
  uint64_t v126 = sub_256AE1E0C();
  *(void *)(v0 + 9312) = v126;
  Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList.init()(v126 + 16);
  *(void *)(v0 + 9376) = &type metadata for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList;
  *(void *)(v0 + 9384) = sub_256AD5A0C();
  uint64_t v127 = sub_256AE1E0C();
  *(void *)(v0 + 9352) = v127;
  Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList.init()(v127 + 16);
  *(void *)(v0 + 9416) = &type metadata for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList;
  *(void *)(v0 + 9424) = sub_256AD5B94();
  uint64_t v128 = sub_256AE1E0C();
  *(void *)(v0 + 9392) = v128;
  Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList.init()(v128 + 16);
  *(void *)(v0 + 9456) = &type metadata for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList;
  *(void *)(v0 + 9464) = sub_256AD5D1C();
  uint64_t v129 = sub_256AE1E0C();
  *(void *)(v0 + 9432) = v129;
  Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList.init()(v129 + 16);
  *(void *)(v0 + 9496) = &type metadata for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList;
  *(void *)(v0 + 9504) = sub_256AD5EA4();
  uint64_t v130 = sub_256AE2204();
  *(void *)(v0 + 9472) = v130;
  Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList.init()(v130 + 16);
  *(void *)(v0 + 9536) = &type metadata for Catalog.TokenOutputDenyList.GenerativeAssistantCompositionOutputDenyList;
  *(void *)(v0 + 9544) = sub_256AD602C();
  uint64_t v131 = sub_256AE1E0C();
  *(void *)(v0 + 9512) = v131;
  Catalog.TokenOutputDenyList.GenerativeAssistantCompositionOutputDenyList.init()(v131 + 16);
  *(void *)(v0 + 9576) = &type metadata for Catalog.TokenOutputDenyList.GenerativeAssistantKnowledgeFallbackOutputDenyList;
  *(void *)(v0 + 9584) = sub_256AD61B4();
  uint64_t v132 = sub_256AE1E0C();
  *(void *)(v0 + 9552) = v132;
  Catalog.TokenOutputDenyList.GenerativeAssistantKnowledgeFallbackOutputDenyList.init()(v132 + 16);
  *(void *)(v0 + 9616) = &type metadata for Catalog.TokenOutputDenyList.GenerativeAssistantKnowledgeOutputDenyList;
  *(void *)(v0 + 9624) = sub_256AD633C();
  uint64_t v133 = sub_256AE1E0C();
  *(void *)(v0 + 9592) = v133;
  Catalog.TokenOutputDenyList.GenerativeAssistantKnowledgeOutputDenyList.init()(v133 + 16);
  *(void *)(v0 + 9656) = &type metadata for Catalog.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList;
  *(void *)(v0 + 9664) = sub_256AD64C4();
  uint64_t v134 = sub_256AE1E0C();
  *(void *)(v0 + 9632) = v134;
  Catalog.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList.init()(v134 + 16);
  *(void *)(v0 + 9696) = &type metadata for Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList;
  *(void *)(v0 + 9704) = sub_256AD664C();
  uint64_t v135 = sub_256AE1E0C();
  *(void *)(v0 + 9672) = v135;
  Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList.init()(v135 + 16);
  *(void *)(v0 + 9736) = &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList;
  *(void *)(v0 + 9744) = sub_256AD67D4();
  uint64_t v136 = sub_256AE1E0C();
  *(void *)(v0 + 9712) = v136;
  Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList.init()(v136 + 16);
  *(void *)(v0 + 9776) = &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList;
  *(void *)(v0 + 9784) = sub_256AD695C();
  uint64_t v137 = sub_256AE1E0C();
  *(void *)(v0 + 9752) = v137;
  Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList.init()(v137 + 16);
  *(void *)(v0 + 9816) = &type metadata for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList;
  *(void *)(v0 + 9824) = sub_256AD6AE4();
  uint64_t v138 = sub_256AE1E0C();
  *(void *)(v0 + 9792) = v138;
  Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList.init()(v138 + 16);
  *(void *)(v0 + 9856) = &type metadata for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList;
  *(void *)(v0 + 9864) = sub_256AD6C6C();
  uint64_t v139 = sub_256AE1E0C();
  *(void *)(v0 + 9832) = v139;
  Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList.init()(v139 + 16);
  *(void *)(v0 + 9896) = &type metadata for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList;
  *(void *)(v0 + 9904) = sub_256AD6DF4();
  uint64_t v140 = sub_256AE1E0C();
  *(void *)(v0 + 9872) = v140;
  Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList.init()(v140 + 16);
  *(void *)(v0 + 9936) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList;
  *(void *)(v0 + 9944) = sub_256AD6F7C();
  uint64_t v141 = sub_256AE1E0C();
  *(void *)(v0 + 9912) = v141;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList.init()(v141 + 16);
  *(void *)(v0 + 9976) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList;
  *(void *)(v0 + 9984) = sub_256AD7104();
  uint64_t v142 = sub_256AE1E0C();
  *(void *)(v0 + 9952) = v142;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList.init()(v142 + 16);
  *(void *)(v0 + 10016) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList;
  *(void *)(v0 + 10024) = sub_256AD728C();
  uint64_t v143 = sub_256AE1E0C();
  *(void *)(v0 + 9992) = v143;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList.init()(v143 + 16);
  *(void *)(v0 + 10056) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList;
  *(void *)(v0 + 10064) = sub_256AD7414();
  uint64_t v144 = sub_256AE1E0C();
  *(void *)(v0 + 10032) = v144;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList.init()(v144 + 16);
  *(void *)(v0 + 10096) = &type metadata for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList;
  *(void *)(v0 + 10104) = sub_256AD759C();
  uint64_t v145 = sub_256AE1E0C();
  *(void *)(v0 + 10072) = v145;
  Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList.init()(v145 + 16);
  *(void *)(v0 + 10136) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList;
  *(void *)(v0 + 10144) = sub_256AD7724();
  uint64_t v146 = sub_256AE1E0C();
  *(void *)(v0 + 10112) = v146;
  Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList.init()(v146 + 16);
  *(void *)(v0 + 10176) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList;
  *(void *)(v0 + 10184) = sub_256AD78AC();
  uint64_t v147 = sub_256AE1E0C();
  *(void *)(v0 + 10152) = v147;
  Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList.init()(v147 + 16);
  *(void *)(v0 + 10216) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList;
  *(void *)(v0 + 10224) = sub_256AD7A34();
  uint64_t v148 = sub_256AE1E0C();
  *(void *)(v0 + 10192) = v148;
  Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList.init()(v148 + 16);
  *(void *)(v0 + 10256) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList;
  *(void *)(v0 + 10264) = sub_256AD7BBC();
  uint64_t v149 = sub_256AE1E0C();
  *(void *)(v0 + 10232) = v149;
  Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList.init()(v149 + 16);
  *(void *)(v0 + 10296) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList;
  *(void *)(v0 + 10304) = sub_256AD7D44();
  uint64_t v150 = sub_256AE1E0C();
  *(void *)(v0 + 10272) = v150;
  Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList.init()(v150 + 16);
  *(void *)(v0 + 10336) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList;
  *(void *)(v0 + 10344) = sub_256AD7ECC();
  uint64_t v151 = sub_256AE1E0C();
  *(void *)(v0 + 10312) = v151;
  Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList.init()(v151 + 16);
  *(void *)(v0 + 10376) = &type metadata for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList;
  *(void *)(v0 + 10384) = sub_256AD8054();
  uint64_t v152 = sub_256AE1E0C();
  *(void *)(v0 + 10352) = v152;
  Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList.init()(v152 + 16);
  *(void *)(v0 + 10416) = &type metadata for Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList;
  *(void *)(v0 + 10424) = sub_256AD81DC();
  uint64_t v153 = sub_256AE1E0C();
  *(void *)(v0 + 10392) = v153;
  Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList.init()(v153 + 16);
  *(void *)(v0 + 10456) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList;
  *(void *)(v0 + 10464) = sub_256AD8364();
  uint64_t v154 = sub_256AE1E0C();
  *(void *)(v0 + 10432) = v154;
  Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList.init()(v154 + 16);
  *(void *)(v0 + 10496) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList;
  *(void *)(v0 + 10504) = sub_256AD84EC();
  uint64_t v155 = sub_256AE1E0C();
  *(void *)(v0 + 10472) = v155;
  Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList.init()(v155 + 16);
  *(void *)(v0 + 10536) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList;
  *(void *)(v0 + 10544) = sub_256AD8674();
  uint64_t v156 = sub_256AE1E0C();
  *(void *)(v0 + 10512) = v156;
  Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList.init()(v156 + 16);
  *(void *)(v0 + 10576) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList;
  *(void *)(v0 + 10584) = sub_256AD87FC();
  uint64_t v157 = sub_256AE1E0C();
  *(void *)(v0 + 10552) = v157;
  Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList.init()(v157 + 16);
  *(void *)(v0 + 10616) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList;
  *(void *)(v0 + 10624) = sub_256AD8984();
  uint64_t v158 = sub_256AE1E0C();
  *(void *)(v0 + 10592) = v158;
  Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList.init()(v158 + 16);
  *(void *)(v0 + 10656) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList;
  *(void *)(v0 + 10664) = sub_256AD8B0C();
  uint64_t v159 = sub_256AE1E0C();
  *(void *)(v0 + 10632) = v159;
  Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList.init()(v159 + 16);
  *(void *)(v0 + 10696) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList;
  *(void *)(v0 + 10704) = sub_256AD8C94();
  uint64_t v160 = sub_256AE1E0C();
  *(void *)(v0 + 10672) = v160;
  Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList.init()(v160 + 16);
  *(void *)(v0 + 10736) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList;
  *(void *)(v0 + 10744) = sub_256AD8E1C();
  uint64_t v161 = sub_256AE1E0C();
  *(void *)(v0 + 10712) = v161;
  Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList.init()(v161 + 16);
  *(void *)(v0 + 10776) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList;
  *(void *)(v0 + 10784) = sub_256AD8FA4();
  uint64_t v162 = sub_256AE1E0C();
  *(void *)(v0 + 10752) = v162;
  Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList.init()(v162 + 16);
  *(void *)(v0 + 10816) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList;
  *(void *)(v0 + 10824) = sub_256AD912C();
  uint64_t v163 = sub_256AE1E0C();
  *(void *)(v0 + 10792) = v163;
  Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList.init()(v163 + 16);
  *(void *)(v0 + 10856) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList;
  *(void *)(v0 + 10864) = sub_256AD92B4();
  uint64_t v164 = sub_256AE1E0C();
  *(void *)(v0 + 10832) = v164;
  Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList.init()(v164 + 16);
  *(void *)(v0 + 10896) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList;
  *(void *)(v0 + 10904) = sub_256AD943C();
  uint64_t v165 = sub_256AE1E0C();
  *(void *)(v0 + 10872) = v165;
  Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList.init()(v165 + 16);
  *(void *)(v0 + 10936) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList;
  *(void *)(v0 + 10944) = sub_256AD95C4();
  uint64_t v166 = sub_256AE1E0C();
  *(void *)(v0 + 10912) = v166;
  Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList.init()(v166 + 16);
  *(void *)(v0 + 10976) = &type metadata for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList;
  *(void *)(v0 + 10984) = sub_256AD974C();
  uint64_t v167 = sub_256AE1E0C();
  *(void *)(v0 + 10952) = v167;
  Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList.init()(v167 + 16);
  *(void *)(v0 + 11016) = &type metadata for Catalog.Tokenizer.AFMTextInstruct300MTokenizer;
  *(void *)(v0 + 11024) = sub_256AD98FC();
  uint64_t v168 = sub_256AE1E0C();
  *(void *)(v0 + 10992) = v168;
  Catalog.Tokenizer.AFMTextInstruct300MTokenizer.init()(v168 + 16);
  *(void *)(v0 + 11056) = &type metadata for Catalog.Tokenizer.AFMTextInstructEnglish49k;
  *(void *)(v0 + 11064) = sub_256AD9AAC();
  *(void *)(v0 + 11032) = sub_256AE1E0C();
  Catalog.Tokenizer.AFMTextInstructEnglish49k.init()();
  *(void *)(v0 + 11096) = &type metadata for Catalog.Tokenizer.ChatGPTTokenizer;
  *(void *)(v0 + 11104) = sub_256AD9C5C();
  uint64_t v169 = sub_256AE1E0C();
  *(void *)(v0 + 11072) = v169;
  Catalog.Tokenizer.ChatGPTTokenizer.init()((void *)(v169 + 16));
  *(void *)(v0 + 11136) = &type metadata for Catalog.Tokenizer.CodeLMLargeV1Tokenizer;
  *(void *)(v0 + 11144) = sub_256AD9E0C();
  uint64_t v170 = sub_256AE1E0C();
  *(void *)(v0 + 11112) = v170;
  Catalog.Tokenizer.CodeLMLargeV1Tokenizer.init()(v170 + 16);
  *(void *)(v0 + 11176) = &type metadata for Catalog.Tokenizer.CodeLMLargeV2Tokenizer;
  *(void *)(v0 + 11184) = sub_256AD9FBC();
  uint64_t v171 = sub_256AE1E0C();
  *(void *)(v0 + 11152) = v171;
  Catalog.Tokenizer.CodeLMLargeV2Tokenizer.init()(v171 + 16);
  *(void *)(v0 + 11216) = &type metadata for Catalog.Tokenizer.CodeLMLargeV3Tokenizer;
  *(void *)(v0 + 11224) = sub_256ADA16C();
  uint64_t v172 = sub_256AE1E0C();
  *(void *)(v0 + 11192) = v172;
  Catalog.Tokenizer.CodeLMLargeV3Tokenizer.init()(v172 + 16);
  *(void *)(v0 + 11256) = &type metadata for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer;
  *(void *)(v0 + 11264) = sub_256ADA31C();
  *(void *)(v0 + 11232) = sub_256AE1E0C();
  Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer.init()();
  *(void *)(v0 + 11296) = &type metadata for Catalog.Tokenizer.CodeLMSmallV1Tokenizer;
  *(void *)(v0 + 11304) = sub_256ADA4CC();
  uint64_t v173 = sub_256AE1E0C();
  *(void *)(v0 + 11272) = v173;
  Catalog.Tokenizer.CodeLMSmallV1Tokenizer.init()(v173 + 16);
  *(void *)(v0 + 11336) = &type metadata for Catalog.Tokenizer.CodeLMSmallV2Tokenizer;
  *(void *)(v0 + 11344) = sub_256ADA67C();
  uint64_t v174 = sub_256AE1E0C();
  *(void *)(v0 + 11312) = v174;
  Catalog.Tokenizer.CodeLMSmallV2Tokenizer.init()(v174 + 16);
  *(void *)(v0 + 11376) = &type metadata for Catalog.Tokenizer.CodeLMSmallV3Tokenizer;
  *(void *)(v0 + 11384) = sub_256ADA82C();
  uint64_t v175 = sub_256AE1E0C();
  *(void *)(v0 + 11352) = v175;
  Catalog.Tokenizer.CodeLMSmallV3Tokenizer.init()(v175 + 16);
  *(void *)(v0 + 11416) = &type metadata for Catalog.Tokenizer.CodeLMTokenizer;
  *(void *)(v0 + 11424) = sub_256ADA9DC();
  uint64_t v176 = sub_256AE2204();
  *(void *)(v0 + 11392) = v176;
  Catalog.Tokenizer.CodeLMTokenizer.init()((void *)(v176 + 16));
  *(void *)(v0 + 11456) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerExperimental;
  *(void *)(v0 + 11464) = sub_256ADAB8C();
  *(void *)(v0 + 11432) = sub_256AE2204();
  Catalog.Tokenizer.CodeLMTokenizerExperimental.init()();
  *(void *)(v0 + 11496) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerV2;
  *(void *)(v0 + 11504) = sub_256ADAD3C();
  *(void *)(v0 + 11472) = sub_256AE2204();
  Catalog.Tokenizer.CodeLMTokenizerV2.init()();
  *(void *)(v0 + 11536) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerV3;
  *(void *)(v0 + 11544) = sub_256ADAEEC();
  *(void *)(v0 + 11512) = sub_256AE2204();
  Catalog.Tokenizer.CodeLMTokenizerV3.init()();
  *(void *)(v0 + 11576) = &type metadata for Catalog.Tokenizer.CodeLMTokenizerV4;
  *(void *)(v0 + 11584) = sub_256ADB09C();
  *(void *)(v0 + 11552) = sub_256AE2204();
  Catalog.Tokenizer.CodeLMTokenizerV4.init()();
  *(void *)(v0 + 11616) = &type metadata for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer;
  *(void *)(v0 + 11624) = sub_256ADB24C();
  uint64_t v177 = sub_256AE2204();
  *(void *)(v0 + 11592) = v177;
  Catalog.Tokenizer.CodeLMV1ANE3BTokenizer.init()((void *)(v177 + 16));
  *(void *)(v0 + 11656) = &type metadata for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer;
  *(void *)(v0 + 11664) = sub_256ADB3FC();
  *(void *)(v0 + 11632) = sub_256AE2204();
  Catalog.Tokenizer.CodeSafetyGuardrailTokenizer.init()();
  *(void *)(v0 + 11696) = &type metadata for Catalog.Tokenizer.InstructServerTokenizer;
  *(void *)(v0 + 11704) = sub_256ADB5AC();
  *(void *)(v0 + 11672) = sub_256AE1E0C();
  Catalog.Tokenizer.InstructServerTokenizer.init()();
  *(void *)(v0 + 11736) = &type metadata for Catalog.Tokenizer.NLRouterTokenizer;
  *(void *)(v0 + 11744) = sub_256ADB75C();
  *(void *)(v0 + 11712) = sub_256AE1E0C();
  Catalog.Tokenizer.NLRouterTokenizer.init()();
  *(void *)(v0 + 11776) = &type metadata for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer;
  *(void *)(v0 + 11784) = sub_256ADB90C();
  *(void *)(v0 + 11752) = sub_256AE1E0C();
  Catalog.Tokenizer.SafetyGuardrailLiteTokenizer.init()();
  *(void *)(v0 + 11816) = &type metadata for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer;
  *(void *)(v0 + 11824) = sub_256ADBABC();
  *(void *)(v0 + 11792) = sub_256AE1E0C();
  Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer.init()();
  off_26B2B30C0 = (_UNKNOWN *)v0;
}

uint64_t static Catalog.resources.getter()
{
  if (qword_26B2B33A0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_256AB7E28(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_46;
  }
  sub_256A39D2C(&qword_26B2B33D8);
  uint64_t result = sub_256B3FB60();
  uint64_t v3 = result;
  uint64_t v39 = *(void *)(v1 + 16);
  if (!v39) {
    goto LABEL_46;
  }
  unint64_t v4 = 0;
  uint64_t v49 = result + 56;
  uint64_t v37 = v1;
  uint64_t v38 = v1 + 32;
  uint64_t v36 = result;
  while (1)
  {
    if (v4 >= *(void *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v5 = (uint64_t *)(v38 + 40 * v4);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    int v8 = *((unsigned __int8 *)v5 + 16);
    int v43 = *((unsigned __int8 *)v5 + 33);
    int v44 = *((unsigned __int8 *)v5 + 32);
    int v9 = *((unsigned __int8 *)v5 + 34);
    int v10 = *((unsigned __int16 *)v5 + 16);
    uint64_t v45 = v5[3];
    int v46 = *((unsigned __int8 *)v5 + 35);
    sub_256B3FF40();
    swift_bridgeObjectRetain_n();
    uint64_t v50 = v7;
    uint64_t v51 = v6;
    sub_256B3F740();
    int v48 = v8;
    if (v8 != 2) {
      sub_256B3FF60();
    }
    int v11 = v10 | (v9 << 16);
    sub_256B3FF60();
    swift_bridgeObjectRelease();
    int v47 = v11;
    if (v11 != 2)
    {
      sub_256B3FF60();
      sub_256B3FF50();
      sub_256B3FF60();
      sub_256B3FF60();
    }
    sub_256B3FF60();
    sub_256B3FF50();
    uint64_t result = sub_256B3FF70();
    uint64_t v12 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v13 = result & v12;
    unint64_t v14 = (result & (unint64_t)v12) >> 6;
    uint64_t v15 = *(void *)(v49 + 8 * v14);
    uint64_t v16 = 1 << (result & v12);
    uint64_t v17 = *(void *)(v3 + 48);
    if ((v16 & v15) == 0) {
      break;
    }
    int v42 = v9;
    int v40 = v11;
    unint64_t v41 = v4;
    uint64_t v19 = v50;
    uint64_t v18 = v51;
    int v20 = v48;
    while (1)
    {
      uint64_t v21 = v17 + 40 * v13;
      uint64_t result = *(void *)v21;
      int v22 = *(unsigned __int8 *)(v21 + 16);
      uint64_t v23 = *(void *)(v21 + 24);
      int v24 = *(unsigned __int8 *)(v21 + 32);
      int v25 = *(unsigned __int8 *)(v21 + 33);
      int v26 = *(unsigned __int8 *)(v21 + 34);
      __int16 v27 = *(_WORD *)(v21 + 32);
      int v28 = *(unsigned __int8 *)(v21 + 35);
      if (*(void *)v21 != v19 || *(void *)(v21 + 8) != v18)
      {
        uint64_t result = sub_256B3FEA0();
        int v20 = v48;
        uint64_t v19 = v50;
        uint64_t v18 = v51;
        if ((result & 1) == 0) {
          goto LABEL_37;
        }
      }
      if (v22 == 2)
      {
        if (v20 != 2) {
          goto LABEL_37;
        }
      }
      else if (v20 == 2 || ((v20 ^ ((v22 & 1) == 0)) & 1) == 0)
      {
        goto LABEL_37;
      }
      if (v27 != 2) {
        break;
      }
      if (v47 == 2 && v28 == v46) {
        goto LABEL_44;
      }
LABEL_37:
      unint64_t v13 = (v13 + 1) & v12;
      unint64_t v14 = v13 >> 6;
      uint64_t v15 = *(void *)(v49 + 8 * (v13 >> 6));
      uint64_t v16 = 1 << v13;
      if ((v15 & (1 << v13)) == 0)
      {
        uint64_t v3 = v36;
        uint64_t v1 = v37;
        uint64_t v17 = *(void *)(v36 + 48);
        unint64_t v4 = v41;
        int v11 = v40;
        goto LABEL_40;
      }
    }
    BOOL v31 = v47 != 2 && v23 == v45;
    if (!v31 || ((v24 ^ v44) & 1) != 0 || ((v43 ^ v25) & 1) != 0 || ((v26 ^ v42) & 1) != 0 || v28 != v46) {
      goto LABEL_37;
    }
LABEL_44:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v36;
    uint64_t v1 = v37;
    unint64_t v4 = v41;
LABEL_42:
    if (++v4 == v39)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  uint64_t v19 = v50;
  uint64_t v18 = v51;
  LOBYTE(v20) = v48;
LABEL_40:
  *(void *)(v49 + 8 * v14) = v16 | v15;
  uint64_t v32 = v17 + 40 * v13;
  *(void *)uint64_t v32 = v19;
  *(void *)(v32 + 8) = v18;
  *(unsigned char *)(v32 + 16) = v20;
  *(void *)(v32 + 24) = v45;
  *(unsigned char *)(v32 + 34) = BYTE2(v11);
  *(_WORD *)(v32 + 32) = v11;
  *(unsigned char *)(v32 + 35) = v46;
  uint64_t v33 = *(void *)(v3 + 16);
  BOOL v34 = __OFADD__(v33, 1);
  uint64_t v35 = v33 + 1;
  if (!v34)
  {
    *(void *)(v3 + 16) = v35;
    goto LABEL_42;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_256AB81C4(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_27;
  }
  sub_256A39D2C(&qword_26B2B33E0);
  uint64_t result = sub_256B3FB60();
  uint64_t v3 = result;
  uint64_t v27 = *(void *)(v1 + 16);
  if (!v27) {
    goto LABEL_27;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v25 = result;
  uint64_t v26 = v1 + 32;
  uint64_t v24 = v1;
  while (1)
  {
    if (v4 >= *(void *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v6 = (uint64_t *)(v26 + 24 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    int v9 = *((unsigned __int8 *)v6 + 16);
    sub_256B3FF40();
    swift_bridgeObjectRetain_n();
    sub_256B3F740();
    swift_bridgeObjectRelease();
    if (v9 != 2) {
      sub_256B3FF60();
    }
    sub_256B3FF60();
    uint64_t result = sub_256B3FF70();
    uint64_t v10 = v3;
    uint64_t v11 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v12 = result & v11;
    unint64_t v13 = (result & (unint64_t)v11) >> 6;
    uint64_t v14 = *(void *)(v5 + 8 * v13);
    uint64_t v15 = 1 << (result & v11);
    uint64_t v16 = *(void *)(v10 + 48);
    if ((v15 & v14) == 0) {
      break;
    }
    while (1)
    {
      uint64_t v17 = v16 + 24 * v12;
      uint64_t result = *(void *)v17;
      int v18 = *(unsigned __int8 *)(v17 + 16);
      if (*(void *)v17 != v8 || *(void *)(v17 + 8) != v7)
      {
        uint64_t result = sub_256B3FEA0();
        if ((result & 1) == 0) {
          goto LABEL_18;
        }
      }
      if (v18 != 2) {
        break;
      }
      if (v9 == 2) {
        goto LABEL_23;
      }
LABEL_18:
      unint64_t v12 = (v12 + 1) & v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      if ((v14 & (1 << v12)) == 0)
      {
        uint64_t v1 = v24;
        uint64_t v3 = v25;
        uint64_t v16 = *(void *)(v25 + 48);
        goto LABEL_21;
      }
    }
    if (v9 == 2 || ((v9 ^ ((v18 & 1) == 0)) & 1) == 0) {
      goto LABEL_18;
    }
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v1 = v24;
    uint64_t v3 = v25;
LABEL_24:
    if (++v4 == v27)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  uint64_t v3 = v25;
LABEL_21:
  *(void *)(v5 + 8 * v13) = v15 | v14;
  uint64_t v20 = v16 + 24 * v12;
  *(void *)uint64_t v20 = v8;
  *(void *)(v20 + 8) = v7;
  *(unsigned char *)(v20 + 16) = v9;
  uint64_t v21 = *(void *)(v3 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v3 + 16) = v23;
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_256AB83F8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2 + 56;
  sub_256B3FF70();
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 56);
  int64_t v18 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v20 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = *(void *)(v20 + 48) + 40 * i;
    int v15 = *(unsigned __int8 *)(v14 + 16);
    __int16 v16 = *(_WORD *)(v14 + 32);
    sub_256B3FF40();
    swift_bridgeObjectRetain();
    sub_256B3F740();
    if (v15 != 2) {
      sub_256B3FF60();
    }
    sub_256B3FF60();
    if (v16 != 2)
    {
      sub_256B3FF60();
      sub_256B3FF50();
      sub_256B3FF60();
      sub_256B3FF60();
    }
    sub_256B3FF60();
    sub_256B3FF50();
    uint64_t v17 = sub_256B3FF70();
    uint64_t result = swift_bridgeObjectRelease();
    v7 ^= v17;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v8++, 1)) {
      goto LABEL_23;
    }
    if (v8 >= v18)
    {
LABEL_21:
      swift_release();
      return sub_256B3FF50();
    }
    unint64_t v12 = *(void *)(v19 + 8 * v8);
    if (!v12) {
      break;
    }
LABEL_14:
    unint64_t v5 = (v12 - 1) & v12;
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v18) {
    goto LABEL_21;
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12)
  {
    ++v8;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v18) {
      goto LABEL_21;
    }
    unint64_t v12 = *(void *)(v19 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_256AB8644(uint64_t a1, uint64_t a2)
{
  sub_256B3FF70();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    int v16 = *(unsigned __int8 *)(*(void *)(a2 + 48) + 24 * i + 16);
    sub_256B3FF40();
    swift_bridgeObjectRetain();
    sub_256B3F740();
    if (v16 != 2) {
      sub_256B3FF60();
    }
    sub_256B3FF60();
    uint64_t v17 = sub_256B3FF70();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v17;
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1)) {
      goto LABEL_21;
    }
    if (v10 >= v7)
    {
LABEL_19:
      swift_release();
      return sub_256B3FF50();
    }
    unint64_t v14 = *(void *)(v3 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_14:
    unint64_t v6 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_19;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_256AB8814(uint64_t a1)
{
  unint64_t result = sub_256AB883C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB883C()
{
  unint64_t result = qword_269F7A170;
  if (!qword_269F7A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A170);
  }
  return result;
}

unint64_t sub_256AB8888(uint64_t a1)
{
  unint64_t result = sub_256AB88B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB88B0()
{
  unint64_t result = qword_269F7A178;
  if (!qword_269F7A178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A178);
  }
  return result;
}

uint64_t sub_256AB88FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB8928, (uint64_t (*)(void))sub_256AB8974);
}

unint64_t sub_256AB8928()
{
  unint64_t result = qword_269F7A180;
  if (!qword_269F7A180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A180);
  }
  return result;
}

unint64_t sub_256AB8974()
{
  unint64_t result = qword_269F7A188;
  if (!qword_269F7A188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A188);
  }
  return result;
}

unint64_t sub_256AB89C4()
{
  unint64_t result = qword_269F7A190;
  if (!qword_269F7A190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A190);
  }
  return result;
}

unint64_t sub_256AB8A10(uint64_t a1)
{
  unint64_t result = sub_256AB8A38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB8A38()
{
  unint64_t result = qword_269F7A198;
  if (!qword_269F7A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A198);
  }
  return result;
}

unint64_t sub_256AB8A84(uint64_t a1)
{
  unint64_t result = sub_256AB8AAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB8AAC()
{
  unint64_t result = qword_269F7A1A0;
  if (!qword_269F7A1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1A0);
  }
  return result;
}

uint64_t sub_256AB8AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB8B24, (uint64_t (*)(void))sub_256AB8B70);
}

unint64_t sub_256AB8B24()
{
  unint64_t result = qword_269F7A1A8;
  if (!qword_269F7A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1A8);
  }
  return result;
}

unint64_t sub_256AB8B70()
{
  unint64_t result = qword_269F7A1B0;
  if (!qword_269F7A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1B0);
  }
  return result;
}

unint64_t sub_256AB8BC0()
{
  unint64_t result = qword_269F7A1B8;
  if (!qword_269F7A1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1B8);
  }
  return result;
}

unint64_t sub_256AB8C0C(uint64_t a1)
{
  unint64_t result = sub_256AB8C34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB8C34()
{
  unint64_t result = qword_269F7A1C0;
  if (!qword_269F7A1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1C0);
  }
  return result;
}

unint64_t sub_256AB8C80(uint64_t a1)
{
  unint64_t result = sub_256AB8CA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB8CA8()
{
  unint64_t result = qword_269F7A1C8;
  if (!qword_269F7A1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1C8);
  }
  return result;
}

uint64_t sub_256AB8CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB8D20, (uint64_t (*)(void))sub_256AB8D6C);
}

unint64_t sub_256AB8D20()
{
  unint64_t result = qword_269F7A1D0;
  if (!qword_269F7A1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1D0);
  }
  return result;
}

unint64_t sub_256AB8D6C()
{
  unint64_t result = qword_269F7A1D8;
  if (!qword_269F7A1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1D8);
  }
  return result;
}

unint64_t sub_256AB8DBC()
{
  unint64_t result = qword_269F7A1E0;
  if (!qword_269F7A1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1E0);
  }
  return result;
}

unint64_t sub_256AB8E08(uint64_t a1)
{
  unint64_t result = sub_256AB8E30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB8E30()
{
  unint64_t result = qword_269F7A1E8;
  if (!qword_269F7A1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1E8);
  }
  return result;
}

unint64_t sub_256AB8E7C(uint64_t a1)
{
  unint64_t result = sub_256AB8EA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB8EA4()
{
  unint64_t result = qword_269F7A1F0;
  if (!qword_269F7A1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1F0);
  }
  return result;
}

uint64_t sub_256AB8EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB8F1C, (uint64_t (*)(void))sub_256AB8F68);
}

unint64_t sub_256AB8F1C()
{
  unint64_t result = qword_269F7A1F8;
  if (!qword_269F7A1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A1F8);
  }
  return result;
}

unint64_t sub_256AB8F68()
{
  unint64_t result = qword_269F7A200;
  if (!qword_269F7A200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A200);
  }
  return result;
}

unint64_t sub_256AB8FB8()
{
  unint64_t result = qword_269F7A208;
  if (!qword_269F7A208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A208);
  }
  return result;
}

unint64_t sub_256AB9004(uint64_t a1)
{
  unint64_t result = sub_256AB902C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB902C()
{
  unint64_t result = qword_269F7A210;
  if (!qword_269F7A210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A210);
  }
  return result;
}

unint64_t sub_256AB9078(uint64_t a1)
{
  unint64_t result = sub_256AB90A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB90A0()
{
  unint64_t result = qword_269F7A218;
  if (!qword_269F7A218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A218);
  }
  return result;
}

uint64_t sub_256AB90EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9118, (uint64_t (*)(void))sub_256AB9164);
}

unint64_t sub_256AB9118()
{
  unint64_t result = qword_269F7A220;
  if (!qword_269F7A220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A220);
  }
  return result;
}

unint64_t sub_256AB9164()
{
  unint64_t result = qword_269F7A228;
  if (!qword_269F7A228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A228);
  }
  return result;
}

unint64_t sub_256AB91B4()
{
  unint64_t result = qword_269F7A230;
  if (!qword_269F7A230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A230);
  }
  return result;
}

unint64_t sub_256AB9200(uint64_t a1)
{
  unint64_t result = sub_256AB9228();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9228()
{
  unint64_t result = qword_269F7A238;
  if (!qword_269F7A238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A238);
  }
  return result;
}

unint64_t sub_256AB9274(uint64_t a1)
{
  unint64_t result = sub_256AB929C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB929C()
{
  unint64_t result = qword_269F7A240;
  if (!qword_269F7A240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A240);
  }
  return result;
}

uint64_t sub_256AB92E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9314, (uint64_t (*)(void))sub_256AB9360);
}

unint64_t sub_256AB9314()
{
  unint64_t result = qword_269F7A248;
  if (!qword_269F7A248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A248);
  }
  return result;
}

unint64_t sub_256AB9360()
{
  unint64_t result = qword_269F7A250;
  if (!qword_269F7A250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A250);
  }
  return result;
}

unint64_t sub_256AB93B0()
{
  unint64_t result = qword_269F7A258;
  if (!qword_269F7A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A258);
  }
  return result;
}

unint64_t sub_256AB93FC(uint64_t a1)
{
  unint64_t result = sub_256AB9424();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9424()
{
  unint64_t result = qword_269F7A260;
  if (!qword_269F7A260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A260);
  }
  return result;
}

unint64_t sub_256AB9470(uint64_t a1)
{
  unint64_t result = sub_256AB9498();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9498()
{
  unint64_t result = qword_269F7A268;
  if (!qword_269F7A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A268);
  }
  return result;
}

uint64_t sub_256AB94E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9510, (uint64_t (*)(void))sub_256AB955C);
}

unint64_t sub_256AB9510()
{
  unint64_t result = qword_269F7A270;
  if (!qword_269F7A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A270);
  }
  return result;
}

unint64_t sub_256AB955C()
{
  unint64_t result = qword_269F7A278;
  if (!qword_269F7A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A278);
  }
  return result;
}

unint64_t sub_256AB95AC()
{
  unint64_t result = qword_269F7A280;
  if (!qword_269F7A280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A280);
  }
  return result;
}

unint64_t sub_256AB95F8(uint64_t a1)
{
  unint64_t result = sub_256AB9620();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9620()
{
  unint64_t result = qword_269F7A288;
  if (!qword_269F7A288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A288);
  }
  return result;
}

unint64_t sub_256AB966C(uint64_t a1)
{
  unint64_t result = sub_256AB9694();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9694()
{
  unint64_t result = qword_269F7A290;
  if (!qword_269F7A290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A290);
  }
  return result;
}

uint64_t sub_256AB96E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB970C, (uint64_t (*)(void))sub_256AB9758);
}

unint64_t sub_256AB970C()
{
  unint64_t result = qword_269F7A298;
  if (!qword_269F7A298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A298);
  }
  return result;
}

unint64_t sub_256AB9758()
{
  unint64_t result = qword_269F7A2A0;
  if (!qword_269F7A2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2A0);
  }
  return result;
}

unint64_t sub_256AB97A8()
{
  unint64_t result = qword_269F7A2A8;
  if (!qword_269F7A2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2A8);
  }
  return result;
}

unint64_t sub_256AB97F4(uint64_t a1)
{
  unint64_t result = sub_256AB981C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB981C()
{
  unint64_t result = qword_269F7A2B0;
  if (!qword_269F7A2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2B0);
  }
  return result;
}

unint64_t sub_256AB9868(uint64_t a1)
{
  unint64_t result = sub_256AB9890();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9890()
{
  unint64_t result = qword_269F7A2B8;
  if (!qword_269F7A2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2B8);
  }
  return result;
}

uint64_t sub_256AB98DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9908, (uint64_t (*)(void))sub_256AB9954);
}

unint64_t sub_256AB9908()
{
  unint64_t result = qword_269F7A2C0;
  if (!qword_269F7A2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2C0);
  }
  return result;
}

unint64_t sub_256AB9954()
{
  unint64_t result = qword_269F7A2C8;
  if (!qword_269F7A2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2C8);
  }
  return result;
}

unint64_t sub_256AB99A4()
{
  unint64_t result = qword_269F7A2D0;
  if (!qword_269F7A2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2D0);
  }
  return result;
}

unint64_t sub_256AB99F0(uint64_t a1)
{
  unint64_t result = sub_256AB9A18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9A18()
{
  unint64_t result = qword_269F7A2D8;
  if (!qword_269F7A2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2D8);
  }
  return result;
}

unint64_t sub_256AB9A64(uint64_t a1)
{
  unint64_t result = sub_256AB9A8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9A8C()
{
  unint64_t result = qword_269F7A2E0;
  if (!qword_269F7A2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2E0);
  }
  return result;
}

uint64_t sub_256AB9AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9B04, (uint64_t (*)(void))sub_256AB9B50);
}

unint64_t sub_256AB9B04()
{
  unint64_t result = qword_269F7A2E8;
  if (!qword_269F7A2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2E8);
  }
  return result;
}

unint64_t sub_256AB9B50()
{
  unint64_t result = qword_269F7A2F0;
  if (!qword_269F7A2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2F0);
  }
  return result;
}

unint64_t sub_256AB9BA0()
{
  unint64_t result = qword_269F7A2F8;
  if (!qword_269F7A2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A2F8);
  }
  return result;
}

unint64_t sub_256AB9BEC(uint64_t a1)
{
  unint64_t result = sub_256AB9C14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9C14()
{
  unint64_t result = qword_269F7A300;
  if (!qword_269F7A300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A300);
  }
  return result;
}

unint64_t sub_256AB9C60(uint64_t a1)
{
  unint64_t result = sub_256AB9C88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9C88()
{
  unint64_t result = qword_269F7A308;
  if (!qword_269F7A308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A308);
  }
  return result;
}

uint64_t sub_256AB9CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9D00, (uint64_t (*)(void))sub_256AB9D4C);
}

unint64_t sub_256AB9D00()
{
  unint64_t result = qword_269F7A310;
  if (!qword_269F7A310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A310);
  }
  return result;
}

unint64_t sub_256AB9D4C()
{
  unint64_t result = qword_269F7A318;
  if (!qword_269F7A318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A318);
  }
  return result;
}

unint64_t sub_256AB9D9C()
{
  unint64_t result = qword_269F7A320;
  if (!qword_269F7A320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A320);
  }
  return result;
}

unint64_t sub_256AB9DE8(uint64_t a1)
{
  unint64_t result = sub_256AB9E10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9E10()
{
  unint64_t result = qword_269F7A328;
  if (!qword_269F7A328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A328);
  }
  return result;
}

unint64_t sub_256AB9E5C(uint64_t a1)
{
  unint64_t result = sub_256AB9E84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AB9E84()
{
  unint64_t result = qword_269F7A330;
  if (!qword_269F7A330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A330);
  }
  return result;
}

uint64_t sub_256AB9ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AB9EFC, (uint64_t (*)(void))sub_256AB9F48);
}

unint64_t sub_256AB9EFC()
{
  unint64_t result = qword_269F7A338;
  if (!qword_269F7A338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A338);
  }
  return result;
}

unint64_t sub_256AB9F48()
{
  unint64_t result = qword_269F7A340;
  if (!qword_269F7A340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A340);
  }
  return result;
}

unint64_t sub_256AB9F98()
{
  unint64_t result = qword_269F7A348;
  if (!qword_269F7A348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A348);
  }
  return result;
}

unint64_t sub_256AB9FE4(uint64_t a1)
{
  unint64_t result = sub_256ABA00C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA00C()
{
  unint64_t result = qword_269F7A350;
  if (!qword_269F7A350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A350);
  }
  return result;
}

unint64_t sub_256ABA058(uint64_t a1)
{
  unint64_t result = sub_256ABA080();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA080()
{
  unint64_t result = qword_26B2B3328;
  if (!qword_26B2B3328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3328);
  }
  return result;
}

uint64_t sub_256ABA0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABA0F8, (uint64_t (*)(void))sub_256ABA144);
}

unint64_t sub_256ABA0F8()
{
  unint64_t result = qword_26B2B3310;
  if (!qword_26B2B3310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3310);
  }
  return result;
}

unint64_t sub_256ABA144()
{
  unint64_t result = qword_26B2B3320;
  if (!qword_26B2B3320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3320);
  }
  return result;
}

unint64_t sub_256ABA194()
{
  unint64_t result = qword_26B2B3318;
  if (!qword_26B2B3318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3318);
  }
  return result;
}

unint64_t sub_256ABA1E0(uint64_t a1)
{
  unint64_t result = sub_256ABA208();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA208()
{
  unint64_t result = qword_269F7A358;
  if (!qword_269F7A358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A358);
  }
  return result;
}

uint64_t sub_256ABA254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABA280, (uint64_t (*)(void))sub_256ABA2CC);
}

unint64_t sub_256ABA280()
{
  unint64_t result = qword_269F7A360;
  if (!qword_269F7A360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A360);
  }
  return result;
}

unint64_t sub_256ABA2CC()
{
  unint64_t result = qword_269F7A368;
  if (!qword_269F7A368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A368);
  }
  return result;
}

unint64_t sub_256ABA31C()
{
  unint64_t result = qword_269F7A370;
  if (!qword_269F7A370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A370);
  }
  return result;
}

unint64_t sub_256ABA368(uint64_t a1)
{
  unint64_t result = sub_256ABA390();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA390()
{
  unint64_t result = qword_269F7A378;
  if (!qword_269F7A378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A378);
  }
  return result;
}

uint64_t sub_256ABA3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABA408, (uint64_t (*)(void))sub_256ABA454);
}

unint64_t sub_256ABA408()
{
  unint64_t result = qword_269F7A380;
  if (!qword_269F7A380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A380);
  }
  return result;
}

unint64_t sub_256ABA454()
{
  unint64_t result = qword_269F7A388;
  if (!qword_269F7A388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A388);
  }
  return result;
}

unint64_t sub_256ABA4A4()
{
  unint64_t result = qword_269F7A390;
  if (!qword_269F7A390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A390);
  }
  return result;
}

unint64_t sub_256ABA4F0(uint64_t a1)
{
  unint64_t result = sub_256ABA518();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA518()
{
  unint64_t result = qword_269F7A398;
  if (!qword_269F7A398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A398);
  }
  return result;
}

uint64_t sub_256ABA564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABA590, (uint64_t (*)(void))sub_256ABA5DC);
}

unint64_t sub_256ABA590()
{
  unint64_t result = qword_269F7A3A0;
  if (!qword_269F7A3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3A0);
  }
  return result;
}

unint64_t sub_256ABA5DC()
{
  unint64_t result = qword_269F7A3A8;
  if (!qword_269F7A3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3A8);
  }
  return result;
}

unint64_t sub_256ABA62C()
{
  unint64_t result = qword_269F7A3B0;
  if (!qword_269F7A3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3B0);
  }
  return result;
}

unint64_t sub_256ABA678(uint64_t a1)
{
  unint64_t result = sub_256ABA6A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA6A0()
{
  unint64_t result = qword_269F7A3B8;
  if (!qword_269F7A3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3B8);
  }
  return result;
}

uint64_t sub_256ABA6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABA718, (uint64_t (*)(void))sub_256ABA764);
}

unint64_t sub_256ABA718()
{
  unint64_t result = qword_269F7A3C0;
  if (!qword_269F7A3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3C0);
  }
  return result;
}

unint64_t sub_256ABA764()
{
  unint64_t result = qword_269F7A3C8;
  if (!qword_269F7A3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3C8);
  }
  return result;
}

unint64_t sub_256ABA7B4()
{
  unint64_t result = qword_269F7A3D0;
  if (!qword_269F7A3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3D0);
  }
  return result;
}

unint64_t sub_256ABA800(uint64_t a1)
{
  unint64_t result = sub_256ABA828();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA828()
{
  unint64_t result = qword_269F7A3D8;
  if (!qword_269F7A3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3D8);
  }
  return result;
}

uint64_t sub_256ABA874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABA8A0, (uint64_t (*)(void))sub_256ABA8EC);
}

unint64_t sub_256ABA8A0()
{
  unint64_t result = qword_269F7A3E0;
  if (!qword_269F7A3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3E0);
  }
  return result;
}

unint64_t sub_256ABA8EC()
{
  unint64_t result = qword_269F7A3E8;
  if (!qword_269F7A3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3E8);
  }
  return result;
}

unint64_t sub_256ABA93C()
{
  unint64_t result = qword_269F7A3F0;
  if (!qword_269F7A3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3F0);
  }
  return result;
}

unint64_t sub_256ABA988(uint64_t a1)
{
  unint64_t result = sub_256ABA9B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABA9B0()
{
  unint64_t result = qword_269F7A3F8;
  if (!qword_269F7A3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A3F8);
  }
  return result;
}

uint64_t sub_256ABA9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABAA28, (uint64_t (*)(void))sub_256ABAA74);
}

unint64_t sub_256ABAA28()
{
  unint64_t result = qword_269F7A400;
  if (!qword_269F7A400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A400);
  }
  return result;
}

unint64_t sub_256ABAA74()
{
  unint64_t result = qword_269F7A408;
  if (!qword_269F7A408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A408);
  }
  return result;
}

unint64_t sub_256ABAAC4()
{
  unint64_t result = qword_269F7A410;
  if (!qword_269F7A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A410);
  }
  return result;
}

unint64_t sub_256ABAB10(uint64_t a1)
{
  unint64_t result = sub_256ABAB38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABAB38()
{
  unint64_t result = qword_269F7A418;
  if (!qword_269F7A418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A418);
  }
  return result;
}

uint64_t sub_256ABAB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABABB0, (uint64_t (*)(void))sub_256ABABFC);
}

unint64_t sub_256ABABB0()
{
  unint64_t result = qword_269F7A420;
  if (!qword_269F7A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A420);
  }
  return result;
}

unint64_t sub_256ABABFC()
{
  unint64_t result = qword_269F7A428;
  if (!qword_269F7A428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A428);
  }
  return result;
}

unint64_t sub_256ABAC4C()
{
  unint64_t result = qword_269F7A430;
  if (!qword_269F7A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A430);
  }
  return result;
}

unint64_t sub_256ABAC98(uint64_t a1)
{
  unint64_t result = sub_256ABACC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABACC0()
{
  unint64_t result = qword_269F7A438;
  if (!qword_269F7A438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A438);
  }
  return result;
}

uint64_t sub_256ABAD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABAD38, (uint64_t (*)(void))sub_256ABAD84);
}

unint64_t sub_256ABAD38()
{
  unint64_t result = qword_269F7A440;
  if (!qword_269F7A440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A440);
  }
  return result;
}

unint64_t sub_256ABAD84()
{
  unint64_t result = qword_269F7A448;
  if (!qword_269F7A448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A448);
  }
  return result;
}

unint64_t sub_256ABADD4()
{
  unint64_t result = qword_269F7A450;
  if (!qword_269F7A450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A450);
  }
  return result;
}

unint64_t sub_256ABAE20(uint64_t a1)
{
  unint64_t result = sub_256ABAE48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABAE48()
{
  unint64_t result = qword_269F7A458;
  if (!qword_269F7A458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A458);
  }
  return result;
}

uint64_t sub_256ABAE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABAEC0, (uint64_t (*)(void))sub_256ABAF0C);
}

unint64_t sub_256ABAEC0()
{
  unint64_t result = qword_269F7A460;
  if (!qword_269F7A460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A460);
  }
  return result;
}

unint64_t sub_256ABAF0C()
{
  unint64_t result = qword_269F7A468;
  if (!qword_269F7A468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A468);
  }
  return result;
}

unint64_t sub_256ABAF5C()
{
  unint64_t result = qword_269F7A470;
  if (!qword_269F7A470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A470);
  }
  return result;
}

unint64_t sub_256ABAFAC()
{
  unint64_t result = qword_269F7A478;
  if (!qword_269F7A478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A478);
  }
  return result;
}

unint64_t sub_256ABAFF8(uint64_t a1)
{
  unint64_t result = sub_256ABB020();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB020()
{
  unint64_t result = qword_269F7A480;
  if (!qword_269F7A480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A480);
  }
  return result;
}

unint64_t sub_256ABB06C(uint64_t a1)
{
  unint64_t result = sub_256ABB094();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB094()
{
  unint64_t result = qword_269F7A488;
  if (!qword_269F7A488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A488);
  }
  return result;
}

unint64_t sub_256ABB0E0(uint64_t a1)
{
  unint64_t result = sub_256ABB108();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB108()
{
  unint64_t result = qword_269F7A490;
  if (!qword_269F7A490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A490);
  }
  return result;
}

uint64_t sub_256ABB154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABB180, (uint64_t (*)(void))sub_256ABB1CC);
}

unint64_t sub_256ABB180()
{
  unint64_t result = qword_269F7A498;
  if (!qword_269F7A498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A498);
  }
  return result;
}

unint64_t sub_256ABB1CC()
{
  unint64_t result = qword_269F7A4A0;
  if (!qword_269F7A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4A0);
  }
  return result;
}

unint64_t sub_256ABB21C()
{
  unint64_t result = qword_269F7A4A8;
  if (!qword_269F7A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4A8);
  }
  return result;
}

unint64_t sub_256ABB268(uint64_t a1)
{
  unint64_t result = sub_256ABB290();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB290()
{
  unint64_t result = qword_269F7A4B0;
  if (!qword_269F7A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4B0);
  }
  return result;
}

unint64_t sub_256ABB2DC(uint64_t a1)
{
  unint64_t result = sub_256ABB304();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB304()
{
  unint64_t result = qword_269F7A4B8;
  if (!qword_269F7A4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4B8);
  }
  return result;
}

unint64_t sub_256ABB350(uint64_t a1)
{
  unint64_t result = sub_256ABB378();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB378()
{
  unint64_t result = qword_269F7A4C0;
  if (!qword_269F7A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4C0);
  }
  return result;
}

uint64_t sub_256ABB3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABB3F0, (uint64_t (*)(void))sub_256ABB43C);
}

unint64_t sub_256ABB3F0()
{
  unint64_t result = qword_269F7A4C8;
  if (!qword_269F7A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4C8);
  }
  return result;
}

unint64_t sub_256ABB43C()
{
  unint64_t result = qword_269F7A4D0;
  if (!qword_269F7A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4D0);
  }
  return result;
}

unint64_t sub_256ABB48C()
{
  unint64_t result = qword_269F7A4D8;
  if (!qword_269F7A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4D8);
  }
  return result;
}

unint64_t sub_256ABB4DC()
{
  unint64_t result = qword_269F7A4E0;
  if (!qword_269F7A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4E0);
  }
  return result;
}

unint64_t sub_256ABB528(uint64_t a1)
{
  unint64_t result = sub_256ABB550();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB550()
{
  unint64_t result = qword_269F7A4E8;
  if (!qword_269F7A4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4E8);
  }
  return result;
}

unint64_t sub_256ABB59C(uint64_t a1)
{
  unint64_t result = sub_256ABB5C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB5C4()
{
  unint64_t result = qword_269F7A4F0;
  if (!qword_269F7A4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4F0);
  }
  return result;
}

unint64_t sub_256ABB610(uint64_t a1)
{
  unint64_t result = sub_256ABB638();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB638()
{
  unint64_t result = qword_269F7A4F8;
  if (!qword_269F7A4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A4F8);
  }
  return result;
}

uint64_t sub_256ABB684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABB6B0, (uint64_t (*)(void))sub_256ABB6FC);
}

unint64_t sub_256ABB6B0()
{
  unint64_t result = qword_269F7A500;
  if (!qword_269F7A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A500);
  }
  return result;
}

unint64_t sub_256ABB6FC()
{
  unint64_t result = qword_269F7A508;
  if (!qword_269F7A508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A508);
  }
  return result;
}

unint64_t sub_256ABB74C()
{
  unint64_t result = qword_269F7A510;
  if (!qword_269F7A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A510);
  }
  return result;
}

unint64_t sub_256ABB79C()
{
  unint64_t result = qword_269F7A518;
  if (!qword_269F7A518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A518);
  }
  return result;
}

unint64_t sub_256ABB7E8(uint64_t a1)
{
  unint64_t result = sub_256ABB810();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB810()
{
  unint64_t result = qword_269F7A520;
  if (!qword_269F7A520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A520);
  }
  return result;
}

unint64_t sub_256ABB85C(uint64_t a1)
{
  unint64_t result = sub_256ABB884();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB884()
{
  unint64_t result = qword_269F7A528;
  if (!qword_269F7A528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A528);
  }
  return result;
}

unint64_t sub_256ABB8D0(uint64_t a1)
{
  unint64_t result = sub_256ABB8F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABB8F8()
{
  unint64_t result = qword_269F7A530;
  if (!qword_269F7A530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A530);
  }
  return result;
}

uint64_t sub_256ABB944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABB970, (uint64_t (*)(void))sub_256ABB9BC);
}

unint64_t sub_256ABB970()
{
  unint64_t result = qword_269F7A538;
  if (!qword_269F7A538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A538);
  }
  return result;
}

unint64_t sub_256ABB9BC()
{
  unint64_t result = qword_269F7A540;
  if (!qword_269F7A540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A540);
  }
  return result;
}

unint64_t sub_256ABBA0C()
{
  unint64_t result = qword_269F7A548;
  if (!qword_269F7A548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A548);
  }
  return result;
}

unint64_t sub_256ABBA58(uint64_t a1)
{
  unint64_t result = sub_256ABBA80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBA80()
{
  unint64_t result = qword_269F7A550;
  if (!qword_269F7A550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A550);
  }
  return result;
}

unint64_t sub_256ABBACC(uint64_t a1)
{
  unint64_t result = sub_256ABBAF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBAF4()
{
  unint64_t result = qword_269F7A558;
  if (!qword_269F7A558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A558);
  }
  return result;
}

unint64_t sub_256ABBB40(uint64_t a1)
{
  unint64_t result = sub_256ABBB68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBB68()
{
  unint64_t result = qword_26B2B3248;
  if (!qword_26B2B3248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3248);
  }
  return result;
}

uint64_t sub_256ABBBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABBBE0, (uint64_t (*)(void))sub_256ABBC2C);
}

unint64_t sub_256ABBBE0()
{
  unint64_t result = qword_26B2B3230;
  if (!qword_26B2B3230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3230);
  }
  return result;
}

unint64_t sub_256ABBC2C()
{
  unint64_t result = qword_26B2B3240;
  if (!qword_26B2B3240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3240);
  }
  return result;
}

unint64_t sub_256ABBC7C()
{
  unint64_t result = qword_26B2B3238;
  if (!qword_26B2B3238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3238);
  }
  return result;
}

unint64_t sub_256ABBCC8(uint64_t a1)
{
  unint64_t result = sub_256ABBCF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBCF0()
{
  unint64_t result = qword_269F7A560;
  if (!qword_269F7A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A560);
  }
  return result;
}

unint64_t sub_256ABBD3C(uint64_t a1)
{
  unint64_t result = sub_256ABBD64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBD64()
{
  unint64_t result = qword_269F7A568;
  if (!qword_269F7A568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A568);
  }
  return result;
}

unint64_t sub_256ABBDB0(uint64_t a1)
{
  unint64_t result = sub_256ABBDD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBDD8()
{
  unint64_t result = qword_269F7A570;
  if (!qword_269F7A570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A570);
  }
  return result;
}

uint64_t sub_256ABBE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABBE50, (uint64_t (*)(void))sub_256ABBE9C);
}

unint64_t sub_256ABBE50()
{
  unint64_t result = qword_269F7A578;
  if (!qword_269F7A578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A578);
  }
  return result;
}

unint64_t sub_256ABBE9C()
{
  unint64_t result = qword_269F7A580;
  if (!qword_269F7A580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A580);
  }
  return result;
}

unint64_t sub_256ABBEEC()
{
  unint64_t result = qword_269F7A588;
  if (!qword_269F7A588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A588);
  }
  return result;
}

unint64_t sub_256ABBF38(uint64_t a1)
{
  unint64_t result = sub_256ABBF60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBF60()
{
  unint64_t result = qword_269F7A590;
  if (!qword_269F7A590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A590);
  }
  return result;
}

unint64_t sub_256ABBFAC(uint64_t a1)
{
  unint64_t result = sub_256ABBFD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABBFD4()
{
  unint64_t result = qword_269F7A598;
  if (!qword_269F7A598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A598);
  }
  return result;
}

unint64_t sub_256ABC020(uint64_t a1)
{
  unint64_t result = sub_256ABC048();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC048()
{
  unint64_t result = qword_26B2B3188;
  if (!qword_26B2B3188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3188);
  }
  return result;
}

uint64_t sub_256ABC094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABC0C0, (uint64_t (*)(void))sub_256ABC10C);
}

unint64_t sub_256ABC0C0()
{
  unint64_t result = qword_26B2B3170;
  if (!qword_26B2B3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3170);
  }
  return result;
}

unint64_t sub_256ABC10C()
{
  unint64_t result = qword_26B2B3180;
  if (!qword_26B2B3180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3180);
  }
  return result;
}

unint64_t sub_256ABC15C()
{
  unint64_t result = qword_26B2B3178;
  if (!qword_26B2B3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3178);
  }
  return result;
}

unint64_t sub_256ABC1A8(uint64_t a1)
{
  unint64_t result = sub_256ABC1D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC1D0()
{
  unint64_t result = qword_269F7A5A0;
  if (!qword_269F7A5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5A0);
  }
  return result;
}

unint64_t sub_256ABC21C(uint64_t a1)
{
  unint64_t result = sub_256ABC244();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC244()
{
  unint64_t result = qword_269F7A5A8;
  if (!qword_269F7A5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5A8);
  }
  return result;
}

unint64_t sub_256ABC290(uint64_t a1)
{
  unint64_t result = sub_256ABC2B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC2B8()
{
  unint64_t result = qword_26B2B31A8;
  if (!qword_26B2B31A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31A8);
  }
  return result;
}

uint64_t sub_256ABC304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABC330, (uint64_t (*)(void))sub_256ABC37C);
}

unint64_t sub_256ABC330()
{
  unint64_t result = qword_26B2B3190;
  if (!qword_26B2B3190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3190);
  }
  return result;
}

unint64_t sub_256ABC37C()
{
  unint64_t result = qword_26B2B31A0;
  if (!qword_26B2B31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31A0);
  }
  return result;
}

unint64_t sub_256ABC3CC()
{
  unint64_t result = qword_26B2B3198;
  if (!qword_26B2B3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3198);
  }
  return result;
}

unint64_t sub_256ABC418(uint64_t a1)
{
  unint64_t result = sub_256ABC440();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC440()
{
  unint64_t result = qword_269F7A5B0;
  if (!qword_269F7A5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5B0);
  }
  return result;
}

unint64_t sub_256ABC48C(uint64_t a1)
{
  unint64_t result = sub_256ABC4B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC4B4()
{
  unint64_t result = qword_269F7A5B8;
  if (!qword_269F7A5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5B8);
  }
  return result;
}

unint64_t sub_256ABC500(uint64_t a1)
{
  unint64_t result = sub_256ABC528();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC528()
{
  unint64_t result = qword_26B2B31C8;
  if (!qword_26B2B31C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31C8);
  }
  return result;
}

uint64_t sub_256ABC574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABC5A0, (uint64_t (*)(void))sub_256ABC5EC);
}

unint64_t sub_256ABC5A0()
{
  unint64_t result = qword_26B2B31B0;
  if (!qword_26B2B31B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31B0);
  }
  return result;
}

unint64_t sub_256ABC5EC()
{
  unint64_t result = qword_26B2B31C0;
  if (!qword_26B2B31C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31C0);
  }
  return result;
}

unint64_t sub_256ABC63C()
{
  unint64_t result = qword_26B2B31B8;
  if (!qword_26B2B31B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31B8);
  }
  return result;
}

unint64_t sub_256ABC688(uint64_t a1)
{
  unint64_t result = sub_256ABC6B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC6B0()
{
  unint64_t result = qword_269F7A5C0;
  if (!qword_269F7A5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5C0);
  }
  return result;
}

unint64_t sub_256ABC6FC(uint64_t a1)
{
  unint64_t result = sub_256ABC724();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC724()
{
  unint64_t result = qword_269F7A5C8;
  if (!qword_269F7A5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5C8);
  }
  return result;
}

unint64_t sub_256ABC770(uint64_t a1)
{
  unint64_t result = sub_256ABC798();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC798()
{
  unint64_t result = qword_26B2B3308;
  if (!qword_26B2B3308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3308);
  }
  return result;
}

uint64_t sub_256ABC7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABC810, (uint64_t (*)(void))sub_256ABC85C);
}

unint64_t sub_256ABC810()
{
  unint64_t result = qword_26B2B32F0;
  if (!qword_26B2B32F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32F0);
  }
  return result;
}

unint64_t sub_256ABC85C()
{
  unint64_t result = qword_26B2B3300;
  if (!qword_26B2B3300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3300);
  }
  return result;
}

unint64_t sub_256ABC8AC()
{
  unint64_t result = qword_26B2B32F8;
  if (!qword_26B2B32F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32F8);
  }
  return result;
}

unint64_t sub_256ABC8F8(uint64_t a1)
{
  unint64_t result = sub_256ABC920();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC920()
{
  unint64_t result = qword_269F7A5D0;
  if (!qword_269F7A5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5D0);
  }
  return result;
}

unint64_t sub_256ABC96C(uint64_t a1)
{
  unint64_t result = sub_256ABC994();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABC994()
{
  unint64_t result = qword_269F7A5D8;
  if (!qword_269F7A5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5D8);
  }
  return result;
}

unint64_t sub_256ABC9E0(uint64_t a1)
{
  unint64_t result = sub_256ABCA08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCA08()
{
  unint64_t result = qword_26B2B31E8;
  if (!qword_26B2B31E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31E8);
  }
  return result;
}

uint64_t sub_256ABCA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABCA80, (uint64_t (*)(void))sub_256ABCACC);
}

unint64_t sub_256ABCA80()
{
  unint64_t result = qword_26B2B31D0;
  if (!qword_26B2B31D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31D0);
  }
  return result;
}

unint64_t sub_256ABCACC()
{
  unint64_t result = qword_26B2B31E0;
  if (!qword_26B2B31E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31E0);
  }
  return result;
}

unint64_t sub_256ABCB1C()
{
  unint64_t result = qword_26B2B31D8;
  if (!qword_26B2B31D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31D8);
  }
  return result;
}

unint64_t sub_256ABCB68(uint64_t a1)
{
  unint64_t result = sub_256ABCB90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCB90()
{
  unint64_t result = qword_269F7A5E0;
  if (!qword_269F7A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5E0);
  }
  return result;
}

unint64_t sub_256ABCBDC(uint64_t a1)
{
  unint64_t result = sub_256ABCC04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCC04()
{
  unint64_t result = qword_269F7A5E8;
  if (!qword_269F7A5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5E8);
  }
  return result;
}

unint64_t sub_256ABCC50(uint64_t a1)
{
  unint64_t result = sub_256ABCC78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCC78()
{
  unint64_t result = qword_269F7A5F0;
  if (!qword_269F7A5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5F0);
  }
  return result;
}

uint64_t sub_256ABCCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABCCF0, (uint64_t (*)(void))sub_256ABCD3C);
}

unint64_t sub_256ABCCF0()
{
  unint64_t result = qword_269F7A5F8;
  if (!qword_269F7A5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A5F8);
  }
  return result;
}

unint64_t sub_256ABCD3C()
{
  unint64_t result = qword_269F7A600;
  if (!qword_269F7A600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A600);
  }
  return result;
}

unint64_t sub_256ABCD8C()
{
  unint64_t result = qword_269F7A608;
  if (!qword_269F7A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A608);
  }
  return result;
}

unint64_t sub_256ABCDD8(uint64_t a1)
{
  unint64_t result = sub_256ABCE00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCE00()
{
  unint64_t result = qword_269F7A610;
  if (!qword_269F7A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A610);
  }
  return result;
}

unint64_t sub_256ABCE4C(uint64_t a1)
{
  unint64_t result = sub_256ABCE74();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCE74()
{
  unint64_t result = qword_269F7A618;
  if (!qword_269F7A618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A618);
  }
  return result;
}

unint64_t sub_256ABCEC0(uint64_t a1)
{
  unint64_t result = sub_256ABCEE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABCEE8()
{
  unint64_t result = qword_269F7A620;
  if (!qword_269F7A620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A620);
  }
  return result;
}

uint64_t sub_256ABCF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABCF60, (uint64_t (*)(void))sub_256ABCFAC);
}

unint64_t sub_256ABCF60()
{
  unint64_t result = qword_269F7A628;
  if (!qword_269F7A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A628);
  }
  return result;
}

unint64_t sub_256ABCFAC()
{
  unint64_t result = qword_269F7A630;
  if (!qword_269F7A630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A630);
  }
  return result;
}

unint64_t sub_256ABCFFC()
{
  unint64_t result = qword_269F7A638;
  if (!qword_269F7A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A638);
  }
  return result;
}

unint64_t sub_256ABD048(uint64_t a1)
{
  unint64_t result = sub_256ABD070();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD070()
{
  unint64_t result = qword_269F7A640;
  if (!qword_269F7A640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A640);
  }
  return result;
}

unint64_t sub_256ABD0BC(uint64_t a1)
{
  unint64_t result = sub_256ABD0E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD0E4()
{
  unint64_t result = qword_269F7A648;
  if (!qword_269F7A648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A648);
  }
  return result;
}

unint64_t sub_256ABD130(uint64_t a1)
{
  unint64_t result = sub_256ABD158();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD158()
{
  unint64_t result = qword_269F7A650;
  if (!qword_269F7A650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A650);
  }
  return result;
}

uint64_t sub_256ABD1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABD1D0, (uint64_t (*)(void))sub_256ABD21C);
}

unint64_t sub_256ABD1D0()
{
  unint64_t result = qword_269F7A658;
  if (!qword_269F7A658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A658);
  }
  return result;
}

unint64_t sub_256ABD21C()
{
  unint64_t result = qword_269F7A660;
  if (!qword_269F7A660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A660);
  }
  return result;
}

unint64_t sub_256ABD26C()
{
  unint64_t result = qword_269F7A668;
  if (!qword_269F7A668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A668);
  }
  return result;
}

unint64_t sub_256ABD2B8(uint64_t a1)
{
  unint64_t result = sub_256ABD2E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD2E0()
{
  unint64_t result = qword_269F7A670;
  if (!qword_269F7A670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A670);
  }
  return result;
}

unint64_t sub_256ABD32C(uint64_t a1)
{
  unint64_t result = sub_256ABD354();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD354()
{
  unint64_t result = qword_269F7A678;
  if (!qword_269F7A678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A678);
  }
  return result;
}

unint64_t sub_256ABD3A0(uint64_t a1)
{
  unint64_t result = sub_256ABD3C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD3C8()
{
  unint64_t result = qword_269F7A680;
  if (!qword_269F7A680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A680);
  }
  return result;
}

uint64_t sub_256ABD414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABD440, (uint64_t (*)(void))sub_256ABD48C);
}

unint64_t sub_256ABD440()
{
  unint64_t result = qword_269F7A688;
  if (!qword_269F7A688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A688);
  }
  return result;
}

unint64_t sub_256ABD48C()
{
  unint64_t result = qword_269F7A690;
  if (!qword_269F7A690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A690);
  }
  return result;
}

unint64_t sub_256ABD4DC()
{
  unint64_t result = qword_269F7A698;
  if (!qword_269F7A698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A698);
  }
  return result;
}

unint64_t sub_256ABD52C()
{
  unint64_t result = qword_269F7A6A0;
  if (!qword_269F7A6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6A0);
  }
  return result;
}

unint64_t sub_256ABD578(uint64_t a1)
{
  unint64_t result = sub_256ABD5A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD5A0()
{
  unint64_t result = qword_269F7A6A8;
  if (!qword_269F7A6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6A8);
  }
  return result;
}

unint64_t sub_256ABD5EC(uint64_t a1)
{
  unint64_t result = sub_256ABD614();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD614()
{
  unint64_t result = qword_269F7A6B0;
  if (!qword_269F7A6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6B0);
  }
  return result;
}

unint64_t sub_256ABD660(uint64_t a1)
{
  unint64_t result = sub_256ABD688();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD688()
{
  unint64_t result = qword_26B2B32C8;
  if (!qword_26B2B32C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32C8);
  }
  return result;
}

uint64_t sub_256ABD6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABD700, (uint64_t (*)(void))sub_256ABD74C);
}

unint64_t sub_256ABD700()
{
  unint64_t result = qword_26B2B32B0;
  if (!qword_26B2B32B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32B0);
  }
  return result;
}

unint64_t sub_256ABD74C()
{
  unint64_t result = qword_26B2B32C0;
  if (!qword_26B2B32C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32C0);
  }
  return result;
}

unint64_t sub_256ABD79C()
{
  unint64_t result = qword_26B2B32B8;
  if (!qword_26B2B32B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32B8);
  }
  return result;
}

unint64_t sub_256ABD7E8(uint64_t a1)
{
  unint64_t result = sub_256ABD810();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD810()
{
  unint64_t result = qword_269F7A6B8;
  if (!qword_269F7A6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6B8);
  }
  return result;
}

unint64_t sub_256ABD85C(uint64_t a1)
{
  unint64_t result = sub_256ABD884();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD884()
{
  unint64_t result = qword_269F7A6C0;
  if (!qword_269F7A6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6C0);
  }
  return result;
}

unint64_t sub_256ABD8D0(uint64_t a1)
{
  unint64_t result = sub_256ABD8F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABD8F8()
{
  unint64_t result = qword_269F7A6C8;
  if (!qword_269F7A6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6C8);
  }
  return result;
}

uint64_t sub_256ABD944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABD970, (uint64_t (*)(void))sub_256ABD9BC);
}

unint64_t sub_256ABD970()
{
  unint64_t result = qword_269F7A6D0;
  if (!qword_269F7A6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6D0);
  }
  return result;
}

unint64_t sub_256ABD9BC()
{
  unint64_t result = qword_269F7A6D8;
  if (!qword_269F7A6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6D8);
  }
  return result;
}

unint64_t sub_256ABDA0C()
{
  unint64_t result = qword_269F7A6E0;
  if (!qword_269F7A6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6E0);
  }
  return result;
}

unint64_t sub_256ABDA58(uint64_t a1)
{
  unint64_t result = sub_256ABDA80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDA80()
{
  unint64_t result = qword_269F7A6E8;
  if (!qword_269F7A6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6E8);
  }
  return result;
}

unint64_t sub_256ABDACC(uint64_t a1)
{
  unint64_t result = sub_256ABDAF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDAF4()
{
  unint64_t result = qword_269F7A6F0;
  if (!qword_269F7A6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6F0);
  }
  return result;
}

unint64_t sub_256ABDB40(uint64_t a1)
{
  unint64_t result = sub_256ABDB68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDB68()
{
  unint64_t result = qword_26B2B32A8;
  if (!qword_26B2B32A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32A8);
  }
  return result;
}

uint64_t sub_256ABDBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABDBE0, (uint64_t (*)(void))sub_256ABDC2C);
}

unint64_t sub_256ABDBE0()
{
  unint64_t result = qword_26B2B3290;
  if (!qword_26B2B3290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3290);
  }
  return result;
}

unint64_t sub_256ABDC2C()
{
  unint64_t result = qword_26B2B32A0;
  if (!qword_26B2B32A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32A0);
  }
  return result;
}

unint64_t sub_256ABDC7C()
{
  unint64_t result = qword_26B2B3298;
  if (!qword_26B2B3298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3298);
  }
  return result;
}

unint64_t sub_256ABDCC8(uint64_t a1)
{
  unint64_t result = sub_256ABDCF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDCF0()
{
  unint64_t result = qword_269F7A6F8;
  if (!qword_269F7A6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A6F8);
  }
  return result;
}

unint64_t sub_256ABDD3C(uint64_t a1)
{
  unint64_t result = sub_256ABDD64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDD64()
{
  unint64_t result = qword_269F7A700;
  if (!qword_269F7A700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A700);
  }
  return result;
}

unint64_t sub_256ABDDB0(uint64_t a1)
{
  unint64_t result = sub_256ABDDD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDDD8()
{
  unint64_t result = qword_269F7A708;
  if (!qword_269F7A708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A708);
  }
  return result;
}

uint64_t sub_256ABDE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABDE50, (uint64_t (*)(void))sub_256ABDE9C);
}

unint64_t sub_256ABDE50()
{
  unint64_t result = qword_269F7A710;
  if (!qword_269F7A710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A710);
  }
  return result;
}

unint64_t sub_256ABDE9C()
{
  unint64_t result = qword_269F7A718;
  if (!qword_269F7A718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A718);
  }
  return result;
}

unint64_t sub_256ABDEEC()
{
  unint64_t result = qword_269F7A720;
  if (!qword_269F7A720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A720);
  }
  return result;
}

unint64_t sub_256ABDF38(uint64_t a1)
{
  unint64_t result = sub_256ABDF60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDF60()
{
  unint64_t result = qword_269F7A728;
  if (!qword_269F7A728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A728);
  }
  return result;
}

unint64_t sub_256ABDFAC(uint64_t a1)
{
  unint64_t result = sub_256ABDFD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABDFD4()
{
  unint64_t result = qword_269F7A730;
  if (!qword_269F7A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A730);
  }
  return result;
}

unint64_t sub_256ABE020(uint64_t a1)
{
  unint64_t result = sub_256ABE048();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE048()
{
  unint64_t result = qword_26B2B32E8;
  if (!qword_26B2B32E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32E8);
  }
  return result;
}

uint64_t sub_256ABE094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABE0C0, (uint64_t (*)(void))sub_256ABE10C);
}

unint64_t sub_256ABE0C0()
{
  unint64_t result = qword_26B2B32D0;
  if (!qword_26B2B32D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32D0);
  }
  return result;
}

unint64_t sub_256ABE10C()
{
  unint64_t result = qword_26B2B32E0;
  if (!qword_26B2B32E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32E0);
  }
  return result;
}

unint64_t sub_256ABE15C()
{
  unint64_t result = qword_26B2B32D8;
  if (!qword_26B2B32D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B32D8);
  }
  return result;
}

unint64_t sub_256ABE1A8(uint64_t a1)
{
  unint64_t result = sub_256ABE1D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE1D0()
{
  unint64_t result = qword_269F7A738;
  if (!qword_269F7A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A738);
  }
  return result;
}

unint64_t sub_256ABE21C(uint64_t a1)
{
  unint64_t result = sub_256ABE244();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE244()
{
  unint64_t result = qword_269F7A740;
  if (!qword_269F7A740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A740);
  }
  return result;
}

unint64_t sub_256ABE290(uint64_t a1)
{
  unint64_t result = sub_256ABE2B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE2B8()
{
  unint64_t result = qword_269F7A748;
  if (!qword_269F7A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A748);
  }
  return result;
}

uint64_t sub_256ABE304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABE330, (uint64_t (*)(void))sub_256ABE37C);
}

unint64_t sub_256ABE330()
{
  unint64_t result = qword_269F7A750;
  if (!qword_269F7A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A750);
  }
  return result;
}

unint64_t sub_256ABE37C()
{
  unint64_t result = qword_269F7A758;
  if (!qword_269F7A758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A758);
  }
  return result;
}

unint64_t sub_256ABE3CC()
{
  unint64_t result = qword_269F7A760;
  if (!qword_269F7A760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A760);
  }
  return result;
}

unint64_t sub_256ABE418(uint64_t a1)
{
  unint64_t result = sub_256ABE440();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE440()
{
  unint64_t result = qword_269F7A768;
  if (!qword_269F7A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A768);
  }
  return result;
}

unint64_t sub_256ABE48C(uint64_t a1)
{
  unint64_t result = sub_256ABE4B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE4B4()
{
  unint64_t result = qword_269F7A770;
  if (!qword_269F7A770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A770);
  }
  return result;
}

unint64_t sub_256ABE500(uint64_t a1)
{
  unint64_t result = sub_256ABE528();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE528()
{
  unint64_t result = qword_269F7A778;
  if (!qword_269F7A778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A778);
  }
  return result;
}

uint64_t sub_256ABE574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABE5A0, (uint64_t (*)(void))sub_256ABE5EC);
}

unint64_t sub_256ABE5A0()
{
  unint64_t result = qword_269F7A780;
  if (!qword_269F7A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A780);
  }
  return result;
}

unint64_t sub_256ABE5EC()
{
  unint64_t result = qword_269F7A788;
  if (!qword_269F7A788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A788);
  }
  return result;
}

unint64_t sub_256ABE63C()
{
  unint64_t result = qword_269F7A790;
  if (!qword_269F7A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A790);
  }
  return result;
}

unint64_t sub_256ABE688(uint64_t a1)
{
  unint64_t result = sub_256ABE6B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE6B0()
{
  unint64_t result = qword_269F7A798;
  if (!qword_269F7A798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A798);
  }
  return result;
}

unint64_t sub_256ABE6FC(uint64_t a1)
{
  unint64_t result = sub_256ABE724();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE724()
{
  unint64_t result = qword_269F7A7A0;
  if (!qword_269F7A7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7A0);
  }
  return result;
}

unint64_t sub_256ABE770(uint64_t a1)
{
  unint64_t result = sub_256ABE798();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE798()
{
  unint64_t result = qword_26B2B3288;
  if (!qword_26B2B3288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3288);
  }
  return result;
}

uint64_t sub_256ABE7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABE810, (uint64_t (*)(void))sub_256ABE85C);
}

unint64_t sub_256ABE810()
{
  unint64_t result = qword_26B2B3270;
  if (!qword_26B2B3270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3270);
  }
  return result;
}

unint64_t sub_256ABE85C()
{
  unint64_t result = qword_26B2B3280;
  if (!qword_26B2B3280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3280);
  }
  return result;
}

unint64_t sub_256ABE8AC()
{
  unint64_t result = qword_26B2B3278;
  if (!qword_26B2B3278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3278);
  }
  return result;
}

unint64_t sub_256ABE8F8(uint64_t a1)
{
  unint64_t result = sub_256ABE920();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE920()
{
  unint64_t result = qword_269F7A7A8;
  if (!qword_269F7A7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7A8);
  }
  return result;
}

unint64_t sub_256ABE96C(uint64_t a1)
{
  unint64_t result = sub_256ABE994();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABE994()
{
  unint64_t result = qword_269F7A7B0;
  if (!qword_269F7A7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7B0);
  }
  return result;
}

unint64_t sub_256ABE9E0(uint64_t a1)
{
  unint64_t result = sub_256ABEA08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEA08()
{
  unint64_t result = qword_269F7A7B8;
  if (!qword_269F7A7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7B8);
  }
  return result;
}

uint64_t sub_256ABEA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABEA80, (uint64_t (*)(void))sub_256ABEACC);
}

unint64_t sub_256ABEA80()
{
  unint64_t result = qword_269F7A7C0;
  if (!qword_269F7A7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7C0);
  }
  return result;
}

unint64_t sub_256ABEACC()
{
  unint64_t result = qword_269F7A7C8;
  if (!qword_269F7A7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7C8);
  }
  return result;
}

unint64_t sub_256ABEB1C()
{
  unint64_t result = qword_269F7A7D0;
  if (!qword_269F7A7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7D0);
  }
  return result;
}

unint64_t sub_256ABEB68(uint64_t a1)
{
  unint64_t result = sub_256ABEB90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEB90()
{
  unint64_t result = qword_269F7A7D8;
  if (!qword_269F7A7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7D8);
  }
  return result;
}

unint64_t sub_256ABEBDC(uint64_t a1)
{
  unint64_t result = sub_256ABEC04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEC04()
{
  unint64_t result = qword_269F7A7E0;
  if (!qword_269F7A7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7E0);
  }
  return result;
}

unint64_t sub_256ABEC50(uint64_t a1)
{
  unint64_t result = sub_256ABEC78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEC78()
{
  unint64_t result = qword_269F7A7E8;
  if (!qword_269F7A7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7E8);
  }
  return result;
}

uint64_t sub_256ABECC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABECF0, (uint64_t (*)(void))sub_256ABED3C);
}

unint64_t sub_256ABECF0()
{
  unint64_t result = qword_269F7A7F0;
  if (!qword_269F7A7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7F0);
  }
  return result;
}

unint64_t sub_256ABED3C()
{
  unint64_t result = qword_269F7A7F8;
  if (!qword_269F7A7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A7F8);
  }
  return result;
}

unint64_t sub_256ABED8C()
{
  unint64_t result = qword_269F7A800;
  if (!qword_269F7A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A800);
  }
  return result;
}

unint64_t sub_256ABEDD8(uint64_t a1)
{
  unint64_t result = sub_256ABEE00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEE00()
{
  unint64_t result = qword_269F7A808;
  if (!qword_269F7A808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A808);
  }
  return result;
}

unint64_t sub_256ABEE4C(uint64_t a1)
{
  unint64_t result = sub_256ABEE74();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEE74()
{
  unint64_t result = qword_269F7A810;
  if (!qword_269F7A810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A810);
  }
  return result;
}

unint64_t sub_256ABEEC0(uint64_t a1)
{
  unint64_t result = sub_256ABEEE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABEEE8()
{
  unint64_t result = qword_269F7A818;
  if (!qword_269F7A818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A818);
  }
  return result;
}

uint64_t sub_256ABEF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABEF60, (uint64_t (*)(void))sub_256ABEFAC);
}

unint64_t sub_256ABEF60()
{
  unint64_t result = qword_269F7A820;
  if (!qword_269F7A820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A820);
  }
  return result;
}

unint64_t sub_256ABEFAC()
{
  unint64_t result = qword_269F7A828;
  if (!qword_269F7A828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A828);
  }
  return result;
}

unint64_t sub_256ABEFFC()
{
  unint64_t result = qword_269F7A830;
  if (!qword_269F7A830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A830);
  }
  return result;
}

unint64_t sub_256ABF048(uint64_t a1)
{
  unint64_t result = sub_256ABF070();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF070()
{
  unint64_t result = qword_269F7A838;
  if (!qword_269F7A838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A838);
  }
  return result;
}

unint64_t sub_256ABF0BC(uint64_t a1)
{
  unint64_t result = sub_256ABF0E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF0E4()
{
  unint64_t result = qword_269F7A840;
  if (!qword_269F7A840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A840);
  }
  return result;
}

unint64_t sub_256ABF130(uint64_t a1)
{
  unint64_t result = sub_256ABF158();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF158()
{
  unint64_t result = qword_269F7A848;
  if (!qword_269F7A848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A848);
  }
  return result;
}

uint64_t sub_256ABF1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABF1D0, (uint64_t (*)(void))sub_256ABF21C);
}

unint64_t sub_256ABF1D0()
{
  unint64_t result = qword_269F7A850;
  if (!qword_269F7A850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A850);
  }
  return result;
}

unint64_t sub_256ABF21C()
{
  unint64_t result = qword_269F7A858;
  if (!qword_269F7A858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A858);
  }
  return result;
}

unint64_t sub_256ABF26C()
{
  unint64_t result = qword_269F7A860;
  if (!qword_269F7A860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A860);
  }
  return result;
}

unint64_t sub_256ABF2B8(uint64_t a1)
{
  unint64_t result = sub_256ABF2E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF2E0()
{
  unint64_t result = qword_269F7A868;
  if (!qword_269F7A868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A868);
  }
  return result;
}

unint64_t sub_256ABF32C(uint64_t a1)
{
  unint64_t result = sub_256ABF354();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF354()
{
  unint64_t result = qword_269F7A870;
  if (!qword_269F7A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A870);
  }
  return result;
}

unint64_t sub_256ABF3A0(uint64_t a1)
{
  unint64_t result = sub_256ABF3C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF3C8()
{
  unint64_t result = qword_26B2B3228;
  if (!qword_26B2B3228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3228);
  }
  return result;
}

uint64_t sub_256ABF414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABF440, (uint64_t (*)(void))sub_256ABF48C);
}

unint64_t sub_256ABF440()
{
  unint64_t result = qword_26B2B3210;
  if (!qword_26B2B3210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3210);
  }
  return result;
}

unint64_t sub_256ABF48C()
{
  unint64_t result = qword_26B2B3220;
  if (!qword_26B2B3220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3220);
  }
  return result;
}

unint64_t sub_256ABF4DC()
{
  unint64_t result = qword_26B2B3218;
  if (!qword_26B2B3218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3218);
  }
  return result;
}

unint64_t sub_256ABF528(uint64_t a1)
{
  unint64_t result = sub_256ABF550();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF550()
{
  unint64_t result = qword_269F7A878;
  if (!qword_269F7A878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A878);
  }
  return result;
}

unint64_t sub_256ABF59C(uint64_t a1)
{
  unint64_t result = sub_256ABF5C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF5C4()
{
  unint64_t result = qword_269F7A880;
  if (!qword_269F7A880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A880);
  }
  return result;
}

unint64_t sub_256ABF610(uint64_t a1)
{
  unint64_t result = sub_256ABF638();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF638()
{
  unint64_t result = qword_26B2B3268;
  if (!qword_26B2B3268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3268);
  }
  return result;
}

uint64_t sub_256ABF684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABF6B0, (uint64_t (*)(void))sub_256ABF6FC);
}

unint64_t sub_256ABF6B0()
{
  unint64_t result = qword_26B2B3250;
  if (!qword_26B2B3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3250);
  }
  return result;
}

unint64_t sub_256ABF6FC()
{
  unint64_t result = qword_26B2B3260;
  if (!qword_26B2B3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3260);
  }
  return result;
}

unint64_t sub_256ABF74C()
{
  unint64_t result = qword_26B2B3258;
  if (!qword_26B2B3258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3258);
  }
  return result;
}

unint64_t sub_256ABF798(uint64_t a1)
{
  unint64_t result = sub_256ABF7C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF7C0()
{
  unint64_t result = qword_269F7A888;
  if (!qword_269F7A888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A888);
  }
  return result;
}

unint64_t sub_256ABF80C(uint64_t a1)
{
  unint64_t result = sub_256ABF834();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF834()
{
  unint64_t result = qword_269F7A890;
  if (!qword_269F7A890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A890);
  }
  return result;
}

unint64_t sub_256ABF880(uint64_t a1)
{
  unint64_t result = sub_256ABF8A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABF8A8()
{
  unint64_t result = qword_269F7A898;
  if (!qword_269F7A898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A898);
  }
  return result;
}

uint64_t sub_256ABF8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABF920, (uint64_t (*)(void))sub_256ABF96C);
}

unint64_t sub_256ABF920()
{
  unint64_t result = qword_269F7A8A0;
  if (!qword_269F7A8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8A0);
  }
  return result;
}

unint64_t sub_256ABF96C()
{
  unint64_t result = qword_269F7A8A8;
  if (!qword_269F7A8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8A8);
  }
  return result;
}

unint64_t sub_256ABF9BC()
{
  unint64_t result = qword_269F7A8B0;
  if (!qword_269F7A8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8B0);
  }
  return result;
}

unint64_t sub_256ABFA08(uint64_t a1)
{
  unint64_t result = sub_256ABFA30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFA30()
{
  unint64_t result = qword_269F7A8B8;
  if (!qword_269F7A8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8B8);
  }
  return result;
}

unint64_t sub_256ABFA7C(uint64_t a1)
{
  unint64_t result = sub_256ABFAA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFAA4()
{
  unint64_t result = qword_269F7A8C0;
  if (!qword_269F7A8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8C0);
  }
  return result;
}

unint64_t sub_256ABFAF0(uint64_t a1)
{
  unint64_t result = sub_256ABFB18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFB18()
{
  unint64_t result = qword_269F7A8C8;
  if (!qword_269F7A8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8C8);
  }
  return result;
}

uint64_t sub_256ABFB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABFB90, (uint64_t (*)(void))sub_256ABFBDC);
}

unint64_t sub_256ABFB90()
{
  unint64_t result = qword_269F7A8D0;
  if (!qword_269F7A8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8D0);
  }
  return result;
}

unint64_t sub_256ABFBDC()
{
  unint64_t result = qword_269F7A8D8;
  if (!qword_269F7A8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8D8);
  }
  return result;
}

unint64_t sub_256ABFC2C()
{
  unint64_t result = qword_269F7A8E0;
  if (!qword_269F7A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8E0);
  }
  return result;
}

unint64_t sub_256ABFC78(uint64_t a1)
{
  unint64_t result = sub_256ABFCA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFCA0()
{
  unint64_t result = qword_269F7A8E8;
  if (!qword_269F7A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8E8);
  }
  return result;
}

unint64_t sub_256ABFCEC(uint64_t a1)
{
  unint64_t result = sub_256ABFD14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFD14()
{
  unint64_t result = qword_269F7A8F0;
  if (!qword_269F7A8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8F0);
  }
  return result;
}

unint64_t sub_256ABFD60(uint64_t a1)
{
  unint64_t result = sub_256ABFD88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFD88()
{
  unint64_t result = qword_269F7A8F8;
  if (!qword_269F7A8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A8F8);
  }
  return result;
}

uint64_t sub_256ABFDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ABFE00, (uint64_t (*)(void))sub_256ABFE4C);
}

unint64_t sub_256ABFE00()
{
  unint64_t result = qword_269F7A900;
  if (!qword_269F7A900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A900);
  }
  return result;
}

unint64_t sub_256ABFE4C()
{
  unint64_t result = qword_269F7A908;
  if (!qword_269F7A908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A908);
  }
  return result;
}

unint64_t sub_256ABFE9C()
{
  unint64_t result = qword_269F7A910;
  if (!qword_269F7A910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A910);
  }
  return result;
}

unint64_t sub_256ABFEE8(uint64_t a1)
{
  unint64_t result = sub_256ABFF10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFF10()
{
  unint64_t result = qword_269F7A918;
  if (!qword_269F7A918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A918);
  }
  return result;
}

unint64_t sub_256ABFF5C(uint64_t a1)
{
  unint64_t result = sub_256ABFF84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFF84()
{
  unint64_t result = qword_269F7A920;
  if (!qword_269F7A920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A920);
  }
  return result;
}

unint64_t sub_256ABFFD0(uint64_t a1)
{
  unint64_t result = sub_256ABFFF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ABFFF8()
{
  unint64_t result = qword_269F7A928;
  if (!qword_269F7A928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A928);
  }
  return result;
}

uint64_t sub_256AC0044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC0070, (uint64_t (*)(void))sub_256AC00BC);
}

unint64_t sub_256AC0070()
{
  unint64_t result = qword_269F7A930;
  if (!qword_269F7A930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A930);
  }
  return result;
}

unint64_t sub_256AC00BC()
{
  unint64_t result = qword_269F7A938;
  if (!qword_269F7A938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A938);
  }
  return result;
}

unint64_t sub_256AC010C()
{
  unint64_t result = qword_269F7A940;
  if (!qword_269F7A940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A940);
  }
  return result;
}

unint64_t sub_256AC0158(uint64_t a1)
{
  unint64_t result = sub_256AC0180();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0180()
{
  unint64_t result = qword_269F7A948;
  if (!qword_269F7A948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A948);
  }
  return result;
}

unint64_t sub_256AC01CC(uint64_t a1)
{
  unint64_t result = sub_256AC01F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC01F4()
{
  unint64_t result = qword_269F7A950;
  if (!qword_269F7A950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A950);
  }
  return result;
}

unint64_t sub_256AC0240(uint64_t a1)
{
  unint64_t result = sub_256AC0268();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0268()
{
  unint64_t result = qword_26B2B3208;
  if (!qword_26B2B3208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3208);
  }
  return result;
}

uint64_t sub_256AC02B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC02E0, (uint64_t (*)(void))sub_256AC032C);
}

unint64_t sub_256AC02E0()
{
  unint64_t result = qword_26B2B31F0;
  if (!qword_26B2B31F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31F0);
  }
  return result;
}

unint64_t sub_256AC032C()
{
  unint64_t result = qword_26B2B3200;
  if (!qword_26B2B3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3200);
  }
  return result;
}

unint64_t sub_256AC037C()
{
  unint64_t result = qword_26B2B31F8;
  if (!qword_26B2B31F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B31F8);
  }
  return result;
}

unint64_t sub_256AC03C8(uint64_t a1)
{
  unint64_t result = sub_256AC03F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC03F0()
{
  unint64_t result = qword_269F7A958;
  if (!qword_269F7A958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A958);
  }
  return result;
}

unint64_t sub_256AC043C(uint64_t a1)
{
  unint64_t result = sub_256AC0464();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0464()
{
  unint64_t result = qword_269F7A960;
  if (!qword_269F7A960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A960);
  }
  return result;
}

unint64_t sub_256AC04B0(uint64_t a1)
{
  unint64_t result = sub_256AC04D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC04D8()
{
  unint64_t result = qword_269F7A968;
  if (!qword_269F7A968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A968);
  }
  return result;
}

uint64_t sub_256AC0524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC0550, (uint64_t (*)(void))sub_256AC059C);
}

unint64_t sub_256AC0550()
{
  unint64_t result = qword_269F7A970;
  if (!qword_269F7A970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A970);
  }
  return result;
}

unint64_t sub_256AC059C()
{
  unint64_t result = qword_269F7A978;
  if (!qword_269F7A978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A978);
  }
  return result;
}

unint64_t sub_256AC05EC()
{
  unint64_t result = qword_269F7A980;
  if (!qword_269F7A980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A980);
  }
  return result;
}

unint64_t sub_256AC0638(uint64_t a1)
{
  unint64_t result = sub_256AC0660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0660()
{
  unint64_t result = qword_269F7A988;
  if (!qword_269F7A988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A988);
  }
  return result;
}

unint64_t sub_256AC06AC(uint64_t a1)
{
  unint64_t result = sub_256AC06D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC06D4()
{
  unint64_t result = qword_269F7A990;
  if (!qword_269F7A990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A990);
  }
  return result;
}

unint64_t sub_256AC0720(uint64_t a1)
{
  unint64_t result = sub_256AC0748();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0748()
{
  unint64_t result = qword_269F7A998;
  if (!qword_269F7A998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A998);
  }
  return result;
}

uint64_t sub_256AC0794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC07C0, (uint64_t (*)(void))sub_256AC080C);
}

unint64_t sub_256AC07C0()
{
  unint64_t result = qword_269F7A9A0;
  if (!qword_269F7A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9A0);
  }
  return result;
}

unint64_t sub_256AC080C()
{
  unint64_t result = qword_269F7A9A8;
  if (!qword_269F7A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9A8);
  }
  return result;
}

unint64_t sub_256AC085C()
{
  unint64_t result = qword_269F7A9B0;
  if (!qword_269F7A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9B0);
  }
  return result;
}

unint64_t sub_256AC08A8(uint64_t a1)
{
  unint64_t result = sub_256AC08D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC08D0()
{
  unint64_t result = qword_269F7A9B8;
  if (!qword_269F7A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9B8);
  }
  return result;
}

unint64_t sub_256AC091C(uint64_t a1)
{
  unint64_t result = sub_256AC0944();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0944()
{
  unint64_t result = qword_269F7A9C0;
  if (!qword_269F7A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9C0);
  }
  return result;
}

unint64_t sub_256AC0990(uint64_t a1)
{
  unint64_t result = sub_256AC09B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC09B8()
{
  unint64_t result = qword_269F7A9C8;
  if (!qword_269F7A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9C8);
  }
  return result;
}

uint64_t sub_256AC0A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC0A30, (uint64_t (*)(void))sub_256AC0A7C);
}

unint64_t sub_256AC0A30()
{
  unint64_t result = qword_269F7A9D0;
  if (!qword_269F7A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9D0);
  }
  return result;
}

unint64_t sub_256AC0A7C()
{
  unint64_t result = qword_269F7A9D8;
  if (!qword_269F7A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9D8);
  }
  return result;
}

unint64_t sub_256AC0ACC()
{
  unint64_t result = qword_269F7A9E0;
  if (!qword_269F7A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9E0);
  }
  return result;
}

unint64_t sub_256AC0B18(uint64_t a1)
{
  unint64_t result = sub_256AC0B40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0B40()
{
  unint64_t result = qword_269F7A9E8;
  if (!qword_269F7A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9E8);
  }
  return result;
}

unint64_t sub_256AC0B8C(uint64_t a1)
{
  unint64_t result = sub_256AC0BB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0BB4()
{
  unint64_t result = qword_269F7A9F0;
  if (!qword_269F7A9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9F0);
  }
  return result;
}

unint64_t sub_256AC0C00(uint64_t a1)
{
  unint64_t result = sub_256AC0C28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0C28()
{
  unint64_t result = qword_269F7A9F8;
  if (!qword_269F7A9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7A9F8);
  }
  return result;
}

uint64_t sub_256AC0C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC0CA0, (uint64_t (*)(void))sub_256AC0CEC);
}

unint64_t sub_256AC0CA0()
{
  unint64_t result = qword_269F7AA00;
  if (!qword_269F7AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA00);
  }
  return result;
}

unint64_t sub_256AC0CEC()
{
  unint64_t result = qword_269F7AA08;
  if (!qword_269F7AA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA08);
  }
  return result;
}

unint64_t sub_256AC0D3C()
{
  unint64_t result = qword_269F7AA10;
  if (!qword_269F7AA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA10);
  }
  return result;
}

unint64_t sub_256AC0D88(uint64_t a1)
{
  unint64_t result = sub_256AC0DB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0DB0()
{
  unint64_t result = qword_269F7AA18;
  if (!qword_269F7AA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA18);
  }
  return result;
}

unint64_t sub_256AC0DFC(uint64_t a1)
{
  unint64_t result = sub_256AC0E24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0E24()
{
  unint64_t result = qword_269F7AA20;
  if (!qword_269F7AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA20);
  }
  return result;
}

unint64_t sub_256AC0E70(uint64_t a1)
{
  unint64_t result = sub_256AC0E98();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC0E98()
{
  unint64_t result = qword_269F7AA28;
  if (!qword_269F7AA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA28);
  }
  return result;
}

uint64_t sub_256AC0EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC0F10, (uint64_t (*)(void))sub_256AC0F5C);
}

unint64_t sub_256AC0F10()
{
  unint64_t result = qword_269F7AA30;
  if (!qword_269F7AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA30);
  }
  return result;
}

unint64_t sub_256AC0F5C()
{
  unint64_t result = qword_269F7AA38;
  if (!qword_269F7AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA38);
  }
  return result;
}

unint64_t sub_256AC0FAC()
{
  unint64_t result = qword_269F7AA40;
  if (!qword_269F7AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA40);
  }
  return result;
}

unint64_t sub_256AC0FF8(uint64_t a1)
{
  unint64_t result = sub_256AC1020();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1020()
{
  unint64_t result = qword_269F7AA48;
  if (!qword_269F7AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA48);
  }
  return result;
}

unint64_t sub_256AC106C(uint64_t a1)
{
  unint64_t result = sub_256AC1094();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1094()
{
  unint64_t result = qword_269F7AA50;
  if (!qword_269F7AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA50);
  }
  return result;
}

unint64_t sub_256AC10E0(uint64_t a1)
{
  unint64_t result = sub_256AC1108();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1108()
{
  unint64_t result = qword_269F7AA58;
  if (!qword_269F7AA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA58);
  }
  return result;
}

uint64_t sub_256AC1154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC1180, (uint64_t (*)(void))sub_256AC11CC);
}

unint64_t sub_256AC1180()
{
  unint64_t result = qword_269F7AA60;
  if (!qword_269F7AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA60);
  }
  return result;
}

unint64_t sub_256AC11CC()
{
  unint64_t result = qword_269F7AA68;
  if (!qword_269F7AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA68);
  }
  return result;
}

unint64_t sub_256AC121C()
{
  unint64_t result = qword_269F7AA70;
  if (!qword_269F7AA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA70);
  }
  return result;
}

unint64_t sub_256AC1268(uint64_t a1)
{
  unint64_t result = sub_256AC1290();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1290()
{
  unint64_t result = qword_269F7AA78;
  if (!qword_269F7AA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA78);
  }
  return result;
}

unint64_t sub_256AC12DC(uint64_t a1)
{
  unint64_t result = sub_256AC1304();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1304()
{
  unint64_t result = qword_269F7AA80;
  if (!qword_269F7AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA80);
  }
  return result;
}

unint64_t sub_256AC1350(uint64_t a1)
{
  unint64_t result = sub_256AC1378();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1378()
{
  unint64_t result = qword_269F7AA88;
  if (!qword_269F7AA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA88);
  }
  return result;
}

uint64_t sub_256AC13C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC13F0, (uint64_t (*)(void))sub_256AC143C);
}

unint64_t sub_256AC13F0()
{
  unint64_t result = qword_269F7AA90;
  if (!qword_269F7AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA90);
  }
  return result;
}

unint64_t sub_256AC143C()
{
  unint64_t result = qword_269F7AA98;
  if (!qword_269F7AA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AA98);
  }
  return result;
}

unint64_t sub_256AC148C()
{
  unint64_t result = qword_269F7AAA0;
  if (!qword_269F7AAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAA0);
  }
  return result;
}

unint64_t sub_256AC14D8(uint64_t a1)
{
  unint64_t result = sub_256AC1500();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1500()
{
  unint64_t result = qword_269F7AAA8;
  if (!qword_269F7AAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAA8);
  }
  return result;
}

unint64_t sub_256AC154C(uint64_t a1)
{
  unint64_t result = sub_256AC1574();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1574()
{
  unint64_t result = qword_269F7AAB0;
  if (!qword_269F7AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAB0);
  }
  return result;
}

unint64_t sub_256AC15C0(uint64_t a1)
{
  unint64_t result = sub_256AC15E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC15E8()
{
  unint64_t result = qword_269F7AAB8;
  if (!qword_269F7AAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAB8);
  }
  return result;
}

uint64_t sub_256AC1634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC1660, (uint64_t (*)(void))sub_256AC16AC);
}

unint64_t sub_256AC1660()
{
  unint64_t result = qword_269F7AAC0;
  if (!qword_269F7AAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAC0);
  }
  return result;
}

unint64_t sub_256AC16AC()
{
  unint64_t result = qword_269F7AAC8;
  if (!qword_269F7AAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAC8);
  }
  return result;
}

unint64_t sub_256AC16FC()
{
  unint64_t result = qword_269F7AAD0;
  if (!qword_269F7AAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAD0);
  }
  return result;
}

unint64_t sub_256AC1748(uint64_t a1)
{
  unint64_t result = sub_256AC1770();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1770()
{
  unint64_t result = qword_269F7AAD8;
  if (!qword_269F7AAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAD8);
  }
  return result;
}

unint64_t sub_256AC17BC(uint64_t a1)
{
  unint64_t result = sub_256AC17E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC17E4()
{
  unint64_t result = qword_269F7AAE0;
  if (!qword_269F7AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAE0);
  }
  return result;
}

unint64_t sub_256AC1830(uint64_t a1)
{
  unint64_t result = sub_256AC1858();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1858()
{
  unint64_t result = qword_269F7AAE8;
  if (!qword_269F7AAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAE8);
  }
  return result;
}

uint64_t sub_256AC18A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC18D0, (uint64_t (*)(void))sub_256AC191C);
}

unint64_t sub_256AC18D0()
{
  unint64_t result = qword_269F7AAF0;
  if (!qword_269F7AAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAF0);
  }
  return result;
}

unint64_t sub_256AC191C()
{
  unint64_t result = qword_269F7AAF8;
  if (!qword_269F7AAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AAF8);
  }
  return result;
}

unint64_t sub_256AC196C()
{
  unint64_t result = qword_269F7AB00;
  if (!qword_269F7AB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB00);
  }
  return result;
}

unint64_t sub_256AC19B8(uint64_t a1)
{
  unint64_t result = sub_256AC19E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC19E0()
{
  unint64_t result = qword_269F7AB08;
  if (!qword_269F7AB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB08);
  }
  return result;
}

unint64_t sub_256AC1A2C(uint64_t a1)
{
  unint64_t result = sub_256AC1A54();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1A54()
{
  unint64_t result = qword_269F7AB10;
  if (!qword_269F7AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB10);
  }
  return result;
}

unint64_t sub_256AC1AA0(uint64_t a1)
{
  unint64_t result = sub_256AC1AC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1AC8()
{
  unint64_t result = qword_269F7AB18;
  if (!qword_269F7AB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB18);
  }
  return result;
}

uint64_t sub_256AC1B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC1B40, (uint64_t (*)(void))sub_256AC1B8C);
}

unint64_t sub_256AC1B40()
{
  unint64_t result = qword_269F7AB20;
  if (!qword_269F7AB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB20);
  }
  return result;
}

unint64_t sub_256AC1B8C()
{
  unint64_t result = qword_269F7AB28;
  if (!qword_269F7AB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB28);
  }
  return result;
}

unint64_t sub_256AC1BDC()
{
  unint64_t result = qword_269F7AB30;
  if (!qword_269F7AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB30);
  }
  return result;
}

unint64_t sub_256AC1C28(uint64_t a1)
{
  unint64_t result = sub_256AC1C50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1C50()
{
  unint64_t result = qword_269F7AB38;
  if (!qword_269F7AB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB38);
  }
  return result;
}

unint64_t sub_256AC1C9C(uint64_t a1)
{
  unint64_t result = sub_256AC1CC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1CC4()
{
  unint64_t result = qword_269F7AB40;
  if (!qword_269F7AB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB40);
  }
  return result;
}

unint64_t sub_256AC1D10(uint64_t a1)
{
  unint64_t result = sub_256AC1D38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1D38()
{
  unint64_t result = qword_269F7AB48;
  if (!qword_269F7AB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB48);
  }
  return result;
}

uint64_t sub_256AC1D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC1DB0, (uint64_t (*)(void))sub_256AC1DFC);
}

unint64_t sub_256AC1DB0()
{
  unint64_t result = qword_269F7AB50;
  if (!qword_269F7AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB50);
  }
  return result;
}

unint64_t sub_256AC1DFC()
{
  unint64_t result = qword_269F7AB58;
  if (!qword_269F7AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB58);
  }
  return result;
}

unint64_t sub_256AC1E4C()
{
  unint64_t result = qword_269F7AB60;
  if (!qword_269F7AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB60);
  }
  return result;
}

unint64_t sub_256AC1E98(uint64_t a1)
{
  unint64_t result = sub_256AC1EC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1EC0()
{
  unint64_t result = qword_269F7AB68;
  if (!qword_269F7AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB68);
  }
  return result;
}

unint64_t sub_256AC1F0C(uint64_t a1)
{
  unint64_t result = sub_256AC1F34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1F34()
{
  unint64_t result = qword_269F7AB70;
  if (!qword_269F7AB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB70);
  }
  return result;
}

unint64_t sub_256AC1F80(uint64_t a1)
{
  unint64_t result = sub_256AC1FA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC1FA8()
{
  unint64_t result = qword_269F7AB78;
  if (!qword_269F7AB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB78);
  }
  return result;
}

uint64_t sub_256AC1FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC2020, (uint64_t (*)(void))sub_256AC206C);
}

unint64_t sub_256AC2020()
{
  unint64_t result = qword_269F7AB80;
  if (!qword_269F7AB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB80);
  }
  return result;
}

unint64_t sub_256AC206C()
{
  unint64_t result = qword_269F7AB88;
  if (!qword_269F7AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB88);
  }
  return result;
}

unint64_t sub_256AC20BC()
{
  unint64_t result = qword_269F7AB90;
  if (!qword_269F7AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB90);
  }
  return result;
}

unint64_t sub_256AC2108(uint64_t a1)
{
  unint64_t result = sub_256AC2130();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2130()
{
  unint64_t result = qword_269F7AB98;
  if (!qword_269F7AB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AB98);
  }
  return result;
}

unint64_t sub_256AC217C(uint64_t a1)
{
  unint64_t result = sub_256AC21A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC21A4()
{
  unint64_t result = qword_269F7ABA0;
  if (!qword_269F7ABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABA0);
  }
  return result;
}

unint64_t sub_256AC21F0(uint64_t a1)
{
  unint64_t result = sub_256AC2218();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2218()
{
  unint64_t result = qword_269F7ABA8;
  if (!qword_269F7ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABA8);
  }
  return result;
}

uint64_t sub_256AC2264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC2290, (uint64_t (*)(void))sub_256AC22DC);
}

unint64_t sub_256AC2290()
{
  unint64_t result = qword_269F7ABB0;
  if (!qword_269F7ABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABB0);
  }
  return result;
}

unint64_t sub_256AC22DC()
{
  unint64_t result = qword_269F7ABB8;
  if (!qword_269F7ABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABB8);
  }
  return result;
}

unint64_t sub_256AC232C()
{
  unint64_t result = qword_269F7ABC0;
  if (!qword_269F7ABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABC0);
  }
  return result;
}

unint64_t sub_256AC2378(uint64_t a1)
{
  unint64_t result = sub_256AC23A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC23A0()
{
  unint64_t result = qword_269F7ABC8;
  if (!qword_269F7ABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABC8);
  }
  return result;
}

unint64_t sub_256AC23EC(uint64_t a1)
{
  unint64_t result = sub_256AC2414();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2414()
{
  unint64_t result = qword_269F7ABD0;
  if (!qword_269F7ABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABD0);
  }
  return result;
}

unint64_t sub_256AC2460(uint64_t a1)
{
  unint64_t result = sub_256AC2488();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2488()
{
  unint64_t result = qword_269F7ABD8;
  if (!qword_269F7ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABD8);
  }
  return result;
}

uint64_t sub_256AC24D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC2500, (uint64_t (*)(void))sub_256AC254C);
}

unint64_t sub_256AC2500()
{
  unint64_t result = qword_269F7ABE0;
  if (!qword_269F7ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABE0);
  }
  return result;
}

unint64_t sub_256AC254C()
{
  unint64_t result = qword_269F7ABE8;
  if (!qword_269F7ABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABE8);
  }
  return result;
}

unint64_t sub_256AC259C()
{
  unint64_t result = qword_269F7ABF0;
  if (!qword_269F7ABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABF0);
  }
  return result;
}

unint64_t sub_256AC25E8(uint64_t a1)
{
  unint64_t result = sub_256AC2610();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2610()
{
  unint64_t result = qword_269F7ABF8;
  if (!qword_269F7ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ABF8);
  }
  return result;
}

unint64_t sub_256AC265C(uint64_t a1)
{
  unint64_t result = sub_256AC2684();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2684()
{
  unint64_t result = qword_269F7AC00;
  if (!qword_269F7AC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC00);
  }
  return result;
}

unint64_t sub_256AC26D0(uint64_t a1)
{
  unint64_t result = sub_256AC26F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC26F8()
{
  unint64_t result = qword_269F7AC08;
  if (!qword_269F7AC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC08);
  }
  return result;
}

uint64_t sub_256AC2744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC2770, (uint64_t (*)(void))sub_256AC27BC);
}

unint64_t sub_256AC2770()
{
  unint64_t result = qword_269F7AC10;
  if (!qword_269F7AC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC10);
  }
  return result;
}

unint64_t sub_256AC27BC()
{
  unint64_t result = qword_269F7AC18;
  if (!qword_269F7AC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC18);
  }
  return result;
}

unint64_t sub_256AC280C()
{
  unint64_t result = qword_269F7AC20;
  if (!qword_269F7AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC20);
  }
  return result;
}

unint64_t sub_256AC2858(uint64_t a1)
{
  unint64_t result = sub_256AC2880();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2880()
{
  unint64_t result = qword_269F7AC28;
  if (!qword_269F7AC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC28);
  }
  return result;
}

unint64_t sub_256AC28CC(uint64_t a1)
{
  unint64_t result = sub_256AC28F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC28F4()
{
  unint64_t result = qword_269F7AC30;
  if (!qword_269F7AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC30);
  }
  return result;
}

unint64_t sub_256AC2940(uint64_t a1)
{
  unint64_t result = sub_256AC2968();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2968()
{
  unint64_t result = qword_269F7AC38;
  if (!qword_269F7AC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC38);
  }
  return result;
}

uint64_t sub_256AC29B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC29E0, (uint64_t (*)(void))sub_256AC2A2C);
}

unint64_t sub_256AC29E0()
{
  unint64_t result = qword_269F7AC40;
  if (!qword_269F7AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC40);
  }
  return result;
}

unint64_t sub_256AC2A2C()
{
  unint64_t result = qword_269F7AC48;
  if (!qword_269F7AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC48);
  }
  return result;
}

unint64_t sub_256AC2A7C()
{
  unint64_t result = qword_269F7AC50;
  if (!qword_269F7AC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC50);
  }
  return result;
}

unint64_t sub_256AC2AC8(uint64_t a1)
{
  unint64_t result = sub_256AC2AF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2AF0()
{
  unint64_t result = qword_269F7AC58;
  if (!qword_269F7AC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC58);
  }
  return result;
}

unint64_t sub_256AC2B3C(uint64_t a1)
{
  unint64_t result = sub_256AC2B64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2B64()
{
  unint64_t result = qword_269F7AC60;
  if (!qword_269F7AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC60);
  }
  return result;
}

unint64_t sub_256AC2BB0(uint64_t a1)
{
  unint64_t result = sub_256AC2BD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2BD8()
{
  unint64_t result = qword_269F7AC68;
  if (!qword_269F7AC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC68);
  }
  return result;
}

uint64_t sub_256AC2C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC2C50, (uint64_t (*)(void))sub_256AC2C9C);
}

unint64_t sub_256AC2C50()
{
  unint64_t result = qword_269F7AC70;
  if (!qword_269F7AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC70);
  }
  return result;
}

unint64_t sub_256AC2C9C()
{
  unint64_t result = qword_269F7AC78;
  if (!qword_269F7AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC78);
  }
  return result;
}

unint64_t sub_256AC2CEC()
{
  unint64_t result = qword_269F7AC80;
  if (!qword_269F7AC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC80);
  }
  return result;
}

unint64_t sub_256AC2D38(uint64_t a1)
{
  unint64_t result = sub_256AC2D60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2D60()
{
  unint64_t result = qword_269F7AC88;
  if (!qword_269F7AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC88);
  }
  return result;
}

unint64_t sub_256AC2DAC(uint64_t a1)
{
  unint64_t result = sub_256AC2DD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2DD4()
{
  unint64_t result = qword_269F7AC90;
  if (!qword_269F7AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC90);
  }
  return result;
}

unint64_t sub_256AC2E20(uint64_t a1)
{
  unint64_t result = sub_256AC2E48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2E48()
{
  unint64_t result = qword_269F7AC98;
  if (!qword_269F7AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AC98);
  }
  return result;
}

uint64_t sub_256AC2E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC2EC0, (uint64_t (*)(void))sub_256AC2F0C);
}

unint64_t sub_256AC2EC0()
{
  unint64_t result = qword_269F7ACA0;
  if (!qword_269F7ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACA0);
  }
  return result;
}

unint64_t sub_256AC2F0C()
{
  unint64_t result = qword_269F7ACA8;
  if (!qword_269F7ACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACA8);
  }
  return result;
}

unint64_t sub_256AC2F5C()
{
  unint64_t result = qword_269F7ACB0;
  if (!qword_269F7ACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACB0);
  }
  return result;
}

unint64_t sub_256AC2FA8(uint64_t a1)
{
  unint64_t result = sub_256AC2FD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC2FD0()
{
  unint64_t result = qword_269F7ACB8;
  if (!qword_269F7ACB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACB8);
  }
  return result;
}

unint64_t sub_256AC301C(uint64_t a1)
{
  unint64_t result = sub_256AC3044();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3044()
{
  unint64_t result = qword_269F7ACC0;
  if (!qword_269F7ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACC0);
  }
  return result;
}

unint64_t sub_256AC3090(uint64_t a1)
{
  unint64_t result = sub_256AC30B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC30B8()
{
  unint64_t result = qword_269F7ACC8;
  if (!qword_269F7ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACC8);
  }
  return result;
}

uint64_t sub_256AC3104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3130, (uint64_t (*)(void))sub_256AC317C);
}

unint64_t sub_256AC3130()
{
  unint64_t result = qword_269F7ACD0;
  if (!qword_269F7ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACD0);
  }
  return result;
}

unint64_t sub_256AC317C()
{
  unint64_t result = qword_269F7ACD8;
  if (!qword_269F7ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACD8);
  }
  return result;
}

unint64_t sub_256AC31CC()
{
  unint64_t result = qword_269F7ACE0;
  if (!qword_269F7ACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACE0);
  }
  return result;
}

unint64_t sub_256AC3218(uint64_t a1)
{
  unint64_t result = sub_256AC3240();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3240()
{
  unint64_t result = qword_269F7ACE8;
  if (!qword_269F7ACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACE8);
  }
  return result;
}

unint64_t sub_256AC328C(uint64_t a1)
{
  unint64_t result = sub_256AC32B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC32B4()
{
  unint64_t result = qword_269F7ACF0;
  if (!qword_269F7ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACF0);
  }
  return result;
}

uint64_t sub_256AC3300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC332C, (uint64_t (*)(void))sub_256AC3378);
}

unint64_t sub_256AC332C()
{
  unint64_t result = qword_269F7ACF8;
  if (!qword_269F7ACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ACF8);
  }
  return result;
}

unint64_t sub_256AC3378()
{
  unint64_t result = qword_269F7AD00;
  if (!qword_269F7AD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD00);
  }
  return result;
}

unint64_t sub_256AC33C8()
{
  unint64_t result = qword_269F7AD08;
  if (!qword_269F7AD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD08);
  }
  return result;
}

unint64_t sub_256AC3414(uint64_t a1)
{
  unint64_t result = sub_256AC343C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC343C()
{
  unint64_t result = qword_269F7AD10;
  if (!qword_269F7AD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD10);
  }
  return result;
}

unint64_t sub_256AC3488(uint64_t a1)
{
  unint64_t result = sub_256AC34B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC34B0()
{
  unint64_t result = qword_269F7AD18;
  if (!qword_269F7AD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD18);
  }
  return result;
}

uint64_t sub_256AC34FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3528, (uint64_t (*)(void))sub_256AC3574);
}

unint64_t sub_256AC3528()
{
  unint64_t result = qword_269F7AD20;
  if (!qword_269F7AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD20);
  }
  return result;
}

unint64_t sub_256AC3574()
{
  unint64_t result = qword_269F7AD28;
  if (!qword_269F7AD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD28);
  }
  return result;
}

unint64_t sub_256AC35C4()
{
  unint64_t result = qword_269F7AD30;
  if (!qword_269F7AD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD30);
  }
  return result;
}

unint64_t sub_256AC3610(uint64_t a1)
{
  unint64_t result = sub_256AC3638();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3638()
{
  unint64_t result = qword_269F7AD38;
  if (!qword_269F7AD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD38);
  }
  return result;
}

unint64_t sub_256AC3684(uint64_t a1)
{
  unint64_t result = sub_256AC36AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC36AC()
{
  unint64_t result = qword_269F7AD40;
  if (!qword_269F7AD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD40);
  }
  return result;
}

uint64_t sub_256AC36F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3724, (uint64_t (*)(void))sub_256AC3770);
}

unint64_t sub_256AC3724()
{
  unint64_t result = qword_269F7AD48;
  if (!qword_269F7AD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD48);
  }
  return result;
}

unint64_t sub_256AC3770()
{
  unint64_t result = qword_269F7AD50;
  if (!qword_269F7AD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD50);
  }
  return result;
}

unint64_t sub_256AC37C0()
{
  unint64_t result = qword_269F7AD58;
  if (!qword_269F7AD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD58);
  }
  return result;
}

unint64_t sub_256AC380C(uint64_t a1)
{
  unint64_t result = sub_256AC3834();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3834()
{
  unint64_t result = qword_269F7AD60;
  if (!qword_269F7AD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD60);
  }
  return result;
}

unint64_t sub_256AC3880(uint64_t a1)
{
  unint64_t result = sub_256AC38A8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC38A8()
{
  unint64_t result = qword_269F7AD68;
  if (!qword_269F7AD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD68);
  }
  return result;
}

uint64_t sub_256AC38F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3920, (uint64_t (*)(void))sub_256AC396C);
}

unint64_t sub_256AC3920()
{
  unint64_t result = qword_269F7AD70;
  if (!qword_269F7AD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD70);
  }
  return result;
}

unint64_t sub_256AC396C()
{
  unint64_t result = qword_269F7AD78;
  if (!qword_269F7AD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD78);
  }
  return result;
}

unint64_t sub_256AC39BC()
{
  unint64_t result = qword_269F7AD80;
  if (!qword_269F7AD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD80);
  }
  return result;
}

unint64_t sub_256AC3A08(uint64_t a1)
{
  unint64_t result = sub_256AC3A30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3A30()
{
  unint64_t result = qword_269F7AD88;
  if (!qword_269F7AD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD88);
  }
  return result;
}

unint64_t sub_256AC3A7C(uint64_t a1)
{
  unint64_t result = sub_256AC3AA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3AA4()
{
  unint64_t result = qword_269F7AD90;
  if (!qword_269F7AD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD90);
  }
  return result;
}

uint64_t sub_256AC3AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3B1C, (uint64_t (*)(void))sub_256AC3B68);
}

unint64_t sub_256AC3B1C()
{
  unint64_t result = qword_269F7AD98;
  if (!qword_269F7AD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AD98);
  }
  return result;
}

unint64_t sub_256AC3B68()
{
  unint64_t result = qword_269F7ADA0;
  if (!qword_269F7ADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADA0);
  }
  return result;
}

unint64_t sub_256AC3BB8()
{
  unint64_t result = qword_269F7ADA8;
  if (!qword_269F7ADA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADA8);
  }
  return result;
}

unint64_t sub_256AC3C04(uint64_t a1)
{
  unint64_t result = sub_256AC3C2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3C2C()
{
  unint64_t result = qword_269F7ADB0;
  if (!qword_269F7ADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADB0);
  }
  return result;
}

unint64_t sub_256AC3C78(uint64_t a1)
{
  unint64_t result = sub_256AC3CA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3CA0()
{
  unint64_t result = qword_269F7ADB8;
  if (!qword_269F7ADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADB8);
  }
  return result;
}

uint64_t sub_256AC3CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3D18, (uint64_t (*)(void))sub_256AC3D64);
}

unint64_t sub_256AC3D18()
{
  unint64_t result = qword_269F7ADC0;
  if (!qword_269F7ADC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADC0);
  }
  return result;
}

unint64_t sub_256AC3D64()
{
  unint64_t result = qword_269F7ADC8;
  if (!qword_269F7ADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADC8);
  }
  return result;
}

unint64_t sub_256AC3DB4()
{
  unint64_t result = qword_269F7ADD0;
  if (!qword_269F7ADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADD0);
  }
  return result;
}

unint64_t sub_256AC3E00(uint64_t a1)
{
  unint64_t result = sub_256AC3E28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3E28()
{
  unint64_t result = qword_269F7ADD8;
  if (!qword_269F7ADD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADD8);
  }
  return result;
}

unint64_t sub_256AC3E74(uint64_t a1)
{
  unint64_t result = sub_256AC3E9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC3E9C()
{
  unint64_t result = qword_269F7ADE0;
  if (!qword_269F7ADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADE0);
  }
  return result;
}

uint64_t sub_256AC3EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC3F14, (uint64_t (*)(void))sub_256AC3F60);
}

unint64_t sub_256AC3F14()
{
  unint64_t result = qword_269F7ADE8;
  if (!qword_269F7ADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADE8);
  }
  return result;
}

unint64_t sub_256AC3F60()
{
  unint64_t result = qword_269F7ADF0;
  if (!qword_269F7ADF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADF0);
  }
  return result;
}

unint64_t sub_256AC3FB0()
{
  unint64_t result = qword_269F7ADF8;
  if (!qword_269F7ADF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7ADF8);
  }
  return result;
}

unint64_t sub_256AC3FFC(uint64_t a1)
{
  unint64_t result = sub_256AC4024();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4024()
{
  unint64_t result = qword_269F7AE00;
  if (!qword_269F7AE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE00);
  }
  return result;
}

unint64_t sub_256AC4070(uint64_t a1)
{
  unint64_t result = sub_256AC4098();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4098()
{
  unint64_t result = qword_269F7AE08;
  if (!qword_269F7AE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE08);
  }
  return result;
}

uint64_t sub_256AC40E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4110, (uint64_t (*)(void))sub_256AC415C);
}

unint64_t sub_256AC4110()
{
  unint64_t result = qword_269F7AE10;
  if (!qword_269F7AE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE10);
  }
  return result;
}

unint64_t sub_256AC415C()
{
  unint64_t result = qword_269F7AE18;
  if (!qword_269F7AE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE18);
  }
  return result;
}

unint64_t sub_256AC41AC()
{
  unint64_t result = qword_269F7AE20;
  if (!qword_269F7AE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE20);
  }
  return result;
}

unint64_t sub_256AC41F8(uint64_t a1)
{
  unint64_t result = sub_256AC4220();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4220()
{
  unint64_t result = qword_269F7AE28;
  if (!qword_269F7AE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE28);
  }
  return result;
}

unint64_t sub_256AC426C(uint64_t a1)
{
  unint64_t result = sub_256AC4294();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4294()
{
  unint64_t result = qword_269F7AE30;
  if (!qword_269F7AE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE30);
  }
  return result;
}

uint64_t sub_256AC42E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC430C, (uint64_t (*)(void))sub_256AC4358);
}

unint64_t sub_256AC430C()
{
  unint64_t result = qword_269F7AE38;
  if (!qword_269F7AE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE38);
  }
  return result;
}

unint64_t sub_256AC4358()
{
  unint64_t result = qword_269F7AE40;
  if (!qword_269F7AE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE40);
  }
  return result;
}

unint64_t sub_256AC43A8()
{
  unint64_t result = qword_269F7AE48;
  if (!qword_269F7AE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE48);
  }
  return result;
}

unint64_t sub_256AC43F4(uint64_t a1)
{
  unint64_t result = sub_256AC441C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC441C()
{
  unint64_t result = qword_269F7AE50;
  if (!qword_269F7AE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE50);
  }
  return result;
}

unint64_t sub_256AC4468(uint64_t a1)
{
  unint64_t result = sub_256AC4490();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4490()
{
  unint64_t result = qword_269F7AE58;
  if (!qword_269F7AE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE58);
  }
  return result;
}

uint64_t sub_256AC44DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4508, (uint64_t (*)(void))sub_256AC4554);
}

unint64_t sub_256AC4508()
{
  unint64_t result = qword_269F7AE60;
  if (!qword_269F7AE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE60);
  }
  return result;
}

unint64_t sub_256AC4554()
{
  unint64_t result = qword_269F7AE68;
  if (!qword_269F7AE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE68);
  }
  return result;
}

unint64_t sub_256AC45A4()
{
  unint64_t result = qword_269F7AE70;
  if (!qword_269F7AE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE70);
  }
  return result;
}

unint64_t sub_256AC45F0(uint64_t a1)
{
  unint64_t result = sub_256AC4618();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4618()
{
  unint64_t result = qword_269F7AE78;
  if (!qword_269F7AE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE78);
  }
  return result;
}

unint64_t sub_256AC4664(uint64_t a1)
{
  unint64_t result = sub_256AC468C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC468C()
{
  unint64_t result = qword_269F7AE80;
  if (!qword_269F7AE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE80);
  }
  return result;
}

uint64_t sub_256AC46D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4704, (uint64_t (*)(void))sub_256AC4750);
}

unint64_t sub_256AC4704()
{
  unint64_t result = qword_269F7AE88;
  if (!qword_269F7AE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE88);
  }
  return result;
}

unint64_t sub_256AC4750()
{
  unint64_t result = qword_269F7AE90;
  if (!qword_269F7AE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE90);
  }
  return result;
}

unint64_t sub_256AC47A0()
{
  unint64_t result = qword_269F7AE98;
  if (!qword_269F7AE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AE98);
  }
  return result;
}

unint64_t sub_256AC47EC(uint64_t a1)
{
  unint64_t result = sub_256AC4814();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4814()
{
  unint64_t result = qword_269F7AEA0;
  if (!qword_269F7AEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEA0);
  }
  return result;
}

unint64_t sub_256AC4860(uint64_t a1)
{
  unint64_t result = sub_256AC4888();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4888()
{
  unint64_t result = qword_269F7AEA8;
  if (!qword_269F7AEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEA8);
  }
  return result;
}

uint64_t sub_256AC48D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4900, (uint64_t (*)(void))sub_256AC494C);
}

unint64_t sub_256AC4900()
{
  unint64_t result = qword_269F7AEB0;
  if (!qword_269F7AEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEB0);
  }
  return result;
}

unint64_t sub_256AC494C()
{
  unint64_t result = qword_269F7AEB8;
  if (!qword_269F7AEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEB8);
  }
  return result;
}

unint64_t sub_256AC499C()
{
  unint64_t result = qword_269F7AEC0;
  if (!qword_269F7AEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEC0);
  }
  return result;
}

unint64_t sub_256AC49E8(uint64_t a1)
{
  unint64_t result = sub_256AC4A10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4A10()
{
  unint64_t result = qword_269F7AEC8;
  if (!qword_269F7AEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEC8);
  }
  return result;
}

unint64_t sub_256AC4A5C(uint64_t a1)
{
  unint64_t result = sub_256AC4A84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4A84()
{
  unint64_t result = qword_269F7AED0;
  if (!qword_269F7AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AED0);
  }
  return result;
}

uint64_t sub_256AC4AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4AFC, (uint64_t (*)(void))sub_256AC4B48);
}

unint64_t sub_256AC4AFC()
{
  unint64_t result = qword_269F7AED8;
  if (!qword_269F7AED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AED8);
  }
  return result;
}

unint64_t sub_256AC4B48()
{
  unint64_t result = qword_269F7AEE0;
  if (!qword_269F7AEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEE0);
  }
  return result;
}

unint64_t sub_256AC4B98()
{
  unint64_t result = qword_269F7AEE8;
  if (!qword_269F7AEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEE8);
  }
  return result;
}

unint64_t sub_256AC4BE4(uint64_t a1)
{
  unint64_t result = sub_256AC4C0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4C0C()
{
  unint64_t result = qword_269F7AEF0;
  if (!qword_269F7AEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEF0);
  }
  return result;
}

unint64_t sub_256AC4C58(uint64_t a1)
{
  unint64_t result = sub_256AC4C80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4C80()
{
  unint64_t result = qword_269F7AEF8;
  if (!qword_269F7AEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AEF8);
  }
  return result;
}

uint64_t sub_256AC4CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4CF8, (uint64_t (*)(void))sub_256AC4D44);
}

unint64_t sub_256AC4CF8()
{
  unint64_t result = qword_269F7AF00;
  if (!qword_269F7AF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF00);
  }
  return result;
}

unint64_t sub_256AC4D44()
{
  unint64_t result = qword_269F7AF08;
  if (!qword_269F7AF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF08);
  }
  return result;
}

unint64_t sub_256AC4D94()
{
  unint64_t result = qword_269F7AF10;
  if (!qword_269F7AF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF10);
  }
  return result;
}

unint64_t sub_256AC4DE0(uint64_t a1)
{
  unint64_t result = sub_256AC4E08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4E08()
{
  unint64_t result = qword_269F7AF18;
  if (!qword_269F7AF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF18);
  }
  return result;
}

unint64_t sub_256AC4E54(uint64_t a1)
{
  unint64_t result = sub_256AC4E7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC4E7C()
{
  unint64_t result = qword_269F7AF20;
  if (!qword_269F7AF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF20);
  }
  return result;
}

uint64_t sub_256AC4EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC4EF4, (uint64_t (*)(void))sub_256AC4F40);
}

unint64_t sub_256AC4EF4()
{
  unint64_t result = qword_269F7AF28;
  if (!qword_269F7AF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF28);
  }
  return result;
}

unint64_t sub_256AC4F40()
{
  unint64_t result = qword_269F7AF30;
  if (!qword_269F7AF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF30);
  }
  return result;
}

unint64_t sub_256AC4F90()
{
  unint64_t result = qword_269F7AF38;
  if (!qword_269F7AF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF38);
  }
  return result;
}

unint64_t sub_256AC4FDC(uint64_t a1)
{
  unint64_t result = sub_256AC5004();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5004()
{
  unint64_t result = qword_269F7AF40;
  if (!qword_269F7AF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF40);
  }
  return result;
}

unint64_t sub_256AC5050(uint64_t a1)
{
  unint64_t result = sub_256AC5078();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5078()
{
  unint64_t result = qword_269F7AF48;
  if (!qword_269F7AF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF48);
  }
  return result;
}

uint64_t sub_256AC50C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC50F0, (uint64_t (*)(void))sub_256AC513C);
}

unint64_t sub_256AC50F0()
{
  unint64_t result = qword_269F7AF50;
  if (!qword_269F7AF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF50);
  }
  return result;
}

unint64_t sub_256AC513C()
{
  unint64_t result = qword_269F7AF58;
  if (!qword_269F7AF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF58);
  }
  return result;
}

unint64_t sub_256AC518C()
{
  unint64_t result = qword_269F7AF60;
  if (!qword_269F7AF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF60);
  }
  return result;
}

unint64_t sub_256AC51D8(uint64_t a1)
{
  unint64_t result = sub_256AC5200();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5200()
{
  unint64_t result = qword_269F7AF68;
  if (!qword_269F7AF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF68);
  }
  return result;
}

unint64_t sub_256AC524C(uint64_t a1)
{
  unint64_t result = sub_256AC5274();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5274()
{
  unint64_t result = qword_269F7AF70;
  if (!qword_269F7AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF70);
  }
  return result;
}

uint64_t sub_256AC52C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC52EC, (uint64_t (*)(void))sub_256AC5338);
}

unint64_t sub_256AC52EC()
{
  unint64_t result = qword_269F7AF78;
  if (!qword_269F7AF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF78);
  }
  return result;
}

unint64_t sub_256AC5338()
{
  unint64_t result = qword_269F7AF80;
  if (!qword_269F7AF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF80);
  }
  return result;
}

unint64_t sub_256AC5388()
{
  unint64_t result = qword_269F7AF88;
  if (!qword_269F7AF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF88);
  }
  return result;
}

unint64_t sub_256AC53D4(uint64_t a1)
{
  unint64_t result = sub_256AC53FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC53FC()
{
  unint64_t result = qword_269F7AF90;
  if (!qword_269F7AF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF90);
  }
  return result;
}

unint64_t sub_256AC5448(uint64_t a1)
{
  unint64_t result = sub_256AC5470();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5470()
{
  unint64_t result = qword_269F7AF98;
  if (!qword_269F7AF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AF98);
  }
  return result;
}

uint64_t sub_256AC54BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC54E8, (uint64_t (*)(void))sub_256AC5534);
}

unint64_t sub_256AC54E8()
{
  unint64_t result = qword_269F7AFA0;
  if (!qword_269F7AFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFA0);
  }
  return result;
}

unint64_t sub_256AC5534()
{
  unint64_t result = qword_269F7AFA8;
  if (!qword_269F7AFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFA8);
  }
  return result;
}

unint64_t sub_256AC5584()
{
  unint64_t result = qword_269F7AFB0;
  if (!qword_269F7AFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFB0);
  }
  return result;
}

unint64_t sub_256AC55D0(uint64_t a1)
{
  unint64_t result = sub_256AC55F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC55F8()
{
  unint64_t result = qword_269F7AFB8;
  if (!qword_269F7AFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFB8);
  }
  return result;
}

unint64_t sub_256AC5644(uint64_t a1)
{
  unint64_t result = sub_256AC566C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC566C()
{
  unint64_t result = qword_269F7AFC0;
  if (!qword_269F7AFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFC0);
  }
  return result;
}

uint64_t sub_256AC56B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC56E4, (uint64_t (*)(void))sub_256AC5730);
}

unint64_t sub_256AC56E4()
{
  unint64_t result = qword_269F7AFC8;
  if (!qword_269F7AFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFC8);
  }
  return result;
}

unint64_t sub_256AC5730()
{
  unint64_t result = qword_269F7AFD0;
  if (!qword_269F7AFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFD0);
  }
  return result;
}

unint64_t sub_256AC5780()
{
  unint64_t result = qword_269F7AFD8;
  if (!qword_269F7AFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFD8);
  }
  return result;
}

unint64_t sub_256AC57CC(uint64_t a1)
{
  unint64_t result = sub_256AC57F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC57F4()
{
  unint64_t result = qword_269F7AFE0;
  if (!qword_269F7AFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFE0);
  }
  return result;
}

unint64_t sub_256AC5840(uint64_t a1)
{
  unint64_t result = sub_256AC5868();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5868()
{
  unint64_t result = qword_269F7AFE8;
  if (!qword_269F7AFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFE8);
  }
  return result;
}

uint64_t sub_256AC58B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC58E0, (uint64_t (*)(void))sub_256AC592C);
}

unint64_t sub_256AC58E0()
{
  unint64_t result = qword_269F7AFF0;
  if (!qword_269F7AFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFF0);
  }
  return result;
}

unint64_t sub_256AC592C()
{
  unint64_t result = qword_269F7AFF8;
  if (!qword_269F7AFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7AFF8);
  }
  return result;
}

unint64_t sub_256AC597C()
{
  unint64_t result = qword_269F7B000;
  if (!qword_269F7B000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B000);
  }
  return result;
}

unint64_t sub_256AC59C8(uint64_t a1)
{
  unint64_t result = sub_256AC59F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC59F0()
{
  unint64_t result = qword_269F7B008;
  if (!qword_269F7B008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B008);
  }
  return result;
}

unint64_t sub_256AC5A3C(uint64_t a1)
{
  unint64_t result = sub_256AC5A64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5A64()
{
  unint64_t result = qword_269F7B010;
  if (!qword_269F7B010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B010);
  }
  return result;
}

uint64_t sub_256AC5AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC5ADC, (uint64_t (*)(void))sub_256AC5B28);
}

unint64_t sub_256AC5ADC()
{
  unint64_t result = qword_269F7B018;
  if (!qword_269F7B018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B018);
  }
  return result;
}

unint64_t sub_256AC5B28()
{
  unint64_t result = qword_269F7B020;
  if (!qword_269F7B020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B020);
  }
  return result;
}

unint64_t sub_256AC5B78()
{
  unint64_t result = qword_269F7B028;
  if (!qword_269F7B028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B028);
  }
  return result;
}

unint64_t sub_256AC5BC4(uint64_t a1)
{
  unint64_t result = sub_256AC5BEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5BEC()
{
  unint64_t result = qword_269F7B030;
  if (!qword_269F7B030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B030);
  }
  return result;
}

unint64_t sub_256AC5C38(uint64_t a1)
{
  unint64_t result = sub_256AC5C60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5C60()
{
  unint64_t result = qword_269F7B038;
  if (!qword_269F7B038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B038);
  }
  return result;
}

uint64_t sub_256AC5CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC5CD8, (uint64_t (*)(void))sub_256AC5D24);
}

unint64_t sub_256AC5CD8()
{
  unint64_t result = qword_269F7B040;
  if (!qword_269F7B040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B040);
  }
  return result;
}

unint64_t sub_256AC5D24()
{
  unint64_t result = qword_269F7B048;
  if (!qword_269F7B048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B048);
  }
  return result;
}

unint64_t sub_256AC5D74()
{
  unint64_t result = qword_269F7B050;
  if (!qword_269F7B050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B050);
  }
  return result;
}

unint64_t sub_256AC5DC0(uint64_t a1)
{
  unint64_t result = sub_256AC5DE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5DE8()
{
  unint64_t result = qword_269F7B058;
  if (!qword_269F7B058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B058);
  }
  return result;
}

unint64_t sub_256AC5E34(uint64_t a1)
{
  unint64_t result = sub_256AC5E5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5E5C()
{
  unint64_t result = qword_269F7B060;
  if (!qword_269F7B060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B060);
  }
  return result;
}

uint64_t sub_256AC5EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC5ED4, (uint64_t (*)(void))sub_256AC5F20);
}

unint64_t sub_256AC5ED4()
{
  unint64_t result = qword_269F7B068;
  if (!qword_269F7B068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B068);
  }
  return result;
}

unint64_t sub_256AC5F20()
{
  unint64_t result = qword_269F7B070;
  if (!qword_269F7B070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B070);
  }
  return result;
}

unint64_t sub_256AC5F70()
{
  unint64_t result = qword_269F7B078;
  if (!qword_269F7B078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B078);
  }
  return result;
}

unint64_t sub_256AC5FBC(uint64_t a1)
{
  unint64_t result = sub_256AC5FE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC5FE4()
{
  unint64_t result = qword_269F7B080;
  if (!qword_269F7B080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B080);
  }
  return result;
}

unint64_t sub_256AC6030(uint64_t a1)
{
  unint64_t result = sub_256AC6058();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6058()
{
  unint64_t result = qword_269F7B088;
  if (!qword_269F7B088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B088);
  }
  return result;
}

uint64_t sub_256AC60A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC60D0, (uint64_t (*)(void))sub_256AC611C);
}

unint64_t sub_256AC60D0()
{
  unint64_t result = qword_269F7B090;
  if (!qword_269F7B090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B090);
  }
  return result;
}

unint64_t sub_256AC611C()
{
  unint64_t result = qword_269F7B098;
  if (!qword_269F7B098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B098);
  }
  return result;
}

unint64_t sub_256AC616C()
{
  unint64_t result = qword_269F7B0A0;
  if (!qword_269F7B0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0A0);
  }
  return result;
}

unint64_t sub_256AC61B8(uint64_t a1)
{
  unint64_t result = sub_256AC61E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC61E0()
{
  unint64_t result = qword_269F7B0A8;
  if (!qword_269F7B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0A8);
  }
  return result;
}

unint64_t sub_256AC622C(uint64_t a1)
{
  unint64_t result = sub_256AC6254();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6254()
{
  unint64_t result = qword_269F7B0B0;
  if (!qword_269F7B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0B0);
  }
  return result;
}

uint64_t sub_256AC62A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC62CC, (uint64_t (*)(void))sub_256AC6318);
}

unint64_t sub_256AC62CC()
{
  unint64_t result = qword_269F7B0B8;
  if (!qword_269F7B0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0B8);
  }
  return result;
}

unint64_t sub_256AC6318()
{
  unint64_t result = qword_269F7B0C0;
  if (!qword_269F7B0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0C0);
  }
  return result;
}

unint64_t sub_256AC6368()
{
  unint64_t result = qword_269F7B0C8;
  if (!qword_269F7B0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0C8);
  }
  return result;
}

unint64_t sub_256AC63B4(uint64_t a1)
{
  unint64_t result = sub_256AC63DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC63DC()
{
  unint64_t result = qword_269F7B0D0;
  if (!qword_269F7B0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0D0);
  }
  return result;
}

unint64_t sub_256AC6428(uint64_t a1)
{
  unint64_t result = sub_256AC6450();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6450()
{
  unint64_t result = qword_269F7B0D8;
  if (!qword_269F7B0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0D8);
  }
  return result;
}

uint64_t sub_256AC649C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC64C8, (uint64_t (*)(void))sub_256AC6514);
}

unint64_t sub_256AC64C8()
{
  unint64_t result = qword_269F7B0E0;
  if (!qword_269F7B0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0E0);
  }
  return result;
}

unint64_t sub_256AC6514()
{
  unint64_t result = qword_269F7B0E8;
  if (!qword_269F7B0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0E8);
  }
  return result;
}

unint64_t sub_256AC6564()
{
  unint64_t result = qword_269F7B0F0;
  if (!qword_269F7B0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0F0);
  }
  return result;
}

unint64_t sub_256AC65B0(uint64_t a1)
{
  unint64_t result = sub_256AC65D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC65D8()
{
  unint64_t result = qword_269F7B0F8;
  if (!qword_269F7B0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B0F8);
  }
  return result;
}

unint64_t sub_256AC6624(uint64_t a1)
{
  unint64_t result = sub_256AC664C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC664C()
{
  unint64_t result = qword_269F7B100;
  if (!qword_269F7B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B100);
  }
  return result;
}

uint64_t sub_256AC6698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC66C4, (uint64_t (*)(void))sub_256AC6710);
}

unint64_t sub_256AC66C4()
{
  unint64_t result = qword_269F7B108;
  if (!qword_269F7B108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B108);
  }
  return result;
}

unint64_t sub_256AC6710()
{
  unint64_t result = qword_269F7B110;
  if (!qword_269F7B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B110);
  }
  return result;
}

unint64_t sub_256AC6760()
{
  unint64_t result = qword_269F7B118;
  if (!qword_269F7B118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B118);
  }
  return result;
}

unint64_t sub_256AC67AC(uint64_t a1)
{
  unint64_t result = sub_256AC67D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC67D4()
{
  unint64_t result = qword_269F7B120;
  if (!qword_269F7B120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B120);
  }
  return result;
}

unint64_t sub_256AC6820(uint64_t a1)
{
  unint64_t result = sub_256AC6848();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6848()
{
  unint64_t result = qword_269F7B128;
  if (!qword_269F7B128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B128);
  }
  return result;
}

uint64_t sub_256AC6894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC68C0, (uint64_t (*)(void))sub_256AC690C);
}

unint64_t sub_256AC68C0()
{
  unint64_t result = qword_269F7B130;
  if (!qword_269F7B130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B130);
  }
  return result;
}

unint64_t sub_256AC690C()
{
  unint64_t result = qword_269F7B138;
  if (!qword_269F7B138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B138);
  }
  return result;
}

unint64_t sub_256AC695C()
{
  unint64_t result = qword_269F7B140;
  if (!qword_269F7B140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B140);
  }
  return result;
}

unint64_t sub_256AC69A8(uint64_t a1)
{
  unint64_t result = sub_256AC69D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC69D0()
{
  unint64_t result = qword_269F7B148;
  if (!qword_269F7B148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B148);
  }
  return result;
}

unint64_t sub_256AC6A1C(uint64_t a1)
{
  unint64_t result = sub_256AC6A44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6A44()
{
  unint64_t result = qword_269F7B150;
  if (!qword_269F7B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B150);
  }
  return result;
}

uint64_t sub_256AC6A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC6ABC, (uint64_t (*)(void))sub_256AC6B08);
}

unint64_t sub_256AC6ABC()
{
  unint64_t result = qword_269F7B158;
  if (!qword_269F7B158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B158);
  }
  return result;
}

unint64_t sub_256AC6B08()
{
  unint64_t result = qword_269F7B160;
  if (!qword_269F7B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B160);
  }
  return result;
}

unint64_t sub_256AC6B58()
{
  unint64_t result = qword_269F7B168;
  if (!qword_269F7B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B168);
  }
  return result;
}

unint64_t sub_256AC6BA4(uint64_t a1)
{
  unint64_t result = sub_256AC6BCC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6BCC()
{
  unint64_t result = qword_269F7B170;
  if (!qword_269F7B170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B170);
  }
  return result;
}

unint64_t sub_256AC6C18(uint64_t a1)
{
  unint64_t result = sub_256AC6C40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6C40()
{
  unint64_t result = qword_269F7B178;
  if (!qword_269F7B178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B178);
  }
  return result;
}

uint64_t sub_256AC6C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC6CB8, (uint64_t (*)(void))sub_256AC6D04);
}

unint64_t sub_256AC6CB8()
{
  unint64_t result = qword_269F7B180;
  if (!qword_269F7B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B180);
  }
  return result;
}

unint64_t sub_256AC6D04()
{
  unint64_t result = qword_269F7B188;
  if (!qword_269F7B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B188);
  }
  return result;
}

unint64_t sub_256AC6D54()
{
  unint64_t result = qword_269F7B190;
  if (!qword_269F7B190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B190);
  }
  return result;
}

unint64_t sub_256AC6DA0(uint64_t a1)
{
  unint64_t result = sub_256AC6DC8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6DC8()
{
  unint64_t result = qword_269F7B198;
  if (!qword_269F7B198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B198);
  }
  return result;
}

unint64_t sub_256AC6E14(uint64_t a1)
{
  unint64_t result = sub_256AC6E3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6E3C()
{
  unint64_t result = qword_269F7B1A0;
  if (!qword_269F7B1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1A0);
  }
  return result;
}

uint64_t sub_256AC6E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC6EB4, (uint64_t (*)(void))sub_256AC6F00);
}

unint64_t sub_256AC6EB4()
{
  unint64_t result = qword_269F7B1A8;
  if (!qword_269F7B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1A8);
  }
  return result;
}

unint64_t sub_256AC6F00()
{
  unint64_t result = qword_269F7B1B0;
  if (!qword_269F7B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1B0);
  }
  return result;
}

unint64_t sub_256AC6F50()
{
  unint64_t result = qword_269F7B1B8;
  if (!qword_269F7B1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1B8);
  }
  return result;
}

unint64_t sub_256AC6F9C(uint64_t a1)
{
  unint64_t result = sub_256AC6FC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC6FC4()
{
  unint64_t result = qword_269F7B1C0;
  if (!qword_269F7B1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1C0);
  }
  return result;
}

unint64_t sub_256AC7010(uint64_t a1)
{
  unint64_t result = sub_256AC7038();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7038()
{
  unint64_t result = qword_269F7B1C8;
  if (!qword_269F7B1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1C8);
  }
  return result;
}

uint64_t sub_256AC7084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC70B0, (uint64_t (*)(void))sub_256AC70FC);
}

unint64_t sub_256AC70B0()
{
  unint64_t result = qword_269F7B1D0;
  if (!qword_269F7B1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1D0);
  }
  return result;
}

unint64_t sub_256AC70FC()
{
  unint64_t result = qword_269F7B1D8;
  if (!qword_269F7B1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1D8);
  }
  return result;
}

unint64_t sub_256AC714C()
{
  unint64_t result = qword_269F7B1E0;
  if (!qword_269F7B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1E0);
  }
  return result;
}

unint64_t sub_256AC7198(uint64_t a1)
{
  unint64_t result = sub_256AC71C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC71C0()
{
  unint64_t result = qword_269F7B1E8;
  if (!qword_269F7B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1E8);
  }
  return result;
}

unint64_t sub_256AC720C(uint64_t a1)
{
  unint64_t result = sub_256AC7234();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7234()
{
  unint64_t result = qword_269F7B1F0;
  if (!qword_269F7B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1F0);
  }
  return result;
}

uint64_t sub_256AC7280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC72AC, (uint64_t (*)(void))sub_256AC72F8);
}

unint64_t sub_256AC72AC()
{
  unint64_t result = qword_269F7B1F8;
  if (!qword_269F7B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B1F8);
  }
  return result;
}

unint64_t sub_256AC72F8()
{
  unint64_t result = qword_269F7B200;
  if (!qword_269F7B200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B200);
  }
  return result;
}

unint64_t sub_256AC7348()
{
  unint64_t result = qword_269F7B208;
  if (!qword_269F7B208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B208);
  }
  return result;
}

unint64_t sub_256AC7394(uint64_t a1)
{
  unint64_t result = sub_256AC73BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC73BC()
{
  unint64_t result = qword_269F7B210;
  if (!qword_269F7B210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B210);
  }
  return result;
}

unint64_t sub_256AC7408(uint64_t a1)
{
  unint64_t result = sub_256AC7430();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7430()
{
  unint64_t result = qword_269F7B218;
  if (!qword_269F7B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B218);
  }
  return result;
}

uint64_t sub_256AC747C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC74A8, (uint64_t (*)(void))sub_256AC74F4);
}

unint64_t sub_256AC74A8()
{
  unint64_t result = qword_269F7B220;
  if (!qword_269F7B220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B220);
  }
  return result;
}

unint64_t sub_256AC74F4()
{
  unint64_t result = qword_269F7B228;
  if (!qword_269F7B228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B228);
  }
  return result;
}

unint64_t sub_256AC7544()
{
  unint64_t result = qword_269F7B230;
  if (!qword_269F7B230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B230);
  }
  return result;
}

unint64_t sub_256AC7590(uint64_t a1)
{
  unint64_t result = sub_256AC75B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC75B8()
{
  unint64_t result = qword_269F7B238;
  if (!qword_269F7B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B238);
  }
  return result;
}

unint64_t sub_256AC7604(uint64_t a1)
{
  unint64_t result = sub_256AC762C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC762C()
{
  unint64_t result = qword_269F7B240;
  if (!qword_269F7B240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B240);
  }
  return result;
}

uint64_t sub_256AC7678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC76A4, (uint64_t (*)(void))sub_256AC76F0);
}

unint64_t sub_256AC76A4()
{
  unint64_t result = qword_269F7B248;
  if (!qword_269F7B248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B248);
  }
  return result;
}

unint64_t sub_256AC76F0()
{
  unint64_t result = qword_269F7B250;
  if (!qword_269F7B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B250);
  }
  return result;
}

unint64_t sub_256AC7740()
{
  unint64_t result = qword_269F7B258;
  if (!qword_269F7B258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B258);
  }
  return result;
}

unint64_t sub_256AC778C(uint64_t a1)
{
  unint64_t result = sub_256AC77B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC77B4()
{
  unint64_t result = qword_269F7B260;
  if (!qword_269F7B260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B260);
  }
  return result;
}

unint64_t sub_256AC7800(uint64_t a1)
{
  unint64_t result = sub_256AC7828();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7828()
{
  unint64_t result = qword_269F7B268;
  if (!qword_269F7B268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B268);
  }
  return result;
}

uint64_t sub_256AC7874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC78A0, (uint64_t (*)(void))sub_256AC78EC);
}

unint64_t sub_256AC78A0()
{
  unint64_t result = qword_269F7B270;
  if (!qword_269F7B270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B270);
  }
  return result;
}

unint64_t sub_256AC78EC()
{
  unint64_t result = qword_269F7B278;
  if (!qword_269F7B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B278);
  }
  return result;
}

unint64_t sub_256AC793C()
{
  unint64_t result = qword_269F7B280;
  if (!qword_269F7B280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B280);
  }
  return result;
}

unint64_t sub_256AC7988(uint64_t a1)
{
  unint64_t result = sub_256AC79B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC79B0()
{
  unint64_t result = qword_269F7B288;
  if (!qword_269F7B288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B288);
  }
  return result;
}

unint64_t sub_256AC79FC(uint64_t a1)
{
  unint64_t result = sub_256AC7A24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7A24()
{
  unint64_t result = qword_269F7B290;
  if (!qword_269F7B290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B290);
  }
  return result;
}

uint64_t sub_256AC7A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC7A9C, (uint64_t (*)(void))sub_256AC7AE8);
}

unint64_t sub_256AC7A9C()
{
  unint64_t result = qword_269F7B298;
  if (!qword_269F7B298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B298);
  }
  return result;
}

unint64_t sub_256AC7AE8()
{
  unint64_t result = qword_269F7B2A0;
  if (!qword_269F7B2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2A0);
  }
  return result;
}

unint64_t sub_256AC7B38()
{
  unint64_t result = qword_269F7B2A8;
  if (!qword_269F7B2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2A8);
  }
  return result;
}

unint64_t sub_256AC7B84(uint64_t a1)
{
  unint64_t result = sub_256AC7BAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7BAC()
{
  unint64_t result = qword_269F7B2B0;
  if (!qword_269F7B2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2B0);
  }
  return result;
}

unint64_t sub_256AC7BF8(uint64_t a1)
{
  unint64_t result = sub_256AC7C20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7C20()
{
  unint64_t result = qword_269F7B2B8;
  if (!qword_269F7B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2B8);
  }
  return result;
}

uint64_t sub_256AC7C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC7C98, (uint64_t (*)(void))sub_256AC7CE4);
}

unint64_t sub_256AC7C98()
{
  unint64_t result = qword_269F7B2C0;
  if (!qword_269F7B2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2C0);
  }
  return result;
}

unint64_t sub_256AC7CE4()
{
  unint64_t result = qword_269F7B2C8;
  if (!qword_269F7B2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2C8);
  }
  return result;
}

unint64_t sub_256AC7D34()
{
  unint64_t result = qword_269F7B2D0;
  if (!qword_269F7B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2D0);
  }
  return result;
}

unint64_t sub_256AC7D80(uint64_t a1)
{
  unint64_t result = sub_256AC7DA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7DA8()
{
  unint64_t result = qword_269F7B2D8;
  if (!qword_269F7B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2D8);
  }
  return result;
}

unint64_t sub_256AC7DF4(uint64_t a1)
{
  unint64_t result = sub_256AC7E1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7E1C()
{
  unint64_t result = qword_269F7B2E0;
  if (!qword_269F7B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2E0);
  }
  return result;
}

uint64_t sub_256AC7E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC7E94, (uint64_t (*)(void))sub_256AC7EE0);
}

unint64_t sub_256AC7E94()
{
  unint64_t result = qword_269F7B2E8;
  if (!qword_269F7B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2E8);
  }
  return result;
}

unint64_t sub_256AC7EE0()
{
  unint64_t result = qword_269F7B2F0;
  if (!qword_269F7B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2F0);
  }
  return result;
}

unint64_t sub_256AC7F30()
{
  unint64_t result = qword_269F7B2F8;
  if (!qword_269F7B2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B2F8);
  }
  return result;
}

unint64_t sub_256AC7F7C(uint64_t a1)
{
  unint64_t result = sub_256AC7FA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC7FA4()
{
  unint64_t result = qword_269F7B300;
  if (!qword_269F7B300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B300);
  }
  return result;
}

unint64_t sub_256AC7FF0(uint64_t a1)
{
  unint64_t result = sub_256AC8018();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8018()
{
  unint64_t result = qword_269F7B308;
  if (!qword_269F7B308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B308);
  }
  return result;
}

uint64_t sub_256AC8064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8090, (uint64_t (*)(void))sub_256AC80DC);
}

unint64_t sub_256AC8090()
{
  unint64_t result = qword_269F7B310;
  if (!qword_269F7B310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B310);
  }
  return result;
}

unint64_t sub_256AC80DC()
{
  unint64_t result = qword_269F7B318;
  if (!qword_269F7B318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B318);
  }
  return result;
}

unint64_t sub_256AC812C()
{
  unint64_t result = qword_269F7B320;
  if (!qword_269F7B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B320);
  }
  return result;
}

unint64_t sub_256AC8178(uint64_t a1)
{
  unint64_t result = sub_256AC81A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC81A0()
{
  unint64_t result = qword_269F7B328;
  if (!qword_269F7B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B328);
  }
  return result;
}

unint64_t sub_256AC81EC(uint64_t a1)
{
  unint64_t result = sub_256AC8214();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8214()
{
  unint64_t result = qword_269F7B330;
  if (!qword_269F7B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B330);
  }
  return result;
}

uint64_t sub_256AC8260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC828C, (uint64_t (*)(void))sub_256AC82D8);
}

unint64_t sub_256AC828C()
{
  unint64_t result = qword_269F7B338;
  if (!qword_269F7B338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B338);
  }
  return result;
}

unint64_t sub_256AC82D8()
{
  unint64_t result = qword_269F7B340;
  if (!qword_269F7B340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B340);
  }
  return result;
}

unint64_t sub_256AC8328()
{
  unint64_t result = qword_269F7B348;
  if (!qword_269F7B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B348);
  }
  return result;
}

unint64_t sub_256AC8374(uint64_t a1)
{
  unint64_t result = sub_256AC839C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC839C()
{
  unint64_t result = qword_269F7B350;
  if (!qword_269F7B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B350);
  }
  return result;
}

unint64_t sub_256AC83E8(uint64_t a1)
{
  unint64_t result = sub_256AC8410();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8410()
{
  unint64_t result = qword_269F7B358;
  if (!qword_269F7B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B358);
  }
  return result;
}

uint64_t sub_256AC845C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8488, (uint64_t (*)(void))sub_256AC84D4);
}

unint64_t sub_256AC8488()
{
  unint64_t result = qword_269F7B360;
  if (!qword_269F7B360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B360);
  }
  return result;
}

unint64_t sub_256AC84D4()
{
  unint64_t result = qword_269F7B368;
  if (!qword_269F7B368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B368);
  }
  return result;
}

unint64_t sub_256AC8524()
{
  unint64_t result = qword_269F7B370;
  if (!qword_269F7B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B370);
  }
  return result;
}

unint64_t sub_256AC8570(uint64_t a1)
{
  unint64_t result = sub_256AC8598();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8598()
{
  unint64_t result = qword_269F7B378;
  if (!qword_269F7B378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B378);
  }
  return result;
}

unint64_t sub_256AC85E4(uint64_t a1)
{
  unint64_t result = sub_256AC860C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC860C()
{
  unint64_t result = qword_269F7B380;
  if (!qword_269F7B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B380);
  }
  return result;
}

uint64_t sub_256AC8658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8684, (uint64_t (*)(void))sub_256AC86D0);
}

unint64_t sub_256AC8684()
{
  unint64_t result = qword_269F7B388;
  if (!qword_269F7B388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B388);
  }
  return result;
}

unint64_t sub_256AC86D0()
{
  unint64_t result = qword_269F7B390;
  if (!qword_269F7B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B390);
  }
  return result;
}

unint64_t sub_256AC8720()
{
  unint64_t result = qword_269F7B398;
  if (!qword_269F7B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B398);
  }
  return result;
}

unint64_t sub_256AC876C(uint64_t a1)
{
  unint64_t result = sub_256AC8794();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8794()
{
  unint64_t result = qword_269F7B3A0;
  if (!qword_269F7B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3A0);
  }
  return result;
}

unint64_t sub_256AC87E0(uint64_t a1)
{
  unint64_t result = sub_256AC8808();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8808()
{
  unint64_t result = qword_269F7B3A8;
  if (!qword_269F7B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3A8);
  }
  return result;
}

uint64_t sub_256AC8854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8880, (uint64_t (*)(void))sub_256AC88CC);
}

unint64_t sub_256AC8880()
{
  unint64_t result = qword_269F7B3B0;
  if (!qword_269F7B3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3B0);
  }
  return result;
}

unint64_t sub_256AC88CC()
{
  unint64_t result = qword_269F7B3B8;
  if (!qword_269F7B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3B8);
  }
  return result;
}

unint64_t sub_256AC891C()
{
  unint64_t result = qword_269F7B3C0;
  if (!qword_269F7B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3C0);
  }
  return result;
}

unint64_t sub_256AC8968(uint64_t a1)
{
  unint64_t result = sub_256AC8990();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8990()
{
  unint64_t result = qword_269F7B3C8;
  if (!qword_269F7B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3C8);
  }
  return result;
}

unint64_t sub_256AC89DC(uint64_t a1)
{
  unint64_t result = sub_256AC8A04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8A04()
{
  unint64_t result = qword_269F7B3D0;
  if (!qword_269F7B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3D0);
  }
  return result;
}

uint64_t sub_256AC8A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8A7C, (uint64_t (*)(void))sub_256AC8AC8);
}

unint64_t sub_256AC8A7C()
{
  unint64_t result = qword_269F7B3D8;
  if (!qword_269F7B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3D8);
  }
  return result;
}

unint64_t sub_256AC8AC8()
{
  unint64_t result = qword_269F7B3E0;
  if (!qword_269F7B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3E0);
  }
  return result;
}

unint64_t sub_256AC8B18()
{
  unint64_t result = qword_269F7B3E8;
  if (!qword_269F7B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3E8);
  }
  return result;
}

unint64_t sub_256AC8B64(uint64_t a1)
{
  unint64_t result = sub_256AC8B8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8B8C()
{
  unint64_t result = qword_269F7B3F0;
  if (!qword_269F7B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3F0);
  }
  return result;
}

unint64_t sub_256AC8BD8(uint64_t a1)
{
  unint64_t result = sub_256AC8C00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8C00()
{
  unint64_t result = qword_269F7B3F8;
  if (!qword_269F7B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B3F8);
  }
  return result;
}

uint64_t sub_256AC8C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8C78, (uint64_t (*)(void))sub_256AC8CC4);
}

unint64_t sub_256AC8C78()
{
  unint64_t result = qword_269F7B400;
  if (!qword_269F7B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B400);
  }
  return result;
}

unint64_t sub_256AC8CC4()
{
  unint64_t result = qword_269F7B408;
  if (!qword_269F7B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B408);
  }
  return result;
}

unint64_t sub_256AC8D14()
{
  unint64_t result = qword_269F7B410;
  if (!qword_269F7B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B410);
  }
  return result;
}

unint64_t sub_256AC8D60(uint64_t a1)
{
  unint64_t result = sub_256AC8D88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8D88()
{
  unint64_t result = qword_269F7B418;
  if (!qword_269F7B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B418);
  }
  return result;
}

unint64_t sub_256AC8DD4(uint64_t a1)
{
  unint64_t result = sub_256AC8DFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8DFC()
{
  unint64_t result = qword_269F7B420;
  if (!qword_269F7B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B420);
  }
  return result;
}

uint64_t sub_256AC8E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC8E74, (uint64_t (*)(void))sub_256AC8EC0);
}

unint64_t sub_256AC8E74()
{
  unint64_t result = qword_269F7B428;
  if (!qword_269F7B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B428);
  }
  return result;
}

unint64_t sub_256AC8EC0()
{
  unint64_t result = qword_269F7B430;
  if (!qword_269F7B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B430);
  }
  return result;
}

unint64_t sub_256AC8F10()
{
  unint64_t result = qword_269F7B438;
  if (!qword_269F7B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B438);
  }
  return result;
}

unint64_t sub_256AC8F5C(uint64_t a1)
{
  unint64_t result = sub_256AC8F84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8F84()
{
  unint64_t result = qword_269F7B440;
  if (!qword_269F7B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B440);
  }
  return result;
}

unint64_t sub_256AC8FD0(uint64_t a1)
{
  unint64_t result = sub_256AC8FF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC8FF8()
{
  unint64_t result = qword_269F7B448;
  if (!qword_269F7B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B448);
  }
  return result;
}

uint64_t sub_256AC9044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9070, (uint64_t (*)(void))sub_256AC90BC);
}

unint64_t sub_256AC9070()
{
  unint64_t result = qword_269F7B450;
  if (!qword_269F7B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B450);
  }
  return result;
}

unint64_t sub_256AC90BC()
{
  unint64_t result = qword_269F7B458;
  if (!qword_269F7B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B458);
  }
  return result;
}

unint64_t sub_256AC910C()
{
  unint64_t result = qword_269F7B460;
  if (!qword_269F7B460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B460);
  }
  return result;
}

unint64_t sub_256AC9158(uint64_t a1)
{
  unint64_t result = sub_256AC9180();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9180()
{
  unint64_t result = qword_269F7B468;
  if (!qword_269F7B468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B468);
  }
  return result;
}

unint64_t sub_256AC91CC(uint64_t a1)
{
  unint64_t result = sub_256AC91F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC91F4()
{
  unint64_t result = qword_269F7B470;
  if (!qword_269F7B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B470);
  }
  return result;
}

uint64_t sub_256AC9240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC926C, (uint64_t (*)(void))sub_256AC92B8);
}

unint64_t sub_256AC926C()
{
  unint64_t result = qword_269F7B478;
  if (!qword_269F7B478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B478);
  }
  return result;
}

unint64_t sub_256AC92B8()
{
  unint64_t result = qword_269F7B480;
  if (!qword_269F7B480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B480);
  }
  return result;
}

unint64_t sub_256AC9308()
{
  unint64_t result = qword_269F7B488;
  if (!qword_269F7B488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B488);
  }
  return result;
}

unint64_t sub_256AC9354(uint64_t a1)
{
  unint64_t result = sub_256AC937C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC937C()
{
  unint64_t result = qword_269F7B490;
  if (!qword_269F7B490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B490);
  }
  return result;
}

unint64_t sub_256AC93C8(uint64_t a1)
{
  unint64_t result = sub_256AC93F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC93F0()
{
  unint64_t result = qword_269F7B498;
  if (!qword_269F7B498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B498);
  }
  return result;
}

uint64_t sub_256AC943C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9468, (uint64_t (*)(void))sub_256AC94B4);
}

unint64_t sub_256AC9468()
{
  unint64_t result = qword_269F7B4A0;
  if (!qword_269F7B4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4A0);
  }
  return result;
}

unint64_t sub_256AC94B4()
{
  unint64_t result = qword_269F7B4A8;
  if (!qword_269F7B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4A8);
  }
  return result;
}

unint64_t sub_256AC9504()
{
  unint64_t result = qword_269F7B4B0;
  if (!qword_269F7B4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4B0);
  }
  return result;
}

unint64_t sub_256AC9550(uint64_t a1)
{
  unint64_t result = sub_256AC9578();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9578()
{
  unint64_t result = qword_269F7B4B8;
  if (!qword_269F7B4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4B8);
  }
  return result;
}

unint64_t sub_256AC95C4(uint64_t a1)
{
  unint64_t result = sub_256AC95EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC95EC()
{
  unint64_t result = qword_269F7B4C0;
  if (!qword_269F7B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4C0);
  }
  return result;
}

uint64_t sub_256AC9638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9664, (uint64_t (*)(void))sub_256AC96B0);
}

unint64_t sub_256AC9664()
{
  unint64_t result = qword_269F7B4C8;
  if (!qword_269F7B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4C8);
  }
  return result;
}

unint64_t sub_256AC96B0()
{
  unint64_t result = qword_269F7B4D0;
  if (!qword_269F7B4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4D0);
  }
  return result;
}

unint64_t sub_256AC9700()
{
  unint64_t result = qword_269F7B4D8;
  if (!qword_269F7B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4D8);
  }
  return result;
}

unint64_t sub_256AC974C(uint64_t a1)
{
  unint64_t result = sub_256AC9774();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9774()
{
  unint64_t result = qword_269F7B4E0;
  if (!qword_269F7B4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4E0);
  }
  return result;
}

unint64_t sub_256AC97C0(uint64_t a1)
{
  unint64_t result = sub_256AC97E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC97E8()
{
  unint64_t result = qword_269F7B4E8;
  if (!qword_269F7B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4E8);
  }
  return result;
}

uint64_t sub_256AC9834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9860, (uint64_t (*)(void))sub_256AC98AC);
}

unint64_t sub_256AC9860()
{
  unint64_t result = qword_269F7B4F0;
  if (!qword_269F7B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4F0);
  }
  return result;
}

unint64_t sub_256AC98AC()
{
  unint64_t result = qword_269F7B4F8;
  if (!qword_269F7B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B4F8);
  }
  return result;
}

unint64_t sub_256AC98FC()
{
  unint64_t result = qword_269F7B500;
  if (!qword_269F7B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B500);
  }
  return result;
}

unint64_t sub_256AC9948(uint64_t a1)
{
  unint64_t result = sub_256AC9970();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9970()
{
  unint64_t result = qword_269F7B508;
  if (!qword_269F7B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B508);
  }
  return result;
}

unint64_t sub_256AC99BC(uint64_t a1)
{
  unint64_t result = sub_256AC99E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC99E4()
{
  unint64_t result = qword_269F7B510;
  if (!qword_269F7B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B510);
  }
  return result;
}

uint64_t sub_256AC9A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9A5C, (uint64_t (*)(void))sub_256AC9AA8);
}

unint64_t sub_256AC9A5C()
{
  unint64_t result = qword_269F7B518;
  if (!qword_269F7B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B518);
  }
  return result;
}

unint64_t sub_256AC9AA8()
{
  unint64_t result = qword_269F7B520;
  if (!qword_269F7B520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B520);
  }
  return result;
}

unint64_t sub_256AC9AF8()
{
  unint64_t result = qword_269F7B528;
  if (!qword_269F7B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B528);
  }
  return result;
}

unint64_t sub_256AC9B44(uint64_t a1)
{
  unint64_t result = sub_256AC9B6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9B6C()
{
  unint64_t result = qword_269F7B530;
  if (!qword_269F7B530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B530);
  }
  return result;
}

unint64_t sub_256AC9BB8(uint64_t a1)
{
  unint64_t result = sub_256AC9BE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9BE0()
{
  unint64_t result = qword_269F7B538;
  if (!qword_269F7B538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B538);
  }
  return result;
}

uint64_t sub_256AC9C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9C58, (uint64_t (*)(void))sub_256AC9CA4);
}

unint64_t sub_256AC9C58()
{
  unint64_t result = qword_269F7B540;
  if (!qword_269F7B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B540);
  }
  return result;
}

unint64_t sub_256AC9CA4()
{
  unint64_t result = qword_269F7B548;
  if (!qword_269F7B548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B548);
  }
  return result;
}

unint64_t sub_256AC9CF4()
{
  unint64_t result = qword_269F7B550;
  if (!qword_269F7B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B550);
  }
  return result;
}

unint64_t sub_256AC9D40(uint64_t a1)
{
  unint64_t result = sub_256AC9D68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9D68()
{
  unint64_t result = qword_269F7B558;
  if (!qword_269F7B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B558);
  }
  return result;
}

unint64_t sub_256AC9DB4(uint64_t a1)
{
  unint64_t result = sub_256AC9DDC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9DDC()
{
  unint64_t result = qword_269F7B560;
  if (!qword_269F7B560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B560);
  }
  return result;
}

uint64_t sub_256AC9E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AC9E54, (uint64_t (*)(void))sub_256AC9EA0);
}

unint64_t sub_256AC9E54()
{
  unint64_t result = qword_269F7B568;
  if (!qword_269F7B568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B568);
  }
  return result;
}

unint64_t sub_256AC9EA0()
{
  unint64_t result = qword_269F7B570;
  if (!qword_269F7B570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B570);
  }
  return result;
}

unint64_t sub_256AC9EF0()
{
  unint64_t result = qword_269F7B578;
  if (!qword_269F7B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B578);
  }
  return result;
}

unint64_t sub_256AC9F3C(uint64_t a1)
{
  unint64_t result = sub_256AC9F64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9F64()
{
  unint64_t result = qword_269F7B580;
  if (!qword_269F7B580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B580);
  }
  return result;
}

unint64_t sub_256AC9FB0(uint64_t a1)
{
  unint64_t result = sub_256AC9FD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AC9FD8()
{
  unint64_t result = qword_269F7B588;
  if (!qword_269F7B588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B588);
  }
  return result;
}

uint64_t sub_256ACA024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACA050, (uint64_t (*)(void))sub_256ACA09C);
}

unint64_t sub_256ACA050()
{
  unint64_t result = qword_269F7B590;
  if (!qword_269F7B590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B590);
  }
  return result;
}

unint64_t sub_256ACA09C()
{
  unint64_t result = qword_269F7B598;
  if (!qword_269F7B598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B598);
  }
  return result;
}

unint64_t sub_256ACA0EC()
{
  unint64_t result = qword_269F7B5A0;
  if (!qword_269F7B5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5A0);
  }
  return result;
}

unint64_t sub_256ACA13C()
{
  unint64_t result = qword_269F7B5A8;
  if (!qword_269F7B5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5A8);
  }
  return result;
}

unint64_t sub_256ACA188(uint64_t a1)
{
  unint64_t result = sub_256ACA1B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA1B0()
{
  unint64_t result = qword_269F7B5B0;
  if (!qword_269F7B5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5B0);
  }
  return result;
}

unint64_t sub_256ACA1FC(uint64_t a1)
{
  unint64_t result = sub_256A9F728();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA224(uint64_t a1)
{
  unint64_t result = sub_256ACA24C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA24C()
{
  unint64_t result = qword_269F7B5B8;
  if (!qword_269F7B5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5B8);
  }
  return result;
}

uint64_t sub_256ACA298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACA2C4, (uint64_t (*)(void))sub_256ACA310);
}

unint64_t sub_256ACA2C4()
{
  unint64_t result = qword_269F7B5C0;
  if (!qword_269F7B5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5C0);
  }
  return result;
}

unint64_t sub_256ACA310()
{
  unint64_t result = qword_269F7B5C8;
  if (!qword_269F7B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5C8);
  }
  return result;
}

unint64_t sub_256ACA360()
{
  unint64_t result = qword_269F7B5D0;
  if (!qword_269F7B5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5D0);
  }
  return result;
}

unint64_t sub_256ACA3B0()
{
  unint64_t result = qword_269F7B5D8;
  if (!qword_269F7B5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5D8);
  }
  return result;
}

unint64_t sub_256ACA3FC(uint64_t a1)
{
  unint64_t result = sub_256ACA424();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA424()
{
  unint64_t result = qword_269F7B5E0;
  if (!qword_269F7B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5E0);
  }
  return result;
}

unint64_t sub_256ACA470(uint64_t a1)
{
  unint64_t result = sub_256A9F688();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA498(uint64_t a1)
{
  unint64_t result = sub_256ACA4C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA4C0()
{
  unint64_t result = qword_26B2B3128;
  if (!qword_26B2B3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3128);
  }
  return result;
}

uint64_t sub_256ACA50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACA538, (uint64_t (*)(void))sub_256ACA584);
}

unint64_t sub_256ACA538()
{
  unint64_t result = qword_26B2B3110;
  if (!qword_26B2B3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3110);
  }
  return result;
}

unint64_t sub_256ACA584()
{
  unint64_t result = qword_26B2B3120;
  if (!qword_26B2B3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3120);
  }
  return result;
}

unint64_t sub_256ACA5D4()
{
  unint64_t result = qword_26B2B3118;
  if (!qword_26B2B3118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3118);
  }
  return result;
}

unint64_t sub_256ACA624()
{
  unint64_t result = qword_269F7B5E8;
  if (!qword_269F7B5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5E8);
  }
  return result;
}

unint64_t sub_256ACA670(uint64_t a1)
{
  unint64_t result = sub_256ACA698();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA698()
{
  unint64_t result = qword_269F7B5F0;
  if (!qword_269F7B5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5F0);
  }
  return result;
}

unint64_t sub_256ACA6E4(uint64_t a1)
{
  unint64_t result = sub_256ACA70C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA70C()
{
  unint64_t result = qword_269F7B5F8;
  if (!qword_269F7B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B5F8);
  }
  return result;
}

unint64_t sub_256ACA758(uint64_t a1)
{
  unint64_t result = sub_256ACA780();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA780()
{
  unint64_t result = qword_269F7B600;
  if (!qword_269F7B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B600);
  }
  return result;
}

uint64_t sub_256ACA7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACA7F8, (uint64_t (*)(void))sub_256ACA844);
}

unint64_t sub_256ACA7F8()
{
  unint64_t result = qword_269F7B608;
  if (!qword_269F7B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B608);
  }
  return result;
}

unint64_t sub_256ACA844()
{
  unint64_t result = qword_269F7B610;
  if (!qword_269F7B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B610);
  }
  return result;
}

unint64_t sub_256ACA894()
{
  unint64_t result = qword_269F7B618;
  if (!qword_269F7B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B618);
  }
  return result;
}

unint64_t sub_256ACA8E4()
{
  unint64_t result = qword_269F7B620;
  if (!qword_269F7B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B620);
  }
  return result;
}

unint64_t sub_256ACA930(uint64_t a1)
{
  unint64_t result = sub_256ACA958();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA958()
{
  unint64_t result = qword_269F7B628;
  if (!qword_269F7B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B628);
  }
  return result;
}

unint64_t sub_256ACA9A4(uint64_t a1)
{
  unint64_t result = sub_256ACA9CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACA9CC()
{
  unint64_t result = qword_269F7B630;
  if (!qword_269F7B630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B630);
  }
  return result;
}

unint64_t sub_256ACAA18(uint64_t a1)
{
  unint64_t result = sub_256ACAA40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAA40()
{
  unint64_t result = qword_26B2B3168;
  if (!qword_26B2B3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3168);
  }
  return result;
}

uint64_t sub_256ACAA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACAAB8, (uint64_t (*)(void))sub_256ACAB04);
}

unint64_t sub_256ACAAB8()
{
  unint64_t result = qword_26B2B3150;
  if (!qword_26B2B3150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3150);
  }
  return result;
}

unint64_t sub_256ACAB04()
{
  unint64_t result = qword_26B2B3160;
  if (!qword_26B2B3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3160);
  }
  return result;
}

unint64_t sub_256ACAB54()
{
  unint64_t result = qword_26B2B3158;
  if (!qword_26B2B3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3158);
  }
  return result;
}

unint64_t sub_256ACABA4()
{
  unint64_t result = qword_269F7B638;
  if (!qword_269F7B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B638);
  }
  return result;
}

unint64_t sub_256ACABF0(uint64_t a1)
{
  unint64_t result = sub_256ACAC18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAC18()
{
  unint64_t result = qword_269F7B640;
  if (!qword_269F7B640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B640);
  }
  return result;
}

unint64_t sub_256ACAC64(uint64_t a1)
{
  unint64_t result = sub_256ACAC8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAC8C()
{
  unint64_t result = qword_269F7B648;
  if (!qword_269F7B648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B648);
  }
  return result;
}

unint64_t sub_256ACACD8(uint64_t a1)
{
  unint64_t result = sub_256ACAD00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAD00()
{
  unint64_t result = qword_269F7B650;
  if (!qword_269F7B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B650);
  }
  return result;
}

uint64_t sub_256ACAD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACAD78, (uint64_t (*)(void))sub_256ACADC4);
}

unint64_t sub_256ACAD78()
{
  unint64_t result = qword_269F7B658;
  if (!qword_269F7B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B658);
  }
  return result;
}

unint64_t sub_256ACADC4()
{
  unint64_t result = qword_269F7B660;
  if (!qword_269F7B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B660);
  }
  return result;
}

unint64_t sub_256ACAE14()
{
  unint64_t result = qword_269F7B668;
  if (!qword_269F7B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B668);
  }
  return result;
}

unint64_t sub_256ACAE64()
{
  unint64_t result = qword_269F7B670;
  if (!qword_269F7B670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B670);
  }
  return result;
}

unint64_t sub_256ACAEB0(uint64_t a1)
{
  unint64_t result = sub_256ACAED8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAED8()
{
  unint64_t result = qword_269F7B678;
  if (!qword_269F7B678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B678);
  }
  return result;
}

unint64_t sub_256ACAF24(uint64_t a1)
{
  unint64_t result = sub_256ACAF4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAF4C()
{
  unint64_t result = qword_269F7B680;
  if (!qword_269F7B680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B680);
  }
  return result;
}

unint64_t sub_256ACAF98(uint64_t a1)
{
  unint64_t result = sub_256ACAFC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACAFC0()
{
  unint64_t result = qword_269F7B688;
  if (!qword_269F7B688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B688);
  }
  return result;
}

uint64_t sub_256ACB00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACB038, (uint64_t (*)(void))sub_256ACB084);
}

unint64_t sub_256ACB038()
{
  unint64_t result = qword_269F7B690;
  if (!qword_269F7B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B690);
  }
  return result;
}

unint64_t sub_256ACB084()
{
  unint64_t result = qword_269F7B698;
  if (!qword_269F7B698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B698);
  }
  return result;
}

unint64_t sub_256ACB0D4()
{
  unint64_t result = qword_269F7B6A0;
  if (!qword_269F7B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6A0);
  }
  return result;
}

unint64_t sub_256ACB124()
{
  unint64_t result = qword_269F7B6A8;
  if (!qword_269F7B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6A8);
  }
  return result;
}

unint64_t sub_256ACB170(uint64_t a1)
{
  unint64_t result = sub_256ACB198();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB198()
{
  unint64_t result = qword_269F7B6B0;
  if (!qword_269F7B6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6B0);
  }
  return result;
}

unint64_t sub_256ACB1E4(uint64_t a1)
{
  unint64_t result = sub_256ACB20C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB20C()
{
  unint64_t result = qword_269F7B6B8;
  if (!qword_269F7B6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6B8);
  }
  return result;
}

unint64_t sub_256ACB258(uint64_t a1)
{
  unint64_t result = sub_256ACB280();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB280()
{
  unint64_t result = qword_269F7B6C0;
  if (!qword_269F7B6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6C0);
  }
  return result;
}

uint64_t sub_256ACB2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACB2F8, (uint64_t (*)(void))sub_256ACB344);
}

unint64_t sub_256ACB2F8()
{
  unint64_t result = qword_269F7B6C8;
  if (!qword_269F7B6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6C8);
  }
  return result;
}

unint64_t sub_256ACB344()
{
  unint64_t result = qword_269F7B6D0;
  if (!qword_269F7B6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6D0);
  }
  return result;
}

unint64_t sub_256ACB394()
{
  unint64_t result = qword_269F7B6D8;
  if (!qword_269F7B6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6D8);
  }
  return result;
}

unint64_t sub_256ACB3E4()
{
  unint64_t result = qword_269F7B6E0;
  if (!qword_269F7B6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6E0);
  }
  return result;
}

unint64_t sub_256ACB430(uint64_t a1)
{
  unint64_t result = sub_256ACB458();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB458()
{
  unint64_t result = qword_269F7B6E8;
  if (!qword_269F7B6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6E8);
  }
  return result;
}

unint64_t sub_256ACB4A4(uint64_t a1)
{
  unint64_t result = sub_256ACB4CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB4CC()
{
  unint64_t result = qword_269F7B6F0;
  if (!qword_269F7B6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6F0);
  }
  return result;
}

unint64_t sub_256ACB518(uint64_t a1)
{
  unint64_t result = sub_256ACB540();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB540()
{
  unint64_t result = qword_269F7B6F8;
  if (!qword_269F7B6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B6F8);
  }
  return result;
}

uint64_t sub_256ACB58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACB5B8, (uint64_t (*)(void))sub_256ACB604);
}

unint64_t sub_256ACB5B8()
{
  unint64_t result = qword_269F7B700;
  if (!qword_269F7B700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B700);
  }
  return result;
}

unint64_t sub_256ACB604()
{
  unint64_t result = qword_269F7B708;
  if (!qword_269F7B708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B708);
  }
  return result;
}

unint64_t sub_256ACB654()
{
  unint64_t result = qword_269F7B710;
  if (!qword_269F7B710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B710);
  }
  return result;
}

unint64_t sub_256ACB6A4()
{
  unint64_t result = qword_269F7B718;
  if (!qword_269F7B718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B718);
  }
  return result;
}

unint64_t sub_256ACB6F0(uint64_t a1)
{
  unint64_t result = sub_256ACB718();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB718()
{
  unint64_t result = qword_269F7B720;
  if (!qword_269F7B720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B720);
  }
  return result;
}

unint64_t sub_256ACB764(uint64_t a1)
{
  unint64_t result = sub_256ACB78C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB78C()
{
  unint64_t result = qword_269F7B728;
  if (!qword_269F7B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B728);
  }
  return result;
}

unint64_t sub_256ACB7D8(uint64_t a1)
{
  unint64_t result = sub_256ACB800();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB800()
{
  unint64_t result = qword_269F7B730;
  if (!qword_269F7B730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B730);
  }
  return result;
}

uint64_t sub_256ACB84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACB878, (uint64_t (*)(void))sub_256ACB8C4);
}

unint64_t sub_256ACB878()
{
  unint64_t result = qword_269F7B738;
  if (!qword_269F7B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B738);
  }
  return result;
}

unint64_t sub_256ACB8C4()
{
  unint64_t result = qword_269F7B740;
  if (!qword_269F7B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B740);
  }
  return result;
}

unint64_t sub_256ACB914()
{
  unint64_t result = qword_269F7B748;
  if (!qword_269F7B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B748);
  }
  return result;
}

unint64_t sub_256ACB964()
{
  unint64_t result = qword_269F7B750;
  if (!qword_269F7B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B750);
  }
  return result;
}

unint64_t sub_256ACB9B0(uint64_t a1)
{
  unint64_t result = sub_256ACB9D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACB9D8()
{
  unint64_t result = qword_269F7B758;
  if (!qword_269F7B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B758);
  }
  return result;
}

unint64_t sub_256ACBA24(uint64_t a1)
{
  unint64_t result = sub_256ACBA4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBA4C()
{
  unint64_t result = qword_269F7B760;
  if (!qword_269F7B760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B760);
  }
  return result;
}

unint64_t sub_256ACBA98(uint64_t a1)
{
  unint64_t result = sub_256ACBAC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBAC0()
{
  unint64_t result = qword_269F7B768;
  if (!qword_269F7B768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B768);
  }
  return result;
}

uint64_t sub_256ACBB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACBB38, (uint64_t (*)(void))sub_256ACBB84);
}

unint64_t sub_256ACBB38()
{
  unint64_t result = qword_269F7B770;
  if (!qword_269F7B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B770);
  }
  return result;
}

unint64_t sub_256ACBB84()
{
  unint64_t result = qword_269F7B778;
  if (!qword_269F7B778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B778);
  }
  return result;
}

unint64_t sub_256ACBBD4()
{
  unint64_t result = qword_269F7B780;
  if (!qword_269F7B780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B780);
  }
  return result;
}

unint64_t sub_256ACBC24()
{
  unint64_t result = qword_269F7B788;
  if (!qword_269F7B788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B788);
  }
  return result;
}

unint64_t sub_256ACBC70(uint64_t a1)
{
  unint64_t result = sub_256ACBC98();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBC98()
{
  unint64_t result = qword_269F7B790;
  if (!qword_269F7B790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B790);
  }
  return result;
}

unint64_t sub_256ACBCE4(uint64_t a1)
{
  unint64_t result = sub_256ACBD0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBD0C()
{
  unint64_t result = qword_269F7B798;
  if (!qword_269F7B798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B798);
  }
  return result;
}

unint64_t sub_256ACBD58(uint64_t a1)
{
  unint64_t result = sub_256ACBD80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBD80()
{
  unint64_t result = qword_269F7B7A0;
  if (!qword_269F7B7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7A0);
  }
  return result;
}

uint64_t sub_256ACBDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACBDF8, (uint64_t (*)(void))sub_256ACBE44);
}

unint64_t sub_256ACBDF8()
{
  unint64_t result = qword_269F7B7A8;
  if (!qword_269F7B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7A8);
  }
  return result;
}

unint64_t sub_256ACBE44()
{
  unint64_t result = qword_269F7B7B0;
  if (!qword_269F7B7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7B0);
  }
  return result;
}

unint64_t sub_256ACBE94()
{
  unint64_t result = qword_269F7B7B8;
  if (!qword_269F7B7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7B8);
  }
  return result;
}

unint64_t sub_256ACBEE4()
{
  unint64_t result = qword_269F7B7C0;
  if (!qword_269F7B7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7C0);
  }
  return result;
}

unint64_t sub_256ACBF30(uint64_t a1)
{
  unint64_t result = sub_256ACBF58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBF58()
{
  unint64_t result = qword_269F7B7C8;
  if (!qword_269F7B7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7C8);
  }
  return result;
}

unint64_t sub_256ACBFA4(uint64_t a1)
{
  unint64_t result = sub_256ACBFCC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACBFCC()
{
  unint64_t result = qword_269F7B7D0;
  if (!qword_269F7B7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7D0);
  }
  return result;
}

unint64_t sub_256ACC018(uint64_t a1)
{
  unint64_t result = sub_256ACC040();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC040()
{
  unint64_t result = qword_269F7B7D8;
  if (!qword_269F7B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7D8);
  }
  return result;
}

uint64_t sub_256ACC08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACC0B8, (uint64_t (*)(void))sub_256ACC104);
}

unint64_t sub_256ACC0B8()
{
  unint64_t result = qword_269F7B7E0;
  if (!qword_269F7B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7E0);
  }
  return result;
}

unint64_t sub_256ACC104()
{
  unint64_t result = qword_269F7B7E8;
  if (!qword_269F7B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7E8);
  }
  return result;
}

unint64_t sub_256ACC154()
{
  unint64_t result = qword_269F7B7F0;
  if (!qword_269F7B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7F0);
  }
  return result;
}

unint64_t sub_256ACC1A4()
{
  unint64_t result = qword_269F7B7F8;
  if (!qword_269F7B7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B7F8);
  }
  return result;
}

unint64_t sub_256ACC1F0(uint64_t a1)
{
  unint64_t result = sub_256ACC218();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC218()
{
  unint64_t result = qword_269F7B800;
  if (!qword_269F7B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B800);
  }
  return result;
}

unint64_t sub_256ACC264(uint64_t a1)
{
  unint64_t result = sub_256ACC28C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC28C()
{
  unint64_t result = qword_269F7B808;
  if (!qword_269F7B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B808);
  }
  return result;
}

unint64_t sub_256ACC2D8(uint64_t a1)
{
  unint64_t result = sub_256ACC300();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC300()
{
  unint64_t result = qword_269F7B810;
  if (!qword_269F7B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B810);
  }
  return result;
}

uint64_t sub_256ACC34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACC378, (uint64_t (*)(void))sub_256ACC3C4);
}

unint64_t sub_256ACC378()
{
  unint64_t result = qword_269F7B818;
  if (!qword_269F7B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B818);
  }
  return result;
}

unint64_t sub_256ACC3C4()
{
  unint64_t result = qword_269F7B820;
  if (!qword_269F7B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B820);
  }
  return result;
}

unint64_t sub_256ACC414()
{
  unint64_t result = qword_269F7B828;
  if (!qword_269F7B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B828);
  }
  return result;
}

unint64_t sub_256ACC464()
{
  unint64_t result = qword_269F7B830;
  if (!qword_269F7B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B830);
  }
  return result;
}

unint64_t sub_256ACC4B0(uint64_t a1)
{
  unint64_t result = sub_256ACC4D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC4D8()
{
  unint64_t result = qword_269F7B838;
  if (!qword_269F7B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B838);
  }
  return result;
}

unint64_t sub_256ACC524(uint64_t a1)
{
  unint64_t result = sub_256ACC54C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC54C()
{
  unint64_t result = qword_269F7B840;
  if (!qword_269F7B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B840);
  }
  return result;
}

unint64_t sub_256ACC598(uint64_t a1)
{
  unint64_t result = sub_256ACC5C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC5C0()
{
  unint64_t result = qword_269F7B848;
  if (!qword_269F7B848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B848);
  }
  return result;
}

uint64_t sub_256ACC60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACC638, (uint64_t (*)(void))sub_256ACC684);
}

unint64_t sub_256ACC638()
{
  unint64_t result = qword_269F7B850;
  if (!qword_269F7B850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B850);
  }
  return result;
}

unint64_t sub_256ACC684()
{
  unint64_t result = qword_269F7B858;
  if (!qword_269F7B858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B858);
  }
  return result;
}

unint64_t sub_256ACC6D4()
{
  unint64_t result = qword_269F7B860;
  if (!qword_269F7B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B860);
  }
  return result;
}

unint64_t sub_256ACC724()
{
  unint64_t result = qword_269F7B868;
  if (!qword_269F7B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B868);
  }
  return result;
}

unint64_t sub_256ACC770(uint64_t a1)
{
  unint64_t result = sub_256ACC798();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC798()
{
  unint64_t result = qword_269F7B870;
  if (!qword_269F7B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B870);
  }
  return result;
}

unint64_t sub_256ACC7E4(uint64_t a1)
{
  unint64_t result = sub_256ACC80C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC80C()
{
  unint64_t result = qword_269F7B878;
  if (!qword_269F7B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B878);
  }
  return result;
}

unint64_t sub_256ACC858(uint64_t a1)
{
  unint64_t result = sub_256ACC880();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACC880()
{
  unint64_t result = qword_269F7B880;
  if (!qword_269F7B880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B880);
  }
  return result;
}

uint64_t sub_256ACC8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACC8F8, (uint64_t (*)(void))sub_256ACC944);
}

unint64_t sub_256ACC8F8()
{
  unint64_t result = qword_269F7B888;
  if (!qword_269F7B888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B888);
  }
  return result;
}

unint64_t sub_256ACC944()
{
  unint64_t result = qword_269F7B890;
  if (!qword_269F7B890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B890);
  }
  return result;
}

unint64_t sub_256ACC994()
{
  unint64_t result = qword_269F7B898;
  if (!qword_269F7B898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B898);
  }
  return result;
}

unint64_t sub_256ACC9E4()
{
  unint64_t result = qword_269F7B8A0;
  if (!qword_269F7B8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8A0);
  }
  return result;
}

unint64_t sub_256ACCA30(uint64_t a1)
{
  unint64_t result = sub_256ACCA58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCA58()
{
  unint64_t result = qword_269F7B8A8;
  if (!qword_269F7B8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8A8);
  }
  return result;
}

unint64_t sub_256ACCAA4(uint64_t a1)
{
  unint64_t result = sub_256ACCACC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCACC()
{
  unint64_t result = qword_269F7B8B0;
  if (!qword_269F7B8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8B0);
  }
  return result;
}

unint64_t sub_256ACCB18(uint64_t a1)
{
  unint64_t result = sub_256ACCB40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCB40()
{
  unint64_t result = qword_269F7B8B8;
  if (!qword_269F7B8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8B8);
  }
  return result;
}

uint64_t sub_256ACCB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACCBB8, (uint64_t (*)(void))sub_256ACCC04);
}

unint64_t sub_256ACCBB8()
{
  unint64_t result = qword_269F7B8C0;
  if (!qword_269F7B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8C0);
  }
  return result;
}

unint64_t sub_256ACCC04()
{
  unint64_t result = qword_269F7B8C8;
  if (!qword_269F7B8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8C8);
  }
  return result;
}

unint64_t sub_256ACCC54()
{
  unint64_t result = qword_269F7B8D0;
  if (!qword_269F7B8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8D0);
  }
  return result;
}

unint64_t sub_256ACCCA4()
{
  unint64_t result = qword_269F7B8D8;
  if (!qword_269F7B8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8D8);
  }
  return result;
}

unint64_t sub_256ACCCF0(uint64_t a1)
{
  unint64_t result = sub_256ACCD18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCD18()
{
  unint64_t result = qword_269F7B8E0;
  if (!qword_269F7B8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8E0);
  }
  return result;
}

unint64_t sub_256ACCD64(uint64_t a1)
{
  unint64_t result = sub_256ACCD8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCD8C()
{
  unint64_t result = qword_269F7B8E8;
  if (!qword_269F7B8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8E8);
  }
  return result;
}

unint64_t sub_256ACCDD8(uint64_t a1)
{
  unint64_t result = sub_256ACCE00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCE00()
{
  unint64_t result = qword_269F7B8F0;
  if (!qword_269F7B8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8F0);
  }
  return result;
}

uint64_t sub_256ACCE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACCE78, (uint64_t (*)(void))sub_256ACCEC4);
}

unint64_t sub_256ACCE78()
{
  unint64_t result = qword_269F7B8F8;
  if (!qword_269F7B8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B8F8);
  }
  return result;
}

unint64_t sub_256ACCEC4()
{
  unint64_t result = qword_269F7B900;
  if (!qword_269F7B900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B900);
  }
  return result;
}

unint64_t sub_256ACCF14()
{
  unint64_t result = qword_269F7B908;
  if (!qword_269F7B908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B908);
  }
  return result;
}

unint64_t sub_256ACCF64()
{
  unint64_t result = qword_269F7B910;
  if (!qword_269F7B910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B910);
  }
  return result;
}

unint64_t sub_256ACCFB0(uint64_t a1)
{
  unint64_t result = sub_256ACCFD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACCFD8()
{
  unint64_t result = qword_269F7B918;
  if (!qword_269F7B918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B918);
  }
  return result;
}

unint64_t sub_256ACD024(uint64_t a1)
{
  unint64_t result = sub_256A9F6D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD04C(uint64_t a1)
{
  unint64_t result = sub_256ACD074();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD074()
{
  unint64_t result = qword_269F7B920;
  if (!qword_269F7B920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B920);
  }
  return result;
}

uint64_t sub_256ACD0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACD0EC, (uint64_t (*)(void))sub_256ACD138);
}

unint64_t sub_256ACD0EC()
{
  unint64_t result = qword_269F7B928;
  if (!qword_269F7B928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B928);
  }
  return result;
}

unint64_t sub_256ACD138()
{
  unint64_t result = qword_269F7B930;
  if (!qword_269F7B930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B930);
  }
  return result;
}

unint64_t sub_256ACD188()
{
  unint64_t result = qword_269F7B938;
  if (!qword_269F7B938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B938);
  }
  return result;
}

unint64_t sub_256ACD1D8()
{
  unint64_t result = qword_269F7B940;
  if (!qword_269F7B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B940);
  }
  return result;
}

unint64_t sub_256ACD224(uint64_t a1)
{
  unint64_t result = sub_256ACD24C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD24C()
{
  unint64_t result = qword_26B2B3108;
  if (!qword_26B2B3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3108);
  }
  return result;
}

unint64_t sub_256ACD298(uint64_t a1)
{
  unint64_t result = sub_256ACD2C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD2C0()
{
  unint64_t result = qword_26B2B3100;
  if (!qword_26B2B3100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3100);
  }
  return result;
}

unint64_t sub_256ACD30C(uint64_t a1)
{
  unint64_t result = sub_256ACD334();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD334()
{
  unint64_t result = qword_26B2B30F8;
  if (!qword_26B2B30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B30F8);
  }
  return result;
}

uint64_t sub_256ACD380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACD3AC, (uint64_t (*)(void))sub_256ACD3F8);
}

unint64_t sub_256ACD3AC()
{
  unint64_t result = qword_26B2B30E0;
  if (!qword_26B2B30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B30E0);
  }
  return result;
}

unint64_t sub_256ACD3F8()
{
  unint64_t result = qword_26B2B30F0;
  if (!qword_26B2B30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B30F0);
  }
  return result;
}

unint64_t sub_256ACD448()
{
  unint64_t result = qword_26B2B30E8;
  if (!qword_26B2B30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B30E8);
  }
  return result;
}

unint64_t sub_256ACD494(uint64_t a1)
{
  unint64_t result = sub_256ACD4BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD4BC()
{
  unint64_t result = qword_269F7B948;
  if (!qword_269F7B948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B948);
  }
  return result;
}

unint64_t sub_256ACD508(uint64_t a1)
{
  unint64_t result = sub_256ACD530();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD530()
{
  unint64_t result = qword_269F7B950;
  if (!qword_269F7B950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B950);
  }
  return result;
}

unint64_t sub_256ACD57C(uint64_t a1)
{
  unint64_t result = sub_256ACD5A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD5A4()
{
  unint64_t result = qword_269F7B958;
  if (!qword_269F7B958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B958);
  }
  return result;
}

uint64_t sub_256ACD5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACD61C, (uint64_t (*)(void))sub_256ACD668);
}

unint64_t sub_256ACD61C()
{
  unint64_t result = qword_269F7B960;
  if (!qword_269F7B960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B960);
  }
  return result;
}

unint64_t sub_256ACD668()
{
  unint64_t result = qword_269F7B968;
  if (!qword_269F7B968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B968);
  }
  return result;
}

unint64_t sub_256ACD6B8()
{
  unint64_t result = qword_269F7B970;
  if (!qword_269F7B970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B970);
  }
  return result;
}

unint64_t sub_256ACD704(uint64_t a1)
{
  unint64_t result = sub_256ACD72C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD72C()
{
  unint64_t result = qword_269F7B978;
  if (!qword_269F7B978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B978);
  }
  return result;
}

unint64_t sub_256ACD778(uint64_t a1)
{
  unint64_t result = sub_256A9F778();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD7A0(uint64_t a1)
{
  unint64_t result = sub_256ACD7C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD7C8()
{
  unint64_t result = qword_26B2B3148;
  if (!qword_26B2B3148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3148);
  }
  return result;
}

uint64_t sub_256ACD814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACD840, (uint64_t (*)(void))sub_256ACD88C);
}

unint64_t sub_256ACD840()
{
  unint64_t result = qword_26B2B3130;
  if (!qword_26B2B3130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3130);
  }
  return result;
}

unint64_t sub_256ACD88C()
{
  unint64_t result = qword_26B2B3140;
  if (!qword_26B2B3140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3140);
  }
  return result;
}

unint64_t sub_256ACD8DC()
{
  unint64_t result = qword_26B2B3138;
  if (!qword_26B2B3138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3138);
  }
  return result;
}

unint64_t sub_256ACD92C()
{
  unint64_t result = qword_269F7B980;
  if (!qword_269F7B980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B980);
  }
  return result;
}

unint64_t sub_256ACD978(uint64_t a1)
{
  unint64_t result = sub_256ACD9A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACD9A0()
{
  unint64_t result = qword_269F7B988;
  if (!qword_269F7B988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B988);
  }
  return result;
}

unint64_t sub_256ACD9EC(uint64_t a1)
{
  unint64_t result = sub_256ACDA14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDA14()
{
  unint64_t result = qword_269F7B990;
  if (!qword_269F7B990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B990);
  }
  return result;
}

unint64_t sub_256ACDA60(uint64_t a1)
{
  unint64_t result = sub_256ACDA88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDA88()
{
  unint64_t result = qword_269F7B998;
  if (!qword_269F7B998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B998);
  }
  return result;
}

uint64_t sub_256ACDAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACDB00, (uint64_t (*)(void))sub_256ACDB4C);
}

unint64_t sub_256ACDB00()
{
  unint64_t result = qword_269F7B9A0;
  if (!qword_269F7B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9A0);
  }
  return result;
}

unint64_t sub_256ACDB4C()
{
  unint64_t result = qword_269F7B9A8;
  if (!qword_269F7B9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9A8);
  }
  return result;
}

unint64_t sub_256ACDB9C()
{
  unint64_t result = qword_269F7B9B0;
  if (!qword_269F7B9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9B0);
  }
  return result;
}

unint64_t sub_256ACDBE8(uint64_t a1)
{
  unint64_t result = sub_256ACDC10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDC10()
{
  unint64_t result = qword_269F7B9B8;
  if (!qword_269F7B9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9B8);
  }
  return result;
}

unint64_t sub_256ACDC5C(uint64_t a1)
{
  unint64_t result = sub_256ACDC84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDC84()
{
  unint64_t result = qword_269F7B9C0;
  if (!qword_269F7B9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9C0);
  }
  return result;
}

unint64_t sub_256ACDCD0(uint64_t a1)
{
  unint64_t result = sub_256ACDCF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDCF8()
{
  unint64_t result = qword_269F7B9C8;
  if (!qword_269F7B9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9C8);
  }
  return result;
}

uint64_t sub_256ACDD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACDD70, (uint64_t (*)(void))sub_256ACDDBC);
}

unint64_t sub_256ACDD70()
{
  unint64_t result = qword_269F7B9D0;
  if (!qword_269F7B9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9D0);
  }
  return result;
}

unint64_t sub_256ACDDBC()
{
  unint64_t result = qword_269F7B9D8;
  if (!qword_269F7B9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9D8);
  }
  return result;
}

unint64_t sub_256ACDE0C()
{
  unint64_t result = qword_269F7B9E0;
  if (!qword_269F7B9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9E0);
  }
  return result;
}

unint64_t sub_256ACDE58(uint64_t a1)
{
  unint64_t result = sub_256ACDE80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDE80()
{
  unint64_t result = qword_269F7B9E8;
  if (!qword_269F7B9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9E8);
  }
  return result;
}

unint64_t sub_256ACDECC(uint64_t a1)
{
  unint64_t result = sub_256ACDEF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDEF4()
{
  unint64_t result = qword_269F7B9F0;
  if (!qword_269F7B9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9F0);
  }
  return result;
}

unint64_t sub_256ACDF40(uint64_t a1)
{
  unint64_t result = sub_256ACDF68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACDF68()
{
  unint64_t result = qword_269F7B9F8;
  if (!qword_269F7B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7B9F8);
  }
  return result;
}

uint64_t sub_256ACDFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACDFE0, (uint64_t (*)(void))sub_256ACE02C);
}

unint64_t sub_256ACDFE0()
{
  unint64_t result = qword_269F7BA00;
  if (!qword_269F7BA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA00);
  }
  return result;
}

unint64_t sub_256ACE02C()
{
  unint64_t result = qword_269F7BA08;
  if (!qword_269F7BA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA08);
  }
  return result;
}

unint64_t sub_256ACE07C()
{
  unint64_t result = qword_269F7BA10;
  if (!qword_269F7BA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA10);
  }
  return result;
}

unint64_t sub_256ACE0CC()
{
  unint64_t result = qword_269F7BA18;
  if (!qword_269F7BA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA18);
  }
  return result;
}

unint64_t sub_256ACE118(uint64_t a1)
{
  unint64_t result = sub_256ACE140();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE140()
{
  unint64_t result = qword_269F7BA20;
  if (!qword_269F7BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA20);
  }
  return result;
}

unint64_t sub_256ACE18C(uint64_t a1)
{
  unint64_t result = sub_256ACE1B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE1B4()
{
  unint64_t result = qword_269F7BA28;
  if (!qword_269F7BA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA28);
  }
  return result;
}

unint64_t sub_256ACE200(uint64_t a1)
{
  unint64_t result = sub_256ACE228();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE228()
{
  unint64_t result = qword_269F7BA30;
  if (!qword_269F7BA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA30);
  }
  return result;
}

uint64_t sub_256ACE274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACE2A0, (uint64_t (*)(void))sub_256ACE2EC);
}

unint64_t sub_256ACE2A0()
{
  unint64_t result = qword_269F7BA38;
  if (!qword_269F7BA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA38);
  }
  return result;
}

unint64_t sub_256ACE2EC()
{
  unint64_t result = qword_269F7BA40;
  if (!qword_269F7BA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA40);
  }
  return result;
}

unint64_t sub_256ACE33C()
{
  unint64_t result = qword_269F7BA48;
  if (!qword_269F7BA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA48);
  }
  return result;
}

unint64_t sub_256ACE388(uint64_t a1)
{
  unint64_t result = sub_256ACE3B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE3B0()
{
  unint64_t result = qword_269F7BA50;
  if (!qword_269F7BA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA50);
  }
  return result;
}

uint64_t sub_256ACE3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACE428, (uint64_t (*)(void))sub_256ACE474);
}

unint64_t sub_256ACE428()
{
  unint64_t result = qword_269F7BA58;
  if (!qword_269F7BA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA58);
  }
  return result;
}

unint64_t sub_256ACE474()
{
  unint64_t result = qword_269F7BA60;
  if (!qword_269F7BA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA60);
  }
  return result;
}

unint64_t sub_256ACE4C4()
{
  unint64_t result = qword_269F7BA68;
  if (!qword_269F7BA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA68);
  }
  return result;
}

unint64_t sub_256ACE510(uint64_t a1)
{
  unint64_t result = sub_256ACE538();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE538()
{
  unint64_t result = qword_269F7BA70;
  if (!qword_269F7BA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA70);
  }
  return result;
}

uint64_t sub_256ACE584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACE5B0, (uint64_t (*)(void))sub_256ACE5FC);
}

unint64_t sub_256ACE5B0()
{
  unint64_t result = qword_269F7BA78;
  if (!qword_269F7BA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA78);
  }
  return result;
}

unint64_t sub_256ACE5FC()
{
  unint64_t result = qword_269F7BA80;
  if (!qword_269F7BA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA80);
  }
  return result;
}

unint64_t sub_256ACE64C()
{
  unint64_t result = qword_269F7BA88;
  if (!qword_269F7BA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA88);
  }
  return result;
}

unint64_t sub_256ACE698(uint64_t a1)
{
  unint64_t result = sub_256ACE6C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE6C0()
{
  unint64_t result = qword_269F7BA90;
  if (!qword_269F7BA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA90);
  }
  return result;
}

uint64_t sub_256ACE70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACE738, (uint64_t (*)(void))sub_256ACE784);
}

unint64_t sub_256ACE738()
{
  unint64_t result = qword_269F7BA98;
  if (!qword_269F7BA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BA98);
  }
  return result;
}

unint64_t sub_256ACE784()
{
  unint64_t result = qword_269F7BAA0;
  if (!qword_269F7BAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAA0);
  }
  return result;
}

unint64_t sub_256ACE7D4()
{
  unint64_t result = qword_269F7BAA8;
  if (!qword_269F7BAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAA8);
  }
  return result;
}

unint64_t sub_256ACE820(uint64_t a1)
{
  unint64_t result = sub_256ACE848();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE848()
{
  unint64_t result = qword_269F7BAB0;
  if (!qword_269F7BAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAB0);
  }
  return result;
}

uint64_t sub_256ACE894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACE8C0, (uint64_t (*)(void))sub_256ACE90C);
}

unint64_t sub_256ACE8C0()
{
  unint64_t result = qword_269F7BAB8;
  if (!qword_269F7BAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAB8);
  }
  return result;
}

unint64_t sub_256ACE90C()
{
  unint64_t result = qword_269F7BAC0;
  if (!qword_269F7BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAC0);
  }
  return result;
}

unint64_t sub_256ACE95C()
{
  unint64_t result = qword_269F7BAC8;
  if (!qword_269F7BAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAC8);
  }
  return result;
}

unint64_t sub_256ACE9A8(uint64_t a1)
{
  unint64_t result = sub_256ACE9D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACE9D0()
{
  unint64_t result = qword_269F7BAD0;
  if (!qword_269F7BAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAD0);
  }
  return result;
}

uint64_t sub_256ACEA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACEA48, (uint64_t (*)(void))sub_256ACEA94);
}

unint64_t sub_256ACEA48()
{
  unint64_t result = qword_269F7BAD8;
  if (!qword_269F7BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAD8);
  }
  return result;
}

unint64_t sub_256ACEA94()
{
  unint64_t result = qword_269F7BAE0;
  if (!qword_269F7BAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAE0);
  }
  return result;
}

unint64_t sub_256ACEAE4()
{
  unint64_t result = qword_269F7BAE8;
  if (!qword_269F7BAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAE8);
  }
  return result;
}

unint64_t sub_256ACEB30(uint64_t a1)
{
  unint64_t result = sub_256ACEB58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACEB58()
{
  unint64_t result = qword_269F7BAF0;
  if (!qword_269F7BAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAF0);
  }
  return result;
}

uint64_t sub_256ACEBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACEBD0, (uint64_t (*)(void))sub_256ACEC1C);
}

unint64_t sub_256ACEBD0()
{
  unint64_t result = qword_269F7BAF8;
  if (!qword_269F7BAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BAF8);
  }
  return result;
}

unint64_t sub_256ACEC1C()
{
  unint64_t result = qword_269F7BB00;
  if (!qword_269F7BB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB00);
  }
  return result;
}

unint64_t sub_256ACEC6C()
{
  unint64_t result = qword_269F7BB08;
  if (!qword_269F7BB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB08);
  }
  return result;
}

unint64_t sub_256ACECB8(uint64_t a1)
{
  unint64_t result = sub_256ACECE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACECE0()
{
  unint64_t result = qword_269F7BB10;
  if (!qword_269F7BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB10);
  }
  return result;
}

uint64_t sub_256ACED2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACED58, (uint64_t (*)(void))sub_256ACEDA4);
}

unint64_t sub_256ACED58()
{
  unint64_t result = qword_269F7BB18;
  if (!qword_269F7BB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB18);
  }
  return result;
}

unint64_t sub_256ACEDA4()
{
  unint64_t result = qword_269F7BB20;
  if (!qword_269F7BB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB20);
  }
  return result;
}

unint64_t sub_256ACEDF4()
{
  unint64_t result = qword_269F7BB28;
  if (!qword_269F7BB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB28);
  }
  return result;
}

unint64_t sub_256ACEE40(uint64_t a1)
{
  unint64_t result = sub_256ACEE68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACEE68()
{
  unint64_t result = qword_269F7BB30;
  if (!qword_269F7BB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB30);
  }
  return result;
}

uint64_t sub_256ACEEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACEEE0, (uint64_t (*)(void))sub_256ACEF2C);
}

unint64_t sub_256ACEEE0()
{
  unint64_t result = qword_269F7BB38;
  if (!qword_269F7BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB38);
  }
  return result;
}

unint64_t sub_256ACEF2C()
{
  unint64_t result = qword_269F7BB40;
  if (!qword_269F7BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB40);
  }
  return result;
}

unint64_t sub_256ACEF7C()
{
  unint64_t result = qword_269F7BB48;
  if (!qword_269F7BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB48);
  }
  return result;
}

unint64_t sub_256ACEFC8(uint64_t a1)
{
  unint64_t result = sub_256ACEFF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACEFF0()
{
  unint64_t result = qword_269F7BB50;
  if (!qword_269F7BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB50);
  }
  return result;
}

uint64_t sub_256ACF03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF068, (uint64_t (*)(void))sub_256ACF0B4);
}

unint64_t sub_256ACF068()
{
  unint64_t result = qword_269F7BB58;
  if (!qword_269F7BB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB58);
  }
  return result;
}

unint64_t sub_256ACF0B4()
{
  unint64_t result = qword_269F7BB60;
  if (!qword_269F7BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB60);
  }
  return result;
}

unint64_t sub_256ACF104()
{
  unint64_t result = qword_269F7BB68;
  if (!qword_269F7BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB68);
  }
  return result;
}

unint64_t sub_256ACF150(uint64_t a1)
{
  unint64_t result = sub_256ACF178();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACF178()
{
  unint64_t result = qword_269F7BB70;
  if (!qword_269F7BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB70);
  }
  return result;
}

uint64_t sub_256ACF1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF1F0, (uint64_t (*)(void))sub_256ACF23C);
}

unint64_t sub_256ACF1F0()
{
  unint64_t result = qword_269F7BB78;
  if (!qword_269F7BB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB78);
  }
  return result;
}

unint64_t sub_256ACF23C()
{
  unint64_t result = qword_269F7BB80;
  if (!qword_269F7BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB80);
  }
  return result;
}

unint64_t sub_256ACF28C()
{
  unint64_t result = qword_269F7BB88;
  if (!qword_269F7BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB88);
  }
  return result;
}

unint64_t sub_256ACF2D8(uint64_t a1)
{
  unint64_t result = sub_256ACF300();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACF300()
{
  unint64_t result = qword_269F7BB90;
  if (!qword_269F7BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB90);
  }
  return result;
}

uint64_t sub_256ACF34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF378, (uint64_t (*)(void))sub_256ACF3C4);
}

unint64_t sub_256ACF378()
{
  unint64_t result = qword_269F7BB98;
  if (!qword_269F7BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BB98);
  }
  return result;
}

unint64_t sub_256ACF3C4()
{
  unint64_t result = qword_269F7BBA0;
  if (!qword_269F7BBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBA0);
  }
  return result;
}

unint64_t sub_256ACF414()
{
  unint64_t result = qword_269F7BBA8;
  if (!qword_269F7BBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBA8);
  }
  return result;
}

unint64_t sub_256ACF460(uint64_t a1)
{
  unint64_t result = sub_256ACF488();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACF488()
{
  unint64_t result = qword_269F7BBB0;
  if (!qword_269F7BBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBB0);
  }
  return result;
}

uint64_t sub_256ACF4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF500, (uint64_t (*)(void))sub_256ACF54C);
}

unint64_t sub_256ACF500()
{
  unint64_t result = qword_269F7BBB8;
  if (!qword_269F7BBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBB8);
  }
  return result;
}

unint64_t sub_256ACF54C()
{
  unint64_t result = qword_269F7BBC0;
  if (!qword_269F7BBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBC0);
  }
  return result;
}

unint64_t sub_256ACF59C()
{
  unint64_t result = qword_269F7BBC8;
  if (!qword_269F7BBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBC8);
  }
  return result;
}

unint64_t sub_256ACF5E8(uint64_t a1)
{
  unint64_t result = sub_256ACF610();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACF610()
{
  unint64_t result = qword_269F7BBD0;
  if (!qword_269F7BBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBD0);
  }
  return result;
}

uint64_t sub_256ACF65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF688, (uint64_t (*)(void))sub_256ACF6D4);
}

unint64_t sub_256ACF688()
{
  unint64_t result = qword_269F7BBD8;
  if (!qword_269F7BBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBD8);
  }
  return result;
}

unint64_t sub_256ACF6D4()
{
  unint64_t result = qword_269F7BBE0;
  if (!qword_269F7BBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBE0);
  }
  return result;
}

unint64_t sub_256ACF724()
{
  unint64_t result = qword_269F7BBE8;
  if (!qword_269F7BBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBE8);
  }
  return result;
}

unint64_t sub_256ACF770(uint64_t a1)
{
  unint64_t result = sub_256ACF798();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACF798()
{
  unint64_t result = qword_269F7BBF0;
  if (!qword_269F7BBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBF0);
  }
  return result;
}

uint64_t sub_256ACF7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF810, (uint64_t (*)(void))sub_256ACF85C);
}

unint64_t sub_256ACF810()
{
  unint64_t result = qword_269F7BBF8;
  if (!qword_269F7BBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BBF8);
  }
  return result;
}

unint64_t sub_256ACF85C()
{
  unint64_t result = qword_269F7BC00;
  if (!qword_269F7BC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC00);
  }
  return result;
}

unint64_t sub_256ACF8AC()
{
  unint64_t result = qword_269F7BC08;
  if (!qword_269F7BC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC08);
  }
  return result;
}

unint64_t sub_256ACF8F8(uint64_t a1)
{
  unint64_t result = sub_256ACF920();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACF920()
{
  unint64_t result = qword_269F7BC10;
  if (!qword_269F7BC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC10);
  }
  return result;
}

uint64_t sub_256ACF96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACF998, (uint64_t (*)(void))sub_256ACF9E4);
}

unint64_t sub_256ACF998()
{
  unint64_t result = qword_269F7BC18;
  if (!qword_269F7BC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC18);
  }
  return result;
}

unint64_t sub_256ACF9E4()
{
  unint64_t result = qword_269F7BC20;
  if (!qword_269F7BC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC20);
  }
  return result;
}

unint64_t sub_256ACFA34()
{
  unint64_t result = qword_269F7BC28;
  if (!qword_269F7BC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC28);
  }
  return result;
}

unint64_t sub_256ACFA80(uint64_t a1)
{
  unint64_t result = sub_256ACFAA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACFAA8()
{
  unint64_t result = qword_269F7BC30;
  if (!qword_269F7BC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC30);
  }
  return result;
}

uint64_t sub_256ACFAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACFB20, (uint64_t (*)(void))sub_256ACFB6C);
}

unint64_t sub_256ACFB20()
{
  unint64_t result = qword_269F7BC38;
  if (!qword_269F7BC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC38);
  }
  return result;
}

unint64_t sub_256ACFB6C()
{
  unint64_t result = qword_269F7BC40;
  if (!qword_269F7BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC40);
  }
  return result;
}

unint64_t sub_256ACFBBC()
{
  unint64_t result = qword_269F7BC48;
  if (!qword_269F7BC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC48);
  }
  return result;
}

unint64_t sub_256ACFC08(uint64_t a1)
{
  unint64_t result = sub_256ACFC30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACFC30()
{
  unint64_t result = qword_269F7BC50;
  if (!qword_269F7BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC50);
  }
  return result;
}

uint64_t sub_256ACFC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACFCA8, (uint64_t (*)(void))sub_256ACFCF4);
}

unint64_t sub_256ACFCA8()
{
  unint64_t result = qword_269F7BC58;
  if (!qword_269F7BC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC58);
  }
  return result;
}

unint64_t sub_256ACFCF4()
{
  unint64_t result = qword_269F7BC60;
  if (!qword_269F7BC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC60);
  }
  return result;
}

unint64_t sub_256ACFD44()
{
  unint64_t result = qword_269F7BC68;
  if (!qword_269F7BC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC68);
  }
  return result;
}

unint64_t sub_256ACFD90(uint64_t a1)
{
  unint64_t result = sub_256ACFDB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACFDB8()
{
  unint64_t result = qword_269F7BC70;
  if (!qword_269F7BC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC70);
  }
  return result;
}

uint64_t sub_256ACFE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACFE30, (uint64_t (*)(void))sub_256ACFE7C);
}

unint64_t sub_256ACFE30()
{
  unint64_t result = qword_269F7BC78;
  if (!qword_269F7BC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC78);
  }
  return result;
}

unint64_t sub_256ACFE7C()
{
  unint64_t result = qword_269F7BC80;
  if (!qword_269F7BC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC80);
  }
  return result;
}

unint64_t sub_256ACFECC()
{
  unint64_t result = qword_269F7BC88;
  if (!qword_269F7BC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC88);
  }
  return result;
}

unint64_t sub_256ACFF18(uint64_t a1)
{
  unint64_t result = sub_256ACFF40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ACFF40()
{
  unint64_t result = qword_269F7BC90;
  if (!qword_269F7BC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC90);
  }
  return result;
}

uint64_t sub_256ACFF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ACFFB8, (uint64_t (*)(void))sub_256AD0004);
}

unint64_t sub_256ACFFB8()
{
  unint64_t result = qword_269F7BC98;
  if (!qword_269F7BC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BC98);
  }
  return result;
}

unint64_t sub_256AD0004()
{
  unint64_t result = qword_269F7BCA0;
  if (!qword_269F7BCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCA0);
  }
  return result;
}

unint64_t sub_256AD0054()
{
  unint64_t result = qword_269F7BCA8;
  if (!qword_269F7BCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCA8);
  }
  return result;
}

unint64_t sub_256AD00A0(uint64_t a1)
{
  unint64_t result = sub_256AD00C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD00C8()
{
  unint64_t result = qword_269F7BCB0;
  if (!qword_269F7BCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCB0);
  }
  return result;
}

uint64_t sub_256AD0114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0140, (uint64_t (*)(void))sub_256AD018C);
}

unint64_t sub_256AD0140()
{
  unint64_t result = qword_269F7BCB8;
  if (!qword_269F7BCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCB8);
  }
  return result;
}

unint64_t sub_256AD018C()
{
  unint64_t result = qword_269F7BCC0;
  if (!qword_269F7BCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCC0);
  }
  return result;
}

unint64_t sub_256AD01DC()
{
  unint64_t result = qword_269F7BCC8;
  if (!qword_269F7BCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCC8);
  }
  return result;
}

unint64_t sub_256AD0228(uint64_t a1)
{
  unint64_t result = sub_256AD0250();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD0250()
{
  unint64_t result = qword_269F7BCD0;
  if (!qword_269F7BCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCD0);
  }
  return result;
}

uint64_t sub_256AD029C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD02C8, (uint64_t (*)(void))sub_256AD0314);
}

unint64_t sub_256AD02C8()
{
  unint64_t result = qword_269F7BCD8;
  if (!qword_269F7BCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCD8);
  }
  return result;
}

unint64_t sub_256AD0314()
{
  unint64_t result = qword_269F7BCE0;
  if (!qword_269F7BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCE0);
  }
  return result;
}

unint64_t sub_256AD0364()
{
  unint64_t result = qword_269F7BCE8;
  if (!qword_269F7BCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCE8);
  }
  return result;
}

unint64_t sub_256AD03B0(uint64_t a1)
{
  unint64_t result = sub_256AD03D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD03D8()
{
  unint64_t result = qword_269F7BCF0;
  if (!qword_269F7BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCF0);
  }
  return result;
}

uint64_t sub_256AD0424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0450, (uint64_t (*)(void))sub_256AD049C);
}

unint64_t sub_256AD0450()
{
  unint64_t result = qword_269F7BCF8;
  if (!qword_269F7BCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BCF8);
  }
  return result;
}

unint64_t sub_256AD049C()
{
  unint64_t result = qword_269F7BD00;
  if (!qword_269F7BD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD00);
  }
  return result;
}

unint64_t sub_256AD04EC()
{
  unint64_t result = qword_269F7BD08;
  if (!qword_269F7BD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD08);
  }
  return result;
}

unint64_t sub_256AD0538(uint64_t a1)
{
  unint64_t result = sub_256AD0560();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD0560()
{
  unint64_t result = qword_269F7BD10;
  if (!qword_269F7BD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD10);
  }
  return result;
}

uint64_t sub_256AD05AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD05D8, (uint64_t (*)(void))sub_256AD0624);
}

unint64_t sub_256AD05D8()
{
  unint64_t result = qword_269F7BD18;
  if (!qword_269F7BD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD18);
  }
  return result;
}

unint64_t sub_256AD0624()
{
  unint64_t result = qword_269F7BD20;
  if (!qword_269F7BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD20);
  }
  return result;
}

unint64_t sub_256AD0674()
{
  unint64_t result = qword_269F7BD28;
  if (!qword_269F7BD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD28);
  }
  return result;
}

unint64_t sub_256AD06C0(uint64_t a1)
{
  unint64_t result = sub_256AD06E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD06E8()
{
  unint64_t result = qword_269F7BD30;
  if (!qword_269F7BD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD30);
  }
  return result;
}

uint64_t sub_256AD0734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0760, (uint64_t (*)(void))sub_256AD07AC);
}

unint64_t sub_256AD0760()
{
  unint64_t result = qword_269F7BD38;
  if (!qword_269F7BD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD38);
  }
  return result;
}

unint64_t sub_256AD07AC()
{
  unint64_t result = qword_269F7BD40;
  if (!qword_269F7BD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD40);
  }
  return result;
}

unint64_t sub_256AD07FC()
{
  unint64_t result = qword_269F7BD48;
  if (!qword_269F7BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD48);
  }
  return result;
}

unint64_t sub_256AD0848(uint64_t a1)
{
  unint64_t result = sub_256AD0870();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD0870()
{
  unint64_t result = qword_269F7BD50;
  if (!qword_269F7BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD50);
  }
  return result;
}

uint64_t sub_256AD08BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD08E8, (uint64_t (*)(void))sub_256AD0934);
}

unint64_t sub_256AD08E8()
{
  unint64_t result = qword_269F7BD58;
  if (!qword_269F7BD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD58);
  }
  return result;
}

unint64_t sub_256AD0934()
{
  unint64_t result = qword_269F7BD60;
  if (!qword_269F7BD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD60);
  }
  return result;
}

unint64_t sub_256AD0984()
{
  unint64_t result = qword_269F7BD68;
  if (!qword_269F7BD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD68);
  }
  return result;
}

unint64_t sub_256AD09D0(uint64_t a1)
{
  unint64_t result = sub_256AD09F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD09F8()
{
  unint64_t result = qword_269F7BD70;
  if (!qword_269F7BD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD70);
  }
  return result;
}

uint64_t sub_256AD0A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0A70, (uint64_t (*)(void))sub_256AD0ABC);
}

unint64_t sub_256AD0A70()
{
  unint64_t result = qword_269F7BD78;
  if (!qword_269F7BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD78);
  }
  return result;
}

unint64_t sub_256AD0ABC()
{
  unint64_t result = qword_269F7BD80;
  if (!qword_269F7BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD80);
  }
  return result;
}

unint64_t sub_256AD0B0C()
{
  unint64_t result = qword_269F7BD88;
  if (!qword_269F7BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD88);
  }
  return result;
}

unint64_t sub_256AD0B58(uint64_t a1)
{
  unint64_t result = sub_256AD0B80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD0B80()
{
  unint64_t result = qword_269F7BD90;
  if (!qword_269F7BD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD90);
  }
  return result;
}

uint64_t sub_256AD0BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0BF8, (uint64_t (*)(void))sub_256AD0C44);
}

unint64_t sub_256AD0BF8()
{
  unint64_t result = qword_269F7BD98;
  if (!qword_269F7BD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BD98);
  }
  return result;
}

unint64_t sub_256AD0C44()
{
  unint64_t result = qword_269F7BDA0;
  if (!qword_269F7BDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDA0);
  }
  return result;
}

unint64_t sub_256AD0C94()
{
  unint64_t result = qword_269F7BDA8;
  if (!qword_269F7BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDA8);
  }
  return result;
}

unint64_t sub_256AD0CE0(uint64_t a1)
{
  unint64_t result = sub_256AD0D08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD0D08()
{
  unint64_t result = qword_269F7BDB0;
  if (!qword_269F7BDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDB0);
  }
  return result;
}

uint64_t sub_256AD0D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0D80, (uint64_t (*)(void))sub_256AD0DCC);
}

unint64_t sub_256AD0D80()
{
  unint64_t result = qword_269F7BDB8;
  if (!qword_269F7BDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDB8);
  }
  return result;
}

unint64_t sub_256AD0DCC()
{
  unint64_t result = qword_269F7BDC0;
  if (!qword_269F7BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDC0);
  }
  return result;
}

unint64_t sub_256AD0E1C()
{
  unint64_t result = qword_269F7BDC8;
  if (!qword_269F7BDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDC8);
  }
  return result;
}

unint64_t sub_256AD0E68(uint64_t a1)
{
  unint64_t result = sub_256AD0E90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD0E90()
{
  unint64_t result = qword_269F7BDD0;
  if (!qword_269F7BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDD0);
  }
  return result;
}

uint64_t sub_256AD0EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD0F08, (uint64_t (*)(void))sub_256AD0F54);
}

unint64_t sub_256AD0F08()
{
  unint64_t result = qword_269F7BDD8;
  if (!qword_269F7BDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDD8);
  }
  return result;
}

unint64_t sub_256AD0F54()
{
  unint64_t result = qword_269F7BDE0;
  if (!qword_269F7BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDE0);
  }
  return result;
}

unint64_t sub_256AD0FA4()
{
  unint64_t result = qword_269F7BDE8;
  if (!qword_269F7BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDE8);
  }
  return result;
}

unint64_t sub_256AD0FF0(uint64_t a1)
{
  unint64_t result = sub_256AD1018();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1018()
{
  unint64_t result = qword_269F7BDF0;
  if (!qword_269F7BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDF0);
  }
  return result;
}

uint64_t sub_256AD1064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1090, (uint64_t (*)(void))sub_256AD10DC);
}

unint64_t sub_256AD1090()
{
  unint64_t result = qword_269F7BDF8;
  if (!qword_269F7BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BDF8);
  }
  return result;
}

unint64_t sub_256AD10DC()
{
  unint64_t result = qword_269F7BE00;
  if (!qword_269F7BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE00);
  }
  return result;
}

unint64_t sub_256AD112C()
{
  unint64_t result = qword_269F7BE08;
  if (!qword_269F7BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE08);
  }
  return result;
}

unint64_t sub_256AD1178(uint64_t a1)
{
  unint64_t result = sub_256AD11A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD11A0()
{
  unint64_t result = qword_269F7BE10;
  if (!qword_269F7BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE10);
  }
  return result;
}

uint64_t sub_256AD11EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1218, (uint64_t (*)(void))sub_256AD1264);
}

unint64_t sub_256AD1218()
{
  unint64_t result = qword_269F7BE18;
  if (!qword_269F7BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE18);
  }
  return result;
}

unint64_t sub_256AD1264()
{
  unint64_t result = qword_269F7BE20;
  if (!qword_269F7BE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE20);
  }
  return result;
}

unint64_t sub_256AD12B4()
{
  unint64_t result = qword_269F7BE28;
  if (!qword_269F7BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE28);
  }
  return result;
}

unint64_t sub_256AD1300(uint64_t a1)
{
  unint64_t result = sub_256AD1328();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1328()
{
  unint64_t result = qword_269F7BE30;
  if (!qword_269F7BE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE30);
  }
  return result;
}

uint64_t sub_256AD1374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD13A0, (uint64_t (*)(void))sub_256AD13EC);
}

unint64_t sub_256AD13A0()
{
  unint64_t result = qword_269F7BE38;
  if (!qword_269F7BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE38);
  }
  return result;
}

unint64_t sub_256AD13EC()
{
  unint64_t result = qword_269F7BE40;
  if (!qword_269F7BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE40);
  }
  return result;
}

unint64_t sub_256AD143C()
{
  unint64_t result = qword_269F7BE48;
  if (!qword_269F7BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE48);
  }
  return result;
}

unint64_t sub_256AD1488(uint64_t a1)
{
  unint64_t result = sub_256AD14B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD14B0()
{
  unint64_t result = qword_269F7BE50;
  if (!qword_269F7BE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE50);
  }
  return result;
}

uint64_t sub_256AD14FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1528, (uint64_t (*)(void))sub_256AD1574);
}

unint64_t sub_256AD1528()
{
  unint64_t result = qword_269F7BE58;
  if (!qword_269F7BE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE58);
  }
  return result;
}

unint64_t sub_256AD1574()
{
  unint64_t result = qword_269F7BE60;
  if (!qword_269F7BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE60);
  }
  return result;
}

unint64_t sub_256AD15C4()
{
  unint64_t result = qword_269F7BE68;
  if (!qword_269F7BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE68);
  }
  return result;
}

unint64_t sub_256AD1610(uint64_t a1)
{
  unint64_t result = sub_256AD1638();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1638()
{
  unint64_t result = qword_269F7BE70;
  if (!qword_269F7BE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE70);
  }
  return result;
}

uint64_t sub_256AD1684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD16B0, (uint64_t (*)(void))sub_256AD16FC);
}

unint64_t sub_256AD16B0()
{
  unint64_t result = qword_269F7BE78;
  if (!qword_269F7BE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE78);
  }
  return result;
}

unint64_t sub_256AD16FC()
{
  unint64_t result = qword_269F7BE80;
  if (!qword_269F7BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE80);
  }
  return result;
}

unint64_t sub_256AD174C()
{
  unint64_t result = qword_269F7BE88;
  if (!qword_269F7BE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE88);
  }
  return result;
}

unint64_t sub_256AD1798(uint64_t a1)
{
  unint64_t result = sub_256AD17C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD17C0()
{
  unint64_t result = qword_269F7BE90;
  if (!qword_269F7BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE90);
  }
  return result;
}

uint64_t sub_256AD180C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1838, (uint64_t (*)(void))sub_256AD1884);
}

unint64_t sub_256AD1838()
{
  unint64_t result = qword_269F7BE98;
  if (!qword_269F7BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BE98);
  }
  return result;
}

unint64_t sub_256AD1884()
{
  unint64_t result = qword_269F7BEA0;
  if (!qword_269F7BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEA0);
  }
  return result;
}

unint64_t sub_256AD18D4()
{
  unint64_t result = qword_269F7BEA8;
  if (!qword_269F7BEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEA8);
  }
  return result;
}

unint64_t sub_256AD1920(uint64_t a1)
{
  unint64_t result = sub_256AD1948();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1948()
{
  unint64_t result = qword_269F7BEB0;
  if (!qword_269F7BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEB0);
  }
  return result;
}

uint64_t sub_256AD1994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD19C0, (uint64_t (*)(void))sub_256AD1A0C);
}

unint64_t sub_256AD19C0()
{
  unint64_t result = qword_269F7BEB8;
  if (!qword_269F7BEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEB8);
  }
  return result;
}

unint64_t sub_256AD1A0C()
{
  unint64_t result = qword_269F7BEC0;
  if (!qword_269F7BEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEC0);
  }
  return result;
}

unint64_t sub_256AD1A5C()
{
  unint64_t result = qword_269F7BEC8;
  if (!qword_269F7BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEC8);
  }
  return result;
}

unint64_t sub_256AD1AA8(uint64_t a1)
{
  unint64_t result = sub_256AD1AD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1AD0()
{
  unint64_t result = qword_269F7BED0;
  if (!qword_269F7BED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BED0);
  }
  return result;
}

uint64_t sub_256AD1B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1B48, (uint64_t (*)(void))sub_256AD1B94);
}

unint64_t sub_256AD1B48()
{
  unint64_t result = qword_269F7BED8;
  if (!qword_269F7BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BED8);
  }
  return result;
}

unint64_t sub_256AD1B94()
{
  unint64_t result = qword_269F7BEE0;
  if (!qword_269F7BEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEE0);
  }
  return result;
}

unint64_t sub_256AD1BE4()
{
  unint64_t result = qword_269F7BEE8;
  if (!qword_269F7BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEE8);
  }
  return result;
}

unint64_t sub_256AD1C30(uint64_t a1)
{
  unint64_t result = sub_256AD1C58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1C58()
{
  unint64_t result = qword_269F7BEF0;
  if (!qword_269F7BEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEF0);
  }
  return result;
}

uint64_t sub_256AD1CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1CD0, (uint64_t (*)(void))sub_256AD1D1C);
}

unint64_t sub_256AD1CD0()
{
  unint64_t result = qword_269F7BEF8;
  if (!qword_269F7BEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BEF8);
  }
  return result;
}

unint64_t sub_256AD1D1C()
{
  unint64_t result = qword_269F7BF00;
  if (!qword_269F7BF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF00);
  }
  return result;
}

unint64_t sub_256AD1D6C()
{
  unint64_t result = qword_269F7BF08;
  if (!qword_269F7BF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF08);
  }
  return result;
}

unint64_t sub_256AD1DB8(uint64_t a1)
{
  unint64_t result = sub_256AD1DE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1DE0()
{
  unint64_t result = qword_269F7BF10;
  if (!qword_269F7BF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF10);
  }
  return result;
}

uint64_t sub_256AD1E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1E58, (uint64_t (*)(void))sub_256AD1EA4);
}

unint64_t sub_256AD1E58()
{
  unint64_t result = qword_269F7BF18;
  if (!qword_269F7BF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF18);
  }
  return result;
}

unint64_t sub_256AD1EA4()
{
  unint64_t result = qword_269F7BF20;
  if (!qword_269F7BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF20);
  }
  return result;
}

unint64_t sub_256AD1EF4()
{
  unint64_t result = qword_269F7BF28;
  if (!qword_269F7BF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF28);
  }
  return result;
}

unint64_t sub_256AD1F40(uint64_t a1)
{
  unint64_t result = sub_256AD1F68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD1F68()
{
  unint64_t result = qword_269F7BF30;
  if (!qword_269F7BF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF30);
  }
  return result;
}

uint64_t sub_256AD1FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD1FE0, (uint64_t (*)(void))sub_256AD202C);
}

unint64_t sub_256AD1FE0()
{
  unint64_t result = qword_269F7BF38;
  if (!qword_269F7BF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF38);
  }
  return result;
}

unint64_t sub_256AD202C()
{
  unint64_t result = qword_269F7BF40;
  if (!qword_269F7BF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF40);
  }
  return result;
}

unint64_t sub_256AD207C()
{
  unint64_t result = qword_269F7BF48;
  if (!qword_269F7BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF48);
  }
  return result;
}

unint64_t sub_256AD20C8(uint64_t a1)
{
  unint64_t result = sub_256AD20F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD20F0()
{
  unint64_t result = qword_269F7BF50;
  if (!qword_269F7BF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF50);
  }
  return result;
}

uint64_t sub_256AD213C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2168, (uint64_t (*)(void))sub_256AD21B4);
}

unint64_t sub_256AD2168()
{
  unint64_t result = qword_269F7BF58;
  if (!qword_269F7BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF58);
  }
  return result;
}

unint64_t sub_256AD21B4()
{
  unint64_t result = qword_269F7BF60;
  if (!qword_269F7BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF60);
  }
  return result;
}

unint64_t sub_256AD2204()
{
  unint64_t result = qword_269F7BF68;
  if (!qword_269F7BF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF68);
  }
  return result;
}

unint64_t sub_256AD2250(uint64_t a1)
{
  unint64_t result = sub_256AD2278();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2278()
{
  unint64_t result = qword_269F7BF70;
  if (!qword_269F7BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF70);
  }
  return result;
}

unint64_t sub_256AD22C4(uint64_t a1)
{
  unint64_t result = sub_256AD22EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD22EC()
{
  unint64_t result = qword_269F7BF78;
  if (!qword_269F7BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF78);
  }
  return result;
}

uint64_t sub_256AD2338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2364, (uint64_t (*)(void))sub_256AD23B0);
}

unint64_t sub_256AD2364()
{
  unint64_t result = qword_269F7BF80;
  if (!qword_269F7BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF80);
  }
  return result;
}

unint64_t sub_256AD23B0()
{
  unint64_t result = qword_269F7BF88;
  if (!qword_269F7BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF88);
  }
  return result;
}

unint64_t sub_256AD2400()
{
  unint64_t result = qword_269F7BF90;
  if (!qword_269F7BF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF90);
  }
  return result;
}

unint64_t sub_256AD244C(uint64_t a1)
{
  unint64_t result = sub_256AD2474();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2474()
{
  unint64_t result = qword_269F7BF98;
  if (!qword_269F7BF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BF98);
  }
  return result;
}

uint64_t sub_256AD24C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD24EC, (uint64_t (*)(void))sub_256AD2538);
}

unint64_t sub_256AD24EC()
{
  unint64_t result = qword_269F7BFA0;
  if (!qword_269F7BFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFA0);
  }
  return result;
}

unint64_t sub_256AD2538()
{
  unint64_t result = qword_269F7BFA8;
  if (!qword_269F7BFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFA8);
  }
  return result;
}

unint64_t sub_256AD2588()
{
  unint64_t result = qword_269F7BFB0;
  if (!qword_269F7BFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFB0);
  }
  return result;
}

unint64_t sub_256AD25D4(uint64_t a1)
{
  unint64_t result = sub_256AD25FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD25FC()
{
  unint64_t result = qword_269F7BFB8;
  if (!qword_269F7BFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFB8);
  }
  return result;
}

uint64_t sub_256AD2648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2674, (uint64_t (*)(void))sub_256AD26C0);
}

unint64_t sub_256AD2674()
{
  unint64_t result = qword_269F7BFC0;
  if (!qword_269F7BFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFC0);
  }
  return result;
}

unint64_t sub_256AD26C0()
{
  unint64_t result = qword_269F7BFC8;
  if (!qword_269F7BFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFC8);
  }
  return result;
}

unint64_t sub_256AD2710()
{
  unint64_t result = qword_269F7BFD0;
  if (!qword_269F7BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFD0);
  }
  return result;
}

unint64_t sub_256AD275C(uint64_t a1)
{
  unint64_t result = sub_256AD2784();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2784()
{
  unint64_t result = qword_269F7BFD8;
  if (!qword_269F7BFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFD8);
  }
  return result;
}

uint64_t sub_256AD27D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD27FC, (uint64_t (*)(void))sub_256AD2848);
}

unint64_t sub_256AD27FC()
{
  unint64_t result = qword_269F7BFE0;
  if (!qword_269F7BFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFE0);
  }
  return result;
}

unint64_t sub_256AD2848()
{
  unint64_t result = qword_269F7BFE8;
  if (!qword_269F7BFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFE8);
  }
  return result;
}

unint64_t sub_256AD2898()
{
  unint64_t result = qword_269F7BFF0;
  if (!qword_269F7BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFF0);
  }
  return result;
}

unint64_t sub_256AD28E4(uint64_t a1)
{
  unint64_t result = sub_256AD290C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD290C()
{
  unint64_t result = qword_269F7BFF8;
  if (!qword_269F7BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7BFF8);
  }
  return result;
}

uint64_t sub_256AD2958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2984, (uint64_t (*)(void))sub_256AD29D0);
}

unint64_t sub_256AD2984()
{
  unint64_t result = qword_269F7C000;
  if (!qword_269F7C000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C000);
  }
  return result;
}

unint64_t sub_256AD29D0()
{
  unint64_t result = qword_269F7C008;
  if (!qword_269F7C008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C008);
  }
  return result;
}

unint64_t sub_256AD2A20()
{
  unint64_t result = qword_269F7C010;
  if (!qword_269F7C010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C010);
  }
  return result;
}

unint64_t sub_256AD2A6C(uint64_t a1)
{
  unint64_t result = sub_256AD2A94();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2A94()
{
  unint64_t result = qword_269F7C018;
  if (!qword_269F7C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C018);
  }
  return result;
}

uint64_t sub_256AD2AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2B0C, (uint64_t (*)(void))sub_256AD2B58);
}

unint64_t sub_256AD2B0C()
{
  unint64_t result = qword_269F7C020;
  if (!qword_269F7C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C020);
  }
  return result;
}

unint64_t sub_256AD2B58()
{
  unint64_t result = qword_269F7C028;
  if (!qword_269F7C028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C028);
  }
  return result;
}

unint64_t sub_256AD2BA8()
{
  unint64_t result = qword_269F7C030;
  if (!qword_269F7C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C030);
  }
  return result;
}

unint64_t sub_256AD2BF4(uint64_t a1)
{
  unint64_t result = sub_256AD2C1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2C1C()
{
  unint64_t result = qword_269F7C038;
  if (!qword_269F7C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C038);
  }
  return result;
}

uint64_t sub_256AD2C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2C94, (uint64_t (*)(void))sub_256AD2CE0);
}

unint64_t sub_256AD2C94()
{
  unint64_t result = qword_269F7C040;
  if (!qword_269F7C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C040);
  }
  return result;
}

unint64_t sub_256AD2CE0()
{
  unint64_t result = qword_269F7C048;
  if (!qword_269F7C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C048);
  }
  return result;
}

unint64_t sub_256AD2D30()
{
  unint64_t result = qword_269F7C050;
  if (!qword_269F7C050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C050);
  }
  return result;
}

unint64_t sub_256AD2D7C(uint64_t a1)
{
  unint64_t result = sub_256AD2DA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2DA4()
{
  unint64_t result = qword_269F7C058;
  if (!qword_269F7C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C058);
  }
  return result;
}

uint64_t sub_256AD2DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2E1C, (uint64_t (*)(void))sub_256AD2E68);
}

unint64_t sub_256AD2E1C()
{
  unint64_t result = qword_269F7C060;
  if (!qword_269F7C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C060);
  }
  return result;
}

unint64_t sub_256AD2E68()
{
  unint64_t result = qword_269F7C068;
  if (!qword_269F7C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C068);
  }
  return result;
}

unint64_t sub_256AD2EB8()
{
  unint64_t result = qword_269F7C070;
  if (!qword_269F7C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C070);
  }
  return result;
}

unint64_t sub_256AD2F04(uint64_t a1)
{
  unint64_t result = sub_256AD2F2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD2F2C()
{
  unint64_t result = qword_269F7C078;
  if (!qword_269F7C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C078);
  }
  return result;
}

uint64_t sub_256AD2F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD2FA4, (uint64_t (*)(void))sub_256AD2FF0);
}

unint64_t sub_256AD2FA4()
{
  unint64_t result = qword_269F7C080;
  if (!qword_269F7C080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C080);
  }
  return result;
}

unint64_t sub_256AD2FF0()
{
  unint64_t result = qword_269F7C088;
  if (!qword_269F7C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C088);
  }
  return result;
}

unint64_t sub_256AD3040()
{
  unint64_t result = qword_269F7C090;
  if (!qword_269F7C090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C090);
  }
  return result;
}

unint64_t sub_256AD308C(uint64_t a1)
{
  unint64_t result = sub_256AD30B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD30B4()
{
  unint64_t result = qword_269F7C098;
  if (!qword_269F7C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C098);
  }
  return result;
}

uint64_t sub_256AD3100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD312C, (uint64_t (*)(void))sub_256AD3178);
}

unint64_t sub_256AD312C()
{
  unint64_t result = qword_269F7C0A0;
  if (!qword_269F7C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0A0);
  }
  return result;
}

unint64_t sub_256AD3178()
{
  unint64_t result = qword_269F7C0A8;
  if (!qword_269F7C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0A8);
  }
  return result;
}

unint64_t sub_256AD31C8()
{
  unint64_t result = qword_269F7C0B0;
  if (!qword_269F7C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0B0);
  }
  return result;
}

unint64_t sub_256AD3214(uint64_t a1)
{
  unint64_t result = sub_256AD323C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD323C()
{
  unint64_t result = qword_269F7C0B8;
  if (!qword_269F7C0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0B8);
  }
  return result;
}

uint64_t sub_256AD3288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD32B4, (uint64_t (*)(void))sub_256AD3300);
}

unint64_t sub_256AD32B4()
{
  unint64_t result = qword_269F7C0C0;
  if (!qword_269F7C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0C0);
  }
  return result;
}

unint64_t sub_256AD3300()
{
  unint64_t result = qword_269F7C0C8;
  if (!qword_269F7C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0C8);
  }
  return result;
}

unint64_t sub_256AD3350()
{
  unint64_t result = qword_269F7C0D0;
  if (!qword_269F7C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0D0);
  }
  return result;
}

unint64_t sub_256AD339C(uint64_t a1)
{
  unint64_t result = sub_256AD33C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD33C4()
{
  unint64_t result = qword_269F7C0D8;
  if (!qword_269F7C0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0D8);
  }
  return result;
}

uint64_t sub_256AD3410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD343C, (uint64_t (*)(void))sub_256AD3488);
}

unint64_t sub_256AD343C()
{
  unint64_t result = qword_269F7C0E0;
  if (!qword_269F7C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0E0);
  }
  return result;
}

unint64_t sub_256AD3488()
{
  unint64_t result = qword_269F7C0E8;
  if (!qword_269F7C0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0E8);
  }
  return result;
}

unint64_t sub_256AD34D8()
{
  unint64_t result = qword_269F7C0F0;
  if (!qword_269F7C0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0F0);
  }
  return result;
}

unint64_t sub_256AD3524(uint64_t a1)
{
  unint64_t result = sub_256AD354C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD354C()
{
  unint64_t result = qword_269F7C0F8;
  if (!qword_269F7C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C0F8);
  }
  return result;
}

uint64_t sub_256AD3598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD35C4, (uint64_t (*)(void))sub_256AD3610);
}

unint64_t sub_256AD35C4()
{
  unint64_t result = qword_269F7C100;
  if (!qword_269F7C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C100);
  }
  return result;
}

unint64_t sub_256AD3610()
{
  unint64_t result = qword_269F7C108;
  if (!qword_269F7C108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C108);
  }
  return result;
}

unint64_t sub_256AD3660()
{
  unint64_t result = qword_269F7C110;
  if (!qword_269F7C110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C110);
  }
  return result;
}

unint64_t sub_256AD36AC(uint64_t a1)
{
  unint64_t result = sub_256AD36D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD36D4()
{
  unint64_t result = qword_269F7C118;
  if (!qword_269F7C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C118);
  }
  return result;
}

uint64_t sub_256AD3720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD374C, (uint64_t (*)(void))sub_256AD3798);
}

unint64_t sub_256AD374C()
{
  unint64_t result = qword_269F7C120;
  if (!qword_269F7C120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C120);
  }
  return result;
}

unint64_t sub_256AD3798()
{
  unint64_t result = qword_269F7C128;
  if (!qword_269F7C128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C128);
  }
  return result;
}

unint64_t sub_256AD37E8()
{
  unint64_t result = qword_269F7C130;
  if (!qword_269F7C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C130);
  }
  return result;
}

unint64_t sub_256AD3834(uint64_t a1)
{
  unint64_t result = sub_256AD385C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD385C()
{
  unint64_t result = qword_269F7C138;
  if (!qword_269F7C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C138);
  }
  return result;
}

uint64_t sub_256AD38A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD38D4, (uint64_t (*)(void))sub_256AD3920);
}

unint64_t sub_256AD38D4()
{
  unint64_t result = qword_269F7C140;
  if (!qword_269F7C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C140);
  }
  return result;
}

unint64_t sub_256AD3920()
{
  unint64_t result = qword_269F7C148;
  if (!qword_269F7C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C148);
  }
  return result;
}

unint64_t sub_256AD3970()
{
  unint64_t result = qword_269F7C150;
  if (!qword_269F7C150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C150);
  }
  return result;
}

unint64_t sub_256AD39BC(uint64_t a1)
{
  unint64_t result = sub_256AD39E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD39E4()
{
  unint64_t result = qword_269F7C158;
  if (!qword_269F7C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C158);
  }
  return result;
}

uint64_t sub_256AD3A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD3A5C, (uint64_t (*)(void))sub_256AD3AA8);
}

unint64_t sub_256AD3A5C()
{
  unint64_t result = qword_269F7C160;
  if (!qword_269F7C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C160);
  }
  return result;
}

unint64_t sub_256AD3AA8()
{
  unint64_t result = qword_269F7C168;
  if (!qword_269F7C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C168);
  }
  return result;
}

unint64_t sub_256AD3AF8()
{
  unint64_t result = qword_269F7C170;
  if (!qword_269F7C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C170);
  }
  return result;
}

unint64_t sub_256AD3B44(uint64_t a1)
{
  unint64_t result = sub_256AD3B6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD3B6C()
{
  unint64_t result = qword_269F7C178;
  if (!qword_269F7C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C178);
  }
  return result;
}

uint64_t sub_256AD3BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD3BE4, (uint64_t (*)(void))sub_256AD3C30);
}

unint64_t sub_256AD3BE4()
{
  unint64_t result = qword_269F7C180;
  if (!qword_269F7C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C180);
  }
  return result;
}

unint64_t sub_256AD3C30()
{
  unint64_t result = qword_269F7C188;
  if (!qword_269F7C188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C188);
  }
  return result;
}

unint64_t sub_256AD3C80()
{
  unint64_t result = qword_269F7C190;
  if (!qword_269F7C190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C190);
  }
  return result;
}

unint64_t sub_256AD3CCC(uint64_t a1)
{
  unint64_t result = sub_256AD3CF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD3CF4()
{
  unint64_t result = qword_269F7C198;
  if (!qword_269F7C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C198);
  }
  return result;
}

uint64_t sub_256AD3D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD3D6C, (uint64_t (*)(void))sub_256AD3DB8);
}

unint64_t sub_256AD3D6C()
{
  unint64_t result = qword_269F7C1A0;
  if (!qword_269F7C1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1A0);
  }
  return result;
}

unint64_t sub_256AD3DB8()
{
  unint64_t result = qword_269F7C1A8;
  if (!qword_269F7C1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1A8);
  }
  return result;
}

unint64_t sub_256AD3E08()
{
  unint64_t result = qword_269F7C1B0;
  if (!qword_269F7C1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1B0);
  }
  return result;
}

unint64_t sub_256AD3E54(uint64_t a1)
{
  unint64_t result = sub_256AD3E7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD3E7C()
{
  unint64_t result = qword_269F7C1B8;
  if (!qword_269F7C1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1B8);
  }
  return result;
}

uint64_t sub_256AD3EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD3EF4, (uint64_t (*)(void))sub_256AD3F40);
}

unint64_t sub_256AD3EF4()
{
  unint64_t result = qword_269F7C1C0;
  if (!qword_269F7C1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1C0);
  }
  return result;
}

unint64_t sub_256AD3F40()
{
  unint64_t result = qword_269F7C1C8;
  if (!qword_269F7C1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1C8);
  }
  return result;
}

unint64_t sub_256AD3F90()
{
  unint64_t result = qword_269F7C1D0;
  if (!qword_269F7C1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1D0);
  }
  return result;
}

unint64_t sub_256AD3FDC(uint64_t a1)
{
  unint64_t result = sub_256AD4004();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4004()
{
  unint64_t result = qword_269F7C1D8;
  if (!qword_269F7C1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1D8);
  }
  return result;
}

uint64_t sub_256AD4050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD407C, (uint64_t (*)(void))sub_256AD40C8);
}

unint64_t sub_256AD407C()
{
  unint64_t result = qword_269F7C1E0;
  if (!qword_269F7C1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1E0);
  }
  return result;
}

unint64_t sub_256AD40C8()
{
  unint64_t result = qword_269F7C1E8;
  if (!qword_269F7C1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1E8);
  }
  return result;
}

unint64_t sub_256AD4118()
{
  unint64_t result = qword_269F7C1F0;
  if (!qword_269F7C1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1F0);
  }
  return result;
}

unint64_t sub_256AD4164(uint64_t a1)
{
  unint64_t result = sub_256AD418C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD418C()
{
  unint64_t result = qword_269F7C1F8;
  if (!qword_269F7C1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C1F8);
  }
  return result;
}

uint64_t sub_256AD41D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4204, (uint64_t (*)(void))sub_256AD4250);
}

unint64_t sub_256AD4204()
{
  unint64_t result = qword_269F7C200;
  if (!qword_269F7C200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C200);
  }
  return result;
}

unint64_t sub_256AD4250()
{
  unint64_t result = qword_269F7C208;
  if (!qword_269F7C208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C208);
  }
  return result;
}

unint64_t sub_256AD42A0()
{
  unint64_t result = qword_269F7C210;
  if (!qword_269F7C210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C210);
  }
  return result;
}

unint64_t sub_256AD42EC(uint64_t a1)
{
  unint64_t result = sub_256AD4314();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4314()
{
  unint64_t result = qword_269F7C218;
  if (!qword_269F7C218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C218);
  }
  return result;
}

uint64_t sub_256AD4360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD438C, (uint64_t (*)(void))sub_256AD43D8);
}

unint64_t sub_256AD438C()
{
  unint64_t result = qword_269F7C220;
  if (!qword_269F7C220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C220);
  }
  return result;
}

unint64_t sub_256AD43D8()
{
  unint64_t result = qword_269F7C228;
  if (!qword_269F7C228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C228);
  }
  return result;
}

unint64_t sub_256AD4428()
{
  unint64_t result = qword_269F7C230;
  if (!qword_269F7C230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C230);
  }
  return result;
}

unint64_t sub_256AD4474(uint64_t a1)
{
  unint64_t result = sub_256AD449C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD449C()
{
  unint64_t result = qword_269F7C238;
  if (!qword_269F7C238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C238);
  }
  return result;
}

uint64_t sub_256AD44E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4514, (uint64_t (*)(void))sub_256AD4560);
}

unint64_t sub_256AD4514()
{
  unint64_t result = qword_269F7C240;
  if (!qword_269F7C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C240);
  }
  return result;
}

unint64_t sub_256AD4560()
{
  unint64_t result = qword_269F7C248;
  if (!qword_269F7C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C248);
  }
  return result;
}

unint64_t sub_256AD45B0()
{
  unint64_t result = qword_269F7C250;
  if (!qword_269F7C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C250);
  }
  return result;
}

unint64_t sub_256AD45FC(uint64_t a1)
{
  unint64_t result = sub_256AD4624();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4624()
{
  unint64_t result = qword_269F7C258;
  if (!qword_269F7C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C258);
  }
  return result;
}

uint64_t sub_256AD4670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD469C, (uint64_t (*)(void))sub_256AD46E8);
}

unint64_t sub_256AD469C()
{
  unint64_t result = qword_269F7C260;
  if (!qword_269F7C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C260);
  }
  return result;
}

unint64_t sub_256AD46E8()
{
  unint64_t result = qword_269F7C268;
  if (!qword_269F7C268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C268);
  }
  return result;
}

unint64_t sub_256AD4738()
{
  unint64_t result = qword_269F7C270;
  if (!qword_269F7C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C270);
  }
  return result;
}

unint64_t sub_256AD4784(uint64_t a1)
{
  unint64_t result = sub_256AD47AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD47AC()
{
  unint64_t result = qword_269F7C278;
  if (!qword_269F7C278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C278);
  }
  return result;
}

uint64_t sub_256AD47F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4824, (uint64_t (*)(void))sub_256AD4870);
}

unint64_t sub_256AD4824()
{
  unint64_t result = qword_269F7C280;
  if (!qword_269F7C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C280);
  }
  return result;
}

unint64_t sub_256AD4870()
{
  unint64_t result = qword_269F7C288;
  if (!qword_269F7C288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C288);
  }
  return result;
}

unint64_t sub_256AD48C0()
{
  unint64_t result = qword_269F7C290;
  if (!qword_269F7C290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C290);
  }
  return result;
}

unint64_t sub_256AD490C(uint64_t a1)
{
  unint64_t result = sub_256AD4934();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4934()
{
  unint64_t result = qword_269F7C298;
  if (!qword_269F7C298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C298);
  }
  return result;
}

uint64_t sub_256AD4980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD49AC, (uint64_t (*)(void))sub_256AD49F8);
}

unint64_t sub_256AD49AC()
{
  unint64_t result = qword_269F7C2A0;
  if (!qword_269F7C2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2A0);
  }
  return result;
}

unint64_t sub_256AD49F8()
{
  unint64_t result = qword_269F7C2A8;
  if (!qword_269F7C2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2A8);
  }
  return result;
}

unint64_t sub_256AD4A48()
{
  unint64_t result = qword_269F7C2B0;
  if (!qword_269F7C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2B0);
  }
  return result;
}

unint64_t sub_256AD4A94(uint64_t a1)
{
  unint64_t result = sub_256AD4ABC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4ABC()
{
  unint64_t result = qword_269F7C2B8;
  if (!qword_269F7C2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2B8);
  }
  return result;
}

uint64_t sub_256AD4B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4B34, (uint64_t (*)(void))sub_256AD4B80);
}

unint64_t sub_256AD4B34()
{
  unint64_t result = qword_269F7C2C0;
  if (!qword_269F7C2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2C0);
  }
  return result;
}

unint64_t sub_256AD4B80()
{
  unint64_t result = qword_269F7C2C8;
  if (!qword_269F7C2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2C8);
  }
  return result;
}

unint64_t sub_256AD4BD0()
{
  unint64_t result = qword_269F7C2D0;
  if (!qword_269F7C2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2D0);
  }
  return result;
}

unint64_t sub_256AD4C1C(uint64_t a1)
{
  unint64_t result = sub_256AD4C44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4C44()
{
  unint64_t result = qword_269F7C2D8;
  if (!qword_269F7C2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2D8);
  }
  return result;
}

uint64_t sub_256AD4C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4CBC, (uint64_t (*)(void))sub_256AD4D08);
}

unint64_t sub_256AD4CBC()
{
  unint64_t result = qword_269F7C2E0;
  if (!qword_269F7C2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2E0);
  }
  return result;
}

unint64_t sub_256AD4D08()
{
  unint64_t result = qword_269F7C2E8;
  if (!qword_269F7C2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2E8);
  }
  return result;
}

unint64_t sub_256AD4D58()
{
  unint64_t result = qword_269F7C2F0;
  if (!qword_269F7C2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2F0);
  }
  return result;
}

unint64_t sub_256AD4DA4(uint64_t a1)
{
  unint64_t result = sub_256AD4DCC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4DCC()
{
  unint64_t result = qword_269F7C2F8;
  if (!qword_269F7C2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C2F8);
  }
  return result;
}

uint64_t sub_256AD4E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4E44, (uint64_t (*)(void))sub_256AD4E90);
}

unint64_t sub_256AD4E44()
{
  unint64_t result = qword_269F7C300;
  if (!qword_269F7C300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C300);
  }
  return result;
}

unint64_t sub_256AD4E90()
{
  unint64_t result = qword_269F7C308;
  if (!qword_269F7C308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C308);
  }
  return result;
}

unint64_t sub_256AD4EE0()
{
  unint64_t result = qword_269F7C310;
  if (!qword_269F7C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C310);
  }
  return result;
}

unint64_t sub_256AD4F2C(uint64_t a1)
{
  unint64_t result = sub_256AD4F54();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD4F54()
{
  unint64_t result = qword_269F7C318;
  if (!qword_269F7C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C318);
  }
  return result;
}

uint64_t sub_256AD4FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD4FCC, (uint64_t (*)(void))sub_256AD5018);
}

unint64_t sub_256AD4FCC()
{
  unint64_t result = qword_269F7C320;
  if (!qword_269F7C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C320);
  }
  return result;
}

unint64_t sub_256AD5018()
{
  unint64_t result = qword_269F7C328;
  if (!qword_269F7C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C328);
  }
  return result;
}

unint64_t sub_256AD5068()
{
  unint64_t result = qword_269F7C330;
  if (!qword_269F7C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C330);
  }
  return result;
}

unint64_t sub_256AD50B4(uint64_t a1)
{
  unint64_t result = sub_256AD50DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD50DC()
{
  unint64_t result = qword_269F7C338;
  if (!qword_269F7C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C338);
  }
  return result;
}

uint64_t sub_256AD5128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5154, (uint64_t (*)(void))sub_256AD51A0);
}

unint64_t sub_256AD5154()
{
  unint64_t result = qword_269F7C340;
  if (!qword_269F7C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C340);
  }
  return result;
}

unint64_t sub_256AD51A0()
{
  unint64_t result = qword_269F7C348;
  if (!qword_269F7C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C348);
  }
  return result;
}

unint64_t sub_256AD51F0()
{
  unint64_t result = qword_269F7C350;
  if (!qword_269F7C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C350);
  }
  return result;
}

unint64_t sub_256AD523C(uint64_t a1)
{
  unint64_t result = sub_256AD5264();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5264()
{
  unint64_t result = qword_269F7C358;
  if (!qword_269F7C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C358);
  }
  return result;
}

uint64_t sub_256AD52B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD52DC, (uint64_t (*)(void))sub_256AD5328);
}

unint64_t sub_256AD52DC()
{
  unint64_t result = qword_269F7C360;
  if (!qword_269F7C360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C360);
  }
  return result;
}

unint64_t sub_256AD5328()
{
  unint64_t result = qword_269F7C368;
  if (!qword_269F7C368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C368);
  }
  return result;
}

unint64_t sub_256AD5378()
{
  unint64_t result = qword_269F7C370;
  if (!qword_269F7C370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C370);
  }
  return result;
}

unint64_t sub_256AD53C4(uint64_t a1)
{
  unint64_t result = sub_256AD53EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD53EC()
{
  unint64_t result = qword_269F7C378;
  if (!qword_269F7C378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C378);
  }
  return result;
}

uint64_t sub_256AD5438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5464, (uint64_t (*)(void))sub_256AD54B0);
}

unint64_t sub_256AD5464()
{
  unint64_t result = qword_269F7C380;
  if (!qword_269F7C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C380);
  }
  return result;
}

unint64_t sub_256AD54B0()
{
  unint64_t result = qword_269F7C388;
  if (!qword_269F7C388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C388);
  }
  return result;
}

unint64_t sub_256AD5500()
{
  unint64_t result = qword_269F7C390;
  if (!qword_269F7C390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C390);
  }
  return result;
}

unint64_t sub_256AD554C(uint64_t a1)
{
  unint64_t result = sub_256AD5574();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5574()
{
  unint64_t result = qword_269F7C398;
  if (!qword_269F7C398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C398);
  }
  return result;
}

uint64_t sub_256AD55C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD55EC, (uint64_t (*)(void))sub_256AD5638);
}

unint64_t sub_256AD55EC()
{
  unint64_t result = qword_269F7C3A0;
  if (!qword_269F7C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3A0);
  }
  return result;
}

unint64_t sub_256AD5638()
{
  unint64_t result = qword_269F7C3A8;
  if (!qword_269F7C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3A8);
  }
  return result;
}

unint64_t sub_256AD5688()
{
  unint64_t result = qword_269F7C3B0;
  if (!qword_269F7C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3B0);
  }
  return result;
}

unint64_t sub_256AD56D4(uint64_t a1)
{
  unint64_t result = sub_256AD56FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD56FC()
{
  unint64_t result = qword_269F7C3B8;
  if (!qword_269F7C3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3B8);
  }
  return result;
}

uint64_t sub_256AD5748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5774, (uint64_t (*)(void))sub_256AD57C0);
}

unint64_t sub_256AD5774()
{
  unint64_t result = qword_269F7C3C0;
  if (!qword_269F7C3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3C0);
  }
  return result;
}

unint64_t sub_256AD57C0()
{
  unint64_t result = qword_269F7C3C8;
  if (!qword_269F7C3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3C8);
  }
  return result;
}

unint64_t sub_256AD5810()
{
  unint64_t result = qword_269F7C3D0;
  if (!qword_269F7C3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3D0);
  }
  return result;
}

unint64_t sub_256AD585C(uint64_t a1)
{
  unint64_t result = sub_256AD5884();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5884()
{
  unint64_t result = qword_269F7C3D8;
  if (!qword_269F7C3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3D8);
  }
  return result;
}

uint64_t sub_256AD58D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD58FC, (uint64_t (*)(void))sub_256AD5948);
}

unint64_t sub_256AD58FC()
{
  unint64_t result = qword_269F7C3E0;
  if (!qword_269F7C3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3E0);
  }
  return result;
}

unint64_t sub_256AD5948()
{
  unint64_t result = qword_269F7C3E8;
  if (!qword_269F7C3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3E8);
  }
  return result;
}

unint64_t sub_256AD5998()
{
  unint64_t result = qword_269F7C3F0;
  if (!qword_269F7C3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3F0);
  }
  return result;
}

unint64_t sub_256AD59E4(uint64_t a1)
{
  unint64_t result = sub_256AD5A0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5A0C()
{
  unint64_t result = qword_269F7C3F8;
  if (!qword_269F7C3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C3F8);
  }
  return result;
}

uint64_t sub_256AD5A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5A84, (uint64_t (*)(void))sub_256AD5AD0);
}

unint64_t sub_256AD5A84()
{
  unint64_t result = qword_269F7C400;
  if (!qword_269F7C400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C400);
  }
  return result;
}

unint64_t sub_256AD5AD0()
{
  unint64_t result = qword_269F7C408;
  if (!qword_269F7C408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C408);
  }
  return result;
}

unint64_t sub_256AD5B20()
{
  unint64_t result = qword_269F7C410;
  if (!qword_269F7C410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C410);
  }
  return result;
}

unint64_t sub_256AD5B6C(uint64_t a1)
{
  unint64_t result = sub_256AD5B94();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5B94()
{
  unint64_t result = qword_269F7C418;
  if (!qword_269F7C418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C418);
  }
  return result;
}

uint64_t sub_256AD5BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5C0C, (uint64_t (*)(void))sub_256AD5C58);
}

unint64_t sub_256AD5C0C()
{
  unint64_t result = qword_269F7C420;
  if (!qword_269F7C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C420);
  }
  return result;
}

unint64_t sub_256AD5C58()
{
  unint64_t result = qword_269F7C428;
  if (!qword_269F7C428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C428);
  }
  return result;
}

unint64_t sub_256AD5CA8()
{
  unint64_t result = qword_269F7C430;
  if (!qword_269F7C430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C430);
  }
  return result;
}

unint64_t sub_256AD5CF4(uint64_t a1)
{
  unint64_t result = sub_256AD5D1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5D1C()
{
  unint64_t result = qword_269F7C438;
  if (!qword_269F7C438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C438);
  }
  return result;
}

uint64_t sub_256AD5D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5D94, (uint64_t (*)(void))sub_256AD5DE0);
}

unint64_t sub_256AD5D94()
{
  unint64_t result = qword_269F7C440;
  if (!qword_269F7C440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C440);
  }
  return result;
}

unint64_t sub_256AD5DE0()
{
  unint64_t result = qword_269F7C448;
  if (!qword_269F7C448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C448);
  }
  return result;
}

unint64_t sub_256AD5E30()
{
  unint64_t result = qword_269F7C450;
  if (!qword_269F7C450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C450);
  }
  return result;
}

unint64_t sub_256AD5E7C(uint64_t a1)
{
  unint64_t result = sub_256AD5EA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD5EA4()
{
  unint64_t result = qword_269F7C458;
  if (!qword_269F7C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C458);
  }
  return result;
}

uint64_t sub_256AD5EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD5F1C, (uint64_t (*)(void))sub_256AD5F68);
}

unint64_t sub_256AD5F1C()
{
  unint64_t result = qword_269F7C460;
  if (!qword_269F7C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C460);
  }
  return result;
}

unint64_t sub_256AD5F68()
{
  unint64_t result = qword_269F7C468;
  if (!qword_269F7C468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C468);
  }
  return result;
}

unint64_t sub_256AD5FB8()
{
  unint64_t result = qword_269F7C470;
  if (!qword_269F7C470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C470);
  }
  return result;
}

unint64_t sub_256AD6004(uint64_t a1)
{
  unint64_t result = sub_256AD602C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD602C()
{
  unint64_t result = qword_269F7C478;
  if (!qword_269F7C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C478);
  }
  return result;
}

uint64_t sub_256AD6078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD60A4, (uint64_t (*)(void))sub_256AD60F0);
}

unint64_t sub_256AD60A4()
{
  unint64_t result = qword_269F7C480;
  if (!qword_269F7C480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C480);
  }
  return result;
}

unint64_t sub_256AD60F0()
{
  unint64_t result = qword_269F7C488;
  if (!qword_269F7C488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C488);
  }
  return result;
}

unint64_t sub_256AD6140()
{
  unint64_t result = qword_269F7C490;
  if (!qword_269F7C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C490);
  }
  return result;
}

unint64_t sub_256AD618C(uint64_t a1)
{
  unint64_t result = sub_256AD61B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD61B4()
{
  unint64_t result = qword_269F7C498;
  if (!qword_269F7C498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C498);
  }
  return result;
}

uint64_t sub_256AD6200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD622C, (uint64_t (*)(void))sub_256AD6278);
}

unint64_t sub_256AD622C()
{
  unint64_t result = qword_269F7C4A0;
  if (!qword_269F7C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4A0);
  }
  return result;
}

unint64_t sub_256AD6278()
{
  unint64_t result = qword_269F7C4A8;
  if (!qword_269F7C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4A8);
  }
  return result;
}

unint64_t sub_256AD62C8()
{
  unint64_t result = qword_269F7C4B0;
  if (!qword_269F7C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4B0);
  }
  return result;
}

unint64_t sub_256AD6314(uint64_t a1)
{
  unint64_t result = sub_256AD633C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD633C()
{
  unint64_t result = qword_269F7C4B8;
  if (!qword_269F7C4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4B8);
  }
  return result;
}

uint64_t sub_256AD6388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD63B4, (uint64_t (*)(void))sub_256AD6400);
}

unint64_t sub_256AD63B4()
{
  unint64_t result = qword_269F7C4C0;
  if (!qword_269F7C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4C0);
  }
  return result;
}

unint64_t sub_256AD6400()
{
  unint64_t result = qword_269F7C4C8;
  if (!qword_269F7C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4C8);
  }
  return result;
}

unint64_t sub_256AD6450()
{
  unint64_t result = qword_269F7C4D0;
  if (!qword_269F7C4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4D0);
  }
  return result;
}

unint64_t sub_256AD649C(uint64_t a1)
{
  unint64_t result = sub_256AD64C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD64C4()
{
  unint64_t result = qword_269F7C4D8;
  if (!qword_269F7C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4D8);
  }
  return result;
}

uint64_t sub_256AD6510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD653C, (uint64_t (*)(void))sub_256AD6588);
}

unint64_t sub_256AD653C()
{
  unint64_t result = qword_269F7C4E0;
  if (!qword_269F7C4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4E0);
  }
  return result;
}

unint64_t sub_256AD6588()
{
  unint64_t result = qword_269F7C4E8;
  if (!qword_269F7C4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4E8);
  }
  return result;
}

unint64_t sub_256AD65D8()
{
  unint64_t result = qword_269F7C4F0;
  if (!qword_269F7C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4F0);
  }
  return result;
}

unint64_t sub_256AD6624(uint64_t a1)
{
  unint64_t result = sub_256AD664C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD664C()
{
  unint64_t result = qword_269F7C4F8;
  if (!qword_269F7C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C4F8);
  }
  return result;
}

uint64_t sub_256AD6698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD66C4, (uint64_t (*)(void))sub_256AD6710);
}

unint64_t sub_256AD66C4()
{
  unint64_t result = qword_269F7C500;
  if (!qword_269F7C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C500);
  }
  return result;
}

unint64_t sub_256AD6710()
{
  unint64_t result = qword_269F7C508;
  if (!qword_269F7C508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C508);
  }
  return result;
}

unint64_t sub_256AD6760()
{
  unint64_t result = qword_269F7C510;
  if (!qword_269F7C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C510);
  }
  return result;
}

unint64_t sub_256AD67AC(uint64_t a1)
{
  unint64_t result = sub_256AD67D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD67D4()
{
  unint64_t result = qword_269F7C518;
  if (!qword_269F7C518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C518);
  }
  return result;
}

uint64_t sub_256AD6820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD684C, (uint64_t (*)(void))sub_256AD6898);
}

unint64_t sub_256AD684C()
{
  unint64_t result = qword_269F7C520;
  if (!qword_269F7C520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C520);
  }
  return result;
}

unint64_t sub_256AD6898()
{
  unint64_t result = qword_269F7C528;
  if (!qword_269F7C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C528);
  }
  return result;
}

unint64_t sub_256AD68E8()
{
  unint64_t result = qword_269F7C530;
  if (!qword_269F7C530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C530);
  }
  return result;
}

unint64_t sub_256AD6934(uint64_t a1)
{
  unint64_t result = sub_256AD695C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD695C()
{
  unint64_t result = qword_269F7C538;
  if (!qword_269F7C538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C538);
  }
  return result;
}

uint64_t sub_256AD69A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD69D4, (uint64_t (*)(void))sub_256AD6A20);
}

unint64_t sub_256AD69D4()
{
  unint64_t result = qword_269F7C540;
  if (!qword_269F7C540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C540);
  }
  return result;
}

unint64_t sub_256AD6A20()
{
  unint64_t result = qword_269F7C548;
  if (!qword_269F7C548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C548);
  }
  return result;
}

unint64_t sub_256AD6A70()
{
  unint64_t result = qword_269F7C550;
  if (!qword_269F7C550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C550);
  }
  return result;
}

unint64_t sub_256AD6ABC(uint64_t a1)
{
  unint64_t result = sub_256AD6AE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD6AE4()
{
  unint64_t result = qword_269F7C558;
  if (!qword_269F7C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C558);
  }
  return result;
}

uint64_t sub_256AD6B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD6B5C, (uint64_t (*)(void))sub_256AD6BA8);
}

unint64_t sub_256AD6B5C()
{
  unint64_t result = qword_269F7C560;
  if (!qword_269F7C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C560);
  }
  return result;
}

unint64_t sub_256AD6BA8()
{
  unint64_t result = qword_269F7C568;
  if (!qword_269F7C568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C568);
  }
  return result;
}

unint64_t sub_256AD6BF8()
{
  unint64_t result = qword_269F7C570;
  if (!qword_269F7C570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C570);
  }
  return result;
}

unint64_t sub_256AD6C44(uint64_t a1)
{
  unint64_t result = sub_256AD6C6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD6C6C()
{
  unint64_t result = qword_269F7C578;
  if (!qword_269F7C578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C578);
  }
  return result;
}

uint64_t sub_256AD6CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD6CE4, (uint64_t (*)(void))sub_256AD6D30);
}

unint64_t sub_256AD6CE4()
{
  unint64_t result = qword_269F7C580;
  if (!qword_269F7C580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C580);
  }
  return result;
}

unint64_t sub_256AD6D30()
{
  unint64_t result = qword_269F7C588;
  if (!qword_269F7C588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C588);
  }
  return result;
}

unint64_t sub_256AD6D80()
{
  unint64_t result = qword_269F7C590;
  if (!qword_269F7C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C590);
  }
  return result;
}

unint64_t sub_256AD6DCC(uint64_t a1)
{
  unint64_t result = sub_256AD6DF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD6DF4()
{
  unint64_t result = qword_269F7C598;
  if (!qword_269F7C598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C598);
  }
  return result;
}

uint64_t sub_256AD6E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD6E6C, (uint64_t (*)(void))sub_256AD6EB8);
}

unint64_t sub_256AD6E6C()
{
  unint64_t result = qword_269F7C5A0;
  if (!qword_269F7C5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5A0);
  }
  return result;
}

unint64_t sub_256AD6EB8()
{
  unint64_t result = qword_269F7C5A8;
  if (!qword_269F7C5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5A8);
  }
  return result;
}

unint64_t sub_256AD6F08()
{
  unint64_t result = qword_269F7C5B0;
  if (!qword_269F7C5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5B0);
  }
  return result;
}

unint64_t sub_256AD6F54(uint64_t a1)
{
  unint64_t result = sub_256AD6F7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD6F7C()
{
  unint64_t result = qword_269F7C5B8;
  if (!qword_269F7C5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5B8);
  }
  return result;
}

uint64_t sub_256AD6FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD6FF4, (uint64_t (*)(void))sub_256AD7040);
}

unint64_t sub_256AD6FF4()
{
  unint64_t result = qword_269F7C5C0;
  if (!qword_269F7C5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5C0);
  }
  return result;
}

unint64_t sub_256AD7040()
{
  unint64_t result = qword_269F7C5C8;
  if (!qword_269F7C5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5C8);
  }
  return result;
}

unint64_t sub_256AD7090()
{
  unint64_t result = qword_269F7C5D0;
  if (!qword_269F7C5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5D0);
  }
  return result;
}

unint64_t sub_256AD70DC(uint64_t a1)
{
  unint64_t result = sub_256AD7104();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7104()
{
  unint64_t result = qword_269F7C5D8;
  if (!qword_269F7C5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5D8);
  }
  return result;
}

uint64_t sub_256AD7150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD717C, (uint64_t (*)(void))sub_256AD71C8);
}

unint64_t sub_256AD717C()
{
  unint64_t result = qword_269F7C5E0;
  if (!qword_269F7C5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5E0);
  }
  return result;
}

unint64_t sub_256AD71C8()
{
  unint64_t result = qword_269F7C5E8;
  if (!qword_269F7C5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5E8);
  }
  return result;
}

unint64_t sub_256AD7218()
{
  unint64_t result = qword_269F7C5F0;
  if (!qword_269F7C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5F0);
  }
  return result;
}

unint64_t sub_256AD7264(uint64_t a1)
{
  unint64_t result = sub_256AD728C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD728C()
{
  unint64_t result = qword_269F7C5F8;
  if (!qword_269F7C5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C5F8);
  }
  return result;
}

uint64_t sub_256AD72D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7304, (uint64_t (*)(void))sub_256AD7350);
}

unint64_t sub_256AD7304()
{
  unint64_t result = qword_269F7C600;
  if (!qword_269F7C600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C600);
  }
  return result;
}

unint64_t sub_256AD7350()
{
  unint64_t result = qword_269F7C608;
  if (!qword_269F7C608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C608);
  }
  return result;
}

unint64_t sub_256AD73A0()
{
  unint64_t result = qword_269F7C610;
  if (!qword_269F7C610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C610);
  }
  return result;
}

unint64_t sub_256AD73EC(uint64_t a1)
{
  unint64_t result = sub_256AD7414();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7414()
{
  unint64_t result = qword_269F7C618;
  if (!qword_269F7C618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C618);
  }
  return result;
}

uint64_t sub_256AD7460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD748C, (uint64_t (*)(void))sub_256AD74D8);
}

unint64_t sub_256AD748C()
{
  unint64_t result = qword_269F7C620;
  if (!qword_269F7C620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C620);
  }
  return result;
}

unint64_t sub_256AD74D8()
{
  unint64_t result = qword_269F7C628;
  if (!qword_269F7C628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C628);
  }
  return result;
}

unint64_t sub_256AD7528()
{
  unint64_t result = qword_269F7C630;
  if (!qword_269F7C630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C630);
  }
  return result;
}

unint64_t sub_256AD7574(uint64_t a1)
{
  unint64_t result = sub_256AD759C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD759C()
{
  unint64_t result = qword_269F7C638;
  if (!qword_269F7C638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C638);
  }
  return result;
}

uint64_t sub_256AD75E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7614, (uint64_t (*)(void))sub_256AD7660);
}

unint64_t sub_256AD7614()
{
  unint64_t result = qword_269F7C640;
  if (!qword_269F7C640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C640);
  }
  return result;
}

unint64_t sub_256AD7660()
{
  unint64_t result = qword_269F7C648;
  if (!qword_269F7C648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C648);
  }
  return result;
}

unint64_t sub_256AD76B0()
{
  unint64_t result = qword_269F7C650;
  if (!qword_269F7C650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C650);
  }
  return result;
}

unint64_t sub_256AD76FC(uint64_t a1)
{
  unint64_t result = sub_256AD7724();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7724()
{
  unint64_t result = qword_269F7C658;
  if (!qword_269F7C658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C658);
  }
  return result;
}

uint64_t sub_256AD7770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD779C, (uint64_t (*)(void))sub_256AD77E8);
}

unint64_t sub_256AD779C()
{
  unint64_t result = qword_269F7C660;
  if (!qword_269F7C660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C660);
  }
  return result;
}

unint64_t sub_256AD77E8()
{
  unint64_t result = qword_269F7C668;
  if (!qword_269F7C668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C668);
  }
  return result;
}

unint64_t sub_256AD7838()
{
  unint64_t result = qword_269F7C670;
  if (!qword_269F7C670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C670);
  }
  return result;
}

unint64_t sub_256AD7884(uint64_t a1)
{
  unint64_t result = sub_256AD78AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD78AC()
{
  unint64_t result = qword_269F7C678;
  if (!qword_269F7C678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C678);
  }
  return result;
}

uint64_t sub_256AD78F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7924, (uint64_t (*)(void))sub_256AD7970);
}

unint64_t sub_256AD7924()
{
  unint64_t result = qword_269F7C680;
  if (!qword_269F7C680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C680);
  }
  return result;
}

unint64_t sub_256AD7970()
{
  unint64_t result = qword_269F7C688;
  if (!qword_269F7C688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C688);
  }
  return result;
}

unint64_t sub_256AD79C0()
{
  unint64_t result = qword_269F7C690;
  if (!qword_269F7C690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C690);
  }
  return result;
}

unint64_t sub_256AD7A0C(uint64_t a1)
{
  unint64_t result = sub_256AD7A34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7A34()
{
  unint64_t result = qword_269F7C698;
  if (!qword_269F7C698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C698);
  }
  return result;
}

uint64_t sub_256AD7A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7AAC, (uint64_t (*)(void))sub_256AD7AF8);
}

unint64_t sub_256AD7AAC()
{
  unint64_t result = qword_269F7C6A0;
  if (!qword_269F7C6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6A0);
  }
  return result;
}

unint64_t sub_256AD7AF8()
{
  unint64_t result = qword_269F7C6A8;
  if (!qword_269F7C6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6A8);
  }
  return result;
}

unint64_t sub_256AD7B48()
{
  unint64_t result = qword_269F7C6B0;
  if (!qword_269F7C6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6B0);
  }
  return result;
}

unint64_t sub_256AD7B94(uint64_t a1)
{
  unint64_t result = sub_256AD7BBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7BBC()
{
  unint64_t result = qword_269F7C6B8;
  if (!qword_269F7C6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6B8);
  }
  return result;
}

uint64_t sub_256AD7C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7C34, (uint64_t (*)(void))sub_256AD7C80);
}

unint64_t sub_256AD7C34()
{
  unint64_t result = qword_269F7C6C0;
  if (!qword_269F7C6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6C0);
  }
  return result;
}

unint64_t sub_256AD7C80()
{
  unint64_t result = qword_269F7C6C8;
  if (!qword_269F7C6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6C8);
  }
  return result;
}

unint64_t sub_256AD7CD0()
{
  unint64_t result = qword_269F7C6D0;
  if (!qword_269F7C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6D0);
  }
  return result;
}

unint64_t sub_256AD7D1C(uint64_t a1)
{
  unint64_t result = sub_256AD7D44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7D44()
{
  unint64_t result = qword_269F7C6D8;
  if (!qword_269F7C6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6D8);
  }
  return result;
}

uint64_t sub_256AD7D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7DBC, (uint64_t (*)(void))sub_256AD7E08);
}

unint64_t sub_256AD7DBC()
{
  unint64_t result = qword_269F7C6E0;
  if (!qword_269F7C6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6E0);
  }
  return result;
}

unint64_t sub_256AD7E08()
{
  unint64_t result = qword_269F7C6E8;
  if (!qword_269F7C6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6E8);
  }
  return result;
}

unint64_t sub_256AD7E58()
{
  unint64_t result = qword_269F7C6F0;
  if (!qword_269F7C6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6F0);
  }
  return result;
}

unint64_t sub_256AD7EA4(uint64_t a1)
{
  unint64_t result = sub_256AD7ECC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD7ECC()
{
  unint64_t result = qword_269F7C6F8;
  if (!qword_269F7C6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C6F8);
  }
  return result;
}

uint64_t sub_256AD7F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD7F44, (uint64_t (*)(void))sub_256AD7F90);
}

unint64_t sub_256AD7F44()
{
  unint64_t result = qword_269F7C700;
  if (!qword_269F7C700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C700);
  }
  return result;
}

unint64_t sub_256AD7F90()
{
  unint64_t result = qword_269F7C708;
  if (!qword_269F7C708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C708);
  }
  return result;
}

unint64_t sub_256AD7FE0()
{
  unint64_t result = qword_269F7C710;
  if (!qword_269F7C710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C710);
  }
  return result;
}

unint64_t sub_256AD802C(uint64_t a1)
{
  unint64_t result = sub_256AD8054();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8054()
{
  unint64_t result = qword_269F7C718;
  if (!qword_269F7C718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C718);
  }
  return result;
}

uint64_t sub_256AD80A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD80CC, (uint64_t (*)(void))sub_256AD8118);
}

unint64_t sub_256AD80CC()
{
  unint64_t result = qword_269F7C720;
  if (!qword_269F7C720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C720);
  }
  return result;
}

unint64_t sub_256AD8118()
{
  unint64_t result = qword_269F7C728;
  if (!qword_269F7C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C728);
  }
  return result;
}

unint64_t sub_256AD8168()
{
  unint64_t result = qword_269F7C730;
  if (!qword_269F7C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C730);
  }
  return result;
}

unint64_t sub_256AD81B4(uint64_t a1)
{
  unint64_t result = sub_256AD81DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD81DC()
{
  unint64_t result = qword_269F7C738;
  if (!qword_269F7C738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C738);
  }
  return result;
}

uint64_t sub_256AD8228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD8254, (uint64_t (*)(void))sub_256AD82A0);
}

unint64_t sub_256AD8254()
{
  unint64_t result = qword_269F7C740;
  if (!qword_269F7C740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C740);
  }
  return result;
}

unint64_t sub_256AD82A0()
{
  unint64_t result = qword_269F7C748;
  if (!qword_269F7C748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C748);
  }
  return result;
}

unint64_t sub_256AD82F0()
{
  unint64_t result = qword_269F7C750;
  if (!qword_269F7C750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C750);
  }
  return result;
}

unint64_t sub_256AD833C(uint64_t a1)
{
  unint64_t result = sub_256AD8364();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8364()
{
  unint64_t result = qword_269F7C758;
  if (!qword_269F7C758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C758);
  }
  return result;
}

uint64_t sub_256AD83B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD83DC, (uint64_t (*)(void))sub_256AD8428);
}

unint64_t sub_256AD83DC()
{
  unint64_t result = qword_269F7C760;
  if (!qword_269F7C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C760);
  }
  return result;
}

unint64_t sub_256AD8428()
{
  unint64_t result = qword_269F7C768;
  if (!qword_269F7C768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C768);
  }
  return result;
}

unint64_t sub_256AD8478()
{
  unint64_t result = qword_269F7C770;
  if (!qword_269F7C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C770);
  }
  return result;
}

unint64_t sub_256AD84C4(uint64_t a1)
{
  unint64_t result = sub_256AD84EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD84EC()
{
  unint64_t result = qword_269F7C778;
  if (!qword_269F7C778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C778);
  }
  return result;
}

uint64_t sub_256AD8538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD8564, (uint64_t (*)(void))sub_256AD85B0);
}

unint64_t sub_256AD8564()
{
  unint64_t result = qword_269F7C780;
  if (!qword_269F7C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C780);
  }
  return result;
}

unint64_t sub_256AD85B0()
{
  unint64_t result = qword_269F7C788;
  if (!qword_269F7C788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C788);
  }
  return result;
}

unint64_t sub_256AD8600()
{
  unint64_t result = qword_269F7C790;
  if (!qword_269F7C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C790);
  }
  return result;
}

unint64_t sub_256AD864C(uint64_t a1)
{
  unint64_t result = sub_256AD8674();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8674()
{
  unint64_t result = qword_269F7C798;
  if (!qword_269F7C798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C798);
  }
  return result;
}

uint64_t sub_256AD86C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD86EC, (uint64_t (*)(void))sub_256AD8738);
}

unint64_t sub_256AD86EC()
{
  unint64_t result = qword_269F7C7A0;
  if (!qword_269F7C7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7A0);
  }
  return result;
}

unint64_t sub_256AD8738()
{
  unint64_t result = qword_269F7C7A8;
  if (!qword_269F7C7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7A8);
  }
  return result;
}

unint64_t sub_256AD8788()
{
  unint64_t result = qword_269F7C7B0;
  if (!qword_269F7C7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7B0);
  }
  return result;
}

unint64_t sub_256AD87D4(uint64_t a1)
{
  unint64_t result = sub_256AD87FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD87FC()
{
  unint64_t result = qword_269F7C7B8;
  if (!qword_269F7C7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7B8);
  }
  return result;
}

uint64_t sub_256AD8848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD8874, (uint64_t (*)(void))sub_256AD88C0);
}

unint64_t sub_256AD8874()
{
  unint64_t result = qword_269F7C7C0;
  if (!qword_269F7C7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7C0);
  }
  return result;
}

unint64_t sub_256AD88C0()
{
  unint64_t result = qword_269F7C7C8;
  if (!qword_269F7C7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7C8);
  }
  return result;
}

unint64_t sub_256AD8910()
{
  unint64_t result = qword_269F7C7D0;
  if (!qword_269F7C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7D0);
  }
  return result;
}

unint64_t sub_256AD895C(uint64_t a1)
{
  unint64_t result = sub_256AD8984();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8984()
{
  unint64_t result = qword_269F7C7D8;
  if (!qword_269F7C7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7D8);
  }
  return result;
}

uint64_t sub_256AD89D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD89FC, (uint64_t (*)(void))sub_256AD8A48);
}

unint64_t sub_256AD89FC()
{
  unint64_t result = qword_269F7C7E0;
  if (!qword_269F7C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7E0);
  }
  return result;
}

unint64_t sub_256AD8A48()
{
  unint64_t result = qword_269F7C7E8;
  if (!qword_269F7C7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7E8);
  }
  return result;
}

unint64_t sub_256AD8A98()
{
  unint64_t result = qword_269F7C7F0;
  if (!qword_269F7C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7F0);
  }
  return result;
}

unint64_t sub_256AD8AE4(uint64_t a1)
{
  unint64_t result = sub_256AD8B0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8B0C()
{
  unint64_t result = qword_269F7C7F8;
  if (!qword_269F7C7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C7F8);
  }
  return result;
}

uint64_t sub_256AD8B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD8B84, (uint64_t (*)(void))sub_256AD8BD0);
}

unint64_t sub_256AD8B84()
{
  unint64_t result = qword_269F7C800;
  if (!qword_269F7C800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C800);
  }
  return result;
}

unint64_t sub_256AD8BD0()
{
  unint64_t result = qword_269F7C808;
  if (!qword_269F7C808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C808);
  }
  return result;
}

unint64_t sub_256AD8C20()
{
  unint64_t result = qword_269F7C810;
  if (!qword_269F7C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C810);
  }
  return result;
}

unint64_t sub_256AD8C6C(uint64_t a1)
{
  unint64_t result = sub_256AD8C94();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8C94()
{
  unint64_t result = qword_269F7C818;
  if (!qword_269F7C818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C818);
  }
  return result;
}

uint64_t sub_256AD8CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD8D0C, (uint64_t (*)(void))sub_256AD8D58);
}

unint64_t sub_256AD8D0C()
{
  unint64_t result = qword_269F7C820;
  if (!qword_269F7C820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C820);
  }
  return result;
}

unint64_t sub_256AD8D58()
{
  unint64_t result = qword_269F7C828;
  if (!qword_269F7C828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C828);
  }
  return result;
}

unint64_t sub_256AD8DA8()
{
  unint64_t result = qword_269F7C830;
  if (!qword_269F7C830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C830);
  }
  return result;
}

unint64_t sub_256AD8DF4(uint64_t a1)
{
  unint64_t result = sub_256AD8E1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8E1C()
{
  unint64_t result = qword_269F7C838;
  if (!qword_269F7C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C838);
  }
  return result;
}

uint64_t sub_256AD8E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD8E94, (uint64_t (*)(void))sub_256AD8EE0);
}

unint64_t sub_256AD8E94()
{
  unint64_t result = qword_269F7C840;
  if (!qword_269F7C840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C840);
  }
  return result;
}

unint64_t sub_256AD8EE0()
{
  unint64_t result = qword_269F7C848;
  if (!qword_269F7C848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C848);
  }
  return result;
}

unint64_t sub_256AD8F30()
{
  unint64_t result = qword_269F7C850;
  if (!qword_269F7C850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C850);
  }
  return result;
}

unint64_t sub_256AD8F7C(uint64_t a1)
{
  unint64_t result = sub_256AD8FA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD8FA4()
{
  unint64_t result = qword_269F7C858;
  if (!qword_269F7C858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C858);
  }
  return result;
}

uint64_t sub_256AD8FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD901C, (uint64_t (*)(void))sub_256AD9068);
}

unint64_t sub_256AD901C()
{
  unint64_t result = qword_269F7C860;
  if (!qword_269F7C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C860);
  }
  return result;
}

unint64_t sub_256AD9068()
{
  unint64_t result = qword_269F7C868;
  if (!qword_269F7C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C868);
  }
  return result;
}

unint64_t sub_256AD90B8()
{
  unint64_t result = qword_269F7C870;
  if (!qword_269F7C870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C870);
  }
  return result;
}

unint64_t sub_256AD9104(uint64_t a1)
{
  unint64_t result = sub_256AD912C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD912C()
{
  unint64_t result = qword_269F7C878;
  if (!qword_269F7C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C878);
  }
  return result;
}

uint64_t sub_256AD9178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD91A4, (uint64_t (*)(void))sub_256AD91F0);
}

unint64_t sub_256AD91A4()
{
  unint64_t result = qword_269F7C880;
  if (!qword_269F7C880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C880);
  }
  return result;
}

unint64_t sub_256AD91F0()
{
  unint64_t result = qword_269F7C888;
  if (!qword_269F7C888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C888);
  }
  return result;
}

unint64_t sub_256AD9240()
{
  unint64_t result = qword_269F7C890;
  if (!qword_269F7C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C890);
  }
  return result;
}

unint64_t sub_256AD928C(uint64_t a1)
{
  unint64_t result = sub_256AD92B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD92B4()
{
  unint64_t result = qword_269F7C898;
  if (!qword_269F7C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C898);
  }
  return result;
}

uint64_t sub_256AD9300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD932C, (uint64_t (*)(void))sub_256AD9378);
}

unint64_t sub_256AD932C()
{
  unint64_t result = qword_269F7C8A0;
  if (!qword_269F7C8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8A0);
  }
  return result;
}

unint64_t sub_256AD9378()
{
  unint64_t result = qword_269F7C8A8;
  if (!qword_269F7C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8A8);
  }
  return result;
}

unint64_t sub_256AD93C8()
{
  unint64_t result = qword_269F7C8B0;
  if (!qword_269F7C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8B0);
  }
  return result;
}

unint64_t sub_256AD9414(uint64_t a1)
{
  unint64_t result = sub_256AD943C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD943C()
{
  unint64_t result = qword_269F7C8B8;
  if (!qword_269F7C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8B8);
  }
  return result;
}

uint64_t sub_256AD9488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD94B4, (uint64_t (*)(void))sub_256AD9500);
}

unint64_t sub_256AD94B4()
{
  unint64_t result = qword_269F7C8C0;
  if (!qword_269F7C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8C0);
  }
  return result;
}

unint64_t sub_256AD9500()
{
  unint64_t result = qword_269F7C8C8;
  if (!qword_269F7C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8C8);
  }
  return result;
}

unint64_t sub_256AD9550()
{
  unint64_t result = qword_269F7C8D0;
  if (!qword_269F7C8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8D0);
  }
  return result;
}

unint64_t sub_256AD959C(uint64_t a1)
{
  unint64_t result = sub_256AD95C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD95C4()
{
  unint64_t result = qword_269F7C8D8;
  if (!qword_269F7C8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8D8);
  }
  return result;
}

uint64_t sub_256AD9610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD963C, (uint64_t (*)(void))sub_256AD9688);
}

unint64_t sub_256AD963C()
{
  unint64_t result = qword_269F7C8E0;
  if (!qword_269F7C8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8E0);
  }
  return result;
}

unint64_t sub_256AD9688()
{
  unint64_t result = qword_269F7C8E8;
  if (!qword_269F7C8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8E8);
  }
  return result;
}

unint64_t sub_256AD96D8()
{
  unint64_t result = qword_269F7C8F0;
  if (!qword_269F7C8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8F0);
  }
  return result;
}

unint64_t sub_256AD9724(uint64_t a1)
{
  unint64_t result = sub_256AD974C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD974C()
{
  unint64_t result = qword_269F7C8F8;
  if (!qword_269F7C8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C8F8);
  }
  return result;
}

uint64_t sub_256AD9798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD97C4, (uint64_t (*)(void))sub_256AD9810);
}

unint64_t sub_256AD97C4()
{
  unint64_t result = qword_269F7C900;
  if (!qword_269F7C900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C900);
  }
  return result;
}

unint64_t sub_256AD9810()
{
  unint64_t result = qword_269F7C908;
  if (!qword_269F7C908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C908);
  }
  return result;
}

unint64_t sub_256AD9860()
{
  unint64_t result = qword_269F7C910;
  if (!qword_269F7C910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C910);
  }
  return result;
}

unint64_t sub_256AD98AC(uint64_t a1)
{
  unint64_t result = sub_256A9F558();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD98D4(uint64_t a1)
{
  unint64_t result = sub_256AD98FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD98FC()
{
  unint64_t result = qword_269F7C918;
  if (!qword_269F7C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C918);
  }
  return result;
}

uint64_t sub_256AD9948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD9974, (uint64_t (*)(void))sub_256AD99C0);
}

unint64_t sub_256AD9974()
{
  unint64_t result = qword_269F7C920;
  if (!qword_269F7C920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C920);
  }
  return result;
}

unint64_t sub_256AD99C0()
{
  unint64_t result = qword_269F7C928;
  if (!qword_269F7C928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C928);
  }
  return result;
}

unint64_t sub_256AD9A10()
{
  unint64_t result = qword_269F7C930;
  if (!qword_269F7C930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C930);
  }
  return result;
}

unint64_t sub_256AD9A5C(uint64_t a1)
{
  unint64_t result = sub_256A9EF14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9A84(uint64_t a1)
{
  unint64_t result = sub_256AD9AAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9AAC()
{
  unint64_t result = qword_26B2B3398;
  if (!qword_26B2B3398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3398);
  }
  return result;
}

uint64_t sub_256AD9AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD9B24, (uint64_t (*)(void))sub_256AD9B70);
}

unint64_t sub_256AD9B24()
{
  unint64_t result = qword_26B2B3380;
  if (!qword_26B2B3380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3380);
  }
  return result;
}

unint64_t sub_256AD9B70()
{
  unint64_t result = qword_26B2B3390;
  if (!qword_26B2B3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3390);
  }
  return result;
}

unint64_t sub_256AD9BC0()
{
  unint64_t result = qword_26B2B3388;
  if (!qword_26B2B3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3388);
  }
  return result;
}

unint64_t sub_256AD9C0C(uint64_t a1)
{
  unint64_t result = sub_256A9F508();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9C34(uint64_t a1)
{
  unint64_t result = sub_256AD9C5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9C5C()
{
  unint64_t result = qword_269F7C938;
  if (!qword_269F7C938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C938);
  }
  return result;
}

uint64_t sub_256AD9CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD9CD4, (uint64_t (*)(void))sub_256AD9D20);
}

unint64_t sub_256AD9CD4()
{
  unint64_t result = qword_269F7C940;
  if (!qword_269F7C940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C940);
  }
  return result;
}

unint64_t sub_256AD9D20()
{
  unint64_t result = qword_269F7C948;
  if (!qword_269F7C948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C948);
  }
  return result;
}

unint64_t sub_256AD9D70()
{
  unint64_t result = qword_269F7C950;
  if (!qword_269F7C950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C950);
  }
  return result;
}

unint64_t sub_256AD9DBC(uint64_t a1)
{
  unint64_t result = sub_256A9F324();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9DE4(uint64_t a1)
{
  unint64_t result = sub_256AD9E0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9E0C()
{
  unint64_t result = qword_269F7C958;
  if (!qword_269F7C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C958);
  }
  return result;
}

uint64_t sub_256AD9E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256AD9E84, (uint64_t (*)(void))sub_256AD9ED0);
}

unint64_t sub_256AD9E84()
{
  unint64_t result = qword_269F7C960;
  if (!qword_269F7C960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C960);
  }
  return result;
}

unint64_t sub_256AD9ED0()
{
  unint64_t result = qword_269F7C968;
  if (!qword_269F7C968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C968);
  }
  return result;
}

unint64_t sub_256AD9F20()
{
  unint64_t result = qword_269F7C970;
  if (!qword_269F7C970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C970);
  }
  return result;
}

unint64_t sub_256AD9F6C(uint64_t a1)
{
  unint64_t result = sub_256A9F2D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9F94(uint64_t a1)
{
  unint64_t result = sub_256AD9FBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256AD9FBC()
{
  unint64_t result = qword_269F7C978;
  if (!qword_269F7C978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C978);
  }
  return result;
}

uint64_t sub_256ADA008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADA034, (uint64_t (*)(void))sub_256ADA080);
}

unint64_t sub_256ADA034()
{
  unint64_t result = qword_269F7C980;
  if (!qword_269F7C980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C980);
  }
  return result;
}

unint64_t sub_256ADA080()
{
  unint64_t result = qword_269F7C988;
  if (!qword_269F7C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C988);
  }
  return result;
}

unint64_t sub_256ADA0D0()
{
  unint64_t result = qword_269F7C990;
  if (!qword_269F7C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C990);
  }
  return result;
}

unint64_t sub_256ADA11C(uint64_t a1)
{
  unint64_t result = sub_256A9F284();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA144(uint64_t a1)
{
  unint64_t result = sub_256ADA16C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA16C()
{
  unint64_t result = qword_269F7C998;
  if (!qword_269F7C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C998);
  }
  return result;
}

uint64_t sub_256ADA1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADA1E4, (uint64_t (*)(void))sub_256ADA230);
}

unint64_t sub_256ADA1E4()
{
  unint64_t result = qword_269F7C9A0;
  if (!qword_269F7C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9A0);
  }
  return result;
}

unint64_t sub_256ADA230()
{
  unint64_t result = qword_269F7C9A8;
  if (!qword_269F7C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9A8);
  }
  return result;
}

unint64_t sub_256ADA280()
{
  unint64_t result = qword_269F7C9B0;
  if (!qword_269F7C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9B0);
  }
  return result;
}

unint64_t sub_256ADA2CC(uint64_t a1)
{
  unint64_t result = sub_256A9F234();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA2F4(uint64_t a1)
{
  unint64_t result = sub_256ADA31C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA31C()
{
  unint64_t result = qword_269F7C9B8;
  if (!qword_269F7C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9B8);
  }
  return result;
}

uint64_t sub_256ADA368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADA394, (uint64_t (*)(void))sub_256ADA3E0);
}

unint64_t sub_256ADA394()
{
  unint64_t result = qword_269F7C9C0;
  if (!qword_269F7C9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9C0);
  }
  return result;
}

unint64_t sub_256ADA3E0()
{
  unint64_t result = qword_269F7C9C8;
  if (!qword_269F7C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9C8);
  }
  return result;
}

unint64_t sub_256ADA430()
{
  unint64_t result = qword_269F7C9D0;
  if (!qword_269F7C9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9D0);
  }
  return result;
}

unint64_t sub_256ADA47C(uint64_t a1)
{
  unint64_t result = sub_256A9F1E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA4A4(uint64_t a1)
{
  unint64_t result = sub_256ADA4CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA4CC()
{
  unint64_t result = qword_269F7C9D8;
  if (!qword_269F7C9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9D8);
  }
  return result;
}

uint64_t sub_256ADA518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADA544, (uint64_t (*)(void))sub_256ADA590);
}

unint64_t sub_256ADA544()
{
  unint64_t result = qword_269F7C9E0;
  if (!qword_269F7C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9E0);
  }
  return result;
}

unint64_t sub_256ADA590()
{
  unint64_t result = qword_269F7C9E8;
  if (!qword_269F7C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9E8);
  }
  return result;
}

unint64_t sub_256ADA5E0()
{
  unint64_t result = qword_269F7C9F0;
  if (!qword_269F7C9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9F0);
  }
  return result;
}

unint64_t sub_256ADA62C(uint64_t a1)
{
  unint64_t result = sub_256A9F194();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA654(uint64_t a1)
{
  unint64_t result = sub_256ADA67C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA67C()
{
  unint64_t result = qword_269F7C9F8;
  if (!qword_269F7C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7C9F8);
  }
  return result;
}

uint64_t sub_256ADA6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADA6F4, (uint64_t (*)(void))sub_256ADA740);
}

unint64_t sub_256ADA6F4()
{
  unint64_t result = qword_269F7CA00;
  if (!qword_269F7CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA00);
  }
  return result;
}

unint64_t sub_256ADA740()
{
  unint64_t result = qword_269F7CA08;
  if (!qword_269F7CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA08);
  }
  return result;
}

unint64_t sub_256ADA790()
{
  unint64_t result = qword_269F7CA10;
  if (!qword_269F7CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA10);
  }
  return result;
}

unint64_t sub_256ADA7DC(uint64_t a1)
{
  unint64_t result = sub_256A9F144();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA804(uint64_t a1)
{
  unint64_t result = sub_256ADA82C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA82C()
{
  unint64_t result = qword_269F7CA18;
  if (!qword_269F7CA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA18);
  }
  return result;
}

uint64_t sub_256ADA878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADA8A4, (uint64_t (*)(void))sub_256ADA8F0);
}

unint64_t sub_256ADA8A4()
{
  unint64_t result = qword_269F7CA20;
  if (!qword_269F7CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA20);
  }
  return result;
}

unint64_t sub_256ADA8F0()
{
  unint64_t result = qword_269F7CA28;
  if (!qword_269F7CA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA28);
  }
  return result;
}

unint64_t sub_256ADA940()
{
  unint64_t result = qword_269F7CA30;
  if (!qword_269F7CA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA30);
  }
  return result;
}

unint64_t sub_256ADA98C(uint64_t a1)
{
  unint64_t result = sub_256A9F3C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA9B4(uint64_t a1)
{
  unint64_t result = sub_256ADA9DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADA9DC()
{
  unint64_t result = qword_26B2B3378;
  if (!qword_26B2B3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3378);
  }
  return result;
}

uint64_t sub_256ADAA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADAA54, (uint64_t (*)(void))sub_256ADAAA0);
}

unint64_t sub_256ADAA54()
{
  unint64_t result = qword_26B2B3360;
  if (!qword_26B2B3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3360);
  }
  return result;
}

unint64_t sub_256ADAAA0()
{
  unint64_t result = qword_26B2B3370;
  if (!qword_26B2B3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3370);
  }
  return result;
}

unint64_t sub_256ADAAF0()
{
  unint64_t result = qword_26B2B3368;
  if (!qword_26B2B3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3368);
  }
  return result;
}

unint64_t sub_256ADAB3C(uint64_t a1)
{
  unint64_t result = sub_256A9F374();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADAB64(uint64_t a1)
{
  unint64_t result = sub_256ADAB8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADAB8C()
{
  unint64_t result = qword_269F7CA38;
  if (!qword_269F7CA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA38);
  }
  return result;
}

uint64_t sub_256ADABD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADAC04, (uint64_t (*)(void))sub_256ADAC50);
}

unint64_t sub_256ADAC04()
{
  unint64_t result = qword_269F7CA40;
  if (!qword_269F7CA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA40);
  }
  return result;
}

unint64_t sub_256ADAC50()
{
  unint64_t result = qword_269F7CA48;
  if (!qword_269F7CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA48);
  }
  return result;
}

unint64_t sub_256ADACA0()
{
  unint64_t result = qword_269F7CA50;
  if (!qword_269F7CA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA50);
  }
  return result;
}

unint64_t sub_256ADACEC(uint64_t a1)
{
  unint64_t result = sub_256A9F0A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADAD14(uint64_t a1)
{
  unint64_t result = sub_256ADAD3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADAD3C()
{
  unint64_t result = qword_269F7CA58;
  if (!qword_269F7CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA58);
  }
  return result;
}

uint64_t sub_256ADAD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADADB4, (uint64_t (*)(void))sub_256ADAE00);
}

unint64_t sub_256ADADB4()
{
  unint64_t result = qword_269F7CA60;
  if (!qword_269F7CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA60);
  }
  return result;
}

unint64_t sub_256ADAE00()
{
  unint64_t result = qword_269F7CA68;
  if (!qword_269F7CA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA68);
  }
  return result;
}

unint64_t sub_256ADAE50()
{
  unint64_t result = qword_269F7CA70;
  if (!qword_269F7CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA70);
  }
  return result;
}

unint64_t sub_256ADAE9C(uint64_t a1)
{
  unint64_t result = sub_256A9F054();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADAEC4(uint64_t a1)
{
  unint64_t result = sub_256ADAEEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADAEEC()
{
  unint64_t result = qword_269F7CA78;
  if (!qword_269F7CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA78);
  }
  return result;
}

uint64_t sub_256ADAF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADAF64, (uint64_t (*)(void))sub_256ADAFB0);
}

unint64_t sub_256ADAF64()
{
  unint64_t result = qword_269F7CA80;
  if (!qword_269F7CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA80);
  }
  return result;
}

unint64_t sub_256ADAFB0()
{
  unint64_t result = qword_269F7CA88;
  if (!qword_269F7CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA88);
  }
  return result;
}

unint64_t sub_256ADB000()
{
  unint64_t result = qword_269F7CA90;
  if (!qword_269F7CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA90);
  }
  return result;
}

unint64_t sub_256ADB04C(uint64_t a1)
{
  unint64_t result = sub_256A9F004();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB074(uint64_t a1)
{
  unint64_t result = sub_256ADB09C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB09C()
{
  unint64_t result = qword_269F7CA98;
  if (!qword_269F7CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CA98);
  }
  return result;
}

uint64_t sub_256ADB0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADB114, (uint64_t (*)(void))sub_256ADB160);
}

unint64_t sub_256ADB114()
{
  unint64_t result = qword_269F7CAA0;
  if (!qword_269F7CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAA0);
  }
  return result;
}

unint64_t sub_256ADB160()
{
  unint64_t result = qword_269F7CAA8;
  if (!qword_269F7CAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAA8);
  }
  return result;
}

unint64_t sub_256ADB1B0()
{
  unint64_t result = qword_269F7CAB0;
  if (!qword_269F7CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAB0);
  }
  return result;
}

unint64_t sub_256ADB1FC(uint64_t a1)
{
  unint64_t result = sub_256A9F0F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB224(uint64_t a1)
{
  unint64_t result = sub_256ADB24C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB24C()
{
  unint64_t result = qword_269F7CAB8;
  if (!qword_269F7CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAB8);
  }
  return result;
}

uint64_t sub_256ADB298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADB2C4, (uint64_t (*)(void))sub_256ADB310);
}

unint64_t sub_256ADB2C4()
{
  unint64_t result = qword_269F7CAC0;
  if (!qword_269F7CAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAC0);
  }
  return result;
}

unint64_t sub_256ADB310()
{
  unint64_t result = qword_269F7CAC8;
  if (!qword_269F7CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAC8);
  }
  return result;
}

unint64_t sub_256ADB360()
{
  unint64_t result = qword_269F7CAD0;
  if (!qword_269F7CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAD0);
  }
  return result;
}

unint64_t sub_256ADB3AC(uint64_t a1)
{
  unint64_t result = sub_256A9EFB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB3D4(uint64_t a1)
{
  unint64_t result = sub_256ADB3FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB3FC()
{
  unint64_t result = qword_269F7CAD8;
  if (!qword_269F7CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAD8);
  }
  return result;
}

uint64_t sub_256ADB448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADB474, (uint64_t (*)(void))sub_256ADB4C0);
}

unint64_t sub_256ADB474()
{
  unint64_t result = qword_269F7CAE0;
  if (!qword_269F7CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAE0);
  }
  return result;
}

unint64_t sub_256ADB4C0()
{
  unint64_t result = qword_269F7CAE8;
  if (!qword_269F7CAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAE8);
  }
  return result;
}

unint64_t sub_256ADB510()
{
  unint64_t result = qword_269F7CAF0;
  if (!qword_269F7CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAF0);
  }
  return result;
}

unint64_t sub_256ADB55C(uint64_t a1)
{
  unint64_t result = sub_256A9EE74();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB584(uint64_t a1)
{
  unint64_t result = sub_256ADB5AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB5AC()
{
  unint64_t result = qword_269F7CAF8;
  if (!qword_269F7CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CAF8);
  }
  return result;
}

uint64_t sub_256ADB5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADB624, (uint64_t (*)(void))sub_256ADB670);
}

unint64_t sub_256ADB624()
{
  unint64_t result = qword_269F7CB00;
  if (!qword_269F7CB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB00);
  }
  return result;
}

unint64_t sub_256ADB670()
{
  unint64_t result = qword_269F7CB08;
  if (!qword_269F7CB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB08);
  }
  return result;
}

unint64_t sub_256ADB6C0()
{
  unint64_t result = qword_269F7CB10;
  if (!qword_269F7CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB10);
  }
  return result;
}

unint64_t sub_256ADB70C(uint64_t a1)
{
  unint64_t result = sub_256A9EF64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB734(uint64_t a1)
{
  unint64_t result = sub_256ADB75C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB75C()
{
  unint64_t result = qword_26B2B3348;
  if (!qword_26B2B3348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3348);
  }
  return result;
}

uint64_t sub_256ADB7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADB7D4, (uint64_t (*)(void))sub_256ADB820);
}

unint64_t sub_256ADB7D4()
{
  unint64_t result = qword_26B2B3330;
  if (!qword_26B2B3330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3330);
  }
  return result;
}

unint64_t sub_256ADB820()
{
  unint64_t result = qword_26B2B3340;
  if (!qword_26B2B3340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3340);
  }
  return result;
}

unint64_t sub_256ADB870()
{
  unint64_t result = qword_26B2B3338;
  if (!qword_26B2B3338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3338);
  }
  return result;
}

unint64_t sub_256ADB8BC(uint64_t a1)
{
  unint64_t result = sub_256A9EEC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB8E4(uint64_t a1)
{
  unint64_t result = sub_256ADB90C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADB90C()
{
  unint64_t result = qword_269F7CB18;
  if (!qword_269F7CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB18);
  }
  return result;
}

uint64_t sub_256ADB958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADB984, (uint64_t (*)(void))sub_256ADB9D0);
}

unint64_t sub_256ADB984()
{
  unint64_t result = qword_269F7CB20;
  if (!qword_269F7CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB20);
  }
  return result;
}

unint64_t sub_256ADB9D0()
{
  unint64_t result = qword_269F7CB28;
  if (!qword_269F7CB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB28);
  }
  return result;
}

unint64_t sub_256ADBA20()
{
  unint64_t result = qword_269F7CB30;
  if (!qword_269F7CB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB30);
  }
  return result;
}

unint64_t sub_256ADBA6C(uint64_t a1)
{
  unint64_t result = sub_256A9EE24();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADBA94(uint64_t a1)
{
  unint64_t result = sub_256ADBABC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256ADBABC()
{
  unint64_t result = qword_269F7CB38;
  if (!qword_269F7CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB38);
  }
  return result;
}

uint64_t sub_256ADBB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256ADBB34(a1, a2, a3, (uint64_t (*)(void))sub_256ADBB70, (uint64_t (*)(void))sub_256ADBBBC);
}

uint64_t sub_256ADBB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_256ADBB70()
{
  unint64_t result = qword_269F7CB40;
  if (!qword_269F7CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB40);
  }
  return result;
}

unint64_t sub_256ADBBBC()
{
  unint64_t result = qword_269F7CB48;
  if (!qword_269F7CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB48);
  }
  return result;
}

unint64_t sub_256ADBC0C()
{
  unint64_t result = qword_269F7CB50;
  if (!qword_269F7CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB50);
  }
  return result;
}

void *_s9AnimationVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void type metadata accessor for Catalog.Diffusion.Adapter.Animation()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.Emoji()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.Illustration()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedAnimation()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedEmoji()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedIllustration()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedScribble()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.PersonalizedSketch()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.Refiner()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.Scribble()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.Sketch()
{
}

void type metadata accessor for Catalog.Diffusion.Adapter.SkinToneEmoji()
{
}

void type metadata accessor for Catalog.Diffusion.Model.VisualGenerationBase()
{
}

void type metadata accessor for Catalog.DisabledUseCaseList.All()
{
}

void type metadata accessor for Catalog.GenerativeFunctionOverrides.All()
{
}

void type metadata accessor for Catalog.HandwritingSynthesizer.HandwritingSynthesis()
{
}

void type metadata accessor for Catalog.ImageCuratedPrompts.All()
{
}

void type metadata accessor for Catalog.ImageFilter.Conditioning()
{
}

void type metadata accessor for Catalog.ImageFilter.Face2Word()
{
}

void type metadata accessor for Catalog.ImageFilter.HolisticallyNestedEdgeDetector()
{
}

void *_s27GenerativeEditsMagicCleanUpVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

void type metadata accessor for Catalog.ImageMagicCleanUp.GenerativeEditsMagicCleanUp()
{
}

void type metadata accessor for Catalog.ImageScaler.GenerativePlaygroundsUpscaler()
{
}

void *_s18ADMPeopleGroundingVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

void type metadata accessor for Catalog.LLM.Adapter.ADMPeopleGrounding()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ADMPromptRewriting()
{
}

void type metadata accessor for Catalog.LLM.Adapter.AnswerSynthesis()
{
}

void type metadata accessor for Catalog.LLM.Adapter.AnswerSynthesisServer()
{
}

void type metadata accessor for Catalog.LLM.Adapter.AutonamingMessages()
{
}

void type metadata accessor for Catalog.LLM.Adapter.BaseAdapter()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ConciseTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.FriendlyTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.MagicRewrite()
{
}

void type metadata accessor for Catalog.LLM.Adapter.MailReply()
{
}

void type metadata accessor for Catalog.LLM.Adapter.MessagesReply()
{
}

void type metadata accessor for Catalog.LLM.Adapter.OpenEndedSchema()
{
}

void type metadata accessor for Catalog.LLM.Adapter.OpenEndedTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.OpenEndedToneQueryResponse()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PQAVerification()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCuration()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraits()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV3()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationStoryteller()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PhotosMemoriesCreationStorytellerV2()
{
}

void type metadata accessor for Catalog.LLM.Adapter.Planner()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PlannerV2()
{
}

void type metadata accessor for Catalog.LLM.Adapter.PlannerV3()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ProfessionalTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ProofreadingReview()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ResponseGeneration()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ResponseGenerationV2()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ResponseGenerationV3()
{
}

void type metadata accessor for Catalog.LLM.Adapter.Safety()
{
}

void type metadata accessor for Catalog.LLM.Adapter.SafetyGuardrail()
{
}

void type metadata accessor for Catalog.LLM.Adapter.SearchQueryUnderstandingOnDevice()
{
}

void type metadata accessor for Catalog.LLM.Adapter.SearchQueryUnderstandingServer()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerBulletsTransform()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerConciseTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerFriendlyTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMagicRewrite()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMailReplyLongFormBasic()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMailReplyLongFormRewrite()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerMailReplyQA()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerProfessionalTone()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerProofreadingReview()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerTablesTransform()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerTakeawaysTransform()
{
}

void type metadata accessor for Catalog.LLM.Adapter.ServerTextSummarizer()
{
}

void type metadata accessor for Catalog.LLM.Adapter.Summarization()
{
}

void type metadata accessor for Catalog.LLM.Adapter.TextEventExtraction()
{
}

void type metadata accessor for Catalog.LLM.Adapter.TextPersonExtraction()
{
}

uint64_t _s10UIPreviewsVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s10UIPreviewsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 55) = *(_DWORD *)(a2 + 55);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 151) = *(_DWORD *)(a2 + 151);
  *(void *)(a1 + 144) = v10;
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  uint64_t v14 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v14;
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = *(unsigned char *)(a2 + 257);
  uint64_t v16 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10UIPreviewsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 256;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = *(unsigned char *)(v4 + 1);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s10UIPreviewsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t _s10UIPreviewsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 256;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = *(unsigned char *)(v4 + 1);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10UIPreviewsVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 280))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10UIPreviewsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 280) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Catalog.LLM.Adapter.UIPreviews()
{
}

uint64_t _s18ADMPeopleGroundingVwxx_0()
{
  sub_256AE25F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void _s18ADMPeopleGroundingVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = sub_256AA08B0(a1, a2);
  uint64_t v5 = *(void *)(v4 + 24);
  *(void *)(v2 + 16) = *(void *)(v4 + 16);
  *(void *)(v2 + 24) = v5;
  *(void *)(v2 + 32) = *(void *)(v4 + 32);
  *(_DWORD *)(v2 + 39) = *(_DWORD *)(v4 + 39);
  uint64_t v6 = *(void *)(v4 + 56);
  *(void *)(v2 + 48) = *(void *)(v4 + 48);
  *(void *)(v2 + 56) = v6;
  uint64_t v7 = *(void *)(v4 + 72);
  *(void *)(v2 + 64) = *(void *)(v4 + 64);
  *(void *)(v2 + 72) = v7;
  sub_256AE2730(v3, v4);
  uint64_t v9 = *(void *)(v8 + 104);
  *(void *)(v2 + 96) = *(void *)(v8 + 96);
  *(void *)(v2 + 104) = v9;
  uint64_t v10 = *(void *)(v8 + 120);
  *(void *)(v2 + 112) = *(void *)(v8 + 112);
  *(void *)(v2 + 120) = v10;
  *(void *)(v2 + 128) = *(void *)(v8 + 128);
  *(_DWORD *)(v2 + 135) = *(_DWORD *)(v8 + 135);
  uint64_t v11 = *(void *)(v8 + 152);
  *(void *)(v2 + 144) = *(void *)(v8 + 144);
  *(void *)(v2 + 152) = v11;
  *(_WORD *)(v2 + 160) = *(_WORD *)(v8 + 160);
  uint64_t v12 = *(void *)(v8 + 176);
  *(void *)(v2 + 168) = *(void *)(v8 + 168);
  *(void *)(v2 + 176) = v12;
  uint64_t v13 = *(void *)(v8 + 192);
  *(void *)(v2 + 184) = *(void *)(v8 + 184);
  *(void *)(v2 + 192) = v13;
  *(_WORD *)(v2 + 200) = *(_WORD *)(v8 + 200);
  uint64_t v14 = *(void *)(v8 + 216);
  *(void *)(v2 + 208) = *(void *)(v8 + 208);
  *(void *)(v2 + 216) = v14;
  uint64_t v16 = *(void *)(v8 + 232);
  *(void *)(v2 + 224) = *(void *)(v8 + 224);
  *(void *)(v2 + 232) = v16;
  *(unsigned char *)(v2 + 240) = *(unsigned char *)(v8 + 240);
  *(unsigned char *)(v2 + 241) = *(unsigned char *)(v8 + 241);
  uint64_t v15 = *(void *)(v8 + 256);
  *(void *)(v2 + 248) = *(void *)(v8 + 248);
  *(void *)(v2 + 256) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_256AE25D4();
}

void *_s18ADMPeopleGroundingVwca_0(void *a1, void *a2)
{
  sub_256AE1F98(a1, a2);
  swift_bridgeObjectRelease();
  sub_256AE2530();
  swift_bridgeObjectRelease();
  sub_256AE22C0();
  swift_bridgeObjectRelease();
  sub_256AE2188();
  swift_bridgeObjectRelease();
  sub_256AE25A0();
  swift_bridgeObjectRelease();
  sub_256AE22F4();
  swift_bridgeObjectRelease();
  sub_256AE2008();
  v2[12] = v3[12];
  sub_256AE255C();
  swift_bridgeObjectRelease();
  v2[14] = v3[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[15] = v3[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE23AC();
  v2[18] = v3[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[19] = v3[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE26D8();
  v2[21] = v3[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[22] = v3[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[23] = v3[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[24] = v3[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE26C4();
  v2[26] = v3[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[27] = v3[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[28] = v3[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[29] = v3[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE269C();
  v2[31] = v3[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[32] = v3[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

void *_s18ADMPeopleGroundingVwta_0(void *a1, void *a2)
{
  sub_256A7B184(a1, a2);
  v2[2] = v3[2];
  swift_bridgeObjectRelease();
  v2[3] = v3[3];
  swift_bridgeObjectRelease();
  sub_256AE23D0();
  uint64_t v4 = v3[7];
  v2[6] = v3[6];
  v2[7] = v4;
  swift_bridgeObjectRelease();
  v2[8] = v3[8];
  swift_bridgeObjectRelease();
  v2[9] = v3[9];
  swift_bridgeObjectRelease();
  sub_256AE2008();
  uint64_t v5 = v3[13];
  v2[12] = v3[12];
  v2[13] = v5;
  swift_bridgeObjectRelease();
  v2[14] = v3[14];
  swift_bridgeObjectRelease();
  v2[15] = v3[15];
  swift_bridgeObjectRelease();
  sub_256AE23AC();
  v2[18] = v3[18];
  swift_bridgeObjectRelease();
  v2[19] = v3[19];
  swift_bridgeObjectRelease();
  sub_256AE26D8();
  v2[21] = v3[21];
  swift_bridgeObjectRelease();
  v2[22] = v3[22];
  swift_bridgeObjectRelease();
  v2[23] = v3[23];
  swift_bridgeObjectRelease();
  v2[24] = v3[24];
  swift_bridgeObjectRelease();
  sub_256AE26C4();
  v2[26] = v3[26];
  swift_bridgeObjectRelease();
  v2[27] = v3[27];
  swift_bridgeObjectRelease();
  v2[28] = v3[28];
  swift_bridgeObjectRelease();
  v2[29] = v3[29];
  swift_bridgeObjectRelease();
  sub_256AE269C();
  v2[31] = v3[31];
  swift_bridgeObjectRelease();
  v2[32] = v3[32];
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s18ADMPeopleGroundingVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_256A6E980(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 264))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_256A6E980(v2);
}

uint64_t sub_256ADCEF4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    unint64_t result = sub_256AE2354(result, (__n128)0);
    *(_OWORD *)(result + 248) = v3;
    *(void *)unint64_t result = v4;
    if (v5 < 0) {
      *(unsigned char *)(result + 264) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_256A7AF1C(result, a2);
    }
    *(unsigned char *)(result + 264) = 0;
    if (a2) {
      return sub_256A7AF1C(result, a2);
    }
  }
  return result;
}

void type metadata accessor for Catalog.LLM.Adapter.UrgencyClassification()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.AnswerSynthesis()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.AnswerSynthesisServer()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.AutonamingMessages()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLM()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMLargeV1()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMLargeV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMLargeV3()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMSmallV1()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMSmallV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMSmallV3()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.CodeLMV1ANE3B()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ConciseTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.FriendlyTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.MagicRewrite()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.MailReply()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.MessagesReply()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.OpenEndedSchema()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.OpenEndedTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.OpenEndedToneQueryResponse()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCuration()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV3()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStoryteller()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.Planner()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PlannerV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.PlannerV3()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ProfessionalTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ProofreadingReview()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ResponseGeneration()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ResponseGenerationV2()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ResponseGenerationV3()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.SafetyGuardrail()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.SearchQueryUnderstandingOnDevice()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.SearchQueryUnderstandingServer()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerBulletsTransform()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerConciseTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerFriendlyTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMagicRewrite()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMailReplyLongFormBasic()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMailReplyLongFormRewrite()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerMailReplyQA()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerProfessionalTone()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerProofreadingReview()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerTablesTransform()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerTakeawaysTransform()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.ServerTextSummarizer()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.Summarization()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.TextEventExtraction()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.TextPersonExtraction()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.UIPreviews()
{
}

void type metadata accessor for Catalog.LLM.DraftModel.UrgencyClassification()
{
}

void type metadata accessor for Catalog.LLM.Model.AFMTextInstruct300MBase()
{
}

void type metadata accessor for Catalog.LLM.Model.AFMTextInstruct3BBase()
{
}

void type metadata accessor for Catalog.LLM.Model.ChatGPT()
{
}

void *_s6CodeLMVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD0uLL);
}

void type metadata accessor for Catalog.LLM.Model.CodeLM()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMExperimental()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMLargeV1()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMLargeV2()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMLargeV3()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSafetyGuardrail()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSmallV1()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSmallV2()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMSmallV3()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV1ANE3B()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV2()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV3()
{
}

void type metadata accessor for Catalog.LLM.Model.CodeLMV4()
{
}

uint64_t _s6CodeLMVwxx_0()
{
  sub_256AE25F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void _s6CodeLMVwcp_0()
{
  sub_256A7A910();
  uint64_t v3 = sub_256AA08B0(v1, v2);
  uint64_t v5 = v4[3];
  *(void *)(v0 + 16) = v4[2];
  *(void *)(v0 + 24) = v5;
  uint64_t v6 = v4[5];
  *(void *)(v0 + 32) = v4[4];
  *(void *)(v0 + 40) = v6;
  sub_256AE2688(v3, (uint64_t)v4);
  uint64_t v8 = *(void *)(v7 + 72);
  *(void *)(v0 + 64) = *(void *)(v7 + 64);
  *(void *)(v0 + 72) = v8;
  uint64_t v9 = *(void *)(v7 + 88);
  *(void *)(v0 + 80) = *(void *)(v7 + 80);
  *(void *)(v0 + 88) = v9;
  uint64_t v10 = *(void *)(v7 + 104);
  *(void *)(v0 + 96) = *(void *)(v7 + 96);
  *(void *)(v0 + 104) = v10;
  *(void *)(v0 + 112) = *(void *)(v7 + 112);
  *(_DWORD *)(v0 + 119) = *(_DWORD *)(v7 + 119);
  uint64_t v11 = *(void *)(v7 + 136);
  *(void *)(v0 + 128) = *(void *)(v7 + 128);
  *(void *)(v0 + 136) = v11;
  *(unsigned char *)(v0 + 144) = *(unsigned char *)(v7 + 144);
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v7 + 145);
  uint64_t v12 = *(void *)(v7 + 160);
  *(void *)(v0 + 152) = *(void *)(v7 + 152);
  *(void *)(v0 + 160) = v12;
  uint64_t v13 = *(void *)(v7 + 176);
  *(void *)(v0 + 168) = *(void *)(v7 + 168);
  *(void *)(v0 + 176) = v13;
  *(_WORD *)(v0 + 184) = *(_WORD *)(v7 + 184);
  uint64_t v14 = *(void *)(v7 + 200);
  *(void *)(v0 + 192) = *(void *)(v7 + 192);
  *(void *)(v0 + 200) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_256A7A8F4();
}

void *_s6CodeLMVwca_0(void *a1, void *a2)
{
  sub_256AE1F98(a1, a2);
  swift_bridgeObjectRelease();
  v2[2] = v3[2];
  sub_256AE22C0();
  swift_bridgeObjectRelease();
  v2[4] = v3[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[5] = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE1FE4();
  v2[8] = v3[8];
  sub_256AE22F4();
  swift_bridgeObjectRelease();
  v2[10] = v3[10];
  v2[11] = v3[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[12] = v3[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE255C();
  swift_bridgeObjectRelease();
  sub_256AE2388();
  v2[16] = v3[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[17] = v3[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE2660();
  v2[19] = v3[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[20] = v3[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[21] = v3[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[22] = v3[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE264C();
  v2[24] = v3[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[25] = v3[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s6CodeLMVwta_0(void *a1, void *a2)
{
  sub_256A7B184(a1, a2);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v3 + 24);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = *(void *)(v3 + 40);
  swift_bridgeObjectRelease();
  sub_256AE1FE4();
  uint64_t v4 = *(void *)(v3 + 72);
  *(void *)(v2 + 64) = *(void *)(v3 + 64);
  *(void *)(v2 + 72) = v4;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = *(void *)(v3 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v3 + 88);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = *(void *)(v3 + 104);
  swift_bridgeObjectRelease();
  sub_256AE2388();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 128) = *(_OWORD *)(v3 + 128);
  swift_bridgeObjectRelease();
  sub_256AE2660();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 152) = *(_OWORD *)(v3 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 168) = *(_OWORD *)(v3 + 168);
  swift_bridgeObjectRelease();
  sub_256AE264C();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 192) = *(_OWORD *)(v3 + 192);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s6CodeLMVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_256A6E980(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_256A6E980(v2);
}

uint64_t sub_256ADD7A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    unint64_t result = sub_256AE2354(result, (__n128)0);
    *(void *)unint64_t result = v3;
    if (v4 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_256A7AF1C(result, a2);
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      return sub_256A7AF1C(result, a2);
    }
  }
  return result;
}

void type metadata accessor for Catalog.LLM.Model.CodeSafetyGuardrail()
{
}

void type metadata accessor for Catalog.LLM.Model.InstructServerBase()
{
}

void type metadata accessor for Catalog.LLM.Model.NLRouterBase()
{
}

void type metadata accessor for Catalog.LLM.Model.PQAVerificationBase()
{
}

void type metadata accessor for Catalog.LLM.Model.PhotosMemoriesCreationBase()
{
}

void type metadata accessor for Catalog.LLM.Model.SafetyGuardrailLite()
{
}

void type metadata accessor for Catalog.LLM.Model.SummarizationTextSummarizerAjaxBase()
{
}

void type metadata accessor for Catalog.LLM.Model.SummarizationTextSummarizerBase()
{
}

uint64_t _s23AFMTextInstruct300MBaseVwxx_0()
{
  sub_256AE25F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void _s23AFMTextInstruct300MBaseVwcp_0()
{
  sub_256AA01C4();
  uint64_t v3 = sub_256AE2310(v1, v2);
  uint64_t v5 = v4[7];
  *(void *)(v0 + 48) = v4[6];
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = v4[9];
  *(void *)(v0 + 64) = v4[8];
  *(void *)(v0 + 72) = v6;
  sub_256AE2730(v3, (uint64_t)v4);
  uint64_t v8 = *(void *)(v7 + 104);
  *(void *)(v0 + 96) = *(void *)(v7 + 96);
  *(void *)(v0 + 104) = v8;
  *(_WORD *)(v0 + 112) = *(_WORD *)(v7 + 112);
  uint64_t v9 = *(void *)(v7 + 128);
  *(void *)(v0 + 120) = *(void *)(v7 + 120);
  *(void *)(v0 + 128) = v9;
  uint64_t v10 = *(void *)(v7 + 144);
  *(void *)(v0 + 136) = *(void *)(v7 + 136);
  *(void *)(v0 + 144) = v10;
  *(_WORD *)(v0 + 152) = *(_WORD *)(v7 + 152);
  uint64_t v11 = *(void *)(v7 + 168);
  *(void *)(v0 + 160) = *(void *)(v7 + 160);
  *(void *)(v0 + 168) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_256AA019C();
}

void *_s23AFMTextInstruct300MBaseVwca_0(void *a1, void *a2)
{
  sub_256AE1F98(a1, a2);
  swift_bridgeObjectRelease();
  sub_256AE2530();
  swift_bridgeObjectRelease();
  sub_256AE22C0();
  swift_bridgeObjectRelease();
  sub_256AE2188();
  swift_bridgeObjectRelease();
  sub_256AE25A0();
  swift_bridgeObjectRelease();
  sub_256AE22F4();
  swift_bridgeObjectRelease();
  sub_256AE2008();
  v2[12] = v3[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE255C();
  swift_bridgeObjectRelease();
  sub_256AE2638();
  v2[15] = v3[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[16] = v3[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[17] = v3[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[18] = v3[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE2624();
  v2[20] = v3[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[21] = v3[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s23AFMTextInstruct300MBaseVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  sub_256AE2008();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  sub_256AE2638();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  sub_256AE2624();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Catalog.LLM.Model.VisualGenerationQueryHandlingLite()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.AnswerSynthesisServer()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.InstructServerBase()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.NLRouterBase()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.OpenEndedSchema()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.OpenEndedTone()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.OpenEndedToneBase()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.OpenEndedToneQueryResponse()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.OpenEndedToneV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationBase()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV3()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.Planner()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PlannerV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PlannerV3()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.PrivateCloudResearchAdapter()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ResponseGeneration()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ResponseGenerationV2()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ResponseGenerationV3()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.SearchQueryUnderstandingServer()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerBulletsTransform()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerConciseTone()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerFriendlyTone()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMagicRewrite()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerMailReplyQA()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerProfessionalTone()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerProofreadingReview()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerTablesTransform()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerTakeawaysTransform()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.ServerTextSummarizer()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()
{
}

void type metadata accessor for Catalog.LLM.ServerConfiguration.VisualIntelligence()
{
}

void type metadata accessor for Catalog.ModelConfigurationReplacement.All()
{
}

void type metadata accessor for Catalog.Sanitizer.TextModerationLM()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.CodeIntelligenceBaseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.GenerativeAssistantCompositionInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.GenerativeAssistantKnowledgeFallbackInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.GenerativeAssistantKnowledgeInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.GenerativeAssistantMediaQAInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.GenerativeAssistantVisualIntelligenceCameraInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplyLongFormBasicInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplyLongFormQAInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.MailReplySnippetInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.MessagesReplyBaseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitBaseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryOnDemandInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitCUSummaryProactiveInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.VisualGenerationBaseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.VisualIntelligenceInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsComposeInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsComposeRecentsSummariesInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsConciseToneInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsOpenEndedSchemaInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneBaseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsOpenEndedToneQueryResponseInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsTablesTransformInputDenyList()
{
}

void type metadata accessor for Catalog.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.GenerativeAssistantCompositionOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.GenerativeAssistantKnowledgeFallbackOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.GenerativeAssistantKnowledgeOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.MailReplySnippetOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.MessagesReplyBaseOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitBaseOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.VisualIntelligenceOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsComposeOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList()
{
}

void type metadata accessor for Catalog.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList()
{
}

void type metadata accessor for Catalog.Tokenizer.AFMTextInstruct300MTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.AFMTextInstructEnglish49k()
{
}

void type metadata accessor for Catalog.Tokenizer.ChatGPTTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMLargeV1Tokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMLargeV2Tokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMLargeV3Tokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSafetyGuardrailTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSmallV1Tokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSmallV2Tokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMSmallV3Tokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerExperimental()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerV2()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerV3()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMTokenizerV4()
{
}

void type metadata accessor for Catalog.Tokenizer.CodeLMV1ANE3BTokenizer()
{
}

uint64_t _s27GenerativeEditsMagicCleanUpVwxx_0()
{
  sub_256AE25F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s27GenerativeEditsMagicCleanUpVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = sub_256AA08B0(a1, a2);
  uint64_t v5 = v4[3];
  *(void *)(v2 + 16) = v4[2];
  *(void *)(v2 + 24) = v5;
  uint64_t v6 = v4[5];
  *(void *)(v2 + 32) = v4[4];
  *(void *)(v2 + 40) = v6;
  sub_256AE2688(v3, (uint64_t)v4);
  uint64_t v8 = *(void *)(v7 + 72);
  *(void *)(v2 + 64) = *(void *)(v7 + 64);
  *(void *)(v2 + 72) = v8;
  *(_WORD *)(v2 + 80) = *(_WORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 96);
  *(void *)(v2 + 88) = *(void *)(v7 + 88);
  *(void *)(v2 + 96) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void *_s27GenerativeEditsMagicCleanUpVwca_0(void *a1, void *a2)
{
  sub_256AE1F98(a1, a2);
  swift_bridgeObjectRelease();
  v2[2] = v3[2];
  sub_256AE22C0();
  swift_bridgeObjectRelease();
  v2[4] = v3[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[5] = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256AE1FE4();
  sub_256AE25A0();
  swift_bridgeObjectRelease();
  sub_256AE22F4();
  swift_bridgeObjectRelease();
  sub_256AE2674();
  v2[11] = v3[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2[12] = v3[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s27GenerativeEditsMagicCleanUpVwta_0(void *a1, void *a2)
{
  sub_256A7B184(a1, a2);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v3 + 24);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = *(void *)(v3 + 40);
  swift_bridgeObjectRelease();
  sub_256AE1FE4();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(v3 + 64);
  swift_bridgeObjectRelease();
  sub_256AE2674();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v3 + 88);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s27GenerativeEditsMagicCleanUpVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_256A6E980(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_256A6E980(v2);
}

uint64_t sub_256ADE504(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_256A7AF1C(result, a2);
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      return sub_256A7AF1C(result, a2);
    }
  }
  return result;
}

void type metadata accessor for Catalog.Tokenizer.CodeSafetyGuardrailTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.InstructServerTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.NLRouterTokenizer()
{
}

void type metadata accessor for Catalog.Tokenizer.SafetyGuardrailLiteTokenizer()
{
}

uint64_t _s9AnimationVwxx_0()
{
  sub_256AE25F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s9AnimationVwcp_0(uint64_t a1, uint64_t a2)
{
  sub_256AE2310(a1, a2);
  uint64_t v4 = *(void *)(v3 + 56);
  *(void *)(v2 + 48) = *(void *)(v3 + 48);
  *(void *)(v2 + 56) = v4;
  *(unsigned char *)(v2 + 64) = *(unsigned char *)(v3 + 64);
  *(unsigned char *)(v2 + 65) = *(unsigned char *)(v3 + 65);
  uint64_t v5 = *(void *)(v3 + 80);
  *(void *)(v2 + 72) = *(void *)(v3 + 72);
  *(void *)(v2 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s9AnimationVwca_0(void *a1, void *a2)
{
  sub_256AE1F98(a1, a2);
  swift_bridgeObjectRelease();
  sub_256AE2530();
  swift_bridgeObjectRelease();
  sub_256AE22C0();
  swift_bridgeObjectRelease();
  sub_256AE23D0();
  *(void *)(v2 + 48) = *(void *)(v3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = *(void *)(v3 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + 64) = *(unsigned char *)(v3 + 64);
  *(unsigned char *)(v2 + 65) = *(unsigned char *)(v3 + 65);
  sub_256AE22F4();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = *(void *)(v3 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s9AnimationVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AnimationVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_256A6E980(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_256A6E980(v2);
}

uint64_t sub_256ADE818(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_256A7AF1C(result, a2);
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      return sub_256A7AF1C(result, a2);
    }
  }
  return result;
}

void type metadata accessor for Catalog.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer()
{
}

uint64_t sub_256ADE994()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 296, 7);
}

uint64_t sub_256ADEA78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 280, 7);
}

uint64_t sub_256ADEC74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 224, 7);
}

uint64_t sub_256AE1DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = (a2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 48) = 2;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 2;
  return sub_256AB7E28(a1);
}

uint64_t sub_256AE1DEC(uint64_t a1)
{
  *(unsigned char *)(a1 + 48) = 2;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 2;
  return sub_256AB7E28(a1);
}

uint64_t sub_256AE1E0C()
{
  return swift_allocObject();
}

void sub_256AE1E24(uint64_t a1@<X8>)
{
  *(void *)(a1 + 72) = v1;
  *(void *)(a1 + 80) = v2;
}

uint64_t sub_256AE1E2C(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  *(void *)(v1 + 32) = 150000;
  *(_WORD *)(v1 + 40) = 0;
  *(unsigned char *)(v1 + 42) = 0;
  return result;
}

void sub_256AE1E44(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = 100000;
  *(_WORD *)(v1 + 40) = 0;
  *(unsigned char *)(v1 + 42) = 0;
  Catalog.LLM.Model.AFMTextInstruct3BBase.init()();
}

uint64_t sub_256AE1E6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 24) = result;
  *(void *)(v2 + 32) = a2;
  *(_WORD *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 42) = 0;
  return result;
}

uint64_t sub_256AE1E7C()
{
  return swift_allocObject();
}

void sub_256AE1E94(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  Catalog.LLM.Model.InstructServerBase.init()();
}

void sub_256AE1EB0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  *(void *)(v1 + 56) = a1;
  *(_WORD *)(v1 + 64) = 256;
}

uint64_t sub_256AE1EC0(uint64_t a1)
{
  *(unsigned char *)(a1 + 48) = 2;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 2;
  *(void *)(a1 + 72) = 2019650145;
  *(void *)(a1 + 80) = 0xE400000000000000;
  *(unsigned char *)(a1 + 88) = 2;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = 2;
  return sub_256AB7E28(a1);
}

void sub_256AE1EFC(uint64_t a1@<X8>)
{
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = v1;
  *(_WORD *)(v2 + 240) = 256;
}

void sub_256AE1F0C(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  *(void *)(v1 + 56) = a1;
  *(_WORD *)(v1 + 64) = 256;
}

void sub_256AE1F1C(uint64_t a1@<X8>)
{
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = v1;
  *(_WORD *)(v2 + 240) = 0;
}

uint64_t sub_256AE1F28(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  *(void *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  return result;
}

void sub_256AE1F34(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  *(void *)(v1 + 56) = a1;
  *(_WORD *)(v1 + 64) = 0;
}

uint64_t sub_256AE1F40(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  *(void *)(v1 + 48) = 1590000;
  *(_WORD *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 58) = 0;
  return result;
}

uint64_t sub_256AE1F5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_256AACEE8(v4 | 0x8000000000000000, a1, a2, a3, a4);
}

uint64_t sub_256AE1F64@<X0>(uint64_t result@<X0>, unsigned __int16 a2@<W8>)
{
  *(void *)(v2 + 24) = result;
  *(void *)(v2 + 32) = a2 | 0x30000u;
  *(_WORD *)(v2 + 40) = 256;
  *(unsigned char *)(v2 + 42) = 0;
  return result;
}

uint64_t sub_256AE1F80(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  *(void *)(v1 + 48) = 10000;
  *(_WORD *)(v1 + 56) = 1;
  *(unsigned char *)(v1 + 58) = 0;
  return result;
}

uint64_t sub_256AE1F98(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

void sub_256AE1FE4()
{
  *(void *)(v0 + 48) = *(void *)(v1 + 48);
  *(unsigned char *)(v0 + 56) = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(v0 + 57) = *(unsigned char *)(v1 + 57);
  *(unsigned char *)(v0 + 58) = *(unsigned char *)(v1 + 58);
}

void sub_256AE2008()
{
  *(void *)(v0 + 80) = *(void *)(v1 + 80);
  *(unsigned char *)(v0 + 88) = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(v0 + 89) = *(unsigned char *)(v1 + 89);
  *(unsigned char *)(v0 + 90) = *(unsigned char *)(v1 + 90);
}

__n128 sub_256AE202C()
{
  return *(__n128 *)(v0 + 72);
}

void sub_256AE2094(uint64_t a1@<X8>)
{
  *(void *)(v1 + 64) = a1;
  *(void *)(v1 + 72) = a1;
  *(_WORD *)(v1 + 80) = 256;
}

void sub_256AE20DC(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  Catalog.LLM.Model.PhotosMemoriesCreationBase.init()((void *)(v1 + 48));
}

void sub_256AE20F8(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = (a1 - 32) | 0x8000000000000000;
}

void sub_256AE211C(uint64_t a1@<X8>)
{
  *uint64_t v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_256AE214C(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  *(void *)(v1 + 32) = 10000;
  *(_WORD *)(v1 + 40) = 1;
  *(unsigned char *)(v1 + 42) = 0;
  return result;
}

void sub_256AE2164(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = 40000;
  *(_WORD *)(v1 + 40) = 0;
  *(unsigned char *)(v1 + 42) = 0;
  Catalog.LLM.Model.AFMTextInstruct300MBase.init()();
}

uint64_t sub_256AE2188()
{
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  *(unsigned char *)(v0 + 40) = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(v0 + 41) = *(unsigned char *)(v1 + 41);
  *(unsigned char *)(v0 + 42) = *(unsigned char *)(v1 + 42);
  *(void *)(v0 + 48) = *(void *)(v1 + 48);
  *(void *)(v0 + 56) = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

void sub_256AE21CC()
{
  *(_WORD *)(v0 + 40) = 1;
  *(unsigned char *)(v0 + 42) = 0;
}

uint64_t sub_256AE2204()
{
  return swift_allocObject();
}

void sub_256AE221C(uint64_t a1@<X8>)
{
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = (v1 - 32) | 0x8000000000000000;
  strcpy((char *)(v2 + 16), "mc.UIPreviews");
  *(_WORD *)(v2 + 30) = -4864;
}

void sub_256AE2250(uint64_t a1@<X8>)
{
  *(void *)(v1 + 168) = a1;
  *(void *)(v1 + 176) = a1;
  *(_WORD *)(v1 + 184) = 256;
}

uint64_t _s12ModelCatalog0B0O3LLMO7AdapterO04BaseD0V17executionContextsShyAA16ExecutionContextVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_256AE2268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_256AAB194(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4, a5);
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V17executionContextsShyAA16ExecutionContextVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V18inferenceProvidersShyAA17InferenceProviderVGvg_0()
{
  return swift_bridgeObjectRetain();
}

void sub_256AE2280(uint64_t a1@<X8>)
{
  *uint64_t v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000;
  v2[2] = 0x4C65646F432E636DLL;
  v2[3] = 0xE90000000000004DLL;
}

uint64_t sub_256AE22C0()
{
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_256AE22DC(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  *(void *)(v1 + 48) = 150000;
  *(_WORD *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 58) = 0;
  return result;
}

uint64_t sub_256AE22F4()
{
  *(void *)(v0 + 72) = *(void *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_256AE2310(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = result;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
  return result;
}

uint64_t sub_256AE2354(uint64_t result, __n128 a2)
{
  *(__n128 *)(result + 184) = a2;
  *(__n128 *)(result + 168) = a2;
  *(__n128 *)(result + 152) = a2;
  *(__n128 *)(result + 136) = a2;
  *(__n128 *)(result + 120) = a2;
  *(__n128 *)(result + 104) = a2;
  *(__n128 *)(result + 88) = a2;
  *(__n128 *)(result + 72) = a2;
  *(__n128 *)(result + 56) = a2;
  *(__n128 *)(result + 40) = a2;
  *(__n128 *)(result + 24) = a2;
  *(__n128 *)(result + 8) = a2;
  return result;
}

void sub_256AE2388()
{
  *(void *)(v0 + 112) = *(void *)(v1 + 112);
  *(unsigned char *)(v0 + 120) = *(unsigned char *)(v1 + 120);
  *(unsigned char *)(v0 + 121) = *(unsigned char *)(v1 + 121);
  *(unsigned char *)(v0 + 122) = *(unsigned char *)(v1 + 122);
}

void sub_256AE23AC()
{
  *(void *)(v0 + 128) = *(void *)(v1 + 128);
  *(unsigned char *)(v0 + 136) = *(unsigned char *)(v1 + 136);
  *(unsigned char *)(v0 + 137) = *(unsigned char *)(v1 + 137);
  *(unsigned char *)(v0 + 138) = *(unsigned char *)(v1 + 138);
}

void sub_256AE23D0()
{
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  *(unsigned char *)(v0 + 40) = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(v0 + 41) = *(unsigned char *)(v1 + 41);
  *(unsigned char *)(v0 + 42) = *(unsigned char *)(v1 + 42);
}

void sub_256AE2414(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = a1;
  *(void *)(v1 + 144) = a1;
  *(_WORD *)(v1 + 152) = v2;
}

uint64_t sub_256AE2420()
{
  return swift_allocObject();
}

uint64_t _s12ModelCatalog0B0O3LLMO7AdapterO04BaseD0V4tagsSayAA3TagOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s12ModelCatalog0B0O17ImageMagicCleanUpO015GenerativeEditsdeF0V13preconditionsSayAA12PreconditionVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s12ModelCatalog0B0O3LLMO0A0O13CodeLMV1ANE3BV20dependentResourceIDsSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_256AE2530()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_256AE255C()
{
  *(void *)(v0 + 104) = *(void *)(v1 + 104);
  return swift_bridgeObjectRetain();
}

void sub_256AE2578(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = a1;
  *(void *)(v1 + 144) = a1;
  *(_WORD *)(v1 + 152) = 0;
}

void sub_256AE2584(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 39) = 0;
  Catalog.Tokenizer.InstructServerTokenizer.init()();
}

uint64_t sub_256AE25A0()
{
  *(void *)(v0 + 64) = *(void *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_256AE25F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_256AE2608()
{
  return sub_256B3FF40();
}

void sub_256AE2624()
{
  *(unsigned char *)(v0 + 152) = *(unsigned char *)(v1 + 152);
  *(unsigned char *)(v0 + 153) = *(unsigned char *)(v1 + 153);
}

void sub_256AE2638()
{
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v0 + 113) = *(unsigned char *)(v1 + 113);
}

void sub_256AE264C()
{
  *(unsigned char *)(v0 + 184) = *(unsigned char *)(v1 + 184);
  *(unsigned char *)(v0 + 185) = *(unsigned char *)(v1 + 185);
}

void sub_256AE2660()
{
  *(unsigned char *)(v0 + 144) = *(unsigned char *)(v1 + 144);
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v1 + 145);
}

void sub_256AE2674()
{
  *(unsigned char *)(v0 + 80) = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(v0 + 81) = *(unsigned char *)(v1 + 81);
}

void sub_256AE2688(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(v2 + 55) = *(_DWORD *)(a2 + 55);
}

void sub_256AE269C()
{
  *(unsigned char *)(v0 + 240) = *(unsigned char *)(v1 + 240);
  *(unsigned char *)(v0 + 241) = *(unsigned char *)(v1 + 241);
}

uint64_t sub_256AE26B0(uint64_t a1)
{
  return *(void *)a1;
}

void sub_256AE26C4()
{
  *(unsigned char *)(v0 + 200) = *(unsigned char *)(v1 + 200);
  *(unsigned char *)(v0 + 201) = *(unsigned char *)(v1 + 201);
}

void sub_256AE26D8()
{
  *(unsigned char *)(v0 + 160) = *(unsigned char *)(v1 + 160);
  *(unsigned char *)(v0 + 161) = *(unsigned char *)(v1 + 161);
}

void sub_256AE26EC(uint64_t a1@<X8>)
{
  *(void *)(a1 + 88) = v1;
  *(void *)(a1 + 96) = v2;
}

void *sub_256AE26F4(void *a1)
{
  return memcpy(a1, v1, 0xB0uLL);
}

uint64_t sub_256AE270C()
{
  return v0;
}

void sub_256AE2718()
{
  sub_256A97C6C();
}

void sub_256AE2730(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(v2 + 87) = *(_DWORD *)(a2 + 87);
}

unint64_t RequestResourcesKey.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
    case 2:
    case 3:
      unint64_t result = 0x6C5F6D6C65646F63;
      break;
    case 4:
    case 5:
    case 6:
    case 7:
      unint64_t result = 0x735F6D6C65646F63;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Tag.rawValue.getter()
{
  unint64_t result = 0xD00000000000003CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 2:
    case 3:
    case 6:
    case 0x10:
    case 0x12:
    case 0x14:
    case 0x25:
    case 0x27:
      unint64_t result = 0xD000000000000039;
      break;
    case 4:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000045;
      break;
    case 9:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000033;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000038;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000032;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000038;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000031;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000031;
      break;
    case 0x13:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 0x15:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 0x16:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 0x17:
      unint64_t result = 0xD000000000000044;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000032;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000037;
      break;
    case 0x1A:
      unint64_t result = 0xD000000000000032;
      break;
    case 0x1B:
      unint64_t result = 0xD000000000000033;
      break;
    case 0x1C:
      unint64_t result = 0xD000000000000033;
      break;
    case 0x1D:
      unint64_t result = 0xD000000000000030;
      break;
    case 0x1E:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 0x1F:
      unint64_t result = 0xD00000000000003FLL;
      break;
    case 0x20:
      unint64_t result = 0xD000000000000032;
      break;
    case 0x21:
      unint64_t result = 0xD000000000000034;
      break;
    case 0x22:
      unint64_t result = 0xD000000000000036;
      break;
    case 0x23:
      unint64_t result = 0xD000000000000034;
      break;
    case 0x24:
      unint64_t result = 0xD000000000000037;
      break;
    case 0x26:
      unint64_t result = 0xD000000000000036;
      break;
    case 0x28:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

ModelCatalog::Tag_optional __swiftcall Tag.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_256B3FEC0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 23;
  switch(v3)
  {
    case 0:
      goto LABEL_25;
    case 1:
      char v5 = 1;
      goto LABEL_25;
    case 2:
      char v5 = 2;
      goto LABEL_25;
    case 3:
      char v5 = 3;
      goto LABEL_25;
    case 4:
      char v5 = 4;
      goto LABEL_25;
    case 5:
      char v5 = 5;
      goto LABEL_25;
    case 6:
      char v5 = 6;
      goto LABEL_25;
    case 7:
      char v5 = 7;
      goto LABEL_25;
    case 8:
      char v5 = 8;
      goto LABEL_25;
    case 9:
      char v5 = 9;
      goto LABEL_25;
    case 10:
      char v5 = 10;
      goto LABEL_25;
    case 11:
      char v5 = 11;
      goto LABEL_25;
    case 12:
      char v5 = 12;
      goto LABEL_25;
    case 13:
      char v5 = 13;
      goto LABEL_25;
    case 14:
      char v5 = 14;
      goto LABEL_25;
    case 15:
      char v5 = 15;
      goto LABEL_25;
    case 16:
      char v5 = 16;
      goto LABEL_25;
    case 17:
      char v5 = 17;
      goto LABEL_25;
    case 18:
      char v5 = 18;
      goto LABEL_25;
    case 19:
      char v5 = 19;
      goto LABEL_25;
    case 20:
      char v5 = 20;
      goto LABEL_25;
    case 21:
      char v5 = 21;
      goto LABEL_25;
    case 22:
      char v5 = 22;
LABEL_25:
      char v6 = v5;
      break;
    case 23:
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    default:
      char v6 = 41;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void static Catalog.Resource.Sanitizer.TextModerationLM()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00648();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for SanitizerBase;
  *(void *)(v2 + 32) = sub_256A77768();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00620(v3);
  SanitizerBase.init(configuration:)();
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B007B0();
    sub_256B0082C();
    sub_256AFFB60();
    uint64_t v4 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v4, v5, v4, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AE30FC: call analysis failed (funcsize=66)"

#error "256AE3244: call analysis failed (funcsize=68)"

#error "256AE3380: call analysis failed (funcsize=65)"

#error "256AE34BC: call analysis failed (funcsize=65)"

#error "256AE35FC: call analysis failed (funcsize=68)"

#error "256AE373C: call analysis failed (funcsize=67)"

#error "256AE386C: call analysis failed (funcsize=62)"

#error "256AE39A0: call analysis failed (funcsize=65)"

void static Catalog.Resource.Tokenizer.InstructServerTokenizer()()
{
  sub_256AFFBF8();
  sub_256B00424();
  sub_256B015DC();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for TokenizerBase;
  *(void *)(v0 + 32) = sub_256A77AC0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256B016E0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00F00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Model.InstructServerBase()()
{
  sub_256AFFBF8();
  sub_256AFFE7C();
  sub_256B015DC();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMModelBase;
  *(void *)(v0 + 32) = sub_256A77B10();
  uint64_t v2 = sub_256A6EF9C();
  sub_256B00B90(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00204();
    sub_256B00F00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.AnswerSynthesisServer()()
{
  sub_256AFFBF8();
  sub_256B006DC();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.AnswerSynthesisServer()()
{
  sub_256AFFBF8();
  sub_256B00580();
  sub_256B008D4();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B70();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AE3EDC: call analysis failed (funcsize=65)"

#error "256AE4014: call analysis failed (funcsize=64)"

void static Catalog.Resource.Tokenizer.ChatGPTTokenizer()()
{
  sub_256AFFBF8();
  sub_256B00424();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for TokenizerBase;
  *(void *)(v0 + 32) = sub_256A77AC0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256B016E0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00790();
    sub_256B0153C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Model.ChatGPT()()
{
  sub_256AFFBF8();
  sub_256AFFE7C();
  sub_256B00BDC();
  sub_256B002F8(v2);
  sub_256B00524();
  *(void *)(v0 + 24) = &type metadata for LLMModelBase;
  *(void *)(v0 + 32) = sub_256A77B10();
  uint64_t v3 = sub_256A6EF9C();
  sub_256B00B90(v3, v4, v5, v6, v7, v8);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AE4390: call analysis failed (funcsize=65)"

#error "256AE44A4: call analysis failed (funcsize=59)"

#error "256AE45C4: call analysis failed (funcsize=61)"

#error "256AE46FC: call analysis failed (funcsize=65)"

#error "256AE4830: call analysis failed (funcsize=63)"

#error "256AE4950: call analysis failed (funcsize=61)"

#error "256AE4A7C: call analysis failed (funcsize=63)"

#error "256AE4B9C: call analysis failed (funcsize=61)"

#error "256AE4CC8: call analysis failed (funcsize=63)"

#error "256AE4DE8: call analysis failed (funcsize=61)"

#error "256AE4F38: call analysis failed (funcsize=68)"

#error "256AE5088: call analysis failed (funcsize=70)"

#error "256AE51BC: call analysis failed (funcsize=63)"

#error "256AE52DC: call analysis failed (funcsize=61)"

#error "256AE5408: call analysis failed (funcsize=63)"

#error "256AE5528: call analysis failed (funcsize=61)"

#error "256AE5654: call analysis failed (funcsize=63)"

#error "256AE5774: call analysis failed (funcsize=61)"

#error "256AE58B4: call analysis failed (funcsize=69)"

#error "256AE59CC: call analysis failed (funcsize=62)"

#error "256AE5AEC: call analysis failed (funcsize=60)"

#error "256AE5C08: call analysis failed (funcsize=60)"

#error "256AE5D20: call analysis failed (funcsize=60)"

#error "256AE5E3C: call analysis failed (funcsize=60)"

#error "256AE5F54: call analysis failed (funcsize=60)"

#error "256AE6070: call analysis failed (funcsize=60)"

#error "256AE6188: call analysis failed (funcsize=60)"

#error "256AE62AC: call analysis failed (funcsize=61)"

#error "256AE63D0: call analysis failed (funcsize=61)"

#error "256AE64F4: call analysis failed (funcsize=61)"

#error "256AE6630: call analysis failed (funcsize=66)"

#error "256AE6768: call analysis failed (funcsize=65)"

#error "256AE68C0: call analysis failed (funcsize=68)"

#error "256AE6A10: call analysis failed (funcsize=66)"

#error "256AE6B68: call analysis failed (funcsize=68)"

#error "256AE6CB4: call analysis failed (funcsize=68)"

#error "256AE6DF4: call analysis failed (funcsize=67)"

#error "256AE6F2C: call analysis failed (funcsize=65)"

#error "256AE7068: call analysis failed (funcsize=66)"

#error "256AE71A0: call analysis failed (funcsize=65)"

#error "256AE72E4: call analysis failed (funcsize=71)"

#error "256AE742C: call analysis failed (funcsize=68)"

void static Catalog.Resource.LLM.Adapter.OpenEndedSchema()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B00FB8();
  sub_256AFFFA8();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.OpenEndedSchema()()
{
  sub_256AFFBF8();
  sub_256B0070C();
  sub_256B015AC();
  sub_256B00BDC();
  sub_256B002F8(v2);
  sub_256B00524();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDD0(v3, v4, v5, v6, v7, v8);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B30();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.OpenEndedTone()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256AFFFA8();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.OpenEndedTone()()
{
  sub_256AFFBF8();
  sub_256B0070C();
  sub_256B015AC();
  sub_256B00BDC();
  sub_256B002F8(v2);
  sub_256B00524();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDD0(v3, v4, v5, v6, v7, v8);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00968();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.BaseAdapter()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256AFFFA8();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00074();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.OpenEndedToneQueryResponse()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B01440();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00948();
    sub_256B00F20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.OpenEndedToneQueryResponse()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B50();
    sub_256B011F4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AE7CE0: call analysis failed (funcsize=64)"

#error "256AE7E24: call analysis failed (funcsize=65)"

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCuration()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00CE8();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v2 + 32) = sub_256A77BB0();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDA0(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00948();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCuration()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B50();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B00A04();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01270();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00694();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Model.PhotosMemoriesCreationBase()()
{
  sub_256AFFBF8();
  sub_256AFFE7C();
  sub_256B015C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMModelBase;
  *(void *)(v0 + 32) = sub_256A77B10();
  uint64_t v2 = sub_256A6EF9C();
  sub_256B00B90(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B00B20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraits()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B012B0();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01660();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B00A04();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01250();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00694();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DEC();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B014E8();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01660();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()()
{
  sub_256AFFBF8();
  sub_256B00D28();
  sub_256B00A04();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DEC();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00694();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B016A0();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV3()()
{
  sub_256AFFBF8();
  sub_256B00D28();
  sub_256B00A04();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DEC();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV3()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00694();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B016A0();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStoryteller()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B01860();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B016C0();
    sub_256B00A54();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStoryteller()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B01888();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01270();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStorytellerV2()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00CE8();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v2 + 32) = sub_256A77BB0();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDA0(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00948();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B50();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.Planner()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B011E0();
  sub_256AFFFA8();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00488();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.Planner()()
{
  sub_256AFFBF8();
  sub_256B0070C();
  sub_256B00BDC();
  sub_256B002F8(v2);
  sub_256B00524();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDD0(v3, v4, v5, v6, v7, v8);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PlannerV2()()
{
  sub_256AFFBF8();
  sub_256B00A74();
  sub_256AFFFA8();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PlannerV2()()
{
  sub_256AFFBF8();
  sub_256B00864();
  sub_256B00BDC();
  sub_256B002F8(v2);
  sub_256B00524();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDD0(v3, v4, v5, v6, v7, v8);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.PlannerV3()()
{
  sub_256AFFBF8();
  sub_256B00A74();
  sub_256AFFFA8();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.PlannerV3()()
{
  sub_256AFFBF8();
  sub_256B00864();
  sub_256B00BDC();
  sub_256B002F8(v2);
  sub_256B00524();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDD0(v3, v4, v5, v6, v7, v8);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AE9934: call analysis failed (funcsize=71)"

#error "256AE9A80: call analysis failed (funcsize=68)"

#error "256AE9BBC: call analysis failed (funcsize=65)"

#error "256AE9CF4: call analysis failed (funcsize=64)"

void static Catalog.Resource.LLM.Adapter.ResponseGeneration()()
{
  sub_256AFFBF8();
  sub_256AFFF68();
  sub_256B00244();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ResponseGeneration()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B011F4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ResponseGenerationV2()()
{
  sub_256AFFBF8();
  sub_256B00318();
  sub_256B01624();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B70();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ResponseGenerationV2()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B014B0();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00928();
    sub_256B01200();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ResponseGenerationV3()()
{
  sub_256AFFBF8();
  sub_256B00318();
  sub_256B01624();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B70();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ResponseGenerationV3()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B014B0();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00928();
    sub_256B01200();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AEA440: call analysis failed (funcsize=68)"

#error "256AEA570: call analysis failed (funcsize=62)"

#error "256AEA6B0: call analysis failed (funcsize=66)"

#error "256AEA7D8: call analysis failed (funcsize=62)"

#error "256AEA91C: call analysis failed (funcsize=65)"

#error "256AEAA50: call analysis failed (funcsize=64)"

#error "256AEAB90: call analysis failed (funcsize=67)"

void static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingServer()()
{
  sub_256AFFBF8();
  sub_256B00D58();
  sub_256B00A04();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01290();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingServer()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00694();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01250();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerBulletsTransform()()
{
  sub_256AFFBF8();
  sub_256AFFE00();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerBulletsTransform()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B30();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerConciseTone()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B009E4();
  sub_256B0074C();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v2 + 32) = sub_256A77BB0();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDA0(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00074();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerConciseTone()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B009E4();
  sub_256B008D4();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerFriendlyTone()()
{
  sub_256AFFBF8();
  sub_256AFFF68();
  sub_256B0074C();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerFriendlyTone()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerMagicRewrite()()
{
  sub_256AFFBF8();
  sub_256AFFF68();
  sub_256B0074C();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerMagicRewrite()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormBasic()()
{
  sub_256AFFBF8();
  sub_256AFFCF4();
  sub_256B01874();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01290();
    sub_256B00F50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormBasic()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B01440();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01250();
    sub_256B00F20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormRewrite()()
{
  sub_256AFFBF8();
  sub_256B00D58();
  sub_256B01874();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00928();
    sub_256B00F50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormRewrite()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B01440();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256B00F20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerMailReplyQA()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B009E4();
  sub_256B00A04();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v2 + 32) = sub_256A77BB0();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDA0(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00468();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerMailReplyQA()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B00694();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerProfessionalTone()()
{
  sub_256AFFBF8();
  sub_256AFFE00();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerProfessionalTone()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B30();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerProofreadingReview()()
{
  sub_256AFFBF8();
  sub_256B00D88();
  sub_256B0074C();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerProofreadingReview()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerTablesTransform()()
{
  sub_256AFFBF8();
  sub_256B006DC();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerTablesTransform()()
{
  sub_256AFFBF8();
  sub_256B00580();
  sub_256B008D4();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B70();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Adapter.ServerTakeawaysTransform()()
{
  sub_256AFFBF8();
  sub_256B00D88();
  sub_256B0074C();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerTakeawaysTransform()()
{
  sub_256AFFBF8();
  sub_256AFFC18();
  sub_256B000C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v0 + 32) = sub_256A77B60();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDD0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AEC578: call analysis failed (funcsize=68)"

#error "256AEC6CC: call analysis failed (funcsize=66)"

void static Catalog.Resource.LLM.Adapter.ServerTextSummarizer()()
{
  sub_256AFFBF8();
  sub_256B00318();
  sub_256B004C8();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMAdapterBase;
  *(void *)(v0 + 32) = sub_256A77BB0();
  uint64_t v2 = sub_256A6EF9C();
  sub_256AFFDA0(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.DraftModel.ServerTextSummarizer()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00A64();
  sub_256B008D4();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFC70();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for LLMDraftModelBase;
  *(void *)(v2 + 32) = sub_256A77B60();
  uint64_t v3 = sub_256A6EF9C();
  sub_256AFFDD0(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00968();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.Model.SummarizationTextSummarizerAjaxBase()()
{
  sub_256AFFBF8();
  sub_256AFFE7C();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMModelBase;
  *(void *)(v0 + 32) = sub_256A77B10();
  uint64_t v2 = sub_256A6EF9C();
  sub_256B00B90(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B0156C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

#error "256AECB2C: call analysis failed (funcsize=64)"

#error "256AECC6C: call analysis failed (funcsize=67)"

#error "256AECD9C: call analysis failed (funcsize=63)"

#error "256AECEFC: call analysis failed (funcsize=69)"

#error "256AED018: call analysis failed (funcsize=60)"

#error "256AED12C: call analysis failed (funcsize=59)"

#error "256AED268: call analysis failed (funcsize=65)"

#error "256AED3A8: call analysis failed (funcsize=66)"

#error "256AED514: call analysis failed (funcsize=75)"

#error "256AED654: call analysis failed (funcsize=68)"

void static Catalog.Resource.Diffusion.Model.VisualGenerationBase()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00A64();
  sub_256B00648();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for AssetBackedDiffusionModelBase;
  *(void *)(v2 + 32) = sub_256A77E40();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00620(v3);
  AssetBackedDiffusionModelBase.init(configuration:)();
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00988();
    sub_256B0082C();
    sub_256AFFB60();
    uint64_t v4 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v4, v5, v4, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Animation()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B00CB0();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00488();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Emoji()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B017A0();
  sub_256AFFDF0();
  sub_256AFFFA8();
  sub_256AFFD5C();
  sub_256B0130C();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v2 + 32) = sub_256A77E90();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00224(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00908();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Illustration()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedAnimation()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B0157C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedEmoji()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedIllustration()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B01418();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B30();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedScribble()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B01728();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFE3C();
  sub_256B01654();
  sub_256B00DB8();
  sub_256B0065C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B01200();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.PersonalizedSketch()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B012D0();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFE3C();
  sub_256B01654();
  sub_256B00DB8();
  sub_256B0065C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Refiner()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B011E0();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFE3C();
  sub_256B01654();
  sub_256B00DB8();
  sub_256B0065C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00298();
    sub_256B0158C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Scribble()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B003D0();
  sub_256B0163C();
  sub_256B00CA4();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00074();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.Sketch()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B01838();
  sub_256B01648();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFD5C();
  sub_256B011D4();
  sub_256AFFD84();
  sub_256B00268();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00204();
    sub_256B00F10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.Diffusion.Adapter.SkinToneEmoji()()
{
  sub_256AFFBF8();
  sub_256B0073C();
  sub_256B01838();
  sub_256B00CA4();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFE3C();
  sub_256B01654();
  sub_256B00DB8();
  sub_256B0065C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDiffusionAdapterBase;
  *(void *)(v0 + 32) = sub_256A77E90();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00224(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00074();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.DisabledUseCaseList.All()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00800();
  sub_256AFFB7C();
  sub_256AFFD5C();
  sub_256B01530();
  sub_256AFFEC0();
  sub_256B01778();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedDisabledUseCaseListBase;
  *(void *)(v0 + 32) = sub_256AEE92C();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00620(v2);
  AssetBackedDisabledUseCaseListBase.init(configuration:)();
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01680();
    sub_256B01220();
    sub_256AFFB60();
    uint64_t v3 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v3, v4, v3, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AEE92C()
{
  unint64_t result = qword_26B2B5700;
  if (!qword_26B2B5700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5700);
  }
  return result;
}

void static Catalog.Resource.GenerativeFunctionOverrides.All()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00800();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256AFFF48();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for AssetBackedGenerativeFunctionOverridesBase;
  *(void *)(v2 + 32) = sub_256AEEAB0();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00620(v3);
  AssetBackedGenerativeFunctionOverridesBase.init(configuration:)();
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B007D0();
    sub_256B0155C();
    sub_256AFFB60();
    uint64_t v4 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v4, v5, v4, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AEEAB0()
{
  unint64_t result = qword_26B2B50C0;
  if (!qword_26B2B50C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B50C0);
  }
  return result;
}

void static Catalog.Resource.HandwritingSynthesizer.HandwritingSynthesis()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256AFFD94();
  sub_256AFFE3C();
  sub_256B0159C();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for AssetBackedHandwritingSynthesizerBase;
  *(void *)(v2 + 32) = sub_256AEEC60();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00620(v3);
  AssetBackedHandwritingSynthesizerBase.init(configuration:)();
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00790();
    sub_256B01210();
    sub_256AFFB60();
    uint64_t v4 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v4, v5, v4, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AEEC60()
{
  unint64_t result = qword_26B2B59A8;
  if (!qword_26B2B59A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B59A8);
  }
  return result;
}

void static Catalog.Resource.ImageCuratedPrompts.All()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00800();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B0065C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedImageCuratedPromptsBase;
  *(void *)(v0 + 32) = sub_256AEEDDC();
  uint64_t v2 = sub_256A6E40C();
  sub_256B00620(v2);
  AssetBackedImageCuratedPromptsBase.init(configuration:)();
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v3 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v3, v4, v3, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AEEDDC()
{
  unint64_t result = qword_269F7CB60;
  if (!qword_269F7CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB60);
  }
  return result;
}

uint64_t static Catalog.Resource.ImageFilter.Conditioning()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for AssetBackedImageFilterBase;
  *(void *)(a1 + 32) = sub_256AEEEF0();
  uint64_t v1 = sub_256A6E40C();
  uint64_t v2 = sub_256B0083C(v1);
  strcpy((char *)(v2 + 32), "Conditioning");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  uint64_t v3 = sub_256B011C4(v2);
  uint64_t v4 = sub_256B00C38(v3);
  *(_OWORD *)(v4 + 104) = xmmword_256B78A30;
  uint64_t v5 = sub_256B01194(v4);
  uint64_t result = sub_256B008EC(v5, v6);
  *(void *)(result + 184) = &unk_2705F19B8;
  *(void *)(result + 192) = &unk_2705F1968;
  return result;
}

unint64_t sub_256AEEEF0()
{
  unint64_t result = qword_26B2B5040;
  if (!qword_26B2B5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5040);
  }
  return result;
}

uint64_t static Catalog.Resource.ImageFilter.Face2Word()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for AssetBackedImageFilterBase;
  *(void *)(a1 + 32) = sub_256AEEEF0();
  uint64_t v1 = sub_256A6E40C();
  uint64_t v2 = sub_256B0083C(v1);
  *(void *)(v2 + 32) = 0x726F573265636146;
  *(void *)(v2 + 40) = 0xE900000000000064;
  uint64_t v3 = sub_256B011C4(v2);
  uint64_t v4 = sub_256B00C38(v3);
  *(_OWORD *)(v4 + 104) = xmmword_256B78A30;
  uint64_t v5 = sub_256B01194(v4);
  uint64_t result = sub_256B008EC(v5, v6);
  *(void *)(result + 184) = &unk_2705F1AA8;
  *(void *)(result + 192) = &unk_2705F1A58;
  return result;
}

uint64_t static Catalog.Resource.ImageFilter.HolisticallyNestedEdgeDetector()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for AssetBackedImageFilterBase;
  *(void *)(a1 + 32) = sub_256AEEEF0();
  uint64_t v1 = sub_256A6E40C();
  uint64_t v2 = sub_256B0083C(v1);
  *(void *)(v2 + 32) = 0xD00000000000001ELL;
  *(void *)(v2 + 40) = 0x8000000256B4DCD0;
  uint64_t v3 = sub_256B011C4(v2);
  uint64_t v4 = sub_256B00C38(v3);
  *(_OWORD *)(v4 + 104) = xmmword_256B78A30;
  uint64_t v5 = sub_256B01194(v4);
  uint64_t result = sub_256B008EC(v5, v6 + 5);
  *(void *)(result + 184) = &unk_2705F1A30;
  *(void *)(result + 192) = &unk_2705F19E0;
  return result;
}

void static Catalog.Resource.ImageMagicCleanUp.GenerativeEditsMagicCleanUp()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B014E8();
  sub_256AFFDF0();
  sub_256AFFDC0();
  sub_256AFFFA8();
  sub_256B00764();
  sub_256B00058();
  sub_256B00524();
  *(void *)(v2 + 24) = &type metadata for AssetBackedImageMagicCleanUpBase;
  *(void *)(v2 + 32) = sub_256AEF200();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00620(v3);
  AssetBackedImageMagicCleanUpBase.init(configuration:)();
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00448();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v4 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v4, v5, v4, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AEF200()
{
  unint64_t result = qword_26B2B54F8;
  if (!qword_26B2B54F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B54F8);
  }
  return result;
}

uint64_t static Catalog.Resource.ImageScaler.GenerativePlaygroundsUpscaler()@<X0>(void *a1@<X8>)
{
  a1[3] = &type metadata for AssetBackedImageScalerBase;
  a1[4] = sub_256AEF32C();
  uint64_t v2 = (void *)sub_256A6E40C();
  *a1 = v2;
  v2[2] = 0x6163536567616D49;
  v2[3] = 0xEB0000000072656CLL;
  v2[4] = 0xD00000000000001DLL;
  v2[5] = 0x8000000256B4DDB0;
  uint64_t v3 = sub_256B011C4((uint64_t)v2);
  uint64_t v4 = sub_256B00C38(v3);
  *(_OWORD *)(v4 + 104) = xmmword_256B78A30;
  uint64_t v5 = sub_256B01194(v4);
  uint64_t result = sub_256B008EC(v5, v6 + 6);
  *(void *)(result + 184) = &unk_2705F1B40;
  *(void *)(result + 192) = &unk_2705F1AF0;
  return result;
}

unint64_t sub_256AEF32C()
{
  unint64_t result = qword_26B2B5058;
  if (!qword_26B2B5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5058);
  }
  return result;
}

#error "256AEF418: call analysis failed (funcsize=61)"

#error "256AEF538: call analysis failed (funcsize=61)"

#error "256AEF658: call analysis failed (funcsize=61)"

#error "256AEF778: call analysis failed (funcsize=61)"

#error "256AEF898: call analysis failed (funcsize=61)"

#error "256AEF9B8: call analysis failed (funcsize=61)"

void static Catalog.Resource.LLM.Model.SummarizationTextSummarizerBase()()
{
  sub_256AFFBF8();
  sub_256AFFE7C();
  sub_256B015C4();
  sub_256AFFB7C();
  sub_256B00120();
  sub_256AFFC50();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for LLMModelBase;
  *(void *)(v0 + 32) = sub_256A77B10();
  uint64_t v2 = sub_256A6EF9C();
  sub_256B00B90(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B00B20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.AnswerSynthesisServer()()
{
  sub_256AFFBF8();
  sub_256B0178C();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B0159C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00770();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AEFC74()
{
  unint64_t result = qword_26B2B5AE8;
  if (!qword_26B2B5AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5AE8);
  }
  return result;
}

void static Catalog.Resource.LLM.ServerConfiguration.InstructServerBase()()
{
  sub_256AFFBF8();
  sub_256B008AC();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B00FE0();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00988();
    sub_256B00B20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.NLRouterBase()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B01170();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256B00AF0();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.OpenEndedSchema()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256B00FB8();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.OpenEndedTone()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256B00F90();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256B00B00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneBase()()
{
  sub_256AFFBF8();
  sub_256B01364();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B0159C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneQueryResponse()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B01418();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00928();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneV2()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256B00F90();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256B00A54();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B01418();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00928();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256B011F4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationBase()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00F00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B016C0();
    sub_256B011F4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B01728();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00948();
    sub_256B01200();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01270();
    sub_256B00F40();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV3()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B0157C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B00BC8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00928();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.Planner()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256B011E0();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00298();
    sub_256B00F30();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PlannerV2()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256B01330();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00F00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PlannerV3()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256B01330();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00F00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.PrivateCloudResearchAdapter()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01680();
    sub_256B01210();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ResponseGeneration()()
{
  sub_256AFFBF8();
  sub_256B008AC();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B00FE0();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV2()()
{
  sub_256AFFBF8();
  sub_256B013C8();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B00EB0();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV3()()
{
  sub_256AFFBF8();
  sub_256B013C8();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B00EB0();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.SearchQueryUnderstandingServer()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DCC();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerBulletsTransform()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B00E9C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerConciseTone()()
{
  sub_256AFFBF8();
  sub_256B01364();
  sub_256AFFDF0();
  sub_256B01020();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01750();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerFriendlyTone()()
{
  sub_256AFFBF8();
  sub_256B008AC();
  sub_256AFFDF0();
  sub_256B00E9C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256B009D0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005E0();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMagicRewrite()()
{
  sub_256AFFBF8();
  sub_256B008AC();
  sub_256AFFDF0();
  sub_256B00E9C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256B009D0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005E0();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B012E4();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DCC();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B01290();
    sub_256B00F20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyQA()()
{
  sub_256AFFBF8();
  sub_256B01364();
  sub_256AFFDF0();
  sub_256B01860();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01750();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005E0();
    sub_256B00A54();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerProfessionalTone()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B00E9C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerProofreadingReview()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerTablesTransform()()
{
  sub_256AFFBF8();
  sub_256B0178C();
  sub_256AFFDF0();
  sub_256B01020();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01530();
  sub_256B0131C();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00770();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerTakeawaysTransform()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00820();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.ServerTextSummarizer()()
{
  sub_256AFFBF8();
  sub_256B013C8();
  sub_256AFFDF0();
  sub_256B01020();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256AFFF48();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()()
{
  sub_256AFFBF8();
  sub_256AFFE48();
  sub_256AFFDF0();
  sub_256B008C4();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B00518();
  sub_256AFFD84();
  sub_256AFFD68();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256B00B00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.LLM.ServerConfiguration.VisualIntelligence()()
{
  sub_256AFFBF8();
  sub_256B008AC();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFCA0();
  sub_256B00FE0();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedServerConfigurationBase;
  *(void *)(v0 + 32) = sub_256AEFC74();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFCD4(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.ModelConfigurationReplacement.All()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B00800();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256AFFF48();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for AssetBackedModelConfigurationReplacementBase;
  *(void *)(v2 + 32) = sub_256AF2BF4();
  uint64_t v3 = sub_256A6E40C();
  sub_256B00620(v3);
  AssetBackedModelConfigurationReplacementBase.init(configuration:)();
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B007B0();
    sub_256B011F4();
    sub_256AFFB60();
    uint64_t v4 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v4, v5, v4, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AF2BF4()
{
  unint64_t result = qword_26B2B54C0;
  if (!qword_26B2B54C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B54C0);
  }
  return result;
}

void static Catalog.Resource.TokenInputDenyList.CodeIntelligenceBaseInputDenyList()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B01764();
  sub_256AFFDC0();
  sub_256AFFFA8();
  sub_256B014F4();
  sub_256B00764();
  sub_256B00058();
  sub_256B00524();
  *(void *)(v2 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v2 + 32) = sub_256AF2D68();
  uint64_t v3 = sub_256A6E40C();
  sub_256AFFD3C(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00074();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AF2D68()
{
  unint64_t result = qword_26B2B5090;
  if (!qword_26B2B5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5090);
  }
  return result;
}

void static Catalog.Resource.TokenInputDenyList.GenerativeAssistantCompositionInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B013F0();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00B70();
    sub_256B00F20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.GenerativeAssistantKnowledgeFallbackInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B01824();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B012B0();
    sub_256B00F40();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.GenerativeAssistantKnowledgeInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00634();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.GenerativeAssistantMediaQAInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E38();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.GenerativeAssistantVisualIntelligenceCameraInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B017FC();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00684();
    sub_256B3FB70();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplyLongFormBasicInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B017AC();
  sub_256B012F8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256B00F50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplyLongFormQAInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E60();
  sub_256B00CA4();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00468();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B003D0();
  sub_256B00F78();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.MailReplySnippetInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B017C0();
  sub_256B009BC();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.MessagesReplyBaseInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B01810();
  sub_256B009BC();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E38();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B01240();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00C24();
  sub_256B00F78();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B017E8();
  sub_256B00BB0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList()()
{
  sub_256AFFBF8();
  sub_256B0138C();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B009F0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00560();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitBaseInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B01404();
  sub_256B009BC();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList()()
{
  sub_256AFFBF8();
  sub_256B013B4();
  sub_256AFFDF0();
  sub_256B0160C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01488();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00770();
    sub_256B01220();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryOnDemandInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00C24();
  sub_256B00BC8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DCC();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryProactiveInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B017D4();
  sub_256B00BC8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DCC();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList()()
{
  sub_256AFFBF8();
  sub_256B013B4();
  sub_256AFFDF0();
  sub_256B0160C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01488();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00770();
    sub_256B01220();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E4C();
  sub_256B00F78();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00634();
  sub_256B00BB0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.VisualGenerationBaseInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B01404();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00074();
    sub_256B00A54();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.VisualIntelligenceInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B003D0();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00B00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00634();
  sub_256B009A8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00488();
    sub_256B00A44();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsComposeInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E60();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005E0();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsComposeRecentsSummariesInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B0184C();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B012B0();
    sub_256B00F40();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsConciseToneInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B003D0();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00988();
    sub_256B00B20();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList()()
{
  sub_256AFFBF8();
  sub_256B0138C();
  sub_256B01350();
  sub_256AFFDC0();
  sub_256AFFFA8();
  sub_256AFFBE0();
  sub_256B009F0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00908();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList()()
{
  sub_256AFFBF8();
  sub_256B0138C();
  sub_256B01350();
  sub_256AFFDC0();
  sub_256AFFFA8();
  sub_256AFFBE0();
  sub_256B009F0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00908();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedSchemaInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E74();
  sub_256B009A8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00488();
    sub_256B00A44();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneBaseInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E4C();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B00280();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B01240();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList()()
{
  sub_256AFFBF8();
  sub_256B013B4();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01488();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00298();
    sub_256B011F4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneQueryResponseInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B003D0();
  sub_256B012E4();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00634();
  sub_256B009A8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00488();
    sub_256B00A44();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B013F0();
  sub_256B0173C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00B00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsTablesTransformInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B00E74();
  sub_256B01700();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B007D0();
    sub_256B0158C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF98();
  sub_256B013F0();
  sub_256B0173C();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B00400();
  sub_256AFFF08();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenInputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF2D68();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD3C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00B00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B01764();
  sub_256AFFDC0();
  sub_256AFFFA8();
  sub_256B014F4();
  sub_256B00764();
  sub_256B00058();
  sub_256B00524();
  *(void *)(v2 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v2 + 32) = sub_256AF5A4C();
  uint64_t v3 = sub_256A6E40C();
  sub_256AFFD1C(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00468();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

unint64_t sub_256AF5A4C()
{
  unint64_t result = qword_26B2B50A8;
  if (!qword_26B2B50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B50A8);
  }
  return result;
}

void static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantCompositionOutputDenyList()()
{
  sub_256AFFBF8();
  uint64_t v2 = v1;
  sub_256B017A0();
  sub_256A5267C();
  sub_256AFFB7C();
  sub_256AFFCA0();
  sub_256B0130C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v2 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v2 + 32) = sub_256AF5A4C();
  uint64_t v3 = sub_256A6E40C();
  sub_256AFFD1C(v3, v4, v5, v6, v7, v8);
  if (v0)
  {
    sub_256A6D92C(v2);
    sub_256B00B30();
    sub_256B0155C();
    sub_256AFFB60();
    uint64_t v9 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v9, v10, v9, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantKnowledgeFallbackOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B01824();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00948();
    sub_256B00F40();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantKnowledgeOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00634();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00968();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E38();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00600();
    sub_256B000B4();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B017FC();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00DEC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B017AC();
  sub_256B012F8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00F50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E60();
  sub_256B00CA4();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00770();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256B013A0();
  sub_256AFFDF0();
  sub_256B00038();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01488();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MailReplySnippetOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B017C0();
  sub_256B009BC();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.MessagesReplyBaseOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B01810();
  sub_256B009BC();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E38();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005E0();
    sub_256B01240();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00C24();
  sub_256B012D0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00C24();
  sub_256B00CA4();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00770();
    sub_256B00048();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B017E8();
  sub_256B00BB0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B003D0();
  sub_256B012F8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001C4();
    sub_256B00F50();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitBaseOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B01404();
  sub_256B009BC();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002D8();
    sub_256B00674();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00C24();
  sub_256B00BC8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B013DC();
  sub_256B01714();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B017D4();
  sub_256B00BC8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005C0();
    sub_256B00A34();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B013DC();
  sub_256B01714();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00094();
    sub_256B00A24();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E4C();
  sub_256B012D0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B002B8();
    sub_256B00530();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00634();
  sub_256B00BB0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00540();
    sub_256B00B10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.VisualIntelligenceOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B003D0();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B00B00();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00634();
  sub_256B009A8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00A44();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsComposeOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E60();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00074();
    sub_256B004DC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B0184C();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00948();
    sub_256B00F40();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256B01378();
  sub_256B01350();
  sub_256AFFDC0();
  sub_256AFFFA8();
  sub_256AFFBE0();
  sub_256B009F0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00908();
    sub_256AFFE6C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256B013A0();
  sub_256AFFDF0();
  sub_256B00E88();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01488();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00204();
    sub_256B01230();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256B013A0();
  sub_256AFFDF0();
  sub_256B00E88();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B01488();
  sub_256AFFF48();
  sub_256AFFC90();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00204();
    sub_256B01230();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E74();
  sub_256B009A8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00A44();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E4C();
  sub_256AFFDC0();
  sub_256AFFCA0();
  sub_256B0040C();
  sub_256AFFCB8();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B005E0();
    sub_256B01240();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B013DC();
  sub_256AFFDC0();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B007D0();
    sub_256B00F10();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B003D0();
  sub_256B012E4();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00968();
    sub_256B004EC();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00634();
  sub_256B009A8();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B004A8();
    sub_256B00A44();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256B01378();
  sub_256AFFDF0();
  sub_256B00E88();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B009F0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B01230();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256AFFF58();
  sub_256B00E74();
  sub_256B01700();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B005B4();
  sub_256AFFEC0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B00488();
    sub_256B0158C();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

void static Catalog.Resource.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList()()
{
  sub_256AFFBF8();
  sub_256B01378();
  sub_256AFFDF0();
  sub_256B00E88();
  sub_256AFFB7C();
  sub_256AFFBE0();
  sub_256B009F0();
  sub_256AFFB8C();
  sub_256AFFC44();
  *(void *)(v0 + 24) = &type metadata for AssetBackedTokenOutputDenyListBase;
  *(void *)(v0 + 32) = sub_256AF5A4C();
  uint64_t v2 = sub_256A6E40C();
  sub_256AFFD1C(v2, v3, v4, v5, v6, v7);
  if (v1)
  {
    sub_256A6D92C(v0);
    sub_256B001E4();
    sub_256B01230();
    sub_256AFFB60();
    uint64_t v8 = sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
    sub_256AFFBB4(v8, v9, v8, MEMORY[0x263F8E238], MEMORY[0x263F8E248]);
    sub_256AFFBA8();
    sub_256AFFB14();
    __break(1u);
  }
  else
  {
    sub_256AFFBCC();
  }
}

uint64_t static Catalog.Resource.fetchAllResources()(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  sub_256A39D2C((uint64_t *)&unk_26B2B5D68);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_256B62A00;
  static Catalog.Resource.LLM.Adapter.ADMPeopleGrounding()(v1250);
  uint64_t v2 = v1250[3];
  sub_256AFFB44(v1250);
  *(void *)(v1 + 56) = v2;
  sub_256AFFC0C();
  *(void *)(v1 + 64) = v3;
  sub_256A49D7C((uint64_t *)(v1 + 32));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v5 = v4();
  static Catalog.Resource.LLM.Adapter.ADMPromptRewriting()(v1249, v5);
  uint64_t v6 = v1249[3];
  sub_256AFFB44(v1249);
  *(void *)(v1 + 96) = v6;
  sub_256AFFC0C();
  *(void *)(v1 + 104) = v7;
  sub_256A49D7C((uint64_t *)(v1 + 72));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v9 = v8();
  static Catalog.Resource.LLM.Model.AFMTextInstruct300MBase()(v1248, v9);
  uint64_t v10 = v1248[3];
  sub_256AFFB44(v1248);
  *(void *)(v1 + 136) = v10;
  sub_256AFFC0C();
  *(void *)(v1 + 144) = v11;
  sub_256A49D7C((uint64_t *)(v1 + 112));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v13 = v12();
  static Catalog.Resource.Tokenizer.AFMTextInstruct300MTokenizer()(v1247, v13);
  uint64_t v14 = v1247[3];
  sub_256AFFB44(v1247);
  *(void *)(v1 + 176) = v14;
  sub_256AFFC0C();
  *(void *)(v1 + 184) = v15;
  sub_256A49D7C((uint64_t *)(v1 + 152));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v17 = v16();
  static Catalog.Resource.LLM.Model.AFMTextInstruct3BBase()(v1246, v17);
  uint64_t v18 = v1246[3];
  sub_256AFFB44(v1246);
  *(void *)(v1 + 216) = v18;
  sub_256AFFC0C();
  *(void *)(v1 + 224) = v19;
  sub_256A49D7C((uint64_t *)(v1 + 192));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v21 = v20();
  static Catalog.Resource.Tokenizer.AFMTextInstructEnglish49k()(v1245, v21);
  uint64_t v22 = v1245[3];
  sub_256AFFB44(v1245);
  *(void *)(v1 + 256) = v22;
  sub_256AFFC0C();
  *(void *)(v1 + 264) = v23;
  sub_256A49D7C((uint64_t *)(v1 + 232));
  sub_256AFFB34();
  sub_256AFFB00();
  v24();
  static Catalog.Resource.DisabledUseCaseList.All()();
  uint64_t v25 = v1244[3];
  sub_256AFFB44(v1244);
  *(void *)(v1 + 296) = v25;
  sub_256AFFC0C();
  *(void *)(v1 + 304) = v26;
  sub_256A49D7C((uint64_t *)(v1 + 272));
  sub_256AFFB34();
  sub_256AFFB00();
  v27();
  static Catalog.Resource.GenerativeFunctionOverrides.All()();
  uint64_t v28 = v1243[3];
  sub_256AFFB44(v1243);
  *(void *)(v1 + 336) = v28;
  sub_256AFFC0C();
  *(void *)(v1 + 344) = v29;
  sub_256A49D7C((uint64_t *)(v1 + 312));
  sub_256AFFB34();
  sub_256AFFB00();
  v30();
  static Catalog.Resource.ModelConfigurationReplacement.All()();
  uint64_t v31 = v1242[3];
  sub_256AFFB44(v1242);
  *(void *)(v1 + 376) = v31;
  sub_256AFFC0C();
  *(void *)(v1 + 384) = v32;
  sub_256A49D7C((uint64_t *)(v1 + 352));
  sub_256AFFB34();
  sub_256AFFB00();
  v33();
  static Catalog.Resource.ImageCuratedPrompts.All()();
  uint64_t v34 = v1241[3];
  sub_256AFFB44(v1241);
  *(void *)(v1 + 416) = v34;
  sub_256AFFC0C();
  *(void *)(v1 + 424) = v35;
  sub_256A49D7C((uint64_t *)(v1 + 392));
  sub_256AFFB34();
  sub_256AFFB00();
  v36();
  static Catalog.Resource.Diffusion.Adapter.Animation()();
  uint64_t v37 = v1240[3];
  sub_256AFFB44(v1240);
  *(void *)(v1 + 456) = v37;
  sub_256AFFC0C();
  *(void *)(v1 + 464) = v38;
  sub_256A49D7C((uint64_t *)(v1 + 432));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v40 = v39();
  static Catalog.Resource.LLM.DraftModel.AnswerSynthesis()(v1239, v40);
  uint64_t v41 = v1239[3];
  sub_256AFFB44(v1239);
  *(void *)(v1 + 496) = v41;
  sub_256AFFC0C();
  *(void *)(v1 + 504) = v42;
  sub_256A49D7C((uint64_t *)(v1 + 472));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v44 = v43();
  static Catalog.Resource.LLM.Adapter.AnswerSynthesis()(v1238, v44);
  uint64_t v45 = v1238[3];
  sub_256AFFB44(v1238);
  *(void *)(v1 + 536) = v45;
  sub_256AFFC0C();
  *(void *)(v1 + 544) = v46;
  sub_256A49D7C((uint64_t *)(v1 + 512));
  sub_256AFFB34();
  sub_256AFFB00();
  v47();
  static Catalog.Resource.LLM.DraftModel.AnswerSynthesisServer()();
  uint64_t v48 = v1237[3];
  sub_256AFFB44(v1237);
  *(void *)(v1 + 576) = v48;
  sub_256AFFC0C();
  *(void *)(v1 + 584) = v49;
  sub_256A49D7C((uint64_t *)(v1 + 552));
  sub_256AFFB34();
  sub_256AFFB00();
  v50();
  static Catalog.Resource.LLM.Adapter.AnswerSynthesisServer()();
  uint64_t v51 = v1236[3];
  sub_256AFFB44(v1236);
  *(void *)(v1 + 616) = v51;
  sub_256AFFE5C();
  *(void *)(v1 + 624) = v52;
  sub_256A49D7C((uint64_t *)(v1 + 592));
  sub_256AFFB34();
  sub_256AFFB00();
  v53();
  static Catalog.Resource.LLM.ServerConfiguration.AnswerSynthesisServer()();
  uint64_t v54 = v1235[3];
  sub_256AFFB44(v1235);
  *(void *)(v1 + 656) = v54;
  sub_256AFFC0C();
  *(void *)(v1 + 664) = v55;
  sub_256A49D7C((uint64_t *)(v1 + 632));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v57 = v56();
  static Catalog.Resource.LLM.DraftModel.AutonamingMessages()(v1234, v57);
  uint64_t v58 = v1234[3];
  sub_256AFFB44(v1234);
  *(void *)(v1 + 696) = v58;
  sub_256AFFC0C();
  *(void *)(v1 + 704) = v59;
  sub_256A49D7C((uint64_t *)(v1 + 672));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v61 = v60();
  static Catalog.Resource.LLM.Adapter.AutonamingMessages()(v1233, v61);
  uint64_t v62 = v1233[3];
  sub_256AFFB44(v1233);
  *(void *)(v1 + 736) = v62;
  sub_256AFFC0C();
  *(void *)(v1 + 744) = v63;
  sub_256A49D7C((uint64_t *)(v1 + 712));
  sub_256AFFB34();
  sub_256AFFB00();
  v64();
  static Catalog.Resource.LLM.Adapter.BaseAdapter()();
  uint64_t v65 = v1232[3];
  sub_256AFFB44(v1232);
  *(void *)(v1 + 776) = v65;
  sub_256AFFE5C();
  *(void *)(v1 + 784) = v66;
  sub_256A49D7C((uint64_t *)(v1 + 752));
  sub_256AFFB34();
  sub_256AFFB00();
  v67();
  static Catalog.Resource.LLM.Model.ChatGPT()();
  uint64_t v68 = v1231[3];
  sub_256AFFB44(v1231);
  *(void *)(v1 + 816) = v68;
  sub_256AFFE5C();
  *(void *)(v1 + 824) = v69;
  sub_256A49D7C((uint64_t *)(v1 + 792));
  sub_256AFFB34();
  sub_256AFFB00();
  v70();
  static Catalog.Resource.Tokenizer.ChatGPTTokenizer()();
  uint64_t v71 = v1230[3];
  sub_256AFFB44(v1230);
  *(void *)(v1 + 856) = v71;
  sub_256AFFC0C();
  *(void *)(v1 + 864) = v72;
  sub_256A49D7C((uint64_t *)(v1 + 832));
  sub_256AFFB34();
  sub_256AFFB00();
  v73();
  static Catalog.Resource.TokenInputDenyList.CodeIntelligenceBaseInputDenyList()();
  uint64_t v74 = v1229[3];
  sub_256AFFB44(v1229);
  *(void *)(v1 + 896) = v74;
  sub_256AFFC0C();
  *(void *)(v1 + 904) = v75;
  sub_256A49D7C((uint64_t *)(v1 + 872));
  sub_256AFFB34();
  sub_256AFFB00();
  v76();
  static Catalog.Resource.TokenOutputDenyList.CodeIntelligenceBaseOutputDenyList()();
  uint64_t v77 = v1228[3];
  sub_256AFFB44(v1228);
  *(void *)(v1 + 936) = v77;
  sub_256AFFC0C();
  *(void *)(v1 + 944) = v78;
  sub_256A49D7C((uint64_t *)(v1 + 912));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v80 = v79();
  static Catalog.Resource.LLM.DraftModel.CodeLM()(v1227, v80);
  uint64_t v81 = v1227[3];
  sub_256AFFB44(v1227);
  *(void *)(v1 + 976) = v81;
  sub_256AFFC0C();
  *(void *)(v1 + 984) = v82;
  sub_256A49D7C((uint64_t *)(v1 + 952));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v84 = v83();
  static Catalog.Resource.LLM.Model.CodeLM()(v1226, v84);
  uint64_t v85 = v1226[3];
  sub_256AFFB44(v1226);
  *(void *)(v1 + 1016) = v85;
  sub_256AFFC0C();
  *(void *)(v1 + 1024) = v86;
  sub_256A49D7C((uint64_t *)(v1 + 992));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v88 = v87();
  static Catalog.Resource.LLM.Model.CodeLMExperimental()(v1225, v88);
  uint64_t v89 = v1225[3];
  sub_256AFFB44(v1225);
  *(void *)(v1 + 1056) = v89;
  sub_256AFFC0C();
  *(void *)(v1 + 1064) = v90;
  sub_256A49D7C((uint64_t *)(v1 + 1032));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v92 = v91();
  static Catalog.Resource.LLM.DraftModel.CodeLMLargeV1()(v1224, v92);
  uint64_t v93 = v1224[3];
  sub_256AFFB44(v1224);
  *(void *)(v1 + 1096) = v93;
  sub_256AFFC0C();
  *(void *)(v1 + 1104) = v94;
  sub_256A49D7C((uint64_t *)(v1 + 1072));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v96 = v95();
  static Catalog.Resource.LLM.Model.CodeLMLargeV1()(v1223, v96);
  uint64_t v97 = v1223[3];
  sub_256AFFB44(v1223);
  *(void *)(v1 + 1136) = v97;
  sub_256AFFC0C();
  *(void *)(v1 + 1144) = v98;
  sub_256A49D7C((uint64_t *)(v1 + 1112));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v100 = v99();
  static Catalog.Resource.Tokenizer.CodeLMLargeV1Tokenizer()(v1222, v100);
  uint64_t v101 = v1222[3];
  sub_256AFFB44(v1222);
  *(void *)(v1 + 1176) = v101;
  sub_256AFFC0C();
  *(void *)(v1 + 1184) = v102;
  sub_256A49D7C((uint64_t *)(v1 + 1152));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v104 = v103();
  static Catalog.Resource.LLM.DraftModel.CodeLMLargeV2()(v1221, v104);
  uint64_t v105 = v1221[3];
  sub_256AFFB44(v1221);
  *(void *)(v1 + 1216) = v105;
  sub_256AFFC0C();
  *(void *)(v1 + 1224) = v106;
  sub_256A49D7C((uint64_t *)(v1 + 1192));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v108 = v107();
  static Catalog.Resource.LLM.Model.CodeLMLargeV2()(v1220, v108);
  uint64_t v109 = v1220[3];
  sub_256AFFB44(v1220);
  *(void *)(v1 + 1256) = v109;
  sub_256AFFC0C();
  *(void *)(v1 + 1264) = v110;
  sub_256A49D7C((uint64_t *)(v1 + 1232));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v112 = v111();
  static Catalog.Resource.Tokenizer.CodeLMLargeV2Tokenizer()(v1219, v112);
  uint64_t v113 = v1219[3];
  sub_256AFFB44(v1219);
  *(void *)(v1 + 1296) = v113;
  sub_256AFFC0C();
  *(void *)(v1 + 1304) = v114;
  sub_256A49D7C((uint64_t *)(v1 + 1272));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v116 = v115();
  static Catalog.Resource.LLM.DraftModel.CodeLMLargeV3()(v1218, v116);
  uint64_t v117 = v1218[3];
  sub_256AFFB44(v1218);
  *(void *)(v1 + 1336) = v117;
  sub_256AFFC0C();
  *(void *)(v1 + 1344) = v118;
  sub_256A49D7C((uint64_t *)(v1 + 1312));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v120 = v119();
  static Catalog.Resource.LLM.Model.CodeLMLargeV3()(v1217, v120);
  uint64_t v121 = v1217[3];
  sub_256AFFB44(v1217);
  *(void *)(v1 + 1376) = v121;
  sub_256AFFC0C();
  *(void *)(v1 + 1384) = v122;
  sub_256A49D7C((uint64_t *)(v1 + 1352));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v124 = v123();
  static Catalog.Resource.Tokenizer.CodeLMLargeV3Tokenizer()(v1216, v124);
  uint64_t v125 = v1216[3];
  sub_256AFFB44(v1216);
  *(void *)(v1 + 1416) = v125;
  sub_256AFFC0C();
  *(void *)(v1 + 1424) = v126;
  sub_256A49D7C((uint64_t *)(v1 + 1392));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v128 = v127();
  static Catalog.Resource.LLM.Model.CodeLMSafetyGuardrail()(v1215, v128);
  uint64_t v129 = v1215[3];
  sub_256AFFB44(v1215);
  *(void *)(v1 + 1456) = v129;
  sub_256AFFC0C();
  *(void *)(v1 + 1464) = v130;
  sub_256A49D7C((uint64_t *)(v1 + 1432));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v132 = v131();
  static Catalog.Resource.Tokenizer.CodeLMSafetyGuardrailTokenizer()(v1214, v132);
  uint64_t v133 = v1214[3];
  sub_256AFFB44(v1214);
  *(void *)(v1 + 1496) = v133;
  sub_256AFFC0C();
  *(void *)(v1 + 1504) = v134;
  sub_256A49D7C((uint64_t *)(v1 + 1472));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v136 = v135();
  static Catalog.Resource.LLM.DraftModel.CodeLMSmallV1()(v1213, v136);
  uint64_t v137 = v1213[3];
  sub_256AFFB44(v1213);
  *(void *)(v1 + 1536) = v137;
  sub_256AFFC0C();
  *(void *)(v1 + 1544) = v138;
  sub_256A49D7C((uint64_t *)(v1 + 1512));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v140 = v139();
  static Catalog.Resource.LLM.Model.CodeLMSmallV1()(v1212, v140);
  uint64_t v141 = v1212[3];
  sub_256AFFB44(v1212);
  *(void *)(v1 + 1576) = v141;
  sub_256AFFC0C();
  *(void *)(v1 + 1584) = v142;
  sub_256A49D7C((uint64_t *)(v1 + 1552));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v144 = v143();
  static Catalog.Resource.Tokenizer.CodeLMSmallV1Tokenizer()(v1211, v144);
  uint64_t v145 = v1211[3];
  sub_256AFFB44(v1211);
  *(void *)(v1 + 1616) = v145;
  sub_256AFFC0C();
  *(void *)(v1 + 1624) = v146;
  sub_256A49D7C((uint64_t *)(v1 + 1592));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v148 = v147();
  static Catalog.Resource.LLM.DraftModel.CodeLMSmallV2()(v1210, v148);
  uint64_t v149 = v1210[3];
  sub_256AFFB44(v1210);
  *(void *)(v1 + 1656) = v149;
  sub_256AFFC0C();
  *(void *)(v1 + 1664) = v150;
  sub_256A49D7C((uint64_t *)(v1 + 1632));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v152 = v151();
  static Catalog.Resource.LLM.Model.CodeLMSmallV2()(v1209, v152);
  uint64_t v153 = v1209[3];
  sub_256AFFB44(v1209);
  *(void *)(v1 + 1696) = v153;
  sub_256AFFC0C();
  *(void *)(v1 + 1704) = v154;
  sub_256A49D7C((uint64_t *)(v1 + 1672));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v156 = v155();
  static Catalog.Resource.Tokenizer.CodeLMSmallV2Tokenizer()(v1208, v156);
  uint64_t v157 = v1208[3];
  sub_256AFFB44(v1208);
  *(void *)(v1 + 1736) = v157;
  sub_256AFFC0C();
  *(void *)(v1 + 1744) = v158;
  sub_256A49D7C((uint64_t *)(v1 + 1712));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v160 = v159();
  static Catalog.Resource.LLM.DraftModel.CodeLMSmallV3()(v1207, v160);
  uint64_t v161 = v1207[3];
  sub_256AFFB44(v1207);
  *(void *)(v1 + 1776) = v161;
  sub_256AFFC0C();
  *(void *)(v1 + 1784) = v162;
  sub_256A49D7C((uint64_t *)(v1 + 1752));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v164 = v163();
  static Catalog.Resource.LLM.Model.CodeLMSmallV3()(v1206, v164);
  uint64_t v165 = v1206[3];
  sub_256AFFB44(v1206);
  *(void *)(v1 + 1816) = v165;
  sub_256AFFC0C();
  *(void *)(v1 + 1824) = v166;
  sub_256A49D7C((uint64_t *)(v1 + 1792));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v168 = v167();
  static Catalog.Resource.Tokenizer.CodeLMSmallV3Tokenizer()(v1205, v168);
  uint64_t v169 = v1205[3];
  sub_256AFFB44(v1205);
  *(void *)(v1 + 1856) = v169;
  sub_256AFFC0C();
  *(void *)(v1 + 1864) = v170;
  sub_256A49D7C((uint64_t *)(v1 + 1832));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v172 = v171();
  static Catalog.Resource.Tokenizer.CodeLMTokenizer()(v1204, v172);
  uint64_t v173 = v1204[3];
  sub_256AFFB44(v1204);
  *(void *)(v1 + 1896) = v173;
  sub_256AFFC0C();
  *(void *)(v1 + 1904) = v174;
  sub_256A49D7C((uint64_t *)(v1 + 1872));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v176 = v175();
  static Catalog.Resource.Tokenizer.CodeLMTokenizerExperimental()(v1203, v176);
  uint64_t v177 = v1203[3];
  sub_256AFFB44(v1203);
  *(void *)(v1 + 1936) = v177;
  sub_256AFFC0C();
  *(void *)(v1 + 1944) = v178;
  sub_256A49D7C((uint64_t *)(v1 + 1912));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v180 = v179();
  static Catalog.Resource.Tokenizer.CodeLMTokenizerV2()(v1202, v180);
  uint64_t v181 = v1202[3];
  sub_256AFFB44(v1202);
  *(void *)(v1 + 1976) = v181;
  sub_256AFFC0C();
  *(void *)(v1 + 1984) = v182;
  sub_256A49D7C((uint64_t *)(v1 + 1952));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v184 = v183();
  static Catalog.Resource.Tokenizer.CodeLMTokenizerV3()(v1201, v184);
  uint64_t v185 = v1201[3];
  sub_256AFFB44(v1201);
  *(void *)(v1 + 2016) = v185;
  sub_256AFFC0C();
  *(void *)(v1 + 2024) = v186;
  sub_256A49D7C((uint64_t *)(v1 + 1992));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v188 = v187();
  static Catalog.Resource.Tokenizer.CodeLMTokenizerV4()(v1200, v188);
  uint64_t v189 = v1200[3];
  sub_256AFFB44(v1200);
  *(void *)(v1 + 2056) = v189;
  sub_256AFFC0C();
  *(void *)(v1 + 2064) = v190;
  sub_256A49D7C((uint64_t *)(v1 + 2032));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v192 = v191();
  static Catalog.Resource.LLM.DraftModel.CodeLMV1ANE3B()(v1199, v192);
  uint64_t v193 = v1199[3];
  sub_256AFFB44(v1199);
  *(void *)(v1 + 2096) = v193;
  sub_256AFFC0C();
  *(void *)(v1 + 2104) = v194;
  sub_256A49D7C((uint64_t *)(v1 + 2072));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v196 = v195();
  static Catalog.Resource.LLM.Model.CodeLMV1ANE3B()(v1198, v196);
  uint64_t v197 = v1198[3];
  sub_256AFFB44(v1198);
  *(void *)(v1 + 2136) = v197;
  sub_256AFFC0C();
  *(void *)(v1 + 2144) = v198;
  sub_256A49D7C((uint64_t *)(v1 + 2112));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v200 = v199();
  static Catalog.Resource.Tokenizer.CodeLMV1ANE3BTokenizer()(v1197, v200);
  uint64_t v201 = v1197[3];
  sub_256AFFB44(v1197);
  *(void *)(v1 + 2176) = v201;
  sub_256AFFC0C();
  *(void *)(v1 + 2184) = v202;
  sub_256A49D7C((uint64_t *)(v1 + 2152));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v204 = v203();
  static Catalog.Resource.LLM.Model.CodeLMV2()(v1196, v204);
  uint64_t v205 = v1196[3];
  sub_256AFFB44(v1196);
  *(void *)(v1 + 2216) = v205;
  sub_256AFFC0C();
  *(void *)(v1 + 2224) = v206;
  sub_256A49D7C((uint64_t *)(v1 + 2192));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v208 = v207();
  static Catalog.Resource.LLM.Model.CodeLMV3()(v1195, v208);
  uint64_t v209 = v1195[3];
  sub_256AFFB44(v1195);
  *(void *)(v1 + 2256) = v209;
  sub_256AFFC0C();
  *(void *)(v1 + 2264) = v210;
  sub_256A49D7C((uint64_t *)(v1 + 2232));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v212 = v211();
  static Catalog.Resource.LLM.Model.CodeLMV4()(v1194, v212);
  uint64_t v213 = v1194[3];
  sub_256AFFB44(v1194);
  *(void *)(v1 + 2296) = v213;
  sub_256AFFC0C();
  *(void *)(v1 + 2304) = v214;
  sub_256A49D7C((uint64_t *)(v1 + 2272));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v216 = v215();
  static Catalog.Resource.LLM.Model.CodeSafetyGuardrail()(v1193, v216);
  uint64_t v217 = v1193[3];
  sub_256AFFB44(v1193);
  *(void *)(v1 + 2336) = v217;
  sub_256AFFC0C();
  *(void *)(v1 + 2344) = v218;
  sub_256A49D7C((uint64_t *)(v1 + 2312));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v220 = v219();
  static Catalog.Resource.Tokenizer.CodeSafetyGuardrailTokenizer()(v1192, v220);
  uint64_t v221 = v1192[3];
  sub_256AFFB44(v1192);
  *(void *)(v1 + 2376) = v221;
  sub_256AFFC0C();
  *(void *)(v1 + 2384) = v222;
  sub_256A49D7C((uint64_t *)(v1 + 2352));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v224 = v223();
  static Catalog.Resource.LLM.DraftModel.ConciseTone()(v1191, v224);
  uint64_t v225 = v1191[3];
  sub_256AFFB44(v1191);
  *(void *)(v1 + 2416) = v225;
  sub_256AFFC0C();
  *(void *)(v1 + 2424) = v226;
  sub_256A49D7C((uint64_t *)(v1 + 2392));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v228 = v227();
  static Catalog.Resource.LLM.Adapter.ConciseTone()(v1190, v228);
  uint64_t v229 = v1190[3];
  sub_256AFFB44(v1190);
  *(void *)(v1 + 2456) = v229;
  sub_256AFFC0C();
  *(void *)(v1 + 2464) = v230;
  sub_256A49D7C((uint64_t *)(v1 + 2432));
  sub_256AFFB34();
  sub_256AFFB00();
  v231();
  static Catalog.Resource.ImageFilter.Conditioning()((uint64_t)v1189);
  uint64_t v232 = v1189[3];
  sub_256AFFB44(v1189);
  *(void *)(v1 + 2496) = v232;
  sub_256AFFC0C();
  *(void *)(v1 + 2504) = v233;
  sub_256A49D7C((uint64_t *)(v1 + 2472));
  sub_256AFFB34();
  sub_256AFFB00();
  v234();
  static Catalog.Resource.Diffusion.Adapter.Emoji()();
  uint64_t v235 = v1188[3];
  sub_256AFFB44(v1188);
  *(void *)(v1 + 2536) = v235;
  sub_256AFFC0C();
  *(void *)(v1 + 2544) = v236;
  sub_256A49D7C((uint64_t *)(v1 + 2512));
  sub_256AFFB34();
  sub_256AFFB00();
  v237();
  static Catalog.Resource.ImageFilter.Face2Word()((uint64_t)v1187);
  uint64_t v238 = v1187[3];
  sub_256AFFB44(v1187);
  *(void *)(v1 + 2576) = v238;
  sub_256AFFC0C();
  *(void *)(v1 + 2584) = v239;
  sub_256A49D7C((uint64_t *)(v1 + 2552));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v241 = v240();
  static Catalog.Resource.LLM.DraftModel.FriendlyTone()(v1186, v241);
  uint64_t v242 = v1186[3];
  sub_256AFFB44(v1186);
  *(void *)(v1 + 2616) = v242;
  sub_256AFFC0C();
  *(void *)(v1 + 2624) = v243;
  sub_256A49D7C((uint64_t *)(v1 + 2592));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v245 = v244();
  static Catalog.Resource.LLM.Adapter.FriendlyTone()(v1185, v245);
  uint64_t v246 = v1185[3];
  sub_256AFFB44(v1185);
  *(void *)(v1 + 2656) = v246;
  sub_256AFFC0C();
  *(void *)(v1 + 2664) = v247;
  sub_256A49D7C((uint64_t *)(v1 + 2632));
  sub_256AFFB34();
  sub_256AFFB00();
  v248();
  static Catalog.Resource.TokenInputDenyList.GenerativeAssistantCompositionInputDenyList()();
  uint64_t v249 = v1184[3];
  sub_256AFFB44(v1184);
  *(void *)(v1 + 2696) = v249;
  sub_256AFFC0C();
  *(void *)(v1 + 2704) = v250;
  sub_256A49D7C((uint64_t *)(v1 + 2672));
  sub_256AFFB34();
  sub_256AFFB00();
  v251();
  static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantCompositionOutputDenyList()();
  uint64_t v252 = v1183[3];
  sub_256AFFB44(v1183);
  *(void *)(v1 + 2736) = v252;
  sub_256AFFC0C();
  *(void *)(v1 + 2744) = v253;
  sub_256A49D7C((uint64_t *)(v1 + 2712));
  sub_256AFFB34();
  sub_256AFFB00();
  v254();
  static Catalog.Resource.TokenInputDenyList.GenerativeAssistantKnowledgeFallbackInputDenyList()();
  uint64_t v255 = v1182[3];
  sub_256AFFB44(v1182);
  *(void *)(v1 + 2776) = v255;
  sub_256AFFC0C();
  *(void *)(v1 + 2784) = v256;
  sub_256A49D7C((uint64_t *)(v1 + 2752));
  sub_256AFFB34();
  sub_256AFFB00();
  v257();
  static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantKnowledgeFallbackOutputDenyList()();
  uint64_t v258 = v1181[3];
  sub_256AFFB44(v1181);
  *(void *)(v1 + 2816) = v258;
  sub_256AFFC0C();
  *(void *)(v1 + 2824) = v259;
  sub_256A49D7C((uint64_t *)(v1 + 2792));
  sub_256AFFB34();
  sub_256AFFB00();
  v260();
  static Catalog.Resource.TokenInputDenyList.GenerativeAssistantKnowledgeInputDenyList()();
  uint64_t v261 = v1180[3];
  sub_256AFFB44(v1180);
  *(void *)(v1 + 2856) = v261;
  sub_256AFFC0C();
  *(void *)(v1 + 2864) = v262;
  sub_256A49D7C((uint64_t *)(v1 + 2832));
  sub_256AFFB34();
  sub_256AFFB00();
  v263();
  static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantKnowledgeOutputDenyList()();
  uint64_t v264 = v1179[3];
  sub_256AFFB44(v1179);
  *(void *)(v1 + 2896) = v264;
  sub_256AFFC0C();
  *(void *)(v1 + 2904) = v265;
  sub_256A49D7C((uint64_t *)(v1 + 2872));
  sub_256AFFB34();
  sub_256AFFB00();
  v266();
  static Catalog.Resource.TokenInputDenyList.GenerativeAssistantMediaQAInputDenyList()();
  uint64_t v267 = v1178[3];
  sub_256AFFB44(v1178);
  *(void *)(v1 + 2936) = v267;
  sub_256AFFC0C();
  *(void *)(v1 + 2944) = v268;
  sub_256A49D7C((uint64_t *)(v1 + 2912));
  sub_256AFFB34();
  sub_256AFFB00();
  v269();
  static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantMediaQAOutputDenyList()();
  uint64_t v270 = v1177[3];
  sub_256AFFB44(v1177);
  *(void *)(v1 + 2976) = v270;
  sub_256AFFC0C();
  *(void *)(v1 + 2984) = v271;
  sub_256A49D7C((uint64_t *)(v1 + 2952));
  sub_256AFFB34();
  sub_256AFFB00();
  v272();
  static Catalog.Resource.TokenInputDenyList.GenerativeAssistantVisualIntelligenceCameraInputDenyList()();
  uint64_t v273 = v1176[3];
  sub_256AFFB44(v1176);
  *(void *)(v1 + 3016) = v273;
  sub_256AFFC0C();
  *(void *)(v1 + 3024) = v274;
  sub_256A49D7C((uint64_t *)(v1 + 2992));
  sub_256AFFB34();
  sub_256AFFB00();
  v275();
  static Catalog.Resource.TokenOutputDenyList.GenerativeAssistantVisualIntelligenceCameraOutputDenyList()();
  uint64_t v276 = v1175[3];
  sub_256AFFB44(v1175);
  *(void *)(v1 + 3056) = v276;
  sub_256AFFC0C();
  *(void *)(v1 + 3064) = v277;
  sub_256A49D7C((uint64_t *)(v1 + 3032));
  sub_256AFFB34();
  sub_256AFFB00();
  v278();
  static Catalog.Resource.ImageMagicCleanUp.GenerativeEditsMagicCleanUp()();
  uint64_t v279 = v1174[3];
  sub_256AFFB44(v1174);
  *(void *)(v1 + 3096) = v279;
  sub_256AFFC0C();
  *(void *)(v1 + 3104) = v280;
  sub_256A49D7C((uint64_t *)(v1 + 3072));
  sub_256AFFB34();
  sub_256AFFB00();
  v281();
  static Catalog.Resource.ImageScaler.GenerativePlaygroundsUpscaler()(v1173);
  uint64_t v282 = v1173[3];
  sub_256AFFB44(v1173);
  *(void *)(v1 + 3136) = v282;
  sub_256AFFC0C();
  *(void *)(v1 + 3144) = v283;
  sub_256A49D7C((uint64_t *)(v1 + 3112));
  sub_256AFFB34();
  sub_256AFFB00();
  v284();
  static Catalog.Resource.HandwritingSynthesizer.HandwritingSynthesis()();
  uint64_t v285 = v1172[3];
  sub_256AFFB44(v1172);
  *(void *)(v1 + 3176) = v285;
  sub_256AFFC0C();
  *(void *)(v1 + 3184) = v286;
  sub_256A49D7C((uint64_t *)(v1 + 3152));
  sub_256AFFB34();
  sub_256AFFB00();
  v287();
  static Catalog.Resource.ImageFilter.HolisticallyNestedEdgeDetector()((uint64_t)v1171);
  uint64_t v288 = v1171[3];
  sub_256AFFB44(v1171);
  *(void *)(v1 + 3216) = v288;
  sub_256AFFC0C();
  *(void *)(v1 + 3224) = v289;
  sub_256A49D7C((uint64_t *)(v1 + 3192));
  sub_256AFFB34();
  sub_256AFFB00();
  v290();
  static Catalog.Resource.Diffusion.Adapter.Illustration()();
  uint64_t v291 = v1170[3];
  sub_256AFFB44(v1170);
  *(void *)(v1 + 3256) = v291;
  sub_256AFFC0C();
  *(void *)(v1 + 3264) = v292;
  sub_256A49D7C((uint64_t *)(v1 + 3232));
  sub_256AFFB34();
  sub_256AFFB00();
  v293();
  static Catalog.Resource.LLM.Model.InstructServerBase()();
  uint64_t v294 = v1169[3];
  sub_256AFFB44(v1169);
  *(void *)(v1 + 3296) = v294;
  sub_256AFFE5C();
  *(void *)(v1 + 3304) = v295;
  sub_256A49D7C((uint64_t *)(v1 + 3272));
  sub_256AFFB34();
  sub_256AFFB00();
  v296();
  static Catalog.Resource.LLM.ServerConfiguration.InstructServerBase()();
  uint64_t v297 = v1168[3];
  sub_256AFFB44(v1168);
  *(void *)(v1 + 3336) = v297;
  sub_256AFFC0C();
  *(void *)(v1 + 3344) = v298;
  sub_256A49D7C((uint64_t *)(v1 + 3312));
  sub_256AFFB34();
  sub_256AFFB00();
  v299();
  static Catalog.Resource.Tokenizer.InstructServerTokenizer()();
  uint64_t v300 = v1167[3];
  sub_256AFFB44(v1167);
  *(void *)(v1 + 3376) = v300;
  sub_256AFFC0C();
  *(void *)(v1 + 3384) = v301;
  sub_256A49D7C((uint64_t *)(v1 + 3352));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v303 = v302();
  static Catalog.Resource.LLM.DraftModel.MagicRewrite()(v1166, v303);
  uint64_t v304 = v1166[3];
  sub_256AFFB44(v1166);
  *(void *)(v1 + 3416) = v304;
  sub_256AFFC0C();
  *(void *)(v1 + 3424) = v305;
  sub_256A49D7C((uint64_t *)(v1 + 3392));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v307 = v306();
  static Catalog.Resource.LLM.Adapter.MagicRewrite()(v1165, v307);
  uint64_t v308 = v1165[3];
  sub_256AFFB44(v1165);
  *(void *)(v1 + 3456) = v308;
  sub_256AFFC0C();
  *(void *)(v1 + 3464) = v309;
  sub_256A49D7C((uint64_t *)(v1 + 3432));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v311 = v310();
  static Catalog.Resource.LLM.DraftModel.MailReply()(v1164, v311);
  uint64_t v312 = v1164[3];
  sub_256AFFB44(v1164);
  *(void *)(v1 + 3496) = v312;
  sub_256AFFC0C();
  *(void *)(v1 + 3504) = v313;
  sub_256A49D7C((uint64_t *)(v1 + 3472));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v315 = v314();
  static Catalog.Resource.LLM.Adapter.MailReply()(v1163, v315);
  uint64_t v316 = v1163[3];
  sub_256AFFB44(v1163);
  *(void *)(v1 + 3536) = v316;
  sub_256AFFC0C();
  *(void *)(v1 + 3544) = v317;
  sub_256A49D7C((uint64_t *)(v1 + 3512));
  sub_256AFFB34();
  sub_256AFFB00();
  v318();
  static Catalog.Resource.TokenInputDenyList.MailReplyLongFormBasicInputDenyList()();
  uint64_t v319 = v1162[3];
  sub_256AFFB44(v1162);
  *(void *)(v1 + 3576) = v319;
  sub_256AFFC0C();
  *(void *)(v1 + 3584) = v320;
  sub_256A49D7C((uint64_t *)(v1 + 3552));
  sub_256AFFB34();
  sub_256AFFB00();
  v321();
  static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormBasicOutputDenyList()();
  uint64_t v322 = v1161[3];
  sub_256AFFB44(v1161);
  *(void *)(v1 + 3616) = v322;
  sub_256AFFC0C();
  *(void *)(v1 + 3624) = v323;
  sub_256A49D7C((uint64_t *)(v1 + 3592));
  sub_256AFFB34();
  sub_256AFFB00();
  v324();
  static Catalog.Resource.TokenInputDenyList.MailReplyLongFormQAInputDenyList()();
  uint64_t v325 = v1160[3];
  sub_256AFFB44(v1160);
  *(void *)(v1 + 3656) = v325;
  sub_256AFFC0C();
  *(void *)(v1 + 3664) = v326;
  sub_256A49D7C((uint64_t *)(v1 + 3632));
  sub_256AFFB34();
  sub_256AFFB00();
  v327();
  static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormQAOutputDenyList()();
  uint64_t v328 = v1159[3];
  sub_256AFFB44(v1159);
  *(void *)(v1 + 3696) = v328;
  sub_256AFFC0C();
  *(void *)(v1 + 3704) = v329;
  sub_256A49D7C((uint64_t *)(v1 + 3672));
  sub_256AFFB34();
  sub_256AFFB00();
  v330();
  static Catalog.Resource.TokenInputDenyList.MailReplyLongFormRewriteInputDenyList()();
  uint64_t v331 = v1158[3];
  sub_256AFFB44(v1158);
  *(void *)(v1 + 3736) = v331;
  sub_256AFFC0C();
  *(void *)(v1 + 3744) = v332;
  sub_256A49D7C((uint64_t *)(v1 + 3712));
  sub_256AFFB34();
  sub_256AFFB00();
  v333();
  static Catalog.Resource.TokenOutputDenyList.MailReplyLongFormRewriteOutputDenyList()();
  uint64_t v334 = v1157[3];
  sub_256AFFB44(v1157);
  *(void *)(v1 + 3776) = v334;
  sub_256AFFC0C();
  *(void *)(v1 + 3784) = v335;
  sub_256A49D7C((uint64_t *)(v1 + 3752));
  sub_256AFFB34();
  sub_256AFFB00();
  v336();
  static Catalog.Resource.TokenInputDenyList.MailReplySnippetInputDenyList()();
  uint64_t v337 = v1156[3];
  sub_256AFFB44(v1156);
  *(void *)(v1 + 3816) = v337;
  sub_256AFFC0C();
  *(void *)(v1 + 3824) = v338;
  sub_256A49D7C((uint64_t *)(v1 + 3792));
  sub_256AFFB34();
  sub_256AFFB00();
  v339();
  static Catalog.Resource.TokenOutputDenyList.MailReplySnippetOutputDenyList()();
  uint64_t v340 = v1155[3];
  sub_256AFFB44(v1155);
  *(void *)(v1 + 3856) = v340;
  sub_256AFFC0C();
  *(void *)(v1 + 3864) = v341;
  sub_256A49D7C((uint64_t *)(v1 + 3832));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v343 = v342();
  static Catalog.Resource.LLM.DraftModel.MessagesReply()(v1154, v343);
  uint64_t v344 = v1154[3];
  sub_256AFFB44(v1154);
  *(void *)(v1 + 3896) = v344;
  sub_256AFFC0C();
  *(void *)(v1 + 3904) = v345;
  sub_256A49D7C((uint64_t *)(v1 + 3872));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v347 = v346();
  static Catalog.Resource.LLM.Adapter.MessagesReply()(v1153, v347);
  uint64_t v348 = v1153[3];
  sub_256AFFB44(v1153);
  *(void *)(v1 + 3936) = v348;
  sub_256AFFC0C();
  *(void *)(v1 + 3944) = v349;
  sub_256A49D7C((uint64_t *)(v1 + 3912));
  sub_256AFFB34();
  sub_256AFFB00();
  v350();
  static Catalog.Resource.TokenInputDenyList.MessagesReplyBaseInputDenyList()();
  uint64_t v351 = v1152[3];
  sub_256AFFB44(v1152);
  *(void *)(v1 + 3976) = v351;
  sub_256AFFC0C();
  *(void *)(v1 + 3984) = v352;
  sub_256A49D7C((uint64_t *)(v1 + 3952));
  sub_256AFFB34();
  sub_256AFFB00();
  v353();
  static Catalog.Resource.TokenOutputDenyList.MessagesReplyBaseOutputDenyList()();
  uint64_t v354 = v1151[3];
  sub_256AFFB44(v1151);
  *(void *)(v1 + 4016) = v354;
  sub_256AFFC0C();
  *(void *)(v1 + 4024) = v355;
  sub_256A49D7C((uint64_t *)(v1 + 3992));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v357 = v356();
  static Catalog.Resource.LLM.Model.NLRouterBase()(v1150, v357);
  uint64_t v358 = v1150[3];
  sub_256AFFB44(v1150);
  *(void *)(v1 + 4056) = v358;
  sub_256AFFC0C();
  *(void *)(v1 + 4064) = v359;
  sub_256A49D7C((uint64_t *)(v1 + 4032));
  sub_256AFFB34();
  sub_256AFFB00();
  v360();
  static Catalog.Resource.LLM.ServerConfiguration.NLRouterBase()();
  uint64_t v361 = v1149[3];
  sub_256AFFB44(v1149);
  *(void *)(v1 + 4096) = v361;
  sub_256AFFC0C();
  *(void *)(v1 + 4104) = v362;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v363();
  sub_256AFFE30();
  static Catalog.Resource.Tokenizer.NLRouterTokenizer()();
  uint64_t v364 = v1148[3];
  sub_256AFFB44(v1148);
  *(void *)(v1 + 4136) = v364;
  sub_256AFFC0C();
  *(void *)(v1 + 4144) = v365;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v366();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.OpenEndedSchema()();
  uint64_t v367 = v1147[3];
  sub_256AFFB44(v1147);
  *(void *)(v1 + 4176) = v367;
  sub_256AFFC0C();
  *(void *)(v1 + 4184) = v368;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v369();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.OpenEndedSchema()();
  uint64_t v370 = v1146[3];
  sub_256AFFB44(v1146);
  *(void *)(v1 + 4216) = v370;
  sub_256AFFE5C();
  *(void *)(v1 + 4224) = v371;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v372();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.OpenEndedSchema()();
  uint64_t v373 = v1145[3];
  sub_256AFFB44(v1145);
  *(void *)(v1 + 4256) = v373;
  sub_256AFFC0C();
  *(void *)(v1 + 4264) = v374;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v375();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.OpenEndedTone()();
  uint64_t v376 = v1144[3];
  sub_256AFFB44(v1144);
  *(void *)(v1 + 4296) = v376;
  sub_256AFFC0C();
  *(void *)(v1 + 4304) = v377;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v378();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.OpenEndedTone()();
  uint64_t v379 = v1143[3];
  sub_256AFFB44(v1143);
  *(void *)(v1 + 4336) = v379;
  sub_256AFFE5C();
  *(void *)(v1 + 4344) = v380;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v381();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.OpenEndedTone()();
  uint64_t v382 = v1142[3];
  sub_256AFFB44(v1142);
  *(void *)(v1 + 4376) = v382;
  sub_256AFFC0C();
  *(void *)(v1 + 4384) = v383;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v384();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneBase()();
  uint64_t v385 = v1141[3];
  sub_256AFFB44(v1141);
  *(void *)(v1 + 4416) = v385;
  sub_256AFFC0C();
  *(void *)(v1 + 4424) = v386;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v387();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.OpenEndedToneQueryResponse()();
  uint64_t v388 = v1140[3];
  sub_256AFFB44(v1140);
  *(void *)(v1 + 4456) = v388;
  sub_256AFFC0C();
  *(void *)(v1 + 4464) = v389;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v390();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.OpenEndedToneQueryResponse()();
  uint64_t v391 = v1139[3];
  sub_256AFFB44(v1139);
  *(void *)(v1 + 4496) = v391;
  sub_256AFFE5C();
  *(void *)(v1 + 4504) = v392;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v393();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneQueryResponse()();
  uint64_t v394 = v1138[3];
  sub_256AFFB44(v1138);
  *(void *)(v1 + 4536) = v394;
  sub_256AFFC0C();
  *(void *)(v1 + 4544) = v395;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v396();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneV2()();
  uint64_t v397 = v1137[3];
  sub_256AFFB44(v1137);
  *(void *)(v1 + 4576) = v397;
  sub_256AFFC0C();
  *(void *)(v1 + 4584) = v398;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v399();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PQAVerification()();
  uint64_t v400 = v1136[3];
  sub_256AFFB44(v1136);
  *(void *)(v1 + 4616) = v400;
  sub_256AFFC0C();
  *(void *)(v1 + 4624) = v401;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v402();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Model.PQAVerificationBase()();
  uint64_t v403 = v1135[3];
  sub_256AFFB44(v1135);
  *(void *)(v1 + 4656) = v403;
  sub_256AFFC0C();
  *(void *)(v1 + 4664) = v404;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v405();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedAnimation()();
  uint64_t v406 = v1134[3];
  sub_256AFFB44(v1134);
  *(void *)(v1 + 4696) = v406;
  sub_256AFFC0C();
  *(void *)(v1 + 4704) = v407;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v408();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedEmoji()();
  uint64_t v409 = v1133[3];
  sub_256AFFB44(v1133);
  *(void *)(v1 + 4736) = v409;
  sub_256AFFC0C();
  *(void *)(v1 + 4744) = v410;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v411();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedIllustration()();
  uint64_t v412 = v1132[3];
  sub_256AFFB44(v1132);
  *(void *)(v1 + 4776) = v412;
  sub_256AFFC0C();
  *(void *)(v1 + 4784) = v413;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v414();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedScribble()();
  uint64_t v415 = v1131[3];
  sub_256AFFB44(v1131);
  *(void *)(v1 + 4816) = v415;
  sub_256AFFC0C();
  *(void *)(v1 + 4824) = v416;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v417();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.PersonalizedSketch()();
  uint64_t v418 = v1130[3];
  sub_256AFFB44(v1130);
  *(void *)(v1 + 4856) = v418;
  sub_256AFFC0C();
  *(void *)(v1 + 4864) = v419;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v420();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCuration()();
  uint64_t v421 = v1129[3];
  sub_256AFFB44(v1129);
  *(void *)(v1 + 4896) = v421;
  sub_256AFFC0C();
  *(void *)(v1 + 4904) = v422;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v423();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCuration()();
  uint64_t v424 = v1128[3];
  sub_256AFFB44(v1128);
  *(void *)(v1 + 4936) = v424;
  sub_256AFFE5C();
  *(void *)(v1 + 4944) = v425;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v426();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()();
  uint64_t v427 = v1127[3];
  sub_256AFFB44(v1127);
  *(void *)(v1 + 4976) = v427;
  sub_256AFFC0C();
  *(void *)(v1 + 4984) = v428;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v429();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationAssetCurationV2()();
  uint64_t v430 = v1126[3];
  sub_256AFFB44(v1126);
  *(void *)(v1 + 5016) = v430;
  sub_256AFFC0C();
  *(void *)(v1 + 5024) = v431;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v432();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationAssetCurationV2()();
  uint64_t v433 = v1125[3];
  sub_256AFFB44(v1125);
  *(void *)(v1 + 5056) = v433;
  sub_256AFFE5C();
  *(void *)(v1 + 5064) = v434;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v435();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()();
  uint64_t v436 = v1124[3];
  sub_256AFFB44(v1124);
  *(void *)(v1 + 5096) = v436;
  sub_256AFFC0C();
  *(void *)(v1 + 5104) = v437;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v438();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Model.PhotosMemoriesCreationBase()();
  uint64_t v439 = v1123[3];
  sub_256AFFB44(v1123);
  *(void *)(v1 + 5136) = v439;
  sub_256AFFE5C();
  *(void *)(v1 + 5144) = v440;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v441();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationBase()();
  uint64_t v442 = v1122[3];
  sub_256AFFB44(v1122);
  *(void *)(v1 + 5176) = v442;
  sub_256AFFC0C();
  *(void *)(v1 + 5184) = v443;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v444();
  sub_256AFFE30();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationBaseInputDenyList()();
  uint64_t v445 = v1121[3];
  sub_256AFFB44(v1121);
  *(void *)(v1 + 5216) = v445;
  sub_256AFFC0C();
  *(void *)(v1 + 5224) = v446;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v447();
  sub_256AFFE30();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationBaseOutputDenyList()();
  uint64_t v448 = v1120[3];
  sub_256AFFB44(v1120);
  *(void *)(v1 + 5256) = v448;
  sub_256AFFC0C();
  *(void *)(v1 + 5264) = v449;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v450();
  sub_256AFFE30();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationGlobalTraitInputDenyList()();
  uint64_t v451 = v1119[3];
  sub_256AFFB44(v1119);
  *(void *)(v1 + 5296) = v451;
  sub_256AFFC0C();
  *(void *)(v1 + 5304) = v452;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v453();
  sub_256AFFE30();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationGlobalTraitOutputDenyList()();
  uint64_t v454 = v1118[3];
  sub_256AFFB44(v1118);
  *(void *)(v1 + 5336) = v454;
  sub_256AFFC0C();
  *(void *)(v1 + 5344) = v455;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v456();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraits()();
  uint64_t v457 = v1117[3];
  sub_256AFFB44(v1117);
  *(void *)(v1 + 5376) = v457;
  sub_256AFFC0C();
  *(void *)(v1 + 5384) = v458;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v459();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraits()();
  uint64_t v460 = v1116[3];
  sub_256AFFB44(v1116);
  *(void *)(v1 + 5416) = v460;
  sub_256AFFE5C();
  *(void *)(v1 + 5424) = v461;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v462();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()();
  uint64_t v463 = v1115[3];
  sub_256AFFB44(v1115);
  *(void *)(v1 + 5456) = v463;
  sub_256AFFC0C();
  *(void *)(v1 + 5464) = v464;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v465();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationGlobalTraitsV2()();
  uint64_t v466 = v1114[3];
  sub_256AFFB44(v1114);
  *(void *)(v1 + 5496) = v466;
  sub_256AFFC0C();
  *(void *)(v1 + 5504) = v467;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v468();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationGlobalTraitsV2()();
  uint64_t v469 = v1113[3];
  sub_256AFFB44(v1113);
  *(void *)(v1 + 5536) = v469;
  sub_256AFFE5C();
  *(void *)(v1 + 5544) = v470;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v471();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()();
  uint64_t v472 = v1112[3];
  sub_256AFFB44(v1112);
  *(void *)(v1 + 5576) = v472;
  sub_256AFFC0C();
  *(void *)(v1 + 5584) = v473;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v474();
  sub_256AFFE30();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationMusicSongIdOutputDenyList()();
  uint64_t v475 = v1111[3];
  sub_256AFFB44(v1111);
  *(void *)(v1 + 5616) = v475;
  sub_256AFFC0C();
  *(void *)(v1 + 5624) = v476;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v477();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstanding()();
  uint64_t v478 = v1110[3];
  sub_256AFFB44(v1110);
  *(void *)(v1 + 5656) = v478;
  sub_256AFFC0C();
  *(void *)(v1 + 5664) = v479;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v480();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstanding()();
  uint64_t v481 = v1109[3];
  sub_256AFFB44(v1109);
  *(void *)(v1 + 5696) = v481;
  sub_256AFFE5C();
  *(void *)(v1 + 5704) = v482;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v483();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()();
  uint64_t v484 = v1108[3];
  sub_256AFFB44(v1108);
  *(void *)(v1 + 5736) = v484;
  sub_256AFFC0C();
  *(void *)(v1 + 5744) = v485;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v486();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV2()();
  uint64_t v487 = v1107[3];
  sub_256AFFB44(v1107);
  *(void *)(v1 + 5776) = v487;
  sub_256AFFC0C();
  *(void *)(v1 + 5784) = v488;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v489();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV2()();
  uint64_t v490 = v1106[3];
  sub_256AFFB44(v1106);
  *(void *)(v1 + 5816) = v490;
  sub_256AFFE5C();
  *(void *)(v1 + 5824) = v491;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v492();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()();
  uint64_t v493 = v1105[3];
  sub_256AFFB44(v1105);
  *(void *)(v1 + 5856) = v493;
  sub_256AFFC0C();
  *(void *)(v1 + 5864) = v494;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v495();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationQueryUnderstandingV3()();
  uint64_t v496 = v1104[3];
  sub_256AFFB44(v1104);
  *(void *)(v1 + 5896) = v496;
  sub_256AFFC0C();
  *(void *)(v1 + 5904) = v497;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v498();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationQueryUnderstandingV3()();
  uint64_t v499 = v1103[3];
  sub_256AFFB44(v1103);
  *(void *)(v1 + 5936) = v499;
  sub_256AFFE5C();
  *(void *)(v1 + 5944) = v500;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v501();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV3()();
  uint64_t v502 = v1102[3];
  sub_256AFFB44(v1102);
  *(void *)(v1 + 5976) = v502;
  sub_256AFFC0C();
  *(void *)(v1 + 5984) = v503;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v504();
  sub_256AFFE30();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationStoryTitleInputDenyList()();
  uint64_t v505 = v1101[3];
  sub_256AFFB44(v1101);
  *(void *)(v1 + 6016) = v505;
  sub_256AFFC0C();
  *(void *)(v1 + 6024) = v506;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v507();
  sub_256AFFE30();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationStoryTitleOutputDenyList()();
  uint64_t v508 = v1100[3];
  sub_256AFFB44(v1100);
  *(void *)(v1 + 6056) = v508;
  sub_256AFFC0C();
  *(void *)(v1 + 6064) = v509;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v510();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStoryteller()();
  uint64_t v511 = v1099[3];
  sub_256AFFB44(v1099);
  *(void *)(v1 + 6096) = v511;
  sub_256AFFC0C();
  *(void *)(v1 + 6104) = v512;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v513();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStoryteller()();
  uint64_t v514 = v1098[3];
  sub_256AFFB44(v1098);
  *(void *)(v1 + 6136) = v514;
  sub_256AFFE5C();
  *(void *)(v1 + 6144) = v515;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v516();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()();
  uint64_t v517 = v1097[3];
  sub_256AFFB44(v1097);
  *(void *)(v1 + 6176) = v517;
  sub_256AFFC0C();
  *(void *)(v1 + 6184) = v518;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v519();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PhotosMemoriesCreationStorytellerV2()();
  uint64_t v520 = v1096[3];
  sub_256AFFB44(v1096);
  *(void *)(v1 + 6216) = v520;
  sub_256AFFC0C();
  *(void *)(v1 + 6224) = v521;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v522();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PhotosMemoriesCreationStorytellerV2()();
  uint64_t v523 = v1095[3];
  sub_256AFFB44(v1095);
  *(void *)(v1 + 6256) = v523;
  sub_256AFFE5C();
  *(void *)(v1 + 6264) = v524;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v525();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()();
  uint64_t v526 = v1094[3];
  sub_256AFFB44(v1094);
  *(void *)(v1 + 6296) = v526;
  sub_256AFFC0C();
  *(void *)(v1 + 6304) = v527;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v528();
  sub_256AFFE30();
  static Catalog.Resource.TokenInputDenyList.PhotosMemoriesCreationUserQueryInputDenyList()();
  uint64_t v529 = v1093[3];
  sub_256AFFB44(v1093);
  *(void *)(v1 + 6336) = v529;
  sub_256AFFC0C();
  *(void *)(v1 + 6344) = v530;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v531();
  sub_256AFFE30();
  static Catalog.Resource.TokenOutputDenyList.PhotosMemoriesCreationUserQueryOutputDenyList()();
  uint64_t v532 = v1092[3];
  sub_256AFFB44(v1092);
  *(void *)(v1 + 6376) = v532;
  sub_256AFFC0C();
  *(void *)(v1 + 6384) = v533;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v534();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.Planner()();
  uint64_t v535 = v1091[3];
  sub_256AFFB44(v1091);
  *(void *)(v1 + 6416) = v535;
  sub_256AFFC0C();
  *(void *)(v1 + 6424) = v536;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v537();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.Planner()();
  uint64_t v538 = v1090[3];
  sub_256AFFB44(v1090);
  *(void *)(v1 + 6456) = v538;
  sub_256AFFE5C();
  *(void *)(v1 + 6464) = v539;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v540();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.Planner()();
  uint64_t v541 = v1089[3];
  sub_256AFFB44(v1089);
  *(void *)(v1 + 6496) = v541;
  sub_256AFFC0C();
  *(void *)(v1 + 6504) = v542;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v543();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PlannerV2()();
  uint64_t v544 = v1088[3];
  sub_256AFFB44(v1088);
  *(void *)(v1 + 6536) = v544;
  sub_256AFFC0C();
  *(void *)(v1 + 6544) = v545;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v546();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PlannerV2()();
  uint64_t v547 = v1087[3];
  sub_256AFFB44(v1087);
  *(void *)(v1 + 6576) = v547;
  sub_256AFFE5C();
  *(void *)(v1 + 6584) = v548;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v549();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PlannerV2()();
  uint64_t v550 = v1086[3];
  sub_256AFFB44(v1086);
  *(void *)(v1 + 6616) = v550;
  sub_256AFFC0C();
  *(void *)(v1 + 6624) = v551;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v552();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.PlannerV3()();
  uint64_t v553 = v1085[3];
  sub_256AFFB44(v1085);
  *(void *)(v1 + 6656) = v553;
  sub_256AFFC0C();
  *(void *)(v1 + 6664) = v554;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v555();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.PlannerV3()();
  uint64_t v556 = v1084[3];
  sub_256AFFB44(v1084);
  *(void *)(v1 + 6696) = v556;
  sub_256AFFE5C();
  *(void *)(v1 + 6704) = v557;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v558();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PlannerV3()();
  uint64_t v559 = v1083[3];
  sub_256AFFB44(v1083);
  *(void *)(v1 + 6736) = v559;
  sub_256AFFC0C();
  *(void *)(v1 + 6744) = v560;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v561();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.PrivateCloudResearchAdapter()();
  uint64_t v562 = v1082[3];
  sub_256AFFB44(v1082);
  *(void *)(v1 + 6776) = v562;
  sub_256AFFC0C();
  *(void *)(v1 + 6784) = v563;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v564();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.ProfessionalTone()();
  uint64_t v565 = v1081[3];
  sub_256AFFB44(v1081);
  *(void *)(v1 + 6816) = v565;
  sub_256AFFC0C();
  *(void *)(v1 + 6824) = v566;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v567();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.ProfessionalTone()();
  uint64_t v568 = v1080[3];
  sub_256AFFB44(v1080);
  *(void *)(v1 + 6856) = v568;
  sub_256AFFC0C();
  *(void *)(v1 + 6864) = v569;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v570();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.ProofreadingReview()();
  uint64_t v571 = v1079[3];
  sub_256AFFB44(v1079);
  *(void *)(v1 + 6896) = v571;
  sub_256AFFC0C();
  *(void *)(v1 + 6904) = v572;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v573();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.ProofreadingReview()();
  uint64_t v574 = v1078[3];
  sub_256AFFB44(v1078);
  *(void *)(v1 + 6936) = v574;
  sub_256AFFC0C();
  *(void *)(v1 + 6944) = v575;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v576();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.Refiner()();
  uint64_t v577 = v1077[3];
  sub_256AFFB44(v1077);
  *(void *)(v1 + 6976) = v577;
  sub_256AFFC0C();
  *(void *)(v1 + 6984) = v578;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v579();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.ResponseGeneration()();
  uint64_t v580 = v1076[3];
  sub_256AFFB44(v1076);
  *(void *)(v1 + 7016) = v580;
  sub_256AFFC0C();
  *(void *)(v1 + 7024) = v581;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v582();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.ResponseGeneration()();
  uint64_t v583 = v1075[3];
  sub_256AFFB44(v1075);
  *(void *)(v1 + 7056) = v583;
  sub_256AFFE5C();
  *(void *)(v1 + 7064) = v584;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v585();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.ResponseGeneration()();
  uint64_t v586 = v1074[3];
  sub_256AFFB44(v1074);
  *(void *)(v1 + 7096) = v586;
  sub_256AFFC0C();
  *(void *)(v1 + 7104) = v587;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v588();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.ResponseGenerationV2()();
  uint64_t v589 = v1073[3];
  sub_256AFFB44(v1073);
  *(void *)(v1 + 7136) = v589;
  sub_256AFFC0C();
  *(void *)(v1 + 7144) = v590;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v591();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.ResponseGenerationV2()();
  uint64_t v592 = v1072[3];
  sub_256AFFB44(v1072);
  *(void *)(v1 + 7176) = v592;
  sub_256AFFE5C();
  *(void *)(v1 + 7184) = v593;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v594();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV2()();
  uint64_t v595 = v1071[3];
  sub_256AFFB44(v1071);
  *(void *)(v1 + 7216) = v595;
  sub_256AFFC0C();
  *(void *)(v1 + 7224) = v596;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v597();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.ResponseGenerationV3()();
  uint64_t v598 = v1070[3];
  sub_256AFFB44(v1070);
  *(void *)(v1 + 7256) = v598;
  sub_256AFFC0C();
  *(void *)(v1 + 7264) = v599;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v600();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.ResponseGenerationV3()();
  uint64_t v601 = v1069[3];
  sub_256AFFB44(v1069);
  *(void *)(v1 + 7296) = v601;
  sub_256AFFE5C();
  *(void *)(v1 + 7304) = v602;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v603();
  sub_256AFFE30();
  static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV3()();
  uint64_t v604 = v1068[3];
  sub_256AFFB44(v1068);
  *(void *)(v1 + 7336) = v604;
  sub_256AFFC0C();
  *(void *)(v1 + 7344) = v605;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v606();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.Safety()();
  uint64_t v607 = v1067[3];
  sub_256AFFB44(v1067);
  *(void *)(v1 + 7376) = v607;
  sub_256AFFC0C();
  *(void *)(v1 + 7384) = v608;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v609();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.SafetyGuardrail()();
  uint64_t v610 = v1066[3];
  sub_256AFFB44(v1066);
  *(void *)(v1 + 7416) = v610;
  sub_256AFFC0C();
  *(void *)(v1 + 7424) = v611;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v612();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.SafetyGuardrail()();
  uint64_t v613 = v1065[3];
  sub_256AFFB44(v1065);
  *(void *)(v1 + 7456) = v613;
  sub_256AFFC0C();
  *(void *)(v1 + 7464) = v614;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v615();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Model.SafetyGuardrailLite()();
  uint64_t v616 = v1064[3];
  sub_256AFFB44(v1064);
  *(void *)(v1 + 7496) = v616;
  sub_256AFFC0C();
  *(void *)(v1 + 7504) = v617;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v618();
  sub_256AFFE30();
  static Catalog.Resource.Tokenizer.SafetyGuardrailLiteTokenizer()();
  uint64_t v619 = v1063[3];
  sub_256AFFB44(v1063);
  *(void *)(v1 + 7536) = v619;
  sub_256AFFC0C();
  *(void *)(v1 + 7544) = v620;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v621();
  sub_256AFFE30();
  static Catalog.Resource.Diffusion.Adapter.Scribble()();
  uint64_t v622 = v1062[3];
  sub_256AFFB44(v1062);
  *(void *)(v1 + 7576) = v622;
  sub_256AFFC0C();
  *(void *)(v1 + 7584) = v623;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v624();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingOnDevice()();
  uint64_t v625 = v1061[3];
  sub_256AFFB44(v1061);
  *(void *)(v1 + 7616) = v625;
  sub_256AFFC0C();
  *(void *)(v1 + 7624) = v626;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v627();
  sub_256AFFE30();
  static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingOnDevice()();
  uint64_t v628 = v1060[3];
  sub_256AFFB44(v1060);
  *(void *)(v1 + 7656) = v628;
  sub_256AFFC0C();
  *(void *)(v1 + 7664) = v629;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v630();
  sub_256AFFE30();
  static Catalog.Resource.LLM.DraftModel.SearchQueryUnderstandingServer()();
  uint64_t v631 = v1059[3];
  sub_256AFFB44(v1059);
  *(void *)(v1 + 7696) = v631;
  sub_256AFFC0C();
  *(void *)(v1 + 7704) = v632;
  sub_256A49D7C((uint64_t *)(v1 + 4072));
  sub_256AFFB34();
  sub_256AFFB00();
  v633();
  static Catalog.Resource.LLM.Adapter.SearchQueryUnderstandingServer()();
  uint64_t v634 = v1058[3];
  sub_256AFFB44(v1058);
  *(void *)(v1 + 7736) = v634;
  sub_256AFFE5C();
  *(void *)(v1 + 7744) = v635;
  sub_256A49D7C((uint64_t *)(v1 + 7712));
  sub_256AFFB34();
  sub_256AFFB00();
  v636();
  static Catalog.Resource.LLM.ServerConfiguration.SearchQueryUnderstandingServer()();
  uint64_t v637 = v1057[3];
  sub_256AFFB44(v1057);
  *(void *)(v1 + 7776) = v637;
  sub_256AFFC0C();
  *(void *)(v1 + 7784) = v638;
  sub_256A49D7C((uint64_t *)(v1 + 7752));
  sub_256AFFB34();
  sub_256AFFB00();
  v639();
  static Catalog.Resource.LLM.DraftModel.ServerBulletsTransform()();
  uint64_t v640 = v1056[3];
  sub_256AFFB44(v1056);
  *(void *)(v1 + 7816) = v640;
  sub_256AFFC0C();
  *(void *)(v1 + 7824) = v641;
  sub_256A49D7C((uint64_t *)(v1 + 7792));
  sub_256AFFB34();
  sub_256AFFB00();
  v642();
  static Catalog.Resource.LLM.Adapter.ServerBulletsTransform()();
  uint64_t v643 = v1055[3];
  sub_256AFFB44(v1055);
  *(void *)(v1 + 7856) = v643;
  sub_256AFFE5C();
  *(void *)(v1 + 7864) = v644;
  sub_256A49D7C((uint64_t *)(v1 + 7832));
  sub_256AFFB34();
  sub_256AFFB00();
  v645();
  static Catalog.Resource.LLM.ServerConfiguration.ServerBulletsTransform()();
  uint64_t v646 = v1054[3];
  sub_256AFFB44(v1054);
  *(void *)(v1 + 7896) = v646;
  sub_256AFFC0C();
  *(void *)(v1 + 7904) = v647;
  sub_256A49D7C((uint64_t *)(v1 + 7872));
  sub_256AFFB34();
  sub_256AFFB00();
  v648();
  static Catalog.Resource.LLM.DraftModel.ServerConciseTone()();
  uint64_t v649 = v1053[3];
  sub_256AFFB44(v1053);
  *(void *)(v1 + 7936) = v649;
  sub_256AFFC0C();
  *(void *)(v1 + 7944) = v650;
  sub_256A49D7C((uint64_t *)(v1 + 7912));
  sub_256AFFB34();
  sub_256AFFB00();
  v651();
  static Catalog.Resource.LLM.Adapter.ServerConciseTone()();
  uint64_t v652 = v1052[3];
  sub_256AFFB44(v1052);
  *(void *)(v1 + 7976) = v652;
  sub_256AFFE5C();
  *(void *)(v1 + 7984) = v653;
  sub_256A49D7C((uint64_t *)(v1 + 7952));
  sub_256AFFB34();
  sub_256AFFB00();
  v654();
  static Catalog.Resource.LLM.ServerConfiguration.ServerConciseTone()();
  uint64_t v655 = v1051[3];
  sub_256AFFB44(v1051);
  *(void *)(v1 + 8016) = v655;
  sub_256AFFC0C();
  *(void *)(v1 + 8024) = v656;
  sub_256A49D7C((uint64_t *)(v1 + 7992));
  sub_256AFFB34();
  sub_256AFFB00();
  v657();
  static Catalog.Resource.LLM.DraftModel.ServerFriendlyTone()();
  uint64_t v658 = v1050[3];
  sub_256AFFB44(v1050);
  *(void *)(v1 + 8056) = v658;
  sub_256AFFC0C();
  *(void *)(v1 + 8064) = v659;
  sub_256A49D7C((uint64_t *)(v1 + 8032));
  sub_256AFFB34();
  sub_256AFFB00();
  v660();
  static Catalog.Resource.LLM.Adapter.ServerFriendlyTone()();
  uint64_t v661 = v1049[3];
  sub_256AFFB44(v1049);
  *(void *)(v1 + 8096) = v661;
  sub_256AFFE5C();
  *(void *)(v1 + 8104) = v662;
  sub_256A49D7C((uint64_t *)(v1 + 8072));
  sub_256AFFB34();
  sub_256AFFB00();
  v663();
  static Catalog.Resource.LLM.ServerConfiguration.ServerFriendlyTone()();
  uint64_t v664 = v1048[3];
  sub_256AFFB44(v1048);
  *(void *)(v1 + 8136) = v664;
  sub_256AFFC0C();
  *(void *)(v1 + 8144) = v665;
  sub_256A49D7C((uint64_t *)(v1 + 8112));
  sub_256AFFB34();
  sub_256AFFB00();
  v666();
  static Catalog.Resource.LLM.DraftModel.ServerMagicRewrite()();
  uint64_t v667 = v1047[3];
  sub_256AFFB44(v1047);
  *(void *)(v1 + 8176) = v667;
  sub_256AFFC0C();
  *(void *)(v1 + 8184) = v668;
  sub_256A49D7C((uint64_t *)(v1 + 8152));
  sub_256AFFB34();
  sub_256AFFB00();
  v669();
  static Catalog.Resource.LLM.Adapter.ServerMagicRewrite()();
  uint64_t v670 = v1046[3];
  sub_256AFFB44(v1046);
  *(void *)(v1 + 8216) = v670;
  sub_256AFFE5C();
  *(void *)(v1 + 8224) = v671;
  sub_256A49D7C((uint64_t *)(v1 + 0x2000));
  sub_256AFFB34();
  sub_256AFFB00();
  v672();
  static Catalog.Resource.LLM.ServerConfiguration.ServerMagicRewrite()();
  uint64_t v673 = v1045[3];
  sub_256AFFB44(v1045);
  *(void *)(v1 + 8256) = v673;
  sub_256AFFC0C();
  *(void *)(v1 + 8264) = v674;
  sub_256A49D7C((uint64_t *)(v1 + 8232));
  sub_256AFFB34();
  sub_256AFFB00();
  v675();
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormBasic()();
  uint64_t v676 = v1044[3];
  sub_256AFFB44(v1044);
  *(void *)(v1 + 8296) = v676;
  sub_256AFFC0C();
  *(void *)(v1 + 8304) = v677;
  sub_256A49D7C((uint64_t *)(v1 + 8272));
  sub_256AFFB34();
  sub_256AFFB00();
  v678();
  static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormBasic()();
  uint64_t v679 = v1043[3];
  sub_256AFFB44(v1043);
  *(void *)(v1 + 8336) = v679;
  sub_256AFFE5C();
  *(void *)(v1 + 8344) = v680;
  sub_256A49D7C((uint64_t *)(v1 + 8312));
  sub_256AFFB34();
  sub_256AFFB00();
  v681();
  static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()();
  uint64_t v682 = v1042[3];
  sub_256AFFB44(v1042);
  *(void *)(v1 + 8376) = v682;
  sub_256AFFC0C();
  *(void *)(v1 + 8384) = v683;
  sub_256A49D7C((uint64_t *)(v1 + 8352));
  sub_256AFFB34();
  sub_256AFFB00();
  v684();
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyLongFormRewrite()();
  uint64_t v685 = v1041[3];
  sub_256AFFB44(v1041);
  *(void *)(v1 + 8416) = v685;
  sub_256AFFC0C();
  *(void *)(v1 + 8424) = v686;
  sub_256A49D7C((uint64_t *)(v1 + 8392));
  sub_256AFFB34();
  sub_256AFFB00();
  v687();
  static Catalog.Resource.LLM.Adapter.ServerMailReplyLongFormRewrite()();
  uint64_t v688 = v1040[3];
  sub_256AFFB44(v1040);
  *(void *)(v1 + 8456) = v688;
  sub_256AFFE5C();
  *(void *)(v1 + 8464) = v689;
  sub_256A49D7C((uint64_t *)(v1 + 8432));
  sub_256AFFB34();
  sub_256AFFB00();
  v690();
  static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()();
  uint64_t v691 = v1039[3];
  sub_256AFFB44(v1039);
  *(void *)(v1 + 8496) = v691;
  sub_256AFFC0C();
  *(void *)(v1 + 8504) = v692;
  sub_256A49D7C((uint64_t *)(v1 + 8472));
  sub_256AFFB34();
  sub_256AFFB00();
  v693();
  static Catalog.Resource.LLM.DraftModel.ServerMailReplyQA()();
  uint64_t v694 = v1038[3];
  sub_256AFFB44(v1038);
  *(void *)(v1 + 8536) = v694;
  sub_256AFFC0C();
  *(void *)(v1 + 8544) = v695;
  sub_256A49D7C((uint64_t *)(v1 + 8512));
  sub_256AFFB34();
  sub_256AFFB00();
  v696();
  static Catalog.Resource.LLM.Adapter.ServerMailReplyQA()();
  uint64_t v697 = v1037[3];
  sub_256AFFB44(v1037);
  *(void *)(v1 + 8576) = v697;
  sub_256AFFE5C();
  *(void *)(v1 + 8584) = v698;
  sub_256A49D7C((uint64_t *)(v1 + 8552));
  sub_256AFFB34();
  sub_256AFFB00();
  v699();
  static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyQA()();
  uint64_t v700 = v1036[3];
  sub_256AFFB44(v1036);
  *(void *)(v1 + 8616) = v700;
  sub_256AFFC0C();
  *(void *)(v1 + 8624) = v701;
  sub_256A49D7C((uint64_t *)(v1 + 8592));
  sub_256AFFB34();
  sub_256AFFB00();
  v702();
  static Catalog.Resource.LLM.DraftModel.ServerProfessionalTone()();
  uint64_t v703 = v1035[3];
  sub_256AFFB44(v1035);
  *(void *)(v1 + 8656) = v703;
  sub_256AFFC0C();
  *(void *)(v1 + 8664) = v704;
  sub_256A49D7C((uint64_t *)(v1 + 8632));
  sub_256AFFB34();
  sub_256AFFB00();
  v705();
  static Catalog.Resource.LLM.Adapter.ServerProfessionalTone()();
  uint64_t v706 = v1034[3];
  sub_256AFFB44(v1034);
  *(void *)(v1 + 8696) = v706;
  sub_256AFFE5C();
  *(void *)(v1 + 8704) = v707;
  sub_256A49D7C((uint64_t *)(v1 + 8672));
  sub_256AFFB34();
  sub_256AFFB00();
  v708();
  static Catalog.Resource.LLM.ServerConfiguration.ServerProfessionalTone()();
  uint64_t v709 = v1033[3];
  sub_256AFFB44(v1033);
  *(void *)(v1 + 8736) = v709;
  sub_256AFFC0C();
  *(void *)(v1 + 8744) = v710;
  sub_256A49D7C((uint64_t *)(v1 + 8712));
  sub_256AFFB34();
  sub_256AFFB00();
  v711();
  static Catalog.Resource.LLM.DraftModel.ServerProofreadingReview()();
  uint64_t v712 = v1032[3];
  sub_256AFFB44(v1032);
  *(void *)(v1 + 8776) = v712;
  sub_256AFFC0C();
  *(void *)(v1 + 8784) = v713;
  sub_256A49D7C((uint64_t *)(v1 + 8752));
  sub_256AFFB34();
  sub_256AFFB00();
  v714();
  static Catalog.Resource.LLM.Adapter.ServerProofreadingReview()();
  uint64_t v715 = v1031[3];
  sub_256AFFB44(v1031);
  *(void *)(v1 + 8816) = v715;
  sub_256AFFE5C();
  *(void *)(v1 + 8824) = v716;
  sub_256A49D7C((uint64_t *)(v1 + 8792));
  sub_256AFFB34();
  sub_256AFFB00();
  v717();
  static Catalog.Resource.LLM.ServerConfiguration.ServerProofreadingReview()();
  uint64_t v718 = v1030[3];
  sub_256AFFB44(v1030);
  *(void *)(v1 + 8856) = v718;
  sub_256AFFC0C();
  *(void *)(v1 + 8864) = v719;
  sub_256A49D7C((uint64_t *)(v1 + 8832));
  sub_256AFFB34();
  sub_256AFFB00();
  v720();
  static Catalog.Resource.LLM.DraftModel.ServerTablesTransform()();
  uint64_t v721 = v1029[3];
  sub_256AFFB44(v1029);
  *(void *)(v1 + 8896) = v721;
  sub_256AFFC0C();
  *(void *)(v1 + 8904) = v722;
  sub_256A49D7C((uint64_t *)(v1 + 8872));
  sub_256AFFB34();
  sub_256AFFB00();
  v723();
  static Catalog.Resource.LLM.Adapter.ServerTablesTransform()();
  uint64_t v724 = v1028[3];
  sub_256AFFB44(v1028);
  *(void *)(v1 + 8936) = v724;
  sub_256AFFE5C();
  *(void *)(v1 + 8944) = v725;
  sub_256A49D7C((uint64_t *)(v1 + 8912));
  sub_256AFFB34();
  sub_256AFFB00();
  v726();
  static Catalog.Resource.LLM.ServerConfiguration.ServerTablesTransform()();
  uint64_t v727 = v1027[3];
  sub_256AFFB44(v1027);
  *(void *)(v1 + 8976) = v727;
  sub_256AFFC0C();
  *(void *)(v1 + 8984) = v728;
  sub_256A49D7C((uint64_t *)(v1 + 8952));
  sub_256AFFB34();
  sub_256AFFB00();
  v729();
  static Catalog.Resource.LLM.DraftModel.ServerTakeawaysTransform()();
  uint64_t v730 = v1026[3];
  sub_256AFFB44(v1026);
  *(void *)(v1 + 9016) = v730;
  sub_256AFFC0C();
  *(void *)(v1 + 9024) = v731;
  sub_256A49D7C((uint64_t *)(v1 + 8992));
  sub_256AFFB34();
  sub_256AFFB00();
  v732();
  static Catalog.Resource.LLM.Adapter.ServerTakeawaysTransform()();
  uint64_t v733 = v1025[3];
  sub_256AFFB44(v1025);
  *(void *)(v1 + 9056) = v733;
  sub_256AFFE5C();
  *(void *)(v1 + 9064) = v734;
  sub_256A49D7C((uint64_t *)(v1 + 9032));
  sub_256AFFB34();
  sub_256AFFB00();
  v735();
  static Catalog.Resource.LLM.ServerConfiguration.ServerTakeawaysTransform()();
  uint64_t v736 = v1024[3];
  sub_256AFFB44(v1024);
  *(void *)(v1 + 9096) = v736;
  sub_256AFFC0C();
  *(void *)(v1 + 9104) = v737;
  sub_256A49D7C((uint64_t *)(v1 + 9072));
  sub_256AFFB34();
  sub_256AFFB00();
  v738();
  static Catalog.Resource.LLM.DraftModel.ServerTextSummarizer()();
  uint64_t v739 = v1023[3];
  sub_256AFFB44(v1023);
  *(void *)(v1 + 9136) = v739;
  sub_256AFFC0C();
  *(void *)(v1 + 9144) = v740;
  sub_256A49D7C((uint64_t *)(v1 + 9112));
  sub_256AFFB34();
  sub_256AFFB00();
  v741();
  static Catalog.Resource.LLM.Adapter.ServerTextSummarizer()();
  uint64_t v742 = v1022[3];
  sub_256AFFB44(v1022);
  *(void *)(v1 + 9176) = v742;
  sub_256AFFE5C();
  *(void *)(v1 + 9184) = v743;
  sub_256A49D7C((uint64_t *)(v1 + 9152));
  sub_256AFFB34();
  sub_256AFFB00();
  v744();
  static Catalog.Resource.LLM.ServerConfiguration.ServerTextSummarizer()();
  uint64_t v745 = v1021[3];
  sub_256AFFB44(v1021);
  *(void *)(v1 + 9216) = v745;
  sub_256AFFC0C();
  *(void *)(v1 + 9224) = v746;
  sub_256A49D7C((uint64_t *)(v1 + 9192));
  sub_256AFFB34();
  sub_256AFFB00();
  v747();
  static Catalog.Resource.Diffusion.Adapter.Sketch()();
  uint64_t v748 = v1020[3];
  sub_256AFFB44(v1020);
  *(void *)(v1 + 9256) = v748;
  sub_256AFFC0C();
  *(void *)(v1 + 9264) = v749;
  sub_256A49D7C((uint64_t *)(v1 + 9232));
  sub_256AFFB34();
  sub_256AFFB00();
  v750();
  static Catalog.Resource.Diffusion.Adapter.SkinToneEmoji()();
  uint64_t v751 = v1019[3];
  sub_256AFFB44(v1019);
  *(void *)(v1 + 9296) = v751;
  sub_256AFFC0C();
  *(void *)(v1 + 9304) = v752;
  sub_256A49D7C((uint64_t *)(v1 + 9272));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v754 = v753();
  static Catalog.Resource.LLM.DraftModel.Summarization()(v1018, v754);
  uint64_t v755 = v1018[3];
  sub_256AFFB44(v1018);
  *(void *)(v1 + 9336) = v755;
  sub_256AFFC0C();
  *(void *)(v1 + 9344) = v756;
  sub_256A49D7C((uint64_t *)(v1 + 9312));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v758 = v757();
  static Catalog.Resource.LLM.Adapter.Summarization()(v1017, v758);
  uint64_t v759 = v1017[3];
  sub_256AFFB44(v1017);
  *(void *)(v1 + 9376) = v759;
  sub_256AFFC0C();
  *(void *)(v1 + 9384) = v760;
  sub_256A49D7C((uint64_t *)(v1 + 9352));
  sub_256AFFB34();
  sub_256AFFB00();
  v761();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitBaseInputDenyList()();
  uint64_t v762 = v1016[3];
  sub_256AFFB44(v1016);
  *(void *)(v1 + 9416) = v762;
  sub_256AFFC0C();
  *(void *)(v1 + 9424) = v763;
  sub_256A49D7C((uint64_t *)(v1 + 9392));
  sub_256AFFB34();
  sub_256AFFB00();
  v764();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitBaseOutputDenyList()();
  uint64_t v765 = v1015[3];
  sub_256AFFB44(v1015);
  *(void *)(v1 + 9456) = v765;
  sub_256AFFC0C();
  *(void *)(v1 + 9464) = v766;
  sub_256A49D7C((uint64_t *)(v1 + 9432));
  sub_256AFFB34();
  sub_256AFFB00();
  v767();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryInputDenyList()();
  uint64_t v768 = v1014[3];
  sub_256AFFB44(v1014);
  *(void *)(v1 + 9496) = v768;
  sub_256AFFC0C();
  *(void *)(v1 + 9504) = v769;
  sub_256A49D7C((uint64_t *)(v1 + 9472));
  sub_256AFFB34();
  sub_256AFFB00();
  v770();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryOnDemandInputDenyList()();
  uint64_t v771 = v1013[3];
  sub_256AFFB44(v1013);
  *(void *)(v1 + 9536) = v771;
  sub_256AFFC0C();
  *(void *)(v1 + 9544) = v772;
  sub_256A49D7C((uint64_t *)(v1 + 9512));
  sub_256AFFB34();
  sub_256AFFB00();
  v773();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryOnDemandOutputDenyList()();
  uint64_t v774 = v1012[3];
  sub_256AFFB44(v1012);
  *(void *)(v1 + 9576) = v774;
  sub_256AFFC0C();
  *(void *)(v1 + 9584) = v775;
  sub_256A49D7C((uint64_t *)(v1 + 9552));
  sub_256AFFB34();
  sub_256AFFB00();
  v776();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryOutputDenyList()();
  uint64_t v777 = v1011[3];
  sub_256AFFB44(v1011);
  *(void *)(v1 + 9616) = v777;
  sub_256AFFC0C();
  *(void *)(v1 + 9624) = v778;
  sub_256A49D7C((uint64_t *)(v1 + 9592));
  sub_256AFFB34();
  sub_256AFFB00();
  v779();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitCUSummaryProactiveInputDenyList()();
  uint64_t v780 = v1010[3];
  sub_256AFFB44(v1010);
  *(void *)(v1 + 9656) = v780;
  sub_256AFFC0C();
  *(void *)(v1 + 9664) = v781;
  sub_256A49D7C((uint64_t *)(v1 + 9632));
  sub_256AFFB34();
  sub_256AFFB00();
  v782();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUSummaryProactiveOutputDenyList()();
  uint64_t v783 = v1009[3];
  sub_256AFFB44(v1009);
  *(void *)(v1 + 9696) = v783;
  sub_256AFFC0C();
  *(void *)(v1 + 9704) = v784;
  sub_256A49D7C((uint64_t *)(v1 + 9672));
  sub_256AFFB34();
  sub_256AFFB00();
  v785();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitCUUrgencyInputDenyList()();
  uint64_t v786 = v1008[3];
  sub_256AFFB44(v1008);
  *(void *)(v1 + 9736) = v786;
  sub_256AFFC0C();
  *(void *)(v1 + 9744) = v787;
  sub_256A49D7C((uint64_t *)(v1 + 9712));
  sub_256AFFB34();
  sub_256AFFB00();
  v788();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitCUUrgencyOutputDenyList()();
  uint64_t v789 = v1007[3];
  sub_256AFFB44(v1007);
  *(void *)(v1 + 9776) = v789;
  sub_256AFFC0C();
  *(void *)(v1 + 9784) = v790;
  sub_256A49D7C((uint64_t *)(v1 + 9752));
  sub_256AFFB34();
  sub_256AFFB00();
  v791();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitTextAssistantInputDenyList()();
  uint64_t v792 = v1006[3];
  sub_256AFFB44(v1006);
  *(void *)(v1 + 9816) = v792;
  sub_256AFFC0C();
  *(void *)(v1 + 9824) = v793;
  sub_256A49D7C((uint64_t *)(v1 + 9792));
  sub_256AFFB34();
  sub_256AFFB00();
  v794();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitTextAssistantOutputDenyList()();
  uint64_t v795 = v1005[3];
  sub_256AFFB44(v1005);
  *(void *)(v1 + 9856) = v795;
  sub_256AFFC0C();
  *(void *)(v1 + 9864) = v796;
  sub_256A49D7C((uint64_t *)(v1 + 9832));
  sub_256AFFB34();
  sub_256AFFB00();
  v797();
  static Catalog.Resource.TokenInputDenyList.SummarizationKitVisualPromptInputDenyList()();
  uint64_t v798 = v1004[3];
  sub_256AFFB44(v1004);
  *(void *)(v1 + 9896) = v798;
  sub_256AFFC0C();
  *(void *)(v1 + 9904) = v799;
  sub_256A49D7C((uint64_t *)(v1 + 9872));
  sub_256AFFB34();
  sub_256AFFB00();
  v800();
  static Catalog.Resource.TokenOutputDenyList.SummarizationKitVisualPromptOutputDenyList()();
  uint64_t v801 = v1003[3];
  sub_256AFFB44(v1003);
  *(void *)(v1 + 9936) = v801;
  sub_256AFFC0C();
  *(void *)(v1 + 9944) = v802;
  sub_256A49D7C((uint64_t *)(v1 + 9912));
  sub_256AFFB34();
  sub_256AFFB00();
  v803();
  static Catalog.Resource.LLM.Model.SummarizationTextSummarizerAjaxBase()();
  uint64_t v804 = v1002[3];
  sub_256AFFB44(v1002);
  *(void *)(v1 + 9976) = v804;
  sub_256AFFE5C();
  *(void *)(v1 + 9984) = v805;
  sub_256A49D7C((uint64_t *)(v1 + 9952));
  sub_256AFFB34();
  sub_256AFFB00();
  v806();
  static Catalog.Resource.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()();
  uint64_t v807 = v1001[3];
  sub_256AFFB44(v1001);
  *(void *)(v1 + 10016) = v807;
  sub_256AFFC0C();
  *(void *)(v1 + 10024) = v808;
  sub_256A49D7C((uint64_t *)(v1 + 9992));
  sub_256AFFB34();
  sub_256AFFB00();
  v809();
  static Catalog.Resource.LLM.Model.SummarizationTextSummarizerBase()();
  uint64_t v810 = v1000[3];
  sub_256AFFB44(v1000);
  *(void *)(v1 + 10056) = v810;
  sub_256AFFE5C();
  *(void *)(v1 + 10064) = v811;
  sub_256A49D7C((uint64_t *)(v1 + 10032));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v813 = v812();
  static Catalog.Resource.LLM.DraftModel.TextEventExtraction()(v999, v813);
  uint64_t v814 = v999[3];
  sub_256AFFB44(v999);
  *(void *)(v1 + 10096) = v814;
  sub_256AFFC0C();
  *(void *)(v1 + 10104) = v815;
  sub_256A49D7C((uint64_t *)(v1 + 10072));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v817 = v816();
  static Catalog.Resource.LLM.Adapter.TextEventExtraction()(v998, v817);
  uint64_t v818 = v998[3];
  sub_256AFFB44(v998);
  *(void *)(v1 + 10136) = v818;
  sub_256AFFC0C();
  *(void *)(v1 + 10144) = v819;
  sub_256A49D7C((uint64_t *)(v1 + 10112));
  sub_256AFFB34();
  sub_256AFFB00();
  v820();
  static Catalog.Resource.Sanitizer.TextModerationLM()();
  uint64_t v821 = v997[3];
  sub_256AFFB44(v997);
  *(void *)(v1 + 10176) = v821;
  sub_256AFFC0C();
  *(void *)(v1 + 10184) = v822;
  sub_256A49D7C((uint64_t *)(v1 + 10152));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v824 = v823();
  static Catalog.Resource.LLM.DraftModel.TextPersonExtraction()(v996, v824);
  uint64_t v825 = v996[3];
  sub_256AFFB44(v996);
  *(void *)(v1 + 10216) = v825;
  sub_256AFFC0C();
  *(void *)(v1 + 10224) = v826;
  sub_256A49D7C((uint64_t *)(v1 + 10192));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v828 = v827();
  static Catalog.Resource.LLM.Adapter.TextPersonExtraction()(v995, v828);
  uint64_t v829 = v995[3];
  sub_256AFFB44(v995);
  *(void *)(v1 + 10256) = v829;
  sub_256AFFC0C();
  *(void *)(v1 + 10264) = v830;
  sub_256A49D7C((uint64_t *)(v1 + 10232));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v832 = v831();
  static Catalog.Resource.LLM.DraftModel.UIPreviews()(v994, v832);
  uint64_t v833 = v994[3];
  sub_256AFFB44(v994);
  *(void *)(v1 + 10296) = v833;
  sub_256AFFC0C();
  *(void *)(v1 + 10304) = v834;
  sub_256A49D7C((uint64_t *)(v1 + 10272));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v836 = v835();
  static Catalog.Resource.LLM.Adapter.UIPreviews()(v993, v836);
  uint64_t v837 = v993[3];
  sub_256AFFB44(v993);
  *(void *)(v1 + 10336) = v837;
  sub_256AFFC0C();
  *(void *)(v1 + 10344) = v838;
  sub_256A49D7C((uint64_t *)(v1 + 10312));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v840 = v839();
  static Catalog.Resource.LLM.DraftModel.UrgencyClassification()(v992, v840);
  uint64_t v841 = v992[3];
  sub_256AFFB44(v992);
  *(void *)(v1 + 10376) = v841;
  sub_256AFFC0C();
  *(void *)(v1 + 10384) = v842;
  sub_256A49D7C((uint64_t *)(v1 + 10352));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v844 = v843();
  static Catalog.Resource.LLM.Adapter.UrgencyClassification()(v991, v844);
  uint64_t v845 = v991[3];
  sub_256AFFB44(v991);
  *(void *)(v1 + 10416) = v845;
  sub_256AFFC0C();
  *(void *)(v1 + 10424) = v846;
  sub_256A49D7C((uint64_t *)(v1 + 10392));
  sub_256AFFB34();
  sub_256AFFB00();
  v847();
  static Catalog.Resource.Diffusion.Model.VisualGenerationBase()();
  uint64_t v848 = v990[3];
  sub_256AFFB44(v990);
  *(void *)(v1 + 10456) = v848;
  sub_256AFFC0C();
  *(void *)(v1 + 10464) = v849;
  sub_256A49D7C((uint64_t *)(v1 + 10432));
  sub_256AFFB34();
  sub_256AFFB00();
  v850();
  static Catalog.Resource.TokenInputDenyList.VisualGenerationBaseInputDenyList()();
  uint64_t v851 = v989[3];
  sub_256AFFB44(v989);
  *(void *)(v1 + 10496) = v851;
  sub_256AFFC0C();
  *(void *)(v1 + 10504) = v852;
  sub_256A49D7C((uint64_t *)(v1 + 10472));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v854 = v853();
  static Catalog.Resource.LLM.Model.VisualGenerationQueryHandlingLite()(v988, v854);
  uint64_t v855 = v988[3];
  sub_256AFFB44(v988);
  *(void *)(v1 + 10536) = v855;
  sub_256AFFC0C();
  *(void *)(v1 + 10544) = v856;
  sub_256A49D7C((uint64_t *)(v1 + 10512));
  sub_256AFFB34();
  sub_256AFFB00();
  uint64_t v858 = v857();
  static Catalog.Resource.Tokenizer.VisualGenerationQueryHandlingLiteTokenizer()(v987, v858);
  uint64_t v859 = v987[3];
  sub_256AFFB44(v987);
  *(void *)(v1 + 10576) = v859;
  sub_256AFFC0C();
  *(void *)(v1 + 10584) = v860;
  sub_256A49D7C((uint64_t *)(v1 + 10552));
  sub_256AFFB34();
  sub_256AFFB00();
  v861();
  static Catalog.Resource.LLM.ServerConfiguration.VisualIntelligence()();
  uint64_t v862 = v986[3];
  sub_256AFFB44(v986);
  *(void *)(v1 + 10616) = v862;
  sub_256AFFC0C();
  *(void *)(v1 + 10624) = v863;
  sub_256A49D7C((uint64_t *)(v1 + 10592));
  sub_256AFFB34();
  sub_256AFFB00();
  v864();
  static Catalog.Resource.TokenInputDenyList.VisualIntelligenceInputDenyList()();
  uint64_t v865 = v985[3];
  sub_256AFFB44(v985);
  *(void *)(v1 + 10656) = v865;
  sub_256AFFC0C();
  *(void *)(v1 + 10664) = v866;
  sub_256A49D7C((uint64_t *)(v1 + 10632));
  sub_256AFFB34();
  sub_256AFFB00();
  v867();
  static Catalog.Resource.TokenOutputDenyList.VisualIntelligenceOutputDenyList()();
  uint64_t v868 = v984[3];
  sub_256AFFB44(v984);
  *(void *)(v1 + 10696) = v868;
  sub_256AFFC0C();
  *(void *)(v1 + 10704) = v869;
  sub_256A49D7C((uint64_t *)(v1 + 10672));
  sub_256AFFB34();
  sub_256AFFB00();
  v870();
  static Catalog.Resource.TokenInputDenyList.WritingToolsBulletsTransformInputDenyList()();
  uint64_t v871 = v983[3];
  sub_256AFFB44(v983);
  *(void *)(v1 + 10736) = v871;
  sub_256AFFC0C();
  *(void *)(v1 + 10744) = v872;
  sub_256A49D7C((uint64_t *)(v1 + 10712));
  sub_256AFFB34();
  sub_256AFFB00();
  v873();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsBulletsTransformOutputDenyList()();
  uint64_t v874 = v982[3];
  sub_256AFFB44(v982);
  *(void *)(v1 + 10776) = v874;
  sub_256AFFC0C();
  *(void *)(v1 + 10784) = v875;
  sub_256A49D7C((uint64_t *)(v1 + 10752));
  sub_256AFFB34();
  sub_256AFFB00();
  v876();
  static Catalog.Resource.TokenInputDenyList.WritingToolsComposeInputDenyList()();
  uint64_t v877 = v981[3];
  sub_256AFFB44(v981);
  *(void *)(v1 + 10816) = v877;
  sub_256AFFC0C();
  *(void *)(v1 + 10824) = v878;
  sub_256A49D7C((uint64_t *)(v1 + 10792));
  sub_256AFFB34();
  sub_256AFFB00();
  v879();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsComposeOutputDenyList()();
  uint64_t v880 = v980[3];
  sub_256AFFB44(v980);
  *(void *)(v1 + 10856) = v880;
  sub_256AFFC0C();
  *(void *)(v1 + 10864) = v881;
  sub_256A49D7C((uint64_t *)(v1 + 10832));
  sub_256AFFB34();
  sub_256AFFB00();
  v882();
  static Catalog.Resource.TokenInputDenyList.WritingToolsComposeRecentsSummariesInputDenyList()();
  uint64_t v883 = v979[3];
  sub_256AFFB44(v979);
  *(void *)(v1 + 10896) = v883;
  sub_256AFFC0C();
  *(void *)(v1 + 10904) = v884;
  sub_256A49D7C((uint64_t *)(v1 + 10872));
  sub_256AFFB34();
  sub_256AFFB00();
  v885();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsComposeRecentsSummariesOutputDenyList()();
  uint64_t v886 = v978[3];
  sub_256AFFB44(v978);
  *(void *)(v1 + 10936) = v886;
  sub_256AFFC0C();
  *(void *)(v1 + 10944) = v887;
  sub_256A49D7C((uint64_t *)(v1 + 10912));
  sub_256AFFB34();
  sub_256AFFB00();
  v888();
  static Catalog.Resource.TokenInputDenyList.WritingToolsConciseToneInputDenyList()();
  uint64_t v889 = v977[3];
  sub_256AFFB44(v977);
  *(void *)(v1 + 10976) = v889;
  sub_256AFFC0C();
  *(void *)(v1 + 10984) = v890;
  sub_256A49D7C((uint64_t *)(v1 + 10952));
  sub_256AFFB34();
  sub_256AFFB00();
  v891();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsConciseToneOutputDenyList()();
  uint64_t v892 = v976[3];
  sub_256AFFB44(v976);
  *(void *)(v1 + 11016) = v892;
  sub_256AFFC0C();
  *(void *)(v1 + 11024) = v893;
  sub_256A49D7C((uint64_t *)(v1 + 10992));
  sub_256AFFB34();
  sub_256AFFB00();
  v894();
  static Catalog.Resource.TokenInputDenyList.WritingToolsFriendlyToneInputDenyList()();
  uint64_t v895 = v975[3];
  sub_256AFFB44(v975);
  *(void *)(v1 + 11056) = v895;
  sub_256AFFC0C();
  *(void *)(v1 + 11064) = v896;
  sub_256A49D7C((uint64_t *)(v1 + 11032));
  sub_256AFFB34();
  sub_256AFFB00();
  v897();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsFriendlyToneOutputDenyList()();
  uint64_t v898 = v974[3];
  sub_256AFFB44(v974);
  *(void *)(v1 + 11096) = v898;
  sub_256AFFC0C();
  *(void *)(v1 + 11104) = v899;
  sub_256A49D7C((uint64_t *)(v1 + 11072));
  sub_256AFFB34();
  sub_256AFFB00();
  v900();
  static Catalog.Resource.TokenInputDenyList.WritingToolsMagicRewriteInputDenyList()();
  uint64_t v901 = v973[3];
  sub_256AFFB44(v973);
  *(void *)(v1 + 11136) = v901;
  sub_256AFFC0C();
  *(void *)(v1 + 11144) = v902;
  sub_256A49D7C((uint64_t *)(v1 + 11112));
  sub_256AFFB34();
  sub_256AFFB00();
  v903();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsMagicRewriteOutputDenyList()();
  uint64_t v904 = v972[3];
  sub_256AFFB44(v972);
  *(void *)(v1 + 11176) = v904;
  sub_256AFFC0C();
  *(void *)(v1 + 11184) = v905;
  sub_256A49D7C((uint64_t *)(v1 + 11152));
  sub_256AFFB34();
  sub_256AFFB00();
  v906();
  static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedSchemaInputDenyList()();
  uint64_t v907 = v971[3];
  sub_256AFFB44(v971);
  *(void *)(v1 + 11216) = v907;
  sub_256AFFC0C();
  *(void *)(v1 + 11224) = v908;
  sub_256A49D7C((uint64_t *)(v1 + 11192));
  sub_256AFFB34();
  sub_256AFFB00();
  v909();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedSchemaOutputDenyList()();
  uint64_t v910 = v970[3];
  sub_256AFFB44(v970);
  *(void *)(v1 + 11256) = v910;
  sub_256AFFC0C();
  *(void *)(v1 + 11264) = v911;
  sub_256A49D7C((uint64_t *)(v1 + 11232));
  sub_256AFFB34();
  sub_256AFFB00();
  v912();
  static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneBaseInputDenyList()();
  uint64_t v913 = v969[3];
  sub_256AFFB44(v969);
  *(void *)(v1 + 11296) = v913;
  sub_256AFFC0C();
  *(void *)(v1 + 11304) = v914;
  sub_256A49D7C((uint64_t *)(v1 + 11272));
  sub_256AFFB34();
  sub_256AFFB00();
  v915();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneBaseOutputDenyList()();
  uint64_t v916 = v968[3];
  sub_256AFFB44(v968);
  *(void *)(v1 + 11336) = v916;
  sub_256AFFC0C();
  *(void *)(v1 + 11344) = v917;
  sub_256A49D7C((uint64_t *)(v1 + 11312));
  sub_256AFFB34();
  sub_256AFFB00();
  v918();
  static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneInputDenyList()();
  uint64_t v919 = v967[3];
  sub_256AFFB44(v967);
  *(void *)(v1 + 11376) = v919;
  sub_256AFFC0C();
  *(void *)(v1 + 11384) = v920;
  sub_256A49D7C((uint64_t *)(v1 + 11352));
  sub_256AFFB34();
  sub_256AFFB00();
  v921();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneOutputDenyList()();
  uint64_t v922 = v966[3];
  sub_256AFFB44(v966);
  *(void *)(v1 + 11416) = v922;
  sub_256AFFC0C();
  *(void *)(v1 + 11424) = v923;
  sub_256A49D7C((uint64_t *)(v1 + 11392));
  sub_256AFFB34();
  sub_256AFFB00();
  v924();
  static Catalog.Resource.TokenInputDenyList.WritingToolsOpenEndedToneQueryResponseInputDenyList()();
  uint64_t v925 = v965[3];
  sub_256AFFB44(v965);
  *(void *)(v1 + 11456) = v925;
  sub_256AFFC0C();
  *(void *)(v1 + 11464) = v926;
  sub_256A49D7C((uint64_t *)(v1 + 11432));
  sub_256AFFB34();
  sub_256AFFB00();
  v927();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsOpenEndedToneQueryResponseOutputDenyList()();
  uint64_t v928 = v964[3];
  sub_256AFFB44(v964);
  *(void *)(v1 + 11496) = v928;
  sub_256AFFC0C();
  *(void *)(v1 + 11504) = v929;
  sub_256A49D7C((uint64_t *)(v1 + 11472));
  sub_256AFFB34();
  sub_256AFFB00();
  v930();
  static Catalog.Resource.TokenInputDenyList.WritingToolsProfessionalToneInputDenyList()();
  uint64_t v931 = v963[3];
  sub_256AFFB44(v963);
  *(void *)(v1 + 11536) = v931;
  sub_256AFFC0C();
  *(void *)(v1 + 11544) = v932;
  sub_256A49D7C((uint64_t *)(v1 + 11512));
  sub_256AFFB34();
  sub_256AFFB00();
  v933();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsProfessionalToneOutputDenyList()();
  uint64_t v934 = v962[3];
  sub_256AFFB44(v962);
  *(void *)(v1 + 11576) = v934;
  sub_256AFFC0C();
  *(void *)(v1 + 11584) = v935;
  sub_256A49D7C((uint64_t *)(v1 + 11552));
  sub_256AFFB34();
  sub_256AFFB00();
  v936();
  static Catalog.Resource.TokenInputDenyList.WritingToolsProofreadingReviewInputDenyList()();
  uint64_t v937 = v961[3];
  sub_256AFFB44(v961);
  *(void *)(v1 + 11616) = v937;
  sub_256AFFC0C();
  *(void *)(v1 + 11624) = v938;
  sub_256A49D7C((uint64_t *)(v1 + 11592));
  sub_256AFFB34();
  sub_256AFFB00();
  v939();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsProofreadingReviewOutputDenyList()();
  uint64_t v940 = v960[3];
  sub_256AFFB44(v960);
  *(void *)(v1 + 11656) = v940;
  sub_256AFFC0C();
  *(void *)(v1 + 11664) = v941;
  sub_256A49D7C((uint64_t *)(v1 + 11632));
  sub_256AFFB34();
  sub_256AFFB00();
  v942();
  static Catalog.Resource.TokenInputDenyList.WritingToolsTablesTransformInputDenyList()();
  uint64_t v943 = v959[3];
  sub_256AFFB44(v959);
  *(void *)(v1 + 11696) = v943;
  sub_256AFFC0C();
  *(void *)(v1 + 11704) = v944;
  sub_256A49D7C((uint64_t *)(v1 + 11672));
  sub_256AFFB34();
  sub_256AFFB00();
  v945();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsTablesTransformOutputDenyList()();
  uint64_t v946 = v958[3];
  sub_256AFFB44(v958);
  *(void *)(v1 + 11736) = v946;
  sub_256AFFC0C();
  *(void *)(v1 + 11744) = v947;
  sub_256A49D7C((uint64_t *)(v1 + 11712));
  sub_256AFFB34();
  sub_256AFFB00();
  v948();
  static Catalog.Resource.TokenInputDenyList.WritingToolsTakeawaysTransformInputDenyList()();
  uint64_t v949 = v957[3];
  sub_256AFFB44(v957);
  *(void *)(v1 + 11776) = v949;
  sub_256AFFC0C();
  *(void *)(v1 + 11784) = v950;
  sub_256A49D7C((uint64_t *)(v1 + 11752));
  sub_256AFFB34();
  sub_256AFFB00();
  v951();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsTakeawaysTransformOutputDenyList()();
  uint64_t v952 = v956[3];
  sub_256AFFB44(v956);
  *(void *)(v1 + 11816) = v952;
  sub_256AFFC0C();
  *(void *)(v1 + 11824) = v953;
  sub_256A49D7C((uint64_t *)(v1 + 11792));
  sub_256AFFB34();
  sub_256AFFB00();
  v954();
  sub_256A39DB4((uint64_t)v956);
  sub_256A39DB4((uint64_t)v957);
  sub_256A39DB4((uint64_t)v958);
  sub_256A39DB4((uint64_t)v959);
  sub_256A39DB4((uint64_t)v960);
  sub_256A39DB4((uint64_t)v961);
  sub_256A39DB4((uint64_t)v962);
  sub_256A39DB4((uint64_t)v963);
  sub_256A39DB4((uint64_t)v964);
  sub_256A39DB4((uint64_t)v965);
  sub_256A39DB4((uint64_t)v966);
  sub_256A39DB4((uint64_t)v967);
  sub_256A39DB4((uint64_t)v968);
  sub_256A39DB4((uint64_t)v969);
  sub_256A39DB4((uint64_t)v970);
  sub_256A39DB4((uint64_t)v971);
  sub_256A39DB4((uint64_t)v972);
  sub_256A39DB4((uint64_t)v973);
  sub_256A39DB4((uint64_t)v974);
  sub_256A39DB4((uint64_t)v975);
  sub_256A39DB4((uint64_t)v976);
  sub_256A39DB4((uint64_t)v977);
  sub_256A39DB4((uint64_t)v978);
  sub_256A39DB4((uint64_t)v979);
  sub_256A39DB4((uint64_t)v980);
  sub_256A39DB4((uint64_t)v981);
  sub_256A39DB4((uint64_t)v982);
  sub_256A39DB4((uint64_t)v983);
  sub_256A39DB4((uint64_t)v984);
  sub_256A39DB4((uint64_t)v985);
  sub_256A39DB4((uint64_t)v986);
  sub_256A39DB4((uint64_t)v987);
  sub_256A39DB4((uint64_t)v988);
  sub_256A39DB4((uint64_t)v989);
  sub_256A39DB4((uint64_t)v990);
  sub_256A39DB4((uint64_t)v991);
  sub_256A39DB4((uint64_t)v992);
  sub_256A39DB4((uint64_t)v993);
  sub_256A39DB4((uint64_t)v994);
  sub_256A39DB4((uint64_t)v995);
  sub_256A39DB4((uint64_t)v996);
  sub_256A39DB4((uint64_t)v997);
  sub_256A39DB4((uint64_t)v998);
  sub_256A39DB4((uint64_t)v999);
  sub_256A39DB4((uint64_t)v1000);
  sub_256A39DB4((uint64_t)v1001);
  sub_256A39DB4((uint64_t)v1002);
  sub_256A39DB4((uint64_t)v1003);
  sub_256A39DB4((uint64_t)v1004);
  sub_256A39DB4((uint64_t)v1005);
  sub_256A39DB4((uint64_t)v1006);
  sub_256A39DB4((uint64_t)v1007);
  sub_256A39DB4((uint64_t)v1008);
  sub_256A39DB4((uint64_t)v1009);
  sub_256A39DB4((uint64_t)v1010);
  sub_256A39DB4((uint64_t)v1011);
  sub_256A39DB4((uint64_t)v1012);
  sub_256A39DB4((uint64_t)v1013);
  sub_256A39DB4((uint64_t)v1014);
  sub_256A39DB4((uint64_t)v1015);
  sub_256A39DB4((uint64_t)v1016);
  sub_256A39DB4((uint64_t)v1017);
  sub_256A39DB4((uint64_t)v1018);
  sub_256A39DB4((uint64_t)v1019);
  sub_256A39DB4((uint64_t)v1020);
  sub_256A39DB4((uint64_t)v1021);
  sub_256A39DB4((uint64_t)v1022);
  sub_256A39DB4((uint64_t)v1023);
  sub_256A39DB4((uint64_t)v1024);
  sub_256A39DB4((uint64_t)v1025);
  sub_256A39DB4((uint64_t)v1026);
  sub_256A39DB4((uint64_t)v1027);
  sub_256A39DB4((uint64_t)v1028);
  sub_256A39DB4((uint64_t)v1029);
  sub_256A39DB4((uint64_t)v1030);
  sub_256A39DB4((uint64_t)v1031);
  sub_256A39DB4((uint64_t)v1032);
  sub_256A39DB4((uint64_t)v1033);
  sub_256A39DB4((uint64_t)v1034);
  sub_256A39DB4((uint64_t)v1035);
  sub_256A39DB4((uint64_t)v1036);
  sub_256A39DB4((uint64_t)v1037);
  sub_256A39DB4((uint64_t)v1038);
  sub_256A39DB4((uint64_t)v1039);
  sub_256A39DB4((uint64_t)v1040);
  sub_256A39DB4((uint64_t)v1041);
  sub_256A39DB4((uint64_t)v1042);
  sub_256A39DB4((uint64_t)v1043);
  sub_256A39DB4((uint64_t)v1044);
  sub_256A39DB4((uint64_t)v1045);
  sub_256A39DB4((uint64_t)v1046);
  sub_256A39DB4((uint64_t)v1047);
  sub_256A39DB4((uint64_t)v1048);
  sub_256A39DB4((uint64_t)v1049);
  sub_256A39DB4((uint64_t)v1050);
  sub_256A39DB4((uint64_t)v1051);
  sub_256A39DB4((uint64_t)v1052);
  sub_256A39DB4((uint64_t)v1053);
  sub_256A39DB4((uint64_t)v1054);
  sub_256A39DB4((uint64_t)v1055);
  sub_256A39DB4((uint64_t)v1056);
  sub_256A39DB4((uint64_t)v1057);
  sub_256A39DB4((uint64_t)v1058);
  sub_256A39DB4((uint64_t)v1059);
  sub_256A39DB4((uint64_t)v1060);
  sub_256A39DB4((uint64_t)v1061);
  sub_256A39DB4((uint64_t)v1062);
  sub_256A39DB4((uint64_t)v1063);
  sub_256A39DB4((uint64_t)v1064);
  sub_256A39DB4((uint64_t)v1065);
  sub_256A39DB4((uint64_t)v1066);
  sub_256A39DB4((uint64_t)v1067);
  sub_256A39DB4((uint64_t)v1068);
  sub_256A39DB4((uint64_t)v1069);
  sub_256A39DB4((uint64_t)v1070);
  sub_256A39DB4((uint64_t)v1071);
  sub_256A39DB4((uint64_t)v1072);
  sub_256A39DB4((uint64_t)v1073);
  sub_256A39DB4((uint64_t)v1074);
  sub_256A39DB4((uint64_t)v1075);
  sub_256A39DB4((uint64_t)v1076);
  sub_256A39DB4((uint64_t)v1077);
  sub_256A39DB4((uint64_t)v1078);
  sub_256A39DB4((uint64_t)v1079);
  sub_256A39DB4((uint64_t)v1080);
  sub_256A39DB4((uint64_t)v1081);
  sub_256A39DB4((uint64_t)v1082);
  sub_256A39DB4((uint64_t)v1083);
  sub_256A39DB4((uint64_t)v1084);
  sub_256A39DB4((uint64_t)v1085);
  sub_256A39DB4((uint64_t)v1086);
  sub_256A39DB4((uint64_t)v1087);
  sub_256A39DB4((uint64_t)v1088);
  sub_256A39DB4((uint64_t)v1089);
  sub_256A39DB4((uint64_t)v1090);
  sub_256A39DB4((uint64_t)v1091);
  sub_256A39DB4((uint64_t)v1092);
  sub_256A39DB4((uint64_t)v1093);
  sub_256A39DB4((uint64_t)v1094);
  sub_256A39DB4((uint64_t)v1095);
  sub_256A39DB4((uint64_t)v1096);
  sub_256A39DB4((uint64_t)v1097);
  sub_256A39DB4((uint64_t)v1098);
  sub_256A39DB4((uint64_t)v1099);
  sub_256A39DB4((uint64_t)v1100);
  sub_256A39DB4((uint64_t)v1101);
  sub_256A39DB4((uint64_t)v1102);
  sub_256A39DB4((uint64_t)v1103);
  sub_256A39DB4((uint64_t)v1104);
  sub_256A39DB4((uint64_t)v1105);
  sub_256A39DB4((uint64_t)v1106);
  sub_256A39DB4((uint64_t)v1107);
  sub_256A39DB4((uint64_t)v1108);
  sub_256A39DB4((uint64_t)v1109);
  sub_256A39DB4((uint64_t)v1110);
  sub_256A39DB4((uint64_t)v1111);
  sub_256A39DB4((uint64_t)v1112);
  sub_256A39DB4((uint64_t)v1113);
  sub_256A39DB4((uint64_t)v1114);
  sub_256A39DB4((uint64_t)v1115);
  sub_256A39DB4((uint64_t)v1116);
  sub_256A39DB4((uint64_t)v1117);
  sub_256A39DB4((uint64_t)v1118);
  sub_256A39DB4((uint64_t)v1119);
  sub_256A39DB4((uint64_t)v1120);
  sub_256A39DB4((uint64_t)v1121);
  sub_256A39DB4((uint64_t)v1122);
  sub_256A39DB4((uint64_t)v1123);
  sub_256A39DB4((uint64_t)v1124);
  sub_256A39DB4((uint64_t)v1125);
  sub_256A39DB4((uint64_t)v1126);
  sub_256A39DB4((uint64_t)v1127);
  sub_256A39DB4((uint64_t)v1128);
  sub_256A39DB4((uint64_t)v1129);
  sub_256A39DB4((uint64_t)v1130);
  sub_256A39DB4((uint64_t)v1131);
  sub_256A39DB4((uint64_t)v1132);
  sub_256A39DB4((uint64_t)v1133);
  sub_256A39DB4((uint64_t)v1134);
  sub_256A39DB4((uint64_t)v1135);
  sub_256A39DB4((uint64_t)v1136);
  sub_256A39DB4((uint64_t)v1137);
  sub_256A39DB4((uint64_t)v1138);
  sub_256A39DB4((uint64_t)v1139);
  sub_256A39DB4((uint64_t)v1140);
  sub_256A39DB4((uint64_t)v1141);
  sub_256A39DB4((uint64_t)v1142);
  sub_256A39DB4((uint64_t)v1143);
  sub_256A39DB4((uint64_t)v1144);
  sub_256A39DB4((uint64_t)v1145);
  sub_256A39DB4((uint64_t)v1146);
  sub_256A39DB4((uint64_t)v1147);
  sub_256A39DB4((uint64_t)v1148);
  sub_256A39DB4((uint64_t)v1149);
  sub_256A39DB4((uint64_t)v1150);
  sub_256A39DB4((uint64_t)v1151);
  sub_256A39DB4((uint64_t)v1152);
  sub_256A39DB4((uint64_t)v1153);
  sub_256A39DB4((uint64_t)v1154);
  sub_256A39DB4((uint64_t)v1155);
  sub_256A39DB4((uint64_t)v1156);
  sub_256A39DB4((uint64_t)v1157);
  sub_256A39DB4((uint64_t)v1158);
  sub_256A39DB4((uint64_t)v1159);
  sub_256A39DB4((uint64_t)v1160);
  sub_256A39DB4((uint64_t)v1161);
  sub_256A39DB4((uint64_t)v1162);
  sub_256A39DB4((uint64_t)v1163);
  sub_256A39DB4((uint64_t)v1164);
  sub_256A39DB4((uint64_t)v1165);
  sub_256A39DB4((uint64_t)v1166);
  sub_256A39DB4((uint64_t)v1167);
  sub_256A39DB4((uint64_t)v1168);
  sub_256A39DB4((uint64_t)v1169);
  sub_256A39DB4((uint64_t)v1170);
  sub_256A39DB4((uint64_t)v1171);
  sub_256A39DB4((uint64_t)v1172);
  sub_256A39DB4((uint64_t)v1173);
  sub_256A39DB4((uint64_t)v1174);
  sub_256A39DB4((uint64_t)v1175);
  sub_256A39DB4((uint64_t)v1176);
  sub_256A39DB4((uint64_t)v1177);
  sub_256A39DB4((uint64_t)v1178);
  sub_256A39DB4((uint64_t)v1179);
  sub_256A39DB4((uint64_t)v1180);
  sub_256A39DB4((uint64_t)v1181);
  sub_256A39DB4((uint64_t)v1182);
  sub_256A39DB4((uint64_t)v1183);
  sub_256A39DB4((uint64_t)v1184);
  sub_256A39DB4((uint64_t)v1185);
  sub_256A39DB4((uint64_t)v1186);
  sub_256A39DB4((uint64_t)v1187);
  sub_256A39DB4((uint64_t)v1188);
  sub_256A39DB4((uint64_t)v1189);
  sub_256A39DB4((uint64_t)v1190);
  sub_256A39DB4((uint64_t)v1191);
  sub_256A39DB4((uint64_t)v1192);
  sub_256A39DB4((uint64_t)v1193);
  sub_256A39DB4((uint64_t)v1194);
  sub_256A39DB4((uint64_t)v1195);
  sub_256A39DB4((uint64_t)v1196);
  sub_256A39DB4((uint64_t)v1197);
  sub_256A39DB4((uint64_t)v1198);
  sub_256A39DB4((uint64_t)v1199);
  sub_256A39DB4((uint64_t)v1200);
  sub_256A39DB4((uint64_t)v1201);
  sub_256A39DB4((uint64_t)v1202);
  sub_256A39DB4((uint64_t)v1203);
  sub_256A39DB4((uint64_t)v1204);
  sub_256A39DB4((uint64_t)v1205);
  sub_256A39DB4((uint64_t)v1206);
  sub_256A39DB4((uint64_t)v1207);
  sub_256A39DB4((uint64_t)v1208);
  sub_256A39DB4((uint64_t)v1209);
  sub_256A39DB4((uint64_t)v1210);
  sub_256A39DB4((uint64_t)v1211);
  sub_256A39DB4((uint64_t)v1212);
  sub_256A39DB4((uint64_t)v1213);
  sub_256A39DB4((uint64_t)v1214);
  sub_256A39DB4((uint64_t)v1215);
  sub_256A39DB4((uint64_t)v1216);
  sub_256A39DB4((uint64_t)v1217);
  sub_256A39DB4((uint64_t)v1218);
  sub_256A39DB4((uint64_t)v1219);
  sub_256A39DB4((uint64_t)v1220);
  sub_256A39DB4((uint64_t)v1221);
  sub_256A39DB4((uint64_t)v1222);
  sub_256A39DB4((uint64_t)v1223);
  sub_256A39DB4((uint64_t)v1224);
  sub_256A39DB4((uint64_t)v1225);
  sub_256A39DB4((uint64_t)v1226);
  sub_256A39DB4((uint64_t)v1227);
  sub_256A39DB4((uint64_t)v1228);
  sub_256A39DB4((uint64_t)v1229);
  sub_256A39DB4((uint64_t)v1230);
  sub_256A39DB4((uint64_t)v1231);
  sub_256A39DB4((uint64_t)v1232);
  sub_256A39DB4((uint64_t)v1233);
  sub_256A39DB4((uint64_t)v1234);
  sub_256A39DB4((uint64_t)v1235);
  sub_256A39DB4((uint64_t)v1236);
  sub_256A39DB4((uint64_t)v1237);
  sub_256A39DB4((uint64_t)v1238);
  sub_256A39DB4((uint64_t)v1239);
  sub_256A39DB4((uint64_t)v1240);
  sub_256A39DB4((uint64_t)v1241);
  sub_256A39DB4((uint64_t)v1242);
  sub_256A39DB4((uint64_t)v1243);
  sub_256A39DB4((uint64_t)v1244);
  sub_256A39DB4((uint64_t)v1245);
  sub_256A39DB4((uint64_t)v1246);
  sub_256A39DB4((uint64_t)v1247);
  sub_256A39DB4((uint64_t)v1248);
  sub_256A39DB4((uint64_t)v1249);
  sub_256A39DB4((uint64_t)v1250);
  return v1;
}

uint64_t sub_256AFF160()
{
  uint64_t result = sub_256A3CF68((uint64_t)&unk_2705F0670);
  qword_269F7CB58 = result;
  return result;
}

uint64_t static Catalog.Resource.allResourceIDs.getter()
{
  return sub_256AFF384(&qword_269F78A90);
}

uint64_t sub_256AFF1AC()
{
  uint64_t result = sub_256A3CF68((uint64_t)&unk_2705F32A8);
  qword_26B2B63B0 = result;
  return result;
}

uint64_t static Catalog.Resource.explicitRequestResources.getter()
{
  return sub_256AFF384(&qword_26B2B63B8);
}

uint64_t sub_256AFF1F8()
{
  sub_256A39D2C(&qword_26B2B36F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_256B78A50;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x8000000256B49480;
  *(void *)(inited + 48) = &unk_2705F30A0;
  *(void *)(inited + 56) = 0xD000000000000026;
  *(void *)(inited + 64) = 0x8000000256B4DA70;
  *(void *)(inited + 72) = &unk_2705F2ED0;
  *(void *)(inited + 80) = 0xD000000000000023;
  *(void *)(inited + 88) = 0x8000000256B4D3D0;
  *(void *)(inited + 96) = &unk_2705F2F50;
  *(void *)(inited + 104) = 0xD000000000000023;
  *(void *)(inited + 112) = 0x8000000256B49D10;
  *(void *)(inited + 120) = &unk_2705F2F90;
  *(void *)(inited + 128) = 0xD00000000000002DLL;
  *(void *)(inited + 136) = 0x8000000256B4DCF0;
  *(void *)(inited + 144) = &unk_2705F3020;
  *(void *)(inited + 152) = 0xD00000000000002FLL;
  *(void *)(inited + 160) = 0x8000000256B4DBB0;
  *(void *)(inited + 168) = &unk_2705F3060;
  *(void *)(inited + 176) = 0xD000000000000014;
  *(void *)(inited + 184) = 0x8000000256B4AB90;
  *(void *)(inited + 192) = &unk_27060CE10;
  sub_256A39D2C(&qword_26B2B6320);
  uint64_t result = sub_256B3F600();
  qword_26B2B3560 = result;
  return result;
}

uint64_t static Catalog.Resource.usageTypesForAssetSet.getter()
{
  return sub_256AFF384(qword_26B2B3568);
}

uint64_t sub_256AFF384(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ModelCatalog::RequestResourcesKey_optional __swiftcall RequestResourcesKey.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_256B3FCD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static RequestResourcesKey.allCases.getter()
{
  return &unk_27060CE40;
}

ModelCatalog::RequestResourcesKey_optional sub_256AFF438(Swift::String *a1)
{
  return RequestResourcesKey.init(rawValue:)(*a1);
}

unint64_t sub_256AFF444@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = RequestResourcesKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_256AFF470()
{
  unint64_t result = qword_26B2B35D8;
  if (!qword_26B2B35D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B35D8);
  }
  return result;
}

uint64_t sub_256AFF4BC()
{
  return sub_256A55EAC();
}

uint64_t sub_256AFF4C4(uint64_t a1)
{
  return sub_256A86918(a1, *v1);
}

uint64_t sub_256AFF4CC()
{
  return sub_256A561D8();
}

uint64_t sub_256AFF4D4(unsigned __int8 *a1, char *a2)
{
  return sub_256B026BC(*a1, *a2);
}

uint64_t sub_256AFF4E0()
{
  return sub_256B3F830();
}

uint64_t sub_256AFF540()
{
  return sub_256B3F810();
}

unint64_t sub_256AFF594()
{
  unint64_t result = qword_269F7CB68;
  if (!qword_269F7CB68)
  {
    sub_256A49664(&qword_269F7CB70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB68);
  }
  return result;
}

void sub_256AFF5E8(void *a1@<X8>)
{
  *a1 = &unk_27060CE40;
}

ModelCatalog::Tag_optional sub_256AFF5F8(Swift::String *a1)
{
  return Tag.init(rawValue:)(*a1);
}

unint64_t sub_256AFF604@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Tag.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_256AFF630()
{
  unint64_t result = qword_26B2B3858;
  if (!qword_26B2B3858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B3858);
  }
  return result;
}

uint64_t sub_256AFF67C()
{
  return sub_256A55F04();
}

uint64_t sub_256AFF684()
{
  return sub_256A868CC();
}

uint64_t sub_256AFF68C()
{
  return sub_256A55F30();
}

unint64_t sub_256AFF694()
{
  return sub_256B02634();
}

uint64_t sub_256AFF6A0()
{
  return sub_256B3F830();
}

uint64_t sub_256AFF700()
{
  return sub_256B3F810();
}

uint64_t getEnumTagSinglePayload for RequestResourcesKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RequestResourcesKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256AFF8A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestResourcesKey()
{
  return &type metadata for RequestResourcesKey;
}

uint64_t getEnumTagSinglePayload for Tag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD8)
  {
    if (a2 + 40 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 40) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 41;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x29;
  int v5 = v6 - 41;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Tag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 40 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 40) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD7)
  {
    unsigned int v6 = ((a2 - 216) >> 8) + 1;
    *unint64_t result = a2 + 40;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256AFFA30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 40;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tag()
{
  return &type metadata for Tag;
}

unint64_t sub_256AFFA68()
{
  unint64_t result = qword_26B2B5998;
  if (!qword_26B2B5998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5998);
  }
  return result;
}

unint64_t sub_256AFFAB4()
{
  unint64_t result = qword_26B2B5858;
  if (!qword_26B2B5858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B5858);
  }
  return result;
}

uint64_t sub_256AFFB14()
{
  return sub_256B3FC70();
}

void *sub_256AFFB44(void *a1)
{
  return sub_256A39D70(a1, v1);
}

uint64_t sub_256AFFB60()
{
  return sub_256B3F760();
}

uint64_t sub_256AFFBB4(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  return MEMORY[0x270F9ED70]((uint64_t *)va, va1);
}

double sub_256AFFC50()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 130) = 0u;
  return result;
}

double sub_256AFFC70()
{
  return 0.0;
}

uint64_t sub_256AFFCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return AssetBackedServerConfigurationBase.init(configuration:)(va);
}

uint64_t sub_256AFFD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return AssetBackedTokenOutputDenyListBase.init(configuration:)(va);
}

uint64_t sub_256AFFD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return AssetBackedTokenInputDenyListBase.init(configuration:)(va);
}

uint64_t sub_256AFFDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return LLMAdapterBase.init(configuration:)(va);
}

uint64_t sub_256AFFDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return LLMDraftModelBase.init(configuration:)(va);
}

uint64_t sub_256AFFE6C()
{
  return v0 + 28;
}

void sub_256AFFEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  *uint64_t v44 = a1;
  AssetBackedLLMDraftModelBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_256AFFFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  *uint64_t v44 = a1;
  AssetBackedLLMModelBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_256AFFFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  *uint64_t v44 = a1;
  AssetBackedLLMAdapterBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_256B00018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  *uint64_t v44 = a1;
  AssetBackedTokenizerBase.init(configuration:)((uint64_t)&a14, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

uint64_t sub_256B00048()
{
  return v0 + 64;
}

uint64_t sub_256B00074()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00094()
{
  return sub_256B3FB70();
}

uint64_t sub_256B000B4()
{
  return v0 + 70;
}

uint64_t sub_256B001C4()
{
  return sub_256B3FB70();
}

uint64_t sub_256B001E4()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00204()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return AssetBackedDiffusionAdapterBase.init(configuration:)(va);
}

uint64_t sub_256B00298()
{
  return sub_256B3FB70();
}

uint64_t sub_256B002B8()
{
  return sub_256B3FB70();
}

uint64_t sub_256B002D8()
{
  return sub_256B3FB70();
}

double sub_256B002F8@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 130) = 0u;
  return result;
}

uint64_t sub_256B00448()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00468()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00488()
{
  return sub_256B3FB70();
}

uint64_t sub_256B004A8()
{
  return sub_256B3FB70();
}

uint64_t sub_256B004DC()
{
  return v0 + 62;
}

uint64_t sub_256B004EC()
{
  return v0 + 71;
}

uint64_t sub_256B00530()
{
  return v0 + 69;
}

uint64_t sub_256B00540()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00560()
{
  return sub_256B3FB70();
}

uint64_t sub_256B005C0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B005E0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00600()
{
  return sub_256B3FB70();
}

void sub_256B00620(uint64_t a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_256B00674()
{
  return v0 + 59;
}

uint64_t sub_256B00770()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00790()
{
  return sub_256B3FB70();
}

uint64_t sub_256B007B0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B007D0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B0082C()
{
  return v0 + 51;
}

uint64_t sub_256B0083C(uint64_t result)
{
  *uint64_t v1 = result;
  *(void *)(result + 16) = 0x6C69466567616D49;
  *(void *)(result + 24) = 0xEB00000000726574;
  return result;
}

uint64_t sub_256B008EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 136) = a2;
  *(void *)(result + 144) = (v3 - 32) | 0x8000000000000000;
  *(void *)(result + 152) = 0;
  *(_WORD *)(result + 160) = v2;
  *(void *)(result + 168) = 0;
  *(void *)(result + 176) = 0;
  return result;
}

uint64_t sub_256B00908()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00928()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00948()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00968()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00988()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00A24()
{
  return v0 + 65;
}

uint64_t sub_256B00A34()
{
  return v0 + 75;
}

uint64_t sub_256B00A44()
{
  return v0 + 58;
}

uint64_t sub_256B00A54()
{
  return v0 + 63;
}

uint64_t sub_256B00AF0()
{
  return v0 + 39;
}

uint64_t sub_256B00B00()
{
  return v0 + 60;
}

uint64_t sub_256B00B10()
{
  return v0 + 68;
}

uint64_t sub_256B00B20()
{
  return v0 + 53;
}

uint64_t sub_256B00B30()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00B50()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00B70()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return LLMModelBase.init(configuration:)(va);
}

uint64_t sub_256B00C38(uint64_t result)
{
  *(void *)(result + 64) = v1;
  *(unsigned char *)(result + 72) = 0;
  *(void *)(result + 80) = v1;
  *(void *)(result + 88) = 0;
  *(unsigned char *)(result + 96) = 1;
  return result;
}

uint64_t sub_256B00CBC()
{
  return v0 + 33;
}

uint64_t sub_256B00DCC()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00DEC()
{
  return sub_256B3FB70();
}

uint64_t sub_256B00F00()
{
  return v0 + 55;
}

uint64_t sub_256B00F10()
{
  return v0 + 56;
}

uint64_t sub_256B00F20()
{
  return v0 + 73;
}

uint64_t sub_256B00F30()
{
  return v0 + 52;
}

uint64_t sub_256B00F40()
{
  return v0 + 80;
}

uint64_t sub_256B00F50()
{
  return v0 + 67;
}

uint64_t sub_256B01194(uint64_t result)
{
  *(void *)(result + 120) = v1;
  *(void *)(result + 128) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_256B011C4(uint64_t result)
{
  *(void *)(result + 48) = v1;
  *(void *)(result + 56) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_256B01200()
{
  return v0 + 77;
}

uint64_t sub_256B01210()
{
  return v0 + 42;
}

uint64_t sub_256B01220()
{
  return v0 + 45;
}

uint64_t sub_256B01230()
{
  return v0 + 35;
}

uint64_t sub_256B01240()
{
  return v0 + 61;
}

uint64_t sub_256B01250()
{
  return sub_256B3FB70();
}

uint64_t sub_256B01270()
{
  return sub_256B3FB70();
}

uint64_t sub_256B01290()
{
  return sub_256B3FB70();
}

uint64_t sub_256B012B0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B0153C()
{
  return v0 + 46;
}

uint64_t sub_256B0154C()
{
  return v0 + 66;
}

uint64_t sub_256B0155C()
{
  return v0 + 48;
}

uint64_t sub_256B0156C()
{
  return v0 + 54;
}

uint64_t sub_256B0157C()
{
  return v0 + 72;
}

uint64_t sub_256B0158C()
{
  return v0 + 57;
}

uint64_t sub_256B01660()
{
  return sub_256B3FB70();
}

uint64_t sub_256B01680()
{
  return sub_256B3FB70();
}

uint64_t sub_256B016A0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B016C0()
{
  return sub_256B3FB70();
}

uint64_t sub_256B016E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  *unsigned int v6 = a1;
  return TokenizerBase.init(configuration:)(va);
}

uint64_t static Sideload.defaultSideloadAssetsURL.getter()
{
  sub_256B3F240();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v0);
  sub_256AA0AE0();
  sub_256B0E028();
  v1();
  uint64_t v2 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v3 = sub_256A4AB38(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_256B0DE24();
  sub_256B0E130(v4);
  sub_256B0DFD4();
  return sub_256B3F2D0();
}

uint64_t static CatalogIndex.essentialResources(sideLoadUrl:)(uint64_t a1)
{
  sub_256B3F300();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v3);
  sub_256A4B630();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  type metadata accessor for CatalogIndex();
  swift_allocObject();
  CatalogIndex.init(sideloadURL:)(v1);
  uint64_t v5 = sub_256B05E60();
  uint64_t v6 = v5;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v34 = *(void *)(v5 + 16);
  *(void *)&long long v35 = MEMORY[0x263F8EE78];
  if (v34)
  {
    unint64_t v8 = 0;
    uint64_t v33 = v5 + 32;
    while (1)
    {
      if (v8 >= *(void *)(v6 + 16))
      {
        __break(1u);
        JUMPOUT(0x256B020B0);
      }
      sub_256A39E54(v33 + 40 * v8, (uint64_t)&v40);
      uint64_t v9 = v41;
      uint64_t v10 = v42;
      sub_256A39D70(&v40, v41);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 72))(v9, v10);
      uint64_t v12 = *(void *)(v11 + 16);
      if (!v12)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        sub_256A39DB4((uint64_t)&v40);
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      while (2)
      {
        uint64_t v14 = v11 + v13++;
        switch(*(unsigned char *)(v14 + 32))
        {
          case '(':
            swift_bridgeObjectRelease();
            goto LABEL_11;
          default:
            char v15 = sub_256B3FEA0();
            swift_bridgeObjectRelease();
            if ((v15 & 1) == 0)
            {
              if (v12 == v13)
              {
                swift_bridgeObjectRelease();
                goto LABEL_10;
              }
              continue;
            }
LABEL_11:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_256A3A540(&v40, (uint64_t)v39);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_256B0E150();
            }
            uint64_t v16 = v35;
            unint64_t v17 = *(void *)(v35 + 16);
            if (v17 >= *(void *)(v35 + 24) >> 1)
            {
              sub_256B0B944();
              uint64_t v16 = v35;
            }
            *(void *)(v16 + 16) = v17 + 1;
            sub_256A3A540(v39, v16 + 40 * v17 + 32);
LABEL_16:
            if (++v8 == v34)
            {
              uint64_t v18 = v35;
              uint64_t v7 = MEMORY[0x263F8EE78];
              goto LABEL_20;
            }
            break;
        }
        break;
      }
    }
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v38 = v7;
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v20 = v18 + 32;
    swift_retain();
    do
    {
      sub_256A39E54(v20, (uint64_t)&v40);
      sub_256A39E54((uint64_t)&v40, (uint64_t)v39);
      sub_256A39D2C(&qword_26B2B5D80);
      sub_256A39D2C(&qword_26B2B54E8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v37 = 0;
        long long v35 = 0u;
        long long v36 = 0u;
      }
      sub_256A39DB4((uint64_t)&v40);
      if (*((void *)&v36 + 1))
      {
        sub_256A3A540(&v35, (uint64_t)v39);
        sub_256A3A540(v39, (uint64_t)&v35);
        uint64_t v21 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_256B07A58();
          uint64_t v21 = v30;
          uint64_t v38 = v30;
        }
        unint64_t v22 = *(void *)(v21 + 16);
        if (v22 >= *(void *)(v21 + 24) >> 1)
        {
          sub_256B07A58();
          uint64_t v38 = v31;
        }
        uint64_t v23 = *((void *)&v36 + 1);
        uint64_t v24 = v37;
        sub_256A39E04((uint64_t)&v35, *((uint64_t *)&v36 + 1));
        sub_256A9FC2C();
        MEMORY[0x270FA5388](v25);
        sub_256A4A500();
        uint64_t v28 = v27 - v26;
        (*(void (**)(uint64_t))(v29 + 16))(v27 - v26);
        sub_256B0D69C(v22, v28, &v38, v23, v24);
        sub_256A39DB4((uint64_t)&v35);
      }
      else
      {
        sub_256A8399C((uint64_t)&v35, &qword_26B2B5520);
      }
      v20 += 40;
      --v19;
    }
    while (v19);
    swift_release();
    swift_release_n();
    return v38;
  }
  else
  {
    swift_release();
    swift_release();
    return MEMORY[0x263F8EE78];
  }
}

uint64_t static CatalogIndex.notReady(resources:lock:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *a2;
    uint64_t v4 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 - 1;
    do
    {
      uint64_t v6 = v5;
      LOBYTE(v2) = sub_256B06F80(v4, v3);
      if (v2) {
        break;
      }
      uint64_t v5 = v6 - 1;
      v4 += 5;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t CatalogIndex.__allocating_init()()
{
  uint64_t v0 = sub_256B3F300();
  sub_256A6E624();
  MEMORY[0x270FA5388](v1);
  sub_256A4A500();
  uint64_t v4 = v3 - v2;
  sub_256B3F240();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v5);
  sub_256A4B630();
  sub_256B0E028();
  v6();
  uint64_t v7 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v8 = sub_256A4AB38(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = sub_256B0DDA0(v9, v15);
  sub_256A46F7C((uint64_t)v10, v11, v12, v0);
  sub_256B0DFD4();
  sub_256B3F2D0();
  type metadata accessor for CatalogIndex();
  uint64_t v13 = swift_allocObject();
  CatalogIndex.init(sideloadURL:)(v4);
  return v13;
}

uint64_t CatalogIndex.__allocating_init(resources:resourceBundles:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_256B3F300();
  sub_256A6E624();
  MEMORY[0x270FA5388](v6);
  sub_256B0DE4C();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v7);
  sub_256A4A500();
  sub_256B0E028();
  v8();
  uint64_t v9 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v10 = sub_256A4AB38(v9);
  MEMORY[0x270FA5388](v10);
  sub_256A4A500();
  sub_256A46F7C(v12 - v11, 1, 1, v5);
  sub_256B0DFEC();
  sub_256B3F2D0();
  type metadata accessor for CatalogIndex();
  uint64_t v13 = swift_allocObject();
  CatalogIndex.init(sideloadURL:)(v2);
  *(void *)(v13 + 16) = a1;
  swift_retain();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 24) = a2;
  swift_release();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_256B024A0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x6E776F6E6B6E75;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x6E776F6E6B6E75;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 7565161;
      break;
    case 2:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x736F63616DLL;
      break;
    case 3:
      uint64_t v6 = sub_256B0E108();
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1936684660;
      break;
    case 5:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = sub_256B0E0F4();
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 7565161;
      break;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x736F63616DLL;
      break;
    case 3:
      uint64_t v3 = 0x736F6863746177;
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1936684660;
      break;
    case 5:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x736F6E6F69736976;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

unint64_t sub_256B02634()
{
  unint64_t v0 = Tag.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == Tag.rawValue.getter() && v2 == v3) {
    sub_256B0DD74();
  }
  else {
    LOBYTE(v0) = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_256B026BC(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000016;
  unint64_t v4 = (unint64_t)"rces-key.handwriting-synthesis";
  unint64_t v5 = 0x8000000256B46CA0;
  uint64_t v6 = a1;
  unint64_t v7 = "use-case-disablement";
  uint64_t v8 = 0xD000000000000016;
  uint64_t v9 = "handwriting-synthesis";
  uint64_t v10 = "generative-experiences";
  switch(v6)
  {
    case 1:
      uint64_t v8 = sub_256B0DD58();
      goto LABEL_7;
    case 2:
      uint64_t v8 = sub_256B0DD58();
      goto LABEL_9;
    case 3:
      uint64_t v8 = sub_256B0DD58();
      goto LABEL_11;
    case 4:
      uint64_t v8 = 0x735F6D6C65646F63;
      unint64_t v5 = 0xED00007974656661;
      break;
    case 5:
      uint64_t v8 = sub_256B0DD3C();
LABEL_7:
      unint64_t v5 = 0x8000000256B46CA0 & 0xFFFFFFFF | 0xEF31765F00000000;
      break;
    case 6:
      uint64_t v8 = sub_256B0DD3C();
LABEL_9:
      unint64_t v5 = 0x8000000256B46CA0 & 0xFFFFFFFF | 0xEF32765F00000000;
      break;
    case 7:
      uint64_t v8 = sub_256B0DD3C();
LABEL_11:
      unint64_t v5 = 0x8000000256B46CA0 & 0xFFFFFFFF | 0xEF33765F00000000;
      break;
    case 8:
      uint64_t v11 = "l_v2";
      goto LABEL_15;
    case 9:
      uint64_t v8 = 0xD000000000000015;
      uint64_t v11 = "generative-experiences";
      goto LABEL_15;
    case 10:
      uint64_t v8 = 0xD000000000000014;
      uint64_t v11 = "handwriting-synthesis";
LABEL_15:
      unint64_t v5 = (unint64_t)v11 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v12 = v4 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      sub_256B0DD04();
      goto LABEL_22;
    case 2:
      sub_256B0DD04();
      goto LABEL_24;
    case 3:
      sub_256B0DD04();
      goto LABEL_26;
    case 4:
      unint64_t v3 = 0x735F6D6C65646F63;
      unint64_t v12 = 0xED00007974656661;
      break;
    case 5:
      sub_256B0DD20();
LABEL_22:
      unint64_t v12 = v12 | 0xEF31765F00000000;
      break;
    case 6:
      sub_256B0DD20();
LABEL_24:
      unint64_t v12 = v12 | 0xEF32765F00000000;
      break;
    case 7:
      sub_256B0DD20();
LABEL_26:
      unint64_t v12 = v12 | 0xEF33765F00000000;
      break;
    case 8:
      uint64_t v13 = v10 - 32;
      goto LABEL_30;
    case 9:
      --v3;
      uint64_t v13 = v9 - 32;
      goto LABEL_30;
    case 10:
      v3 -= 2;
      uint64_t v13 = v7 - 32;
LABEL_30:
      unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v8 == v3 && v5 == v12) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_256B02904(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x345F61726F6CLL;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x345F61726F6CLL;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x385F61726F6CLL;
      break;
    case 2:
      uint64_t v6 = sub_256B0DFC4() | 0x36315F00000000;
      break;
    case 3:
      uint64_t v6 = sub_256B0DFC4() | 0x32335F00000000;
      break;
    case 4:
      uint64_t v6 = sub_256B0DFC4() | 0x34365F00000000;
      break;
    case 5:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x3832315F61726F6CLL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x385F61726F6CLL;
      break;
    case 2:
      sub_256B0DF70();
      uint64_t v3 = v8 | 0x36315F00000000;
      break;
    case 3:
      sub_256B0DF70();
      uint64_t v3 = v9 | 0x32335F00000000;
      break;
    case 4:
      sub_256B0DF70();
      uint64_t v3 = v10 | 0x34365F00000000;
      break;
    case 5:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x3832315F61726F6CLL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_256B02A98(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0xD00000000000001BLL;
  }
  else {
    unint64_t v4 = 0x64695F6E656B6F74;
  }
  if (v3) {
    unint64_t v5 = 0xE800000000000000;
  }
  else {
    unint64_t v5 = 0x8000000256B41BE0;
  }
  if (a2) {
    unint64_t v6 = 0xD00000000000001BLL;
  }
  else {
    unint64_t v6 = 0x64695F6E656B6F74;
  }
  if (a2) {
    unint64_t v7 = 0x8000000256B41BE0;
  }
  else {
    unint64_t v7 = 0xE800000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_256B02B30(uint64_t a1, uint64_t a2)
{
  return sub_256B031CC(a1, a2, sub_256A6E0C4);
}

uint64_t sub_256B02B48(uint64_t a1, uint64_t a2)
{
  return sub_256B031CC(a1, a2, (uint64_t (*)(void))sub_256A57A3C);
}

uint64_t sub_256B02B60(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 7696487;
  }
  else {
    uint64_t v2 = 6647393;
  }
  if (a2) {
    uint64_t v3 = 7696487;
  }
  else {
    uint64_t v3 = 6647393;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_256B3FEA0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_256B02BD0(uint64_t a1, uint64_t a2)
{
  return sub_256B031CC(a1, a2, sub_256A572CC);
}

uint64_t sub_256B02BE8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0x635F74757074756FLL;
  }
  else {
    unint64_t v4 = 0xD000000000000014;
  }
  if (v3) {
    unint64_t v5 = 0x8000000256B41BB0;
  }
  else {
    unint64_t v5 = 0xEE0073657373616CLL;
  }
  if (a2) {
    unint64_t v6 = 0x635F74757074756FLL;
  }
  else {
    unint64_t v6 = 0xD000000000000014;
  }
  if (a2) {
    unint64_t v7 = 0xEE0073657373616CLL;
  }
  else {
    unint64_t v7 = 0x8000000256B41BB0;
  }
  if (v4 == v6 && v5 == v7) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_256B02C8C(uint64_t a1, uint64_t a2)
{
  return sub_256B031CC(a1, a2, sub_256A59190);
}

uint64_t sub_256B02CA4(uint64_t a1, uint64_t a2)
{
  return sub_256B031CC(a1, a2, (uint64_t (*)(void))sub_256A5B378);
}

uint64_t sub_256B02CBC(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1701869940;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 1701869940;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x5F72657470616461;
      unint64_t v4 = 0xEC00000065707974;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      unsigned int v7 = 1601729635;
      goto LABEL_5;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      unsigned int v7 = 1601267059;
LABEL_5:
      uint64_t v6 = v7 | 0x6E656C00000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x5F72657470616461;
      unint64_t v8 = 0xEC00000065707974;
      break;
    case 2:
      unint64_t v8 = 0xE700000000000000;
      unsigned int v9 = 1601729635;
      goto LABEL_10;
    case 3:
      unint64_t v8 = 0xE700000000000000;
      unsigned int v9 = 1601267059;
LABEL_10:
      uint64_t v3 = v9 | 0x6E656C00000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_256B02E18(uint64_t a1, uint64_t a2)
{
  return sub_256B031CC(a1, a2, (uint64_t (*)(void))sub_256A5CE1C);
}

uint64_t sub_256B02E30(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD00000000000002CLL;
  unint64_t v3 = 0x8000000256B42080;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000025;
    }
    else {
      unint64_t v5 = 0xD000000000000013;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000256B420B0;
    }
    else {
      unint64_t v6 = 0x8000000256B420E0;
    }
  }
  else
  {
    unint64_t v5 = 0xD00000000000002CLL;
    unint64_t v6 = 0x8000000256B42080;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v2 = 0xD000000000000025;
    }
    else {
      unint64_t v2 = 0xD000000000000013;
    }
    if (a2 == 1) {
      unint64_t v3 = 0x8000000256B420B0;
    }
    else {
      unint64_t v3 = 0x8000000256B420E0;
    }
  }
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_256B0E170();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_256B02F14(char a1, char a2)
{
  uint64_t v3 = 1701869940;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x6E656C5F787463;
    }
    else {
      uint64_t v4 = 0x6E656C5F716573;
    }
    unint64_t v5 = 0xE700000000000000;
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v4 = 1701869940;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6E656C5F787463;
    }
    else {
      uint64_t v3 = 0x6E656C5F716573;
    }
    unint64_t v6 = 0xE700000000000000;
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v4 == v3 && v5 == v6) {
    sub_256B0DD74();
  }
  else {
    char v2 = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_256B03000(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006570;
  unint64_t v3 = 0x79745F6C65646F6DLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x79745F6C65646F6DLL;
  unint64_t v6 = 0xEA00000000006570;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F635F6C65646F6DLL;
      unint64_t v6 = 0xEC0000006769666ELL;
      break;
    case 2:
      unsigned int v7 = "model_type";
      goto LABEL_7;
    case 3:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = 0x8000000256B41FC0;
      break;
    case 4:
      unsigned int v7 = "e5_function_name_map";
      goto LABEL_7;
    case 5:
      unsigned int v7 = "default_parameters";
LABEL_7:
      unint64_t v6 = (unint64_t)v7 | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6F635F6C65646F6DLL;
      unint64_t v2 = 0xEC0000006769666ELL;
      break;
    case 2:
      char v8 = "model_type";
      goto LABEL_14;
    case 3:
      unint64_t v3 = 0xD000000000000014;
      unint64_t v2 = 0x8000000256B41FC0;
      break;
    case 4:
      char v8 = "e5_function_name_map";
      goto LABEL_14;
    case 5:
      char v8 = "default_parameters";
LABEL_14:
      unint64_t v2 = (unint64_t)v8 | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000012;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v10 = 1;
  }
  else {
    char v10 = sub_256B0E170();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_256B031CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    sub_256B0DD74();
  }
  else {
    LOBYTE(v5) = sub_256B0DCB4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_256B03250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v4 = a1;
  uint64_t v44 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_256B3F300();
  uint64_t v7 = *(void *)(v6 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v41 = v8;
  unsigned int v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256A39D2C(&qword_26B2B6340);
  uint64_t result = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  unint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v5;
  if (v5)
  {
    unint64_t v13 = 0;
    uint64_t v36 = v4;
    uint64_t v37 = v7 + 16;
    int v43 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v34 = a3;
    uint64_t v14 = v7;
    uint64_t v35 = v7;
    while (1)
    {
      if (v13 >= *(void *)(v4 + 16))
      {
        __break(1u);
        return result;
      }
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v16 = v4 + v15;
      uint64_t v17 = *(void *)(v14 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v12, v16 + v17 * v13, v6);
      sub_256A46F7C((uint64_t)v12, 0, 1, v6);
      if (sub_256A480C4((uint64_t)v12, 1, v6) == 1) {
        goto LABEL_19;
      }
      uint64_t v42 = &v32;
      uint64_t v18 = *v43;
      (*v43)(v9, v12, v6);
      if (sub_256B3F250() == v39 && v19 == a3) {
        break;
      }
      char v21 = sub_256B3FEA0();
      uint64_t v22 = swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_12;
      }
      uint64_t v23 = (*v33)(v9, v6);
LABEL_17:
      ++v13;
      MEMORY[0x270FA5388](v23);
      unsigned int v9 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v30 = sub_256A39D2C(&qword_26B2B6340);
      uint64_t result = MEMORY[0x270FA5388](v30 - 8);
      unint64_t v12 = (char *)&v32 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v14 = v35;
      uint64_t v4 = v36;
      if (v38 == v13) {
        goto LABEL_18;
      }
    }
    uint64_t v22 = swift_bridgeObjectRelease();
LABEL_12:
    long long v40 = &v32;
    MEMORY[0x270FA5388](v22);
    uint64_t v25 = (char *)&v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    v18(v25, v9, v6);
    uint64_t v26 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_256B0B9A0(0, *(void *)(v26 + 16) + 1, 1);
      uint64_t v26 = v44;
    }
    unint64_t v28 = *(void *)(v26 + 16);
    unint64_t v27 = *(void *)(v26 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_256B0B9A0(v27 > 1, v28 + 1, 1);
      uint64_t v26 = v44;
    }
    *(void *)(v26 + 16) = v28 + 1;
    uint64_t v23 = ((uint64_t (*)(unint64_t, char *, uint64_t))v18)(v26 + v15 + v28 * v17, v25, v6);
    uint64_t v44 = v26;
    a3 = v34;
    goto LABEL_17;
  }
LABEL_18:
  sub_256A46F7C((uint64_t)v12, 1, 1, v6);
LABEL_19:
  swift_bridgeObjectRelease();
  sub_256A8399C((uint64_t)v12, &qword_26B2B6340);
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_256B0366C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v26 = *(void *)(result + 16);
  if (v26)
  {
    unint64_t v4 = 0;
    uint64_t v24 = result;
    uint64_t v25 = result + 32;
    while (v4 < *(void *)(v2 + 16))
    {
      sub_256A39E54(v25 + 40 * v4, (uint64_t)&v31);
      uint64_t v5 = v32;
      uint64_t v6 = v33;
      sub_256A39D70(&v31, v32);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
      sub_256A46F0C();
      uint64_t v8 = sub_256B3F990();
      uint64_t v29 = *(void *)(v7 + 16);
      if (v29)
      {
        unint64_t v28 = v4;
        uint64_t v9 = 0;
LABEL_6:
        while (2)
        {
          char v10 = *(unsigned char *)(v7 + 32 + v9++);
          sub_256B3FF40();
          Tag.rawValue.getter();
          swift_bridgeObjectRetain();
          sub_256B3F740();
          swift_bridgeObjectRelease();
          uint64_t v11 = sub_256B3FF70();
          uint64_t v12 = ~(-1 << *(unsigned char *)(v8 + 32));
          for (unint64_t i = v11 & v12; ((*(void *)(v8 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            LOBYTE(v30[0]) = *(unsigned char *)(*(void *)(v8 + 48) + i);
            unint64_t v14 = Tag.rawValue.getter();
            uint64_t v16 = v15;
            if (v14 == Tag.rawValue.getter() && v16 == v17)
            {
              swift_bridgeObjectRelease_n();
LABEL_15:
              swift_bridgeObjectRelease();
              if (v9 != v29) {
                goto LABEL_6;
              }
              goto LABEL_18;
            }
            char v19 = sub_256B3FEA0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v19) {
              goto LABEL_15;
            }
          }
          swift_bridgeObjectRelease();
          swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v30[0] = v8;
          sub_256B09F7C(v10, i);
          uint64_t v8 = *(void *)&v30[0];
          swift_bridgeObjectRelease();
          if (v9 != v29) {
            continue;
          }
          break;
        }
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t v2 = v24;
        unint64_t v4 = v28;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_256B0C07C(a2, v8);
      uint64_t v21 = *(void *)(v20 + 16);
      swift_release();
      if (v21)
      {
        sub_256A3A540(&v31, (uint64_t)v30);
        uint64_t v22 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_256B0B944();
          uint64_t v22 = v34;
        }
        unint64_t v23 = *(void *)(v22 + 16);
        if (v23 >= *(void *)(v22 + 24) >> 1)
        {
          sub_256B0B944();
          uint64_t v22 = v34;
        }
        *(void *)(v22 + 16) = v23 + 1;
        uint64_t result = sub_256A3A540(v30, v22 + 40 * v23 + 32);
      }
      else
      {
        uint64_t result = sub_256A39DB4((uint64_t)&v31);
      }
      if (++v4 == v26)
      {
        uint64_t v3 = v34;
        goto LABEL_29;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t static Sideload.defaultSideloadResourcesURL.getter()
{
  sub_256B3F240();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v0);
  sub_256AA0AE0();
  sub_256B0E028();
  v1();
  uint64_t v2 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v3 = sub_256A4AB38(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_256B0DE24();
  sub_256B0E130(v4);
  return sub_256B3F2D0();
}

uint64_t static Sideload.addResource(container:to:)(uint64_t a1)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  sub_256B0DF90();
  if (!v3)
  {
    sub_256A46E50();
    sub_256A6E4C0();
    sub_256B0DD80();
    return sub_256B0DC78(v38, v39);
  }
  uint64_t result = ResourceContainer.toResource()();
  if (!v1)
  {
    if (!v62) {
      return sub_256A8399C((uint64_t)&v61, (uint64_t *)&unk_26B2B5D90);
    }
    sub_256A3A540(&v61, (uint64_t)v63);
    sub_256B3F300();
    uint64_t v59 = v50;
    sub_256A9FC2C();
    uint64_t v57 = v4;
    uint64_t v58 = v5;
    uint64_t v6 = MEMORY[0x270FA5388](v4);
    uint64_t v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v56 = v50;
    uint64_t v54 = v7;
    MEMORY[0x270FA5388](v6);
    sub_256B0DF14();
    uint64_t v9 = v64;
    sub_256A39D70(v63, v64);
    sub_256A7A6B0();
    *(void *)&long long v61 = v10();
    *((void *)&v61 + 1) = v11;
    uint64_t v12 = sub_256B3F240();
    uint64_t v55 = v50;
    sub_256A9FC2C();
    uint64_t v14 = v13;
    MEMORY[0x270FA5388](v15);
    sub_256AA03E8();
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v9, *MEMORY[0x263F06E48], v12);
    sub_256A480EC();
    sub_256B3F2F0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v12);
    swift_bridgeObjectRelease();
    sub_256B3F280();
    uint64_t v16 = v58 + 8;
    uint64_t v17 = (void (*)(void))*((void *)v58 + 1);
    uint64_t v18 = v57;
    sub_256B0DDD0();
    v17();
    char v19 = self;
    *(void *)&long long v61 = 0;
    id v20 = objc_msgSend(v19, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, &v61);
    id v21 = (id)v61;
    if (v20)
    {
      uint64_t v56 = v16;
      uint64_t v22 = sub_256B3F3C0();
      unint64_t v24 = v23;

      uint64_t v25 = objc_msgSend(self, sel_defaultManager);
      sub_256B3F2B0();
      uint64_t v26 = (void *)sub_256B3F690();
      swift_bridgeObjectRelease();
      uint64_t v55 = v25;
      unsigned int v27 = objc_msgSend(v25, sel_fileExistsAtPath_, v26);

      if (v27)
      {
        uint64_t v51 = v22;
        uint64_t v53 = v17;
        if (qword_26B2B2FB0 != -1) {
          swift_once();
        }
        unint64_t v52 = v24;
        uint64_t v28 = sub_256B3F4A0();
        uint64_t v29 = sub_256A46E9C(v28, (uint64_t)qword_26B2C3FA0);
        MEMORY[0x270FA5388](v29);
        uint64_t v17 = (void (*)(void))((char *)v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
        long long v31 = (void (*)(void (*)(void), char *, uint64_t))*((void *)v58 + 2);
        uint64_t v58 = v8;
        v31(v17, v8, v18);
        uint64_t v32 = sub_256B3F470();
        os_log_type_t v33 = sub_256B3F9F0();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(void *)&long long v61 = v54;
          *(_DWORD *)uint64_t v34 = 136315138;
          v50[1] = v34 + 4;
          uint64_t v35 = sub_256B3F2B0();
          uint64_t v60 = sub_256B3B598(v35, v36, (uint64_t *)&v61);
          sub_256B3FAA0();
          swift_bridgeObjectRelease();
          uint64_t v37 = sub_256B0DEA8();
          ((void (*)(uint64_t))v17)(v37);
          _os_log_impl(&dword_256A36000, v32, v33, "Removing existing resource in order to replace it %s", v34, 0xCu);
          swift_arrayDestroy();
          sub_256A4A158();
          sub_256A4A158();
        }
        else
        {
          uint64_t v42 = sub_256B0DEA8();
          ((void (*)(uint64_t))v17)(v42);
        }

        id v43 = v55;
        sub_256B3F2B0();
        uint64_t v44 = (void *)sub_256B3F690();
        swift_bridgeObjectRelease();
        *(void *)&long long v61 = 0;
        uint64_t v45 = v43;
        LODWORD(v43) = objc_msgSend(v43, sel_removeItemAtPath_error_, v44, &v61);

        uint64_t v22 = v51;
        if (!v43)
        {
          id v48 = (id)v61;
          sub_256B3F230();

          swift_willThrow();
          sub_256A46DF8(v22, v52);
          uint64_t v49 = sub_256B0E098();
          ((void (*)(uint64_t))v17)(v49);
          return sub_256A39DB4((uint64_t)v63);
        }
        id v46 = (id)v61;
        unint64_t v24 = v52;
      }
      sub_256B3F3E0();
      uint64_t v47 = sub_256B0E098();
      ((void (*)(uint64_t))v17)(v47);

      sub_256A46DF8(v22, v24);
    }
    else
    {
      uint64_t v41 = v21;
      sub_256B3F230();

      swift_willThrow();
      sub_256B0DDD0();
      v17();
    }
    return sub_256A39DB4((uint64_t)v63);
  }
  return result;
}

uint64_t static Sideload.addResourceBundle(container:to:)(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  sub_256B0DF90();
  if (v4)
  {
    uint64_t result = ResourceBundleContainer.toResourceBundle()();
    if (!v1)
    {
      if (v38)
      {
        sub_256A3A540(&v37, (uint64_t)v39);
        uint64_t v34 = sub_256B3F300();
        unint64_t v36 = v33;
        sub_256A9FC2C();
        uint64_t v6 = v5;
        uint64_t v8 = MEMORY[0x270FA5388](v7);
        v33[1] = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v35 = v33;
        MEMORY[0x270FA5388](v8);
        sub_256B0DF14();
        uint64_t v10 = v40;
        uint64_t v11 = v41;
        sub_256A39D70(v39, v40);
        *(void *)&long long v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
        *((void *)&v37 + 1) = v12;
        uint64_t v13 = sub_256B3F240();
        v33[0] = v33;
        sub_256A9FC2C();
        uint64_t v15 = v14;
        MEMORY[0x270FA5388](v16);
        sub_256AA03E8();
        uint64_t v17 = sub_256B0DE80();
        v18(v17);
        sub_256A480EC();
        sub_256B3F2F0();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v13);
        uint64_t v19 = v34;
        swift_bridgeObjectRelease();
        sub_256B3F280();
        id v20 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v20(v2, v19);
        id v21 = self;
        *(void *)&long long v37 = 0;
        id v22 = objc_msgSend(v21, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, &v37);
        id v23 = (id)v37;
        if (v22)
        {
          uint64_t v24 = sub_256B3F3C0();
          unint64_t v26 = v25;

          sub_256B3F3E0();
          uint64_t v27 = sub_256B0E084();
          ((void (*)(uint64_t))v20)(v27);
          sub_256A46DF8(v24, v26);
        }
        else
        {
          long long v31 = v23;
          sub_256B3F230();

          swift_willThrow();
          uint64_t v32 = sub_256B0E084();
          ((void (*)(uint64_t))v20)(v32);
        }
        return sub_256A39DB4((uint64_t)v39);
      }
      else
      {
        return sub_256A8399C((uint64_t)&v37, &qword_26B2B5C08);
      }
    }
  }
  else
  {
    sub_256A46E50();
    sub_256A6E4C0();
    sub_256B0DD80();
    return sub_256B0DC78(v28, v29);
  }
  return result;
}

uint64_t static Sideload.removeResource(for:from:)(void *a1, void *a2, uint64_t a3)
{
  return sub_256B04578(a1, a2, a3, 0x656372756F736572, 0xE800000000000000);
}

uint64_t static Sideload.removeResourceBundle(for:from:)(void *a1, void *a2, uint64_t a3)
{
  return sub_256B04578(a1, a2, a3, 0x6552656C646E7562, 0xEE00656372756F73);
}

uint64_t sub_256B04578(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v29[2] = *(id *)MEMORY[0x263EF8340];
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  sub_256B0DF90();
  if (v9)
  {
    v28[3] = sub_256B3F300();
    v28[4] = v28;
    sub_256A9FC2C();
    v28[2] = a5;
    uint64_t v11 = v10;
    uint64_t v13 = MEMORY[0x270FA5388](v12);
    v28[0] = a4;
    v28[1] = v28;
    MEMORY[0x270FA5388](v13);
    sub_256B0DF14();
    v29[0] = a1;
    v29[1] = a2;
    uint64_t v14 = sub_256B3F240();
    sub_256A9FC2C();
    uint64_t v16 = v15;
    MEMORY[0x270FA5388](v17);
    sub_256AA03E8();
    uint64_t v18 = sub_256B0DE80();
    v19(v18);
    sub_256A480EC();
    sub_256B3F2F0();
    (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v14);
    sub_256B3F280();
    id v20 = *(void (**)(void))(v11 + 8);
    sub_256B0DDD0();
    v20();
    id v21 = objc_msgSend(self, sel_defaultManager);
    id v22 = (void *)sub_256B3F270();
    v29[0] = 0;
    LOBYTE(v16) = objc_msgSend(v21, sel_removeItemAtURL_error_, v22, v29);

    if (v16)
    {
      id v23 = v29[0];
    }
    else
    {
      id v27 = v29[0];
      sub_256B3F230();

      swift_willThrow();
    }
    sub_256B0DDD0();
    return ((uint64_t (*)(void))v20)();
  }
  else
  {
    sub_256A46E50();
    sub_256A6E4C0();
    sub_256B0DD80();
    return sub_256B0DC78(v24, v25);
  }
}

uint64_t sub_256B04850(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v90[5] = *(id *)MEMORY[0x263EF8340];
  if (qword_26B2B6478 != -1)
  {
    uint64_t v68 = a4;
    swift_once();
    a4 = v68;
  }
  if (byte_26B2C4010 != 1)
  {
    sub_256A46E50();
    swift_allocError();
    *(void *)uint64_t v65 = 0xD000000000000029;
    *(void *)(v65 + 8) = 0x8000000256B51A00;
    *(unsigned char *)(v65 + 16) = 2;
    return swift_willThrow();
  }
  uint64_t v70 = a4;
  id v7 = objc_msgSend(self, sel_defaultManager);
  uint64_t v8 = (void *)sub_256B3F270();
  v90[0] = 0;
  id v9 = objc_msgSend(v7, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v8, 0, 5, v90);

  id v10 = v90[0];
  if (!v9)
  {
    id v67 = v90[0];
    sub_256B3F230();

    return swift_willThrow();
  }
  uint64_t v11 = sub_256B3F300();
  uint64_t v12 = sub_256B3F860();
  id v13 = v10;

  swift_bridgeObjectRetain();
  uint64_t v14 = sub_256B03250(v12, a2, a3);
  uint64_t v15 = v4;
  uint64_t v16 = sub_256A39D2C(&qword_26B2B6340);
  v69[0] = v69;
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v14 + 16);
  v69[1] = v14;
  if (v20)
  {
    uint64_t v21 = *(void *)(v11 - 8);
    uint64_t v22 = v21;
    unint64_t v23 = v14 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v78 = *(void *)(v21 + 72);
    uint64_t v25 = v21 + 16;
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    uint64_t v84 = v25;
    uint64_t v85 = v24;
    uint64_t v77 = v22 + 32;
    uint64_t v79 = v22;
    uint64_t v76 = (void (**)(char *, uint64_t))(v22 + 8);
    *(void *)&long long v17 = 136315394;
    long long v72 = v17;
    uint64_t v71 = MEMORY[0x263F8EE58] + 8;
    uint64_t v75 = v19;
    do
    {
      v85(v19, v23, v11);
      sub_256A46F7C((uint64_t)v19, 0, 1, v11);
      uint64_t v26 = sub_256A480C4((uint64_t)v19, 1, v11);
      if (v26 == 1) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v82 = v69;
      unint64_t v83 = v23;
      uint64_t v27 = *(void *)(v79 + 64);
      MEMORY[0x270FA5388](v26);
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))((char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v11);
      uint64_t v86 = (char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v29 = sub_256B3F340();
      long long v31 = v15;
      uint64_t v81 = v20;
      if (v15)
      {
        uint64_t v15 = 0;
        uint64_t v35 = v86;
        if (qword_26B2B6590 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_256B3F4A0();
        uint64_t v37 = sub_256A46E9C(v36, (uint64_t)qword_26B2C4018);
        uint64_t v80 = v69;
        MEMORY[0x270FA5388](v37);
        uint64_t v38 = (char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
        v85(v38, (unint64_t)v35, v11);
        id v39 = v31;
        id v40 = v31;
        uint64_t v41 = sub_256B3F470();
        os_log_type_t v42 = sub_256B3F9F0();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          uint64_t v74 = 0;
          uint64_t v45 = v11;
          id v46 = (void *)v44;
          uint64_t v73 = (void *)swift_slowAlloc();
          v90[0] = v73;
          *(_DWORD *)uint64_t v43 = v72;
          sub_256B0DBF4();
          uint64_t v47 = sub_256B3FE80();
          *(void *)(v43 + 4) = sub_256B3B598(v47, v48, (uint64_t *)v90);
          swift_bridgeObjectRelease();
          uint64_t v49 = *v76;
          (*v76)(v38, v45);
          *(_WORD *)(v43 + 12) = 2112;
          id v50 = v31;
          uint64_t v51 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v43 + 14) = v51;
          *id v46 = v51;

          _os_log_impl(&dword_256A36000, v41, v42, "Failed to read side-load file %s: %@", (uint8_t *)v43, 0x16u);
          sub_256A39D2C(&qword_26B2B60C8);
          swift_arrayDestroy();
          unint64_t v52 = v46;
          uint64_t v11 = v45;
          uint64_t v15 = v74;
          MEMORY[0x25A2ABEE0](v52, -1, -1);
          uint64_t v53 = v73;
          swift_arrayDestroy();
          uint64_t v19 = v75;
          MEMORY[0x25A2ABEE0](v53, -1, -1);
          MEMORY[0x25A2ABEE0](v43, -1, -1);

          v49(v86, v11);
          uint64_t v20 = v81;
          unint64_t v54 = v83;
        }
        else
        {

          uint64_t v55 = *v76;
          (*v76)((char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v11);

          v55(v35, v11);
          uint64_t v20 = v81;
          unint64_t v54 = v83;
          uint64_t v19 = v75;
        }
        goto LABEL_15;
      }
      uint64_t v32 = v29;
      unint64_t v33 = v30;
      sub_256B0DC38();
      type metadata accessor for ResourceContainer();
      uint64_t v34 = (void *)sub_256B3FA00();
      uint64_t v15 = 0;
      if (v34)
      {
        id v56 = v34;
        ResourceContainer.toResource()();

        if (*((void *)&v88 + 1))
        {
          sub_256A3A540(&v87, (uint64_t)v90);
          sub_256A39E54((uint64_t)v90, (uint64_t)&v87);
          uint64_t v57 = v70;
          uint64_t v58 = *v70;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v57 = v58;
          uint64_t v74 = 0;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_256B07A58();
            uint64_t v58 = v63;
            *uint64_t v70 = v63;
          }
          if (*(void *)(v58 + 16) >= *(void *)(v58 + 24) >> 1)
          {
            sub_256B07A58();
            *uint64_t v70 = v64;
          }
          uint64_t v60 = sub_256A39E04((uint64_t)&v87, *((uint64_t *)&v88 + 1));
          MEMORY[0x270FA5388](v60);
          (*(void (**)(char *))(v62 + 16))((char *)v69 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
          sub_256A47FB0();
          sub_256A39DB4((uint64_t)&v87);
          sub_256A46DF8(v32, v33);

          sub_256A39DB4((uint64_t)v90);
          uint64_t v15 = v74;
          uint64_t v19 = v75;
          uint64_t v20 = v81;
          goto LABEL_27;
        }
        sub_256A46DF8(v32, v33);
      }
      else
      {
        uint64_t v89 = 0;
        long long v87 = 0u;
        long long v88 = 0u;
        sub_256A46DF8(v32, v33);
      }
      sub_256A8399C((uint64_t)&v87, (uint64_t *)&unk_26B2B5D90);
LABEL_27:
      unint64_t v54 = v83;
      (*v76)(v86, v11);
LABEL_15:
      unint64_t v23 = v54 + v78;
      --v20;
    }
    while (v20);
  }
  sub_256A46F7C((uint64_t)v19, 1, 1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256B051DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v64 = a5;
  v68[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  if (byte_26B2C4010 != 1)
  {
    sub_256A46E50();
    swift_allocError();
    *(void *)uint64_t v48 = 0xD000000000000029;
    *(void *)(v48 + 8) = 0x8000000256B51A00;
    *(unsigned char *)(v48 + 16) = 2;
LABEL_22:
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  id v9 = objc_msgSend(self, sel_defaultManager);
  id v10 = (void *)sub_256B3F270();
  v68[0] = 0;
  id v11 = objc_msgSend(v9, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v10, 0, 5, v68);

  id v12 = v68[0];
  if (!v11)
  {
    id v50 = v68[0];
    sub_256B3F230();

    goto LABEL_22;
  }
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = sub_256B3F860();
  id v15 = v12;

  swift_bridgeObjectRetain();
  uint64_t v16 = sub_256B03250(v14, a2, a3);
  long long v17 = v5;
  uint64_t v18 = sub_256A39D2C(&qword_26B2B6340);
  v51[1] = v51;
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v16 + 16);
  v51[2] = v16;
  if (v22)
  {
    uint64_t v23 = *(void *)(v13 - 8);
    unint64_t v24 = v16 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v61 = *(void *)(v23 + 72);
    uint64_t v25 = *(void (**)(void, void, void))(v23 + 16);
    uint64_t v60 = v23 + 32;
    uint64_t v62 = v23;
    uint64_t v65 = (void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v66 = v23 + 16;
    *(void *)&long long v19 = 136315394;
    long long v52 = v19;
    v51[3] = MEMORY[0x263F8EE58] + 8;
    uint64_t v58 = v21;
    uint64_t v59 = a4;
    uint64_t v57 = v25;
    while (1)
    {
      v25(v21, v24, v13);
      sub_256A46F7C((uint64_t)v21, 0, 1, v13);
      uint64_t v26 = sub_256A480C4((uint64_t)v21, 1, v13);
      if (v26 == 1) {
        break;
      }
      id v67 = v51;
      uint64_t v27 = *(void *)(v62 + 64);
      MEMORY[0x270FA5388](v26);
      uint64_t v28 = (char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v21, v13);
      sub_256B05A68((uint64_t)v28, a4, v64);
      if (v17)
      {
        if (qword_26B2B6590 != -1) {
          swift_once();
        }
        uint64_t v30 = sub_256B3F4A0();
        uint64_t v31 = sub_256A46E9C(v30, (uint64_t)qword_26B2C4018);
        uint64_t v63 = v51;
        MEMORY[0x270FA5388](v31);
        uint64_t v32 = (char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
        v25(v32, v32, v13);
        id v33 = v17;
        id v34 = v17;
        uint64_t v35 = sub_256B3F470();
        os_log_type_t v36 = sub_256B3F9F0();
        int v37 = v36;
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v38 = v35;
          uint64_t v39 = swift_slowAlloc();
          unint64_t v54 = (void *)swift_slowAlloc();
          id v56 = (void *)swift_slowAlloc();
          v68[0] = v56;
          *(_DWORD *)uint64_t v39 = v52;
          sub_256B0DBF4();
          int v53 = v37;
          uint64_t v40 = sub_256B3FE80();
          *(void *)(v39 + 4) = sub_256B3B598(v40, v41, (uint64_t *)v68);
          swift_bridgeObjectRelease();
          uint64_t v55 = *v65;
          v55(v32, v13);
          *(_WORD *)(v39 + 12) = 2112;
          id v42 = v17;
          uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v39 + 14) = v43;
          uint64_t v44 = v54;
          *unint64_t v54 = v43;

          uint64_t v45 = v38;
          _os_log_impl(&dword_256A36000, v38, (os_log_type_t)v53, "Failed to read side-load file %s: %@", (uint8_t *)v39, 0x16u);
          sub_256A39D2C(&qword_26B2B60C8);
          swift_arrayDestroy();
          MEMORY[0x25A2ABEE0](v44, -1, -1);
          id v46 = v56;
          swift_arrayDestroy();
          MEMORY[0x25A2ABEE0](v46, -1, -1);
          MEMORY[0x25A2ABEE0](v39, -1, -1);

          v55(v28, v13);
        }
        else
        {

          uint64_t v47 = *v65;
          (*v65)(v32, v13);

          v47(v28, v13);
        }
        long long v17 = 0;
        uint64_t v21 = v58;
        a4 = v59;
        uint64_t v25 = v57;
      }
      else
      {
        (*v65)((char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
      }
      v24 += v61;
      if (!--v22) {
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    sub_256A46F7C((uint64_t)v21, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static Sideload.fetchResources(at:)(uint64_t a1)
{
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  if (byte_26B2C4010)
  {
    uint64_t v6 = MEMORY[0x263F8EE78];
    sub_256B04850(a1, 0x656372756F736572, 0xE800000000000000, &v6);
    uint64_t result = v6;
    if (v1) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_256A46E50();
    sub_256A6E4C0();
    sub_256B0DD80();
    return sub_256B0DC78(v4, v5);
  }
  return result;
}

uint64_t static Sideload.fetchResourceBundles(at:resources:)(uint64_t a1, uint64_t a2)
{
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  if (byte_26B2C4010)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_256B051DC(a1, 0x6552656C646E7562, 0xEE00656372756F73, a2, &v8);
    uint64_t result = v8;
    if (v2) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_256A46E50();
    sub_256A6E4C0();
    sub_256B0DD80();
    return sub_256B0DC78(v6, v7);
  }
  return result;
}

void sub_256B05A68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_256B3F340();
  if (v3) {
    return;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  sub_256B0DC38();
  type metadata accessor for ResourceBundleContainer();
  id v10 = (void *)sub_256B3FA00();
  if (!v10)
  {
    uint64_t v42 = 0;
    long long v40 = 0u;
    long long v41 = 0u;
    sub_256A46DF8(v8, v9);
LABEL_5:
    sub_256A8399C((uint64_t)&v40, &qword_26B2B5C08);
    return;
  }
  id v11 = v10;
  ResourceBundleContainer.toResourceBundle()();

  if (!*((void *)&v41 + 1))
  {
    sub_256A46DF8(v8, v9);

    goto LABEL_5;
  }
  sub_256A3A540(&v40, (uint64_t)v43);
  uint64_t v12 = v44;
  uint64_t v13 = v45;
  sub_256A39D70(v43, v44);
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  uint64_t v32 = *(void *)(v36 + 16);
  if (v32)
  {
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v35 = (void *)(a2 + 32);
    unint64_t v34 = v9;
    uint64_t v30 = v15;
    uint64_t v31 = a3;
    id v33 = v11;
    while (v15)
    {
      id v46 = (void *)(v36 + 32 + 40 * v14);
      uint64_t v39 = v46 + 3;
      uint64_t v37 = v14 + 1;
      uint64_t v38 = v46 + 4;
      swift_bridgeObjectRetain();
      uint64_t v16 = v35;
      uint64_t v17 = v15;
      while (1)
      {
        uint64_t v18 = v16[3];
        uint64_t v19 = v16[4];
        sub_256A39D70(v16, v18);
        uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
        uint64_t v22 = v21;
        uint64_t v23 = *v39;
        uint64_t v24 = *v38;
        sub_256A39D70(v46, *v39);
        if (v20 == (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24) && v22 == v25)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_20;
        }
        char v27 = sub_256B3FEA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          break;
        }
        v16 += 5;
        if (!--v17)
        {

          swift_bridgeObjectRelease();
          unint64_t v9 = v34;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
LABEL_20:
      unint64_t v9 = v34;
      uint64_t v14 = v37;
      a3 = v31;
      id v11 = v33;
      uint64_t v15 = v30;
      if (v37 == v32) {
        goto LABEL_21;
      }
    }

LABEL_23:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    sub_256A46FA4();
    uint64_t v28 = *(void *)(*a3 + 16);
    sub_256A4701C(v28);
    uint64_t v29 = *a3;
    *(void *)(v29 + 16) = v28 + 1;
    sub_256A39E54((uint64_t)v43, v29 + 40 * v28 + 32);
  }
  sub_256A46DF8(v8, v9);
  sub_256A39DB4((uint64_t)v43);
}

BOOL static ResourceReadinessStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ResourceReadinessStatus.hash(into:)()
{
  return sub_256B3FF50();
}

uint64_t ResourceReadinessStatus.hashValue.getter()
{
  return sub_256B3FF70();
}

uint64_t sub_256B05E60()
{
  return sub_256B05EC8(&OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResources, (uint64_t (*)(uint64_t))sub_256B05F40, (void (*)(uint64_t))sub_256A47CCC);
}

uint64_t sub_256B05E94()
{
  return sub_256B05EC8(&OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResourceBundles, (uint64_t (*)(uint64_t))sub_256B05F80, (void (*)(uint64_t))sub_256A47DC8);
}

uint64_t sub_256B05EC8(void *a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a1);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = a2(v8);
  a3(v9);
  return v7;
}

uint64_t sub_256B05F40()
{
  if (*(void *)(v0 + 16)) {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v1 = static Catalog.Resource.fetchAllResources()(0);
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_256B05F80()
{
  if (*(void *)(v0 + 24)) {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else {
    uint64_t v1 = static Catalog.ResourceBundle.fetchAllResourceBundles()();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CatalogIndex.sideloadURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadURL;
  sub_256B3F300();
  sub_256A6E624();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t sub_256B0602C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_256B06064(v0);
}

uint64_t sub_256B06058()
{
  return sub_256B060F0();
}

uint64_t sub_256B06064(uint64_t a1)
{
  return sub_256B06144(a1, &OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResources);
}

uint64_t (*sub_256B06070())()
{
  return j__swift_endAccess;
}

uint64_t sub_256B060B8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_256B06138(v0);
}

uint64_t sub_256B060E4()
{
  return sub_256B060F0();
}

uint64_t sub_256B060F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_256B06138(uint64_t a1)
{
  return sub_256B06144(a1, &OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResourceBundles);
}

uint64_t sub_256B06144(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_256B06194())()
{
  return j_j__swift_endAccess;
}

uint64_t static CatalogIndex.essentialResources()()
{
  type metadata accessor for CatalogIndex();
  uint64_t v1 = sub_256B3F300();
  sub_256A9FC2C();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  sub_256B0DE4C();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v5);
  sub_256A4B630();
  sub_256B0E028();
  v6();
  uint64_t v7 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v8 = sub_256A4AB38(v7);
  MEMORY[0x270FA5388](v8);
  id v10 = sub_256B0DDA0(v9, v15);
  sub_256A46F7C((uint64_t)v10, v11, v12, v1);
  sub_256B0DFEC();
  sub_256B3F2D0();
  uint64_t v13 = static CatalogIndex.essentialResources(sideLoadUrl:)(v0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v13;
}

uint64_t CatalogIndex.__allocating_init(sideloadURL:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CatalogIndex.init(sideloadURL:)(a1);
  return v2;
}

uint64_t type metadata accessor for CatalogIndex()
{
  uint64_t result = qword_26B2B3840;
  if (!qword_26B2B3840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CatalogIndex.init(sideloadURL:)(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResources) = MEMORY[0x263F8EE78];
  *(void *)(v1 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResourceBundles) = v3;
  uint64_t v4 = v1 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadURL;
  uint64_t v5 = sub_256B3F300();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  sub_256B0648C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v1;
}

void sub_256B0648C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadURL;
  uint64_t v2 = static Sideload.fetchResources(at:)(v0 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadURL);
  sub_256B06064(v2);
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadedResources);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  sub_256B05F40();
  sub_256A47CCC();
  uint64_t v5 = static Sideload.fetchResourceBundles(at:resources:)(v1, v4);
  swift_bridgeObjectRelease();
  sub_256B06138(v5);
}

uint64_t sub_256B06C08(uint64_t a1)
{
  sub_256B0DCA0();
  uint64_t v3 = sub_256B05E60();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&long long v25 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    uint64_t v24 = a1;
    unint64_t v1 = 0;
    uint64_t v7 = v3 + 32;
    while (v1 < *(void *)(v4 + 16))
    {
      sub_256A39E54(v7, (uint64_t)v30);
      if (sub_256B07620(v30))
      {
        sub_256A3A540(v30, (uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_256B0E150();
        }
        uint64_t v8 = v25;
        unint64_t v9 = *(void *)(v25 + 16);
        if (v9 >= *(void *)(v25 + 24) >> 1)
        {
          sub_256B0B944();
          uint64_t v8 = v25;
        }
        *(void *)(v8 + 16) = v9 + 1;
        sub_256A3A540(v29, v8 + 40 * v9 + 32);
      }
      else
      {
        sub_256A39DB4((uint64_t)v30);
      }
      ++v1;
      v7 += 40;
      if (v6 == v1)
      {
        a1 = v24;
        uint64_t v10 = v25;
        uint64_t v5 = MEMORY[0x263F8EE78];
        goto LABEL_14;
      }
    }
    __break(1u);
    sub_256A39DB4((uint64_t)v30);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_14:
    swift_bridgeObjectRelease();
    if (a1)
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v12 = sub_256A3D010(v11);
      uint64_t v10 = sub_256B0366C(v10, v12);
    }
    uint64_t v28 = v5;
    uint64_t v13 = *(void *)(v10 + 16);
    if (v13)
    {
      uint64_t v14 = v10 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_256A39E54(v14, (uint64_t)v30);
        sub_256A39E54((uint64_t)v30, (uint64_t)v29);
        sub_256A39D2C(&qword_26B2B5D80);
        sub_256A39D2C(&qword_26B2B54E8);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v27 = 0;
          long long v25 = 0u;
          long long v26 = 0u;
        }
        sub_256A39DB4((uint64_t)v30);
        if (*((void *)&v26 + 1))
        {
          sub_256A3A540(&v25, (uint64_t)v29);
          sub_256A3A540(v29, (uint64_t)&v25);
          uint64_t v15 = v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_256B07A58();
            uint64_t v15 = v21;
            uint64_t v28 = v21;
          }
          unint64_t v16 = *(void *)(v15 + 16);
          if (v16 >= *(void *)(v15 + 24) >> 1)
          {
            sub_256B07A58();
            uint64_t v28 = v22;
          }
          uint64_t v17 = *((void *)&v26 + 1);
          uint64_t v18 = v27;
          sub_256A39E04((uint64_t)&v25, *((uint64_t *)&v26 + 1));
          sub_256A9FC2C();
          MEMORY[0x270FA5388](v19);
          sub_256AA03E8();
          (*(void (**)(unint64_t))(v20 + 16))(v1);
          sub_256B0D69C(v16, v1, &v28, v17, v18);
          sub_256A39DB4((uint64_t)&v25);
        }
        else
        {
          sub_256A8399C((uint64_t)&v25, &qword_26B2B5520);
        }
        v14 += 40;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return v28;
  }
  return result;
}

BOOL sub_256B06F80(void *a1, uint64_t a2)
{
  if (qword_26B2B6590 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_256B3F4A0();
  sub_256A46E9C(v4, (uint64_t)qword_26B2C4018);
  sub_256A39E54((uint64_t)a1, (uint64_t)v27);
  uint64_t v5 = sub_256B3F470();
  os_log_type_t v6 = sub_256B3F9C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_256A39D70(v27, AssociatedTypeWitness);
    sub_256B0E11C();
    sub_256A7A6B0();
    uint64_t v9 = v8();
    sub_256B3B598(v9, v10, &v30);
    sub_256B0E0E0();
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    sub_256A39DB4((uint64_t)v27);
    _os_log_impl(&dword_256A36000, v5, v6, "checking resource readiness: fetching asset for %s", v7, 0xCu);
    swift_arrayDestroy();
    sub_256A4A158();
    sub_256A4A158();
  }
  else
  {
    sub_256A39DB4((uint64_t)v27);
  }

  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_256A39D70(a1, v11);
  uint64_t v30 = a2;
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_256A49D7C(v27);
  v13(&v30, v11, v12);
  if (v25)
  {
    sub_256A6D92C((uint64_t)v27);
    sub_256A39E54((uint64_t)a1, (uint64_t)v27);
    id v14 = v25;
    id v15 = v25;
    unint64_t v16 = sub_256B3F470();
    os_log_type_t v17 = sub_256B3F9F0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      sub_256A39D70(v27, AssociatedTypeWitness);
      sub_256B0E11C();
      sub_256A7A6B0();
      uint64_t v21 = v20();
      sub_256B3B598(v21, v22, &v30);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      sub_256A39DB4((uint64_t)v27);
      *(_WORD *)(v18 + 12) = 2112;
      id v23 = v25;
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3FAA0();
      *uint64_t v19 = v26;

      _os_log_impl(&dword_256A36000, v16, v17, "resource %s is not ready: %@", (uint8_t *)v18, 0x16u);
      sub_256A39D2C(&qword_26B2B60C8);
      swift_arrayDestroy();
      sub_256A4A158();
      swift_arrayDestroy();
      sub_256A4A158();
      sub_256A4A158();
    }
    else
    {

      sub_256A39DB4((uint64_t)v27);
    }
  }
  else
  {
    sub_256A39DB4((uint64_t)v27);
  }
  return v25 != 0;
}

uint64_t sub_256B073D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_256B0DCA0();
  uint64_t v4 = sub_256B05E60();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = v4 + 32;
    while (v8 < *(void *)(v5 + 16))
    {
      sub_256A39E54(v9, (uint64_t)&v22);
      if (sub_256B07620(&v22))
      {
        sub_256A3A540(&v22, (uint64_t)v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_256B0B944();
        }
        uint64_t v10 = v24;
        unint64_t v11 = *(void *)(v24 + 16);
        if (v11 >= *(void *)(v24 + 24) >> 1)
        {
          sub_256B0B944();
          uint64_t v10 = v24;
        }
        *(void *)(v10 + 16) = v11 + 1;
        sub_256A3A540(v21, v10 + 40 * v11 + 32);
      }
      else
      {
        sub_256A39DB4((uint64_t)&v22);
      }
      ++v8;
      v9 += 40;
      if (v7 == v8)
      {
        uint64_t v6 = v24;
        goto LABEL_13;
      }
    }
    __break(1u);
    sub_256A39DB4((uint64_t)&v22);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v6 + 16);
    if (v12)
    {
      uint64_t v13 = v6 + 32;
      swift_retain();
      while (1)
      {
        sub_256A39E54(v13, (uint64_t)&v22);
        sub_256A39D70(&v22, v23);
        sub_256A7A6B0();
        if (v14() == a1 && v15 == a2)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        char v17 = sub_256B0E044();
        swift_bridgeObjectRelease();
        if (v17) {
          break;
        }
        sub_256A39DB4((uint64_t)&v22);
        v13 += 40;
        if (!--v12)
        {
          swift_release();
          goto LABEL_22;
        }
      }
      swift_release();
LABEL_25:
      sub_256A3A540(&v22, a3);
    }
    else
    {
LABEL_22:
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_256B07620(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_256A39D70(a1, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_256B0BA3C();
    uint64_t v5 = v14;
    unint64_t v6 = *(void *)(v14 + 16);
    uint64_t v7 = 32;
    do
    {
      char v8 = *(unsigned char *)(v3 + v7);
      if (v6 >= *(void *)(v14 + 24) >> 1) {
        sub_256B0BA3C();
      }
      *(void *)(v14 + 16) = v6 + 1;
      *(unsigned char *)(v14 + v6 + 32) = v8;
      v7 += 24;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t v9 = *(void *)(v5 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (2)
    {
      switch(*(unsigned char *)(v5 + v10 + 32))
      {
        case 1:
          swift_bridgeObjectRelease();
          char v11 = 1;
          goto LABEL_16;
        case 3:
          sub_256B0E108();
          goto LABEL_13;
        case 5:
          sub_256B0E0F4();
          goto LABEL_13;
        default:
LABEL_13:
          char v11 = sub_256B3FEA0();
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0 && v9 - 1 != v10++) {
            continue;
          }
LABEL_16:
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  else
  {
    char v11 = 0;
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_256B0784C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_256B05E94();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_256A39E54(v8, (uint64_t)&v15);
      uint64_t v9 = v16;
      uint64_t v10 = v17;
      sub_256A39D70(&v15, v16);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10) == a1 && v11 == a2) {
        break;
      }
      char v13 = sub_256B0E044();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_12;
      }
      sub_256A39DB4((uint64_t)&v15);
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_256A3A540(&v15, a3);
  }
  else
  {
LABEL_10:
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t CatalogIndex.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12ModelCatalog12CatalogIndex_sideloadURL;
  sub_256B3F300();
  sub_256A6E624();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CatalogIndex.__deallocating_deinit()
{
  CatalogIndex.deinit();
  sub_256B0DCA0();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return MEMORY[0x270FA0228](v0, v2, v3);
}

void sub_256B07A30()
{
}

void sub_256B07A44()
{
}

void sub_256B07A58()
{
  sub_256B0DF80();
  if (v5)
  {
    sub_256B0DCF4();
    if (v6 != v7)
    {
      sub_256B0DDC4();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  sub_256B0DF24();
  if (v4)
  {
    sub_256A39D2C(v8);
    uint64_t v9 = (char *)sub_256B0E0C0();
    size_t v10 = j__malloc_size(v9);
    sub_256B0E0AC(v10);
  }
  else
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v11 = v9 + 32;
  if (v2)
  {
    sub_256B08798((char *)(v0 + 32), v3, v11);
    sub_256B0DEFC();
  }
  else
  {
    sub_256B07EB0(0, v3, (unint64_t)v11, v0, v1);
  }
}

void sub_256B07B0C()
{
}

void sub_256B07B20(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_256B0DCF4();
    if (v8 != v9)
    {
      sub_256B0DDC4();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  sub_256B0DE98();
  if (v5)
  {
    sub_256A39D2C(&qword_26B2B50D0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (a1)
  {
    sub_256B084A4((char *)(a4 + 32), v4, (char *)(v10 + 32));
    sub_256B0DEFC();
  }
  else
  {
    uint64_t v12 = sub_256B0E034();
    sub_256B07FB4(v12, v13, v14, v15);
  }
}

void sub_256B07BE4(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_256B07C18(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_256B0DCF4();
    if (v8 != v9)
    {
      sub_256B0DDC4();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  sub_256B0DE98();
  if (v5)
  {
    sub_256A39D2C(&qword_269F7CBA0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (a1)
  {
    sub_256B088A8((char *)(a4 + 32), v4, (char *)(v10 + 32));
    sub_256B0DEFC();
  }
  else
  {
    uint64_t v12 = sub_256B0E034();
    sub_256B081C4(v12, v13, v14, v15);
  }
}

void sub_256B07CDC(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_256B07D10(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_256B0DCF4();
    if (v12 != v13)
    {
      sub_256B0DDC4();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_256A39D2C(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 32);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    sub_256B0DEFC();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

void sub_256B07DF8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_256B0DCF4();
    if (v8 != v9)
    {
      sub_256B0DDC4();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  sub_256B0DE98();
  if (v5)
  {
    sub_256A39D2C(qword_26B2B3700);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (a1)
  {
    sub_256B0893C((char *)(a4 + 32), v4, (char *)(v10 + 32));
    sub_256B0DEFC();
  }
  else
  {
    uint64_t v12 = sub_256B0E034();
    sub_256B083B4(v12, v13, v14, v15);
  }
}

uint64_t sub_256B07EB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_256A39D2C(a5);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  sub_256A49FEC();
  uint64_t result = sub_256B3FCB0();
  __break(1u);
  return result;
}

uint64_t sub_256B07FB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_256B3FCB0();
  __break(1u);
  return result;
}

uint64_t sub_256B080AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_256A39D2C(&qword_269F78D20);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_256B3FCB0();
  __break(1u);
  return result;
}

char *sub_256B081C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    unint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_256B3FCB0();
  __break(1u);
  return result;
}

uint64_t sub_256B082B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_256B3FCB0();
  __break(1u);
  return result;
}

char *sub_256B083B4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_256B3FCB0();
  __break(1u);
  return result;
}

char *sub_256B084A4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_256B3FCB0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

uint64_t sub_256B08538(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t v8 = sub_256B3FCB0();
    __break(1u);
    return MEMORY[0x270FA01D0](v8, v9, v10, v7);
  }
  if (a3 < a1 || (uint64_t result = sub_256B3F300(), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    uint64_t v11 = sub_256B3F300();
    return MEMORY[0x270FA01D8](a3, a1, a2, v11);
  }
  else if (a3 != a1)
  {
    uint64_t v7 = result;
    uint64_t v8 = a3;
    unint64_t v9 = a1;
    uint64_t v10 = a2;
    return MEMORY[0x270FA01D0](v8, v9, v10, v7);
  }
  return result;
}

char *sub_256B08668(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_256B3FCB0();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_256B08700(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_256B3FCB0();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_256B08798(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_256A49FEC();
    __src = (char *)sub_256B0E004();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_256B08814(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_256B3FCB0();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_256B088A8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_256B3FCB0();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_256B0893C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_256A49FEC();
    __src = (char *)sub_256B0E004();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unint64_t sub_256B089AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_26B2B33E0);
  uint64_t v3 = sub_256B3FB50();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      unint64_t result = sub_256B09724(*(void *)(*(void *)(v2 + 48) + 24 * i), *(void *)(*(void *)(v2 + 48) + 24 * i + 8), *(unsigned char *)(*(void *)(v2 + 48) + 24 * i + 16), v3);
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
              if (v16 > 63) {
                sub_256B0A3CC(0, (unint64_t)(v16 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *unint64_t v5 = -1 << v16;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_28;
                }
                if (v10 >= v8) {
                  goto LABEL_22;
                }
                unint64_t v14 = v5[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_19:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_256B08B88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_26B2B33D8);
  uint64_t v3 = sub_256B3FB50();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v39 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v37 = v0;
    int64_t v38 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v40 = v2;
    uint64_t v41 = v4;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v42 = v10;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v15 << 6))
    {
      uint64_t v17 = *(void *)(v2 + 48) + 40 * i;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      int v20 = *(unsigned __int8 *)(v17 + 16);
      uint64_t v21 = *(void *)(v17 + 24);
      int v22 = *(unsigned __int8 *)(v17 + 34);
      int v23 = *(unsigned __int16 *)(v17 + 32);
      char v24 = *(unsigned char *)(v17 + 35);
      sub_256B3FF40();
      swift_bridgeObjectRetain();
      sub_256B3F740();
      if (v20 != 2) {
        sub_256B3FF60();
      }
      int v25 = v23 | (v22 << 16);
      sub_256B3FF60();
      swift_bridgeObjectRelease();
      if (v25 == 2)
      {
        uint64_t v4 = v41;
        uint64_t v26 = v21;
      }
      else
      {
        sub_256B3FF60();
        uint64_t v26 = v21;
        sub_256B3FF50();
        sub_256B3FF60();
        sub_256B3FF60();
        uint64_t v4 = v41;
      }
      sub_256B3FF60();
      sub_256B3FF50();
      uint64_t result = sub_256B3FF70();
      uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6))) == 0)
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v27) >> 6;
        while (++v29 != v32 || (v31 & 1) == 0)
        {
          BOOL v33 = v29 == v32;
          if (v29 == v32) {
            unint64_t v29 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v8 + 8 * v29);
          if (v34 != -1)
          {
            unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
            goto LABEL_35;
          }
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
      *(void *)(v8 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      uint64_t v35 = *(void *)(v4 + 48) + 40 * v30;
      int64_t v10 = v42;
      *(void *)uint64_t v35 = v18;
      *(void *)(v35 + 8) = v19;
      *(unsigned char *)(v35 + 16) = v20;
      *(void *)(v35 + 24) = v26;
      *(unsigned char *)(v35 + 34) = BYTE2(v25);
      *(_WORD *)(v35 + 32) = v25;
      *(unsigned char *)(v35 + 35) = v24;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v40;
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_43;
      }
      if (v13 >= v38) {
        goto LABEL_37;
      }
      unint64_t v14 = v39[v13];
      int64_t v15 = v10 + 1;
      if (!v14)
      {
        int64_t v15 = v10 + 2;
        if (v10 + 2 >= v38) {
          goto LABEL_37;
        }
        unint64_t v14 = v39[v15];
        if (!v14)
        {
          int64_t v15 = v10 + 3;
          if (v10 + 3 >= v38) {
            goto LABEL_37;
          }
          unint64_t v14 = v39[v15];
          if (!v14)
          {
            uint64_t v16 = v10 + 4;
            if (v10 + 4 >= v38)
            {
LABEL_37:
              swift_release();
              uint64_t v1 = v37;
              uint64_t v36 = 1 << *(unsigned char *)(v2 + 32);
              if (v36 > 63) {
                sub_256B0A3CC(0, (unint64_t)(v36 + 63) >> 6, v39);
              }
              else {
                *uint64_t v39 = -1 << v36;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v39[v16];
            if (!v14)
            {
              while (1)
              {
                int64_t v15 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_44;
                }
                if (v15 >= v38) {
                  goto LABEL_37;
                }
                unint64_t v14 = v39[v15];
                ++v16;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v15 = v10 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
      int64_t v42 = v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_256B08F78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_26B2B6448);
  uint64_t v3 = sub_256B3FB50();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_256B3FF40();
      sub_256B3F740();
      uint64_t result = sub_256B3FF70();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *unint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_256B0A3CC(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *unint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_256B09254()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_269F7CB80);
  uint64_t v3 = sub_256B3FB50();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
      sub_256B3FF40();
      Tag.rawValue.getter();
      sub_256B3F740();
      swift_bridgeObjectRelease();
      uint64_t result = sub_256B3FF70();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_256B0A3CC(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_256B0952C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_269F7CB98);
  uint64_t v3 = sub_256B3FB50();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      uint64_t v15 = *(void *)(v2 + 48) + 56 * i;
      long long v16 = *(_OWORD *)(v15 + 16);
      v18[0] = *(_OWORD *)v15;
      v18[1] = v16;
      v18[2] = *(_OWORD *)(v15 + 32);
      char v19 = *(unsigned char *)(v15 + 48);
      sub_256B09828((uint64_t)v18, v3);
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v12 >= v8) {
        goto LABEL_22;
      }
      unint64_t v13 = v5[v12];
      ++v9;
      if (!v13)
      {
        int64_t v9 = v12 + 1;
        if (v12 + 1 >= v8) {
          goto LABEL_22;
        }
        unint64_t v13 = v5[v9];
        if (!v13)
        {
          int64_t v9 = v12 + 2;
          if (v12 + 2 >= v8) {
            goto LABEL_22;
          }
          unint64_t v13 = v5[v9];
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v8)
            {
LABEL_22:
              swift_release();
              uint64_t v17 = 1 << *(unsigned char *)(v2 + 32);
              if (v17 > 63) {
                sub_256B0A3CC(0, (unint64_t)(v17 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v5 = -1 << v17;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v13 = v5[v14];
            if (!v13)
            {
              while (1)
              {
                int64_t v9 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_28;
                }
                if (v9 >= v8) {
                  goto LABEL_22;
                }
                unint64_t v13 = v5[v9];
                ++v14;
                if (v13) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v9 = v14;
          }
        }
      }
LABEL_19:
      unint64_t v7 = (v13 - 1) & v13;
    }
  }
  swift_release();
  *uint64_t v1 = v3;
}

unint64_t sub_256B09724(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  int v8 = a3;
  sub_256B3FF40();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  if (v8 != 2) {
    sub_256B3FF60();
  }
  sub_256B3FF60();
  sub_256B3FF70();
  unint64_t result = sub_256B3FAF0();
  *(void *)(a4 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  uint64_t v10 = *(void *)(a4 + 48) + 24 * result;
  *(void *)uint64_t v10 = a1;
  *(void *)(v10 + 8) = a2;
  *(unsigned char *)(v10 + 16) = a3;
  ++*(void *)(a4 + 16);
  return result;
}

__n128 sub_256B09828(uint64_t a1, uint64_t a2)
{
  sub_256B3FF40();
  int v4 = *(unsigned __int8 *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  sub_256B3FF60();
  if (v4 != 11) {
    sub_256A86918((uint64_t)v9, v4);
  }
  sub_256B3FF70();
  unint64_t v5 = sub_256B3FAF0();
  *(void *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  uint64_t v6 = *(void *)(a2 + 48) + 56 * v5;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 16) = v7;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v6 + 32) = result;
  *(unsigned char *)(v6 + 48) = *(unsigned char *)(a1 + 48);
  ++*(void *)(a2 + 16);
  return result;
}

void sub_256B09990(uint64_t a1, uint64_t a2, int a3, unint64_t a4)
{
  sub_256B0DD90();
  if (!(!v21 & v12) || (v9 & 1) == 0)
  {
    if (v9)
    {
      sub_256B089AC();
    }
    else
    {
      if (v11 > v10)
      {
        sub_256B0A3E8();
        goto LABEL_24;
      }
      sub_256B0ACB0();
    }
    uint64_t v13 = *v4;
    sub_256B3FF40();
    swift_bridgeObjectRetain();
    sub_256B3F740();
    swift_bridgeObjectRelease();
    if (a3 != 2) {
      sub_256B3FF60();
    }
    sub_256B3FF60();
    uint64_t v14 = sub_256B3FF70();
    uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
    a4 = v14 & ~v15;
    uint64_t v16 = v13 + 56;
    if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      uint64_t v17 = ~v15;
      uint64_t v18 = *(void *)(v13 + 48);
      do
      {
        uint64_t v19 = v18 + 24 * a4;
        int v20 = *(unsigned __int8 *)(v19 + 16);
        BOOL v21 = *(void *)v19 == a1 && *(void *)(v19 + 8) == a2;
        if (v21 || (sub_256B3FEA0() & 1) != 0)
        {
          if (v20 == 2)
          {
            if (a3 == 2) {
              goto LABEL_27;
            }
          }
          else if a3 != 2 && ((a3 ^ ((v20 & 1) == 0)))
          {
            goto LABEL_27;
          }
        }
        a4 = (a4 + 1) & v17;
      }
      while (((*(void *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_24:
  sub_256B0DCD0();
  uint64_t v23 = v22 + 24 * a4;
  *(void *)uint64_t v23 = a1;
  *(void *)(v23 + 8) = a2;
  *(unsigned char *)(v23 + 16) = a3;
  sub_256B0DE74();
  if (v26)
  {
    __break(1u);
LABEL_27:
    sub_256B3FEE0();
    __break(1u);
  }
  else
  {
    *(void *)(v24 + 16) = v25;
  }
}

void sub_256B09B7C(uint64_t *a1, unint64_t a2)
{
  sub_256B0DD90();
  BOOL v33 = v8;
  if (!(!v24 & v9) || (v5 & 1) == 0)
  {
    if (v5)
    {
      sub_256B08B88();
    }
    else
    {
      if (v7 > v6)
      {
        sub_256B0A5A8();
        goto LABEL_31;
      }
      sub_256B0AE7C();
    }
    uint64_t v10 = *v2;
    long long v11 = *((_OWORD *)a1 + 1);
    v42[0] = *(_OWORD *)a1;
    v42[1] = v11;
    int v43 = *((_DWORD *)a1 + 8);
    sub_256B3FF40();
    ExecutionContext.hash(into:)();
    uint64_t v12 = sub_256B3FF70();
    uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
    a2 = v12 & ~v13;
    uint64_t v36 = v10 + 56;
    if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v35 = ~v13;
      uint64_t v34 = *(void *)(v10 + 48);
      uint64_t v14 = *a1;
      uint64_t v15 = a1[1];
      int v37 = *((unsigned __int8 *)a1 + 16);
      sub_256A3A558((uint64_t)(a1 + 3), (uint64_t)v44);
      int v32 = *((unsigned __int8 *)a1 + 35);
      do
      {
        uint64_t v16 = v34 + 40 * a2;
        int v17 = *(unsigned __int8 *)(v16 + 16);
        uint64_t v18 = *(void *)(v16 + 24);
        int v19 = *(unsigned __int8 *)(v16 + 32);
        int v20 = *(unsigned __int8 *)(v16 + 33);
        int v21 = *(unsigned __int8 *)(v16 + 34);
        __int16 v22 = *(_WORD *)(v16 + 32);
        int v23 = *(unsigned __int8 *)(v16 + 35);
        BOOL v24 = *(void *)v16 == v14 && *(void *)(v16 + 8) == v15;
        if (!v24 && (sub_256B3FEA0() & 1) == 0) {
          goto LABEL_30;
        }
        if (v17 == 2)
        {
          if (v37 != 2) {
            goto LABEL_30;
          }
        }
        else if (v37 == 2 || ((v37 ^ ((v17 & 1) == 0)) & 1) == 0)
        {
          goto LABEL_30;
        }
        sub_256A3A558((uint64_t)v44, (uint64_t)&v38);
        if (v22 == 2)
        {
          sub_256A3A558((uint64_t)v44, (uint64_t)v42);
          if (BYTE8(v42[0]) == 2) {
            goto LABEL_29;
          }
        }
        else
        {
          sub_256A3A558((uint64_t)v44, (uint64_t)v45);
          if (v45[8] != 2 && v18 == v38 && ((v19 ^ v39) & 1) == 0 && ((v40 ^ v20) & 1) == 0 && ((v21 ^ v41) & 1) == 0)
          {
LABEL_29:
            if (v23 == v32) {
              goto LABEL_34;
            }
          }
        }
LABEL_30:
        a2 = (a2 + 1) & v35;
      }
      while (((*(void *)(v36 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_31:
  sub_256B0DCD0();
  uint64_t v26 = v25 + 40 * a2;
  long long v27 = *v33;
  long long v28 = v33[1];
  *(_DWORD *)(v26 + 32) = *((_DWORD *)v33 + 8);
  *(_OWORD *)uint64_t v26 = v27;
  *(_OWORD *)(v26 + 16) = v28;
  sub_256B0DE74();
  if (v31)
  {
    __break(1u);
LABEL_34:
    sub_256B3FEE0();
    __break(1u);
  }
  else
  {
    *(void *)(v29 + 16) = v30;
  }
}

void sub_256B09E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256B0DD90();
  if (!v17 & v10 && (v7 & 1) != 0) {
    goto LABEL_23;
  }
  if (v7)
  {
    sub_256B08F78();
  }
  else
  {
    if (v9 > v8)
    {
      sub_256B0A778();
      goto LABEL_23;
    }
    sub_256B0B228();
  }
  uint64_t v11 = *v3;
  sub_256B3FF40();
  sub_256B3F740();
  uint64_t v12 = sub_256B3FF70();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  a3 = v12 & ~v13;
  sub_256B0E188();
  if (v14)
  {
    uint64_t v15 = *(void *)(v11 + 48);
    uint64_t v16 = (void *)(v15 + 16 * a3);
    BOOL v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_256B0E170() & 1) != 0)
    {
LABEL_22:
      sub_256B3FEE0();
      __break(1u);
    }
    else
    {
      uint64_t v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        sub_256B0E188();
        if ((v19 & 1) == 0) {
          break;
        }
        int v20 = (void *)(v15 + 16 * a3);
        BOOL v21 = *v20 == a1 && v20[1] == a2;
        if (v21 || (sub_256B0E170() & 1) != 0) {
          goto LABEL_22;
        }
      }
    }
  }
LABEL_23:
  sub_256B0DCD0();
  int v23 = (void *)(v22 + 16 * a3);
  void *v23 = a1;
  v23[1] = a2;
  sub_256B0DE74();
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v25;
  }
}

void sub_256B09F7C(char a1, unint64_t a2)
{
  sub_256B0DD90();
  if (!v17 & v8 && (v5 & 1) != 0) {
    goto LABEL_17;
  }
  if (v5)
  {
    sub_256B09254();
  }
  else
  {
    if (v7 > v6)
    {
      sub_256B0A92C();
      goto LABEL_17;
    }
    sub_256B0B4D4();
  }
  uint64_t v9 = *v2;
  uint64_t v10 = sub_256A55F30();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      unint64_t v13 = Tag.rawValue.getter();
      uint64_t v15 = v14;
      BOOL v17 = v13 == Tag.rawValue.getter() && v15 == v16;
      if (v17) {
        goto LABEL_20;
      }
      char v18 = sub_256B3FEA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_21;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_17:
  sub_256B0DCD0();
  *(unsigned char *)(v19 + a2) = a1;
  sub_256B0DE74();
  if (!v22)
  {
    *(void *)(v20 + 16) = v21;
    return;
  }
  __break(1u);
LABEL_20:
  swift_bridgeObjectRelease_n();
LABEL_21:
  sub_256B3FEE0();
  __break(1u);
}

void sub_256B0A108(uint64_t *a1, unint64_t a2)
{
  sub_256B0DD90();
  uint64_t v35 = v8;
  if (!(!v26 & v9) || (v5 & 1) == 0)
  {
    if (v5)
    {
      sub_256B0952C();
    }
    else
    {
      if (v7 > v6)
      {
        sub_256B0AAC4();
        goto LABEL_34;
      }
      sub_256B0B778();
    }
    uint64_t v39 = *v2;
    sub_256B3FF40();
    uint64_t v10 = *a1;
    uint64_t v11 = a1[1];
    uint64_t v12 = a1[2];
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    uint64_t v15 = a1[5];
    int v16 = *((unsigned __int8 *)a1 + 48);
    swift_bridgeObjectRetain();
    sub_256B3F740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v40 = v12;
    sub_256B3F740();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v38 = v14;
    sub_256B3F740();
    uint64_t v37 = v15;
    swift_bridgeObjectRelease();
    sub_256B3FF60();
    if (v16 != 11) {
      sub_256A86918((uint64_t)v41, v16);
    }
    uint64_t v17 = sub_256B3FF70();
    uint64_t v18 = -1 << *(unsigned char *)(v39 + 32);
    a2 = v17 & ~v18;
    if ((*(void *)(v39 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      int v36 = v16;
      uint64_t v19 = ~v18;
      do
      {
        uint64_t v20 = *(void *)(v39 + 48) + 56 * a2;
        uint64_t v21 = *(void *)(v20 + 16);
        uint64_t v22 = *(void *)(v20 + 24);
        uint64_t v24 = *(void *)(v20 + 32);
        uint64_t v23 = *(void *)(v20 + 40);
        int v25 = *(unsigned __int8 *)(v20 + 48);
        BOOL v26 = *(void *)v20 == v10 && *(void *)(v20 + 8) == v11;
        if (v26 || (sub_256B3FEA0() & 1) != 0)
        {
          BOOL v27 = v21 == v40 && v22 == v13;
          if (v27 || (sub_256B3FEA0() & 1) != 0)
          {
            BOOL v28 = v24 == v38 && v23 == v37;
            if (v28 || (sub_256B3FEA0() & 1) != 0)
            {
              if (v25 == 11)
              {
                if (v36 == 11) {
                  goto LABEL_37;
                }
              }
              else if (v36 != 11 && (sub_256B026BC(v25, v36) & 1) != 0)
              {
                goto LABEL_37;
              }
            }
          }
        }
        a2 = (a2 + 1) & v19;
      }
      while (((*(void *)(v39 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_34:
  sub_256B0DCD0();
  uint64_t v30 = v29 + 56 * a2;
  long long v31 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v35;
  *(_OWORD *)(v30 + 16) = v31;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v35 + 32);
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v35 + 48);
  sub_256B0DE74();
  if (v34)
  {
    __break(1u);
LABEL_37:
    sub_256B3FEE0();
    __break(1u);
  }
  else
  {
    *(void *)(v32 + 16) = v33;
  }
}

uint64_t sub_256B0A3CC(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void *sub_256B0A3E8()
{
  uint64_t v1 = v0;
  sub_256A39D2C(&qword_26B2B33E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256B3FB40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 3 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    uint64_t v24 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v24 = v23;
    *(void *)(v24 + 8) = v22;
    *(unsigned char *)(v24 + 16) = v21;
    __n128 result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256B0A5A8()
{
  uint64_t v1 = v0;
  sub_256A39D2C(&qword_26B2B33D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256B3FB40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    LODWORD(v21) = *(_DWORD *)(v21 + 32);
    uint64_t v26 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v26 = v23;
    *(void *)(v26 + 8) = v22;
    *(unsigned char *)(v26 + 16) = v24;
    *(void *)(v26 + 24) = v25;
    *(_DWORD *)(v26 + 32) = v21;
    __n128 result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256B0A778()
{
  uint64_t v1 = v0;
  sub_256A39D2C(&qword_26B2B6448);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256B3FB40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    void *v22 = *v20;
    v22[1] = v21;
    __n128 result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256B0A92C()
{
  uint64_t v1 = v0;
  sub_256A39D2C(&qword_269F7CB80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256B3FB40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_256B0AAC4()
{
  uint64_t v1 = v0;
  sub_256A39D2C(&qword_269F7CB98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256B3FB40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 56 * i;
    uint64_t v21 = *(void *)(v2 + 48) + v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = *(void *)(v21 + 32);
    uint64_t v27 = *(void *)(v21 + 40);
    LOBYTE(v21) = *(unsigned char *)(v21 + 48);
    uint64_t v28 = *(void *)(v4 + 48) + v20;
    *(void *)uint64_t v28 = v23;
    *(void *)(v28 + 8) = v22;
    *(void *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v25;
    *(void *)(v28 + 32) = v26;
    *(void *)(v28 + 40) = v27;
    *(unsigned char *)(v28 + 48) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __n128 result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_256B0ACB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_26B2B33E0);
  uint64_t v3 = sub_256B3FB50();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v20 = v1;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v2 + 48) + 24 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    unsigned __int8 v19 = *(unsigned char *)(v16 + 16);
    swift_bridgeObjectRetain();
    unint64_t result = sub_256B09724(v17, v18, v19, v3);
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    uint64_t v1 = v20;
    goto LABEL_23;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_256B0AE7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_26B2B33D8);
  uint64_t v3 = sub_256B3FB50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  char v34 = v0;
  uint64_t v35 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v37 = v2;
  uint64_t v38 = v4;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v39 = (v7 - 1) & v7;
  int64_t v40 = v10;
  for (unint64_t i = __clz(__rbit64(v7)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = *(void *)(v2 + 48) + 40 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    int v19 = *(unsigned __int8 *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    int v21 = *(unsigned __int8 *)(v16 + 34);
    int v22 = *(unsigned __int16 *)(v16 + 32);
    char v23 = *(unsigned char *)(v16 + 35);
    sub_256B3FF40();
    swift_bridgeObjectRetain_n();
    sub_256B3F740();
    if (v19 != 2) {
      sub_256B3FF60();
    }
    int v24 = v22 | (v21 << 16);
    sub_256B3FF60();
    swift_bridgeObjectRelease();
    if (v24 != 2)
    {
      sub_256B3FF60();
      sub_256B3FF50();
      sub_256B3FF60();
      sub_256B3FF60();
    }
    uint64_t v4 = v38;
    sub_256B3FF60();
    sub_256B3FF50();
    uint64_t result = sub_256B3FF70();
    uint64_t v25 = -1 << *(unsigned char *)(v38 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v8 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v8 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v8 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = *(void *)(v38 + 48) + 40 * v28;
    *(void *)uint64_t v33 = v17;
    *(void *)(v33 + 8) = v18;
    *(unsigned char *)(v33 + 16) = v19;
    *(void *)(v33 + 24) = v20;
    *(unsigned char *)(v33 + 34) = BYTE2(v24);
    *(_WORD *)(v33 + 32) = v24;
    *(unsigned char *)(v33 + 35) = v23;
    ++*(void *)(v38 + 16);
    uint64_t v2 = v37;
    unint64_t v7 = v39;
    int64_t v10 = v40;
    if (v39) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_40;
    }
    if (v12 >= v36) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v35 + 8 * v12);
    int64_t v14 = v10 + 1;
    if (!v13)
    {
      int64_t v14 = v10 + 2;
      if (v10 + 2 >= v36) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v35 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v10 + 3;
        if (v10 + 3 >= v36) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v35 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v39 = (v13 - 1) & v13;
    int64_t v40 = v14;
  }
  uint64_t v15 = v10 + 4;
  if (v10 + 4 >= v36)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_38;
  }
  unint64_t v13 = *(void *)(v35 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v36) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v35 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_256B0B228()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_26B2B6448);
  uint64_t v3 = sub_256B3FB50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_256B3FF40();
    swift_bridgeObjectRetain();
    sub_256B3F740();
    uint64_t result = sub_256B3FF70();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_256B0B4D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_269F7CB80);
  uint64_t v3 = sub_256B3FB50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
    sub_256B3FF40();
    Tag.rawValue.getter();
    sub_256B3F740();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256B3FF70();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_256B0B778()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_256A39D2C(&qword_269F7CB98);
  uint64_t v3 = sub_256B3FB50();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = *(void *)(v2 + 48) + 56 * i;
    char v16 = *(unsigned char *)(v15 + 48);
    long long v17 = *(_OWORD *)(v15 + 32);
    long long v18 = *(_OWORD *)v15;
    v19[1] = *(_OWORD *)(v15 + 16);
    v19[2] = v17;
    v19[0] = v18;
    char v20 = v16;
    sub_256A3A43C((uint64_t)v19);
    sub_256B09828((uint64_t)v19, v3);
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_256B0B944()
{
  sub_256B0BF0C();
  void *v0 = v1;
}

uint64_t sub_256B0B980(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_256B0BAB4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_256B0B9A0(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_256B0BB98(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_256B0B9C0(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_256B0BD34(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_256B0B9E0(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_256B0BE20(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void sub_256B0BA00()
{
  sub_256B0BF0C();
  void *v0 = v1;
}

void sub_256B0BA3C()
{
  sub_256B0BFBC();
  void *v0 = v1;
}

void sub_256B0BA78()
{
  sub_256B0BFBC();
  void *v0 = v1;
}

uint64_t sub_256B0BAB4(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256A39D2C(&qword_26B2B50D0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    sub_256B084A4((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256A47068();
  }
  swift_release();
  return v10;
}

size_t sub_256B0BB98(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_256A39D2C(&qword_269F7CB90);
  uint64_t v10 = *(void *)(sub_256B3F300() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_256B3F300() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (unint64_t)v13 + v16;
  unint64_t v18 = a4 + v16;
  if (v5)
  {
    sub_256B08538(v18, v8, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256A47120(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_256B0BD34(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256A39D2C(&qword_26B2B3400);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    sub_256B08668((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256A471F4();
  }
  swift_release();
  return v10;
}

uint64_t sub_256B0BE20(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_256A39D2C(&qword_26B2B33F8);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    sub_256B08700((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256A472A4();
  }
  swift_release();
  return v10;
}

void sub_256B0BF0C()
{
  sub_256B0DF80();
  if (v5)
  {
    sub_256B0DCF4();
    if (v6 != v7)
    {
      sub_256B0DDC4();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  sub_256B0DF24();
  if (v4)
  {
    sub_256A39D2C(v8);
    uint64_t v9 = (char *)sub_256B0E0C0();
    size_t v10 = j__malloc_size(v9);
    sub_256B0E0AC(v10);
  }
  else
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v11 = v9 + 32;
  unint64_t v12 = (char *)(v0 + 32);
  if (v2)
  {
    sub_256B08798(v12, v3, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12, v3, v11);
  }
  swift_release();
}

void sub_256B0BFBC()
{
  sub_256B0DF80();
  if (v5)
  {
    sub_256B0DCF4();
    if (v6 != v7)
    {
      sub_256B0DDC4();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_256B0DCE4();
    }
  }
  sub_256B0DF24();
  if (v4)
  {
    sub_256A39D2C(v8);
    uint64_t v9 = (char *)swift_allocObject();
    size_t v10 = j__malloc_size(v9);
    *((void *)v9 + 2) = v3;
    *((void *)v9 + 3) = 2 * v10 - 64;
  }
  else
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v11 = v9 + 32;
  unint64_t v12 = (char *)(v0 + 32);
  if (v2)
  {
    sub_256B0893C(v12, v3, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12, v3, v11);
  }
  swift_release();
}

void sub_256B0C07C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 32);
  size_t v3 = (void *)((unint64_t)((1 << v2) + 63) >> 6);
  if ((v2 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    sub_256B0DDE0();
    swift_release();
    if (!v3) {
      return;
    }
    swift_willThrow();

    __break(1u);
  }
  swift_slowAlloc();
  sub_256B0DDE0();
  swift_release();
  if (v3)
  {

    sub_256A4A158();
    __break(1u);
  }
  else
  {
    sub_256A4A158();
  }
}

uint64_t sub_256B0C1B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  char v6 = "availability-useCaseID-VisualGeneration.GenerativePlayground";
  uint64_t v7 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v64 = a4 + 56;
    uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v72 = v9 & *(void *)(a4 + 56);
    int64_t v67 = (unint64_t)(v8 + 63) >> 6;
    int64_t v69 = 0;
    uint64_t v10 = a3 + 56;
    do
    {
      uint64_t v71 = v7;
      do
      {
LABEL_7:
        if (v72)
        {
          unint64_t v11 = __clz(__rbit64(v72));
          v72 &= v72 - 1;
          unint64_t v12 = v11 | (v69 << 6);
        }
        else
        {
          int64_t v13 = v69 + 1;
          if (__OFADD__(v69, 1))
          {
            __break(1u);
LABEL_244:
            __break(1u);
            goto LABEL_245;
          }
          if (v13 >= v67) {
            goto LABEL_242;
          }
          unint64_t v14 = *(void *)(v64 + 8 * v13);
          int64_t v15 = v69 + 1;
          if (!v14)
          {
            int64_t v15 = v69 + 2;
            if (v69 + 2 >= v67) {
              goto LABEL_242;
            }
            unint64_t v14 = *(void *)(v64 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v69 + 3;
              if (v69 + 3 >= v67) {
                goto LABEL_242;
              }
              unint64_t v14 = *(void *)(v64 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v69 + 4;
                if (v69 + 4 >= v67) {
                  goto LABEL_242;
                }
                unint64_t v14 = *(void *)(v64 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v15 >= v67) {
                      goto LABEL_242;
                    }
                    unint64_t v14 = *(void *)(v64 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
LABEL_245:
                  __break(1u);
                  goto LABEL_246;
                }
                int64_t v15 = v69 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v72 = (v14 - 1) & v14;
          int64_t v69 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v12);
        sub_256B3FF40();
        Tag.rawValue.getter();
        sub_256B3F740();
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_256B3FF70();
        uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v20 = v18 & ~v19;
      }
      while (((*(void *)(v10 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0);
      uint64_t v21 = ~v19;
      while (1)
      {
        unint64_t v22 = 0xD00000000000003CLL;
        unint64_t v23 = 0x8000000256B41150;
        switch(*(unsigned char *)(*(void *)(v5 + 48) + v20))
        {
          case 1:
            unint64_t v22 = 0xD00000000000003ELL;
            unint64_t v24 = "availability-useCaseID-VisualGeneration.KeyboardEmojiGenerator";
            goto LABEL_67;
          case 2:
            BOOL v25 = "availability-useCaseID-classification.classifyMailMessage";
            goto LABEL_65;
          case 3:
            BOOL v25 = "availability-useCaseID-classification.classifyTextMessage";
            goto LABEL_65;
          case 4:
            unint64_t v22 = 0xD00000000000003FLL;
            unint64_t v24 = "availability-useCaseID-classification.classifyTextMessageThread";
            goto LABEL_67;
          case 5:
            unint64_t v22 = 0xD00000000000003ELL;
            unint64_t v24 = "availability-useCaseID-classification.classifyUserNotification";
            goto LABEL_67;
          case 6:
            BOOL v25 = "availability-useCaseID-com.apple.PaperKit.ImageGeneration";
            goto LABEL_65;
          case 7:
            unint64_t v22 = 0xD00000000000003BLL;
            unint64_t v24 = "availability-useCaseID-com.apple.Settings.AppleIntelligence";
            goto LABEL_67;
          case 8:
            unint64_t v22 = 0xD000000000000045;
            unint64_t v24 = "availability-useCaseID-com.apple.Settings.AppleIntelligence.Diffusion";
            goto LABEL_67;
          case 9:
            unint64_t v22 = 0xD00000000000002ELL;
            unint64_t v24 = "availability-useCaseID-com.apple.Siri.NLRouter";
            goto LABEL_67;
          case 0xA:
            unint64_t v22 = 0xD00000000000002DLL;
            unint64_t v24 = "availability-useCaseID-com.apple.WritingTools";
            goto LABEL_67;
          case 0xB:
            unint64_t v22 = 0xD000000000000033;
            unint64_t v24 = "availability-useCaseID-memoryCreation.AssetCuration";
            goto LABEL_67;
          case 0xC:
            unint64_t v22 = 0xD000000000000038;
            unint64_t v24 = "availability-useCaseID-memoryCreation.AutonamingMessages";
            goto LABEL_67;
          case 0xD:
            unint64_t v22 = 0xD000000000000032;
            unint64_t v24 = "availability-useCaseID-memoryCreation.GlobalTraits";
            goto LABEL_67;
          case 0xE:
            unint64_t v22 = 0xD000000000000038;
            unint64_t v24 = "availability-useCaseID-memoryCreation.QueryUnderstanding";
            goto LABEL_67;
          case 0xF:
            unint64_t v22 = 0xD000000000000031;
            unint64_t v24 = "availability-useCaseID-memoryCreation.Storyteller";
            goto LABEL_67;
          case 0x10:
            BOOL v25 = "availability-useCaseID-summarization.notesAudioTranscript";
            goto LABEL_65;
          case 0x11:
            unint64_t v22 = 0xD000000000000031;
            unint64_t v24 = "availability-useCaseID-summarization.safariReader";
            goto LABEL_67;
          case 0x12:
            BOOL v25 = "availability-useCaseID-summarization.summarizeMailMessage";
            goto LABEL_65;
          case 0x13:
            unint64_t v22 = 0xD00000000000003FLL;
            unint64_t v24 = "availability-useCaseID-summarization.summarizeMailMessageThread";
            goto LABEL_67;
          case 0x14:
            BOOL v25 = "availability-useCaseID-summarization.summarizeTextMessage";
            goto LABEL_65;
          case 0x15:
            unint64_t v22 = 0xD00000000000003FLL;
            unint64_t v24 = "availability-useCaseID-summarization.summarizeTextMessageThread";
            goto LABEL_67;
          case 0x16:
            unint64_t v22 = 0xD00000000000003ELL;
            unint64_t v24 = "availability-useCaseID-summarization.summarizeUserNotification";
            goto LABEL_67;
          case 0x17:
            unint64_t v22 = 0xD000000000000044;
            unint64_t v24 = "availability-useCaseID-summarization.summarizeUserNotificationThread";
            goto LABEL_67;
          case 0x18:
            unint64_t v22 = 0xD000000000000032;
            unint64_t v24 = "availability-useCaseID-summarization.textAssistant";
            goto LABEL_67;
          case 0x19:
            unint64_t v22 = 0xD000000000000037;
            unint64_t v24 = "availability-useCaseID-textComposition.BulletsTransform";
            goto LABEL_67;
          case 0x1A:
            unint64_t v22 = 0xD000000000000032;
            unint64_t v24 = "availability-useCaseID-textComposition.ConciseTone";
            goto LABEL_67;
          case 0x1B:
            unint64_t v22 = 0xD000000000000033;
            unint64_t v24 = "availability-useCaseID-textComposition.FriendlyTone";
            goto LABEL_67;
          case 0x1C:
            unint64_t v22 = 0xD000000000000033;
            unint64_t v24 = "availability-useCaseID-textComposition.MagicRewrite";
            goto LABEL_67;
          case 0x1D:
            unint64_t v22 = 0xD000000000000030;
            unint64_t v24 = "availability-useCaseID-textComposition.MailReply";
            goto LABEL_67;
          case 0x1E:
            unint64_t v22 = 0xD00000000000003DLL;
            unint64_t v24 = "availability-useCaseID-textComposition.MailReplyLongFormBasic";
            goto LABEL_67;
          case 0x1F:
            unint64_t v22 = 0xD00000000000003FLL;
            unint64_t v24 = "availability-useCaseID-textComposition.MailReplyLongFormRewrite";
            goto LABEL_67;
          case 0x20:
            unint64_t v22 = 0xD000000000000032;
            unint64_t v24 = "availability-useCaseID-textComposition.MailReplyQA";
            goto LABEL_67;
          case 0x21:
            unint64_t v22 = 0xD000000000000034;
            unint64_t v24 = "availability-useCaseID-textComposition.MessagesReply";
            goto LABEL_67;
          case 0x22:
            unint64_t v22 = 0xD000000000000036;
            unint64_t v24 = "availability-useCaseID-textComposition.OpenEndedSchema";
            goto LABEL_67;
          case 0x23:
            unint64_t v22 = 0xD000000000000034;
            unint64_t v24 = "availability-useCaseID-textComposition.OpenEndedTone";
            goto LABEL_67;
          case 0x24:
            unint64_t v22 = 0xD000000000000037;
            unint64_t v24 = "availability-useCaseID-textComposition.ProfessionalTone";
            goto LABEL_67;
          case 0x25:
            BOOL v25 = "availability-useCaseID-textComposition.ProofreadingReview";
            goto LABEL_65;
          case 0x26:
            unint64_t v22 = 0xD000000000000036;
            unint64_t v24 = "availability-useCaseID-textComposition.TablesTransform";
            goto LABEL_67;
          case 0x27:
            BOOL v25 = "availability-useCaseID-textComposition.TakeawaysTransform";
LABEL_65:
            unint64_t v23 = (unint64_t)(v25 - 32) | 0x8000000000000000;
            unint64_t v22 = 0xD000000000000039;
            break;
          case 0x28:
            unint64_t v22 = 0xD000000000000020;
            unint64_t v24 = "generative-experiences-essential";
LABEL_67:
            unint64_t v23 = (unint64_t)(v24 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v26 = 0xD00000000000003CLL;
        unint64_t v27 = 0x8000000256B41150;
        switch(v17)
        {
          case 1:
            unint64_t v26 = 0xD00000000000003ELL;
            unint64_t v28 = "availability-useCaseID-VisualGeneration.KeyboardEmojiGenerator";
            goto LABEL_110;
          case 2:
            int64_t v29 = "availability-useCaseID-classification.classifyMailMessage";
            goto LABEL_108;
          case 3:
            int64_t v29 = "availability-useCaseID-classification.classifyTextMessage";
            goto LABEL_108;
          case 4:
            unint64_t v26 = 0xD00000000000003FLL;
            unint64_t v28 = "availability-useCaseID-classification.classifyTextMessageThread";
            goto LABEL_110;
          case 5:
            unint64_t v26 = 0xD00000000000003ELL;
            unint64_t v28 = "availability-useCaseID-classification.classifyUserNotification";
            goto LABEL_110;
          case 6:
            int64_t v29 = "availability-useCaseID-com.apple.PaperKit.ImageGeneration";
            goto LABEL_108;
          case 7:
            unint64_t v26 = 0xD00000000000003BLL;
            unint64_t v28 = "availability-useCaseID-com.apple.Settings.AppleIntelligence";
            goto LABEL_110;
          case 8:
            unint64_t v26 = 0xD000000000000045;
            unint64_t v28 = "availability-useCaseID-com.apple.Settings.AppleIntelligence.Diffusion";
            goto LABEL_110;
          case 9:
            unint64_t v26 = 0xD00000000000002ELL;
            unint64_t v28 = "availability-useCaseID-com.apple.Siri.NLRouter";
            goto LABEL_110;
          case 10:
            unint64_t v26 = 0xD00000000000002DLL;
            unint64_t v28 = "availability-useCaseID-com.apple.WritingTools";
            goto LABEL_110;
          case 11:
            unint64_t v26 = 0xD000000000000033;
            unint64_t v28 = "availability-useCaseID-memoryCreation.AssetCuration";
            goto LABEL_110;
          case 12:
            unint64_t v26 = 0xD000000000000038;
            unint64_t v28 = "availability-useCaseID-memoryCreation.AutonamingMessages";
            goto LABEL_110;
          case 13:
            unint64_t v26 = 0xD000000000000032;
            unint64_t v28 = "availability-useCaseID-memoryCreation.GlobalTraits";
            goto LABEL_110;
          case 14:
            unint64_t v26 = 0xD000000000000038;
            unint64_t v28 = "availability-useCaseID-memoryCreation.QueryUnderstanding";
            goto LABEL_110;
          case 15:
            unint64_t v26 = 0xD000000000000031;
            unint64_t v28 = "availability-useCaseID-memoryCreation.Storyteller";
            goto LABEL_110;
          case 16:
            int64_t v29 = "availability-useCaseID-summarization.notesAudioTranscript";
            goto LABEL_108;
          case 17:
            unint64_t v26 = 0xD000000000000031;
            unint64_t v28 = "availability-useCaseID-summarization.safariReader";
            goto LABEL_110;
          case 18:
            int64_t v29 = "availability-useCaseID-summarization.summarizeMailMessage";
            goto LABEL_108;
          case 19:
            unint64_t v26 = 0xD00000000000003FLL;
            unint64_t v28 = "availability-useCaseID-summarization.summarizeMailMessageThread";
            goto LABEL_110;
          case 20:
            int64_t v29 = "availability-useCaseID-summarization.summarizeTextMessage";
            goto LABEL_108;
          case 21:
            unint64_t v26 = 0xD00000000000003FLL;
            unint64_t v28 = "availability-useCaseID-summarization.summarizeTextMessageThread";
            goto LABEL_110;
          case 22:
            unint64_t v26 = 0xD00000000000003ELL;
            unint64_t v28 = "availability-useCaseID-summarization.summarizeUserNotification";
            goto LABEL_110;
          case 23:
            unint64_t v26 = 0xD000000000000044;
            unint64_t v28 = "availability-useCaseID-summarization.summarizeUserNotificationThread";
            goto LABEL_110;
          case 24:
            unint64_t v26 = 0xD000000000000032;
            unint64_t v28 = "availability-useCaseID-summarization.textAssistant";
            goto LABEL_110;
          case 25:
            unint64_t v26 = 0xD000000000000037;
            unint64_t v28 = "availability-useCaseID-textComposition.BulletsTransform";
            goto LABEL_110;
          case 26:
            unint64_t v26 = 0xD000000000000032;
            unint64_t v28 = "availability-useCaseID-textComposition.ConciseTone";
            goto LABEL_110;
          case 27:
            unint64_t v26 = 0xD000000000000033;
            unint64_t v28 = "availability-useCaseID-textComposition.FriendlyTone";
            goto LABEL_110;
          case 28:
            unint64_t v26 = 0xD000000000000033;
            unint64_t v28 = "availability-useCaseID-textComposition.MagicRewrite";
            goto LABEL_110;
          case 29:
            unint64_t v26 = 0xD000000000000030;
            unint64_t v28 = "availability-useCaseID-textComposition.MailReply";
            goto LABEL_110;
          case 30:
            unint64_t v26 = 0xD00000000000003DLL;
            unint64_t v28 = "availability-useCaseID-textComposition.MailReplyLongFormBasic";
            goto LABEL_110;
          case 31:
            unint64_t v26 = 0xD00000000000003FLL;
            unint64_t v28 = "availability-useCaseID-textComposition.MailReplyLongFormRewrite";
            goto LABEL_110;
          case 32:
            unint64_t v26 = 0xD000000000000032;
            unint64_t v28 = "availability-useCaseID-textComposition.MailReplyQA";
            goto LABEL_110;
          case 33:
            unint64_t v26 = 0xD000000000000034;
            unint64_t v28 = "availability-useCaseID-textComposition.MessagesReply";
            goto LABEL_110;
          case 34:
            unint64_t v26 = 0xD000000000000036;
            unint64_t v28 = "availability-useCaseID-textComposition.OpenEndedSchema";
            goto LABEL_110;
          case 35:
            unint64_t v26 = 0xD000000000000034;
            unint64_t v28 = "availability-useCaseID-textComposition.OpenEndedTone";
            goto LABEL_110;
          case 36:
            unint64_t v26 = 0xD000000000000037;
            unint64_t v28 = "availability-useCaseID-textComposition.ProfessionalTone";
            goto LABEL_110;
          case 37:
            int64_t v29 = "availability-useCaseID-textComposition.ProofreadingReview";
            goto LABEL_108;
          case 38:
            unint64_t v26 = 0xD000000000000036;
            unint64_t v28 = "availability-useCaseID-textComposition.TablesTransform";
            goto LABEL_110;
          case 39:
            int64_t v29 = "availability-useCaseID-textComposition.TakeawaysTransform";
LABEL_108:
            unint64_t v27 = (unint64_t)(v29 - 32) | 0x8000000000000000;
            unint64_t v26 = 0xD000000000000039;
            break;
          case 40:
            unint64_t v26 = 0xD000000000000020;
            unint64_t v28 = "generative-experiences-essential";
LABEL_110:
            unint64_t v27 = (unint64_t)(v28 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v22 == v26 && v23 == v27) {
          break;
        }
        char v31 = sub_256B3FEA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31) {
          goto LABEL_119;
        }
        unint64_t v20 = (v20 + 1) & v21;
        uint64_t v5 = a3;
        if (((*(void *)(v10 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        {
          uint64_t v4 = a4;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_119:
      char v6 = (const char *)((v20 >> 3) & 0x1FFFFFFFFFFFFFF8);
      *(void *)&v6[(void)a1] |= 1 << v20;
      uint64_t v7 = v71 + 1;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
    while (!__OFADD__(v71, 1));
    __break(1u);
  }
  int64_t v70 = 0;
  uint64_t v34 = *(void *)(v5 + 56);
  uint64_t v33 = v5 + 56;
  uint64_t v32 = v34;
  uint64_t v35 = 1 << *(unsigned char *)(v33 - 24);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v73 = v36 & v32;
  uint64_t v63 = v33;
  int64_t v65 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v37 = v4 + 56;
  uint64_t v38 = v6 - 32;
  do
  {
    uint64_t v71 = v7;
    do
    {
LABEL_127:
      if (v73)
      {
        unint64_t v39 = __clz(__rbit64(v73));
        v73 &= v73 - 1;
        unint64_t v40 = v39 | (v70 << 6);
        uint64_t v41 = a3;
      }
      else
      {
        int64_t v42 = v70 + 1;
        uint64_t v41 = a3;
        if (__OFADD__(v70, 1)) {
          goto LABEL_244;
        }
        if (v42 >= v65) {
          goto LABEL_242;
        }
        unint64_t v43 = *(void *)(v63 + 8 * v42);
        int64_t v44 = v70 + 1;
        if (!v43)
        {
          int64_t v44 = v70 + 2;
          if (v70 + 2 >= v65) {
            goto LABEL_242;
          }
          unint64_t v43 = *(void *)(v63 + 8 * v44);
          if (!v43)
          {
            int64_t v44 = v70 + 3;
            if (v70 + 3 >= v65) {
              goto LABEL_242;
            }
            unint64_t v43 = *(void *)(v63 + 8 * v44);
            if (!v43)
            {
              int64_t v45 = v70 + 4;
              if (v70 + 4 >= v65) {
                goto LABEL_242;
              }
              unint64_t v43 = *(void *)(v63 + 8 * v45);
              if (!v43)
              {
                while (1)
                {
                  int64_t v44 = v45 + 1;
                  if (__OFADD__(v45, 1)) {
                    break;
                  }
                  if (v44 >= v65) {
                    goto LABEL_242;
                  }
                  unint64_t v43 = *(void *)(v63 + 8 * v44);
                  ++v45;
                  if (v43) {
                    goto LABEL_142;
                  }
                }
LABEL_246:
                __break(1u);
                JUMPOUT(0x256B0D188);
              }
              int64_t v44 = v70 + 4;
            }
          }
        }
LABEL_142:
        unint64_t v73 = (v43 - 1) & v43;
        int64_t v70 = v44;
        unint64_t v40 = __clz(__rbit64(v43)) + (v44 << 6);
      }
      uint64_t v46 = *(unsigned __int8 *)(*(void *)(v41 + 48) + v40);
      sub_256B3FF40();
      Tag.rawValue.getter();
      sub_256B3F740();
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_256B3FF70();
      uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v49 = v47 & ~v48;
    }
    while (((*(void *)(v37 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0);
    unint64_t v68 = v40;
    uint64_t v50 = ~v48;
    while (1)
    {
      unint64_t v51 = 0xD00000000000003CLL;
      unint64_t v52 = (unint64_t)v38 | 0x8000000000000000;
      switch(*(unsigned char *)(*(void *)(a4 + 48) + v49))
      {
        case 1:
          unint64_t v51 = 0xD00000000000003ELL;
          int v53 = "availability-useCaseID-VisualGeneration.KeyboardEmojiGenerator";
          goto LABEL_187;
        case 2:
          unint64_t v54 = "availability-useCaseID-classification.classifyMailMessage";
          goto LABEL_185;
        case 3:
          unint64_t v54 = "availability-useCaseID-classification.classifyTextMessage";
          goto LABEL_185;
        case 4:
          unint64_t v51 = 0xD00000000000003FLL;
          int v53 = "availability-useCaseID-classification.classifyTextMessageThread";
          goto LABEL_187;
        case 5:
          unint64_t v51 = 0xD00000000000003ELL;
          int v53 = "availability-useCaseID-classification.classifyUserNotification";
          goto LABEL_187;
        case 6:
          unint64_t v54 = "availability-useCaseID-com.apple.PaperKit.ImageGeneration";
          goto LABEL_185;
        case 7:
          unint64_t v51 = 0xD00000000000003BLL;
          int v53 = "availability-useCaseID-com.apple.Settings.AppleIntelligence";
          goto LABEL_187;
        case 8:
          unint64_t v51 = 0xD000000000000045;
          int v53 = "availability-useCaseID-com.apple.Settings.AppleIntelligence.Diffusion";
          goto LABEL_187;
        case 9:
          unint64_t v51 = 0xD00000000000002ELL;
          int v53 = "availability-useCaseID-com.apple.Siri.NLRouter";
          goto LABEL_187;
        case 0xA:
          unint64_t v51 = 0xD00000000000002DLL;
          int v53 = "availability-useCaseID-com.apple.WritingTools";
          goto LABEL_187;
        case 0xB:
          unint64_t v51 = 0xD000000000000033;
          int v53 = "availability-useCaseID-memoryCreation.AssetCuration";
          goto LABEL_187;
        case 0xC:
          unint64_t v51 = 0xD000000000000038;
          int v53 = "availability-useCaseID-memoryCreation.AutonamingMessages";
          goto LABEL_187;
        case 0xD:
          unint64_t v51 = 0xD000000000000032;
          int v53 = "availability-useCaseID-memoryCreation.GlobalTraits";
          goto LABEL_187;
        case 0xE:
          unint64_t v51 = 0xD000000000000038;
          int v53 = "availability-useCaseID-memoryCreation.QueryUnderstanding";
          goto LABEL_187;
        case 0xF:
          unint64_t v51 = 0xD000000000000031;
          int v53 = "availability-useCaseID-memoryCreation.Storyteller";
          goto LABEL_187;
        case 0x10:
          unint64_t v54 = "availability-useCaseID-summarization.notesAudioTranscript";
          goto LABEL_185;
        case 0x11:
          unint64_t v51 = 0xD000000000000031;
          int v53 = "availability-useCaseID-summarization.safariReader";
          goto LABEL_187;
        case 0x12:
          unint64_t v54 = "availability-useCaseID-summarization.summarizeMailMessage";
          goto LABEL_185;
        case 0x13:
          unint64_t v51 = 0xD00000000000003FLL;
          int v53 = "availability-useCaseID-summarization.summarizeMailMessageThread";
          goto LABEL_187;
        case 0x14:
          unint64_t v54 = "availability-useCaseID-summarization.summarizeTextMessage";
          goto LABEL_185;
        case 0x15:
          unint64_t v51 = 0xD00000000000003FLL;
          int v53 = "availability-useCaseID-summarization.summarizeTextMessageThread";
          goto LABEL_187;
        case 0x16:
          unint64_t v51 = 0xD00000000000003ELL;
          int v53 = "availability-useCaseID-summarization.summarizeUserNotification";
          goto LABEL_187;
        case 0x17:
          unint64_t v51 = 0xD000000000000044;
          int v53 = "availability-useCaseID-summarization.summarizeUserNotificationThread";
          goto LABEL_187;
        case 0x18:
          unint64_t v51 = 0xD000000000000032;
          int v53 = "availability-useCaseID-summarization.textAssistant";
          goto LABEL_187;
        case 0x19:
          unint64_t v51 = 0xD000000000000037;
          int v53 = "availability-useCaseID-textComposition.BulletsTransform";
          goto LABEL_187;
        case 0x1A:
          unint64_t v51 = 0xD000000000000032;
          int v53 = "availability-useCaseID-textComposition.ConciseTone";
          goto LABEL_187;
        case 0x1B:
          unint64_t v51 = 0xD000000000000033;
          int v53 = "availability-useCaseID-textComposition.FriendlyTone";
          goto LABEL_187;
        case 0x1C:
          unint64_t v51 = 0xD000000000000033;
          int v53 = "availability-useCaseID-textComposition.MagicRewrite";
          goto LABEL_187;
        case 0x1D:
          unint64_t v51 = 0xD000000000000030;
          int v53 = "availability-useCaseID-textComposition.MailReply";
          goto LABEL_187;
        case 0x1E:
          unint64_t v51 = 0xD00000000000003DLL;
          int v53 = "availability-useCaseID-textComposition.MailReplyLongFormBasic";
          goto LABEL_187;
        case 0x1F:
          unint64_t v51 = 0xD00000000000003FLL;
          int v53 = "availability-useCaseID-textComposition.MailReplyLongFormRewrite";
          goto LABEL_187;
        case 0x20:
          unint64_t v51 = 0xD000000000000032;
          int v53 = "availability-useCaseID-textComposition.MailReplyQA";
          goto LABEL_187;
        case 0x21:
          unint64_t v51 = 0xD000000000000034;
          int v53 = "availability-useCaseID-textComposition.MessagesReply";
          goto LABEL_187;
        case 0x22:
          unint64_t v51 = 0xD000000000000036;
          int v53 = "availability-useCaseID-textComposition.OpenEndedSchema";
          goto LABEL_187;
        case 0x23:
          unint64_t v51 = 0xD000000000000034;
          int v53 = "availability-useCaseID-textComposition.OpenEndedTone";
          goto LABEL_187;
        case 0x24:
          unint64_t v51 = 0xD000000000000037;
          int v53 = "availability-useCaseID-textComposition.ProfessionalTone";
          goto LABEL_187;
        case 0x25:
          unint64_t v54 = "availability-useCaseID-textComposition.ProofreadingReview";
          goto LABEL_185;
        case 0x26:
          unint64_t v51 = 0xD000000000000036;
          int v53 = "availability-useCaseID-textComposition.TablesTransform";
          goto LABEL_187;
        case 0x27:
          unint64_t v54 = "availability-useCaseID-textComposition.TakeawaysTransform";
LABEL_185:
          unint64_t v52 = (unint64_t)(v54 - 32) | 0x8000000000000000;
          unint64_t v51 = 0xD000000000000039;
          break;
        case 0x28:
          unint64_t v51 = 0xD000000000000020;
          int v53 = "generative-experiences-essential";
LABEL_187:
          unint64_t v52 = (unint64_t)(v53 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v55 = 0xD00000000000003CLL;
      unint64_t v56 = (unint64_t)v38 | 0x8000000000000000;
      switch(v46)
      {
        case 1:
          unint64_t v55 = 0xD00000000000003ELL;
          uint64_t v57 = "availability-useCaseID-VisualGeneration.KeyboardEmojiGenerator";
          goto LABEL_230;
        case 2:
          uint64_t v58 = "availability-useCaseID-classification.classifyMailMessage";
          goto LABEL_228;
        case 3:
          uint64_t v58 = "availability-useCaseID-classification.classifyTextMessage";
          goto LABEL_228;
        case 4:
          unint64_t v55 = 0xD00000000000003FLL;
          uint64_t v57 = "availability-useCaseID-classification.classifyTextMessageThread";
          goto LABEL_230;
        case 5:
          unint64_t v55 = 0xD00000000000003ELL;
          uint64_t v57 = "availability-useCaseID-classification.classifyUserNotification";
          goto LABEL_230;
        case 6:
          uint64_t v58 = "availability-useCaseID-com.apple.PaperKit.ImageGeneration";
          goto LABEL_228;
        case 7:
          unint64_t v55 = 0xD00000000000003BLL;
          uint64_t v57 = "availability-useCaseID-com.apple.Settings.AppleIntelligence";
          goto LABEL_230;
        case 8:
          unint64_t v55 = 0xD000000000000045;
          uint64_t v57 = "availability-useCaseID-com.apple.Settings.AppleIntelligence.Diffusion";
          goto LABEL_230;
        case 9:
          unint64_t v55 = 0xD00000000000002ELL;
          uint64_t v57 = "availability-useCaseID-com.apple.Siri.NLRouter";
          goto LABEL_230;
        case 10:
          unint64_t v55 = 0xD00000000000002DLL;
          uint64_t v57 = "availability-useCaseID-com.apple.WritingTools";
          goto LABEL_230;
        case 11:
          unint64_t v55 = 0xD000000000000033;
          uint64_t v57 = "availability-useCaseID-memoryCreation.AssetCuration";
          goto LABEL_230;
        case 12:
          unint64_t v55 = 0xD000000000000038;
          uint64_t v57 = "availability-useCaseID-memoryCreation.AutonamingMessages";
          goto LABEL_230;
        case 13:
          unint64_t v55 = 0xD000000000000032;
          uint64_t v57 = "availability-useCaseID-memoryCreation.GlobalTraits";
          goto LABEL_230;
        case 14:
          unint64_t v55 = 0xD000000000000038;
          uint64_t v57 = "availability-useCaseID-memoryCreation.QueryUnderstanding";
          goto LABEL_230;
        case 15:
          unint64_t v55 = 0xD000000000000031;
          uint64_t v57 = "availability-useCaseID-memoryCreation.Storyteller";
          goto LABEL_230;
        case 16:
          uint64_t v58 = "availability-useCaseID-summarization.notesAudioTranscript";
          goto LABEL_228;
        case 17:
          unint64_t v55 = 0xD000000000000031;
          uint64_t v57 = "availability-useCaseID-summarization.safariReader";
          goto LABEL_230;
        case 18:
          uint64_t v58 = "availability-useCaseID-summarization.summarizeMailMessage";
          goto LABEL_228;
        case 19:
          unint64_t v55 = 0xD00000000000003FLL;
          uint64_t v57 = "availability-useCaseID-summarization.summarizeMailMessageThread";
          goto LABEL_230;
        case 20:
          uint64_t v58 = "availability-useCaseID-summarization.summarizeTextMessage";
          goto LABEL_228;
        case 21:
          unint64_t v55 = 0xD00000000000003FLL;
          uint64_t v57 = "availability-useCaseID-summarization.summarizeTextMessageThread";
          goto LABEL_230;
        case 22:
          unint64_t v55 = 0xD00000000000003ELL;
          uint64_t v57 = "availability-useCaseID-summarization.summarizeUserNotification";
          goto LABEL_230;
        case 23:
          unint64_t v55 = 0xD000000000000044;
          uint64_t v57 = "availability-useCaseID-summarization.summarizeUserNotificationThread";
          goto LABEL_230;
        case 24:
          unint64_t v55 = 0xD000000000000032;
          uint64_t v57 = "availability-useCaseID-summarization.textAssistant";
          goto LABEL_230;
        case 25:
          unint64_t v55 = 0xD000000000000037;
          uint64_t v57 = "availability-useCaseID-textComposition.BulletsTransform";
          goto LABEL_230;
        case 26:
          unint64_t v55 = 0xD000000000000032;
          uint64_t v57 = "availability-useCaseID-textComposition.ConciseTone";
          goto LABEL_230;
        case 27:
          unint64_t v55 = 0xD000000000000033;
          uint64_t v57 = "availability-useCaseID-textComposition.FriendlyTone";
          goto LABEL_230;
        case 28:
          unint64_t v55 = 0xD000000000000033;
          uint64_t v57 = "availability-useCaseID-textComposition.MagicRewrite";
          goto LABEL_230;
        case 29:
          unint64_t v55 = 0xD000000000000030;
          uint64_t v57 = "availability-useCaseID-textComposition.MailReply";
          goto LABEL_230;
        case 30:
          unint64_t v55 = 0xD00000000000003DLL;
          uint64_t v57 = "availability-useCaseID-textComposition.MailReplyLongFormBasic";
          goto LABEL_230;
        case 31:
          unint64_t v55 = 0xD00000000000003FLL;
          uint64_t v57 = "availability-useCaseID-textComposition.MailReplyLongFormRewrite";
          goto LABEL_230;
        case 32:
          unint64_t v55 = 0xD000000000000032;
          uint64_t v57 = "availability-useCaseID-textComposition.MailReplyQA";
          goto LABEL_230;
        case 33:
          unint64_t v55 = 0xD000000000000034;
          uint64_t v57 = "availability-useCaseID-textComposition.MessagesReply";
          goto LABEL_230;
        case 34:
          unint64_t v55 = 0xD000000000000036;
          uint64_t v57 = "availability-useCaseID-textComposition.OpenEndedSchema";
          goto LABEL_230;
        case 35:
          unint64_t v55 = 0xD000000000000034;
          uint64_t v57 = "availability-useCaseID-textComposition.OpenEndedTone";
          goto LABEL_230;
        case 36:
          unint64_t v55 = 0xD000000000000037;
          uint64_t v57 = "availability-useCaseID-textComposition.ProfessionalTone";
          goto LABEL_230;
        case 37:
          uint64_t v58 = "availability-useCaseID-textComposition.ProofreadingReview";
          goto LABEL_228;
        case 38:
          unint64_t v55 = 0xD000000000000036;
          uint64_t v57 = "availability-useCaseID-textComposition.TablesTransform";
          goto LABEL_230;
        case 39:
          uint64_t v58 = "availability-useCaseID-textComposition.TakeawaysTransform";
LABEL_228:
          unint64_t v56 = (unint64_t)(v58 - 32) | 0x8000000000000000;
          unint64_t v55 = 0xD000000000000039;
          break;
        case 40:
          unint64_t v55 = 0xD000000000000020;
          uint64_t v57 = "generative-experiences-essential";
LABEL_230:
          unint64_t v56 = (unint64_t)(v57 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v51 == v55 && v52 == v56) {
        break;
      }
      char v60 = sub_256B3FEA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v60) {
        goto LABEL_239;
      }
      unint64_t v49 = (v49 + 1) & v50;
      if (((*(void *)(v37 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      {
        uint64_t v4 = a4;
        goto LABEL_127;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_239:
    *(unint64_t *)((char *)a1 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
    uint64_t v7 = v71 + 1;
    uint64_t v4 = a4;
  }
  while (!__OFADD__(v71, 1));
  __break(1u);
LABEL_242:
  swift_retain();
  return sub_256B0D418(a1, a2, v71, a3);
}

uint64_t sub_256B0D418(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_35:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_256A39D2C(&qword_269F7CB80);
  uint64_t result = sub_256B3FB60();
  uint64_t v9 = result;
  unint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_35;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_35;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_35;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
    sub_256B3FF40();
    Tag.rawValue.getter();
    sub_256B3F740();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256B3FF70();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v9 + 48) + v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_35;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_35;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_256B0D69C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_256A49D7C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_256A3A540(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_256B0D738()
{
  unint64_t result = qword_269F7CB78;
  if (!qword_269F7CB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CB78);
  }
  return result;
}

uint64_t sub_256B0D784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256B06058();
  *a1 = result;
  return result;
}

uint64_t sub_256B0D7B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256B060E4();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Sideload()
{
  return &type metadata for Sideload;
}

unsigned char *storeEnumTagSinglePayload for ResourceReadinessStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256B0D8C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResourceReadinessStatus()
{
  return &type metadata for ResourceReadinessStatus;
}

uint64_t sub_256B0D8F8()
{
  return type metadata accessor for CatalogIndex();
}

uint64_t sub_256B0D900()
{
  uint64_t result = sub_256B3F300();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CatalogIndex(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CatalogIndex);
}

uint64_t dispatch thunk of CatalogIndex.resources.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CatalogIndex.resourceBundles.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of CatalogIndex.staticResources.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CatalogIndex.staticResourceBundles.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CatalogIndex.sideloadedResources.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CatalogIndex.sideloadedResources.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CatalogIndex.sideloadedResources.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CatalogIndex.sideloadedResourceBundles.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of CatalogIndex.sideloadedResourceBundles.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CatalogIndex.sideloadedResourceBundles.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of CatalogIndex.__allocating_init(sideloadURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of CatalogIndex.updateSideloadedAssets()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of CatalogIndex.resources(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CatalogIndex.resource(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CatalogIndex.resourceBundle(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

unint64_t sub_256B0DBF4()
{
  unint64_t result = qword_269F78BA8;
  if (!qword_269F78BA8)
  {
    sub_256B3F300();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F78BA8);
  }
  return result;
}

unint64_t sub_256B0DC38()
{
  unint64_t result = qword_269F7CB88;
  if (!qword_269F7CB88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F7CB88);
  }
  return result;
}

uint64_t sub_256B0DC78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 2;
  return swift_willThrow();
}

uint64_t sub_256B0DCB4()
{
  return sub_256B3FEA0();
}

void sub_256B0DCD0()
{
  *(void *)(v0 + 56) |= v1;
}

uint64_t sub_256B0DD3C()
{
  return 0x735F6D6C65646F63;
}

uint64_t sub_256B0DD58()
{
  return 0x6C5F6D6C65646F63;
}

char *sub_256B0DDA0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_256B0DDE0()
{
  sub_256B0A3CC(0, v2, v3);
  return sub_256B0C1B8(v3, v2, v0, v1);
}

uint64_t sub_256B0DE24()
{
  return sub_256B3F300();
}

uint64_t sub_256B0DE4C()
{
  return sub_256B3F240();
}

uint64_t sub_256B0DE80()
{
  return v0;
}

uint64_t sub_256B0DEA8()
{
  return v0;
}

uint64_t sub_256B0DEC0()
{
  sub_256A9A51C(v1, v0, 2u);
  return sub_256A9A51C(v1, v0, 2u);
}

uint64_t sub_256B0DEFC()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_256B0DF34()
{
  sub_256A9A51C(v1, v0, 2u);
  return sub_256A9A51C(v1, v0, 2u);
}

uint64_t sub_256B0DFA0()
{
  return swift_beginAccess();
}

uint64_t sub_256B0DFC4()
{
  return 1634889580;
}

unint64_t sub_256B0DFD4()
{
  return 0xD00000000000003ALL;
}

unint64_t sub_256B0DFEC()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_256B0E004()
{
  return sub_256B3FCB0();
}

uint64_t sub_256B0E034()
{
  return 0;
}

uint64_t sub_256B0E044()
{
  return sub_256B3FEA0();
}

uint64_t sub_256B0E064()
{
  return swift_slowAlloc();
}

uint64_t sub_256B0E084()
{
  return v0;
}

uint64_t sub_256B0E098()
{
  return v0;
}

uint64_t sub_256B0E0AC(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_256B0E0C0()
{
  return swift_allocObject();
}

uint64_t sub_256B0E0F4()
{
  return 0x736F6E6F69736976;
}

uint64_t sub_256B0E108()
{
  return 0x736F6863746177;
}

uint64_t sub_256B0E130(uint64_t a1)
{
  return sub_256A46F7C(v1, 1, 1, a1);
}

void sub_256B0E150()
{
  sub_256B0B944();
}

uint64_t sub_256B0E170()
{
  return sub_256B3FEA0();
}

BOOL static DownloadStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DownloadStatus.hash(into:)()
{
  return sub_256B3FF50();
}

uint64_t DownloadStatus.hashValue.getter()
{
  return sub_256B3FF70();
}

uint64_t AssetSetSubscription.init(name:assetSets:usageAliases:expiration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (uint64_t)a6 + *(int *)(type metadata accessor for AssetSetSubscription() + 28);

  return sub_256B0E2C8(a5, v7);
}

uint64_t type metadata accessor for AssetSetSubscription()
{
  uint64_t result = qword_269F7CBC0;
  if (!qword_269F7CBC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256B0E2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256A39D2C(&qword_269F78DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static AssetSetSubscription.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_256B3FEA0(), result = 0, (v5 & 1) != 0))
  {
    if (sub_256B0E734(a1[2], a2[2]) & 1) != 0 && (sub_256B0E914(a1[3], a2[3]))
    {
      uint64_t v7 = type metadata accessor for AssetSetSubscription();
      uint64_t v8 = (uint64_t)a1 + *(int *)(v7 + 28);
      uint64_t v9 = sub_256A39D2C(&qword_269F78DD8);
      uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
      MEMORY[0x270FA5388](v9 - 8);
      unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
      long long v12 = &v29[-v11];
      sub_256A4EB70(v8, (uint64_t)&v29[-v11]);
      uint64_t v13 = MEMORY[0x270FA5388]((char *)a2 + *(int *)(v7 + 28));
      uint64_t v14 = &v29[-v11];
      sub_256A4EB70(v13, (uint64_t)&v29[-v11]);
      uint64_t v15 = sub_256A39D2C(&qword_269F7CBA8);
      uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
      char v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
      uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
      sub_256A4EB70((uint64_t)&v29[-v11], (uint64_t)v18);
      sub_256A4EB70((uint64_t)&v29[-v11], v19);
      uint64_t v20 = sub_256B3F410();
      uint64_t v21 = sub_256B0FB30((uint64_t)v18);
      if (v4)
      {
        sub_256A3A4D4((uint64_t)&v29[-v11], &qword_269F78DD8);
        sub_256A3A4D4((uint64_t)&v29[-v11], &qword_269F78DD8);
        sub_256B0FB30(v19);
        if (v4)
        {
          sub_256A3A4D4((uint64_t)v18, &qword_269F78DD8);
          return 1;
        }
      }
      else
      {
        uint64_t v33 = v29;
        MEMORY[0x270FA5388](v21);
        unint64_t v22 = &v29[-v11];
        sub_256A4EB70((uint64_t)v18, (uint64_t)&v29[-v11]);
        uint64_t v24 = sub_256B0FB30(v19);
        if (!v23)
        {
          char v31 = v29;
          uint64_t v32 = v29;
          uint64_t v25 = *(void *)(v20 - 8);
          MEMORY[0x270FA5388](v24);
          unint64_t v27 = &v29[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 32))(v27, v19, v20);
          sub_256B0EB30();
          int v30 = sub_256B3F620();
          unint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
          v28(v27, v20);
          sub_256A3A4D4((uint64_t)v14, &qword_269F78DD8);
          sub_256A3A4D4((uint64_t)v12, &qword_269F78DD8);
          v28(v22, v20);
          sub_256A3A4D4((uint64_t)v18, &qword_269F78DD8);
          return (v30 & 1) != 0;
        }
        sub_256A3A4D4((uint64_t)&v29[-v11], &qword_269F78DD8);
        sub_256A3A4D4((uint64_t)&v29[-v11], &qword_269F78DD8);
        (*(void (**)(unsigned char *, uint64_t))(*(void *)(v20 - 8) + 8))(&v29[-v11], v20);
      }
      sub_256A3A4D4((uint64_t)v18, &qword_269F7CBA8);
    }
    return 0;
  }
  return result;
}

uint64_t sub_256B0E734(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_256A39CC8();
    char v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v17 = swift_bridgeObjectRetain();
    char v18 = sub_256B0E914(v17, v14);
    swift_bridgeObjectRelease();
    BOOL result = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_256B0E914(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v23) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v23) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v23) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v23) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_256A39CC8();
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = (void *)(*(void *)(a2 + 56) + 16 * v17);
    if (*v20 == v16 && v20[1] == v15)
    {
      BOOL result = swift_bridgeObjectRelease();
    }
    else
    {
      char v22 = sub_256B3FEA0();
      BOOL result = swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v23) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v23) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_256B0EB30()
{
  unint64_t result = qword_269F7CBB0;
  if (!qword_269F7CBB0)
  {
    sub_256B3F410();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CBB0);
  }
  return result;
}

BOOL static AssetSetStatus.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24);
}

unint64_t sub_256B0EBB8()
{
  unint64_t result = qword_269F7CBB8;
  if (!qword_269F7CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CBB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DownloadStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256B0ED5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus()
{
  return &type metadata for DownloadStatus;
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetSetSubscription(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    unint64_t v8 = (char *)a1 + v7;
    unint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_256B3F410();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_256A480C4((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_256A39D2C(&qword_269F78DD8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      sub_256A46F7C((uint64_t)v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for AssetSetSubscription(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_256B3F410();
  uint64_t result = sub_256A480C4(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for AssetSetSubscription(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256B3F410();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_256A480C4((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_256A39D2C(&qword_269F78DD8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    sub_256A46F7C((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for AssetSetSubscription(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256B3F410();
  int v10 = sub_256A480C4((uint64_t)v7, 1, v9);
  int v11 = sub_256A480C4((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_256A39D2C(&qword_269F78DD8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  sub_256A46F7C((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for AssetSetSubscription(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_256B3F410();
  if (sub_256A480C4((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_256A39D2C(&qword_269F78DD8);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    sub_256A46F7C((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for AssetSetSubscription(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256B3F410();
  int v11 = sub_256A480C4((uint64_t)v8, 1, v10);
  int v12 = sub_256A480C4((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_256A39D2C(&qword_269F78DD8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_256A46F7C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetSetSubscription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256B0F4CC);
}

uint64_t sub_256B0F4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_256A39D2C(&qword_269F78DD8);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return sub_256A480C4(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AssetSetSubscription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256B0F56C);
}

uint64_t sub_256B0F56C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_256A39D2C(&qword_269F78DD8);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return sub_256A46F7C(v8, a2, a2, v7);
  }
  return result;
}

void sub_256B0F5F0()
{
  sub_256B0F698();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_256B0F698()
{
  if (!qword_269F7CBD0)
  {
    sub_256B3F410();
    unint64_t v0 = sub_256B3FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F7CBD0);
    }
  }
}

__n128 initializeWithCopy for AssetSetStatus(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AssetSetStatus(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF9 && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 248;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      BOOL v4 = v3 >= 8;
      int v2 = v3 - 8;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetSetStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 7;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSetStatus()
{
  return &type metadata for AssetSetStatus;
}

uint64_t dispatch thunk of SubscriptionManagerProviding.downloadStatus(subscriber:subscriptionName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of SubscriptionManagerProviding.diskSpaceNeeded(subscriber:subscriptionName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of SubscriptionManagerProviding.subscribe(subscriber:subscription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  int v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int v11 = v5;
  v11[1] = sub_256B0FB2C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SubscriptionManagerProviding.unsubscribe(subscriber:subscriptionName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32)
                                                                                     + **(int **)(a6 + 32));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_256B0FA14;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_256B0FA14()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of SubscriptionManagerProviding.updateAssets(subscriber:subscriptionName:policies:queue:detailedProgress:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(void))(a12 + 40))();
}

uint64_t sub_256B0FB30(uint64_t a1)
{
  return sub_256A480C4(a1, 1, v1);
}

unint64_t SIRI_UAF_SUBSCRIBER_ID.getter()
{
  return 0xD000000000000021;
}

uint64_t SIRI_UAF_SUBSCRIPTION_NAME.getter()
{
  return 0x65676175676E616CLL;
}

void sub_256B0FB84(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_256B0BA78();
  uint64_t v7 = a1;
  if (a2 >= a1 && (v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = a4;
    unint64_t v9 = a1;
    while (a2 != v9)
    {
      if (v7 < 0) {
        goto LABEL_15;
      }
      if (v9 >= *(void *)(a3 + 16)) {
        goto LABEL_16;
      }
      if (v9 >= *(void *)(v8 + 16)) {
        goto LABEL_17;
      }
      char v10 = *(unsigned char *)(a4 + 32 + v9);
      char v11 = *(unsigned char *)(a3 + v9 + 32);
      unint64_t v12 = *(void *)(v15 + 16);
      if (v12 >= *(void *)(v15 + 24) >> 1)
      {
        sub_256B0BA78();
        uint64_t v7 = a1;
        uint64_t v8 = a4;
      }
      *(void *)(v15 + 16) = v12 + 1;
      *(unsigned char *)(v15 + v12 + 32) = v10 ^ v11;
      if (a2 == ++v9) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

void sub_256B0FCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_256B0FB84(0, v2, a2, a1);
  }
  else
  {
    sub_256B3FC70();
    __break(1u);
  }
}

uint64_t sub_256B0FDB8()
{
  uint64_t v64 = MEMORY[0x263F8EE78];
  sub_256B0BA78();
  uint64_t v0 = 0;
  uint64_t v1 = v64;
  do
  {
    uint64_t v63 = 0;
    MEMORY[0x25A2ABF00](&v63, 8);
    sub_256B109A0();
    if (v3)
    {
      do
      {
        uint64_t v63 = 0;
        MEMORY[0x25A2ABF00](&v63, 8);
        sub_256B109A0();
      }
      while (v3);
      LOBYTE(v4) = v5;
    }
    else
    {
      unsigned int v4 = v2 >> 8;
    }
    uint64_t v64 = v1;
    unint64_t v6 = *(void *)(v1 + 16);
    if (v6 >= *(void *)(v1 + 24) >> 1)
    {
      sub_256B0BA78();
      uint64_t v1 = v64;
    }
    ++v0;
    *(void *)(v1 + 16) = v6 + 1;
    *(unsigned char *)(v1 + 32 + v6) = v4;
  }
  while (v0 != 32);
  sub_256B0FCFC(v1, (uint64_t)&unk_27060CE70);
  uint64_t v8 = v7;
  sub_256B0FCFC(v1, (uint64_t)&unk_27060CEB0);
  uint64_t v10 = v9;
  sub_256B0FCFC(v1, (uint64_t)&unk_27060CEF0);
  uint64_t v12 = v11;
  sub_256B0FCFC(v1, (uint64_t)&unk_27060CF30);
  if (*(void *)(v8 + 16) < 0x20uLL)
  {
    __break(1u);
LABEL_58:
    swift_bridgeObjectRelease();
    sub_256B108D4(v8, v8 + 32, 24, 0x41uLL);
    uint64_t v16 = v47;
    goto LABEL_15;
  }
  uint64_t v0 = v13;
  sub_256B3FEB0();
  swift_unknownObjectRetain_n();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(v14 + 16);
  swift_release();
  if (v15 != 8) {
    goto LABEL_58;
  }
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
LABEL_15:
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16) < 0x20uLL)
  {
    __break(1u);
LABEL_60:
    swift_release();
    uint64_t v48 = sub_256A4A370();
    sub_256B108D4(v48, v49, 24, 0x41uLL);
    uint64_t v19 = v50;
    goto LABEL_21;
  }
  swift_retain_n();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_release();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t v18 = *(void *)(v17 + 16);
  swift_release();
  if (v18 != 8) {
    goto LABEL_60;
  }
  uint64_t v19 = swift_dynamicCastClass();
  if (!v19)
  {
    swift_release();
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
LABEL_21:
  swift_release();
  sub_256B0FCFC(v19, v16);
  uint64_t v21 = v20;
  swift_release();
  swift_release();
  if (*(void *)(v10 + 16) < 8uLL)
  {
    __break(1u);
LABEL_62:
    swift_bridgeObjectRelease();
    sub_256B108D4(v10, v10 + 32, 0, 0x11uLL);
    uint64_t v24 = v51;
    goto LABEL_27;
  }
  swift_unknownObjectRetain_n();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  uint64_t v23 = *(void *)(v22 + 16);
  swift_release();
  if (v23 != 8) {
    goto LABEL_62;
  }
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
LABEL_27:
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16) < 8uLL)
  {
    __break(1u);
LABEL_64:
    swift_release();
    uint64_t v52 = sub_256A4A370();
    sub_256B108D4(v52, v53, 0, 0x11uLL);
    uint64_t v27 = v54;
    goto LABEL_33;
  }
  swift_retain_n();
  uint64_t v25 = swift_dynamicCastClass();
  if (!v25)
  {
    swift_release();
    uint64_t v25 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = *(void *)(v25 + 16);
  swift_release();
  if (v26 != 8) {
    goto LABEL_64;
  }
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27)
  {
    swift_release();
    uint64_t v27 = MEMORY[0x263F8EE78];
  }
LABEL_33:
  swift_release();
  sub_256B0FCFC(v27, v24);
  uint64_t v29 = v28;
  swift_release();
  swift_release();
  if (*(void *)(v12 + 16) < 0x18uLL)
  {
    __break(1u);
LABEL_66:
    swift_bridgeObjectRelease();
    sub_256B108D4(v12, v12 + 32, 16, 0x31uLL);
    uint64_t v32 = v55;
    goto LABEL_39;
  }
  swift_unknownObjectRetain_n();
  uint64_t v30 = swift_dynamicCastClass();
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  uint64_t v31 = *(void *)(v30 + 16);
  swift_release();
  if (v31 != 8) {
    goto LABEL_66;
  }
  uint64_t v32 = swift_dynamicCastClass();
  if (!v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x263F8EE78];
  }
LABEL_39:
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16) < 0x10uLL)
  {
    __break(1u);
LABEL_68:
    swift_release();
    uint64_t v56 = sub_256A4A370();
    sub_256B108D4(v56, v57, 16, 0x31uLL);
    uint64_t v35 = v58;
    goto LABEL_45;
  }
  swift_retain_n();
  uint64_t v33 = swift_dynamicCastClass();
  if (!v33)
  {
    swift_release();
    uint64_t v33 = MEMORY[0x263F8EE78];
  }
  uint64_t v34 = *(void *)(v33 + 16);
  swift_release();
  if (v34 != 8) {
    goto LABEL_68;
  }
  uint64_t v35 = swift_dynamicCastClass();
  if (!v35)
  {
    swift_release();
    uint64_t v35 = MEMORY[0x263F8EE78];
  }
LABEL_45:
  swift_release();
  sub_256B0FCFC(v35, v32);
  uint64_t v37 = v36;
  swift_release();
  swift_release();
  if (*(void *)(v0 + 16) < 0x10uLL)
  {
    __break(1u);
LABEL_70:
    swift_bridgeObjectRelease();
    sub_256B108D4(v0, v0 + 32, 8, 0x21uLL);
    uint64_t v40 = v59;
    goto LABEL_51;
  }
  swift_unknownObjectRetain_n();
  uint64_t v38 = swift_dynamicCastClass();
  if (!v38)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE78];
  }
  uint64_t v39 = *(void *)(v38 + 16);
  swift_release();
  if (v39 != 8) {
    goto LABEL_70;
  }
  uint64_t v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x263F8EE78];
  }
LABEL_51:
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain_n();
  uint64_t v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_release();
    uint64_t v41 = MEMORY[0x263F8EE78];
  }
  uint64_t v42 = *(void *)(v41 + 16);
  swift_release();
  if (v42 == 8)
  {
    uint64_t v43 = swift_dynamicCastClass();
    if (!v43)
    {
      swift_release();
      uint64_t v43 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    swift_release();
    uint64_t v60 = sub_256A4A370();
    sub_256B108D4(v60, v61, 8, 0x21uLL);
    uint64_t v43 = v62;
  }
  swift_release();
  sub_256B0FCFC(v43, v40);
  uint64_t v45 = v44;
  swift_release();
  swift_release();
  uint64_t v64 = v29;
  sub_256A47ECC(v45);
  sub_256A47ECC(v37);
  sub_256A47ECC(v21);
  return v64;
}

uint64_t sub_256B10448(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_256B3F590();
  sub_256A49FB8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_256A4A500();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_256B3F5C0();
  sub_256A49FB8();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_256A4A500();
  uint64_t v17 = v16 - v15;
  sub_256A3E7E8(a1, a2);
  sub_256B3F5B0();
  sub_256B0FDB8();
  sub_256A39D2C(&qword_269F7CBE8);
  sub_256B1088C();
  sub_256B3F580();
  uint64_t v18 = sub_256B3F5A0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  return v18;
}

uint64_t static Obfuscation.readObfuscatedContents<A>(fileURL:fallback:)(uint64_t a1, char a2)
{
  uint64_t v4 = sub_256B3F300();
  sub_256A49FB8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_256A4A500();
  uint64_t v10 = v9 - v8;
  sub_256B3F280();
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_256B3F2A0();
  uint64_t v12 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  unsigned int v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if (!v13)
  {
    if (a2)
    {
      uint64_t v18 = sub_256B3F340();
      if (!v2)
      {
        uint64_t v25 = v18;
        unint64_t v27 = v19;
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v20 = sub_256B3F2A0();
      uint64_t v22 = v21;
      sub_256B10830();
      swift_allocError();
      *(void *)uint64_t v23 = v20;
      *(void *)(v23 + 8) = v22;
      *(unsigned char *)(v23 + 16) = 1;
      swift_willThrow();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  }
  uint64_t v14 = sub_256B3F340();
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  }
  uint64_t v16 = v14;
  unint64_t v17 = v15;
  uint64_t v25 = sub_256B10448(v14, v15);
  unint64_t v27 = v26;
  sub_256A46DF8(v16, v17);
LABEL_9:
  sub_256B3F150();
  swift_allocObject();
  sub_256B3F140();
  sub_256B3F130();
  uint64_t v28 = sub_256B10988();
  v29(v28);
  sub_256A46DF8(v25, v27);
  return swift_release();
}

unint64_t sub_256B10830()
{
  unint64_t result = qword_26B2B6228;
  if (!qword_26B2B6228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B6228);
  }
  return result;
}

ValueMetadata *type metadata accessor for Obfuscation()
{
  return &type metadata for Obfuscation;
}

unint64_t sub_256B1088C()
{
  unint64_t result = qword_269F7CBF0;
  if (!qword_269F7CBF0)
  {
    sub_256A49664(&qword_269F7CBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CBF0);
  }
  return result;
}

void sub_256B108D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_256A39D2C(qword_26B2B3700);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
    }
    if (v4 != a3)
    {
      sub_256A474D4(a2 + a3, v5, v8 + 4);
      return;
    }
    goto LABEL_10;
  }
}

uint64_t sub_256B10988()
{
  return v0;
}

void *sub_256B109B4()
{
  return &unk_2705FFB60;
}

Swift::Bool __swiftcall Precondition.PreconditionType.isMet()()
{
  if (*v0)
  {
    if (*v0 == 1)
    {
      id v1 = (id)MobileGestalt_get_current_device();
      if (!v1)
      {
        __break(1u);
        return (char)v1;
      }
      uint64_t v2 = v1;
      char deviceSupportsGenerativeModelSystems = MobileGestalt_get_deviceSupportsGenerativeModelSystems();
    }
    else if (MEMORY[0x263F28050])
    {
      id v4 = objc_msgSend(self, sel_aneArchitectureType);
      uint64_t v5 = sub_256B3F6B0();
      unint64_t v7 = v6;

      BOOL v8 = v5 == 3354984 && v7 == 0xE300000000000000;
      if (v8 || (sub_256B10E48() & 1) != 0 || (v5 == 1731408232 ? (BOOL v9 = v7 == 0xE400000000000000) : (BOOL v9 = 0), v9))
      {
        char deviceSupportsGenerativeModelSystems = 1;
      }
      else
      {
        sub_256B10E48();
        sub_256B10E64();
        char v13 = v8 && v7 == v11;
        char deviceSupportsGenerativeModelSystems = 1;
        if ((v10 & 1) == 0 && (v13 & 1) == 0)
        {
          char v14 = sub_256B10E48();
          BOOL v15 = v5 == 1731473768 && v7 == 0xE400000000000000;
          BOOL v16 = v15;
          if ((v14 & 1) == 0 && !v16)
          {
            char v17 = sub_256B10E48();
            BOOL v18 = v5 == 1664364904 && v7 == 0xE400000000000000;
            BOOL v19 = v18;
            char deviceSupportsGenerativeModelSystems = 1;
            if ((v17 & 1) == 0 && !v19)
            {
              sub_256B10E48();
              sub_256B10E64();
              BOOL v22 = v8 && v7 == v21;
              BOOL v23 = v22;
              if ((v20 & 1) == 0 && !v23)
              {
                char v24 = sub_256B10E48();
                BOOL v25 = v5 == 1731539304 && v7 == 0xE400000000000000;
                BOOL v26 = v25;
                if ((v24 & 1) == 0 && !v26)
                {
                  char v27 = sub_256B10E48();
                  BOOL v28 = v5 == 1664430440 && v7 == 0xE400000000000000;
                  BOOL v29 = v28;
                  char deviceSupportsGenerativeModelSystems = 1;
                  if ((v27 & 1) == 0 && !v29)
                  {
                    sub_256B10E48();
                    sub_256B10E64();
                    BOOL v32 = v8 && v7 == v31;
                    BOOL v33 = v32;
                    if ((v30 & 1) == 0 && !v33)
                    {
                      char v34 = sub_256B10E48();
                      BOOL v35 = v5 == 1731604840 && v7 == 0xE400000000000000;
                      BOOL v36 = v35;
                      if ((v34 & 1) == 0 && !v36)
                      {
                        sub_256B10E48();
                        sub_256B10E64();
                        BOOL v39 = v8 && v7 == v38;
                        BOOL v40 = v39;
                        if ((v37 & 1) == 0
                          && !v40
                          && (sub_256B10E48() & 1) == 0
                          && (v5 != 0x30336E2E67343168 || v7 != 0xE900000000000031))
                        {
                          char deviceSupportsGenerativeModelSystems = sub_256B10E48();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (qword_26B2B2FB0 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_256B3F4A0();
      sub_256A46E9C(v42, (uint64_t)qword_26B2C3FA0);
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9F0();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v50 = v46;
        *(_DWORD *)uint64_t v45 = 136315394;
        swift_bridgeObjectRetain();
        sub_256B3B598(v5, v7, &v50);
        sub_256B3FAA0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        if (deviceSupportsGenerativeModelSystems) {
          uint64_t v47 = 0;
        }
        else {
          uint64_t v47 = 7630702;
        }
        if (deviceSupportsGenerativeModelSystems) {
          unint64_t v48 = 0xE000000000000000;
        }
        else {
          unint64_t v48 = 0xE300000000000000;
        }
        sub_256B3B598(v47, v48, &v50);
        sub_256B3FAA0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_256A36000, v43, v44, "[PreconditionType.aneHardwareEligible] Device architecture \"%s\" is %s eligible", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A2ABEE0](v46, -1, -1);
        MEMORY[0x25A2ABEE0](v45, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      char deviceSupportsGenerativeModelSystems = 0;
    }
  }
  else
  {
    char deviceSupportsGenerativeModelSystems = 1;
  }
  LOBYTE(v1) = deviceSupportsGenerativeModelSystems & 1;
  return (char)v1;
}

uint64_t sub_256B10E48()
{
  return sub_256B3FEA0();
}

uint64_t AssetLock.init(resources:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v82)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[4];
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void v95[3];
  uint64_t v96;
  uint64_t v97;
  void v98[6];
  uint64_t v99;

  uint64_t v3 = sub_256B3F600();
  uint64_t v4 = v3;
  uint64_t v99 = MEMORY[0x263F8EE88];
  uint64_t v77 = *(void *)(a1 + 16);
  if (!v77)
  {
    uint64_t v14 = v3;
    swift_bridgeObjectRelease();
    uint64_t v51 = MEMORY[0x263F8EE88];
    goto LABEL_42;
  }
  unint64_t v5 = 0;
  uint64_t v78 = a1 + 32;
  uint64_t v76 = a1;
LABEL_3:
  if (v5 < *(void *)(a1 + 16))
  {
    unint64_t v79 = v5 + 1;
    sub_256A4819C(v78 + 40 * v5, (uint64_t)v95);
    uint64_t v6 = v96;
    uint64_t v7 = v97;
    sub_256A39D70(v95, v96);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 48))(&v89, v6, v7);
    uint64_t v8 = v93;
    uint64_t v9 = v94;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_256A39684(v87, v8, v9);
    swift_bridgeObjectRelease();
    sub_256A39D70(v95, v96);
    uint64_t v10 = sub_256A4A370();
    uint64_t v12 = AssetBackedResource.usages.getter(v10, v11);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = v4;
    long long v88 = (void *)v4;
    sub_256B2267C(v12, (uint64_t)sub_256B22638, 0, v98);
    uint64_t v85 = v98[3];
    uint64_t v15 = v98[4];
    uint64_t v82 = (void (*)(uint64_t *__return_ptr, uint64_t *))v98[5];
    uint64_t v80 = v98[1];
    int64_t v81 = (unint64_t)(v98[2] + 64) >> 6;
    swift_bridgeObjectRetain();
    while (1)
    {
      if (v15)
      {
        char v16 = isUniquelyReferenced_nonNull_native;
        v15 &= v15 - 1;
      }
      else
      {
        int64_t v17 = v85 + 1;
        if (__OFADD__(v85, 1)) {
          goto LABEL_67;
        }
        uint64_t v4 = v14;
        if (v17 >= v81) {
          goto LABEL_39;
        }
        if (!*(void *)(v80 + 8 * v17))
        {
          sub_256B24C30();
          if (v18 == v19) {
            goto LABEL_39;
          }
          sub_256B24E14();
          if (!v20)
          {
            sub_256B24C30();
            if (v18 == v19) {
              goto LABEL_39;
            }
            sub_256B24E14();
            if (!v21)
            {
              sub_256B24C30();
              if (v18 == v19) {
                goto LABEL_39;
              }
              sub_256B24E14();
              if (!v22)
              {
                sub_256B24C30();
                if (v18 == v19) {
                  goto LABEL_39;
                }
                sub_256B24E14();
                if (!v23)
                {
                  sub_256B24E08();
                  if (v18 == v19) {
                    goto LABEL_39;
                  }
                  if (!*(void *)(v80 + 8 * v24))
                  {
                    while (1)
                    {
                      sub_256B24E08();
                      if (v18 == v19) {
                        break;
                      }
                      if (*(void *)(v80 + 8 * v25)) {
                        goto LABEL_28;
                      }
                    }
LABEL_39:
                    swift_bridgeObjectRelease();
                    sub_256A49ED4();
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_256A39DB4((uint64_t)v95);
                    a1 = v76;
                    unint64_t v5 = v79;
                    if (v79 == v77)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v51 = v99;
LABEL_42:
                      type metadata accessor for RunningBoardAssertedAssetSets();
                      swift_allocObject();
                      uint64_t v52 = sub_256B1AB2C();
                      int64_t v53 = 0;
                      uint64_t v54 = *(void *)(v51 + 56);
                      unint64_t v83 = v51 + 56;
                      uint64_t v55 = 1 << *(unsigned char *)(v51 + 32);
                      uint64_t v56 = -1;
                      if (v55 < 64) {
                        uint64_t v56 = ~(-1 << v55);
                      }
                      uint64_t v57 = v56 & v54;
                      uint64_t v84 = (unint64_t)(v55 + 63) >> 6;
                      uint64_t v86 = v52;
                      if ((v56 & v54) == 0) {
                        goto LABEL_46;
                      }
LABEL_45:
                      sub_256B24D5C();
                      for (unint64_t i = v58 | (v53 << 6); ; unint64_t i = __clz(__rbit64(v61)) + (v53 << 6))
                      {
                        uint64_t v63 = v51;
                        uint64_t v64 = (uint64_t *)(*(void *)(v51 + 48) + 16 * i);
                        uint64_t v66 = *v64;
                        uint64_t v65 = v64[1];
                        int64_t v67 = self;
                        swift_bridgeObjectRetain();
                        id v68 = objc_msgSend(v67, sel_sharedManager);
                        int64_t v69 = (void *)sub_256B3F690();
                        swift_bridgeObjectRetain();
                        id v70 = sub_256B224AC((uint64_t)v69, v14, v68);

                        if (!v70)
                        {
                          uint64_t v89 = v66;
                          uint64_t v90 = v65;
                          sub_256B3F760();
                          sub_256B3F5F0();
                          sub_256B3F760();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v71 = v89;
                          uint64_t v72 = v90;
                          sub_256B10830();
                          sub_256A6E4C0();
                          *(void *)uint64_t v73 = v71;
                          *(void *)(v73 + 8) = v72;
                          *(unsigned char *)(v73 + 16) = 0;
                          swift_willThrow();
                          swift_release();
                          return swift_release();
                        }
                        swift_bridgeObjectRelease();
                        sub_256B1B63C(v70);

                        uint64_t v51 = v63;
                        if (v57) {
                          goto LABEL_45;
                        }
LABEL_46:
                        int64_t v60 = v53 + 1;
                        if (__OFADD__(v53, 1)) {
                          goto LABEL_69;
                        }
                        if (v60 >= v84)
                        {
LABEL_64:
                          swift_release();
                          uint64_t result = swift_bridgeObjectRelease();
                          *a2 = v86;
                          return result;
                        }
                        unint64_t v61 = *(void *)(v83 + 8 * v60);
                        ++v53;
                        if (!v61)
                        {
                          int64_t v53 = v60 + 1;
                          if (v60 + 1 >= v84) {
                            goto LABEL_64;
                          }
                          unint64_t v61 = *(void *)(v83 + 8 * v53);
                          if (!v61)
                          {
                            int64_t v53 = v60 + 2;
                            if (v60 + 2 >= v84) {
                              goto LABEL_64;
                            }
                            unint64_t v61 = *(void *)(v83 + 8 * v53);
                            if (!v61)
                            {
                              int64_t v62 = v60 + 3;
                              if (v62 >= v84) {
                                goto LABEL_64;
                              }
                              unint64_t v61 = *(void *)(v83 + 8 * v62);
                              if (!v61)
                              {
                                while (1)
                                {
                                  int64_t v53 = v62 + 1;
                                  if (__OFADD__(v62, 1)) {
                                    goto LABEL_70;
                                  }
                                  if (v53 >= v84) {
                                    goto LABEL_64;
                                  }
                                  unint64_t v61 = *(void *)(v83 + 8 * v53);
                                  ++v62;
                                  if (v61) {
                                    goto LABEL_59;
                                  }
                                }
                              }
                              int64_t v53 = v62;
                            }
                          }
                        }
LABEL_59:
                        uint64_t v57 = (v61 - 1) & v61;
                      }
                    }
                    goto LABEL_3;
                  }
                }
              }
            }
          }
        }
LABEL_28:
        char v16 = isUniquelyReferenced_nonNull_native;
        sub_256B24C20();
        uint64_t v15 = v27 & v26;
        uint64_t v85 = v28;
      }
      sub_256B24DE0();
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v89 = v32;
      uint64_t v90 = isUniquelyReferenced_nonNull_native;
      uint64_t v91 = v30;
      uint64_t v92 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82(v87, &v89);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v87[0];
      uint64_t v33 = v87[1];
      uint64_t v35 = v87[2];
      uint64_t v36 = v87[3];
      uint64_t v37 = v14;
      unint64_t v38 = sub_256A39CC8();
      uint64_t v40 = sub_256B24C84(v39, *(void *)(v14 + 16));
      if (v19)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        break;
      }
      char v42 = v41;
      if (*(void *)(v37 + 24) >= v40)
      {
        if ((v16 & 1) == 0)
        {
          sub_256A39D2C(&qword_26B2B6508);
          sub_256B3FC10();
        }
      }
      else
      {
        sub_256B218F0(v40, v16 & 1);
        unint64_t v43 = sub_256A39CC8();
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_71;
        }
        unint64_t v38 = v43;
      }
      uint64_t v45 = v88;
      if (v42)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t)v45;
        uint64_t v46 = (uint64_t *)(v45[7] + 16 * v38);
        swift_bridgeObjectRelease();
        *uint64_t v46 = v35;
        v46[1] = v36;
        uint64_t isUniquelyReferenced_nonNull_native = 1;
      }
      else
      {
        sub_256B24C74((uint64_t)&v88[v38 >> 6]);
        uint64_t v47 = (uint64_t *)(v45[6] + 16 * v38);
        *uint64_t v47 = v34;
        v47[1] = v33;
        unint64_t v48 = (uint64_t *)(v45[7] + 16 * v38);
        *unint64_t v48 = v35;
        v48[1] = v36;
        uint64_t v49 = v45[2];
        BOOL v19 = __OFADD__(v49, 1);
        uint64_t v50 = v49 + 1;
        if (v19) {
          goto LABEL_66;
        }
        uint64_t v14 = (uint64_t)v45;
        v45[2] = v50;
        uint64_t isUniquelyReferenced_nonNull_native = 1;
      }
    }
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  uint64_t result = sub_256B3FEF0();
  __break(1u);
  return result;
}

uint64_t sub_256B11580()
{
  return sub_256B11598();
}

uint64_t sub_256B11598()
{
  sub_256B24B70();
  uint64_t v1 = sub_256B3F240();
  sub_256A9FC2C();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  sub_256A4A7CC();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x263F06E48], v1);
  sub_256A480EC();
  sub_256B3F2E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t AssetContents.metadataURL.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256B3F300();
  sub_256A9FC2C();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  sub_256B24B70();
  v18[0] = v10;
  v18[1] = v11;
  uint64_t v12 = sub_256B3F240();
  sub_256A9FC2C();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_256A4A7E4();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(a1, *MEMORY[0x263F06E48], v12);
  sub_256A480EC();
  sub_256B3F2E0();
  sub_256AA05D0();
  v16();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_256B1180C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedDiffusionAdapterBase, (uint64_t (*)(void))sub_256A60E70, (uint64_t)&unk_270615FA8, (void (*)(uint64_t))sub_256B150C4);
}

uint64_t sub_256B11878(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  sub_256A39D2C(&qword_26B2B6510);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_256B57080;
  *(void *)(inited + 56) = a1;
  *(void *)(inited + 64) = a2();
  uint64_t v10 = swift_allocObject();
  *(void *)(inited + 32) = v10;
  memcpy((void *)(v10 + 16), v4, 0xB8uLL);
  sub_256B2463C();
  uint64_t result = AssetLock.init(resources:)(inited, &v12);
  if (!v5)
  {
    a4(v12);
    return swift_release();
  }
  return result;
}

uint64_t AssetBackedResource.fetchAsset()(uint64_t a1, uint64_t a2)
{
  sub_256A39D2C(&qword_26B2B6510);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_256B57080;
  *(void *)(inited + 56) = a1;
  *(void *)(inited + 64) = a2;
  sub_256A49D7C((uint64_t *)(inited + 32));
  sub_256A4A838();
  (*(void (**)(void))(v6 + 16))();
  uint64_t result = AssetLock.init(resources:)(inited, &v8);
  if (!v2)
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 40))(&v8, a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_256B11A68(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B150C4(v8, v9);
}

uint64_t sub_256B11AA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for ModelConfigurationReplacementAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for ModelConfigurationReplacementAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B5488, (void (*)(void))type metadata accessor for ModelConfigurationReplacementAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for ModelConfigurationReplacementAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B120A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for LLMDraftModelAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for LLMDraftModelAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B5478, (void (*)(void))type metadata accessor for LLMDraftModelAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for LLMDraftModelAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B126A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for DiffusionModelAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for DiffusionModelAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B34C8, (void (*)(void))type metadata accessor for DiffusionModelAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for DiffusionModelAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B12CAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for LLMModelAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for LLMModelAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, (uint64_t *)&unk_26B2B5320, (void (*)(void))type metadata accessor for LLMModelAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for LLMModelAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B24524);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B132B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for SanitizerAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for SanitizerAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_269F79460, (void (*)(void))type metadata accessor for SanitizerAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for SanitizerAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B138B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for TokenizerAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for TokenizerAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B5208, (void (*)(void))type metadata accessor for TokenizerAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for TokenizerAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B13EB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for LLMAdapterAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for LLMAdapterAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B5448, (void (*)(void))type metadata accessor for LLMAdapterAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for LLMAdapterAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B144BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for ImageFilterAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for ImageFilterAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B3498, (void (*)(void))type metadata accessor for ImageFilterAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for ImageFilterAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B14AC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for ImageScalerAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for ImageScalerAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B34A8, (void (*)(void))type metadata accessor for ImageScalerAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for ImageScalerAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B150C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for DiffusionAdapterAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for DiffusionAdapterAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B34B8, (void (*)(void))type metadata accessor for DiffusionAdapterAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for DiffusionAdapterAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B156C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for ImageMagicCleanUpAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for ImageMagicCleanUpAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_269F79378, (void (*)(void))type metadata accessor for ImageMagicCleanUpAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for ImageMagicCleanUpAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B15CCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for TokenInputDenyListAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for TokenInputDenyListAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B51E8, (void (*)(void))type metadata accessor for TokenInputDenyListAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for TokenInputDenyListAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B162D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for DisabledUseCaseListAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for DisabledUseCaseListAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, (uint64_t *)&unk_26B2B5828, (void (*)(void))type metadata accessor for DisabledUseCaseListAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for DisabledUseCaseListAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B168D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for ImageCuratedPromptsAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for ImageCuratedPromptsAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_269F792E0, (void (*)(void))type metadata accessor for ImageCuratedPromptsAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for ImageCuratedPromptsAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B16ED8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for ServerConfigurationAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for ServerConfigurationAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B5458, (void (*)(void))type metadata accessor for ServerConfigurationAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for ServerConfigurationAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B174DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for TokenOutputDenyListAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for TokenOutputDenyListAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B51F8, (void (*)(void))type metadata accessor for TokenOutputDenyListAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for TokenOutputDenyListAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B17AE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for HandwritingSynthesizerAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for HandwritingSynthesizerAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B3520, (void (*)(void))type metadata accessor for HandwritingSynthesizerAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for HandwritingSynthesizerAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_256B180E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (const void *)v2;
  int64_t v53 = a2;
  uint64_t v6 = type metadata accessor for GenerativeFunctionOverridesAssetContents(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v43 - v9;
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v10 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 56);
  memcpy(__dst, v4, sizeof(__dst));
  uint64_t v13 = sub_256B3F300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    uint64_t v50 = &v43;
    MEMORY[0x270FA5388](v15);
    uint64_t v26 = (char *)&v43 - v25;
    uint64_t v27 = sub_256B3F240();
    uint64_t v48 = v10;
    uint64_t v28 = v27;
    uint64_t v47 = &v43;
    uint64_t v29 = *(void *)(v27 - 8);
    uint64_t v49 = v14;
    uint64_t v46 = v11;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 + 64);
    MEMORY[0x270FA5388](v27);
    uint64_t v52 = v3;
    unint64_t v45 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v32 = *MEMORY[0x263F06E28];
    uint64_t v51 = (char *)a1;
    char v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
    v44((char *)&v43 - v45, v32, v28);
    uint64_t v33 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v43 = (uint64_t)&v43;
    MEMORY[0x270FA5388](v33 - 8);
    sub_256A46F7C((uint64_t)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    uint64_t v35 = sub_256B3F2D0();
    uint64_t v47 = &v43;
    uint64_t v55 = v46;
    uint64_t v56 = v48;
    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (char *)&v43 - v45;
    v44((char *)&v43 - v45, *MEMORY[0x263F06E48], v28);
    a1 = (uint64_t)v51;
    sub_256A480EC();
    swift_bridgeObjectRetain();
    sub_256B3F2F0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v28);
    swift_bridgeObjectRelease();
    uint64_t v37 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v13);
    uint64_t v38 = sub_256B3F600();
LABEL_6:
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v58, v17, v13);
    uint64_t v42 = v54;
    sub_256B2458C(v41, v54, (void (*)(void))type metadata accessor for GenerativeFunctionOverridesAssetContents);
    swift_retain();
    sub_256B1E040(0, 0, 1, v42, v38, a1, &qword_26B2B5468, (void (*)(void))type metadata accessor for GenerativeFunctionOverridesAssetContents, v53);
    sub_256B245E8(v41, (void (*)(void))type metadata accessor for GenerativeFunctionOverridesAssetContents);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v13);
  }
  uint64_t v51 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v14;
  uint64_t v19 = sub_256A39D2C(&qword_269F7CBF8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  *(&v43 - 2) = v23;
  uint64_t result = sub_256B1B6C0(sub_256B244A0);
  if (!v3)
  {
    uint64_t v52 = 0;
    uint64_t v38 = *(void *)&v22[*(int *)(v19 + 48)];
    uint64_t v39 = v18;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    int64_t v17 = v51;
    v40(v51, v22, v13);
    uint64_t v37 = v39;
    goto LABEL_6;
  }
  return result;
}

void AssetBackedResource<>.fetchLockedAsset(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256A4A878();
  a19 = v22;
  a20 = v23;
  uint64_t v96 = v21;
  uint64_t v84 = v24;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v93 = v31;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v89 = AssociatedTypeWitness;
  swift_getAssociatedTypeWitness();
  sub_256A9FC2C();
  uint64_t v90 = v34;
  uint64_t v91 = v33;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  long long v87 = (char *)v78 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  long long v88 = (char *)v78 - v37;
  uint64_t v38 = *v30;
  uint64_t v39 = sub_256B3F300();
  sub_256A9FC2C();
  uint64_t v41 = v40;
  uint64_t v43 = *(void *)(v42 + 64);
  MEMORY[0x270FA5388](v44);
  unint64_t v45 = (v43 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v94 = v20;
  uint64_t v95 = (char *)v78 - v45;
  uint64_t v46 = *(void *)(v26 + 8);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 56))(v28, v46);
  uint64_t v85 = v43;
  uint64_t v86 = v41;
  if (v47)
  {
    unint64_t v83 = v78;
    uint64_t v84 = v38;
    MEMORY[0x270FA5388](v47);
    v78[0] = (char *)v78 - v45;
    uint64_t v48 = sub_256B3F240();
    v78[1] = v78;
    uint64_t v79 = v48;
    sub_256A9FC2C();
    uint64_t v50 = v49;
    uint64_t v82 = v49;
    uint64_t v52 = *(void *)(v51 + 64);
    MEMORY[0x270FA5388](v53);
    unint64_t v81 = (v52 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v54 = *MEMORY[0x263F06E28];
    uint64_t v80 = *(void (**)(char *, uint64_t))(v50 + 104);
    v80((char *)v78 - v81, v54);
    uint64_t v55 = sub_256A39D2C(&qword_26B2B6340);
    uint64_t v56 = sub_256A4AB38(v55);
    MEMORY[0x270FA5388](v56);
    sub_256A4A7E4();
    sub_256A46F7C(v43, 1, 1, v39);
    uint64_t v57 = v78[0];
    sub_256B3F2D0();
    uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v28, v46);
    uint64_t v98 = v58;
    MEMORY[0x270FA5388](v97);
    ((void (*)(char *, void, uint64_t))v80)((char *)v78 - v81, *MEMORY[0x263F06E48], v79);
    sub_256A480EC();
    sub_256B3F2F0();
    sub_256A9FDB0();
    v59();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v57, v39);
    uint64_t v60 = v85;
    uint64_t v61 = sub_256B3F600();
    uint64_t v94 = v61;
LABEL_5:
    MEMORY[0x270FA5388](v61);
    sub_256A4AB70();
    v67();
    uint64_t v69 = v91;
    uint64_t v68 = AssociatedConformanceWitness;
    uint64_t v70 = swift_getAssociatedConformanceWitness();
    uint64_t v71 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 24))((char *)v78 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0), v69, v70);
    uint64_t v72 = swift_checkMetadataState();
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 1;
    uint64_t v73 = v90;
    uint64_t v74 = v87;
    sub_256A4AB70();
    v75();
    a10 = v84;
    uint64_t v76 = *(void (**)(uint64_t *, char *, uint64_t, uint64_t *, uint64_t, uint64_t))(v68 + 112);
    swift_retain();
    v76(&v97, v74, v94, &a10, v72, v68);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v69);
    sub_256AA05D0();
    v77();
    goto LABEL_6;
  }
  uint64_t v62 = sub_256A39D2C(&qword_269F7CBF8);
  sub_256A6E624();
  MEMORY[0x270FA5388](v63);
  sub_256A6E704();
  MEMORY[0x270FA5388](v64);
  v78[-4] = v28;
  v78[-3] = v26;
  uint64_t v65 = v94;
  v78[-2] = v84;
  v78[-1] = v65;
  uint64_t v66 = v96;
  sub_256B1B6C0((void (*)(uint64_t))sub_256B226DC);
  if (!v66)
  {
    uint64_t v96 = 0;
    uint64_t v84 = v38;
    uint64_t v94 = *(void *)(v41 + *(int *)(v62 + 48));
    uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 32))(v95, v41, v39);
    uint64_t v60 = v85;
    goto LABEL_5;
  }
LABEL_6:
  sub_256A4A890();
}

void sub_256B18D14(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + 96))
  {
    unint64_t v5 = *(void *)(v1 + 120);
    unint64_t v4 = *(void *)(v1 + 128);
    uint64_t v6 = *(void *)(v1 + 104);
    uint64_t v2 = *(void *)(v1 + 112);
    char v7 = *(unsigned char *)(v1 + 145);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v4 = 0x8000000256B49480;
    sub_256B24AA8();
    uint64_t v6 = 0x6E2D726F2D6C6C61;
    unint64_t v5 = 0xD000000000000016;
    char v7 = 11;
  }
  sub_256B24B1C();
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v7;
}

void AssetBackedResource<>.subscription.getter()
{
  void (*v63)(void *__return_ptr);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int16 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void v72[15];

  sub_256A4A6AC();
  uint64_t v58 = v0;
  uint64_t v65 = v2;
  uint64_t v63 = *(void (**)(void *__return_ptr))(v1 + 24);
  v63(v72);
  uint64_t v3 = v72[12];
  uint64_t v4 = v72[13];
  uint64_t v5 = v72[14];
  sub_256B24CEC();
  sub_256A54690(v6, v7);
  uint64_t v8 = sub_256B246EC();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_256B24CEC();
    uint64_t v18 = sub_256A54744(v16, v17);
    uint64_t v26 = sub_256B24EB4(v18, v19, v20, v21, v22, v23, v24, v25, v50, v4, v55, v58, v5, (uint64_t)v63, v65);
  }
  else
  {
    uint64_t v26 = sub_256B24EB4(v8, v9, v10, v11, v12, v13, v14, v15, v50, 0x6E2D726F2D6C6C61, v55, v58, 0xEE00676E6968746FLL, (uint64_t)v63, v65);
  }
  v27(v26);
  uint64_t v28 = sub_256B24E8C();
  sub_256A54690(v28, v29);
  sub_256B246EC();
  if (v69)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_256B24E8C();
    uint64_t v51 = v70;
    uint64_t v56 = v71;
    uint64_t v32 = sub_256A54744(v30, v31);
  }
  else
  {
    sub_256A5267C();
    uint64_t v56 = v40;
    uint64_t v51 = 0xD000000000000016;
  }
  uint64_t v41 = sub_256B24EB4(v32, v33, v34, v35, v36, v37, v38, v39, v51, v53, v56, v59, v61, v64, v66);
  v42(v41);
  uint64_t v43 = sub_256B24B94();
  sub_256A54690(v43, v44);
  sub_256B246EC();
  if (v67)
  {
    int v45 = HIBYTE(v68);
    uint64_t v46 = sub_256B24B94();
    sub_256A54744(v46, v47);
  }
  else
  {
    LOBYTE(v45) = 11;
  }
  sub_256B24B1C();
  *(void *)uint64_t v60 = v48;
  *(void *)(v60 + 8) = v49;
  *(void *)(v60 + 16) = v54;
  *(void *)(v60 + 24) = v62;
  *(void *)(v60 + 32) = v52;
  *(void *)(v60 + 40) = v57;
  *(unsigned char *)(v60 + 48) = v45;
  sub_256A4A554();
}

uint64_t sub_256B18F98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedDiffusionModelBase, (uint64_t (*)(void))sub_256A615A0, (uint64_t)&unk_270615F80, (void (*)(uint64_t))sub_256B126A8);
}

uint64_t sub_256B19004(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B126A8(v8, v9);
}

uint64_t sub_256B1903C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedDisabledUseCaseListBase, (uint64_t (*)(void))sub_256A61C5C, (uint64_t)&unk_270615F58, (void (*)(uint64_t))sub_256B162D0);
}

uint64_t sub_256B190A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B162D0(v8, v9);
}

uint64_t sub_256B190E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedGenerativeFunctionOverridesBase, (uint64_t (*)(void))sub_256A622A4, (uint64_t)&unk_270615F30, (void (*)(uint64_t))sub_256B180E4);
}

uint64_t sub_256B1914C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B180E4(v8, v9);
}

uint64_t sub_256B19184(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedHandwritingSynthesizerBase, (uint64_t (*)(void))sub_256A628EC, (uint64_t)&unk_270615F08, (void (*)(uint64_t))sub_256B17AE0);
}

uint64_t sub_256B191F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B17AE0(v8, v9);
}

uint64_t sub_256B19228(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedImageCuratedPromptsBase, (uint64_t (*)(void))sub_256A62F34, (uint64_t)&unk_270615EE0, (void (*)(uint64_t))sub_256B168D4);
}

uint64_t sub_256B19294(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B168D4(v8, v9);
}

uint64_t sub_256B192CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedImageFilterBase, (uint64_t (*)(void))sub_256A6357C, (uint64_t)&unk_270615EB8, (void (*)(uint64_t))sub_256B144BC);
}

uint64_t sub_256B19338(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B144BC(v8, v9);
}

uint64_t sub_256B19370(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedImageMagicCleanUpBase, (uint64_t (*)(void))sub_256A63BC4, (uint64_t)&unk_270615E90, (void (*)(uint64_t))sub_256B156C8);
}

uint64_t sub_256B193DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B156C8(v8, v9);
}

uint64_t sub_256B19414(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedImageScalerBase, (uint64_t (*)(void))sub_256A6420C, (uint64_t)&unk_270615E68, (void (*)(uint64_t))sub_256B14AC0);
}

uint64_t sub_256B19480(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B14AC0(v8, v9);
}

uint64_t sub_256B194B8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedLLMAdapterBase, (uint64_t (*)(void))sub_256A646A8, (uint64_t)&unk_270615E40, (void (*)(uint64_t))sub_256B13EB8);
}

uint64_t sub_256B19524(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B13EB8(v8, v9);
}

uint64_t sub_256B1955C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedLLMDraftModelBase, (uint64_t (*)(void))sub_256A64BDC, (uint64_t)&unk_270615E18, (void (*)(uint64_t))sub_256B120A4);
}

uint64_t sub_256B195C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B120A4(v8, v9);
}

uint64_t sub_256B19600(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedLLMModelBase, (uint64_t (*)(void))sub_256A6504C, (uint64_t)&unk_270615DF0, (void (*)(uint64_t))sub_256B12CAC);
}

uint64_t sub_256B1966C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B12CAC(v8, v9);
}

uint64_t sub_256B196A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedServerConfigurationBase, (uint64_t (*)(void))sub_256A65780, (uint64_t)&unk_270615DC8, (void (*)(uint64_t))sub_256B16ED8);
}

uint64_t sub_256B19710(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B16ED8(v8, v9);
}

uint64_t sub_256B19748(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedModelConfigurationReplacementBase, (uint64_t (*)(void))sub_256A65DC8, (uint64_t)&unk_270615DA0, (void (*)(uint64_t))sub_256B11AA0);
}

uint64_t sub_256B197B4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B11AA0(v8, v9);
}

void sub_256B197EC(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_256B18D14(a1);
}

uint64_t sub_256B19830(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedSanitizerBase, (uint64_t (*)(void))sub_256A66484, (uint64_t)&unk_270615D78, (void (*)(uint64_t))sub_256B132B0);
}

uint64_t sub_256B1989C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B132B0(v8, v9);
}

uint64_t sub_256B198D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedTokenInputDenyListBase, (uint64_t (*)(void))sub_256A66B40, (uint64_t)&unk_270615D50, (void (*)(uint64_t))sub_256B15CCC);
}

uint64_t sub_256B19940(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B15CCC(v8, v9);
}

uint64_t sub_256B19978(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedTokenOutputDenyListBase, (uint64_t (*)(void))sub_256A67188, (uint64_t)&unk_270615D28, (void (*)(uint64_t))sub_256B174DC);
}

uint64_t sub_256B199E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B174DC(v8, v9);
}

uint64_t sub_256B19A1C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249F0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  return sub_256B24A28((uint64_t)&type metadata for AssetBackedTokenizerBase, (uint64_t (*)(void))sub_256A67584, (uint64_t)&unk_270615D00, (void (*)(uint64_t))sub_256B138B4);
}

uint64_t sub_256B19A88(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_256B249C8(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
  uint64_t v8 = sub_256B24A14();
  return sub_256B138B4(v8, v9);
}

void *sub_256B19AC0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_256B3FC80())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2AB400](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_256B19BE8()
{
  return AssetSpecificationVersion.number.getter();
}

uint64_t sub_256B19C1C(uint64_t a1)
{
  return a1;
}

void AssetSubscription.status()(unsigned char *a1@<X8>)
{
  id v5 = objc_msgSend(self, sel_sharedManager);
  if (sub_256B3F750())
  {
    uint64_t v2 = (void *)sub_256B3F690();
    uint64_t v3 = (void *)sub_256B3F690();
    id v4 = objc_msgSend(v5, sel_downloadStatusForSubscriber_subscriptionName_, v2, v3);

    UAFSubscriptionDownloadStatus.assetSubscriptionStatus()((unint64_t)v4, a1);
  }
  else
  {

    *a1 = 6;
  }
}

void static AssetSubscription.== infix(_:_:)()
{
  sub_256A4A6AC();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  int v6 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = *(void *)(v1 + 40);
  int v11 = *(unsigned __int8 *)(v1 + 48);
  BOOL v12 = *(void *)v0 == *(void *)v1 && *(void *)(v0 + 8) == *(void *)(v1 + 8);
  if (v12 || (sub_256B3FEA0() & 1) != 0)
  {
    BOOL v13 = v2 == v7 && v4 == v8;
    if (v13 || (sub_256AA0850(), (sub_256B3FEA0() & 1) != 0))
    {
      BOOL v14 = v3 == v9 && v5 == v10;
      if (v14 || (sub_256B3FEA0()) && v6 != 11 && v11 != 11) {
        sub_256B026BC(v6, v11);
      }
    }
  }
  sub_256A4A554();
}

void UAFSubscriptionDownloadStatus.assetSubscriptionStatus()(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (a1 >= 8)
  {
    if (qword_26B2B6590 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_256B3F4A0();
    sub_256A46E9C(v4, (uint64_t)qword_26B2C4018);
    uint64_t v5 = sub_256B3F470();
    os_log_type_t v6 = sub_256B3F9E0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      sub_256B3FAA0();
      _os_log_impl(&dword_256A36000, v5, v6, "SubscriptionManagerProvider: Download status type of: %lu has not been accounted for", v7, 0xCu);
      MEMORY[0x25A2ABEE0](v7, -1, -1);
    }

    LOBYTE(v3) = 4;
  }
  else
  {
    unint64_t v3 = 0x807030502010004uLL >> (8 * a1);
  }
  *a2 = v3;
}

uint64_t CatalogErrors.AssetErrors.errorDescription.getter()
{
  uint64_t v0 = sub_256B3F660();
  uint64_t v1 = sub_256A4AB38(v0);
  MEMORY[0x270FA5388](v1);
  sub_256A9FD0C();
  sub_256B3F650();
  sub_256B3F640();
  sub_256B3F630();
  sub_256B3F640();
  uint64_t v2 = sub_256B3F680();
  uint64_t v3 = sub_256A4AB38(v2);
  MEMORY[0x270FA5388](v3);
  sub_256B3F670();
  uint64_t v4 = sub_256B3F460();
  uint64_t v5 = sub_256A4AB38(v4);
  MEMORY[0x270FA5388](v5);
  sub_256A9FD0C();
  sub_256B3F450();
  sub_256A4A82C();
  return sub_256B3F700();
}

uint64_t sub_256B1A130(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000256B51CE0 || (sub_256B3FEA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000256B51D00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_256B3FEA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_256B1A220()
{
  return sub_256B3FF70();
}

unint64_t sub_256B1A268(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_256B1A2A4()
{
  return sub_256B1A220();
}

unint64_t sub_256B1A2AC()
{
  return sub_256B1A268(*v0);
}

uint64_t sub_256B1A2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256B1A130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_256B1A2DC(uint64_t a1)
{
  unint64_t v2 = sub_256B226FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256B1A318(uint64_t a1)
{
  unint64_t v2 = sub_256B226FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256B1A354()
{
  return sub_256A90560();
}

uint64_t sub_256B1A36C(uint64_t a1)
{
  unint64_t v2 = sub_256B22748();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256B1A3A8(uint64_t a1)
{
  unint64_t v2 = sub_256B22748();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256B1A3E4(uint64_t a1)
{
  unint64_t v2 = sub_256B22794();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256B1A420(uint64_t a1)
{
  unint64_t v2 = sub_256B22794();

  return MEMORY[0x270FA00B8](a1, v2);
}

void CatalogErrors.AssetErrors.encode(to:)()
{
  sub_256A4A878();
  uint64_t v4 = v3;
  sub_256A39D2C(&qword_269F7CC00);
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v5);
  sub_256A6E704();
  sub_256A39D2C(&qword_269F7CC08);
  sub_256A9FC2C();
  uint64_t v15 = v7;
  uint64_t v16 = v6;
  MEMORY[0x270FA5388](v6);
  sub_256A9FEE8();
  sub_256A39D2C(&qword_269F7CC10);
  sub_256A9FC2C();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_256A4A7E4();
  uint64_t v11 = *(unsigned __int8 *)(v0 + 16);
  sub_256A39D70(v4, v4[3]);
  sub_256B226FC();
  sub_256B3FF90();
  if (v11)
  {
    sub_256B22748();
    sub_256AA0F80();
    sub_256B3FE20();
    uint64_t v12 = sub_256AA0850();
  }
  else
  {
    sub_256B22794();
    sub_256AA0F80();
    sub_256B3FE20();
    BOOL v14 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    uint64_t v12 = v2;
    uint64_t v13 = v16;
  }
  v14(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v11);
  sub_256A4A890();
}

void CatalogErrors.AssetErrors.init(from:)()
{
  sub_256A4A878();
  uint64_t v4 = v3;
  uint64_t v32 = v5;
  sub_256A39D2C(&qword_269F7CC30);
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v6);
  sub_256A4A7E4();
  uint64_t v7 = sub_256A39D2C(&qword_269F7CC38);
  sub_256A9FC2C();
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v9);
  sub_256A84158();
  uint64_t v10 = sub_256A39D2C(&qword_269F7CC40);
  sub_256A9FC2C();
  uint64_t v34 = v11;
  MEMORY[0x270FA5388](v12);
  sub_256A4A7CC();
  sub_256A39D70(v4, v4[3]);
  sub_256B226FC();
  sub_256B3FF80();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v31 = v2;
  uint64_t v13 = sub_256B3FDA0();
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = v10;
  if (!v14)
  {
    uint64_t v16 = v1;
    goto LABEL_7;
  }
  uint64_t v16 = v1;
  char v17 = *(unsigned char *)(v13 + 32);
  sub_256A9FA78(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 != v21 >> 1)
  {
LABEL_7:
    sub_256B3FBB0();
    sub_256A6E4C0();
    uint64_t v23 = v22;
    sub_256A39D2C(&qword_269F79B70);
    void *v23 = &type metadata for CatalogErrors.AssetErrors;
    sub_256B3FCF0();
    sub_256B3FBA0();
    sub_256A4A838();
    (*(void (**)(void *))(v24 + 104))(v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v16, v15);
LABEL_8:
    sub_256A39DB4((uint64_t)v4);
    goto LABEL_9;
  }
  if (v17)
  {
    sub_256B22748();
    sub_256AA0A88();
    uint64_t v25 = sub_256B3FD50();
    uint64_t v27 = v26;
    sub_256A9FDB0();
    v28();
  }
  else
  {
    sub_256B22794();
    sub_256AA0A88();
    uint64_t v25 = sub_256B3FD50();
    uint64_t v27 = v29;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v7);
  }
  swift_unknownObjectRelease();
  sub_256AA05D0();
  v30();
  *(void *)uint64_t v32 = v25;
  *(void *)(v32 + 8) = v27;
  *(unsigned char *)(v32 + 16) = v17;
  sub_256A39DB4((uint64_t)v4);
LABEL_9:
  sub_256A4A890();
}

void sub_256B1AAF8()
{
}

void sub_256B1AB10()
{
}

uint64_t sub_256B1AB2C()
{
  uint64_t v1 = v0;
  v13[1] = *(id *)MEMORY[0x263EF8340];
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  id v2 = objc_msgSend(self, sel_currentProcess);
  unsigned int v3 = objc_msgSend(v2, sel_isManaged);

  if (v3)
  {
    sub_256A49E98(0, (unint64_t *)&unk_26B2B6208);
    id v4 = sub_256B1AD3C();
    id v5 = objc_msgSend(self, sel_currentProcess);
    sub_256A39D2C(&qword_26B2B6330);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_256B572F0;
    *(void *)(v6 + 32) = v4;
    sub_256B3F870();
    objc_allocWithZone(MEMORY[0x263F64408]);
    id v7 = v4;
    id v8 = sub_256B215E0(0xD00000000000001DLL, 0x8000000256B79290, v5);
    v13[0] = 0;
    if (objc_msgSend(v8, sel_acquireWithError_, v13))
    {
      id v9 = v13[0];
    }
    else
    {
      id v10 = v13[0];
      uint64_t v11 = (void *)sub_256B3F230();

      swift_willThrow();
    }
  }
  else
  {
    id v8 = 0;
  }
  *(void *)(v1 + 24) = v8;
  return v1;
}

id sub_256B1AD3C()
{
  uint64_t v0 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributeWithDomain_name_, v0, v1);

  return v2;
}

uint64_t sub_256B1ADD0()
{
  uint64_t v1 = sub_256A39D2C(&qword_26B2B6338);
  MEMORY[0x270FA5388](v1 - 8);
  unsigned int v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_256B3F910();
  sub_256A46F7C((uint64_t)v3, 1, 1, v4);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  id v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v5;
  v7[5] = v6;
  id v8 = v6;
  swift_bridgeObjectRetain();
  sub_256B1B49C((uint64_t)v3, (uint64_t)&unk_269F7CCB8, (uint64_t)v7);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_256B1AEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_256B1AF04, 0, 0);
}

uint64_t sub_256B1AF04()
{
  sub_256A4A1FC();
  unint64_t v1 = v0[2];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_256B3FC80();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v0[4] = v2;
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = v0[2];
      v0[5] = 0;
      if ((v3 & 0xC000000000000001) != 0) {
        id v4 = (id)MEMORY[0x25A2AB400](0);
      }
      else {
        id v4 = *(id *)(v3 + 32);
      }
      id v8 = v4;
      v0[6] = v4;
      uint64_t v9 = swift_task_alloc();
      v0[7] = v9;
      *(void *)(v9 + 16) = v8;
      uint64_t v10 = (void *)swift_task_alloc();
      v0[8] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_256B1B080;
      sub_256B24BB8();
    }
    return MEMORY[0x270FA2318]();
  }
  else
  {
    uint64_t v5 = (void *)v0[3];
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_invalidate);
    sub_256A4AAB4();
    return v6();
  }
}

uint64_t sub_256B1B080()
{
  sub_256A4A1FC();
  sub_256A49FD4();
  uint64_t v1 = *v0;
  sub_256A4A0C0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_256A4A82C();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_256B1B164()
{
  sub_256A4A1FC();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 32);

  if (v1 + 1 == v2)
  {
    uint64_t v3 = *(void **)(v0 + 24);
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_invalidate);
    sub_256A4AAB4();
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 40) + 1;
    *(void *)(v0 + 40) = v6;
    uint64_t v7 = *(void *)(v0 + 16);
    if ((v7 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x25A2AB400]();
    }
    else {
      id v8 = *(id *)(v7 + 8 * v6 + 32);
    }
    id v9 = v8;
    *(void *)(v0 + 48) = v8;
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 56) = v10;
    *(void *)(v10 + 16) = v9;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_256B1B080;
    sub_256B24BB8();
    return MEMORY[0x270FA2318]();
  }
}

void sub_256B1B2B4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_256A39D2C(qword_26B2B60D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_256B24414;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_256B1B494;
  aBlock[3] = &unk_2706080D0;
  id v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_invalidateWithQueue_completion_, 0, v9);
  _Block_release(v9);
}

uint64_t sub_256B1B460()
{
  return sub_256B3F8E0();
}

void sub_256B1B494(uint64_t a1, void *a2)
{
}

uint64_t sub_256B1B49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256B3F910();
  if (sub_256A480C4(a1, 1, v6) == 1)
  {
    sub_256B244BC(a1, &qword_26B2B6338);
  }
  else
  {
    sub_256B3F900();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256B3F8C0();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_256B1B60C()
{
  uint64_t v0 = sub_256B1ADD0();

  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t sub_256B1B63C(void *a1)
{
  swift_beginAccess();
  id v3 = a1;
  MEMORY[0x25A2AB0B0]();
  sub_256A46FF0(*(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_256B3F8A0();
  sub_256B3F870();
  return swift_endAccess();
}

uint64_t sub_256B1B6C0(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_256B1B748()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_256B3FC80();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x25A2AB400](v4, v1);
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      sub_256B22530(v5);
      sub_256B3F760();
      swift_bridgeObjectRelease();
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t AssetLock.id.getter()
{
  return sub_256B1B748();
}

void AssetLock.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256A4A878();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  type metadata accessor for CatalogClient();
  swift_allocObject();
  CatalogClient.init()();
  sub_256A3ED10();
  uint64_t v27 = v26;
  swift_release();
  if (!v20)
  {
    a10 = MEMORY[0x263F8EE78];
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v39 = v25;
      uint64_t v29 = v27 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_256A4819C(v29, (uint64_t)v44);
        sub_256A4819C((uint64_t)v44, (uint64_t)v43);
        sub_256A39D2C(&qword_26B2B5D80);
        sub_256A39D2C(&qword_26B2B54E8);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v42 = 0;
          long long v40 = 0u;
          long long v41 = 0u;
        }
        sub_256A39DB4((uint64_t)v44);
        if (*((void *)&v41 + 1))
        {
          sub_256A3A540(&v40, (uint64_t)v43);
          sub_256A3A540(v43, (uint64_t)&v40);
          uint64_t v30 = a10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_256B07A44();
            uint64_t v30 = v36;
            a10 = v36;
          }
          unint64_t v31 = *(void *)(v30 + 16);
          if (v31 >= *(void *)(v30 + 24) >> 1)
          {
            sub_256B07A44();
            a10 = v37;
          }
          uint64_t v33 = *((void *)&v41 + 1);
          uint64_t v32 = v42;
          sub_256A39E04((uint64_t)&v40, *((uint64_t *)&v41 + 1));
          sub_256A9FC2C();
          MEMORY[0x270FA5388](v34);
          sub_256A84170();
          (*(void (**)(uint64_t))(v35 + 16))(v21);
          sub_256B0D69C(v31, v21, &a10, v33, v32);
          sub_256A39DB4((uint64_t)&v40);
        }
        else
        {
          sub_256B244BC((uint64_t)&v40, &qword_26B2B5520);
        }
        v29 += 40;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease_n();
      uint64_t v38 = a10;
      uint64_t v25 = v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = MEMORY[0x263F8EE78];
    }
    AssetLock.init(resources:)(v38, v44);
    *uint64_t v25 = v44[0];
  }
  sub_256A4A890();
}

uint64_t sub_256B1BB20(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return MEMORY[0x270FA2498](sub_256B1BB40, 0, 0);
}

uint64_t sub_256B1BB40()
{
  void (*v89)(unint64_t *__return_ptr, uint64_t *);
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98[5];
  uint64_t v99;

  uint64_t v99 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 144) = v2;
  uint64_t v3 = sub_256B3F600();
  uint64_t v4 = MEMORY[0x263F8EE88];
  *(void *)(v0 + 112) = MEMORY[0x263F8EE88];
  *(void *)(v2 + 16) = v3;
  uint64_t v82 = *(void *)(v1 + 16);
  if (v82)
  {
    id v5 = (void *)(v0 + 16);
    uint64_t v6 = (void *)(v0 + 72);
    uint64_t v7 = (void *)(*(void *)(v0 + 136) + 32);
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v81 = v0;
    uint64_t v80 = v2;
    uint64_t v84 = v0 + 72;
    uint64_t v85 = (void *)(v0 + 16);
    uint64_t v86 = v7;
LABEL_3:
    uint64_t v83 = v8 + 1;
    sub_256A4819C((uint64_t)&v7[5 * v8], (uint64_t)v6);
    uint64_t v9 = v2;
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 104);
    sub_256A39D70(v6, v11);
    (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 48))(&v91, v11, v10);
    uint64_t v12 = v95;
    uint64_t v13 = v96;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_256A39684(v98, v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v0 + 96);
    uint64_t v14 = *(void **)(v0 + 104);
    sub_256A39D70(v6, v15);
    uint64_t v16 = AssetBackedResource.usages.getter(v15, (uint64_t)v14);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *(uint64_t **)(v9 + 16);
    uint64_t v97 = v18;
    *(void *)(v9 + 16) = 0x8000000000000000;
    sub_256B2267C(v16, (uint64_t)sub_256B22638, 0, v5);
    uint64_t v90 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v88 = *(void *)(v0 + 24);
    uint64_t v89 = *(void (**)(unint64_t *__return_ptr, uint64_t *))(v0 + 56);
    int64_t v87 = (unint64_t)(*(void *)(v0 + 32) + 64) >> 6;
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_4:
      v19 &= v19 - 1;
      goto LABEL_24;
    }
    while (1)
    {
      unint64_t v20 = v90;
      int64_t v21 = v90 + 1;
      uint64_t v7 = v86;
      if (__OFADD__(v90, 1)) {
        goto LABEL_57;
      }
      uint64_t v6 = (void *)v84;
      id v5 = v85;
      if (v21 >= v87) {
        goto LABEL_37;
      }
      if (!*(void *)(v88 + 8 * v21))
      {
        sub_256B24C30();
        if (v23 == v24) {
          goto LABEL_37;
        }
        if (!*(void *)(v88 + 8 * v22))
        {
          sub_256B24C30();
          if (v23 == v24) {
            goto LABEL_37;
          }
          if (!*(void *)(v88 + 8 * v25))
          {
            sub_256B24C30();
            if (v23 == v24) {
              goto LABEL_37;
            }
            if (!*(void *)(v88 + 8 * v26))
            {
              sub_256B24E08();
              if (v23 == v24) {
                goto LABEL_37;
              }
              if (!*(void *)(v88 + 8 * v27))
              {
                while (1)
                {
                  sub_256B24E08();
                  if (v23 == v24) {
                    break;
                  }
                  if (*(void *)(v88 + 8 * v28)) {
                    goto LABEL_23;
                  }
                }
LABEL_37:
                swift_bridgeObjectRelease();
                sub_256A49ED4();
                swift_release();
                uint64_t v2 = v80;
                *(void *)(v80 + 16) = v18;
                swift_bridgeObjectRelease();
                sub_256A39DB4(v84);
                uint64_t v0 = v81;
                uint64_t v8 = v83;
                if (v83 == v82)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v4 = *(void *)(v81 + 112);
                  break;
                }
                goto LABEL_3;
              }
            }
          }
        }
      }
LABEL_23:
      sub_256B24C20();
      uint64_t v19 = v30 & v29;
      uint64_t v90 = v31;
LABEL_24:
      sub_256B24DE0();
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      v98[0] = v35;
      v98[1] = v0;
      v98[2] = v33;
      v98[3] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89(&v91, v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v36 = v91;
      unint64_t v37 = v92;
      uint64_t v14 = v93;
      uint64_t v38 = v94;
      uint64_t v7 = v18;
      unint64_t v39 = sub_256A39CC8();
      uint64_t v41 = sub_256B24C84(v40, v18[2]);
      if (v24)
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        if (v20 < 0x100)
        {
LABEL_66:
          uint64_t v76 = *(void **)(isUniquelyReferenced_nonNull_native + 160);
          swift_release();
          swift_release();

          sub_256B24C94();
          __asm { BRAA            X2, X16 }
        }
        if (!v14[10])
        {
          if (v20 < 0x140) {
            goto LABEL_66;
          }
          if (!v14[11])
          {
            unint64_t v73 = v20 >> 6;
            uint64_t v74 = 12;
            while (v74 - 7 < v73)
            {
              if (v14[v74++]) {
                goto LABEL_51;
              }
            }
            goto LABEL_66;
          }
        }
LABEL_51:
        sub_256B24DB8();
        uint64_t v58 = v72 + (v57 << 6);
        goto LABEL_43;
      }
      uint64_t v0 = v42;
      if (v18[3] >= v41)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v42 & 1) == 0) {
            goto LABEL_33;
          }
        }
        else
        {
          sub_256A39D2C(&qword_26B2B6508);
          uint64_t v7 = &v97;
          sub_256B3FC10();
          uint64_t v18 = v97;
          if ((v0 & 1) == 0) {
            goto LABEL_33;
          }
        }
      }
      else
      {
        sub_256B218F0(v41, isUniquelyReferenced_nonNull_native & 1);
        uint64_t v18 = v97;
        uint64_t v7 = v97;
        unint64_t v43 = sub_256A39CC8();
        if ((v0 & 1) != (v44 & 1))
        {
          sub_256B24C94();
          return sub_256B3FEF0();
        }
        unint64_t v39 = v43;
        if ((v0 & 1) == 0)
        {
LABEL_33:
          sub_256B24C74((uint64_t)&v18[v39 >> 6]);
          uint64_t v46 = (unint64_t *)(v18[6] + 16 * v39);
          *uint64_t v46 = v36;
          v46[1] = v37;
          uint64_t v47 = (void *)(v18[7] + 16 * v39);
          *uint64_t v47 = v14;
          v47[1] = v38;
          uint64_t v48 = v18[2];
          BOOL v24 = __OFADD__(v48, 1);
          unint64_t v20 = v48 + 1;
          if (v24) {
            goto LABEL_56;
          }
          void v18[2] = v20;
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
      int v45 = (void *)(v18[7] + 16 * v39);
      swift_bridgeObjectRelease();
      *int v45 = v14;
      v45[1] = v38;
LABEL_35:
      uint64_t isUniquelyReferenced_nonNull_native = 1;
      if (v19) {
        goto LABEL_4;
      }
    }
  }
  *(void *)(v0 + 152) = v4;
  uint64_t isUniquelyReferenced_nonNull_native = v0;
  sub_256A49E98(0, (unint64_t *)&qword_26B2B59E0);
  uint64_t v91 = 0;
  uint64_t v92 = 0xE000000000000000;
  sub_256B3FB70();
  swift_bridgeObjectRelease();
  sub_256A5267C();
  uint64_t v91 = 0xD000000000000023;
  uint64_t v92 = v49;
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_256B3F9B0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 120) = v50;
  sub_256B3FE80();
  sub_256B3F760();
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_256B3F570();
  sub_256A4AB38(v51);
  sub_256B24E20();
  sub_256B3F560();
  sub_256B3FA10();
  sub_256A6E624();
  sub_256B24E20();
  *(void *)(v0 + 128) = MEMORY[0x263F8EE78];
  sub_256A495C8((unint64_t *)&qword_26B2B59D8, MEMORY[0x270FCDB60]);
  sub_256A39D2C(&qword_26B2B59C0);
  sub_256A49610();
  sub_256B3FAE0();
  sub_256B3FA20();
  sub_256A9FC2C();
  uint64_t v53 = v52;
  sub_256B24E20();
  (*(void (**)(void))(v53 + 104))();
  sub_256AA0850();
  *(void *)(v0 + 160) = sub_256B3FA30();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  type metadata accessor for RunningBoardAssertedAssetSets();
  swift_allocObject();
  uint64_t v7 = (void *)sub_256B1AB2C();
  *(void *)(v0 + 168) = v7;
  char v54 = *(unsigned char *)(v4 + 32);
  *(unsigned char *)(v0 + 224) = v54;
  uint64_t v55 = -1;
  uint64_t v56 = -1 << v54;
  if (-v56 < 64) {
    uint64_t v55 = ~(-1 << -(char)v56);
  }
  if ((v55 & *(void *)(v4 + 56)) == 0)
  {
    unint64_t v20 = 63 - v56;
    uint64_t v14 = *(void **)(v0 + 152);
    if (v20 <= 0x7F) {
      goto LABEL_66;
    }
    if (!v14[8])
    {
      if (v20 < 0xC0) {
        goto LABEL_66;
      }
      if (!v14[9]) {
        goto LABEL_58;
      }
    }
    goto LABEL_51;
  }
  sub_256B24C20();
  uint64_t v61 = v60 & v59;
  uint64_t v14 = *(void **)(v0 + 152);
LABEL_43:
  *(void *)(isUniquelyReferenced_nonNull_native + 176) = v57;
  *(void *)(isUniquelyReferenced_nonNull_native + 184) = v61;
  uint64_t v62 = (void *)isUniquelyReferenced_nonNull_native;
  uint64_t v63 = *(void *)(isUniquelyReferenced_nonNull_native + 160);
  uint64_t v64 = v62[18];
  uint64_t v65 = (uint64_t *)(v14[6] + 16 * v58);
  uint64_t v67 = *v65;
  uint64_t v66 = v65[1];
  v62[24] = v66;
  uint64_t v68 = (void *)swift_task_alloc();
  v62[25] = v68;
  v68[2] = v67;
  id v68[3] = v66;
  v68[4] = v64;
  v68[5] = v63;
  v68[6] = v7;
  swift_bridgeObjectRetain();
  uint64_t v69 = (void *)swift_task_alloc();
  v62[26] = v69;
  *uint64_t v69 = v62;
  v69[1] = sub_256B1C438;
  sub_256A4A82C();
  sub_256B24C94();
  return MEMORY[0x270FA2360](v70);
}

uint64_t sub_256B1C438()
{
  sub_256A4A41C();
  sub_256B24D1C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 216) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_256A4A82C();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_256B1C578()
{
  sub_256A4A41C();
  uint64_t v2 = *(void *)(v0 + 176);
  if (*(void *)(v0 + 184))
  {
    sub_256B24DB8();
    unint64_t v6 = v5 | (v3 << 6);
    uint64_t v7 = *(void *)(v0 + 152);
    goto LABEL_3;
  }
  int64_t v15 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v16 = (1 << *(unsigned char *)(v0 + 224)) + 63;
  uint64_t v7 = *(void *)(v0 + 152);
  if (v15 < (uint64_t)(v16 >> 6))
  {
    uint64_t v17 = v7 + 56;
    unint64_t v18 = *(void *)(v7 + 56 + 8 * v15);
    int64_t v3 = v2 + 1;
    if (v18)
    {
LABEL_9:
      uint64_t v4 = (v18 - 1) & v18;
      unint64_t v6 = __clz(__rbit64(v18)) + (v3 << 6);
LABEL_3:
      *(void *)(v0 + 176) = v3;
      *(void *)(v0 + 184) = v4;
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v9 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      *(void *)(v0 + 192) = v10;
      uint64_t v12 = swift_task_alloc();
      *(void *)(v0 + 200) = v12;
      long long v13 = *(_OWORD *)(v0 + 160);
      *(void *)(v12 + 16) = v11;
      *(void *)(v12 + 24) = v10;
      *(void *)(v12 + 32) = v8;
      *(_OWORD *)(v12 + 40) = v13;
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_256B1C438;
      sub_256A4A82C();
      return MEMORY[0x270FA2360](v1);
    }
    int64_t v19 = v16 >> 6;
    int64_t v3 = v15 + 1;
    if (v15 + 1 < v19)
    {
      unint64_t v18 = *(void *)(v17 + 8 * v3);
      if (v18) {
        goto LABEL_9;
      }
      int64_t v3 = v15 + 2;
      if (v15 + 2 < v19)
      {
        unint64_t v18 = *(void *)(v17 + 8 * v3);
        if (v18) {
          goto LABEL_9;
        }
        int64_t v20 = v15 + 3;
        if (v20 < v19)
        {
          unint64_t v18 = *(void *)(v17 + 8 * v20);
          if (v18)
          {
            int64_t v3 = v20;
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v3 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              break;
            }
            if (v3 >= v19) {
              goto LABEL_20;
            }
            unint64_t v18 = *(void *)(v17 + 8 * v3);
            ++v20;
            if (v18) {
              goto LABEL_9;
            }
          }
LABEL_24:
          __break(1u);
          return MEMORY[0x270FA2360](v1);
        }
      }
    }
  }
LABEL_20:
  int64_t v21 = *(void **)(v0 + 160);
  swift_release();
  swift_release();

  uint64_t v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v23 = *(void *)(v0 + 168);
  return v22(v23);
}

uint64_t sub_256B1C7B0()
{
  sub_256A4A41C();

  swift_release();
  swift_release();
  swift_release();
  sub_256A4AAB4();
  return v1();
}

uint64_t AssetBackedResource.usages.getter(uint64_t a1, uint64_t a2)
{
  void (*v63)(void *__return_ptr, uint64_t *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  void v71[4];
  uint64_t *v72;
  void v73[6];

  uint64_t v4 = (uint64_t *)sub_256B3F600();
  uint64_t v57 = a1;
  uint64_t v55 = a2;
  uint64_t v56 = *(void *)(a2 + 8);
  uint64_t v59 = *(void *)((*(uint64_t (**)(uint64_t))(v56 + 48))(a1) + 16);
  if (!v59) {
    goto LABEL_33;
  }
  sub_256A5267C();
  sub_256A5267C();
  uint64_t v58 = v5;
  while (2)
  {
    if (v6 >= *(void *)(v5 + 16))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    unint64_t v60 = v6 + 1;
    sub_256A39D2C(&qword_26B2B5D78);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_256B57080;
    uint64_t v66 = 3040109;
    uint64_t v67 = 0xE300000000000000;
    sub_256B3F760();
    swift_bridgeObjectRelease();
    unint64_t v8 = v67;
    *(void *)(inited + 32) = v66;
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 48) = 0x44454C42414E45;
    *(void *)(inited + 56) = 0xE700000000000000;
    uint64_t v9 = sub_256B3F600();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v72 = v4;
    sub_256B2267C(v9, (uint64_t)sub_256B22638, 0, v73);
    uint64_t v64 = v73[0];
    uint64_t v65 = v73[3];
    uint64_t v11 = v73[4];
    uint64_t v63 = (void (*)(void *__return_ptr, uint64_t *))v73[5];
    uint64_t v61 = v73[1];
    int64_t v62 = (unint64_t)(v73[2] + 64) >> 6;
    swift_bridgeObjectRetain();
    while (1)
    {
      if (v11)
      {
        sub_256B24D5C();
        uint64_t v13 = v12 | (v65 << 6);
        goto LABEL_22;
      }
      int64_t v14 = v65 + 1;
      if (__OFADD__(v65, 1)) {
        goto LABEL_45;
      }
      if (v14 >= v62) {
        goto LABEL_32;
      }
      if (!*(void *)(v61 + 8 * v14))
      {
        if (v65 + 2 >= v62) {
          goto LABEL_32;
        }
        if (!*(void *)(v61 + 8 * (v65 + 2)))
        {
          if (v65 + 3 >= v62) {
            goto LABEL_32;
          }
          if (!*(void *)(v61 + 8 * (v65 + 3)))
          {
            if (v65 + 4 >= v62) {
              goto LABEL_32;
            }
            if (!*(void *)(v61 + 8 * (v65 + 4)))
            {
              if (v65 + 5 >= v62) {
                goto LABEL_32;
              }
              if (!*(void *)(v61 + 8 * (v65 + 5))) {
                break;
              }
            }
          }
        }
      }
LABEL_21:
      sub_256B24C20();
      uint64_t v11 = v18 & v17;
      uint64_t v13 = v20 + (v19 << 6);
      uint64_t v65 = v19;
LABEL_22:
      int64_t v21 = (uint64_t *)(*(void *)(v64 + 48) + 16 * v13);
      uint64_t v22 = *v21;
      unint64_t v23 = v21[1];
      BOOL v24 = (uint64_t *)(*(void *)(v64 + 56) + 16 * v13);
      uint64_t v25 = *v24;
      uint64_t v26 = v24[1];
      uint64_t v66 = v22;
      uint64_t v67 = v23;
      uint64_t v68 = v25;
      uint64_t v69 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63(v71, &v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v71[0];
      uint64_t v27 = v71[1];
      uint64_t v29 = v71[2];
      uint64_t v30 = v71[3];
      unint64_t v31 = sub_256A39CC8();
      uint64_t v33 = sub_256B24C84(v32, v4[2]);
      if (v35)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      char v36 = v34;
      if (v4[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_256A39D2C(&qword_26B2B6508);
          sub_256B3FC10();
        }
      }
      else
      {
        sub_256B218F0(v33, isUniquelyReferenced_nonNull_native & 1);
        unint64_t v37 = sub_256A39CC8();
        if ((v36 & 1) != (v38 & 1))
        {
          uint64_t result = sub_256B3FEF0();
          __break(1u);
          return result;
        }
        unint64_t v31 = v37;
      }
      uint64_t v4 = v72;
      if (v36)
      {
        swift_bridgeObjectRelease();
        unint64_t v39 = (void *)(v4[7] + 16 * v31);
        swift_bridgeObjectRelease();
        *unint64_t v39 = v29;
        v39[1] = v30;
        char isUniquelyReferenced_nonNull_native = 1;
      }
      else
      {
        sub_256B24C74((uint64_t)&v72[v31 >> 6]);
        char v40 = (void *)(v4[6] + 16 * v31);
        *char v40 = v28;
        v40[1] = v27;
        uint64_t v41 = (void *)(v4[7] + 16 * v31);
        *uint64_t v41 = v29;
        v41[1] = v30;
        uint64_t v42 = v4[2];
        BOOL v35 = __OFADD__(v42, 1);
        uint64_t v43 = v42 + 1;
        if (v35) {
          goto LABEL_44;
        }
        v4[2] = v43;
        char isUniquelyReferenced_nonNull_native = 1;
      }
    }
    int64_t v15 = v65 + 6;
    while (v15 < v62)
    {
      if (*(void *)(v61 + 8 * v15++)) {
        goto LABEL_21;
      }
    }
LABEL_32:
    swift_bridgeObjectRelease();
    sub_256A49ED4();
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v6 = v60;
    uint64_t v5 = v58;
    if (v60 != v59) {
      continue;
    }
    break;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  uint64_t v44 = v57;
  uint64_t v45 = v56;
  if (qword_26B2B63B8 != -1)
  {
LABEL_47:
    swift_once();
    uint64_t v45 = v56;
    uint64_t v44 = v57;
  }
  uint64_t v46 = qword_26B2B63B0;
  uint64_t v47 = *(uint64_t (**)(uint64_t))(v45 + 24);
  uint64_t v48 = sub_256B24D44();
  uint64_t v49 = v47(v48);
  sub_256A42BDC(v49, v50, v46);
  LOBYTE(v46) = v51;
  swift_bridgeObjectRelease();
  if (v46)
  {
    uint64_t v66 = 3040109;
    uint64_t v67 = 0xE300000000000000;
    uint64_t v52 = sub_256B24D44();
    v47(v52);
    sub_256B3F760();
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    sub_256B24ABC();
    uint64_t v4 = (uint64_t *)v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v55 + 48))(&v66, v44);
  int v53 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53 != 11)
  {
    LOBYTE(v66) = v53;
    RequestResourcesKey.usageKey.getter();
    swift_isUniquelyReferenced_nonNull_native();
    sub_256B24ABC();
    uint64_t v4 = (uint64_t *)v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  if (byte_26B2C4010 == 1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = (uint64_t)v4;
    sub_256A47878();
    uint64_t v4 = (uint64_t *)v66;
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v4;
}

void sub_256B1CEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a2;
  uint64_t v24 = a6;
  uint64_t v27 = a5;
  uint64_t v22 = a3;
  uint64_t v8 = sub_256A39D2C(&qword_26B2B51B8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = objc_msgSend(self, sel_sharedManager);
  uint64_t v25 = (void *)sub_256B3F690();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  unint64_t v16 = (void *)(v15 + v14);
  uint64_t v17 = v22;
  *unint64_t v16 = v23;
  v16[1] = v17;
  *(void *)(v15 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = sub_256B248C8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_256B1D2A4;
  aBlock[3] = &unk_270616010;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v20 = v25;
  uint64_t v19 = v26;
  sub_256B22594((uint64_t)v25, v12, v27, (uint64_t)v18, v26);
  _Block_release(v18);
}

void sub_256B1D150(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    id v6 = a1;
    sub_256B1B63C(v6);
    sub_256A39D2C(&qword_26B2B51B8);
    sub_256B3F8E0();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_256B3F760();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_256B3F5F0();
    sub_256B3F760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_256B10830();
    swift_allocError();
    *(void *)uint64_t v5 = a4;
    *(void *)(v5 + 8) = a5;
    *(unsigned char *)(v5 + 16) = 0;
    sub_256A39D2C(&qword_26B2B51B8);
    sub_256B3F8D0();
  }
}

void sub_256B1D2A4(uint64_t a1, void *a2)
{
}

void sub_256B1D2AC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t static AssetLock.lockAllResources()(uint64_t a1)
{
  *(void *)(v1 + 216) = a1;
  sub_256A4A82C();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_256B1D340()
{
  uint64_t v23 = v0;
  type metadata accessor for CatalogClient();
  swift_allocObject();
  CatalogClient.init()();
  sub_256A3ED10();
  uint64_t v2 = v1;
  swift_release();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t)(v0 + 2);
    uint64_t v20 = (long long *)(v0 + 7);
    uint64_t v5 = (uint64_t)(v0 + 12);
    uint64_t v21 = (uint64_t)(v0 + 22);
    uint64_t v6 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_256A4819C(v6, v4);
      sub_256A4819C(v4, (uint64_t)(v0 + 17));
      sub_256A39D2C(&qword_26B2B5D80);
      sub_256A39D2C(&qword_26B2B54E8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        *(void *)(v5 + 32) = 0;
        *(_OWORD *)uint64_t v5 = 0u;
        *(_OWORD *)(v5 + 16) = 0u;
      }
      sub_256A39DB4(v4);
      if (v0[15])
      {
        sub_256A3A540((long long *)v5, (uint64_t)v20);
        sub_256A3A540(v20, v21);
        uint64_t v7 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_256B07A44();
          uint64_t v7 = v15;
          uint64_t v22 = v15;
        }
        unint64_t v8 = *(void *)(v7 + 16);
        if (v8 >= *(void *)(v7 + 24) >> 1)
        {
          sub_256B07A44();
          uint64_t v22 = v16;
        }
        uint64_t v9 = v0[25];
        uint64_t v10 = v0[26];
        uint64_t v11 = sub_256A39E04(v21, v9);
        sub_256A9FC2C();
        uint64_t v13 = v12;
        uint64_t v14 = sub_256B24E20();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v11, v9);
        sub_256B0D69C(v8, v14, &v22, v9, v10);
        sub_256A39DB4(v21);
        swift_task_dealloc();
        uint64_t v4 = (uint64_t)(v0 + 2);
        uint64_t v5 = (uint64_t)(v0 + 12);
      }
      else
      {
        sub_256B244BC(v5, &qword_26B2B5520);
      }
      v6 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
    uint64_t v17 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  v0[28] = v17;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[29] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_256B1D670;
  return sub_256B1BB20(v17);
}

uint64_t sub_256B1D670()
{
  sub_256A4A41C();
  uint64_t v3 = v2;
  sub_256A49FD4();
  uint64_t v5 = v4;
  sub_256B24D1C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_256A4A0C0();
  *unint64_t v8 = v7;
  *(void *)(v5 + 240) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 248) = v3;
  }
  sub_256A4A82C();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_256B1D75C()
{
  sub_256A4A1FC();
  **(void **)(v0 + 216) = *(void *)(v0 + 248);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_256B1D7C4()
{
  sub_256A4A1FC();
  swift_bridgeObjectRelease();
  sub_256A4AAB4();
  return v0();
}

uint64_t static AssetLock.lockResources(_:)()
{
  sub_256A4A1FC();
  uint64_t v2 = v1;
  *(void *)(v0 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_256B1D8B4;
  return sub_256B1BB20(v2);
}

uint64_t sub_256B1D8B4()
{
  sub_256A4A41C();
  uint64_t v3 = v2;
  sub_256A49FD4();
  uint64_t v5 = v4;
  sub_256B24D1C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_256A4A0C0();
  *unint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_256A4A82C();
    return MEMORY[0x270FA2498](v11, v12, v13);
  }
}

uint64_t sub_256B1D9C4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_256B1D9E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AssetLock.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void CatalogAssetProtocol.displayVersion.getter()
{
  sub_256A4A6AC();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v28 = v4;
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_256A9FC2C();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - v9;
  (*(void (**)(uint64_t, uint64_t))(v1 + 80))(v3, v1);
  sub_256B3F300();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v11);
  sub_256A84170();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  uint64_t v14 = sub_256B3F340();
  unint64_t v16 = v15;
  uint64_t v17 = sub_256B24EA0();
  v18(v17);
  uint64_t v19 = self;
  uint64_t v20 = (void *)sub_256B3F3B0();
  *(void *)&long long v31 = 0;
  id v21 = objc_msgSend(v19, sel_JSONObjectWithData_options_error_, v20, 0, &v31);

  if (v21)
  {
    id v22 = (id)v31;
    sub_256B3FAD0();
    swift_unknownObjectRelease();
    sub_256A39D2C(&qword_269F78B10);
    if (sub_256B24E38())
    {
      sub_256A3A6A8(v29, &v31);
      sub_256A46DF8(v14, v16);
      swift_bridgeObjectRelease();
      if (v32)
      {
        if (sub_256B24E38())
        {
          uint64_t v23 = v30;
          uint64_t v24 = v28;
          *uint64_t v28 = v29;
          v24[1] = v23;
          goto LABEL_3;
        }
      }
      else
      {
        sub_256B244BC((uint64_t)&v31, &qword_269F78B20);
      }
    }
    else
    {
      sub_256A46DF8(v14, v16);
    }
  }
  else
  {
    id v25 = (id)v31;
    id v26 = (void *)sub_256B3F230();

    swift_willThrow();
    sub_256A46DF8(v14, v16);
  }
  uint64_t v13 = v28;
  *uint64_t v28 = 0;
  v13[1] = 0;
LABEL_3:
  sub_256A4A554();
}

uint64_t sub_256B1DD38()
{
  return CatalogAssetProtocol.mobileAssetMetadata.getter();
}

uint64_t CatalogAssetProtocol.mobileAssetMetadata.getter()
{
  return sub_256B3F600();
}

uint64_t CatalogAsset.version.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CatalogAsset.reportedDownloadSize.getter()
{
  return *(void *)(v0 + 16);
}

__n128 CatalogAsset.specificationVersion.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 40);
  __n128 result = *(__n128 *)(v1 + 24);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  return result;
}

uint64_t CatalogAsset.contents.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

void CatalogAsset.metadata.getter()
{
  sub_256A4A878();
  uint64_t v2 = v1;
  sub_256B3F300();
  sub_256A9FC2C();
  MEMORY[0x270FA5388](v3);
  sub_256A9FEE8();
  (*(void (**)(void))(*(void *)(v2 + 40) + 16))(*(void *)(v2 + 24));
  uint64_t v4 = sub_256B3F340();
  if (v0)
  {
    uint64_t v6 = sub_256B24D2C();
    v7(v6);
  }
  else
  {
    uint64_t v8 = v4;
    unint64_t v9 = v5;
    uint64_t v10 = sub_256B24D2C();
    v11(v10);
    sub_256B3F150();
    swift_allocObject();
    sub_256B3F140();
    sub_256B3F130();
    swift_release();
    sub_256A46DF8(v8, v9);
  }
  sub_256A4A890();
}

uint64_t CatalogAsset.mobileAssetMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

void CatalogAsset.init(specificationVersion:metadata:contents:mobileAssetMetadata:assetLock:)()
{
  sub_256A4A6AC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_256A9FC2C();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_256A9FEE8();
  uint64_t v13 = *((void *)v12 + 2);
  uint64_t v15 = *v14;
  long long v19 = *v12;
  uint64_t v20 = v13;
  sub_256A4AB70();
  v16();
  uint64_t v18 = v15;
  CatalogAsset.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)((uint64_t)&v19, v0, v4, &v18, v2, v8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v2);
  sub_256A4A838();
  sub_256A9FDB0();
  v17();
  sub_256A4A554();
}

void sub_256B1E040(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, void (*a8)(void)@<X7>, uint64_t *a9@<X8>)
{
  a9[3] = a1;
  a9[4] = a2;
  a9[5] = a3;
  uint64_t v14 = (int *)sub_256A39D2C(a7);
  sub_256B2458C(a4, (uint64_t)a9 + v14[15], a8);
  *(uint64_t *)((char *)a9 + v14[16]) = a5;
  *(uint64_t *)((char *)a9 + v14[17]) = a6;
  uint64_t v15 = sub_256B3F6B0();
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_256A3A70C(v15, v17, a5);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_61;
  }
  sub_256B24DF4();
  if (!v23)
  {
    swift_bridgeObjectRelease();
LABEL_61:
    uint64_t v42 = 0;
    goto LABEL_62;
  }
  if ((v20 & 0x1000000000000000) == 0)
  {
    if ((v20 & 0x2000000000000000) == 0)
    {
      if ((v18 & 0x1000000000000000) != 0) {
        uint64_t v24 = (unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v24 = (unsigned __int8 *)sub_256B3FBE0();
      }
      uint64_t v15 = (uint64_t)sub_256B21D34(v24, v21, 10);
      LOBYTE(v18) = v25 & 1;
      goto LABEL_50;
    }
    if (v18 == 43)
    {
      if (v22)
      {
        if (v22 == 1) {
          goto LABEL_32;
        }
        sub_256B24A44();
        if (!v29 & v28) {
          goto LABEL_32;
        }
        uint64_t v15 = v31;
        if (v30 != 2)
        {
          sub_256B24A44();
          if (!v29 & v28) {
            goto LABEL_32;
          }
          sub_256B24C10();
          if (v32 != 3)
          {
            sub_256B24A44();
            if (!v29 & v28) {
              goto LABEL_32;
            }
            sub_256B24C10();
            if (v33 != 4)
            {
              while (1)
              {
                sub_256B24A68();
                if (!v29 & v28) {
                  goto LABEL_32;
                }
                sub_256B24A54();
                if (!v29) {
                  goto LABEL_32;
                }
                uint64_t v15 = v35 + v34;
                if (__OFADD__(v35, v34)) {
                  goto LABEL_32;
                }
                sub_256B24A78();
                if (v29) {
                  goto LABEL_50;
                }
              }
            }
          }
        }
LABEL_49:
        LOBYTE(v18) = 0;
        goto LABEL_50;
      }
    }
    else
    {
      if (v18 != 45)
      {
        if (!v22 || (v18 - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v15 = (v18 - 48);
        if (v22 != 1)
        {
          sub_256B24A44();
          if (!v29 & v28) {
            goto LABEL_32;
          }
          sub_256B24C10();
          if (v36 != 2)
          {
            sub_256B24A44();
            if (!v29 & v28) {
              goto LABEL_32;
            }
            sub_256B24DCC();
            if (!v29)
            {
              while (1)
              {
                sub_256B24A68();
                if (!v29 & v28) {
                  goto LABEL_32;
                }
                sub_256B24A54();
                if (!v29) {
                  goto LABEL_32;
                }
                uint64_t v15 = v38 + v37;
                if (__OFADD__(v38, v37)) {
                  goto LABEL_32;
                }
                sub_256B24A78();
                if (v29) {
                  goto LABEL_50;
                }
              }
            }
          }
        }
        goto LABEL_49;
      }
      if (v22)
      {
        if (v22 == 1) {
          goto LABEL_32;
        }
        sub_256B24A44();
        if (!v29 & v28) {
          goto LABEL_32;
        }
        if (v26 == 2)
        {
          LOBYTE(v18) = 0;
          uint64_t v15 = -(uint64_t)v27;
          goto LABEL_50;
        }
        sub_256B24DA4();
        if (!v29 & v28) {
          goto LABEL_32;
        }
        sub_256B24D90();
        if (v39 != 3)
        {
          sub_256B24A44();
          if (!(!v29 & v28))
          {
            uint64_t v15 = 10 * (int)v15 - v41;
            if (v40 == 4) {
              goto LABEL_49;
            }
            while (1)
            {
              sub_256B24A68();
              if (!v29 & v28) {
                break;
              }
              sub_256B24A54();
              if (!v29) {
                break;
              }
              uint64_t v15 = v44 - v43;
              if (__OFSUB__(v44, v43)) {
                break;
              }
              sub_256B24A78();
              if (v29) {
                goto LABEL_50;
              }
            }
          }
LABEL_32:
          uint64_t v15 = 0;
          LOBYTE(v18) = 1;
          goto LABEL_50;
        }
        goto LABEL_49;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  uint64_t v15 = (uint64_t)sub_256B21C4C(v18, v20, 10);
  LOBYTE(v18) = v49;
LABEL_50:
  swift_bridgeObjectRelease();
  if (v18) {
    uint64_t v42 = 0;
  }
  else {
    uint64_t v42 = v15;
  }
LABEL_62:
  a9[2] = v42;
  uint64_t v45 = sub_256B24B40();
  unint64_t v47 = v46;
  swift_bridgeObjectRelease();
  if (v47)
  {
    unint64_t v48 = v47;
  }
  else
  {
    uint64_t v45 = 0x6E776F6E6B6E753CLL;
    unint64_t v48 = 0xE90000000000003ELL;
  }
  sub_256B245E8(a4, a8);
  *a9 = v45;
  a9[1] = v48;
}

void CatalogAsset.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *a4;
  *(_OWORD *)(a6 + 24) = *(_OWORD *)a1;
  *(void *)(a6 + 40) = v10;
  uint64_t v12 = type metadata accessor for CatalogAsset();
  uint64_t v13 = *(void *)(a5 - 8);
  sub_256A4AB70();
  v14();
  *(void *)(a6 + *(int *)(v12 + 64)) = a3;
  *(void *)(a6 + *(int *)(v12 + 68)) = v11;
  uint64_t v15 = sub_256B3F6B0();
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_256A3A70C(v15, v17, a3);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_45;
  }
  sub_256B24DF4();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  if ((v20 & 0x1000000000000000) != 0)
  {
    uint64_t v15 = (uint64_t)sub_256B21C4C(v18, v20, 10);
    LOBYTE(v18) = v44;
    goto LABEL_44;
  }
  if ((v20 & 0x2000000000000000) != 0)
  {
    if (v18 == 43)
    {
      if (!v22) {
        goto LABEL_61;
      }
      if (v22 == 1) {
        goto LABEL_30;
      }
      sub_256B24A44();
      if (!v29 & v28) {
        goto LABEL_30;
      }
      uint64_t v15 = v31;
      if (v30 != 2)
      {
        sub_256B24A44();
        if (!v29 & v28) {
          goto LABEL_30;
        }
        sub_256B24DCC();
        if (!v29)
        {
          while (1)
          {
            sub_256B24A68();
            if (!v29 & v28) {
              goto LABEL_30;
            }
            sub_256B24A54();
            if (!v29) {
              goto LABEL_30;
            }
            uint64_t v15 = v33 + v32;
            if (__OFADD__(v33, v32)) {
              goto LABEL_30;
            }
            sub_256B24A78();
            if (v29) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (v18 == 45)
      {
        if (v22)
        {
          if (v22 != 1)
          {
            sub_256B24A44();
            if (!(!v29 & v28))
            {
              if (v26 == 2)
              {
                LOBYTE(v18) = 0;
                uint64_t v15 = -(uint64_t)v27;
                goto LABEL_44;
              }
              sub_256B24DA4();
              if (!(!v29 & v28))
              {
                sub_256B24D90();
                if (v37 == 3) {
                  goto LABEL_43;
                }
                while (1)
                {
                  sub_256B24A68();
                  if (!v29 & v28) {
                    break;
                  }
                  sub_256B24A54();
                  if (!v29) {
                    break;
                  }
                  uint64_t v15 = v43 - v42;
                  if (__OFSUB__(v43, v42)) {
                    break;
                  }
                  sub_256B24A78();
                  if (v29) {
                    goto LABEL_44;
                  }
                }
              }
            }
          }
LABEL_30:
          uint64_t v15 = 0;
          LOBYTE(v18) = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_61:
        __break(1u);
        return;
      }
      if (!v22 || (v18 - 48) > 9u) {
        goto LABEL_30;
      }
      uint64_t v15 = (v18 - 48);
      if (v22 != 1)
      {
        sub_256B24A44();
        if (!v29 & v28) {
          goto LABEL_30;
        }
        sub_256B24C10();
        if (v34 != 2)
        {
          while (1)
          {
            sub_256B24A68();
            if (!v29 & v28) {
              goto LABEL_30;
            }
            sub_256B24A54();
            if (!v29) {
              goto LABEL_30;
            }
            uint64_t v15 = v36 + v35;
            if (__OFADD__(v36, v35)) {
              goto LABEL_30;
            }
            sub_256B24A78();
            if (v29) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    LOBYTE(v18) = 0;
    goto LABEL_44;
  }
  if ((v18 & 0x1000000000000000) != 0) {
    uint64_t v24 = (unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v24 = (unsigned __int8 *)sub_256B3FBE0();
  }
  uint64_t v15 = (uint64_t)sub_256B21D34(v24, v21, 10);
  LOBYTE(v18) = v25 & 1;
LABEL_44:
  swift_bridgeObjectRelease();
  if (v18) {
LABEL_45:
  }
    uint64_t v15 = 0;
  *(void *)(a6 + 16) = v15;
  uint64_t v38 = sub_256B24B40();
  unint64_t v40 = v39;
  swift_bridgeObjectRelease();
  if (v40)
  {
    unint64_t v41 = v40;
  }
  else
  {
    uint64_t v38 = 0x6E776F6E6B6E753CLL;
    unint64_t v41 = 0xE90000000000003ELL;
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, a5);
  *(void *)a6 = v38;
  *(void *)(a6 + 8) = v41;
}

unint64_t CatalogAsset.description.getter(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F086E8]), sel_init);
  objc_msgSend(v3, sel_setCountStyle_, 0);
  id v4 = objc_msgSend(v3, sel_stringFromByteCount_, *(void *)(v1 + 16));
  sub_256B3F6B0();
  uint64_t v6 = v5;

  sub_256B3FB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256AA0850();
  sub_256B3F760();
  swift_bridgeObjectRelease();
  sub_256B3F760();
  sub_256B3F760();
  swift_bridgeObjectRelease();
  sub_256B3F760();
  uint64_t v7 = sub_256B3F300();
  sub_256A9FC2C();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_256A84158();
  (*(void (**)(void))(*(void *)(a1 + 40) + 8))(*(void *)(a1 + 24));
  sub_256A495C8(&qword_269F78BA8, MEMORY[0x270FA8EA0]);
  sub_256B3FE80();
  sub_256B3F760();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v7);

  return 0xD000000000000014;
}

void sub_256B1E924()
{
}

void sub_256B1E944()
{
}

void sub_256B1E988(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *((void *)a1 + 2);
  long long v7 = *a1;
  uint64_t v8 = v6;
  CatalogAsset.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)((uint64_t)&v7, a2, a3, a4, *(void *)(a5 + 24), a6);
}

BOOL static AssetSubscriptionStatusPendingReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AssetSubscriptionStatusPendingReason.hash(into:)()
{
  return sub_256B3FF50();
}

uint64_t AssetSubscriptionStatusPendingReason.hashValue.getter()
{
  return sub_256B3FF70();
}

uint64_t AssetSubscription.subscriberID.getter()
{
  return sub_256A4A370();
}

uint64_t AssetSubscription.subscriptionName.getter()
{
  return sub_256A4A370();
}

uint64_t AssetSubscription.assetSetName.getter()
{
  return sub_256A4A370();
}

void AssetSubscription.requestResourcesKey.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetSubscription.assetSize()()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_sharedManager);
  uint64_t v1 = (void *)sub_256B3F690();
  uint64_t v2 = (void *)sub_256B3F690();
  v7[0] = 0;
  id v3 = objc_msgSend(v0, sel_diskSpaceNeededForSubscriber_subscriptionName_error_, v1, v2, v7);

  id v4 = v7[0];
  id v5 = objc_msgSend(v3, sel_unsignedLongLongValue);

  if (v4) {
    swift_willThrow();
  }
  return (Swift::UInt64)v5;
}

void AssetSubscription.hash(into:)()
{
  sub_256A4A6AC();
  int v1 = *(unsigned __int8 *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  if (v1 == 11)
  {
    sub_256B3FF60();
    sub_256A4A554();
  }
  else
  {
    sub_256B3FF60();
    sub_256A4A554();
    sub_256A86918(v2, v3);
  }
}

uint64_t AssetSubscription.hashValue.getter()
{
  sub_256B24D04();
  sub_256B3FF40();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  sub_256B3FF60();
  if (v0 != 11) {
    sub_256A86918((uint64_t)v2, v0);
  }
  return sub_256B3FF70();
}

uint64_t sub_256B1EDE4()
{
  sub_256B24D04();
  sub_256B3FF40();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_256B3F740();
  swift_bridgeObjectRelease();
  sub_256B3FF60();
  if (v0 != 11) {
    sub_256A86918((uint64_t)v2, v0);
  }
  return sub_256B3FF70();
}

uint64_t AssetSubscription.description.getter()
{
  return 0;
}

uint64_t sub_256B1F008(uint64_t a1, uint64_t a2)
{
  return AssetBackedResource.fetchAsset()(a1, a2);
}

uint64_t sub_256B1F020()
{
  return AssetBackedResource.fetchLockedAsset(with:)();
}

uint64_t AssetBackedResource.fetchLockedAsset(with:)()
{
  sub_256B10830();
  sub_256A6E4C0();
  *(void *)uint64_t v0 = 0xD000000000000036;
  *(void *)(v0 + 8) = 0x8000000256B51C30;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

void AssetBackedResource.subscription.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
  strcpy((char *)(a1 + 16), "all-or-nothing");
  *(unsigned char *)(a1 + 31) = -18;
  *(void *)(a1 + 32) = 0xD000000000000016;
  *(void *)(a1 + 40) = 0x8000000256B49480;
  *(unsigned char *)(a1 + 48) = 11;
}

void sub_256B1F10C()
{
  sub_256A4A878();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  memcpy(v123, v7, 0xB8uLL);
  v113[2] = v123;
  uint64_t v8 = sub_256B19AC0(v2, (uint64_t)v113, v4);
  if (!v8)
  {
    if (qword_26B2B62D0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_256B3F4A0();
    sub_256B24BDC(v26, (uint64_t)qword_26B2C3FF8);
    sub_256B2463C();
    sub_256B2463C();
    sub_256B2463C();
    sub_256B2463C();
    unsigned __int8 v27 = sub_256B3F470();
    os_log_type_t v28 = sub_256B3F9F0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v114 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      if (v120)
      {
        uint64_t v31 = v121;
        unint64_t v30 = v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v30 = 0x8000000256B49480;
        uint64_t v31 = 0xD000000000000016;
        sub_256B24AA8();
      }
      swift_bridgeObjectRelease();
      sub_256B24A88();
      sub_256B3B598(v31, v30, &v114);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      sub_256B246EC();
      sub_256B246EC();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v37 = v118;
      unint64_t v38 = v119;
      swift_bridgeObjectRetain();
      sub_256B3B598(v37, v38, &v114);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      sub_256B246EC();
      sub_256B246EC();
      _os_log_impl(&dword_256A36000, v27, v28, "Failed to find asset set %s for %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      sub_256A4A158();
      sub_256A4A158();
    }
    else
    {
      sub_256B246EC();
      sub_256B246EC();
      sub_256B246EC();
      sub_256B246EC();
    }
    uint64_t v114 = 0;
    unint64_t v115 = 0xE000000000000000;
    sub_256B3FB70();
    if (v123[12])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_256B24A88();
    sub_256B3F760();
    swift_bridgeObjectRelease();
    sub_256B24C3C();
    sub_256B3F760();
    uint64_t v39 = v114;
    unint64_t v40 = v115;
    sub_256B10830();
    sub_256A6E4C0();
    *(void *)uint64_t v41 = v39;
    *(void *)(v41 + 8) = v40;
    *(unsigned char *)(v41 + 16) = 0;
    swift_willThrow();
    goto LABEL_54;
  }
  id v9 = v8;
  unint64_t v10 = v123[20];
  LODWORD(v107) = v123[20] != 0;
  id v112 = v8;
  uint64_t v105 = v6;
  uint64_t v106 = v0;
  if (!v123[20])
  {
    uint64_t v11 = v123[4];
    unint64_t v10 = v123[5];
    id v32 = v8;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_256B3F690();
    id v34 = sub_256B24E58(v33);
LABEL_21:
    id v36 = v34;
LABEL_30:

    if (!v36)
    {
      if (qword_26B2B62D0 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_256B3F4A0();
      sub_256B24BDC(v66, (uint64_t)qword_26B2C3FF8);
      swift_bridgeObjectRetain();
      sub_256B2463C();
      swift_bridgeObjectRetain();
      sub_256B2463C();
      uint64_t v67 = sub_256B3F470();
      os_log_type_t v68 = sub_256B3F9F0();
      id v69 = v112;
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v114 = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v11;
        sub_256B3B598(v11, v10, &v114);
        sub_256B3FAA0();
        unint64_t v111 = v10;
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v70 + 12) = 2080;
        if (v120)
        {
          uint64_t v71 = v121;
          unint64_t v72 = v122;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v71 = 0xD000000000000016;
          unint64_t v72 = 0x8000000256B49480;
          sub_256B24AA8();
        }
        swift_bridgeObjectRelease();
        sub_256B24A88();
        sub_256B3B598(v71, v72, &v114);
        sub_256B3FAA0();
        swift_bridgeObjectRelease();
        sub_256B246EC();
        sub_256B246EC();
        _os_log_impl(&dword_256A36000, v67, v68, "Failed to find asset named %s in asset set %s", (uint8_t *)v70, 0x16u);
        sub_256B24D70();
        sub_256A4A158();
        sub_256A4A158();

        uint64_t v11 = (uint64_t)v110;
        unint64_t v10 = v111;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_256B246EC();
        sub_256B246EC();
      }
      uint64_t v114 = v11;
      unint64_t v115 = v10;
      sub_256B24C3C();
      sub_256B3F760();
      sub_256B10830();
      uint64_t v95 = sub_256A6E4C0();
      sub_256B24CB0(v95, v96);

      goto LABEL_54;
    }
    uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v11;
    unint64_t v111 = v10;
    id v9 = v36;
    goto LABEL_32;
  }
  uint64_t v11 = v123[19];
  uint64_t v12 = qword_26B2B6478;
  id v13 = v8;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  if ((byte_26B2C4010 & 1) == 0)
  {
    uint64_t v35 = sub_256B3F690();
    id v34 = sub_256B24E58(v35);
    goto LABEL_21;
  }
  uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v11;
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v13, sel_assetNamed_, v14);

  if (!v9)
  {
LABEL_29:
    uint64_t v11 = (uint64_t)v110;
    unsigned __int8 v42 = (void *)sub_256B3F690();
    id v36 = objc_msgSend(v13, sel_assetNamed_, v42);

    goto LABEL_30;
  }
  unint64_t v111 = v10;
  id v15 = objc_msgSend(v9, sel_metadata);
  uint64_t v16 = sub_256B3F5E0();

  uint64_t v17 = sub_256B3F6B0();
  uint64_t v19 = sub_256A3A70C(v17, v18, v16);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_256B3F6B0();
  if (!v21)
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = v111;
    goto LABEL_29;
  }
  BOOL v24 = v19 == v22 && v21 == v23;
  unint64_t v10 = v111;
  if (!v24)
  {
    char v25 = sub_256B3FEA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_56;
    }
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_56:
  swift_bridgeObjectRelease();
  if (qword_26B2B62D0 != -1) {
    swift_once();
  }
  uint64_t v97 = sub_256B3F4A0();
  sub_256B24BDC(v97, (uint64_t)qword_26B2C3FF8);
  sub_256B2463C();
  uint64_t v98 = sub_256B3F470();
  os_log_type_t v99 = sub_256B3F9F0();
  uint64_t v11 = v99;
  if (os_log_type_enabled(v98, v99))
  {
    uint64_t v100 = (uint8_t *)swift_slowAlloc();
    uint64_t v114 = swift_slowAlloc();
    *(_DWORD *)uint64_t v100 = 136315138;
    uint64_t v101 = v118;
    unint64_t v102 = v119;
    swift_bridgeObjectRetain();
    sub_256B3B598(v101, v102, &v114);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    sub_256B246EC();
    _os_log_impl(&dword_256A36000, v98, (os_log_type_t)v11, "Using asset from asset root for resource %s", v100, 0xCu);
    swift_arrayDestroy();
    sub_256A4A158();
    sub_256A4A158();
  }
  else
  {
    sub_256B246EC();
  }

  uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v123[4];
  unint64_t v111 = v123[5];
  swift_bridgeObjectRetain();
  LODWORD(v107) = 0;
LABEL_32:
  uint64_t v43 = sub_256B3F300();
  uint64_t v109 = &v103;
  sub_256A9FC2C();
  uint64_t v45 = v44;
  uint64_t v47 = *(void *)(v46 + 64);
  MEMORY[0x270FA5388](v48);
  unint64_t v49 = (v47 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v104 = (char *)&v103 - v49;
  id v108 = v9;
  id v50 = objc_msgSend(v108, sel_location);
  uint64_t v51 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v52 = sub_256A4AB38(v51);
  MEMORY[0x270FA5388](v52);
  sub_256A4A7E4();
  if (v50)
  {
    MEMORY[0x270FA5388](v53);
    sub_256B3F290();

    char v54 = (char *)&v103 - v49;
    uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v55(v11, v54, v43);
    sub_256A46F7C(v11, 0, 1, v43);
    id v56 = v112;
    if (sub_256A480C4(v11, 1, v43) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v57 = v55;
      uint64_t v58 = v104;
      uint64_t v110 = v57;
      unint64_t v111 = v45 + 32;
      uint64_t v59 = ((uint64_t (*)(char *, uint64_t, uint64_t))v57)(v104, v11, v43);
      uint64_t v103 = (uint64_t)&v103;
      MEMORY[0x270FA5388](v59);
      unint64_t v60 = (char *)&v103 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v107)
      {
        uint64_t v116 = (void *)v123[4];
        unint64_t v117 = v123[5];
        uint64_t v61 = sub_256B3F240();
        uint64_t v107 = (uint64_t)&v103;
        sub_256A9FC2C();
        uint64_t v63 = v62;
        MEMORY[0x270FA5388](v64);
        sub_256A6E704();
        (*(void (**)(char *, void, uint64_t))(v63 + 104))(v58, *MEMORY[0x263F06E48], v61);
        sub_256A480EC();
        swift_bridgeObjectRetain();
        sub_256B3F2E0();
        uint64_t v58 = v104;
        sub_256AA05D0();
        v65();
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)&v103 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0), v58, v43);
      }
      id v89 = v108;
      id v90 = objc_msgSend(v108, sel_metadata);
      uint64_t v91 = sub_256B3F5E0();

      id v92 = v112;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v58, v43);
      uint64_t v93 = *(int *)(sub_256A39D2C(&qword_269F7CBF8) + 48);
      uint64_t v94 = v105;
      v110(v105, v60, v43);
      *(void *)(v94 + v93) = v91;
      goto LABEL_54;
    }
  }
  else
  {
    sub_256A46F7C(v11, 1, 1, v43);
    id v56 = v112;
  }
  sub_256B244BC(v11, &qword_26B2B6340);
  if (qword_26B2B62D0 != -1) {
    swift_once();
  }
  uint64_t v73 = sub_256B3F4A0();
  sub_256A46E9C(v73, (uint64_t)qword_26B2C3FF8);
  id v74 = v108;
  unint64_t v75 = v111;
  swift_bridgeObjectRetain_n();
  id v76 = v74;
  uint64_t v77 = sub_256B3F470();
  os_log_type_t v78 = sub_256B3F9D0();
  int v79 = v78;
  BOOL v80 = os_log_type_enabled(v77, v78);
  uint64_t v81 = (uint64_t)v110;
  if (v80)
  {
    uint64_t v82 = swift_slowAlloc();
    uint64_t v109 = (uint64_t *)swift_slowAlloc();
    uint64_t v116 = v109;
    *(_DWORD *)uint64_t v82 = 136315394;
    LODWORD(v108) = v79;
    swift_bridgeObjectRetain();
    uint64_t v114 = sub_256B3B598(v81, v75, (uint64_t *)&v116);
    sub_256B3FAA0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v82 + 12) = 2080;
    uint64_t v107 = v82 + 14;
    id v83 = objc_msgSend(v76, sel_metadata);
    sub_256B3F5E0();

    unint64_t v75 = v111;
    uint64_t v84 = sub_256B3F5F0();
    unint64_t v86 = v85;
    uint64_t v81 = (uint64_t)v110;
    swift_bridgeObjectRelease();
    uint64_t v114 = sub_256B3B598(v84, v86, (uint64_t *)&v116);
    id v56 = v112;
    sub_256B3FAA0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v77, (os_log_type_t)v108, "Asset %s does not have a location. Metadata: %s", (uint8_t *)v82, 0x16u);
    sub_256B24D70();
    sub_256A4A158();
    sub_256A4A158();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v116 = 0;
  unint64_t v117 = 0xE000000000000000;
  sub_256B3FB70();
  swift_bridgeObjectRelease();
  uint64_t v116 = (void *)v81;
  unint64_t v117 = v75;
  sub_256B3F760();
  sub_256B10830();
  uint64_t v87 = sub_256A6E4C0();
  sub_256B24CB0(v87, v88);

LABEL_54:
  sub_256A4A890();
}

void sub_256B2009C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t);
  os_log_t v27;
  NSObject *v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  NSObject *v53;
  os_log_type_t v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  void (*v58)(void *__return_ptr, uint64_t, uint64_t *);
  uint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  os_log_t v66;
  os_log_t v67;
  unint64_t v68;
  id v69;
  id v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  NSObject *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  os_log_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  void *v116;
  NSObject *v117;
  os_log_type_t v118;
  int v119;
  BOOL v120;
  os_log_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  void *v128;
  os_log_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  int v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t);
  uint64_t v150;
  unint64_t v151;
  os_log_t v152;
  uint8_t *v153;
  void *v154;
  uint64_t v155;
  void *v156;
  void v157[2];
  int v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint8_t *v164;
  void *v165;
  uint64_t v166;
  os_log_t v167;
  os_log_t v168;
  uint64_t *v169;
  void *v170;
  uint64_t v171;
  void v172[7];
  uint64_t v173[23];
  void v174[24];
  uint64_t v175;
  uint64_t v176;

  uint64_t v170 = *(void **)(a3 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)v157 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)v157 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v157 - v19;
  v172[2] = a3;
  v172[3] = v21;
  uint64_t v169 = v21;
  v172[4] = v23;
  v172[5] = v22;
  char v25 = sub_256B19AC0(sub_256B2497C, (uint64_t)v172, v24);
  uint64_t v171 = a2;
  if (!v25)
  {
    uint64_t v48 = a3;
    if (qword_26B2B62D0 != -1) {
      swift_once();
    }
    unint64_t v49 = sub_256B3F4A0();
    sub_256A46E9C(v49, (uint64_t)qword_26B2C3FF8);
    uint64_t v51 = v170;
    id v50 = v171;
    uint64_t v52 = (void (*)(char *, uint64_t, uint64_t))v170[2];
    v52(v20, v171, a3);
    v52(v18, v50, a3);
    uint64_t v53 = sub_256B3F470();
    char v54 = sub_256B3F9F0();
    uint64_t v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      id v56 = swift_slowAlloc();
      uint64_t v168 = (os_log_t)swift_slowAlloc();
      v173[0] = (uint64_t)v168;
      *(_DWORD *)id v56 = 136315394;
      uint64_t v164 = (uint8_t *)(v56 + 4);
      uint64_t v167 = v53;
      uint64_t v57 = v169;
      uint64_t v58 = (void (*)(void *__return_ptr, uint64_t, uint64_t *))v169[6];
      LODWORD(v165) = v55;
      v58(v174, v48, v169);
      uint64_t v59 = v174[4];
      unint64_t v60 = v174[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v174[0] = sub_256B3B598(v59, v60, v173);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      uint64_t v61 = (void (*)(char *, uint64_t))v170[1];
      ++v170;
      uint64_t v62 = v20;
      uint64_t v63 = v57;
      v61(v62, v48);
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v64 = (*(uint64_t (**)(uint64_t))(v57[1] + 24))(v48);
      v174[0] = sub_256B3B598(v64, v65, v173);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      v61(v18, v48);
      uint64_t v66 = v167;
      _os_log_impl(&dword_256A36000, v167, (os_log_type_t)v165, "Failed to find asset set %s for %s", (uint8_t *)v56, 0x16u);
      uint64_t v67 = v168;
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v67, -1, -1);
      MEMORY[0x25A2ABEE0](v56, -1, -1);
    }
    else
    {
      uint64_t v71 = (void (*)(char *, uint64_t))v51[1];
      v71(v20, v48);
      v71(v18, v48);

      uint64_t v63 = v169;
    }
    v174[0] = 0;
    v174[1] = 0xE000000000000000;
    sub_256B3FB70();
    ((void (*)(void *__return_ptr, uint64_t, uint64_t *))v63[6])(v174, v48, v63);
    unint64_t v72 = v174[4];
    uint64_t v73 = v174[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v173[0] = v72;
    v173[1] = v73;
    sub_256B3F760();
    id v74 = v173[0];
    unint64_t v75 = v173[1];
    sub_256B10830();
    swift_allocError();
    *(void *)id v76 = v74;
    *(void *)(v76 + 8) = v75;
    *(unsigned char *)(v76 + 16) = 0;
    swift_willThrow();
    return;
  }
  uint64_t v165 = v12;
  uint64_t v162 = a5;
  uint64_t v163 = v5;
  uint64_t v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 24);
  unsigned __int8 v27 = v25;
  v26(v173, a3, a4);
  memcpy(v174, v173, 0xB8uLL);
  os_log_type_t v28 = v174[19];
  uint64_t v29 = v174[20];
  swift_bridgeObjectRetain();
  sub_256B246EC();
  uint64_t v166 = a3;
  LODWORD(v164) = v29 != 0;
  if (!v29)
  {
    os_log_type_t v28 = (*(uint64_t (**)(uint64_t))(v169[1] + 24))(a3);
    uint64_t v29 = v68;
    uint64_t v35 = (id)sub_256B3F690();
    id v69 = [v27 assetNamed:v35];
LABEL_20:
    uint64_t v70 = v69;
LABEL_25:

    if (!v70)
    {
      if (qword_26B2B62D0 != -1) {
        swift_once();
      }
      os_log_type_t v99 = sub_256B3F4A0();
      sub_256A46E9C(v99, (uint64_t)qword_26B2C3FF8);
      uint64_t v100 = v170;
      uint64_t v101 = v165;
      unint64_t v102 = v166;
      ((void (*)(void *, uint64_t, uint64_t))v170[2])(v165, v171, v166);
      swift_bridgeObjectRetain_n();
      uint64_t v103 = sub_256B3F470();
      uint64_t v104 = sub_256B3F9F0();
      uint64_t v105 = v104;
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v106 = swift_slowAlloc();
        uint64_t v168 = v28;
        uint64_t v107 = v106;
        uint64_t v171 = swift_slowAlloc();
        uint64_t v175 = v171;
        *(_DWORD *)uint64_t v107 = 136315394;
        uint64_t v167 = v103;
        swift_bridgeObjectRetain();
        v173[0] = sub_256B3B598((uint64_t)v168, v29, &v175);
        sub_256B3FAA0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v107 + 12) = 2080;
        uint64_t v164 = (uint8_t *)(v107 + 14);
        ((void (*)(uint64_t *__return_ptr, uint64_t))v169[6])(v173, v102);
        LODWORD(v169) = v105;
        id v108 = v27;
        uint64_t v109 = v173[4];
        uint64_t v110 = v173[5];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v111 = v109;
        unsigned __int8 v27 = v108;
        v173[0] = sub_256B3B598(v111, v110, &v175);
        sub_256B3FAA0();
        swift_bridgeObjectRelease();
        ((void (*)(void *, uint64_t))v100[1])(v101, v166);
        uint64_t v103 = v167;
        _os_log_impl(&dword_256A36000, v167, (os_log_type_t)v169, "Failed to find asset named %s in asset set %s", (uint8_t *)v107, 0x16u);
        id v112 = v171;
        swift_arrayDestroy();
        MEMORY[0x25A2ABEE0](v112, -1, -1);
        uint64_t v113 = v107;
        os_log_type_t v28 = v168;
        MEMORY[0x25A2ABEE0](v113, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        ((void (*)(void *, uint64_t))v100[1])(v101, v102);
      }

      v173[0] = (uint64_t)v28;
      v173[1] = v29;
      sub_256B3F760();
      uint64_t v133 = v173[0];
      uint64_t v134 = v173[1];
      sub_256B10830();
      swift_allocError();
      *(void *)uint64_t v135 = v133;
      *(void *)(v135 + 8) = v134;
      *(unsigned char *)(v135 + 16) = 1;
      swift_willThrow();

      return;
    }
    uint64_t v165 = (void *)v29;
    uint64_t v167 = v27;
    uint64_t v168 = v28;
    uint64_t v35 = v70;
    goto LABEL_27;
  }
  unint64_t v30 = v169;
  if (qword_26B2B6478 != -1) {
    swift_once();
  }
  if (byte_26B2C4010 != 1)
  {
    uint64_t v35 = (id)sub_256B3F690();
    id v69 = [v27 assetNamed:v35];
    goto LABEL_20;
  }
  uint64_t v168 = v28;
  uint64_t v31 = v30[1];
  id v32 = a3;
  uint64_t v33 = v31;
  uint64_t v160 = *(void (**)(uint64_t, uint64_t))(v31 + 24);
  uint64_t v161 = (char *)(v31 + 24);
  v160(v32, v31);
  id v34 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  uint64_t v167 = v27;
  uint64_t v35 = [v27 assetNamed:v34];

  if (!v35)
  {
LABEL_24:
    os_log_type_t v28 = v168;
    uint64_t v77 = (void *)sub_256B3F690();
    unsigned __int8 v27 = v167;
    uint64_t v70 = [v167 assetNamed:v77];

    goto LABEL_25;
  }
  uint64_t v159 = v33;
  id v36 = objc_msgSend(v35, sel_metadata);
  uint64_t v37 = sub_256B3F5E0();

  unint64_t v38 = sub_256B3F6B0();
  unint64_t v40 = sub_256A3A70C(v38, v39, v37);
  unsigned __int8 v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_256B3F6B0();
  if (!v42)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (v40 == v43 && v42 == v44)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v159;
    goto LABEL_47;
  }
  uint64_t v46 = sub_256B3FEA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v159;
  if ((v46 & 1) == 0) {
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
LABEL_47:
  uint64_t v141 = v170;
  if (qword_26B2B62D0 != -1) {
    swift_once();
  }
  uint64_t v142 = sub_256B3F4A0();
  sub_256A46E9C(v142, (uint64_t)qword_26B2C3FF8);
  uint64_t v143 = v166;
  ((void (*)(char *, uint64_t, uint64_t))v141[2])(v15, v171, v166);
  uint64_t v144 = sub_256B3F470();
  uint64_t v145 = sub_256B3F9F0();
  uint64_t v146 = v145;
  if (os_log_type_enabled(v144, v145))
  {
    uint64_t v168 = v144;
    uint64_t v147 = (uint8_t *)swift_slowAlloc();
    uint64_t v165 = (void *)swift_slowAlloc();
    v173[0] = (uint64_t)v165;
    uint64_t v164 = v147;
    *(_DWORD *)uint64_t v147 = 136315138;
    v157[1] = v147 + 4;
    uint64_t v148 = v47;
    uint64_t v158 = v146;
    uint64_t v149 = (uint64_t (*)(uint64_t, uint64_t))v160;
    uint64_t v150 = ((uint64_t (*)(uint64_t, uint64_t))v160)(v143, v148);
    uint64_t v175 = sub_256B3B598(v150, v151, v173);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v141[1])(v15, v143);
    uint64_t v152 = v168;
    uint64_t v153 = v164;
    _os_log_impl(&dword_256A36000, v168, (os_log_type_t)v158, "Using asset from asset root for resource %s", v164, 0xCu);
    uint64_t v154 = v165;
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v154, -1, -1);
    MEMORY[0x25A2ABEE0](v153, -1, -1);

    uint64_t v155 = v159;
  }
  else
  {
    ((void (*)(char *, uint64_t))v141[1])(v15, v143);

    uint64_t v155 = v47;
    uint64_t v149 = (uint64_t (*)(uint64_t, uint64_t))v160;
  }
  uint64_t v168 = (os_log_t)v149(v143, v155);
  uint64_t v165 = v156;
  LODWORD(v164) = 0;
LABEL_27:
  os_log_type_t v78 = sub_256B3F300();
  int v79 = *(void *)(v78 - 8);
  BOOL v80 = *(void *)(v79 + 64);
  MEMORY[0x270FA5388](v78);
  uint64_t v81 = (v80 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v161 = (char *)v157 - v81;
  uint64_t v170 = v35;
  uint64_t v82 = objc_msgSend(v170, sel_location);
  id v83 = sub_256A39D2C(&qword_26B2B6340);
  uint64_t v84 = MEMORY[0x270FA5388](v83 - 8);
  unint64_t v86 = (v85 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v87 = (char *)v157 - v86;
  if (v82)
  {
    uint64_t v160 = (void (*)(uint64_t, uint64_t))v157;
    MEMORY[0x270FA5388](v84);
    sub_256B3F290();

    uint64_t v159 = v79;
    uint64_t v88 = *(NSObject **)(v79 + 32);
    ((void (*)(char *, char *, uint64_t))v88)(v87, (char *)v157 - v81, v78);
    sub_256A46F7C((uint64_t)v87, 0, 1, v78);
    if (sub_256A480C4((uint64_t)v87, 1, v78) != 1)
    {
      swift_bridgeObjectRelease();
      id v89 = v161;
      uint64_t v168 = v88;
      id v90 = ((uint64_t (*)(char *, char *, uint64_t))v88)(v161, v87, v78);
      uint64_t v165 = v157;
      MEMORY[0x270FA5388](v90);
      uint64_t v91 = (char *)v157 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v164)
      {
        v173[0] = (*(uint64_t (**)(uint64_t))(v169[1] + 24))(v166);
        v173[1] = v92;
        uint64_t v93 = sub_256B3F240();
        uint64_t v94 = *(void *)(v93 - 8);
        MEMORY[0x270FA5388](v93);
        uint64_t v96 = (char *)v157 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, void, uint64_t))(v94 + 104))(v96, *MEMORY[0x263F06E48], v93);
        sub_256A480EC();
        sub_256B3F2E0();
        (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v93);
        swift_bridgeObjectRelease();
        uint64_t v97 = v167;
        uint64_t v98 = v159;
      }
      else
      {
        uint64_t v98 = v159;
        (*(void (**)(char *, char *, uint64_t))(v159 + 16))((char *)v157 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0), v89, v78);
        uint64_t v97 = v167;
      }
      uint64_t v136 = v170;
      uint64_t v137 = objc_msgSend(v170, sel_metadata);
      uint64_t v138 = sub_256B3F5E0();

      (*(void (**)(char *, uint64_t))(v98 + 8))(v161, v78);
      uint64_t v139 = *(int *)(sub_256A39D2C(&qword_269F7CBF8) + 48);
      uint64_t v140 = v162;
      ((void (*)(uint64_t, char *, uint64_t))v168)(v162, v91, v78);
      *(void *)(v140 + v139) = v138;
      return;
    }
  }
  else
  {
    sub_256A46F7C((uint64_t)v157 - v86, 1, 1, v78);
  }
  sub_256B244BC((uint64_t)v87, &qword_26B2B6340);
  uint64_t v114 = (unint64_t)v165;
  if (qword_26B2B62D0 != -1) {
    swift_once();
  }
  unint64_t v115 = sub_256B3F4A0();
  sub_256A46E9C(v115, (uint64_t)qword_26B2C3FF8);
  swift_bridgeObjectRetain_n();
  uint64_t v116 = v170;
  unint64_t v117 = sub_256B3F470();
  uint64_t v118 = sub_256B3F9D0();
  unint64_t v119 = v118;
  uint64_t v120 = os_log_type_enabled(v117, v118);
  uint64_t v121 = v168;
  if (v120)
  {
    unint64_t v122 = swift_slowAlloc();
    LODWORD(v171) = v119;
    uint64_t v123 = v122;
    uint64_t v170 = (void *)swift_slowAlloc();
    v173[0] = (uint64_t)v170;
    *(_DWORD *)uint64_t v123 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v175 = sub_256B3B598((uint64_t)v121, v114, v173);
    uint64_t v169 = &v176;
    sub_256B3FAA0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v123 + 12) = 2080;
    uint64_t v166 = v123 + 14;
    uint64_t v124 = objc_msgSend(v116, sel_metadata);
    sub_256B3F5E0();

    uint64_t v125 = sub_256B3F5F0();
    uint64_t v127 = v126;
    swift_bridgeObjectRelease();
    uint64_t v175 = sub_256B3B598(v125, v127, v173);
    sub_256B3FAA0();

    uint64_t v121 = v168;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v117, (os_log_type_t)v171, "Asset %s does not have a location. Metadata: %s", (uint8_t *)v123, 0x16u);
    uint64_t v128 = v170;
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v128, -1, -1);
    MEMORY[0x25A2ABEE0](v123, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v129 = v167;
  v173[0] = 0;
  v173[1] = 0xE000000000000000;
  sub_256B3FB70();
  swift_bridgeObjectRelease();
  v173[0] = (uint64_t)v121;
  v173[1] = v114;
  sub_256B3F760();
  uint64_t v130 = v173[0];
  uint64_t v131 = v173[1];
  sub_256B10830();
  swift_allocError();
  *(void *)uint64_t v132 = v130;
  *(void *)(v132 + 8) = v131;
  *(unsigned char *)(v132 + 16) = 1;
  swift_willThrow();
}

uint64_t sub_256B213C0(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_name);
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_256B3F6B0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  if (a2[12])
  {
    unint64_t v9 = a2[15];
    unint64_t v8 = a2[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v8 = 0x8000000256B49480;
    sub_256B24AA8();
    unint64_t v9 = 0xD000000000000016;
  }
  swift_bridgeObjectRelease();
  sub_256B24A88();
  if (v7)
  {
    if (v5 == v9 && v7 == v8) {
      char v11 = 1;
    }
    else {
      char v11 = sub_256B3FEA0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 0;
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_256B214CC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(*a1, sel_name);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_256B3F6B0();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v16, a3, a4);
  uint64_t v11 = v16[4];
  uint64_t v12 = v16[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (v8 == v11 && v10 == v12) {
      char v14 = 1;
    }
    else {
      char v14 = sub_256B3FEA0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = 0;
  }
  swift_bridgeObjectRelease();
  return v14 & 1;
}

id sub_256B215E0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  sub_256A49E98(0, &qword_26B2B6328);
  id v6 = (void *)sub_256B3F850();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_initWithExplanation_target_attributes_, v5, a3, v6);

  return v7;
}

uint64_t sub_256B21688(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_256B21764;
  return v6(a1);
}

uint64_t sub_256B21764()
{
  sub_256A4A1FC();
  sub_256A49FD4();
  uint64_t v1 = *v0;
  sub_256A4A0C0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void *sub_256B2182C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_256A39D2C(qword_26B2B3700);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_256B21894(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_256B3F7D0();
    sub_256B24CD4(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x25A2AB010](15, a1 >> 16);
    sub_256B24CD4(v3);
    return v4 | 8;
  }
}

uint64_t sub_256B218F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_256A39D2C(&qword_26B2B6458);
  char v40 = a2;
  uint64_t v6 = sub_256B3FC90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * i);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_256B3FF40();
    sub_256B3F740();
    uint64_t result = sub_256B3FF70();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
        if (v33 != -1)
        {
          unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    id v34 = (void *)(*(void *)(v7 + 48) + 16 * v29);
    *id v34 = v22;
    v34[1] = v21;
    uint64_t v35 = (void *)(*(void *)(v7 + 56) + 16 * v29);
    *uint64_t v35 = v24;
    v35[1] = v25;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_41;
    }
    if (v16 >= v38)
    {
      swift_release();
      uint64_t v3 = v37;
      uint64_t v17 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    uint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v39 + 8 * v16);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v38) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v39 + 8 * v13);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v38)
  {
    unint64_t v18 = *(void *)(v39 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_42;
        }
        if (v13 >= v38) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v39 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v37;
LABEL_34:
  if (v40)
  {
    uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
    if (v36 >= 64) {
      sub_256B0A3CC(0, (unint64_t)(v36 + 63) >> 6, v17);
    }
    else {
      *uint64_t v17 = -1 << v36;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_256B21C00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *a1 = a4;
  a1[1] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

unsigned __int8 *sub_256B21C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_256B3F7F0();
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v14 = v6;
    uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  uint64_t v6 = sub_256B21FB0(v4, v5);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  unint64_t v7 = v11;
  if ((v11 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v8 = (unsigned __int8 *)sub_256B3FBE0();
  }
LABEL_7:
  uint64_t v12 = sub_256B21D34(v8, v9, a3);
  swift_bridgeObjectRelease();
  return v12;
}

unsigned __int8 *sub_256B21D34(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          int64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (unint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_256B21FB0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_256B2201C((uint64_t)sub_256B22018, 0, a1, a2);
  uint64_t v6 = sub_256B22050(v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_256B2201C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3;
  }
  uint64_t v5 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  return MEMORY[0x270F9D8F0](15, v5 | (v4 << 16));
}

uint64_t sub_256B22050(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_256B221A8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_256B2182C(v9, 0);
      unint64_t v12 = sub_256B222A8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_256B3FBE0();
LABEL_4:
        JUMPOUT(0x25A2AAFA0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A2AAFA0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A2AAFA0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_256B221A8(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_256B21894(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_256B21894(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_256B222A8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_256B21894(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_256B3F7C0();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_256B3FBE0();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_256B21894(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_256B3F790();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

id sub_256B224AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)sub_256B3F5D0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(a3, sel_retrieveAssetSet_usages_, a1, v5);

  return v6;
}

uint64_t sub_256B22530(void *a1)
{
  id v1 = objc_msgSend(a1, sel_assetSetId);
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = sub_256B3F6B0();

  return v3;
}

void sub_256B22594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = (id)sub_256B3F5D0();
  swift_bridgeObjectRelease();
  objc_msgSend(a5, sel_retrieveAssetSet_usages_queue_completion_, a1, v9, a3, a4);
}

uint64_t sub_256B22638@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_256B21C00(v7, *a1, a1[1], a1[2], a1[3]);
  uint64_t v4 = v7[0];
  uint64_t v5 = v7[1];
  *a2 = result;
  a2[1] = v6;
  a2[2] = v4;
  a2[3] = v5;
  return result;
}

uint64_t sub_256B2267C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t type metadata accessor for RunningBoardAssertedAssetSets()
{
  return self;
}

void sub_256B226DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_256B2009C(a1, v2[5], v2[2], v2[4], a2);
}

unint64_t sub_256B226FC()
{
  unint64_t result = qword_269F7CC18;
  if (!qword_269F7CC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC18);
  }
  return result;
}

unint64_t sub_256B22748()
{
  unint64_t result = qword_269F7CC20;
  if (!qword_269F7CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC20);
  }
  return result;
}

unint64_t sub_256B22794()
{
  unint64_t result = qword_269F7CC28;
  if (!qword_269F7CC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC28);
  }
  return result;
}

void sub_256B227E0(uint64_t a1, const void *a2)
{
  memcpy(__dst, a2, sizeof(__dst));
  sub_256B1F10C();
}

void sub_256B2284C(uint64_t a1, const void *a2)
{
  memcpy(__dst, a2, sizeof(__dst));
  sub_256B1F10C();
}

uint64_t sub_256B228B8(void **a1, const void *a2)
{
  unint64_t v2 = *a1;
  memcpy(__dst, a2, sizeof(__dst));
  return sub_256B213C0(v2, __dst) & 1;
}

uint64_t type metadata accessor for CatalogAsset()
{
  return swift_getGenericMetadata();
}

uint64_t sub_256B22920(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_256B22928(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_256B22930(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_256B22970()
{
  unint64_t result = qword_269F7CC60;
  if (!qword_269F7CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC60);
  }
  return result;
}

unint64_t sub_256B229C0()
{
  unint64_t result = qword_26B2B51A8;
  if (!qword_26B2B51A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2B51A8);
  }
  return result;
}

uint64_t sub_256B22A10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_256A9A1B8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

void type metadata accessor for CatalogErrors.AssetErrors()
{
}

uint64_t dispatch thunk of AssetContents.baseURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetContents.metadataURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AssetContents.init(baseURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void type metadata accessor for AssetLock()
{
}

uint64_t dispatch thunk of CatalogAssetProtocol.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.reportedDownloadSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.specificationVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.contents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.displayVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.mobileAssetMetadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.init(specificationVersion:metadata:contents:mobileAssetMetadata:assetLock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 104))();
}

uint64_t dispatch thunk of CatalogAssetProtocol.init(specificationVersion:contents:mobileAssetMetadata:assetLock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

uint64_t sub_256B22B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_256B22B80()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_256B22C50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 48) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    uint64_t v11 = a2[1];
    *uint64_t v3 = *a2;
    v3[1] = v11;
    unint64_t v12 = (void *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v12 = *v13;
    unint64_t v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
    long long v16 = *(_OWORD *)v15;
    *(void *)(v14 + 16) = *(void *)(v15 + 16);
    *(_OWORD *)unint64_t v14 = v16;
    uint64_t v17 = (v14 + v6 + 24) & ~v6;
    uint64_t v18 = (v15 + v6 + 24) & ~v6;
    char v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v19(v17, v18, v4);
    unsigned int v20 = (void *)((v7 + v17) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)((v7 + v18) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v20 = *v21;
    *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_256B22DD8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_256B22E84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  unint64_t v7 = ((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = ((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = v9;
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  uint64_t v12 = *(void *)(v10 - 8) + 16;
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v14 = (v13 + 24 + v7) & ~v13;
  uint64_t v15 = (v13 + 24 + v8) & ~v13;
  swift_bridgeObjectRetain();
  v11(v14, v15, v10);
  uint64_t v16 = *(void *)(v12 + 48) + 7;
  uint64_t v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_256B22F80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v6;
  unint64_t v8 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v9 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v8 + v12 + 24) & ~v12;
  uint64_t v14 = ((unint64_t)v9 + v12 + 24) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 40) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v15 + v14;
  unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v16 = *(void *)(v17 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v18 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_256B230A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  unint64_t v6 = ((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v8 = *(_OWORD *)v7;
  *(void *)(v6 + 16) = *(void *)(v7 + 16);
  *(_OWORD *)unint64_t v6 = v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 + 24 + v6) & ~v11;
  uint64_t v13 = (v11 + 24 + v7) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 32) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_256B23188(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  unint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v8 = *v7;
  uint64_t v9 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v9 + v13 + 24) & ~v13;
  uint64_t v15 = ((unint64_t)v10 + v13 + 24) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 24) + 7;
  uint64_t v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_256B23290(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 48) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *(unsigned __int8 *)(a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)(a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x256B233F0);
      case 4:
        int v15 = *(_DWORD *)(a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *(_DWORD *)a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v6 & 0x80000000) != 0) {
    return sub_256A480C4((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 24) & ~v7, v6, v4);
  }
  unint64_t v18 = *(void *)(a1 + 8);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_256B23404(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v16 = a2 - v9;
    }
    else {
      int v16 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v17 = ~v9 + a2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x256B235FCLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v18 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 24) & ~v10;
          sub_256A46F7C(v18, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

unsigned char *storeEnumTagSinglePayload for AssetSubscriptionStatusPendingReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256B236F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for AssetSubscriptionStatusPendingReason()
{
}

uint64_t getEnumTagSinglePayload for AssetSubscriptionStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8)
  {
    unsigned int v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 8;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x256B237D4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 4) {
    unsigned int v8 = v7 - 3;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 6) {
    return v8 - 5;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AssetSubscriptionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF8) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v7 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x256B238BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_256B238E4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_256B238F8(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 3;
  }
  return result;
}

void type metadata accessor for AssetSubscriptionStatus()
{
}

uint64_t initializeWithCopy for AssetSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetSubscription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for AssetSubscription(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssetSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetSubscription(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetSubscription()
{
}

uint64_t dispatch thunk of AssetBackedResource.fetchAsset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AssetBackedResource.fetchLockedAsset(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AssetBackedResource.subscription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t _s11AssetErrorsO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s11AssetErrorsO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256B23CDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11AssetErrorsO10CodingKeysOMa()
{
  return &_s11AssetErrorsO10CodingKeysON;
}

ValueMetadata *_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysOMa()
{
  return &_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysON;
}

unsigned char *_s11AssetErrorsO34FailedToRetrieveAssetSetCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x256B23DC8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11AssetErrorsO27FailedToFindAssetCodingKeysOMa()
{
  return &_s11AssetErrorsO27FailedToFindAssetCodingKeysON;
}

unint64_t sub_256B23E04()
{
  unint64_t result = qword_269F7CC68;
  if (!qword_269F7CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC68);
  }
  return result;
}

unint64_t sub_256B23E54()
{
  unint64_t result = qword_269F7CC70;
  if (!qword_269F7CC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC70);
  }
  return result;
}

unint64_t sub_256B23EA4()
{
  unint64_t result = qword_269F7CC78;
  if (!qword_269F7CC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC78);
  }
  return result;
}

unint64_t sub_256B23EF4()
{
  unint64_t result = qword_269F7CC80;
  if (!qword_269F7CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC80);
  }
  return result;
}

unint64_t sub_256B23F44()
{
  unint64_t result = qword_269F7CC88;
  if (!qword_269F7CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC88);
  }
  return result;
}

unint64_t sub_256B23F94()
{
  unint64_t result = qword_269F7CC90;
  if (!qword_269F7CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC90);
  }
  return result;
}

unint64_t sub_256B23FE4()
{
  unint64_t result = qword_269F7CC98;
  if (!qword_269F7CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CC98);
  }
  return result;
}

unint64_t sub_256B24034()
{
  unint64_t result = qword_269F7CCA0;
  if (!qword_269F7CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CCA0);
  }
  return result;
}

unint64_t sub_256B24084()
{
  unint64_t result = qword_269F7CCA8;
  if (!qword_269F7CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269F7CCA8);
  }
  return result;
}

uint64_t sub_256B240D0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_256B24118(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unsigned int v8 = v2;
  v8[1] = sub_256B241D8;
  return sub_256B1AEE4(a1, v4, v5, v7, v6);
}

uint64_t sub_256B241D8()
{
  sub_256A4A1FC();
  sub_256A49FD4();
  uint64_t v1 = *v0;
  sub_256A4A0C0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_256A4AAB4();
  return v3();
}

uint64_t sub_256B24298()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256B242D0()
{
  sub_256A4A41C();
  uint64_t v3 = v2;
  uint64_t v4 = *(int **)(v0 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_256B241D8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F7CCC0 + dword_269F7CCC0);
  return v6(v3, v4);
}

void sub_256B24384(uint64_t a1)
{
  sub_256B1B2B4(a1, *(void **)(v1 + 16));
}

uint64_t sub_256B2438C()
{
  sub_256A39D2C(qword_26B2B60D0);
  sub_256A6E624();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_256A9FDB0();
  v5();

  return MEMORY[0x270FA0238](v0, v3, v4);
}

uint64_t sub_256B24414()
{
  sub_256A39D2C(qword_26B2B60D0);

  return sub_256B1B460();
}

uint64_t sub_256B24488(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_256B24498()
{
  return swift_release();
}

void sub_256B244A0(uint64_t a1)
{
  sub_256B227E0(a1, *(const void **)(v1 + 16));
}

uint64_t sub_256B244BC(uint64_t a1, uint64_t *a2)
{
  sub_256A39D2C(a2);
  sub_256A6E624();
  sub_256A9FDB0();
  v3();
  return a1;
}

void sub_256B24524(uint64_t a1)
{
  sub_256B2284C(a1, *(const void **)(v1 + 16));
}

uint64_t sub_256B24540(void **a1)
{
  return sub_256B228B8(a1, *(const void **)(v1 + 16)) & 1;
}

uint64_t sub_256B2458C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_256A6E624();
  uint64_t v4 = sub_256A4A370();
  v5(v4);
  return a2;
}

uint64_t sub_256B245E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_256A6E624();
  sub_256A9FDB0();
  v3();
  return a1;
}

uint64_t sub_256B2463C()
{
  sub_256B24E78();
  sub_256B24AF4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_256B24C58(v1, v2, v3, v4, v5, v6, v7, v8, v12, v13, v14, v15, v16);
  sub_256A54690(v9, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_256B246EC()
{
  sub_256B24E78();
  sub_256B24AF4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = swift_bridgeObjectRelease();
  uint64_t v9 = sub_256B24C58(v1, v2, v3, v4, v5, v6, v7, v8, v12, v13, v14, v15, v16);
  sub_256A54744(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_256B247A4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_256B247DC(uint64_t a1)
{
  sub_256B1CEDC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_256B247EC()
{
  uint64_t v1 = sub_256A39D2C(&qword_26B2B51B8);
  sub_256A9FC2C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v9 + 8, v8);
}

void sub_256B248C8(void *a1)
{
  uint64_t v3 = *(void *)(sub_256A39D2C(&qword_26B2B51B8) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);

  sub_256B1D150(a1, v6, v1 + v4, v7, v8);
}

uint64_t sub_256B2497C(id *a1)
{
  return sub_256B214CC(a1, v1[5], v1[2], v1[3]) & 1;
}

uint64_t sub_256B249AC(void **a1)
{
  return sub_256B24540(a1) & 1;
}

void *sub_256B249C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, v10, 0xB8uLL);
}

void *sub_256B249F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, v10, 0xB8uLL);
}

uint64_t sub_256B24A14()
{
  return v0;
}

uint64_t sub_256B24A28(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  return sub_256B11878(a1, a2, a3, a4);
}

uint64_t sub_256B24A88()
{
  return swift_bridgeObjectRelease();
}

void sub_256B24ABC()
{
  sub_256A47878();
}

uint64_t sub_256B24B40()
{
  return sub_256A3A70C(0x7265567465737341, 0xEC0000006E6F6973, v0);
}

uint64_t sub_256B24B94()
{
  return v0;
}

void *sub_256B24BDC(uint64_t a1, uint64_t a2)
{
  sub_256A46E9C(a1, a2);
  return memcpy((void *)(v2 + 120), (const void *)(v2 + 304), 0xB8uLL);
}

uint64_t sub_256B24C3C()
{
  return 0x7361206F6E202D20;
}

uint64_t sub_256B24C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

void sub_256B24C74(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_256B24C84@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  return a2 + ((a1 & 1) == 0);
}

uint64_t sub_256B24CB0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 1;
  return swift_willThrow();
}

unint64_t sub_256B24CD4(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_256B24D2C()
{
  return v0;
}

uint64_t sub_256B24D44()
{
  return v0;
}

uint64_t sub_256B24D70()
{
  return swift_arrayDestroy();
}

uint64_t sub_256B24E20()
{
  return swift_task_alloc();
}

uint64_t sub_256B24E38()
{
  return swift_dynamicCast();
}

id sub_256B24E58(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 3591), a1);
}

uint64_t sub_256B24E8C()
{
  return v0;
}

uint64_t sub_256B24EA0()
{
  return v0;
}

uint64_t sub_256B24EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return a15;
}

uint64_t sub_256B24EC8()
{
  uint64_t result = sub_256B24EE8();
  qword_269FC2120 = result;
  return result;
}

uint64_t sub_256B24EE8()
{
  sub_256A39D2C(&qword_26B2B5C10);
  sub_256A39D2C(&qword_269F7CCD0);
  sub_256B26614();
  uint64_t v0 = sub_256B3F600();
  char v1 = sub_256B109B4();
  uint64_t v2 = v1[2];
  if (v2)
  {
    uint64_t v3 = 0;
    while (2)
    {
      uint64_t v4 = *((unsigned __int8 *)v1 + v3++ + 32);
      switch(v4)
      {
        case 1:
          static Catalog.Resource.LLM.ServerConfiguration.InstructServerBase()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v131 = v0;
          unint64_t v58 = 0xD00000000000002DLL;
          uint64_t v59 = "guage.instruct_3b.base";
          unint64_t v60 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v61 & 1) == 0)) {
            goto LABEL_110;
          }
          goto LABEL_197;
        case 2:
          static Catalog.Resource.LLM.ServerConfiguration.OpenEndedSchema()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v130 = v0;
          unint64_t v5 = "ded_schema.draft";
          unint64_t v41 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v42 & 1) == 0)) {
            goto LABEL_126;
          }
          goto LABEL_191;
        case 3:
          static Catalog.Resource.LLM.ServerConfiguration.OpenEndedTone()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "erver_v1.open_ended_tone.draft";
          unint64_t v43 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v44 & 1) == 0)) {
            goto LABEL_192;
          }
          unint64_t v8 = v43;
          char v45 = v44;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_56;
          }
          unint64_t v46 = sub_256A39F48();
          if ((v45 & 1) != (v47 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v46;
LABEL_56:
          if (v45) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000038;
          goto LABEL_174;
        case 4:
          static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneBase()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "e.generate_v1.base_with_draft";
          unint64_t v24 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v25 & 1) == 0)) {
            goto LABEL_188;
          }
          unint64_t v8 = v24;
          char v26 = v25;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_35;
          }
          unint64_t v27 = sub_256A39F48();
          if ((v26 & 1) != (v28 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v27;
LABEL_35:
          if (v26) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000003DLL;
          goto LABEL_174;
        case 5:
          static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneQueryResponse()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v128 = v0;
          unint64_t v5 = "ded_tone_query_response.draft";
          unint64_t v15 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v16 & 1) == 0)) {
            goto LABEL_80;
          }
          goto LABEL_198;
        case 6:
          static Catalog.Resource.LLM.ServerConfiguration.OpenEndedToneV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "erver_v1.open_ended_tone_base";
          unint64_t v65 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v66 & 1) == 0)) {
            goto LABEL_199;
          }
          unint64_t v8 = v65;
          char v67 = v66;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_89;
          }
          unint64_t v68 = sub_256A39F48();
          if ((v67 & 1) != (v69 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v68;
LABEL_89:
          if (v67) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000003BLL;
          goto LABEL_174;
        case 7:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCuration()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v128 = v0;
          unint64_t v5 = "memories_asset_curation.draft";
          unint64_t v15 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v16 & 1) == 0)) {
            goto LABEL_80;
          }
          goto LABEL_193;
        case 8:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationAssetCurationV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "uration_v2.draft";
          unint64_t v70 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v71 & 1) == 0)) {
            goto LABEL_200;
          }
          unint64_t v8 = v70;
          char v72 = v71;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_95;
          }
          unint64_t v73 = sub_256A39F48();
          if ((v72 & 1) != (v74 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v73;
LABEL_95:
          if (v72) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000004ALL;
          goto LABEL_174;
        case 9:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationBase()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v29 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v30 & 1) == 0)) {
            goto LABEL_189;
          }
          unint64_t v31 = v29;
          char v32 = v30;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_41;
          }
          unint64_t v33 = sub_256A39F48();
          if ((v32 & 1) != (v34 & 1)) {
            goto LABEL_216;
          }
          unint64_t v31 = v33;
LABEL_41:
          if (v32)
          {
            uint64_t v35 = *(void *)(v0 + 56) + 40 * v31;
            goto LABEL_115;
          }
          unint64_t v122 = 0x8000000256B40C10;
          unint64_t v123 = v31;
          uint64_t v124 = 0xD000000000000033;
          goto LABEL_180;
        case 10:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraits()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "memories_global_traits.draft";
          unint64_t v75 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v76 & 1) == 0)) {
            goto LABEL_201;
          }
          unint64_t v8 = v75;
          char v77 = v76;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_101;
          }
          unint64_t v78 = sub_256A39F48();
          if ((v77 & 1) != (v79 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v78;
LABEL_101:
          if (v77) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000046;
          goto LABEL_174;
        case 11:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationGlobalTraitsV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "memories_global_traits_v2.draft";
          unint64_t v19 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v20 & 1) == 0)) {
            goto LABEL_187;
          }
          unint64_t v8 = v19;
          char v21 = v20;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v22 = sub_256A39F48();
          if ((v21 & 1) != (v23 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v22;
LABEL_29:
          if (v21) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000049;
          goto LABEL_174;
        case 12:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstanding()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "nderstanding.draft";
          unint64_t v36 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v37 & 1) == 0)) {
            goto LABEL_190;
          }
          unint64_t v8 = v36;
          char v38 = v37;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_47;
          }
          unint64_t v39 = sub_256A39F48();
          if ((v38 & 1) != (v40 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v39;
LABEL_47:
          if (v38) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000004CLL;
          goto LABEL_174;
        case 13:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v129 = v0;
          unint64_t v5 = "nderstanding_v2.draft";
          unint64_t v17 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v18 & 1) == 0)) {
            goto LABEL_104;
          }
          goto LABEL_202;
        case 14:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationQueryUnderstandingV3()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v129 = v0;
          unint64_t v5 = "nderstanding_v3.draft";
          unint64_t v17 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v18 & 1) == 0)) {
            goto LABEL_186;
          }
LABEL_104:
          unint64_t v8 = v17;
          char v80 = v18;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_107;
          }
          unint64_t v81 = sub_256A39F48();
          if ((v80 & 1) != (v82 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v81;
LABEL_107:
          uint64_t v0 = v129;
          if (v80) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000004FLL;
          goto LABEL_174;
        case 15:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStoryteller()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "memories_storyteller.draft";
          unint64_t v48 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v49 & 1) == 0)) {
            goto LABEL_194;
          }
          unint64_t v8 = v48;
          char v50 = v49;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_65;
          }
          unint64_t v51 = sub_256A39F48();
          if ((v50 & 1) != (v52 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v51;
LABEL_65:
          if (v50) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000044;
          goto LABEL_174;
        case 16:
          static Catalog.Resource.LLM.ServerConfiguration.PhotosMemoriesCreationStorytellerV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v128 = v0;
          unint64_t v5 = "memories_storyteller_v2.draft";
          unint64_t v15 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v16 & 1) == 0)) {
            goto LABEL_185;
          }
LABEL_80:
          unint64_t v8 = v15;
          char v62 = v16;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_83;
          }
          unint64_t v63 = sub_256A39F48();
          if ((v62 & 1) != (v64 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v63;
LABEL_83:
          uint64_t v0 = v128;
          if (v62) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000047;
          goto LABEL_174;
        case 17:
          static Catalog.Resource.LLM.ServerConfiguration.Planner()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v131 = v0;
          unint64_t v58 = 0xD000000000000030;
          uint64_t v59 = "erver_v1.planner.draft";
          unint64_t v60 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v61 & 1) == 0)) {
            goto LABEL_203;
          }
LABEL_110:
          unint64_t v83 = v60;
          char v84 = v61;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_113;
          }
          unint64_t v85 = sub_256A39F48();
          if ((v84 & 1) != (v86 & 1)) {
            goto LABEL_216;
          }
          unint64_t v83 = v85;
LABEL_113:
          uint64_t v0 = v131;
          if (v84)
          {
            uint64_t v35 = *(void *)(v131 + 56) + 40 * v83;
LABEL_115:
            sub_256A39DB4(v35);
            sub_256A3A540(v136, v35);
          }
          else
          {
            unint64_t v122 = (unint64_t)v59 | 0x8000000000000000;
            unint64_t v123 = v83;
            uint64_t v124 = v58;
LABEL_180:
            sub_256A47BA4(v123, v124, v122, v136, v0);
          }
          goto LABEL_176;
        case 18:
          static Catalog.Resource.LLM.ServerConfiguration.PlannerV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v132 = v0;
          uint64_t v87 = "erver_v1.planner_v2.draft";
          unint64_t v88 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v89 & 1) == 0)) {
            goto LABEL_147;
          }
          goto LABEL_204;
        case 19:
          static Catalog.Resource.LLM.ServerConfiguration.PlannerV3()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v132 = v0;
          uint64_t v87 = "erver_v1.planner_v3.draft";
          unint64_t v88 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v89 & 1) == 0)) {
            goto LABEL_211;
          }
LABEL_147:
          unint64_t v8 = v88;
          char v103 = v89;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_150;
          }
          unint64_t v104 = sub_256A39F48();
          if ((v103 & 1) != (v105 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v104;
LABEL_150:
          uint64_t v0 = v132;
          if (v103) {
            goto LABEL_172;
          }
          unint64_t v106 = (unint64_t)v87 | 0x8000000000000000;
          unint64_t v107 = v8;
          uint64_t v12 = 0xD000000000000033;
          goto LABEL_175;
        case 20:
          static Catalog.Resource.LLM.ServerConfiguration.ResponseGeneration()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v133 = v0;
          unint64_t v5 = "e_generation.draft";
          unint64_t v90 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v91 & 1) == 0)) {
            goto LABEL_135;
          }
          goto LABEL_205;
        case 21:
          static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV2()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v134 = v0;
          unint64_t v5 = "e_generation_v2.draft";
          unint64_t v92 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v93 & 1) == 0)) {
            goto LABEL_141;
          }
          goto LABEL_206;
        case 22:
          static Catalog.Resource.LLM.ServerConfiguration.ResponseGenerationV3()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v134 = v0;
          unint64_t v5 = "e_generation_v3.draft";
          unint64_t v92 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v93 & 1) == 0)) {
            goto LABEL_210;
          }
LABEL_141:
          unint64_t v8 = v92;
          char v100 = v93;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_144;
          }
          unint64_t v101 = sub_256A39F48();
          if ((v100 & 1) != (v102 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v101;
LABEL_144:
          uint64_t v0 = v134;
          if (v100) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000003FLL;
          goto LABEL_174;
        case 23:
          static Catalog.Resource.LLM.ServerConfiguration.SearchQueryUnderstandingServer()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v135 = v0;
          unint64_t v5 = "query_understanding.draft";
          unint64_t v108 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v109 & 1) == 0)) {
            goto LABEL_156;
          }
          goto LABEL_212;
        case 24:
          static Catalog.Resource.LLM.ServerConfiguration.ServerBulletsTransform()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v130 = v0;
          unint64_t v5 = "_transform.draft";
          unint64_t v41 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v42 & 1) == 0)) {
            goto LABEL_126;
          }
          goto LABEL_195;
        case 25:
          static Catalog.Resource.LLM.ServerConfiguration.ServerConciseTone()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "erver_v1.concise_tone.draft";
          unint64_t v53 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v54 & 1) == 0)) {
            goto LABEL_196;
          }
          unint64_t v8 = v53;
          char v55 = v54;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_74;
          }
          unint64_t v56 = sub_256A39F48();
          if ((v55 & 1) != (v57 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v56;
LABEL_74:
          if (v55) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000035;
          goto LABEL_174;
        case 26:
          static Catalog.Resource.LLM.ServerConfiguration.ServerFriendlyTone()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v127 = v0;
          unint64_t v5 = "erver_v1.friendly_tone.draft";
          unint64_t v13 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v14 & 1) == 0)) {
            goto LABEL_168;
          }
          goto LABEL_215;
        case 27:
          static Catalog.Resource.LLM.ServerConfiguration.ServerMagicRewrite()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v127 = v0;
          unint64_t v5 = "erver_v1.magic_rewrite.draft";
          unint64_t v13 = sub_256A39F48();
          if (!__OFADD__(*(void *)(v0 + 16), (v14 & 1) == 0)) {
            goto LABEL_168;
          }
          goto LABEL_184;
        case 28:
          static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormBasic()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v135 = v0;
          unint64_t v5 = "ply_long_form_basic.draft";
          unint64_t v108 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v109 & 1) == 0)) {
            goto LABEL_213;
          }
LABEL_156:
          unint64_t v8 = v108;
          char v110 = v109;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_159;
          }
          unint64_t v111 = sub_256A39F48();
          if ((v110 & 1) != (v112 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v111;
LABEL_159:
          uint64_t v0 = v135;
          if (v110) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000043;
          goto LABEL_174;
        case 29:
          static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyLongFormRewrite()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "ply_long_form_rewrite.draft";
          unint64_t v113 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v114 & 1) == 0)) {
            goto LABEL_214;
          }
          unint64_t v8 = v113;
          char v115 = v114;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_165;
          }
          unint64_t v116 = sub_256A39F48();
          if ((v115 & 1) != (v117 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v116;
LABEL_165:
          if (v115) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000045;
          goto LABEL_174;
        case 30:
          static Catalog.Resource.LLM.ServerConfiguration.ServerMailReplyQA()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v127 = v0;
          unint64_t v5 = "erver_v1.mail_reply_qa.draft";
          unint64_t v13 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v14 & 1) == 0)) {
            goto LABEL_208;
          }
LABEL_168:
          unint64_t v8 = v13;
          char v118 = v14;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_171;
          }
          unint64_t v119 = sub_256A39F48();
          if ((v118 & 1) != (v120 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v119;
LABEL_171:
          uint64_t v0 = v127;
          if (v118) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD000000000000036;
          goto LABEL_174;
        case 31:
          static Catalog.Resource.LLM.ServerConfiguration.ServerProfessionalTone()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v130 = v0;
          unint64_t v5 = "ional_tone.draft";
          unint64_t v41 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v42 & 1) == 0)) {
            goto LABEL_207;
          }
LABEL_126:
          unint64_t v8 = v41;
          char v94 = v42;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_129;
          }
          unint64_t v95 = sub_256A39F48();
          if ((v94 & 1) != (v96 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v95;
LABEL_129:
          uint64_t v0 = v130;
          if (v94) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000003ALL;
          goto LABEL_174;
        case 32:
          static Catalog.Resource.LLM.ServerConfiguration.ServerProofreadingReview()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v133 = v0;
          unint64_t v5 = "ading_review.draft";
          unint64_t v90 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v91 & 1) == 0)) {
            goto LABEL_209;
          }
LABEL_135:
          unint64_t v8 = v90;
          char v97 = v91;
          sub_256A39D2C(&qword_269F78CF8);
          if ((sub_256B3FC00() & 1) == 0) {
            goto LABEL_138;
          }
          unint64_t v98 = sub_256A39F48();
          if ((v97 & 1) != (v99 & 1)) {
            goto LABEL_216;
          }
          unint64_t v8 = v98;
LABEL_138:
          uint64_t v0 = v133;
          if (v97) {
            goto LABEL_172;
          }
          uint64_t v12 = 0xD00000000000003CLL;
          goto LABEL_174;
        case 33:
          static Catalog.Resource.LLM.ServerConfiguration.ServerTablesTransform()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v126 = v0;
          goto LABEL_24;
        case 34:
          static Catalog.Resource.LLM.ServerConfiguration.ServerTakeawaysTransform()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v126 = v0;
          goto LABEL_24;
        case 35:
          static Catalog.Resource.LLM.ServerConfiguration.ServerTextSummarizer()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v126 = v0;
          goto LABEL_24;
        case 36:
          static Catalog.Resource.LLM.ServerConfiguration.SummarizationTextSummarizerAjaxBase()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v126 = v0;
          goto LABEL_24;
        case 37:
          static Catalog.Resource.LLM.ServerConfiguration.VisualIntelligence()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v126 = v0;
LABEL_24:
          sub_256A47A98();
          uint64_t v0 = v126;
          goto LABEL_176;
        default:
          static Catalog.Resource.LLM.ServerConfiguration.AnswerSynthesisServer()();
          sub_256A3A540(v137, (uint64_t)v136);
          swift_isUniquelyReferenced_nonNull_native();
          unint64_t v5 = "erver_v1.answer_synthesis.draft";
          unint64_t v6 = sub_256A39F48();
          if (__OFADD__(*(void *)(v0 + 16), (v7 & 1) == 0))
          {
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            sub_256B3FEF0();
            __break(1u);
            JUMPOUT(0x256B264A4);
          }
          unint64_t v8 = v6;
          char v9 = v7;
          sub_256A39D2C(&qword_269F78CF8);
          if (sub_256B3FC00())
          {
            unint64_t v10 = sub_256A39F48();
            if ((v9 & 1) != (v11 & 1)) {
              goto LABEL_216;
            }
            unint64_t v8 = v10;
          }
          if (v9)
          {
LABEL_172:
            uint64_t v121 = *(void *)(v0 + 56) + 40 * v8;
            sub_256A39DB4(v121);
            sub_256A3A540(v136, v121);
          }
          else
          {
            uint64_t v12 = 0xD000000000000039;
LABEL_174:
            unint64_t v106 = (unint64_t)v5 | 0x8000000000000000;
            unint64_t v107 = v8;
LABEL_175:
            sub_256A47BA4(v107, v12, v106, v136, v0);
          }
LABEL_176:
          swift_bridgeObjectRelease();
          if (v2 == v3) {
            break;
          }
          continue;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v0;
}

void ResourceBundleIdentifier<>.serverConfiguration()(uint64_t a1@<X8>)
{
  if (qword_269F78A98 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269FC2120;
  if (*(void *)(qword_269FC2120 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_256A39F48();
    if (v4)
    {
      sub_256A39E54(*(void *)(v2 + 56) + 40 * v3, a1);
    }
    else
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

unint64_t sub_256B26614()
{
  unint64_t result = qword_269F79928;
  if (!qword_269F79928)
  {
    sub_256A49664(&qword_26B2B5C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F79928);
  }
  return result;
}

uint64_t XPCServiceClientConnection.__allocating_init(delegate:)()
{
  sub_256A4A3C8();
  sub_256B3EF18();
  uint64_t v0 = swift_allocObject();
  sub_256B3F124();
  XPCServiceClientConnection.init(delegate:)();
  return v0;
}

void sub_256B266B0()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256B371E0;
      char v110 = &unk_2706041B0;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D180;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "requesting status information for: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = sub_256A49A74;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = (void (*)(uint64_t, void *))sub_256B340C8;
      char v110 = &unk_2706041D8;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_resourceStatusWithIdentifier_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      unint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      uint64_t v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    char v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      unint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    unint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B27264()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256B371E0;
      char v110 = &unk_270604138;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "requesting resource information for: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = sub_256A49FB0;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = (void (*)(uint64_t, void *))sub_256B340C8;
      char v110 = &unk_270604188;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_resourceInformationWithIdentifier_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      unint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      uint64_t v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    char v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      unint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    unint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B27E18()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256B371E0;
      char v110 = &unk_270616998;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "requesting resources for: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = (id (*)(void *))sub_256B3D460;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256A3E8D0;
      char v110 = &unk_270616A10;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_requestResourcesWithRequestKey_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      unint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      uint64_t v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    char v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      unint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    unint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B289CC()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256B371E0;
      char v110 = &unk_270604598;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "releasing resource for: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = (id (*)(void *))sub_256B3D460;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256A3E8D0;
      char v110 = &unk_2706045C0;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_releaseResourcesWithRequestKey_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      unint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      uint64_t v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    char v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      unint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    unint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B29580()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256B371E0;
      char v110 = &unk_270604548;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "requesting resource for: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = (id (*)(void *))sub_256B3D460;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256A3E8D0;
      char v110 = &unk_270604570;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_requestResourceWithIdentifier_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      unint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      uint64_t v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    char v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      unint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    unint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B2A134()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256B371E0;
      char v110 = &unk_2706044F8;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "releasing resource for: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = (id (*)(void *))sub_256B3D460;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      char v109 = sub_256A3E8D0;
      char v110 = &unk_270604520;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_releaseResourceWithIdentifier_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      unint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      uint64_t v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    char v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      unint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    unint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B2ACE8()
{
  sub_256B3D884();
  unint64_t v111 = v5;
  uint64_t v116 = sub_256B3E458();
  sub_256A49FB8();
  uint64_t v114 = v6;
  MEMORY[0x270FA5388](v7);
  sub_256B3ECF0();
  MEMORY[0x270FA5388](v8);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v9);
  sub_256B3F0F8();
  MEMORY[0x270FA5388](v10);
  sub_256B3D950();
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)v106 - v12;
  sub_256B3E39C();
  sub_256B34D64();
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3E5FC();
  if (!v15)
  {
    sub_256A4993C();
    sub_256A6E4C0();
    *os_log_type_t v52 = 0;
    swift_willThrow();
LABEL_2:
    os_unfair_lock_unlock(v2);
    char v14 = (void **)v126;
LABEL_3:

    goto LABEL_4;
  }
  v106[1] = 0;
  id v109 = v15;
  os_unfair_lock_unlock(v2);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (!v16)
  {
    sub_256B3E9BC();
    v17.n128_u64[0] = 138412290;
    sub_256B3E7B0(v17);
    *(void *)&long long v19 = 136315650;
    long long v107 = v19;
    v106[5] = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      uint64_t v128 = v18;
      uint64_t v20 = sub_256B3D7DC();
      uint64_t v21 = sub_256B3ED78(v20);
      uint64_t v125 = sub_256B37490;
      v126[0] = v21;
      v122[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      unint64_t v123 = sub_256B371E0;
      uint64_t v124 = &unk_270604340;
      _Block_copy(v122);
      sub_256B3EEDC();
      swift_release();
      uint64_t v22 = (uint64_t *)objc_msgSend(v109, sel_synchronousRemoteObjectProxyWithErrorHandler_, v0);
      _Block_release(v0);
      uint64_t v23 = sub_256B3D7DC();
      sub_256B3E798(v23);
      uint64_t v24 = sub_256B3D7DC();
      sub_256B3E44C(v24);
      uint64_t v25 = sub_256B3DCF0();
      *(void *)(v25 + 16) = v0;
      *(void *)(v25 + 24) = v3;
      uint64_t v26 = sub_256B3DCF0();
      *(void *)(v26 + 16) = sub_256B3D45C;
      *(void *)(v26 + 24) = v25;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EBC4();
      sub_256A46E9C(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = v111;
      char v4 = v111;
      os_log_type_t v30 = (void *)sub_256B3F470();
      os_log_type_t v31 = sub_256B3F9F0();
      if (sub_256B3E124(v31))
      {
        sub_256A4A734();
        uint64_t v32 = (void *)sub_256B3D808();
        sub_256B3EA98(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "sideloading resource container: %@");
        sub_256A39D2C(&qword_26B2B60C8);
        swift_arrayDestroy();
        char v4 = v22;
        uint64_t v22 = v29;
        unint64_t v3 = v108;
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        os_log_type_t v30 = v4;
        unint64_t v3 = v108;
      }

      uint64_t v125 = (id (*)(void *))sub_256B3D460;
      v126[0] = v26;
      v122[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      unint64_t v123 = sub_256A3E8D0;
      uint64_t v124 = &unk_270604390;
      _Block_copy(v122);
      sub_256B3E6B4();
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_sideloadWithResource_with_, v4, v30);
      _Block_release(v30);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      unint64_t v36 = v112;
      sub_256A4A04C();
      unint64_t v13 = *v36;
      if (!v13) {
        break;
      }
      uint64_t v37 = v13;
      char v38 = v13;
      BOOL v39 = sub_256B3F080();

      if (!v39)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_30;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E94C();
      v40();
      unint64_t v41 = v13;
      char v42 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v43 = sub_256B3F9D0();
      if (sub_256B3E50C(v43))
      {
        uint64_t v44 = sub_256A4A8A8();
        unint64_t v3 = (void *)sub_256B3D808();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3EC9C(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3DAE8();
        uint64_t v48 = sub_256B3D990(v46, v47, v122);
        sub_256B3EF58(v48);
        *(_WORD *)(v44 + 12) = 2112;
        uint64_t v49 = v13;
        uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v44 + 14) = v50;
        *unint64_t v3 = v50;

        sub_256B3EFC0();
        _os_log_impl(&dword_256A36000, v0, (os_log_type_t)v4, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v44, 0x20u);
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3F0CC();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v51();
      sub_256B3ED18();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_48;
      }
    }
    uint64_t v53 = v114;
    sub_256A4A04C();
    uint64_t v54 = *(void **)(v53 + 16);
    if (v54)
    {
      id v55 = v54;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v56 = sub_256B3E65C();
      v57(v56);
      id v58 = v54;
      id v59 = v54;
      os_log_type_t v60 = (void *)sub_256B3F470();
      os_log_type_t v61 = sub_256B3F9D0();
      if (sub_256B3E3E8(v61))
      {
        sub_256A4A8A8();
        unint64_t v111 = (uint64_t *)sub_256B3D808();
        uint64_t v62 = sub_256A4A8A8();
        sub_256B3E828(v62);
        sub_256A4A04C();
        uint64_t v63 = sub_256B3EF40();
        uint64_t v120 = sub_256B3D990(v63, v64, &v118);
        char v115 = v4;
        char v4 = v121;
        sub_256B3DA9C();
        swift_bridgeObjectRelease();
        sub_256B3E8E8();
        uint64_t v120 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3DA9C();
        sub_256B3EBE8((uint64_t)v126);

        sub_256B3E7D4();
        sub_256B3E92C(&dword_256A36000, v65, v66, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E1D0();
        sub_256A4A158();
        sub_256B3E1D0();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3F024();
      }
      else
      {

        sub_256B3F010();
      }
      goto LABEL_39;
    }
    id v78 = (id *)(v113 + 16);
    sub_256A4A04C();
    if (*v78)
    {
      id v79 = *v78;
      sub_256B3EE48();
      if (!v80) {
        swift_once();
      }
      sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v81 = sub_256B3E65C();
      v82(v81);
      uint64_t v83 = (char **)v128;
      uint64_t v84 = (void *)sub_256B3F470();
      os_log_type_t v85 = sub_256B3F9C0();
      if (sub_256B3E0EC(v85))
      {
        uint64_t v86 = sub_256A4EFE4();
        uint64_t v87 = sub_256A4A8A8();
        uint64_t v112 = v83;
        sub_256B3E78C(v87);
        *(_DWORD *)uint64_t v86 = 136315394;
        sub_256A4A04C();
        char v115 = v4;
        sub_256B3E6D0();
        uint64_t v88 = sub_256B3E108();
        sub_256B3D6E4(v88);
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2048;
        sub_256B3D710((uint64_t)&v127);
        sub_256B3F04C(&dword_256A36000, v89, v90, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v91();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v102();
      }
      sub_256B3ED18();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      goto LABEL_4;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D794();
    v93();
    uint64_t v94 = v128;
    uint64_t v95 = (void *)sub_256B3F470();
    os_log_type_t v96 = sub_256B3F9D0();
    if (sub_256B3DD20(v96))
    {
      sub_256A4EFE4();
      uint64_t v97 = sub_256A4A8A8();
      char v115 = v94;
      sub_256B3E7A4(v97);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v98 = sub_256B3EBD0();
      uint64_t v117 = sub_256B3D990(v98, v99, &v120);
      char v4 = &v118;
      sub_256B3DA9C();
      swift_bridgeObjectRelease();
      sub_256B3E728();
      sub_256B3D9C0(&dword_256A36000, v100, v101, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DCDC();
    }
    else
    {

      sub_256B3EFFC();
    }
    sub_256B3D480();
    v103();
    sub_256A4993C();
    uint64_t v104 = sub_256A6E4C0();
    sub_256B3DBC4(v104, v105);

    sub_256B3ED18();
    sub_256B3E284();
    sub_256B3E140();
    sub_256B3D6CC();
    char v14 = &v124;
    goto LABEL_3;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_30:
  sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
  sub_256A4A04C();
  sub_256B3E94C();
  v67();
  unint64_t v68 = v128;
  char v69 = v13;
  os_log_type_t v70 = v13;
  uint64_t v71 = (void *)sub_256B3F470();
  os_log_type_t v72 = sub_256B3F9D0();
  if (sub_256B3E3E8(v72))
  {
    sub_256A4A8A8();
    unint64_t v111 = v68;
    uint64_t v110 = sub_256B3D808();
    uint64_t v73 = sub_256A4A8A8();
    sub_256B3EBA0(v73);
    sub_256A4A04C();
    uint64_t v74 = sub_256B3EF40();
    uint64_t v118 = sub_256B3D990(v74, v75, v121);
    char v115 = v4;
    char v4 = &v119;
    sub_256B3D9E0();
    swift_bridgeObjectRelease();
    sub_256B3E8E8();
    uint64_t v118 = _swift_stdlib_bridgeErrorToNSError();
    sub_256B3D9E0();
    sub_256B3EBE8((uint64_t)&v125);

    sub_256B3E6E8();
    sub_256B3E92C(&dword_256A36000, v76, v77, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_256A39D2C(&qword_26B2B60C8);
    sub_256B3E1D0();
    sub_256A4A158();
    sub_256B3E1D0();
    sub_256A4A158();
    sub_256A4A158();

    sub_256B3F038();
  }
  else
  {

    sub_256B3EDC0();
  }
LABEL_39:
  sub_256B3D480();
  v92();
  swift_willThrow();

  swift_release();
  sub_256B3E284();
  sub_256B3E140();
  sub_256B3D6CC();
  sub_256B3E810();
LABEL_4:
  sub_256B3D868();
}

void sub_256B2BA60()
{
  sub_256B3D884();
  unint64_t v111 = v5;
  uint64_t v116 = sub_256B3E458();
  sub_256A49FB8();
  uint64_t v114 = v6;
  MEMORY[0x270FA5388](v7);
  sub_256B3ECF0();
  MEMORY[0x270FA5388](v8);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v9);
  sub_256B3F0F8();
  MEMORY[0x270FA5388](v10);
  sub_256B3D950();
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)v106 - v12;
  sub_256B3E39C();
  sub_256B34D64();
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3E5FC();
  if (!v15)
  {
    sub_256A4993C();
    sub_256A6E4C0();
    *os_log_type_t v52 = 0;
    swift_willThrow();
LABEL_2:
    os_unfair_lock_unlock(v2);
    char v14 = (void **)v126;
LABEL_3:

    goto LABEL_4;
  }
  v106[1] = 0;
  id v109 = v15;
  os_unfair_lock_unlock(v2);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (!v16)
  {
    sub_256B3E9BC();
    v17.n128_u64[0] = 138412290;
    sub_256B3E7B0(v17);
    *(void *)&long long v19 = 136315650;
    long long v107 = v19;
    v106[5] = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      uint64_t v128 = v18;
      uint64_t v20 = sub_256B3D7DC();
      uint64_t v21 = sub_256B3ED78(v20);
      uint64_t v125 = sub_256B37490;
      v126[0] = v21;
      v122[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      unint64_t v123 = sub_256B371E0;
      uint64_t v124 = &unk_2706042F0;
      _Block_copy(v122);
      sub_256B3EEDC();
      swift_release();
      uint64_t v22 = (uint64_t *)objc_msgSend(v109, sel_synchronousRemoteObjectProxyWithErrorHandler_, v0);
      _Block_release(v0);
      uint64_t v23 = sub_256B3D7DC();
      sub_256B3E798(v23);
      uint64_t v24 = sub_256B3D7DC();
      sub_256B3E44C(v24);
      uint64_t v25 = sub_256B3DCF0();
      *(void *)(v25 + 16) = v0;
      *(void *)(v25 + 24) = v3;
      uint64_t v26 = sub_256B3DCF0();
      *(void *)(v26 + 16) = sub_256B3D45C;
      *(void *)(v26 + 24) = v25;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EBC4();
      sub_256A46E9C(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = v111;
      char v4 = v111;
      os_log_type_t v30 = (void *)sub_256B3F470();
      os_log_type_t v31 = sub_256B3F9F0();
      if (sub_256B3E124(v31))
      {
        sub_256A4A734();
        uint64_t v32 = (void *)sub_256B3D808();
        sub_256B3EA98(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "sideloading resource bundle container: %@");
        sub_256A39D2C(&qword_26B2B60C8);
        swift_arrayDestroy();
        char v4 = v22;
        uint64_t v22 = v29;
        unint64_t v3 = v108;
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        os_log_type_t v30 = v4;
        unint64_t v3 = v108;
      }

      uint64_t v125 = (id (*)(void *))sub_256B3D460;
      v126[0] = v26;
      v122[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      unint64_t v123 = sub_256A3E8D0;
      uint64_t v124 = &unk_270604318;
      _Block_copy(v122);
      sub_256B3E6B4();
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_sideloadWithResourceBundle_with_, v4, v30);
      _Block_release(v30);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      unint64_t v36 = v112;
      sub_256A4A04C();
      unint64_t v13 = *v36;
      if (!v13) {
        break;
      }
      uint64_t v37 = v13;
      char v38 = v13;
      BOOL v39 = sub_256B3F080();

      if (!v39)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_30;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E94C();
      v40();
      unint64_t v41 = v13;
      char v42 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v43 = sub_256B3F9D0();
      if (sub_256B3E50C(v43))
      {
        uint64_t v44 = sub_256A4A8A8();
        unint64_t v3 = (void *)sub_256B3D808();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3EC9C(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3DAE8();
        uint64_t v48 = sub_256B3D990(v46, v47, v122);
        sub_256B3EF58(v48);
        *(_WORD *)(v44 + 12) = 2112;
        uint64_t v49 = v13;
        uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v44 + 14) = v50;
        *unint64_t v3 = v50;

        sub_256B3EFC0();
        _os_log_impl(&dword_256A36000, v0, (os_log_type_t)v4, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v44, 0x20u);
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3F0CC();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v51();
      sub_256B3ED18();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_48;
      }
    }
    uint64_t v53 = v114;
    sub_256A4A04C();
    uint64_t v54 = *(void **)(v53 + 16);
    if (v54)
    {
      id v55 = v54;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v56 = sub_256B3E65C();
      v57(v56);
      id v58 = v54;
      id v59 = v54;
      os_log_type_t v60 = (void *)sub_256B3F470();
      os_log_type_t v61 = sub_256B3F9D0();
      if (sub_256B3E3E8(v61))
      {
        sub_256A4A8A8();
        unint64_t v111 = (uint64_t *)sub_256B3D808();
        uint64_t v62 = sub_256A4A8A8();
        sub_256B3E828(v62);
        sub_256A4A04C();
        uint64_t v63 = sub_256B3EF40();
        uint64_t v120 = sub_256B3D990(v63, v64, &v118);
        char v115 = v4;
        char v4 = v121;
        sub_256B3DA9C();
        swift_bridgeObjectRelease();
        sub_256B3E8E8();
        uint64_t v120 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3DA9C();
        sub_256B3EBE8((uint64_t)v126);

        sub_256B3E7D4();
        sub_256B3E92C(&dword_256A36000, v65, v66, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E1D0();
        sub_256A4A158();
        sub_256B3E1D0();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3F024();
      }
      else
      {

        sub_256B3F010();
      }
      goto LABEL_39;
    }
    id v78 = (id *)(v113 + 16);
    sub_256A4A04C();
    if (*v78)
    {
      id v79 = *v78;
      sub_256B3EE48();
      if (!v80) {
        swift_once();
      }
      sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v81 = sub_256B3E65C();
      v82(v81);
      uint64_t v83 = (char **)v128;
      uint64_t v84 = (void *)sub_256B3F470();
      os_log_type_t v85 = sub_256B3F9C0();
      if (sub_256B3E0EC(v85))
      {
        uint64_t v86 = sub_256A4EFE4();
        uint64_t v87 = sub_256A4A8A8();
        uint64_t v112 = v83;
        sub_256B3E78C(v87);
        *(_DWORD *)uint64_t v86 = 136315394;
        sub_256A4A04C();
        char v115 = v4;
        sub_256B3E6D0();
        uint64_t v88 = sub_256B3E108();
        sub_256B3D6E4(v88);
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2048;
        sub_256B3D710((uint64_t)&v127);
        sub_256B3F04C(&dword_256A36000, v89, v90, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v91();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v102();
      }
      sub_256B3ED18();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      goto LABEL_4;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D794();
    v93();
    uint64_t v94 = v128;
    uint64_t v95 = (void *)sub_256B3F470();
    os_log_type_t v96 = sub_256B3F9D0();
    if (sub_256B3DD20(v96))
    {
      sub_256A4EFE4();
      uint64_t v97 = sub_256A4A8A8();
      char v115 = v94;
      sub_256B3E7A4(v97);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v98 = sub_256B3EBD0();
      uint64_t v117 = sub_256B3D990(v98, v99, &v120);
      char v4 = &v118;
      sub_256B3DA9C();
      swift_bridgeObjectRelease();
      sub_256B3E728();
      sub_256B3D9C0(&dword_256A36000, v100, v101, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DCDC();
    }
    else
    {

      sub_256B3EFFC();
    }
    sub_256B3D480();
    v103();
    sub_256A4993C();
    uint64_t v104 = sub_256A6E4C0();
    sub_256B3DBC4(v104, v105);

    sub_256B3ED18();
    sub_256B3E284();
    sub_256B3E140();
    sub_256B3D6CC();
    char v14 = &v124;
    goto LABEL_3;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_30:
  sub_256A46E9C(v116, (uint64_t)qword_26B2B63D0);
  sub_256A4A04C();
  sub_256B3E94C();
  v67();
  unint64_t v68 = v128;
  char v69 = v13;
  os_log_type_t v70 = v13;
  uint64_t v71 = (void *)sub_256B3F470();
  os_log_type_t v72 = sub_256B3F9D0();
  if (sub_256B3E3E8(v72))
  {
    sub_256A4A8A8();
    unint64_t v111 = v68;
    uint64_t v110 = sub_256B3D808();
    uint64_t v73 = sub_256A4A8A8();
    sub_256B3EBA0(v73);
    sub_256A4A04C();
    uint64_t v74 = sub_256B3EF40();
    uint64_t v118 = sub_256B3D990(v74, v75, v121);
    char v115 = v4;
    char v4 = &v119;
    sub_256B3D9E0();
    swift_bridgeObjectRelease();
    sub_256B3E8E8();
    uint64_t v118 = _swift_stdlib_bridgeErrorToNSError();
    sub_256B3D9E0();
    sub_256B3EBE8((uint64_t)&v125);

    sub_256B3E6E8();
    sub_256B3E92C(&dword_256A36000, v76, v77, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
    sub_256A39D2C(&qword_26B2B60C8);
    sub_256B3E1D0();
    sub_256A4A158();
    sub_256B3E1D0();
    sub_256A4A158();
    sub_256A4A158();

    sub_256B3F038();
  }
  else
  {

    sub_256B3EDC0();
  }
LABEL_39:
  sub_256B3D480();
  v92();
  swift_willThrow();

  swift_release();
  sub_256B3E284();
  sub_256B3E140();
  sub_256B3D6CC();
  sub_256B3E810();
LABEL_4:
  sub_256B3D868();
}

void sub_256B2C7D8()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = sub_256B371E0;
      uint64_t v110 = &unk_270604278;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "remove sideload resource: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = (id (*)(void *))sub_256B3D460;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = sub_256A3E8D0;
      uint64_t v110 = &unk_2706042A0;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_removeSideloadWithResource_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      os_log_type_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      id v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    uint64_t v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      uint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    uint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B2D38C()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    char v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = sub_256B371E0;
      uint64_t v110 = &unk_270604200;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      unint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "remove sideload resource bundle: %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      unint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = (id (*)(void *))sub_256B3D460;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = sub_256A3E8D0;
      uint64_t v110 = &unk_270604250;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_removeSideloadWithResourceBundle_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      char v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      char v42 = v13;
      os_log_type_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      id v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    uint64_t v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      uint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    uint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B2DF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256B3D884();
  a19 = v25;
  a20 = v26;
  uint64_t v123 = sub_256B3E458();
  sub_256A49FB8();
  MEMORY[0x270FA5388](v27);
  sub_256B3E1E8();
  MEMORY[0x270FA5388](v28);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v29);
  sub_256B3D950();
  MEMORY[0x270FA5388](v30);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v31);
  sub_256B3E088();
  sub_256B3EEAC();
  uint64_t v32 = v21;
  if (v21) {
    goto LABEL_2;
  }
  sub_256B3DB58();
  if (!v33)
  {
    sub_256A4993C();
    uint64_t v69 = sub_256A6E4C0();
    sub_256B3DE44(v69, v70);
LABEL_2:
    os_unfair_lock_unlock(v22);
    goto LABEL_3;
  }
  sub_256B3E4EC(v33);
  sub_256B3EE00();
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v34)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
LABEL_28:
    sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v84 = sub_256B3DEDC();
    v85(v84);
    sub_256B3ED3C();
    uint64_t v86 = v32;
    uint64_t v87 = sub_256B3F470();
    os_log_type_t v88 = sub_256B3F9D0();
    if (sub_256B3EA7C(v88))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v89 = sub_256A4A8A8();
      sub_256B3DE60(v89);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v90 = sub_256B3EA30();
      uint64_t v92 = sub_256B3EA54(v90, v91, v126);
      sub_256B3DE14(v92);
      swift_bridgeObjectRelease();
      sub_256B3E55C();
      uint64_t v93 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3E05C(v93);
      sub_256B3EEC4();

      sub_256B3DA5C();
      sub_256B3DC90(&dword_256A36000, v87, v24, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E434();
    }
    else
    {

      sub_256B3E648();
    }
    sub_256B3D480();
    v94();
    sub_256B3D820();
    swift_release();
    sub_256B3E284();
  }
  else
  {
    sub_256B3DC64();
    v35.n128_u64[0] = 136315650;
    sub_256B3ED30(v35);
    sub_256B3E404();
    while (1)
    {
      uint64_t v132 = v36;
      uint64_t v37 = sub_256B3D7A8();
      uint64_t v38 = sub_256B3DE84(v37);
      uint64_t v130 = sub_256B37490;
      uint64_t v131 = v38;
      v127[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v128 = sub_256B371E0;
      uint64_t v129 = &unk_270604110;
      _Block_copy(v127);
      sub_256B3D844();
      uint64_t v39 = swift_release();
      id v40 = sub_256B3EDE8(v39, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3EE18();
      uint64_t v41 = sub_256B3D7A8();
      sub_256B3EE3C(v41);
      uint64_t v42 = sub_256B3D7DC();
      sub_256B3E44C(v42);
      uint64_t v43 = sub_256B3DCF0();
      sub_256B3EE54(v43);
      uint64_t v44 = sub_256B3DCF0();
      *(void *)(v44 + 16) = sub_256B3D45C;
      *(void *)(v44 + 24) = v20;
      uint64_t v45 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3EAE8();
      swift_retain();
      if (v45 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_256B3EBC4();
      sub_256A46E9C(v46, (uint64_t)qword_26B2C3FE0);
      uint64_t v47 = (void *)sub_256B3F470();
      os_log_type_t v48 = sub_256B3F9F0();
      if (sub_256B3E0EC(v48))
      {
        uint64_t v49 = (_WORD *)sub_256A4AA84();
        sub_256B3EE30(v49);
        sub_256B3E920();
        sub_256B3EF28(v50, v51, v52, "calling isGenerativeExperiencesEssentialResourcesReady()");
        sub_256A4A158();
      }

      uint64_t v130 = (id (*)(void *))sub_256B3D460;
      uint64_t v131 = v44;
      v127[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v128 = sub_256A3E8D0;
      uint64_t v129 = &unk_270608120;
      _Block_copy(v127);
      sub_256B3E6B4();
      swift_retain();
      uint64_t v53 = swift_release();
      sub_256B3EDD0(v53, sel_isGenerativeExperiencesEssentialResourcesReadyWith_);
      _Block_release(v47);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_256A4A04C();
      uint64_t v32 = (void *)*v32;
      if (!v32) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v54 = v32;
      sub_256B3E57C();
      sub_256B3E480();
      if ((v20 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_256B3E498((uint64_t)&a9);
      uint64_t v20 = sub_256A46E9C(v55, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E01C();
      v56();
      char v57 = v32;
      id v58 = v32;
      id v59 = (void *)sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E0EC(v60))
      {
        uint64_t v20 = sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3E18C(v61);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        *(void *)(v20 + 4) = sub_256B3D990(v62, v63, v127);
        sub_256B3E29C();
        sub_256B3EACC();
        uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3EB60(v64);

        sub_256B3E528();
        sub_256B3E920();
        sub_256B3EF00(v65, v66, v67, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3E674();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v68();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v34) {
        goto LABEL_48;
      }
    }
    sub_256A4A04C();
    sub_256B3EB50();
    if (v20)
    {
      id v71 = (id)v20;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DEB8();
      v73(v72);
      sub_256B3ED90();
      id v74 = (id)v20;
      uint64_t v75 = (void *)sub_256B3F470();
      os_log_type_t v76 = sub_256B3F9D0();
      if (sub_256B3E3E8(v76))
      {
        sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v77 = sub_256A4A8A8();
        sub_256B3DD78(v77);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v78 = sub_256B3E5DC();
        uint64_t v80 = sub_256B3EA54(v78, v79, v124);
        sub_256B3E0B4(v80);
        swift_bridgeObjectRelease();
        sub_256B3E53C();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E1A8(v81);
        sub_256B3E694();

        sub_256B3DB1C();
        sub_256B3E5BC(&dword_256A36000, v82, v83, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      sub_256B3D480();
      v109();
      swift_willThrow();
      sub_256B3D9A8();
      sub_256B3E284();
      swift_release();
      sub_256B3D6CC();

      goto LABEL_3;
    }
    sub_256A4A04C();
    if (*(void *)(v122 + 16))
    {
      id v95 = *(id *)(v122 + 16);
      sub_256B3EE48();
      if (!v96) {
        swift_once();
      }
      sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v97 = sub_256B3DE94();
      v98(v97);
      uint64_t v99 = (void *)sub_256B3ED54();
      os_log_type_t v100 = sub_256B3F9C0();
      if (sub_256B3E50C(v100))
      {
        uint64_t v101 = sub_256A4EFE4();
        uint64_t v102 = sub_256A4A8A8();
        sub_256B3E7A4(v102);
        sub_256B3EA6C(4.8151e-34);
        sub_256A4A04C();
        uint64_t v103 = sub_256B3EBD0();
        uint64_t v105 = sub_256B3D990(v103, v104, &v125);
        sub_256B3DDE4(v105);
        swift_bridgeObjectRelease();
        *(_WORD *)(v101 + 12) = 2048;
        sub_256B3D710((uint64_t)&v133);
        sub_256B3E59C(&dword_256A36000, v106, v107, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3E040();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v108();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3D480();
        v118();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3ED6C();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3E0E0();
    v110();
    unint64_t v111 = (void *)sub_256B3F470();
    os_log_type_t v112 = sub_256B3F9D0();
    if (sub_256B3DD20(v112))
    {
      sub_256A4EFE4();
      uint64_t v113 = sub_256A4A8A8();
      sub_256B3E7A4(v113);
      sub_256B3DD3C(4.8151e-34);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v114 = sub_256B3DAE8();
      sub_256B3D990(v114, v115, &v125);
      sub_256B3DA9C();
      sub_256B3E29C();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v116, v117, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E41C();
    }
    else
    {

      sub_256B3E634();
    }
    sub_256B3D480();
    v119();
    sub_256B3E4C8();
    uint64_t v120 = sub_256A6E4C0();
    sub_256B3DAB4(v120, v121);
    swift_release();
    sub_256B3E284();
  }
  swift_release();
  sub_256B3D6CC();

LABEL_3:
  sub_256B3E4E0();
  sub_256B3D868();
}

void sub_256B2EADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256B3D884();
  a19 = v25;
  a20 = v26;
  uint64_t v123 = sub_256B3E458();
  sub_256A49FB8();
  MEMORY[0x270FA5388](v27);
  sub_256B3E1E8();
  MEMORY[0x270FA5388](v28);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v29);
  sub_256B3D950();
  MEMORY[0x270FA5388](v30);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v31);
  sub_256B3E088();
  sub_256B3EEAC();
  uint64_t v32 = v21;
  if (v21) {
    goto LABEL_2;
  }
  sub_256B3DB58();
  if (!v33)
  {
    sub_256A4993C();
    uint64_t v69 = sub_256A6E4C0();
    sub_256B3DE44(v69, v70);
LABEL_2:
    os_unfair_lock_unlock(v22);
    goto LABEL_3;
  }
  sub_256B3E4EC(v33);
  sub_256B3EE00();
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v34)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
LABEL_28:
    sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v84 = sub_256B3DEDC();
    v85(v84);
    sub_256B3ED3C();
    uint64_t v86 = v32;
    uint64_t v87 = sub_256B3F470();
    os_log_type_t v88 = sub_256B3F9D0();
    if (sub_256B3EA7C(v88))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v89 = sub_256A4A8A8();
      sub_256B3DE60(v89);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v90 = sub_256B3EA30();
      uint64_t v92 = sub_256B3EA54(v90, v91, v126);
      sub_256B3DE14(v92);
      swift_bridgeObjectRelease();
      sub_256B3E55C();
      uint64_t v93 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3E05C(v93);
      sub_256B3EEC4();

      sub_256B3DA5C();
      sub_256B3DC90(&dword_256A36000, v87, v24, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E434();
    }
    else
    {

      sub_256B3E648();
    }
    sub_256B3D480();
    v94();
    sub_256B3D820();
    swift_release();
    sub_256B3E284();
  }
  else
  {
    sub_256B3DC64();
    v35.n128_u64[0] = 136315650;
    sub_256B3ED30(v35);
    sub_256B3E404();
    while (1)
    {
      uint64_t v132 = v36;
      uint64_t v37 = sub_256B3D7A8();
      uint64_t v38 = sub_256B3DE84(v37);
      uint64_t v130 = sub_256B37490;
      uint64_t v131 = v38;
      v127[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v128 = sub_256B371E0;
      uint64_t v129 = &unk_270616358;
      _Block_copy(v127);
      sub_256B3D844();
      uint64_t v39 = swift_release();
      id v40 = sub_256B3EDE8(v39, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3EE18();
      uint64_t v41 = sub_256B3D7A8();
      sub_256B3EE3C(v41);
      uint64_t v42 = sub_256B3D7DC();
      sub_256B3E44C(v42);
      uint64_t v43 = sub_256B3DCF0();
      sub_256B3EE54(v43);
      uint64_t v44 = sub_256B3DCF0();
      *(void *)(v44 + 16) = sub_256B3D45C;
      *(void *)(v44 + 24) = v20;
      uint64_t v45 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3EAE8();
      swift_retain();
      if (v45 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_256B3EBC4();
      sub_256A46E9C(v46, (uint64_t)qword_26B2C3FE0);
      uint64_t v47 = (void *)sub_256B3F470();
      os_log_type_t v48 = sub_256B3F9F0();
      if (sub_256B3E0EC(v48))
      {
        uint64_t v49 = (_WORD *)sub_256A4AA84();
        sub_256B3EE30(v49);
        sub_256B3E920();
        sub_256B3EF28(v50, v51, v52, "calling hasEnoughStorageForGenerativeExperiencesEssentialResources()");
        sub_256A4A158();
      }

      uint64_t v130 = sub_256B3D15C;
      uint64_t v131 = v44;
      v127[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v128 = sub_256A3E8D0;
      uint64_t v129 = &unk_2706163F8;
      _Block_copy(v127);
      sub_256B3E6B4();
      swift_retain();
      uint64_t v53 = swift_release();
      sub_256B3EDD0(v53, sel_hasEnoughStorageForGenerativeExperiencesEssentialResourcesWith_);
      _Block_release(v47);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_256A4A04C();
      uint64_t v32 = (void *)*v32;
      if (!v32) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v54 = v32;
      sub_256B3E57C();
      sub_256B3E480();
      if ((v20 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_256B3E498((uint64_t)&a9);
      uint64_t v20 = sub_256A46E9C(v55, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E01C();
      v56();
      char v57 = v32;
      id v58 = v32;
      id v59 = (void *)sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E0EC(v60))
      {
        uint64_t v20 = sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3E18C(v61);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        *(void *)(v20 + 4) = sub_256B3D990(v62, v63, v127);
        sub_256B3E29C();
        sub_256B3EACC();
        uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3EB60(v64);

        sub_256B3E528();
        sub_256B3E920();
        sub_256B3EF00(v65, v66, v67, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3E674();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v68();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v34) {
        goto LABEL_48;
      }
    }
    sub_256A4A04C();
    sub_256B3EB50();
    if (v20)
    {
      id v71 = (id)v20;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DEB8();
      v73(v72);
      sub_256B3ED90();
      id v74 = (id)v20;
      uint64_t v75 = (void *)sub_256B3F470();
      os_log_type_t v76 = sub_256B3F9D0();
      if (sub_256B3E3E8(v76))
      {
        sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v77 = sub_256A4A8A8();
        sub_256B3DD78(v77);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v78 = sub_256B3E5DC();
        uint64_t v80 = sub_256B3EA54(v78, v79, v124);
        sub_256B3E0B4(v80);
        swift_bridgeObjectRelease();
        sub_256B3E53C();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E1A8(v81);
        sub_256B3E694();

        sub_256B3DB1C();
        sub_256B3E5BC(&dword_256A36000, v82, v83, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      sub_256B3D480();
      v109();
      swift_willThrow();
      sub_256B3D9A8();
      sub_256B3E284();
      swift_release();
      sub_256B3D6CC();

      goto LABEL_3;
    }
    sub_256A4A04C();
    if (*(void *)(v122 + 16))
    {
      id v95 = *(id *)(v122 + 16);
      sub_256B3EE48();
      if (!v96) {
        swift_once();
      }
      sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v97 = sub_256B3DE94();
      v98(v97);
      uint64_t v99 = (void *)sub_256B3ED54();
      os_log_type_t v100 = sub_256B3F9C0();
      if (sub_256B3E50C(v100))
      {
        uint64_t v101 = sub_256A4EFE4();
        uint64_t v102 = sub_256A4A8A8();
        sub_256B3E7A4(v102);
        sub_256B3EA6C(4.8151e-34);
        sub_256A4A04C();
        uint64_t v103 = sub_256B3EBD0();
        uint64_t v105 = sub_256B3D990(v103, v104, &v125);
        sub_256B3DDE4(v105);
        swift_bridgeObjectRelease();
        *(_WORD *)(v101 + 12) = 2048;
        sub_256B3D710((uint64_t)&v133);
        sub_256B3E59C(&dword_256A36000, v106, v107, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3E040();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v108();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3D480();
        v118();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3ED6C();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3E0E0();
    v110();
    unint64_t v111 = (void *)sub_256B3F470();
    os_log_type_t v112 = sub_256B3F9D0();
    if (sub_256B3DD20(v112))
    {
      sub_256A4EFE4();
      uint64_t v113 = sub_256A4A8A8();
      sub_256B3E7A4(v113);
      sub_256B3DD3C(4.8151e-34);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v114 = sub_256B3DAE8();
      sub_256B3D990(v114, v115, &v125);
      sub_256B3DA9C();
      sub_256B3E29C();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v116, v117, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E41C();
    }
    else
    {

      sub_256B3E634();
    }
    sub_256B3D480();
    v119();
    sub_256B3E4C8();
    uint64_t v120 = sub_256A6E4C0();
    sub_256B3DAB4(v120, v121);
    swift_release();
    sub_256B3E284();
  }
  swift_release();
  sub_256B3D6CC();

LABEL_3:
  sub_256B3E4E0();
  sub_256B3D868();
}

void sub_256B2F678()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    uint64_t v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = sub_256B371E0;
      uint64_t v110 = &unk_2706044A8;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      uint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "requesting resource container for %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      uint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = sub_256A49FB0;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = (void (*)(uint64_t, void *))sub_256B340C8;
      uint64_t v110 = &unk_2706044D0;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_resourceContainerWithIdentifier_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      uint64_t v42 = v13;
      uint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      id v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    uint64_t v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      uint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    uint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B3022C()
{
  sub_256B3D884();
  uint64_t v103 = sub_256B3D964(v5, v6, v7);
  sub_256A49FB8();
  MEMORY[0x270FA5388](v8);
  sub_256B3DA40();
  MEMORY[0x270FA5388](v9);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v10);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  sub_256B3D924();
  sub_256B3EA00();
  unint64_t v13 = v1;
  if (v1) {
    goto LABEL_2;
  }
  sub_256B3D490();
  if (!v14)
  {
    sub_256A4993C();
    uint64_t v54 = sub_256A6E4C0();
    sub_256B3DE44(v54, v55);
LABEL_2:
    os_unfair_lock_unlock(v3);
    sub_256B3D7C4();
    goto LABEL_3;
  }
  id v15 = sub_256B3E9E8(v14);
  sub_256B3E338((uint64_t)v15);
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v16)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
LABEL_29:
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v66 = sub_256B3D4F8();
    v67(v66);
    sub_256B3E8A0();
    unint64_t v68 = v13;
    uint64_t v69 = sub_256B3F470();
    os_log_type_t v70 = sub_256B3F9D0();
    if (sub_256B3DB00(v70))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v71 = sub_256A4A8A8();
      sub_256B3D62C(v71);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DAE8();
      uint64_t v74 = sub_256B3D990(v72, v73, v106);
      sub_256B3D734(v74);
      swift_bridgeObjectRelease();
      sub_256B3DF48();
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3D8F8(v75);
      sub_256B3E87C();

      sub_256B3D5C8();
      sub_256B3DC90(&dword_256A36000, v69, (os_log_type_t)v2, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DC28();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBF8();
    }
    else
    {

      sub_256B3DF00();
    }
    sub_256B3D480();
    v76();
    sub_256B3D820();
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  else
  {
    sub_256B3D600();
    v17.n128_u64[0] = 136315138;
    sub_256B3E7B0(v17);
    sub_256B3E30C();
    v18.n128_u64[0] = 136315650;
    sub_256B3DFE8(v18);
    while (1)
    {
      uint64_t v113 = v19;
      uint64_t v20 = sub_256B3D7A8();
      uint64_t v21 = sub_256B3DE84(v20);
      unint64_t v111 = sub_256B37490;
      uint64_t v112 = v21;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = sub_256B371E0;
      uint64_t v110 = &unk_270604458;
      _Block_copy(&v107);
      sub_256B3D844();
      uint64_t v22 = swift_release();
      id v23 = sub_256B3E31C(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3E998();
      uint64_t v24 = sub_256B3D7A8();
      sub_256B3E798(v24);
      uint64_t v25 = sub_256B3D7DC();
      sub_256B3E44C(v25);
      uint64_t v26 = sub_256B3DCF0();
      sub_256B3E9B0(v26);
      uint64_t v2 = sub_256B3DCF0();
      *(void *)(v2 + 16) = sub_256B3D45C;
      *(void *)(v2 + 24) = v0;
      uint64_t v27 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3E158();
      swift_retain();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_256B3EA18();
      sub_256B3DCA8(v28, (uint64_t)qword_26B2C3FE0);
      uint64_t v29 = (void *)sub_256B3F470();
      os_log_type_t v30 = sub_256B3F9F0();
      if (sub_256B3E124(v30))
      {
        sub_256A4A734();
        uint64_t v31 = sub_256A4A8A8();
        sub_256B3D8CC(v31);
        uint64_t v32 = sub_256B3D9FC();
        sub_256B3DFC8(v32);
        sub_256B3E780();
        sub_256B3E768(v33, v34, v35, "requesting resource bundle container for %s");
        sub_256B3DFA8();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {

        sub_256B3E3CC();
        sub_256B3EA24();
      }
      swift_unknownObjectRetain();
      uint64_t v36 = (void *)sub_256B3E354();
      unint64_t v111 = sub_256A49FB0;
      uint64_t v112 = v2;
      uint64_t v107 = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      id v109 = (void (*)(uint64_t, void *))sub_256B340C8;
      uint64_t v110 = &unk_270604480;
      _Block_copy(&v107);
      sub_256B3E2D4();
      uint64_t v37 = swift_release();
      sub_256B3E380(v37, sel_resourceBundleContainerWithIdentifier_with_);
      _Block_release(v4);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_256A4A04C();
      unint64_t v13 = (void *)*v13;
      if (!v13) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v38 = v13;
      sub_256B3DF88();
      sub_256B3E480();
      if ((v0 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_256B3E3BC();
      sub_256A46E9C(v39, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v40 = sub_256B3D4F8();
      v41(v40);
      uint64_t v42 = v13;
      uint64_t v43 = v13;
      uint64_t v0 = sub_256B3F470();
      os_log_type_t v44 = sub_256B3F9D0();
      if (sub_256B3E2B8(v44))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v45 = sub_256A4A8A8();
        sub_256B3DA24(v45);
        sub_256A4A04C();
        uint64_t v46 = sub_256B3E908();
        uint64_t v48 = sub_256B3E174(v46, v47, &v107);
        sub_256B3DF68(v48);
        sub_256B3E268();
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E24C(v49);

        sub_256B3DF14();
        sub_256B3EA48();
        sub_256B3DC90(v50, v51, v52, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3E230();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v53();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v16) {
        goto LABEL_49;
      }
    }
    sub_256A4A04C();
    sub_256B3E220();
    if (&unk_270616048)
    {
      id v56 = &unk_270616048;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v57();
      sub_256B3E7BC();
      id v58 = &unk_270616048;
      id v59 = sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E204(v60))
      {
        sub_256A4A8A8();
        sub_256B3D6B0();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3D514(v61);
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        uint64_t v64 = sub_256B3D990(v62, v63, v104);
        sub_256B3D8A0(v64);
        swift_bridgeObjectRelease();
        sub_256B3DF28();
        uint64_t v65 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3D764(v65);
        sub_256B3E8B8();

        sub_256B3D658();
        sub_256B3DC90(&dword_256A36000, v59, OS_LOG_TYPE_DEFAULT, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DB88();
        sub_256A4A158();
        sub_256B3DB88();
        sub_256A4A158();
        sub_256A4A158();

        sub_256B3DC10();
      }
      else
      {

        sub_256B3D7F4();
      }
      sub_256B3D480();
      v88();
      sub_256B3E2F0();
      sub_256B3D7C4();
      swift_release();
      sub_256B3DDB8();
      swift_release();
      sub_256B3D6CC();
      sub_256B3DBA0();
      goto LABEL_3;
    }
    sub_256A4A04C();
    uint64_t v77 = *(void **)(v102 + 16);
    if (v77)
    {
      id v78 = v77;
      sub_256B3E894();
      if (!v79) {
        swift_once();
      }
      sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3D544();
      v80();
      uint64_t v81 = (void *)sub_256B3E8D0();
      os_log_type_t v82 = sub_256B3F9C0();
      if (sub_256B3DB00(v82))
      {
        sub_256A4EFE4();
        uint64_t v83 = sub_256A4A8A8();
        sub_256B3E78C(v83);
        sub_256B3DC4C(4.8151e-34);
        sub_256A4A04C();
        sub_256B3E6D0();
        uint64_t v84 = sub_256B3E108();
        sub_256B3D6E4(v84);
        swift_bridgeObjectRelease();
        sub_256B3D590();
        sub_256B3DFFC(&dword_256A36000, v85, v86, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v87();
        sub_256B3D7C4();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3DBA0();
        sub_256B3D480();
        v98();
        sub_256B3D7C4();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3E858();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v103, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3D544();
    v89();
    uint64_t v90 = (void *)sub_256B3E864();
    os_log_type_t v91 = sub_256B3F9D0();
    if (sub_256B3DD20(v91))
    {
      sub_256A4EFE4();
      uint64_t v92 = sub_256A4A8A8();
      sub_256B3E98C(v92);
      sub_256B3DD3C(4.8151e-34);
      sub_256A4A04C();
      uint64_t v93 = sub_256B3DAE8();
      uint64_t v95 = sub_256B3D990(v93, v94, &v105);
      sub_256B3D558(v95);
      swift_bridgeObjectRelease();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v96, v97, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3DB88();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3DBE0();
    }
    else
    {

      sub_256B3D7F4();
    }
    sub_256B3D480();
    v99();
    sub_256B3E4C8();
    uint64_t v100 = sub_256A6E4C0();
    sub_256B3DAB4(v100, v101);
    sub_256B3D7C4();
    swift_release();
    sub_256B3DDB8();
  }
  swift_release();
  sub_256B3D6CC();
  sub_256B3DBA0();
LABEL_3:
  sub_256B3E370();
  sub_256B3D868();
}

void sub_256B30DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256B3D884();
  a19 = v25;
  a20 = v26;
  uint64_t v122 = sub_256B3E458();
  sub_256A49FB8();
  MEMORY[0x270FA5388](v27);
  sub_256B3E1E8();
  MEMORY[0x270FA5388](v28);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v29);
  sub_256B3D950();
  MEMORY[0x270FA5388](v30);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v31);
  sub_256B3E088();
  sub_256B3EEAC();
  uint64_t v32 = v21;
  if (v21) {
    goto LABEL_2;
  }
  sub_256B3DB58();
  if (!v33)
  {
    sub_256A4993C();
    uint64_t v69 = sub_256A6E4C0();
    sub_256B3DE44(v69, v70);
LABEL_2:
    os_unfair_lock_unlock(v22);
    goto LABEL_3;
  }
  sub_256B3E4EC(v33);
  sub_256B3EE00();
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v34)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
LABEL_28:
    sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v84 = sub_256B3DEDC();
    v85(v84);
    sub_256B3ED3C();
    uint64_t v86 = v32;
    uint64_t v87 = sub_256B3F470();
    os_log_type_t v88 = sub_256B3F9D0();
    if (sub_256B3EA7C(v88))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v89 = sub_256A4A8A8();
      sub_256B3DE60(v89);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v90 = sub_256B3EA30();
      uint64_t v92 = sub_256B3EA54(v90, v91, v125);
      sub_256B3DE14(v92);
      swift_bridgeObjectRelease();
      sub_256B3E55C();
      uint64_t v93 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3E05C(v93);
      sub_256B3EEC4();

      sub_256B3DA5C();
      sub_256B3DC90(&dword_256A36000, v87, v24, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E434();
    }
    else
    {

      sub_256B3E648();
    }
    sub_256B3D480();
    v94();
    sub_256B3D820();
    swift_release();
    sub_256B3E284();
  }
  else
  {
    sub_256B3DC64();
    v35.n128_u64[0] = 136315650;
    sub_256B3ED30(v35);
    sub_256B3E404();
    while (1)
    {
      uint64_t v131 = v36;
      uint64_t v37 = sub_256B3D7A8();
      uint64_t v38 = sub_256B3DE84(v37);
      uint64_t v129 = sub_256B37490;
      uint64_t v130 = v38;
      v126[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v127 = sub_256B371E0;
      uint64_t v128 = &unk_270604408;
      _Block_copy(v126);
      sub_256B3D844();
      uint64_t v39 = swift_release();
      id v40 = sub_256B3EDE8(v39, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3EE18();
      uint64_t v41 = sub_256B3D7A8();
      sub_256B3EE3C(v41);
      uint64_t v42 = sub_256B3D7DC();
      sub_256B3E44C(v42);
      uint64_t v43 = sub_256B3DCF0();
      sub_256B3EE54(v43);
      uint64_t v44 = sub_256B3DCF0();
      *(void *)(v44 + 16) = sub_256B3D1D0;
      *(void *)(v44 + 24) = v20;
      uint64_t v45 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3EAE8();
      swift_retain();
      if (v45 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_256B3EBC4();
      sub_256A46E9C(v46, (uint64_t)qword_26B2C3FE0);
      uint64_t v47 = (void *)sub_256B3F470();
      os_log_type_t v48 = sub_256B3F9F0();
      if (sub_256B3E0EC(v48))
      {
        uint64_t v49 = (_WORD *)sub_256A4AA84();
        sub_256B3EE30(v49);
        sub_256B3E920();
        sub_256B3EF28(v50, v51, v52, "requesting resource containers");
        sub_256A4A158();
      }

      uint64_t v129 = sub_256A49FB0;
      uint64_t v130 = v44;
      v126[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v127 = sub_256B340CC;
      uint64_t v128 = &unk_270604430;
      _Block_copy(v126);
      sub_256B3E6B4();
      swift_retain();
      uint64_t v53 = swift_release();
      sub_256B3EDD0(v53, sel_resourceContainersWith_);
      _Block_release(v47);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_256A4A04C();
      uint64_t v32 = (void *)*v32;
      if (!v32) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v54 = v32;
      sub_256B3E57C();
      sub_256B3E480();
      if ((v20 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_256B3E498((uint64_t)&a9);
      uint64_t v20 = sub_256A46E9C(v55, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E01C();
      v56();
      char v57 = v32;
      id v58 = v32;
      id v59 = (void *)sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E0EC(v60))
      {
        uint64_t v20 = sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3E18C(v61);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        *(void *)(v20 + 4) = sub_256B3D990(v62, v63, v126);
        sub_256B3E29C();
        sub_256B3EACC();
        uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3EB60(v64);

        sub_256B3E528();
        sub_256B3E920();
        sub_256B3EF00(v65, v66, v67, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3E674();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v68();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v34) {
        goto LABEL_48;
      }
    }
    sub_256A4A04C();
    sub_256B3EB50();
    if (v20)
    {
      id v71 = (id)v20;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DEB8();
      v73(v72);
      sub_256B3ED90();
      id v74 = (id)v20;
      uint64_t v75 = (void *)sub_256B3F470();
      os_log_type_t v76 = sub_256B3F9D0();
      if (sub_256B3E3E8(v76))
      {
        sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v77 = sub_256A4A8A8();
        sub_256B3DD78(v77);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v78 = sub_256B3E5DC();
        uint64_t v80 = sub_256B3EA54(v78, v79, v123);
        sub_256B3E0B4(v80);
        swift_bridgeObjectRelease();
        sub_256B3E53C();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E1A8(v81);
        sub_256B3E694();

        sub_256B3DB1C();
        sub_256B3E5BC(&dword_256A36000, v82, v83, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      sub_256B3D480();
      v108();
      swift_willThrow();
      sub_256B3D9A8();
      sub_256B3E284();
      swift_release();
      sub_256B3D6CC();

      goto LABEL_3;
    }
    sub_256A4A04C();
    if (*(void *)(v121 + 16))
    {
      uint64_t v95 = qword_26B2B6348;
      swift_bridgeObjectRetain();
      if (v95 != -1) {
        swift_once();
      }
      sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v96 = sub_256B3DE94();
      v97(v96);
      uint64_t v98 = (void *)sub_256B3ED54();
      os_log_type_t v99 = sub_256B3F9C0();
      if (sub_256B3E50C(v99))
      {
        uint64_t v100 = sub_256A4EFE4();
        uint64_t v101 = sub_256A4A8A8();
        sub_256B3E7A4(v101);
        sub_256B3EA6C(4.8151e-34);
        sub_256A4A04C();
        uint64_t v102 = sub_256B3EBD0();
        uint64_t v104 = sub_256B3D990(v102, v103, &v124);
        sub_256B3DDE4(v104);
        swift_bridgeObjectRelease();
        *(_WORD *)(v100 + 12) = 2048;
        sub_256B3D710((uint64_t)&v132);
        sub_256B3E59C(&dword_256A36000, v105, v106, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3E040();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v107();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3D480();
        v117();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3ED6C();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3E0E0();
    v109();
    uint64_t v110 = (void *)sub_256B3F470();
    os_log_type_t v111 = sub_256B3F9D0();
    if (sub_256B3DD20(v111))
    {
      sub_256A4EFE4();
      uint64_t v112 = sub_256A4A8A8();
      sub_256B3E7A4(v112);
      sub_256B3DD3C(4.8151e-34);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v113 = sub_256B3DAE8();
      sub_256B3D990(v113, v114, &v124);
      sub_256B3DA9C();
      sub_256B3E29C();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v115, v116, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E41C();
    }
    else
    {

      sub_256B3E634();
    }
    sub_256B3D480();
    v118();
    sub_256B3E4C8();
    uint64_t v119 = sub_256A6E4C0();
    sub_256B3DAB4(v119, v120);
    swift_release();
    sub_256B3E284();
  }
  swift_release();
  sub_256B3D6CC();

LABEL_3:
  sub_256B3E4E0();
  sub_256B3D868();
}

void sub_256B31980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256B3D884();
  a19 = v25;
  a20 = v26;
  uint64_t v122 = sub_256B3E458();
  sub_256A49FB8();
  MEMORY[0x270FA5388](v27);
  sub_256B3E1E8();
  MEMORY[0x270FA5388](v28);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v29);
  sub_256B3D950();
  MEMORY[0x270FA5388](v30);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v31);
  sub_256B3E088();
  sub_256B3EEAC();
  uint64_t v32 = v21;
  if (v21) {
    goto LABEL_2;
  }
  sub_256B3DB58();
  if (!v33)
  {
    sub_256A4993C();
    uint64_t v69 = sub_256A6E4C0();
    sub_256B3DE44(v69, v70);
LABEL_2:
    os_unfair_lock_unlock(v22);
    goto LABEL_3;
  }
  sub_256B3E4EC(v33);
  sub_256B3EE00();
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v34)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
LABEL_28:
    sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v84 = sub_256B3DEDC();
    v85(v84);
    sub_256B3ED3C();
    uint64_t v86 = v32;
    uint64_t v87 = sub_256B3F470();
    os_log_type_t v88 = sub_256B3F9D0();
    if (sub_256B3EA7C(v88))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v89 = sub_256A4A8A8();
      sub_256B3DE60(v89);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v90 = sub_256B3EA30();
      uint64_t v92 = sub_256B3EA54(v90, v91, v125);
      sub_256B3DE14(v92);
      swift_bridgeObjectRelease();
      sub_256B3E55C();
      uint64_t v93 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3E05C(v93);
      sub_256B3EEC4();

      sub_256B3DA5C();
      sub_256B3DC90(&dword_256A36000, v87, v24, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E434();
    }
    else
    {

      sub_256B3E648();
    }
    sub_256B3D480();
    v94();
    sub_256B3D820();
    swift_release();
    sub_256B3E284();
  }
  else
  {
    sub_256B3DC64();
    v35.n128_u64[0] = 136315650;
    sub_256B3ED30(v35);
    sub_256B3E404();
    while (1)
    {
      uint64_t v131 = v36;
      uint64_t v37 = sub_256B3D7A8();
      uint64_t v38 = sub_256B3DE84(v37);
      uint64_t v129 = sub_256B37490;
      uint64_t v130 = v38;
      v126[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v127 = sub_256B371E0;
      uint64_t v128 = &unk_2706043B8;
      _Block_copy(v126);
      sub_256B3D844();
      uint64_t v39 = swift_release();
      id v40 = sub_256B3EDE8(v39, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3EE18();
      uint64_t v41 = sub_256B3D7A8();
      sub_256B3EE3C(v41);
      uint64_t v42 = sub_256B3D7DC();
      sub_256B3E44C(v42);
      uint64_t v43 = sub_256B3DCF0();
      sub_256B3EE54(v43);
      uint64_t v44 = sub_256B3DCF0();
      *(void *)(v44 + 16) = sub_256B3D464;
      *(void *)(v44 + 24) = v20;
      uint64_t v45 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3EAE8();
      swift_retain();
      if (v45 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_256B3EBC4();
      sub_256A46E9C(v46, (uint64_t)qword_26B2C3FE0);
      uint64_t v47 = (void *)sub_256B3F470();
      os_log_type_t v48 = sub_256B3F9F0();
      if (sub_256B3E0EC(v48))
      {
        uint64_t v49 = (_WORD *)sub_256A4AA84();
        sub_256B3EE30(v49);
        sub_256B3E920();
        sub_256B3EF28(v50, v51, v52, "requesting resource bundle containers");
        sub_256A4A158();
      }

      uint64_t v129 = sub_256A49FB0;
      uint64_t v130 = v44;
      v126[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v127 = sub_256B340E4;
      uint64_t v128 = &unk_2706043E0;
      _Block_copy(v126);
      sub_256B3E6B4();
      swift_retain();
      uint64_t v53 = swift_release();
      sub_256B3EDD0(v53, sel_resourceBundleContainersWith_);
      _Block_release(v47);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_256A4A04C();
      uint64_t v32 = (void *)*v32;
      if (!v32) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v54 = v32;
      sub_256B3E57C();
      sub_256B3E480();
      if ((v20 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_256B3E498((uint64_t)&a9);
      uint64_t v20 = sub_256A46E9C(v55, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E01C();
      v56();
      char v57 = v32;
      id v58 = v32;
      id v59 = (void *)sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E0EC(v60))
      {
        uint64_t v20 = sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3E18C(v61);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        *(void *)(v20 + 4) = sub_256B3D990(v62, v63, v126);
        sub_256B3E29C();
        sub_256B3EACC();
        uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3EB60(v64);

        sub_256B3E528();
        sub_256B3E920();
        sub_256B3EF00(v65, v66, v67, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3E674();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v68();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v34) {
        goto LABEL_48;
      }
    }
    sub_256A4A04C();
    sub_256B3EB50();
    if (v20)
    {
      id v71 = (id)v20;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DEB8();
      v73(v72);
      sub_256B3ED90();
      id v74 = (id)v20;
      uint64_t v75 = (void *)sub_256B3F470();
      os_log_type_t v76 = sub_256B3F9D0();
      if (sub_256B3E3E8(v76))
      {
        sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v77 = sub_256A4A8A8();
        sub_256B3DD78(v77);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v78 = sub_256B3E5DC();
        uint64_t v80 = sub_256B3EA54(v78, v79, v123);
        sub_256B3E0B4(v80);
        swift_bridgeObjectRelease();
        sub_256B3E53C();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E1A8(v81);
        sub_256B3E694();

        sub_256B3DB1C();
        sub_256B3E5BC(&dword_256A36000, v82, v83, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      sub_256B3D480();
      v108();
      swift_willThrow();
      sub_256B3D9A8();
      sub_256B3E284();
      swift_release();
      sub_256B3D6CC();

      goto LABEL_3;
    }
    sub_256A4A04C();
    if (*(void *)(v121 + 16))
    {
      uint64_t v95 = qword_26B2B6348;
      swift_bridgeObjectRetain();
      if (v95 != -1) {
        swift_once();
      }
      sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v96 = sub_256B3DE94();
      v97(v96);
      uint64_t v98 = (void *)sub_256B3ED54();
      os_log_type_t v99 = sub_256B3F9C0();
      if (sub_256B3E50C(v99))
      {
        uint64_t v100 = sub_256A4EFE4();
        uint64_t v101 = sub_256A4A8A8();
        sub_256B3E7A4(v101);
        sub_256B3EA6C(4.8151e-34);
        sub_256A4A04C();
        uint64_t v102 = sub_256B3EBD0();
        uint64_t v104 = sub_256B3D990(v102, v103, &v124);
        sub_256B3DDE4(v104);
        swift_bridgeObjectRelease();
        *(_WORD *)(v100 + 12) = 2048;
        sub_256B3D710((uint64_t)&v132);
        sub_256B3E59C(&dword_256A36000, v105, v106, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3E040();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v107();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3D480();
        v117();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3ED6C();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v122, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3E0E0();
    v109();
    uint64_t v110 = (void *)sub_256B3F470();
    os_log_type_t v111 = sub_256B3F9D0();
    if (sub_256B3DD20(v111))
    {
      sub_256A4EFE4();
      uint64_t v112 = sub_256A4A8A8();
      sub_256B3E7A4(v112);
      sub_256B3DD3C(4.8151e-34);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v113 = sub_256B3DAE8();
      sub_256B3D990(v113, v114, &v124);
      sub_256B3DA9C();
      sub_256B3E29C();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v115, v116, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E41C();
    }
    else
    {

      sub_256B3E634();
    }
    sub_256B3D480();
    v118();
    sub_256B3E4C8();
    uint64_t v119 = sub_256A6E4C0();
    sub_256B3DAB4(v119, v120);
    swift_release();
    sub_256B3E284();
  }
  swift_release();
  sub_256B3D6CC();

LABEL_3:
  sub_256B3E4E0();
  sub_256B3D868();
}

void sub_256B32520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256B3D884();
  a19 = v25;
  a20 = v26;
  uint64_t v123 = sub_256B3E458();
  sub_256A49FB8();
  MEMORY[0x270FA5388](v27);
  sub_256B3E1E8();
  MEMORY[0x270FA5388](v28);
  sub_256B3DD68();
  MEMORY[0x270FA5388](v29);
  sub_256B3D950();
  MEMORY[0x270FA5388](v30);
  sub_256B3DAD4();
  MEMORY[0x270FA5388](v31);
  sub_256B3E088();
  sub_256B3EEAC();
  uint64_t v32 = v21;
  if (v21) {
    goto LABEL_2;
  }
  sub_256B3DB58();
  if (!v33)
  {
    sub_256A4993C();
    uint64_t v69 = sub_256A6E4C0();
    sub_256B3DE44(v69, v70);
LABEL_2:
    os_unfair_lock_unlock(v22);
    goto LABEL_3;
  }
  sub_256B3E4EC(v33);
  sub_256B3EE00();
  sub_256B3D68C();
  sub_256B3DBB8();
  if (v34)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
LABEL_28:
    sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    uint64_t v84 = sub_256B3DEDC();
    v85(v84);
    sub_256B3ED3C();
    uint64_t v86 = v32;
    uint64_t v87 = sub_256B3F470();
    os_log_type_t v88 = sub_256B3F9D0();
    if (sub_256B3EA7C(v88))
    {
      sub_256A4A8A8();
      sub_256B3D6B0();
      uint64_t v89 = sub_256A4A8A8();
      sub_256B3DE60(v89);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v90 = sub_256B3EA30();
      uint64_t v92 = sub_256B3EA54(v90, v91, v126);
      sub_256B3DE14(v92);
      swift_bridgeObjectRelease();
      sub_256B3E55C();
      uint64_t v93 = _swift_stdlib_bridgeErrorToNSError();
      sub_256B3E05C(v93);
      sub_256B3EEC4();

      sub_256B3DA5C();
      sub_256B3DC90(&dword_256A36000, v87, v24, "%s sync: connection error during call: %@ reached max num connection attempts: %lu");
      sub_256A39D2C(&qword_26B2B60C8);
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256B3DDA0();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E434();
    }
    else
    {

      sub_256B3E648();
    }
    sub_256B3D480();
    v94();
    sub_256B3D820();
    swift_release();
    sub_256B3E284();
  }
  else
  {
    sub_256B3DC64();
    v35.n128_u64[0] = 136315650;
    sub_256B3ED30(v35);
    sub_256B3E404();
    while (1)
    {
      uint64_t v132 = v36;
      uint64_t v37 = sub_256B3D7A8();
      uint64_t v38 = sub_256B3DE84(v37);
      uint64_t v130 = sub_256B37490;
      uint64_t v131 = v38;
      v127[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v128 = sub_256B371E0;
      uint64_t v129 = &unk_2706046B0;
      _Block_copy(v127);
      sub_256B3D844();
      uint64_t v39 = swift_release();
      id v40 = sub_256B3EDE8(v39, sel_synchronousRemoteObjectProxyWithErrorHandler_);
      sub_256B3EE18();
      uint64_t v41 = sub_256B3D7A8();
      sub_256B3EE3C(v41);
      uint64_t v42 = sub_256B3D7DC();
      sub_256B3E44C(v42);
      uint64_t v43 = sub_256B3DCF0();
      sub_256B3EE54(v43);
      uint64_t v44 = sub_256B3DCF0();
      *(void *)(v44 + 16) = sub_256B3D45C;
      *(void *)(v44 + 24) = v20;
      uint64_t v45 = qword_26B2B61E8;
      swift_unknownObjectRetain();
      sub_256B3DD4C();
      sub_256B3EAE8();
      swift_retain();
      if (v45 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_256B3EBC4();
      sub_256A46E9C(v46, (uint64_t)qword_26B2C3FE0);
      uint64_t v47 = (void *)sub_256B3F470();
      os_log_type_t v48 = sub_256B3F9F0();
      if (sub_256B3E0EC(v48))
      {
        uint64_t v49 = (_WORD *)sub_256A4AA84();
        sub_256B3EE30(v49);
        sub_256B3E920();
        sub_256B3EF28(v50, v51, v52, "calling siriResourceAvailability()");
        sub_256A4A158();
      }

      uint64_t v130 = sub_256A49FB0;
      uint64_t v131 = v44;
      v127[0] = MEMORY[0x263EF8330];
      sub_256B3E030();
      uint64_t v128 = (void (*)(uint64_t, void *))sub_256B340C8;
      uint64_t v129 = &unk_270604070;
      _Block_copy(v127);
      sub_256B3E6B4();
      swift_retain();
      uint64_t v53 = swift_release();
      sub_256B3EDD0(v53, sel_siriResourceAvailabilityWith_);
      _Block_release(v47);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_256A4A04C();
      uint64_t v32 = (void *)*v32;
      if (!v32) {
        break;
      }
      sub_256B3E4A4();
      uint64_t v54 = v32;
      sub_256B3E57C();
      sub_256B3E480();
      if ((v20 & 1) == 0)
      {
        if (qword_26B2B6348 != -1) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_256B3E498((uint64_t)&a9);
      uint64_t v20 = sub_256A46E9C(v55, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      sub_256B3E01C();
      v56();
      char v57 = v32;
      id v58 = v32;
      id v59 = (void *)sub_256B3F470();
      os_log_type_t v60 = sub_256B3F9D0();
      if (sub_256B3E0EC(v60))
      {
        uint64_t v20 = sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v61 = sub_256A4A8A8();
        sub_256B3E18C(v61);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v62 = sub_256B3DAE8();
        *(void *)(v20 + 4) = sub_256B3D990(v62, v63, v127);
        sub_256B3E29C();
        sub_256B3EACC();
        uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3EB60(v64);

        sub_256B3E528();
        sub_256B3E920();
        sub_256B3EF00(v65, v66, v67, "%s sync: connection error during call: %@, num connection attempts: %lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3E674();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      sub_256B3D480();
      v68();
      sub_256B3D9A8();
      sub_256B3E140();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3DBB8();
      if (v34) {
        goto LABEL_48;
      }
    }
    sub_256A4A04C();
    sub_256B3EB50();
    if (v20)
    {
      id v71 = (id)v20;
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v72 = sub_256B3DEB8();
      v73(v72);
      sub_256B3ED90();
      id v74 = (id)v20;
      uint64_t v75 = (void *)sub_256B3F470();
      os_log_type_t v76 = sub_256B3F9D0();
      if (sub_256B3E3E8(v76))
      {
        sub_256A4A8A8();
        sub_256B3D808();
        uint64_t v77 = sub_256A4A8A8();
        sub_256B3DD78(v77);
        id v23 = &qword_269F78AD0;
        sub_256A4A04C();
        uint64_t v78 = sub_256B3E5DC();
        uint64_t v80 = sub_256B3EA54(v78, v79, v124);
        sub_256B3E0B4(v80);
        swift_bridgeObjectRelease();
        sub_256B3E53C();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        sub_256B3E1A8(v81);
        sub_256B3E694();

        sub_256B3DB1C();
        sub_256B3E5BC(&dword_256A36000, v82, v83, "%s sync: method error during call: %@, num connection attempts:%lu");
        sub_256A39D2C(&qword_26B2B60C8);
        sub_256B3DD08();
        sub_256A4A158();
        sub_256B3DD08();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      sub_256B3D480();
      v109();
      swift_willThrow();
      sub_256B3D9A8();
      sub_256B3E284();
      swift_release();
      sub_256B3D6CC();

      goto LABEL_3;
    }
    sub_256A4A04C();
    if (*(void *)(v122 + 16))
    {
      id v95 = *(id *)(v122 + 16);
      sub_256B3EE48();
      if (!v96) {
        swift_once();
      }
      sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v97 = sub_256B3DE94();
      v98(v97);
      os_log_type_t v99 = (void *)sub_256B3ED54();
      os_log_type_t v100 = sub_256B3F9C0();
      if (sub_256B3E50C(v100))
      {
        uint64_t v101 = sub_256A4EFE4();
        uint64_t v102 = sub_256A4A8A8();
        sub_256B3E7A4(v102);
        sub_256B3EA6C(4.8151e-34);
        sub_256A4A04C();
        uint64_t v103 = sub_256B3EBD0();
        uint64_t v105 = sub_256B3D990(v103, v104, &v125);
        sub_256B3DDE4(v105);
        swift_bridgeObjectRelease();
        *(_WORD *)(v101 + 12) = 2048;
        sub_256B3D710((uint64_t)&v133);
        sub_256B3E59C(&dword_256A36000, v106, v107, "%s sync: method returned non-nil result, num connection attempts:%lu");
        sub_256B3E040();
        sub_256A4A158();
        sub_256A4A158();

        swift_unknownObjectRelease();
        sub_256B3E810();
        sub_256B3D480();
        v108();
        sub_256B3D9A8();
        sub_256B3E4BC();
      }
      else
      {

        swift_unknownObjectRelease();
        sub_256B3D480();
        v118();
        sub_256B3D9A8();
      }
      swift_release();
      sub_256B3D6CC();
      swift_unknownObjectRelease();
      sub_256B3ED6C();
      goto LABEL_3;
    }
    if (qword_26B2B6348 != -1) {
      swift_once();
    }
    sub_256A46E9C(v123, (uint64_t)qword_26B2B63D0);
    sub_256A4A04C();
    sub_256B3E0E0();
    v110();
    os_log_type_t v111 = (void *)sub_256B3F470();
    os_log_type_t v112 = sub_256B3F9D0();
    if (sub_256B3DD20(v112))
    {
      sub_256A4EFE4();
      uint64_t v113 = sub_256A4A8A8();
      sub_256B3E7A4(v113);
      sub_256B3DD3C(4.8151e-34);
      id v23 = &qword_269F78AD0;
      sub_256A4A04C();
      uint64_t v114 = sub_256B3DAE8();
      sub_256B3D990(v114, v115, &v125);
      sub_256B3DA9C();
      sub_256B3E29C();
      sub_256B3D4C8();
      sub_256B3D9C0(&dword_256A36000, v116, v117, "%s sync: throwing neither result or error returned, num connection attempts:%lu");
      sub_256B3E040();
      sub_256A4A158();
      sub_256A4A158();

      sub_256B3E41C();
    }
    else
    {

      sub_256B3E634();
    }
    sub_256B3D480();
    v119();
    sub_256B3E4C8();
    uint64_t v120 = sub_256A6E4C0();
    sub_256B3DAB4(v120, v121);
    swift_release();
    sub_256B3E284();
  }
  swift_release();
  sub_256B3D6CC();

LABEL_3:
  sub_256B3E4E0();
  sub_256B3D868();
}

void XPCServiceClientConnection.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_256B3D884();
  a19 = v24;
  a20 = v25;
  uint64_t v169 = v21;
  uint64_t v27 = v26;
  uint64_t v161 = v28;
  uint64_t v160 = v29;
  uint64_t v145 = v30;
  os_log_t v162 = (os_log_t)sub_256B3FA90();
  sub_256A49FB8();
  uint64_t v149 = v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v148 = (char *)v144 - v33;
  sub_256A9FC2C();
  uint64_t v147 = v34;
  MEMORY[0x270FA5388](v35);
  sub_256A4A500();
  uint64_t v146 = v37 - v36;
  uint64_t v38 = sub_256B3F4A0();
  sub_256A49FB8();
  id v168 = v39;
  MEMORY[0x270FA5388](v40);
  sub_256B3EC78();
  sub_256B3EE60();
  MEMORY[0x270FA5388](v41);
  sub_256B3EE60();
  MEMORY[0x270FA5388](v42);
  sub_256B3DDD0();
  MEMORY[0x270FA5388](v43);
  sub_256B3D950();
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (void *)((char *)v144 - v45);
  uint64_t v47 = *(void *)(v20 + 16);
  uint64_t v163 = v27;
  v170[2] = v27;
  uint64_t v171 = v20;
  sub_256B3F0EC();
  uint64_t v49 = *(NSObject **)(v48 + 80);
  sub_256B3F0EC();
  uint64_t v51 = *(void *)(v50 + 88);
  uint64_t v52 = type metadata accessor for XPCServiceClientConnection.State();
  uint64_t v53 = sub_256A49E98(0, &qword_269F7CCD8);
  uint64_t v54 = v169;
  sub_256B3B340((void (*)(uint64_t))sub_256B3D370, (uint64_t)v170, v47, v52, v53);
  if (!v54)
  {
    id v55 = v168;
    uint64_t v155 = v20;
    v144[3] = v46;
    v144[4] = v22;
    v144[2] = v23;
    v144[1] = 0;
    uint64_t v169 = v49;
    uint64_t v159 = v51;
    id v56 = (void *)v175[0];
    sub_256B3D68C();
    sub_256B3DBB8();
    if (v59)
    {
LABEL_11:
      __break(1u);
    }
    else
    {
      uint64_t v158 = v176;
      uint64_t v157 = (void (**)(NSObject *, uint64_t))(v159 + 56);
      uint64_t v156 = (uint64_t)v55 + 8;
      uint64_t v152 = v159 + 24;
      *(void *)&long long v58 = 136315650;
      long long v151 = v58;
      uint64_t v150 = MEMORY[0x263F8EE58] + 8;
      uint64_t v153 = v56;
      uint64_t v154 = v38;
      while (1)
      {
        uint64_t v23 = v38;
        uint64_t v177 = v57;
        uint64_t v60 = sub_256B3D7DC();
        *(void *)(v60 + 16) = 0;
        v176[2] = sub_256B37490;
        v176[3] = v60;
        v175[0] = MEMORY[0x263EF8330];
        v175[1] = 1107296256;
        v176[0] = sub_256B371E0;
        v176[1] = &unk_2706080F8;
        uint64_t v61 = _Block_copy(v175);
        uint64_t v167 = v60;
        swift_retain();
        swift_release();
        uint64_t v46 = v56;
        id v62 = objc_msgSend(v56, sel_synchronousRemoteObjectProxyWithErrorHandler_, v61);
        _Block_release(v61);
        uint64_t v49 = sub_256B3D7DC();
        v49[2].Class isa = 0;
        sub_256B3EBC4();
        uint64_t v63 = swift_allocBox();
        uint64_t v64 = v163;
        sub_256A46F7C(v65, 1, 1, (uint64_t)v163);
        uint64_t v66 = (void *)swift_allocObject();
        v66[2] = v169;
        v66[3] = v64;
        uint64_t v51 = v159;
        v66[4] = v159;
        v66[5] = v63;
        v66[6] = v49;
        swift_unknownObjectRetain();
        uint64_t v166 = v63;
        swift_retain();
        swift_retain();
        id v168 = v62;
        v160(v62, sub_256B37504, v66);
        swift_release();
        sub_256A4A04C();
        os_log_type_t v67 = *(void **)(v60 + 16);
        uint64_t v165 = v49;
        if (!v67) {
          break;
        }
        unint64_t v68 = (unint64_t)v177;
        id v69 = v67;
        id v70 = v67;
        BOOL v71 = sub_256B366D0(v67, v68);

        if (!v71)
        {
          (*v157)(v169, v51);
          id v97 = v67;
          id v98 = v67;
          os_log_type_t v99 = sub_256B3F470();
          os_log_type_t v100 = sub_256B3F9D0();
          int v101 = v100;
          if (os_log_type_enabled(v99, v100))
          {
            uint64_t v102 = sub_256A4A8A8();
            LODWORD(v163) = v101;
            uint64_t v103 = v102;
            uint64_t v104 = (void *)sub_256B3D808();
            uint64_t v164 = (void (*)(void, void, void))sub_256A4A8A8();
            v175[0] = v164;
            *(_DWORD *)uint64_t v103 = v151;
            uint64_t v161 = (uint8_t *)(v103 + 4);
            os_log_t v162 = v99;
            sub_256B3E470();
            uint64_t v106 = v105();
            uint64_t v174 = (void (*)(void, void, void))sub_256B3EE70(v106, v107);
            sub_256B3FAA0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v103 + 12) = 2112;
            id v108 = v67;
            uint64_t v109 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v174 = (void (*)(void, void, void))v109;
            sub_256B3FAA0();
            *uint64_t v104 = v109;

            *(_WORD *)(v103 + 22) = 2048;
            uint64_t v174 = (void (*)(void, void, void))v68;
            sub_256B3FAA0();
            os_log_t v110 = v162;
            _os_log_impl(&dword_256A36000, v162, (os_log_type_t)v163, "%s sync: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v103, 0x20u);
            sub_256A39D2C(&qword_26B2B60C8);
            sub_256B3DD08();
            sub_256A4A158();
            swift_arrayDestroy();
            sub_256A4A158();
            uint64_t v46 = v153;
            sub_256A4A158();
          }
          else
          {
          }
          sub_256B3EB04();
          sub_256A9FDB0();
          v111();
          sub_256B3EE88();
          swift_release();
          swift_unknownObjectRelease_n();
          swift_release();
          sub_256B3F0B4();

          goto LABEL_24;
        }
        uint64_t v23 = (uint64_t)v169;
        uint64_t v72 = sub_256B3EC04();
        v73(v72);
        id v74 = v67;
        id v75 = v67;
        uint64_t v49 = sub_256B3F470();
        os_log_type_t v76 = sub_256B3F9D0();
        if (os_log_type_enabled(v49, v76))
        {
          uint64_t v77 = sub_256A4A8A8();
          uint64_t v46 = (void *)sub_256B3D808();
          v175[0] = sub_256A4A8A8();
          *(_DWORD *)uint64_t v77 = v151;
          sub_256B3EC04();
          sub_256B3E470();
          uint64_t v79 = v78();
          *(void *)(v77 + 4) = sub_256B3EE70(v79, v80);
          swift_bridgeObjectRelease();
          *(_WORD *)(v77 + 12) = 2112;
          id v81 = v67;
          uint64_t v82 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v77 + 14) = v82;
          *uint64_t v46 = v82;

          *(_WORD *)(v77 + 22) = 2048;
          *(void *)(v77 + 24) = v177;
          _os_log_impl(&dword_256A36000, v49, v76, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v77, 0x20u);
          sub_256A39D2C(&qword_26B2B60C8);
          sub_256B3DD08();
          id v56 = v153;
          sub_256A4A158();
          swift_arrayDestroy();
          sub_256A4A158();
          sub_256A4A158();

          sub_256B3EC5C();
          sub_256B3EC4C();
          uint64_t v38 = v154;
          sub_256A9FDB0();
          v83();
          swift_release();
          swift_release();
          sub_256B3F0B4();
          swift_unknownObjectRelease();
        }
        else
        {

          sub_256B3EC5C();
          sub_256B3EC4C();
          uint64_t v38 = v154;
          sub_256A9FDB0();
          v84();
          swift_release();
          swift_release();
          sub_256B3F0B4();
          swift_unknownObjectRelease();
          id v56 = v46;
        }
        sub_256B3DBB8();
        if (v59) {
          goto LABEL_11;
        }
      }
    }
    sub_256A4A04C();
    Class isa = v49[2].isa;
    if (isa)
    {
      uint64_t v86 = *(void (**)(NSObject *, uint64_t))(v51 + 56);
      uint64_t v87 = isa;
      v86(v169, v51);
      sub_256B3E7BC();
      os_log_type_t v88 = isa;
      uint64_t v89 = sub_256B3F470();
      os_log_type_t v90 = sub_256B3F9D0();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = sub_256A4A8A8();
        uint64_t v163 = (void *)sub_256B3D808();
        uint64_t v164 = (void (*)(void, void, void))sub_256A4A8A8();
        uint64_t v174 = v164;
        *(_DWORD *)uint64_t v91 = v151;
        sub_256B3E470();
        uint64_t v93 = v92();
        uint64_t v173 = sub_256B3B598(v93, v94, (uint64_t *)&v174);
        sub_256B3FAA0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 12) = 2112;
        id v95 = isa;
        uint64_t v96 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v173 = v96;
        sub_256B3FAA0();
        *uint64_t v163 = v96;

        *(_WORD *)(v91 + 22) = 2048;
        uint64_t v173 = v23;
        sub_256B3FAA0();
        _os_log_impl(&dword_256A36000, v89, v90, "%s sync: method error during call: %@, num connection attempts:%lu", (uint8_t *)v91, 0x20u);
        sub_256A39D2C(&qword_26B2B60C8);
        swift_arrayDestroy();
        sub_256A4A158();
        swift_arrayDestroy();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      sub_256B3EC4C();
      sub_256B3D480();
      v128();
      sub_256B3EE88();
      swift_release();
      swift_unknownObjectRelease_n();
      swift_release();
      sub_256B3F0B4();
    }
    else
    {
      sub_256A4A04C();
      uint64_t v112 = v149;
      uint64_t v113 = (uint64_t)v148;
      os_log_t v114 = v162;
      sub_256A4AB70();
      v115();
      uint64_t v116 = v163;
      if (sub_256A480C4(v113, 1, (uint64_t)v163) == 1)
      {
        (*(void (**)(uint64_t, os_log_t))(v112 + 8))(v113, v114);
        uint64_t v117 = sub_256B3E960();
        v118(v117);
        uint64_t v119 = v177;
        uint64_t v120 = sub_256B3F470();
        os_log_type_t v121 = sub_256B3F9D0();
        int v122 = v121;
        if (os_log_type_enabled(v120, v121))
        {
          uint64_t v123 = sub_256A4EFE4();
          uint64_t v164 = (void (*)(void, void, void))v119;
          uint64_t v124 = (uint8_t *)v123;
          uint64_t v173 = sub_256A4A8A8();
          *(_DWORD *)uint64_t v124 = 136315394;
          LODWORD(v163) = v122;
          sub_256B3E470();
          uint64_t v126 = v125();
          uint64_t v172 = sub_256B3B598(v126, v127, &v173);
          uint64_t v46 = v153;
          sub_256B3FAA0();
          swift_bridgeObjectRelease();
          sub_256B3EFD4();
          sub_256B3EF98((uint64_t)&a11);
          sub_256B3FAA0();
          _os_log_impl(&dword_256A36000, v120, (os_log_type_t)v163, "%s sync: throwing neither result or error returned, num connection attempts:%lu", v124, 0x16u);
          swift_arrayDestroy();
          sub_256A4A158();
          sub_256A4A158();

          sub_256B3ECD4();
        }
        else
        {

          sub_256B3EB04();
        }
        sub_256A9FDB0();
        v140();
        sub_256A4993C();
        uint64_t v141 = sub_256A6E4C0();
        sub_256B3DBC4(v141, v142);
        swift_release();
        swift_unknownObjectRelease_n();
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v129 = v113;
        uint64_t v130 = v147 + 32;
        uint64_t v164 = *(void (**)(void, void, void))(v147 + 32);
        v164(v146, v129, v116);
        uint64_t v131 = sub_256B3E960();
        v132(v131);
        os_log_t v162 = v177;
        uint64_t v133 = sub_256B3F470();
        os_log_type_t v134 = sub_256B3F9C0();
        if (os_log_type_enabled(v133, v134))
        {
          uint64_t v135 = sub_256A4EFE4();
          uint64_t v147 = v130;
          uint64_t v136 = (uint8_t *)v135;
          uint64_t v173 = sub_256A4A8A8();
          *(_DWORD *)uint64_t v136 = 136315394;
          uint64_t v161 = v136 + 4;
          sub_256B3E470();
          uint64_t v138 = v137();
          uint64_t v172 = sub_256B3B598(v138, v139, &v173);
          sub_256B3FAA0();
          swift_bridgeObjectRelease();
          sub_256B3EFD4();
          sub_256B3EF98((uint64_t)&a9);
          sub_256B3FAA0();
          _os_log_impl(&dword_256A36000, v133, v134, "%s sync: method returned non-nil result, num connection attempts:%lu", v136, 0x16u);
          swift_arrayDestroy();
          sub_256A4A158();
          sub_256A4A158();

          sub_256B3EC5C();
          sub_256B3ECD4();
        }
        else
        {

          sub_256B3EC5C();
          sub_256B3EB04();
        }
        sub_256A9FDB0();
        v143();
        swift_unknownObjectRelease();
        v164(v145, v146, v163);
        swift_release();
        swift_release();
        swift_release();
      }
    }
  }
LABEL_24:
  sub_256B3D868();
}

uint64_t sub_256B340CC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_256B340FC(a1, a2, a3, (void (*)(void))type metadata accessor for ResourceContainer);
}

uint64_t sub_256B340E4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_256B340FC(a1, a2, a3, (void (*)(void))type metadata accessor for ResourceBundleContainer);
}

uint64_t sub_256B340FC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t v5 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    a4(0);
    sub_256B3F860();
  }
  swift_retain();
  id v6 = a3;
  uint64_t v7 = sub_256B3F124();
  v5(v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t XPCServiceClientConnection.callAsync<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  sub_256B0DCA0();
  v5[8] = v6;
  return sub_256A4A0B4((uint64_t)sub_256B341C0);
}

uint64_t sub_256B341C0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[6];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = type metadata accessor for XPCServiceClientConnection.State();
  uint64_t v6 = sub_256A49E98(0, &qword_269F7CCD8);
  sub_256B3B340((void (*)(uint64_t))sub_256B3D370, v4, v3, v5, v6);
  swift_task_dealloc();
  v0[9] = v0[2];
  uint64_t v7 = swift_task_alloc();
  v0[10] = v7;
  sub_256B3EFAC(v7, v8, v9, v10, v11, v12, v13, v14, v15);
  char v16 = (void *)swift_task_alloc();
  v0[11] = v16;
  *char v16 = v0;
  v16[1] = sub_256B34398;
  sub_256B3EDA8();
  return MEMORY[0x270FA2360](v17);
}

uint64_t sub_256B34398()
{
  sub_256A4A1FC();
  sub_256A49FD4();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_256A4A0C0();
  *uint64_t v5 = v4;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_256B344E4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = sub_256B34484;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_256B34484()
{
  sub_256A4A1FC();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_256B344E4()
{
  sub_256A4A1FC();

  swift_task_dealloc();
  sub_256A4AAB4();
  return v1();
}

void sub_256B34548(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t static XPCService.respectedEntitlements.getter()
{
  sub_256A4A3C8();
  sub_256A39D2C(&qword_26B2B50D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_256B57080;
  *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 32))(v1, v0);
  *(void *)(inited + 40) = v3;
  uint64_t v4 = sub_256A3CF68(inited);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 40))(v1, v0);
  return sub_256B34678(v5, v4);
}

uint64_t sub_256B34678(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_256A39684(&v17, v15, v16);
    unint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_256B347FC()
{
  if (qword_26B2B63F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, qword_26B2B63E8);
  if (qword_26B2B63C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = *((void *)off_26B2B63C8 + 2);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain() + 48;
    do
    {
      uint64_t v3 = *(void *)(v2 - 16);
      uint64_t v4 = *(void *)(v2 - 8);
      v2 += 24;
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)sub_256B3F960();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setClasses_forSelector_argumentIndex_ofReply_, v5, v3, v4, 1);

      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v0;
}

id static XPCService.xpcInterface()()
{
  sub_256A4A3C8();
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(v2 + 16))();
  id v4 = objc_msgSend(self, sel_interfaceWithProtocol_, v3);

  uint64_t v11 = v1;
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 48))(v1, v0);
  uint64_t v5 = *(void *)(v12 + 16);
  if (v5)
  {
    uint64_t v6 = v12 + 48;
    do
    {
      uint64_t v7 = *(void *)(v6 - 16);
      uint64_t v8 = *(void *)(v6 - 8);
      v6 += 24;
      swift_bridgeObjectRetain();
      unint64_t v9 = (void *)sub_256B3F960();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setClasses_forSelector_argumentIndex_ofReply_, v9, v7, v8, 1);

      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(id, uint64_t))(v0 + 64))(v4, v11);
  return v4;
}

void *XPCServiceClientConnection.init(delegate:)()
{
  sub_256A4A3C8();
  v1[3] = 2;
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = 0;
  uint64_t v2 = type metadata accessor for XPCServiceClientConnection.State();
  v1[2] = sub_256B34B98((uint64_t)&v4, v2);
  v1[5] = v0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_256B34B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  uint64_t v7 = sub_256B3B454((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t XPCServiceClientConnection.deinit()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_256B3ED0C();
  void v7[2] = *(void *)(v2 + 80);
  sub_256B3ED0C();
  v7[3] = *(void *)(v3 + 88);
  uint64_t v4 = type metadata accessor for XPCServiceClientConnection.State();
  uint64_t v5 = sub_256A39D2C(&qword_26B2B5D88);
  sub_256B3B340((void (*)(uint64_t))sub_256B3BD00, (uint64_t)v7, v1, v4, v5);
  swift_release();
  sub_256B3BD54(v0 + 32);
  return v0;
}

uint64_t XPCServiceClientConnection.__deallocating_deinit()
{
  XPCServiceClientConnection.deinit();
  uint64_t v0 = sub_256B3EF18();

  return MEMORY[0x270FA0228](v0, v1, v2);
}

void sub_256B34D64()
{
  sub_256B3D884();
  uint64_t v3 = v2;
  uint64_t v4 = sub_256B3F4A0();
  sub_256A49FB8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_256B3EC78();
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v40 - v10;
  if (MEMORY[0x25A2AC000](v0 + 32))
  {
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
    if (!v1 && !*v3)
    {
      if (qword_26B2B6348 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_256A46E9C(v4, (uint64_t)qword_26B2B63D0);
      sub_256A4A04C();
      uint64_t v15 = *(void *)(v6 + 16);
      uint64_t v44 = v14;
      uint64_t v43 = v6 + 16;
      uint64_t v42 = v15;
      sub_256A4AB70();
      v16();
      uint64_t v17 = sub_256B3F470();
      os_log_type_t v18 = sub_256B3F9F0();
      LODWORD(v48) = v18;
      BOOL v19 = os_log_type_enabled(v17, v18);
      uint64_t v45 = v6;
      if (v19)
      {
        os_log_t v47 = v17;
        uint64_t v20 = (uint8_t *)sub_256A4A734();
        uint64_t v41 = sub_256A4A8A8();
        uint64_t v50 = v41;
        uint64_t v46 = v20;
        *(_DWORD *)uint64_t v20 = 136315138;
        v40[1] = v20 + 4;
        sub_256A4A04C();
        uint64_t v22 = qword_269F78AD0;
        uint64_t v21 = off_269F78AD8;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_256B3B598(v22, (unint64_t)v21, &v50);
        sub_256B3FAA0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_256A36000, v47, (os_log_type_t)v48, "%s: establishing connection.", v46, 0xCu);
        swift_arrayDestroy();
        sub_256A4A158();
        sub_256A4A158();
      }
      else
      {
      }
      uint64_t v48 = *(void (**)(char *, uint64_t))(v6 + 8);
      v48(v11, v4);
      sub_256A4A04C();
      id v23 = objc_allocWithZone(MEMORY[0x263F08D70]);
      swift_bridgeObjectRetain();
      uint64_t v24 = (void *)sub_256B3F690();
      swift_bridgeObjectRelease();
      id v25 = objc_msgSend(v23, sel_initWithMachServiceName_options_, v24, 0);

      *uint64_t v3 = v25;
      if (!v25)
      {
        uint64_t v32 = v49;
        sub_256A4AB70();
        v33();
        uint64_t v34 = sub_256B3F470();
        os_log_type_t v35 = sub_256B3F9D0();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = sub_256A4A734();
          uint64_t v50 = sub_256A4A8A8();
          *(_DWORD *)uint64_t v36 = 136315138;
          os_log_t v47 = (os_log_t)(v36 + 4);
          uint64_t v37 = qword_269F78AD0;
          uint64_t v38 = off_269F78AD8;
          swift_bridgeObjectRetain();
          uint64_t v56 = sub_256B3B598(v37, (unint64_t)v38, &v50);
          sub_256B3FAA0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_256A36000, v34, v35, "%s: did not create connection.", (uint8_t *)v36, 0xCu);
          sub_256B3DD08();
          sub_256A4A158();
          sub_256A4A158();
          swift_unknownObjectRelease();

          uint64_t v39 = v49;
        }
        else
        {

          swift_unknownObjectRelease();
          uint64_t v39 = v32;
        }
        v48(v39, v4);
        goto LABEL_12;
      }
      id v26 = v25;
      id v27 = sub_256B347FC();
      objc_msgSend(v26, sel_setRemoteObjectInterface_, v27);

      uint64_t v28 = sub_256B3D7DC();
      swift_weakInit();
      uint64_t v54 = sub_256B3CE24;
      uint64_t v55 = v28;
      uint64_t v50 = MEMORY[0x263EF8330];
      uint64_t v51 = 1107296256;
      uint64_t v52 = sub_256A4E64C;
      uint64_t v53 = &unk_270604098;
      uint64_t v29 = _Block_copy(&v50);
      swift_release();
      objc_msgSend(v26, sel_setInterruptionHandler_, v29);
      _Block_release(v29);
      uint64_t v30 = sub_256B3D7DC();
      swift_weakInit();
      uint64_t v54 = sub_256B3CE2C;
      uint64_t v55 = v30;
      uint64_t v50 = MEMORY[0x263EF8330];
      uint64_t v51 = 1107296256;
      uint64_t v52 = sub_256A4E64C;
      uint64_t v53 = &unk_2706040C0;
      uint64_t v31 = _Block_copy(&v50);
      swift_release();
      objc_msgSend(v26, sel_setInvalidationHandler_, v31);
      _Block_release(v31);
      objc_msgSend(v26, sel_resume);
    }
    swift_unknownObjectRelease();
LABEL_12:
    sub_256B3D868();
    return;
  }
  sub_256B3FC70();
  __break(1u);
}

uint64_t sub_256B353C4(id *a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = sub_256B3F4A0();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v45 - v9;
  if (MEMORY[0x25A2AC000](v1 + 4))
  {
    uint64_t v11 = v1[5];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
    if (v2 || *a1) {
      return swift_unknownObjectRelease();
    }
    int64_t v13 = *(NSObject **)(v4 + 88);
    Class isa = (void (*)(void))v13[7].isa;
    uint64_t v51 = *(void *)(v4 + 80);
    uint64_t v52 = v13;
    uint64_t v48 = (void (*)(uint64_t, NSObject *))isa;
    os_log_t v49 = v13 + 7;
    isa();
    uint64_t v15 = sub_256B3F470();
    os_log_type_t v16 = sub_256B3F9F0();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_t v50 = v15;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      os_log_t v47 = (uint8_t *)v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      aBlock = (void (*)(void, void))v18;
      v45[1] = v17 + 4;
      uint64_t v46 = v17;
      uint64_t v19 = ((uint64_t (*)(void))v52[3].isa)();
      uint64_t v61 = sub_256B3B598(v19, v20, (uint64_t *)&aBlock);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      uint64_t v15 = v50;
      uint64_t v21 = v46;
      _os_log_impl(&dword_256A36000, v50, v16, "%s: establishing connection.", v46, 0xCu);
      uint64_t v22 = v47;
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v22, -1, -1);
      MEMORY[0x25A2ABEE0](v21, -1, -1);
    }

    os_log_t v50 = *(os_log_t *)(v53 + 8);
    ((void (*)(char *, uint64_t))v50)(v10, v54);
    sub_256A49E98(0, &qword_269F7CCD8);
    id v23 = (uint64_t (*)(void))v52[3].isa;
    uint64_t v24 = v23();
    id v26 = sub_256B35A7C(v24, v25, 0);

    *a1 = v26;
    if (v26)
    {
      id v27 = v26;
      uint64_t v29 = v51;
      uint64_t v28 = v52;
      id v30 = static XPCService.xpcInterface()();
      objc_msgSend(v27, sel_setRemoteObjectInterface_, v30);

      uint64_t v31 = swift_allocObject();
      swift_weakInit();
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = v29;
      v32[3] = v28;
      v32[4] = v31;
      char v59 = sub_256B3CCC4;
      uint64_t v60 = v32;
      aBlock = (void (*)(void, void))MEMORY[0x263EF8330];
      uint64_t v56 = 1107296256;
      uint64_t v57 = sub_256A4E64C;
      long long v58 = &unk_270604660;
      uint64_t v33 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v27, sel_setInterruptionHandler_, v33);
      _Block_release(v33);
      uint64_t v34 = swift_allocObject();
      swift_weakInit();
      os_log_type_t v35 = (void *)swift_allocObject();
      v35[2] = v29;
      v35[3] = v28;
      v35[4] = v34;
      char v59 = sub_256B3CCF8;
      uint64_t v60 = v35;
      aBlock = (void (*)(void, void))MEMORY[0x263EF8330];
      uint64_t v56 = 1107296256;
      uint64_t v57 = sub_256A4E64C;
      long long v58 = &unk_270604688;
      uint64_t v36 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v27, sel_setInvalidationHandler_, v36);
      _Block_release(v36);
      objc_msgSend(v27, sel_resume);

      return swift_unknownObjectRelease();
    }
    v48(v51, v52);
    uint64_t v38 = sub_256B3F470();
    os_log_type_t v39 = sub_256B3F9D0();
    if (os_log_type_enabled(v38, v39))
    {
      os_log_t v49 = v38;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = (void (*)(uint64_t, NSObject *))swift_slowAlloc();
      aBlock = (void (*)(void, void))v48;
      *(_DWORD *)uint64_t v40 = 136315138;
      os_log_t v47 = v40 + 4;
      uint64_t v41 = v23();
      uint64_t v61 = sub_256B3B598(v41, v42, (uint64_t *)&aBlock);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      os_log_t v43 = v49;
      _os_log_impl(&dword_256A36000, v49, v39, "%s: did not create connection.", v40, 0xCu);
      uint64_t v44 = v48;
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v44, -1, -1);
      MEMORY[0x25A2ABEE0](v40, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return ((uint64_t (*)(char *, uint64_t))v50)(v8, v54);
  }
  else
  {
    uint64_t result = sub_256B3FC70();
    __break(1u);
  }
  return result;
}

id sub_256B35A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_256B3F690();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

uint64_t sub_256B35AF8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 16);
    swift_retain();
    os_unfair_lock_lock(v1 + 6);
    sub_256B35B98();
    os_unfair_lock_unlock(v1 + 6);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_256B35B98()
{
  uint64_t v1 = sub_256B3F4A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2B6348 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_256A46E9C(v1, (uint64_t)qword_26B2B63D0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  id v6 = sub_256B3F470();
  os_log_type_t v7 = sub_256B3F9D0();
  if (os_log_type_enabled(v6, v7))
  {
    id v13[2] = v0;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    v13[1] = v8 + 4;
    swift_beginAccess();
    uint64_t v11 = qword_269F78AD0;
    uint64_t v10 = off_269F78AD8;
    swift_bridgeObjectRetain();
    v13[3] = sub_256B3B598(v11, (unint64_t)v10, &v14);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v6, v7, "%s: Connection to XPC Server interrupted.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v9, -1, -1);
    MEMORY[0x25A2ABEE0](v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_256B35E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_256B3F4A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  uint64_t v10 = sub_256B3F470();
  os_log_type_t v11 = sub_256B3F9D0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v6;
    int64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v3;
    uint64_t v15 = v14;
    uint64_t v20 = v7;
    *(_DWORD *)int64_t v13 = 136315138;
    uint64_t v24 = v14;
    v19[1] = v13 + 4;
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    uint64_t v23 = sub_256B3B598(v16, v17, &v24);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v10, v11, "%s: Connection to XPC Server interrupted.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v15, -1, -1);
    MEMORY[0x25A2ABEE0](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_256B36058()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
    sub_256B361E8((id *)(v1 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_256B360F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void *)(result + 16);
    MEMORY[0x270FA5388](result);
    v10[2] = a2;
    v10[3] = a3;
    uint64_t v9 = type metadata accessor for XPCServiceClientConnection.State();
    swift_retain();
    sub_256B3B340(a4, (uint64_t)v10, v8, v9, MEMORY[0x263F8EE60] + 8);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_256B361E8(id *a1)
{
  uint64_t v3 = sub_256B3F4A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2B6348 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_256A46E9C(v3, (uint64_t)qword_26B2B63D0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = sub_256B3F470();
  os_log_type_t v9 = sub_256B3F9F0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v18 = v1;
    uint64_t v10 = swift_slowAlloc();
    unint64_t v17 = a1;
    os_log_type_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v12;
    *(_DWORD *)os_log_type_t v11 = 136315138;
    uint64_t v16 = v11 + 4;
    swift_beginAccess();
    uint64_t v13 = qword_269F78AD0;
    uint64_t v14 = off_269F78AD8;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_256B3B598(v13, (unint64_t)v14, &v20);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v8, v9, "%s: Connection to XPC Server invalidated.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v12, -1, -1);
    uint64_t v15 = v11;
    a1 = v17;
    MEMORY[0x25A2ABEE0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = 0;
}

void sub_256B36474(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_256B3F4A0();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  uint64_t v10 = sub_256B3F470();
  os_log_type_t v11 = sub_256B3F9F0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v3;
    uint64_t v15 = v14;
    uint64_t v20 = v7;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v25 = v14;
    uint64_t v19 = v13 + 4;
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    uint64_t v24 = sub_256B3B598(v16, v17, &v25);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v10, v11, "%s: Connection to XPC Server invalidated.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v15, -1, -1);
    uint64_t v18 = v13;
    a1 = v21;
    MEMORY[0x25A2ABEE0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  }

  *a1 = 0;
}

BOOL sub_256B366D0(void *a1, unint64_t a2)
{
  if (!a1) {
    return 0;
  }
  id v3 = a1;
  sub_256A39D2C((uint64_t *)&unk_26B2B5DA0);
  sub_256A49E98(0, &qword_26B2B5B50);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v4 = objc_msgSend(v14, sel_domain);
  uint64_t v5 = sub_256B3F6B0();
  uint64_t v7 = v6;

  if (v5 == sub_256B3F6B0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_256B3FEA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      return 0;
    }
  }
  id v11 = objc_msgSend(v14, sel_code);

  return v11 == (id)4097 && a2 < 2;
}

void XPCServiceClientConnection.call<A>(_:)()
{
  sub_256B3D884();
  int v101 = v1;
  uint64_t v4 = v3;
  uint64_t v99 = v5;
  id v98 = v6;
  uint64_t v81 = v7;
  uint64_t v8 = *v0;
  uint64_t v97 = sub_256B3F4A0();
  sub_256A49FB8();
  uint64_t v100 = v9;
  MEMORY[0x270FA5388](v10);
  sub_256B3EC78();
  sub_256B3EE60();
  MEMORY[0x270FA5388](v11);
  sub_256B3D950();
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)v80 - v13;
  sub_256A9FC2C();
  uint64_t v82 = v15;
  MEMORY[0x270FA5388](v16);
  sub_256A4A500();
  uint64_t v19 = (v18 - v17);
  uint64_t v20 = v0[2];
  v102[2] = v4;
  uint64_t v103 = v0;
  uint64_t v21 = *(void *)(v8 + 80);
  uint64_t v22 = *(void *)(v8 + 88);
  uint64_t v23 = type metadata accessor for XPCServiceClientConnection.State();
  uint64_t v24 = sub_256A49E98(0, &qword_269F7CCD8);
  uint64_t v25 = v101;
  sub_256B3B340((void (*)(uint64_t))sub_256B3BD7C, (uint64_t)v102, v20, v23, v24);
  if (!v25)
  {
    uint64_t v92 = v0;
    v80[0] = 0;
    v80[1] = v2;
    id v96 = (id)v105[0];
    sub_256B3D68C();
    sub_256B3DBB8();
    if (v28)
    {
LABEL_11:
      __break(1u);
    }
    else
    {
      uint64_t v20 = (uint64_t)v19;
      uint64_t v29 = v22;
      unint64_t v94 = v106;
      id v30 = (void (**)(uint64_t, uint64_t))(v22 + 56);
      uint64_t v93 = v100 + 8;
      uint64_t v91 = v82 + 8;
      uint64_t v86 = v22 + 24;
      *(void *)&long long v27 = 136315650;
      long long v85 = v27;
      uint64_t v84 = MEMORY[0x263F8EE58] + 8;
      uint64_t v87 = v4;
      os_log_type_t v88 = v19;
      os_log_type_t v90 = v14;
      uint64_t v89 = (void (**)(uint64_t, uint64_t))(v22 + 56);
      uint64_t v83 = v22;
      while (1)
      {
        unint64_t v107 = v26;
        uint64_t v31 = sub_256B3D7DC();
        *(void *)(v31 + 16) = 0;
        uint64_t v32 = (void **)(v31 + 16);
        v106[2] = sub_256B37490;
        v106[3] = v31;
        v105[0] = MEMORY[0x263EF8330];
        v105[1] = 1107296256;
        v106[0] = sub_256B371E0;
        v106[1] = &unk_270604048;
        uint64_t v33 = _Block_copy(v105);
        uint64_t v100 = v31;
        swift_retain();
        swift_release();
        uint64_t v19 = objc_msgSend(v96, sel_synchronousRemoteObjectProxyWithErrorHandler_, v33);
        _Block_release(v33);
        uint64_t v34 = swift_unknownObjectRetain();
        int v101 = v19;
        ((void (*)(uint64_t))v98)(v34);
        sub_256A4A04C();
        os_log_type_t v35 = *v32;
        if (!v35) {
          break;
        }
        unint64_t v36 = v107;
        id v37 = v35;
        id v38 = v35;
        BOOL v39 = sub_256B366D0(v35, v36);

        if (!v39)
        {
          uint64_t v64 = sub_256B3ECB8();
          v65(v64);
          id v66 = v35;
          id v67 = v35;
          unint64_t v68 = sub_256B3F470();
          os_log_type_t v69 = sub_256B3F9D0();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = sub_256A4A8A8();
            id v95 = (void *)sub_256B3D808();
            uint64_t v99 = sub_256A4A8A8();
            sub_256B3F06C(v99);
            id v98 = v68;
            sub_256B3E470();
            uint64_t v72 = v71();
            uint64_t v104 = sub_256B3EE70(v72, v73);
            sub_256B3EF78();
            swift_bridgeObjectRelease();
            id v74 = (id)sub_256B3EFE8();
            uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v104 = v75;
            sub_256B3FAA0();
            *id v95 = v75;

            *(_WORD *)(v70 + 22) = 2048;
            uint64_t v104 = v36;
            sub_256B3FAA0();
            os_log_t v76 = v98;
            _os_log_impl(&dword_256A36000, v98, v69, "%s sync: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v70, 0x20u);
            sub_256A39D2C(&qword_26B2B60C8);
            sub_256B3DD08();
            sub_256A4A158();
            sub_256B3DDA0();
            sub_256A4A158();
            sub_256A4A158();
          }
          else
          {

            sub_256B3F0A0();
          }
          sub_256B3D480();
          v78();
          swift_willThrow();

          swift_unknownObjectRelease();
          sub_256A9FDB0();
          v79();
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_20;
        }
        (*v30)(v21, v29);
        id v40 = v35;
        id v41 = v35;
        uint64_t v19 = sub_256B3F470();
        os_log_type_t v42 = sub_256B3F9D0();
        if (os_log_type_enabled(v19, v42))
        {
          uint64_t v43 = sub_256A4A8A8();
          uint64_t v44 = (void *)sub_256B3D808();
          uint64_t v45 = sub_256A4A8A8();
          sub_256B3F06C(v45);
          sub_256B3E470();
          uint64_t v47 = v46();
          *(void *)(v43 + 4) = sub_256B3EE70(v47, v48);
          swift_bridgeObjectRelease();
          *(_WORD *)(v43 + 12) = 2112;
          id v49 = v35;
          uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v43 + 14) = v50;
          *uint64_t v44 = v50;

          *(_WORD *)(v43 + 22) = 2048;
          *(void *)(v43 + 24) = v107;
          _os_log_impl(&dword_256A36000, v19, v42, "%s sync: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v43, 0x20u);
          sub_256A39D2C(&qword_26B2B60C8);
          sub_256B3DDA0();
          uint64_t v20 = (uint64_t)v88;
          sub_256A4A158();
          swift_arrayDestroy();
          sub_256A4A158();
          uint64_t v4 = v87;
          sub_256A4A158();

          swift_unknownObjectRelease();
          sub_256B3D480();
          v51();
          sub_256A9FDB0();
          v52();
          swift_release();
          swift_unknownObjectRelease();
          uint64_t v29 = v83;
        }
        else
        {

          swift_unknownObjectRelease();
          sub_256B3D480();
          v53();
          sub_256A9FDB0();
          v54();
          swift_release();
          swift_unknownObjectRelease();
        }
        id v30 = v89;
        sub_256B3DBB8();
        if (v28) {
          goto LABEL_11;
        }
      }
    }
    uint64_t v55 = sub_256B3ECB8();
    v56(v55);
    uint64_t v57 = v107;
    long long v58 = sub_256B3F470();
    os_log_type_t v59 = sub_256B3F9C0();
    if (sub_256B3DB00(v59))
    {
      uint64_t v60 = sub_256A4EFE4();
      v105[0] = sub_256A4A8A8();
      *(_DWORD *)uint64_t v60 = 136315394;
      sub_256B3E470();
      uint64_t v62 = v61();
      uint64_t v104 = sub_256B3EE70(v62, v63);
      sub_256B3EF78();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2048;
      uint64_t v104 = v57;
      sub_256B3FAA0();
      _os_log_impl(&dword_256A36000, v58, (os_log_type_t)v19, "%s sync: method returned result, num connection attempts: %lu", (uint8_t *)v60, 0x16u);
      sub_256B3E040();
      uint64_t v4 = v87;
      sub_256A4A158();
      uint64_t v20 = (uint64_t)v88;
      sub_256A4A158();

      swift_unknownObjectRelease();
      sub_256B3EDC0();
    }
    else
    {

      swift_unknownObjectRelease();
      sub_256B3F0A0();
    }
    sub_256B3D480();
    v77();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v81, v20, v4);
    swift_release();
  }
LABEL_20:
  sub_256B3D868();
}

void sub_256B371E0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for XPCServiceClientConnection.State()
{
  return sub_256A9FB00();
}

id sub_256B37260(void *a1, uint64_t a2)
{
  sub_256B3EC34();
  id v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  return a1;
}

void sub_256B372AC()
{
  sub_256B3EB1C();
  *(void *)(v1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_256B3EC34();
  id v4 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = v2;
  id v5 = v2;
}

void sub_256B37320()
{
  sub_256B3EB1C();
  id v4 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v3;
  id v5 = v3;

  sub_256B3EC34();
  uint64_t v6 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = v2;
  id v7 = v2;
}

void sub_256B3738C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_256B3FA90();
  uint64_t v8 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v8, a1, v7);
  swift_beginAccess();
  uint64_t v9 = *(void **)(a4 + 16);
  *(void *)(a4 + 16) = a2;
  id v10 = a2;
}

uint64_t sub_256B37460()
{
  uint64_t v1 = sub_256B3EC8C();

  return MEMORY[0x270FA0238](v1, v2, v3);
}

id sub_256B37490(void *a1)
{
  return sub_256B37260(a1, v1);
}

uint64_t sub_256B374AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_256B374BC()
{
  return swift_release();
}

uint64_t sub_256B374C4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_256B37504(uint64_t a1, void *a2)
{
  sub_256B3738C(a1, a2, *(void *)(v2 + 40), *(void *)(v2 + 48));
}

id sub_256B37514@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = (id)sub_256B353C4(a1);
  if (!v2)
  {
    id v6 = *a1;
    if (*a1)
    {
      *a2 = v6;
      return v6;
    }
    else
    {
      sub_256A4993C();
      sub_256A6E4C0();
      *uint64_t v7 = 0;
      return (id)swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_256B3758C(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t, uint64_t (*)(), char *), void (*a5)(uint64_t, uint64_t (*)(), char *), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  sub_256B37624(v12, a2, a3, a1, a4, a5, a6);

  return swift_release();
}

uint64_t sub_256B37624(uint64_t a1, void *a2, void *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t (*)(), char *), void (*a6)(uint64_t, uint64_t (*)(), char *), uint64_t a7)
{
  os_log_type_t v59 = a6;
  uint64_t v60 = a2;
  uint64_t v12 = *a3;
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v13 = sub_256B3F8F0();
  sub_256A49FB8();
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t result = sub_256B3EC34();
  uint64_t v22 = *(void *)(a1 + 16);
  BOOL v23 = __CFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a1 + 16) = v24;
    uint64_t v53 = a7;
    uint64_t v46 = a1;
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v56 = v15 + 16;
    uint64_t v57 = v25;
    v25(v20, a4, v13);
    long long v58 = a5;
    uint64_t v49 = v13;
    uint64_t v50 = a4;
    uint64_t v26 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v27 = v17;
    uint64_t v55 = v17;
    uint64_t v28 = (v26 + 64) & ~v26;
    uint64_t v54 = v26 | 7;
    unint64_t v29 = (v27 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v30 = (void *)swift_allocObject();
    unint64_t v48 = v20;
    uint64_t v31 = v12;
    uint64_t v32 = v30;
    uint64_t v52 = *(void *)(v31 + 80);
    v30[2] = v52;
    long long v30[3] = a7;
    uint64_t v51 = *(void *)(v31 + 88);
    long long v30[4] = v51;
    v30[5] = a3;
    uint64_t v33 = v46;
    uint64_t v47 = a3;
    uint64_t v34 = v60;
    v30[6] = v46;
    v30[7] = v34;
    os_log_type_t v35 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v35((char *)v30 + v28, v20, v13);
    unint64_t v36 = (void (**)(uint64_t, uint64_t (*)(), char *))((char *)v32 + v29);
    *unint64_t v36 = a5;
    v36[1] = v59;
    aBlock[4] = sub_256B3CF10;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_256B371E0;
    aBlock[3] = &unk_270616308;
    id v37 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v38 = v34;
    swift_retain();
    swift_release();
    id v39 = objc_msgSend(v38, sel_remoteObjectProxyWithErrorHandler_, v37);
    _Block_release(v37);
    id v40 = v48;
    uint64_t v41 = v49;
    v57(v48, v50, v49);
    os_log_type_t v42 = (char *)swift_allocObject();
    uint64_t v43 = v53;
    *((void *)v42 + 2) = v52;
    *((void *)v42 + 3) = v43;
    *((void *)v42 + 4) = v51;
    *((void *)v42 + 5) = v33;
    v35(&v42[(v26 + 48) & ~v26], v40, v41);
    swift_retain();
    uint64_t v44 = swift_unknownObjectRetain();
    v58(v44, sub_256B3D090, v42);
    swift_release();
    return swift_unknownObjectRelease_n();
  }
  return result;
}

uint64_t sub_256B37994(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v63 = a8;
  long long v58 = a6;
  uint64_t v59 = a7;
  uint64_t v57 = a4;
  uint64_t v12 = *a2;
  uint64_t v13 = sub_256B3F4A0();
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v56 = a3 + 16;
  swift_beginAccess();
  BOOL v19 = sub_256B366D0(a1, *(void *)(a3 + 16));
  uint64_t v20 = *(void *)(v12 + 80);
  uint64_t v21 = *(void *)(v12 + 88);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 56);
  if (v19)
  {
    v22(*(void *)(v12 + 80), *(void *)(v12 + 88));
    id v23 = a1;
    swift_retain();
    id v24 = a1;
    swift_retain();
    uint64_t v25 = sub_256B3F470();
    os_log_type_t v26 = sub_256B3F9D0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v60 = a5;
      uint64_t v28 = v27;
      uint64_t v53 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v66 = v55;
      *(_DWORD *)uint64_t v28 = 136315650;
      unint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 24);
      os_log_t v54 = v25;
      uint64_t v30 = v29(v20, v21);
      uint64_t v65 = sub_256B3B598(v30, v31, &v66);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2112;
      id v32 = a1;
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v65 = v33;
      sub_256B3FAA0();
      uint64_t v34 = v53;
      *uint64_t v53 = v33;

      *(_WORD *)(v28 + 22) = 2048;
      swift_beginAccess();
      uint64_t v35 = *(void *)(a3 + 16);
      swift_release();
      uint64_t v64 = v35;
      sub_256B3FAA0();
      swift_release();
      os_log_t v36 = v54;
      _os_log_impl(&dword_256A36000, v54, v26, "%s async: connection error during call: %@, num connection attempts: %lu", (uint8_t *)v28, 0x20u);
      sub_256A39D2C(&qword_26B2B60C8);
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v34, -1, -1);
      uint64_t v37 = v55;
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v37, -1, -1);
      uint64_t v38 = v28;
      a5 = v60;
      MEMORY[0x25A2ABEE0](v38, -1, -1);
    }
    else
    {
      swift_release();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
    return sub_256B37624(a3, v57, a2, a5, v58, v59, v63);
  }
  else
  {
    uint64_t v60 = a5;
    v22(v20, v21);
    id v39 = a1;
    swift_retain();
    id v40 = a1;
    swift_retain();
    uint64_t v41 = sub_256B3F470();
    os_log_type_t v42 = sub_256B3F9D0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      long long v58 = (void *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v66 = v59;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
      uint64_t v65 = sub_256B3B598(v44, v45, &v66);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2112;
      id v46 = a1;
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v65 = v47;
      sub_256B3FAA0();
      unint64_t v48 = v58;
      *long long v58 = v47;

      *(_WORD *)(v43 + 22) = 2048;
      swift_beginAccess();
      uint64_t v49 = *(void *)(a3 + 16);
      swift_release();
      uint64_t v64 = v49;
      sub_256B3FAA0();
      swift_release();
      _os_log_impl(&dword_256A36000, v41, v42, "%s async: connection error during call: %@ reached max num connection attempts: %lu", (uint8_t *)v43, 0x20u);
      sub_256A39D2C(&qword_26B2B60C8);
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v48, -1, -1);
      uint64_t v50 = v59;
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v50, -1, -1);
      MEMORY[0x25A2ABEE0](v43, -1, -1);
    }
    else
    {
      swift_release();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
    uint64_t v66 = (uint64_t)a1;
    id v52 = a1;
    sub_256A49664((uint64_t *)&unk_26B2B5DA0);
    sub_256B3F8F0();
    return sub_256B3F8D0();
  }
}

uint64_t sub_256B38034(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v79 = a7;
  uint64_t v75 = a1;
  uint64_t v76 = a4;
  uint64_t v11 = sub_256B3F4A0();
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v78 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v71 - v16;
  MEMORY[0x270FA5388](v15);
  BOOL v19 = (char *)&v71 - v18;
  uint64_t v20 = sub_256B3FA90();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v71 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  MEMORY[0x270FA5388](v25);
  if (a2)
  {
    uint64_t v75 = a6;
    uint64_t v29 = v79;
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v79 + 56);
    id v31 = a2;
    v30(a5, v29);
    id v32 = a2;
    swift_retain();
    id v33 = a2;
    swift_retain();
    uint64_t v34 = sub_256B3F470();
    os_log_type_t v35 = sub_256B3F9D0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = a3;
      uint64_t v37 = swift_slowAlloc();
      id v74 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v82 = v38;
      *(_DWORD *)uint64_t v37 = 136315650;
      uint64_t v39 = (*(uint64_t (**)(uint64_t))(v79 + 24))(a5);
      uint64_t v81 = sub_256B3B598(v39, v40, &v82);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2112;
      id v41 = a2;
      uint64_t v42 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v81 = v42;
      sub_256B3FAA0();
      uint64_t v43 = v74;
      *id v74 = v42;

      *(_WORD *)(v37 + 22) = 2048;
      swift_beginAccess();
      uint64_t v44 = *(void *)(v36 + 16);
      swift_release();
      uint64_t v80 = v44;
      sub_256B3FAA0();
      swift_release();
      _os_log_impl(&dword_256A36000, v34, v35, "%s async: method error during call: %@, num connection attempts: %lu", (uint8_t *)v37, 0x20u);
      sub_256A39D2C(&qword_26B2B60C8);
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v43, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v38, -1, -1);
      MEMORY[0x25A2ABEE0](v37, -1, -1);
    }
    else
    {
      swift_release();

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v19, v78);
    uint64_t v82 = (uint64_t)a2;
    sub_256A49664((uint64_t *)&unk_26B2B5DA0);
    sub_256B3F8F0();
    return sub_256B3F8D0();
  }
  uint64_t v73 = v28;
  id v74 = (uint64_t *)((char *)&v71 - v26);
  uint64_t v45 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v75, v20);
  if (sub_256A480C4((uint64_t)v24, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    (*(void (**)(uint64_t))(v79 + 56))(a5);
    uint64_t v46 = a3;
    swift_retain_n();
    uint64_t v47 = sub_256B3F470();
    os_log_type_t v48 = sub_256B3F9D0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v75 = a6;
      uint64_t v51 = v50;
      uint64_t v82 = v50;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v52 = (*(uint64_t (**)(uint64_t))(v79 + 24))(a5);
      uint64_t v81 = sub_256B3B598(v52, v53, &v82);
      sub_256B3FAA0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2048;
      swift_beginAccess();
      uint64_t v54 = *(void *)(v46 + 16);
      swift_release();
      uint64_t v80 = v54;
      sub_256B3FAA0();
      swift_release();
      _os_log_impl(&dword_256A36000, v47, v48, "%s async: throwing neither result or error returned, num connection attempts: %lu", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2ABEE0](v51, -1, -1);
      MEMORY[0x25A2ABEE0](v49, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v17, v78);
    sub_256A4993C();
    uint64_t v66 = swift_allocError();
    *id v67 = 2;
    uint64_t v82 = v66;
    sub_256A49664((uint64_t *)&unk_26B2B5DA0);
    sub_256B3F8F0();
    return sub_256B3F8D0();
  }
  uint64_t v55 = *(void (**)(void *, char *, uint64_t))(v45 + 32);
  uint64_t v75 = a6;
  v55(v74, v24, a6);
  uint64_t v56 = v14;
  (*(void (**)(uint64_t))(v79 + 56))(a5);
  swift_retain_n();
  uint64_t v57 = sub_256B3F470();
  os_log_type_t v58 = sub_256B3F9C0();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v60 = v77;
  if (v59)
  {
    uint64_t v61 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    uint64_t v82 = v62;
    *(_DWORD *)uint64_t v61 = 136315394;
    uint64_t v72 = v56;
    uint64_t v63 = (*(uint64_t (**)(uint64_t))(v79 + 24))(a5);
    uint64_t v81 = sub_256B3B598(v63, v64, &v82);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2048;
    swift_beginAccess();
    uint64_t v65 = *(void *)(a3 + 16);
    swift_release();
    uint64_t v80 = v65;
    sub_256B3FAA0();
    swift_release();
    _os_log_impl(&dword_256A36000, v57, v58, "%s async: method returned non-nil result, num connection attempts: %lu", (uint8_t *)v61, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v62, -1, -1);
    MEMORY[0x25A2ABEE0](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v72, v78);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v78);
  }
  os_log_type_t v69 = v74;
  uint64_t v70 = v75;
  (*(void (**)(uint64_t, void *, uint64_t))(v45 + 16))(v73, v74, v75);
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  sub_256B3F8F0();
  sub_256B3F8E0();
  return (*(uint64_t (**)(void *, uint64_t))(v45 + 8))(v69, v70);
}

void sub_256B389E4()
{
}

#error "256B38A1C: call analysis failed (funcsize=9)"

#error "256B38A70: call analysis failed (funcsize=43)"

uint64_t sub_256B38AD8@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *a1;
  swift_unknownObjectWeakInit();

  return swift_unknownObjectRelease();
}

uint64_t BidirectionalXPCServiceClientConnection.__allocating_init(existingConnection:localObject:delegate:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  BidirectionalXPCServiceClientConnection.init(existingConnection:localObject:delegate:)(a1, a2, a3, a4);
  return v8;
}

void *BidirectionalXPCServiceClientConnection.init(existingConnection:localObject:delegate:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  sub_256B0DCA0();
  uint64_t v10 = v9;
  v4[5] = 0;
  swift_unknownObjectWeakInit();
  v4[3] = a1;
  LOBYTE(v17[0]) = 0;
  id v11 = a1;
  swift_unknownObjectRetain();
  long long v15 = *(_OWORD *)(v10 + 96);
  long long v16 = *(_OWORD *)(v10 + 80);
  sub_256B38AD8(v17, v18);
  v17[0] = v16;
  v17[1] = v15;
  uint64_t v12 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  uint64_t v13 = sub_256B34B98((uint64_t)v18, v12);
  v4[2] = v13;
  v4[5] = a4;
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_256B3B340((void (*)(uint64_t))sub_256B3BDB0, (uint64_t)v4, v13, v12, MEMORY[0x263F8EE60] + 8);
  if (v6) {
    swift_release();
  }
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_256B38CDC(unsigned char *a1)
{
  id v4 = (void *)*v1;
  if (MEMORY[0x25A2AC000](v1 + 4))
  {
    uint64_t v5 = v1[5];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    if (v2 || *a1)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = (void *)v1[3];
      uint64_t v20 = v4[13];
      uint64_t v9 = v4[11];
      id v10 = static XPCService.xpcInterface()();
      objc_msgSend(v8, sel_setRemoteObjectInterface_, v10);

      uint64_t v11 = v4[10];
      uint64_t v19 = v4[12];
      id v12 = static XPCService.xpcInterface()();
      objc_msgSend(v8, sel_setExportedInterface_, v12);

      objc_msgSend(v8, sel_setExportedObject_, MEMORY[0x25A2AC000](a1 + 8));
      swift_unknownObjectRelease();
      uint64_t v13 = swift_allocObject();
      swift_weakInit();
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = v11;
      void v14[3] = v9;
      v14[4] = v19;
      v14[5] = v20;
      v14[6] = v13;
      uint64_t v25 = sub_256B3CBB0;
      uint64_t v26 = v14;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v22 = 1107296256;
      uint64_t v23 = sub_256A4E64C;
      id v24 = &unk_270604610;
      long long v15 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v8, sel_setInterruptionHandler_, v15);
      _Block_release(v15);
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      uint64_t v17 = (void *)swift_allocObject();
      _OWORD v17[2] = v11;
      v17[3] = v9;
      v17[4] = v19;
      v17[5] = v20;
      v17[6] = v16;
      uint64_t v25 = sub_256B3CBC8;
      uint64_t v26 = v17;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v22 = 1107296256;
      uint64_t v23 = sub_256A4E64C;
      id v24 = &unk_270604638;
      uint64_t v18 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v8, sel_setInvalidationHandler_, v18);
      _Block_release(v18);
      objc_msgSend(v8, sel_resume);
      uint64_t result = swift_unknownObjectRelease();
      *a1 = 1;
    }
  }
  else
  {
    uint64_t result = sub_256B3FC70();
    __break(1u);
  }
  return result;
}

uint64_t BidirectionalXPCServiceClientConnection.__allocating_init(localObject:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  BidirectionalXPCServiceClientConnection.init(localObject:delegate:)(a1, a2, a3);
  return v6;
}

uint64_t BidirectionalXPCServiceClientConnection.init(localObject:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v5 = (void *)*v3;
  v3[5] = 0;
  swift_unknownObjectWeakInit();
  sub_256A49E98(0, &qword_269F7CCD8);
  uint64_t v6 = v5[11];
  uint64_t v7 = v5[13];
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  v3[3] = sub_256B35A7C(v8, v9, 0);
  LOBYTE(v17[0]) = 0;
  uint64_t v10 = v5[10];
  uint64_t v11 = v5[12];
  swift_unknownObjectRetain();
  sub_256B38AD8(v17, v18);
  v17[0] = v10;
  v17[1] = v6;
  _OWORD v17[2] = v11;
  v17[3] = v7;
  uint64_t v12 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  uint64_t v13 = sub_256B34B98((uint64_t)v18, v12);
  *(void *)(v4 + 16) = v13;
  *(void *)(v4 + 40) = a3;
  swift_unknownObjectWeakAssign();
  swift_retain();
  uint64_t v14 = v19;
  sub_256B3B340((void (*)(uint64_t))sub_256B3D238, v4, v13, v12, MEMORY[0x263F8EE60] + 8);
  if (v14) {
    swift_release();
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t BidirectionalXPCServiceClientConnection.deinit()
{
  uint64_t v1 = *(void **)(v0 + 24);
  objc_msgSend(v1, sel_setInterruptionHandler_, 0);
  objc_msgSend(v1, sel_setInvalidationHandler_, 0);
  objc_msgSend(v1, sel_invalidate);
  swift_release();

  sub_256B3BD54(v0 + 32);
  return v0;
}

uint64_t BidirectionalXPCServiceClientConnection.__deallocating_deinit()
{
  BidirectionalXPCServiceClientConnection.deinit();
  uint64_t v0 = sub_256B3EF18();

  return MEMORY[0x270FA0228](v0, v1, v2);
}

ModelCatalog::ConnectionState __swiftcall BidirectionalXPCServiceClientConnection.getCurrentConnectionState()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_256B3ED0C();
  v11[2] = *(void *)(v2 + 80);
  sub_256B3ED0C();
  v11[3] = *(void *)(v3 + 88);
  sub_256B3ED0C();
  v11[4] = *(void *)(v4 + 96);
  sub_256B3ED0C();
  uint64_t v12 = *(void *)(v5 + 104);
  uint64_t v13 = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  uint64_t v16 = v12;
  uint64_t v9 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  sub_256B3B340((void (*)(uint64_t))sub_256B3BDC8, (uint64_t)v11, v1, v9, (uint64_t)&type metadata for ConnectionState);
  return result;
}

BOOL static ConnectionState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_256B3940C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = *(void *)(result + 16);
    MEMORY[0x270FA5388](result);
    _OWORD v17[2] = a2;
    v17[3] = a3;
    void v17[4] = a4;
    v17[5] = a5;
    swift_retain();
    v17[6] = a2;
    v17[7] = a3;
    v17[8] = a4;
    v17[9] = a5;
    uint64_t v14 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
    sub_256B3B340(a6, (uint64_t)v17, v13, v14, MEMORY[0x263F8EE60] + 8);
    swift_release();
    if (MEMORY[0x25A2AC000](v12 + 32))
    {
      uint64_t v15 = *(void *)(v12 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v15 + 16))(ObjectType, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_256B39554(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), const char *a7)
{
  sub_256B3F4A0();
  sub_256A49FB8();
  MEMORY[0x270FA5388](v11);
  sub_256A4A500();
  (*(void (**)(uint64_t, uint64_t))(a5 + 56))(a3, a5);
  uint64_t v12 = sub_256B3F470();
  os_log_type_t v13 = a6();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)sub_256A4A734();
    uint64_t v15 = sub_256A4A8A8();
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v21 = v15;
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
    sub_256B3B598(v16, v17, &v21);
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_256A36000, v12, v13, a7, v14, 0xCu);
    sub_256B3DD08();
    sub_256A4A158();
    sub_256A4A158();
  }

  sub_256A9FDB0();
  uint64_t result = v18();
  *a1 = 2;
  return result;
}

void BidirectionalXPCServiceClientConnection.call<A>(_:)(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a2;
  id v31 = a1;
  sub_256B0DCA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v4 + 16);
  uint64_t v33 = v14;
  uint64_t v34 = v4;
  long long v16 = *(_OWORD *)(v15 + 96);
  long long aBlock = *(_OWORD *)(v15 + 80);
  long long v36 = v16;
  uint64_t v17 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  uint64_t v18 = sub_256A49E98(0, &qword_269F7CCD8);
  sub_256B3B340((void (*)(uint64_t))sub_256B3BDD4, (uint64_t)v32, v13, v17, v18);
  if (!v5)
  {
    uint64_t v28 = a4;
    uint64_t v29 = v9;
    uint64_t v19 = v39;
    uint64_t v20 = sub_256B3D7DC();
    *(void *)(v20 + 16) = 0;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = a3;
    long long v21[3] = v4;
    v21[4] = v20;
    uint64_t v37 = sub_256B3BDF4;
    uint64_t v38 = v21;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v36 = sub_256B371E0;
    *((void *)&v36 + 1) = &unk_270604160;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v23 = objc_msgSend(v19, sel_synchronousRemoteObjectProxyWithErrorHandler_, v22);
    _Block_release(v22);
    uint64_t v24 = swift_unknownObjectRetain();
    v31(v24);
    sub_256A4A04C();
    uint64_t v25 = *(void **)(v20 + 16);
    if (v25)
    {
      id v26 = v25;
      swift_willThrow();

      swift_unknownObjectRelease();
      sub_256A9FDB0();
      v27();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {

      sub_256B3DDB8();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v28, v12, a3);
      swift_release();
    }
  }
}

void BidirectionalXPCServiceClientConnection.call<A>(_:)(void (*a1)(id, void (*)(uint64_t a1, void *a2), void *)@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v53 = a2;
  uint64_t v54 = a1;
  uint64_t v8 = *v4;
  uint64_t v65 = sub_256B3FA90();
  sub_256A49FB8();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v44 - v12;
  uint64_t v14 = v4[2];
  uint64_t v56 = a3;
  uint64_t v57 = v4;
  sub_256B3F0EC();
  sub_256B3F0EC();
  long long v16 = *(void (**)(uint64_t, void *))(v15 + 96);
  uint64_t v17 = *(void **)(v8 + 104);
  uint64_t v51 = v19;
  uint64_t v52 = v18;
  uint64_t aBlock = v18;
  uint64_t v60 = v19;
  uint64_t v50 = v16;
  uint64_t v61 = v16;
  uint64_t v62 = v17;
  uint64_t v20 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  uint64_t v21 = sub_256A49E98(0, &qword_269F7CCD8);
  sub_256B3B340((void (*)(uint64_t))sub_256B3D388, (uint64_t)v55, v14, v20, v21);
  if (!v5)
  {
    v44[1] = 0;
    uint64_t v46 = v10;
    uint64_t v47 = v13;
    uint64_t v45 = a4;
    uint64_t v22 = v58;
    uint64_t v23 = sub_256B3D7A8();
    *(void *)(v23 + 16) = 0;
    uint64_t v24 = (id *)(v23 + 16);
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = a3;
    v25[3] = v4;
    v25[4] = v23;
    uint64_t v63 = sub_256B3BE6C;
    unint64_t v64 = v25;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v60 = 1107296256;
    uint64_t v61 = sub_256B371E0;
    uint64_t v62 = &unk_2706042C8;
    id v26 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v48 = v23;
    swift_retain();
    swift_release();
    id v49 = v22;
    id v27 = objc_msgSend(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_, v26);
    _Block_release(v26);
    uint64_t v28 = swift_allocBox();
    sub_256A46F7C(v29, 1, 1, a3);
    uint64_t v30 = sub_256B3D7A8();
    *(void *)(v30 + 16) = 0;
    id v31 = (id *)(v30 + 16);
    id v32 = (void *)swift_allocObject();
    uint64_t v33 = v51;
    v32[2] = v52;
    v32[3] = v33;
    uint64_t v34 = v50;
    v32[4] = a3;
    v32[5] = v34;
    v32[6] = v17;
    v32[7] = v28;
    v32[8] = v30;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v54(v27, sub_256B3BEE0, v32);
    swift_release();
    sub_256A4A04C();
    if (*v24)
    {
      id v35 = *v24;
      swift_willThrow();

      swift_release();
      swift_unknownObjectRelease_n();
      swift_release();
      swift_release();
      return;
    }
    uint64_t v52 = v30;
    id v36 = v49;
    id v53 = v27;
    uint64_t v54 = (void (*)(id, void (*)(uint64_t, void *), void *))v28;
    uint64_t v37 = v65;
    sub_256A4A04C();
    if (*v31)
    {
      id v38 = *v31;
      swift_willThrow();
    }
    else
    {
      sub_256A4A04C();
      uint64_t v39 = v46;
      uint64_t v40 = (uint64_t)v47;
      sub_256A4AB70();
      v41();
      if (sub_256A480C4(v40, 1, a3) != 1)
      {

        swift_unknownObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v45, v40, a3);
        swift_release();
        swift_release();
        swift_release();
        return;
      }
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v37);
      sub_256A4993C();
      uint64_t v42 = sub_256A6E4C0();
      sub_256B3DBC4(v42, v43);
    }
    swift_release();
    swift_unknownObjectRelease_n();
    swift_release();
    swift_release();
  }
}

id sub_256B39F08(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v48 = (void *)*a2;
  uint64_t v49 = a4;
  uint64_t v9 = sub_256B3F4A0();
  sub_256A49FB8();
  uint64_t v47 = v10;
  MEMORY[0x270FA5388](v11);
  sub_256A4A500();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = v48[11];
  uint64_t v16 = v48[13];
  uint64_t v17 = sub_256B3EC04();
  v18(v17);
  id v19 = a1;
  id v20 = a1;
  uint64_t v21 = sub_256B3F470();
  os_log_type_t v22 = sub_256B3F9D0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v46 = a3;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    v51[0] = v44;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v45 = a5;
    os_log_t v41 = v21;
    uint64_t v24 = sub_256B3EC04();
    uint64_t v26 = v25(v24);
    sub_256B3B598(v26, v27, v51);
    uint64_t v43 = v9;
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    id v28 = (id)sub_256B3EFE8();
    uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
    sub_256B3FAA0();
    uint64_t v29 = v42;
    *uint64_t v42 = v50;
    a5 = v45;

    _os_log_impl(&dword_256A36000, v41, v22, "%s: error during call: %@.", v23, 0x16u);
    sub_256A39D2C(&qword_26B2B60C8);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v29, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v44, -1, -1);
    uint64_t v30 = v23;
    a3 = v46;
    MEMORY[0x25A2ABEE0](v30, -1, -1);

    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v14, v43);
  }
  else
  {

    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v14, v9);
  }
  uint64_t v32 = a2[2];
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = v48;
  uint64_t v34 = v49;
  uint64_t v35 = v48[10];
  *(&v40 - 6) = v35;
  *(&v40 - 5) = v15;
  uint64_t v36 = v33[12];
  *(&v40 - 4) = v34;
  *(&v40 - 3) = v36;
  *(&v40 - 2) = v16;
  v51[0] = v35;
  v51[1] = v15;
  v51[2] = v36;
  v51[3] = v16;
  uint64_t v37 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  sub_256B3B340(a5, (uint64_t)(&v40 - 8), v32, v37, MEMORY[0x263F8EE60] + 8);
  sub_256B3EC34();
  id v38 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a1;

  return a1;
}

void sub_256B3A2B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_256B3FA90();
  uint64_t v8 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v8, a1, v7);
  swift_beginAccess();
  uint64_t v9 = *(void **)(a4 + 16);
  *(void *)(a4 + 16) = a2;
  id v10 = a2;
}

uint64_t BidirectionalXPCServiceClientConnection.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  sub_256B0DCA0();
  v5[12] = v6;
  return sub_256A4A0B4((uint64_t)sub_256B3A3B4);
}

uint64_t sub_256B3A3B4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v1;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v2 + 96);
  uint64_t v6 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  uint64_t v7 = sub_256A49E98(0, &qword_269F7CCD8);
  sub_256B3B340((void (*)(uint64_t))sub_256B3D388, v5, v4, v6, v7);
  swift_task_dealloc();
  *(void *)(v0 + 104) = *(void *)(v0 + 48);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  sub_256B3EFAC(v8, v9, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_256B3A584;
  sub_256B3EDA8();
  return MEMORY[0x270FA2360](v18);
}

uint64_t sub_256B3A584()
{
  sub_256A4A1FC();
  sub_256A49FD4();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_256A4A0C0();
  *uint64_t v5 = v4;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_256B3A6D0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = sub_256B3A670;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_256B3A670()
{
  sub_256A4A1FC();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_256B3A6D0()
{
  sub_256A4A1FC();

  swift_task_dealloc();
  sub_256A4AAB4();
  return v1();
}

id sub_256B3A734@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id result = (id)sub_256B38CDC(a1);
  if (!v3)
  {
    if (*a1 == 2)
    {
      sub_256A4993C();
      sub_256A6E4C0();
      *uint64_t v8 = 1;
      return (id)swift_willThrow();
    }
    else
    {
      uint64_t v9 = *(void **)(a2 + 24);
      *a3 = v9;
      return v9;
    }
  }
  return result;
}

uint64_t sub_256B3A7B8(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t, uint64_t (*)(), char *), uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a5;
  uint64_t v35 = a4;
  uint64_t v32 = a1;
  id v33 = a2;
  uint64_t v9 = (void *)*a3;
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v26 = a6;
  uint64_t v10 = sub_256B3F8F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v30 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v31((char *)&v24 - v12, a1, v10);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v29 = v14 | 7;
  uint64_t v15 = (char *)swift_allocObject();
  uint64_t v28 = v9[10];
  *((void *)v15 + 2) = v28;
  uint64_t v27 = v9[11];
  *((void *)v15 + 3) = v27;
  *((void *)v15 + 4) = a6;
  uint64_t v25 = v9[12];
  *((void *)v15 + 5) = v25;
  uint64_t v24 = v9[13];
  *((void *)v15 + 6) = v24;
  *((void *)v15 + 7) = a3;
  __n128 v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v16(&v15[(v14 + 64) & ~v14], v13, v10);
  aBlock[4] = sub_256B3C9AC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_256B371E0;
  aBlock[3] = &unk_2706045E8;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v33, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  v31(v13, v32, v10);
  id v19 = (char *)swift_allocObject();
  uint64_t v20 = v27;
  *((void *)v19 + 2) = v28;
  *((void *)v19 + 3) = v20;
  uint64_t v21 = v25;
  *((void *)v19 + 4) = v26;
  *((void *)v19 + 5) = v21;
  *((void *)v19 + 6) = v24;
  v16(&v19[(v14 + 56) & ~v14], v13, v10);
  uint64_t v22 = swift_unknownObjectRetain();
  v35(v22, sub_256B3CAD0, v19);
  swift_release();
  return swift_unknownObjectRelease_n();
}

uint64_t sub_256B3AAD8(void *a1, uint64_t *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  uint64_t v6 = *a2;
  uint64_t v7 = *a2;
  uint64_t v8 = sub_256B3F4A0();
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(NSObject **)(v6 + 88);
  uint64_t v12 = *(void *)(v6 + 104);
  (*(void (**)(NSObject *, uint64_t))(v12 + 56))(v11, v12);
  id v13 = a1;
  id v14 = a1;
  uint64_t v15 = sub_256B3F470();
  os_log_type_t v16 = sub_256B3F9D0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v36 = v8;
    uint64_t v18 = v17;
    uint64_t v34 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v42[0] = v35;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v37 = v7;
    uint64_t v19 = (*(uint64_t (**)(NSObject *, uint64_t))(v12 + 24))(v11, v12);
    uint64_t v41 = sub_256B3B598(v19, v20, v42);
    os_log_t v33 = v15;
    sub_256B3FAA0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2112;
    id v21 = a1;
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v41 = v22;
    sub_256B3FAA0();
    uint64_t v23 = v34;
    *uint64_t v34 = v22;
    uint64_t v7 = v37;

    os_log_t v24 = v33;
    _os_log_impl(&dword_256A36000, v33, v16, "%s: error during call: %@.", (uint8_t *)v18, 0x16u);
    sub_256A39D2C(&qword_26B2B60C8);
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v23, -1, -1);
    uint64_t v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x25A2ABEE0](v25, -1, -1);
    MEMORY[0x25A2ABEE0](v18, -1, -1);

    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v10, v36);
  }
  else
  {

    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v10, v8);
  }
  uint64_t v27 = a2[2];
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = *(NSObject **)(v7 + 80);
  *(&v33 - 6) = v28;
  *(&v33 - 5) = v11;
  uint64_t v29 = *(NSObject **)(v7 + 96);
  *(&v33 - 4) = v39;
  *(&v33 - 3) = v29;
  *(&v33 - 2) = (os_log_t)v12;
  v42[0] = (uint64_t)v28;
  v42[1] = (uint64_t)v11;
  _OWORD v42[2] = (uint64_t)v29;
  v42[3] = v12;
  uint64_t v30 = type metadata accessor for BidirectionalXPCServiceClientConnection.State();
  sub_256B3B340((void (*)(uint64_t))sub_256B3D468, (uint64_t)&(&v33)[-8], v27, v30, MEMORY[0x263F8EE60] + 8);
  v42[0] = (uint64_t)a1;
  id v31 = a1;
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  sub_256B3F8F0();
  return sub_256B3F8D0();
}

uint64_t sub_256B3AEE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_256B3FA90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v24 - v12;
  uint64_t v14 = *(void *)(a6 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v11);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v24 - v18;
  if (a2)
  {
    uint64_t v25 = (uint64_t)a2;
    id v20 = a2;
LABEL_5:
    sub_256A49664((uint64_t *)&unk_26B2B5DA0);
    sub_256B3F8F0();
    return sub_256B3F8D0();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if (sub_256A480C4((uint64_t)v13, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_256A4993C();
    uint64_t v21 = swift_allocError();
    unsigned char *v22 = 2;
    uint64_t v25 = v21;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v13, a6);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, a6);
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  sub_256B3F8F0();
  sub_256B3F8E0();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, a6);
}

uint64_t sub_256B3B188()
{
  return BidirectionalXPCServiceClientConnection.getCurrentConnectionState()();
}

void sub_256B3B1AC(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

void sub_256B3B1D0(void (*a1)(id, void (*)(uint64_t a1, void *a2), void *)@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_256B3B1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_256B241D8;
  return BidirectionalXPCServiceClientConnection.call<A>(_:)(a1, a2, a3, a4);
}

uint64_t ConnectionState.hash(into:)()
{
  return sub_256B3FF50();
}

uint64_t _s12ModelCatalog15ConnectionStateO9hashValueSivg_0()
{
  return sub_256B3FF70();
}

void sub_256B3B340(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_256B3B3CC(a3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_256B3B3CC(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7) {
    *a7 = v7;
  }
}

uint64_t sub_256B3B454(uint64_t a1, uint64_t a2)
{
  type metadata accessor for os_unfair_lock_s();
  sub_256B3FBD0();
  uint64_t v4 = sub_256B3FBC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t sub_256B3B504@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2);
}

uint64_t sub_256B3B598(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_256B3B66C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_256A49EDC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_256A49EDC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_256A39DB4((uint64_t)v12);
  return v7;
}

uint64_t sub_256B3B66C(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_256B3B7C4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_256B3FAB0();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_256B3B89C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_256B3FBE0();
    if (!v8)
    {
      uint64_t result = sub_256B3FC60();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_256B3B7C4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_256B3FCB0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_256B3B89C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_256B3B934(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_256B3BAA8(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_256B3BAA8((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_256B3B934(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_256B3F780();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_256B2182C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_256B3FB80();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_256B3FCB0();
  __break(1u);
LABEL_14:
  uint64_t result = sub_256B3FC60();
  __break(1u);
  return result;
}

char *sub_256B3BAA8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_256A39D2C(qword_26B2B3700);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_256B3BC58(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256B3BB80(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_256B3BB80(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_256B3FCB0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_256B3BC58(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_256B3FCB0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_256B3BCE8(uint64_t a1)
{
  return sub_256B3BF2C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_256B3758C);
}

id *sub_256B3BD00@<X0>(id *result@<X0>, BOOL *a2@<X8>)
{
  id v3 = *result;
  if (*result) {
    uint64_t result = (id *)objc_msgSend(*result, sel_invalidate);
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_256B3BD54(uint64_t a1)
{
  return a1;
}

id sub_256B3BD7C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_256B37514(a1, a2);
}

uint64_t type metadata accessor for BidirectionalXPCServiceClientConnection.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_256B3BDB0(unsigned char *a1)
{
  return sub_256B38CDC(a1);
}

unsigned char *sub_256B3BDC8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

id sub_256B3BDD4@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_256B3A734(a1, *(void *)(v2 + 24), a2);
}

id sub_256B3BDF4(void *a1)
{
  return sub_256B39F08(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), (void (*)(uint64_t))sub_256B3CC80);
}

uint64_t sub_256B3BE2C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_256B3BE6C(void *a1)
{
  return sub_256B39F08(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), (void (*)(uint64_t))sub_256B3D468);
}

uint64_t sub_256B3BEA0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_256B3BEE0(uint64_t a1, void *a2)
{
  sub_256B3A2B0(a1, a2, *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_256B3BF14(uint64_t a1)
{
  return sub_256B3BF2C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_256B3A7B8);
}

uint64_t sub_256B3BF2C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_256B3BF44(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_256B3BF4C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_256B3BF54(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

unint64_t sub_256B3BF60()
{
  unint64_t result = qword_269F7CD00;
  if (!qword_269F7CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CD00);
  }
  return result;
}

unint64_t sub_256B3BFB0()
{
  unint64_t result = qword_269F7CD08;
  if (!qword_269F7CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F7CD08);
  }
  return result;
}

uint64_t dispatch thunk of static XPCService.interface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static XPCService.serviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static XPCService.entitlementName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static XPCService.otherAcceptedEntitlementNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static XPCService.selectorClasses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static XPCService.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of static XPCService.customize(serverInterface:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ServiceConnectionProtocol.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ServiceConnectionProtocol.call<A>(_:)()
{
  sub_256B3EC14();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256B241D8;
  uint64_t v2 = sub_256B3EB7C();
  return v3(v2);
}

uint64_t dispatch thunk of BidirectionalServiceConnectionProtocol.getCurrentConnectionState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BidirectionalServiceConnectionProtocol.call<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of BidirectionalServiceConnectionProtocol.call<A>(_:)()
{
  sub_256B3EC14();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256B3D254;
  uint64_t v2 = sub_256B3EB7C();
  return v3(v2);
}

uint64_t sub_256B3C328()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for XPCServiceClientConnection()
{
  return sub_256A9FB00();
}

uint64_t method lookup function for XPCServiceClientConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCServiceClientConnection);
}

uint64_t dispatch thunk of XPCServiceClientConnection.__allocating_init(delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of XPCServiceClientConnectionDelegate.xpcConnectionIsAllowed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_256B3C3F4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BidirectionalXPCServiceClientConnection()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BidirectionalXPCServiceClientConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BidirectionalXPCServiceClientConnection);
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnection.__allocating_init(existingConnection:localObject:delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnection.__allocating_init(localObject:delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnectionDelegate.xpcBidirectionalConnectionIsAllowed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BidirectionalXPCServiceClientConnectionDelegate.xpcBidirectionalConnectionWasInvalidated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InitializableFromExistingConnection.init(existingConnection:localObject:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

ValueMetadata *type metadata accessor for ConnectionState()
{
  return &type metadata for ConnectionState;
}

unsigned char *_s12ModelCatalog15ConnectionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256B3C61CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCServiceError()
{
  return &type metadata for XPCServiceError;
}

uint64_t sub_256B3C654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_256B3C65C()
{
  return swift_unknownObjectWeakDestroy();
}

unsigned char *sub_256B3C664(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyInit();
  return a1;
}

unsigned char *sub_256B3C694(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

unsigned char *sub_256B3C6C4(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeInit();
  return a1;
}

unsigned char *sub_256B3C6F4(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

uint64_t sub_256B3C724(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && a1[16])
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 3;
      int v2 = v3 - 3;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_256B3C760(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

void **sub_256B3C7A0(void **a1, void **a2)
{
  unsigned int v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void sub_256B3C7D0(id *a1)
{
}

void **sub_256B3C7D8(void **a1, void **a2)
{
  unsigned int v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *sub_256B3C810(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **sub_256B3C81C(void **a1, void **a2)
{
  unsigned int v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_256B3C850(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_256B3C8A4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_256B3C8F4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_256B3C900()
{
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  sub_256B3F10C();
  sub_256A49FB8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 64) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  uint64_t v8 = sub_256A4A1E4();
  v9(v8);

  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_256B3C9AC(void *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 32);
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v4 = sub_256B3F8F0();
  sub_256A4A3B4(v4);
  uint64_t v6 = *(uint64_t **)(v1 + 56);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_256B3AAD8(a1, v6, v7, v3);
}

uint64_t sub_256B3CA2C()
{
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v1 = sub_256B3F10C();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = ((v2 + 56) & ~v2) + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = v2 | 7;
  sub_256A9FDB0();
  v5();

  return MEMORY[0x270FA0238](v0, v3, v4);
}

uint64_t sub_256B3CAD0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v4 = sub_256B3F8F0();
  sub_256A4A3B4(v4);
  uint64_t v5 = sub_256B3F124();

  return sub_256B3AEE8(v5, v6, v7, v1, v2, v3);
}

uint64_t sub_256B3CB78()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_256B3CBB0()
{
  return sub_256B3CBE0((void (*)(uint64_t))sub_256B3CC44);
}

uint64_t sub_256B3CBC8()
{
  return sub_256B3CBE0((void (*)(uint64_t))sub_256B3CC08);
}

uint64_t sub_256B3CBE0(void (*a1)(uint64_t))
{
  return sub_256B3940C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_256B3CC08(unsigned char *a1)
{
  return sub_256B39554(a1, v1[2], v1[3], v1[4], v1[5], MEMORY[0x263F90290], "%s: Connection to XPC Server invalidated.");
}

uint64_t sub_256B3CC44(unsigned char *a1)
{
  return sub_256B39554(a1, v1[2], v1[3], v1[4], v1[5], MEMORY[0x263F90280], "%s: Connection to XPC Server interrupted.");
}

unsigned char *sub_256B3CC80(unsigned char *result)
{
  *unint64_t result = 2;
  return result;
}

uint64_t sub_256B3CC8C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_256B3CCC4()
{
  return sub_256B360F8(v0[4], v0[2], v0[3], (void (*)(uint64_t))sub_256B3CD48);
}

uint64_t sub_256B3CCF8()
{
  return sub_256B360F8(v0[4], v0[2], v0[3], (void (*)(uint64_t))sub_256B3CD2C);
}

void sub_256B3CD2C(id *a1)
{
  sub_256B36474(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_256B3CD48(uint64_t a1)
{
  return sub_256B35E0C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_256B3CD64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256B3B504(a1, a2);
}

void sub_256B3CD80()
{
}

void sub_256B3CD9C()
{
}

uint64_t sub_256B3CDBC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256B3CDF4()
{
  swift_weakDestroy();
  uint64_t v0 = sub_256B3EC8C();

  return MEMORY[0x270FA0238](v0, v1, v2);
}

uint64_t sub_256B3CE24()
{
  return sub_256B35AF8();
}

uint64_t sub_256B3CE2C()
{
  return sub_256B36058();
}

uint64_t sub_256B3CE34()
{
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  sub_256B3F10C();
  sub_256A49FB8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 64) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_release();

  uint64_t v8 = sub_256A4A1E4();
  v9(v8);
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v6);
}

uint64_t sub_256B3CF10(void *a1)
{
  uint64_t v3 = v1[3];
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v4 = *(void *)(sub_256B3F8F0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (uint64_t *)v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v11 = *(void **)v10;
  uint64_t v12 = *((void *)v10 + 1);

  return sub_256B37994(a1, v6, v7, v8, v9, v11, v12, v3);
}

uint64_t sub_256B3CFE4()
{
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  sub_256B3F10C();
  sub_256A49FB8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 48) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  uint64_t v8 = sub_256A4A1E4();
  v9(v8);

  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_256B3D090()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_256A49664((uint64_t *)&unk_26B2B5DA0);
  uint64_t v4 = sub_256B3F8F0();
  sub_256A4A3B4(v4);
  uint64_t v5 = sub_256B3F124();

  return sub_256B38034(v5, v6, v7, v8, v1, v2, v3);
}

uint64_t sub_256B3D128()
{
  uint64_t v1 = sub_256B3EC8C();

  return MEMORY[0x270FA0238](v1, v2, v3);
}

uint64_t sub_256B3D15C(uint64_t a1, uint64_t a2)
{
  return sub_256A3E898(a1, a2, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_256B3D164()
{
  uint64_t v0 = sub_256B3EC8C();
  return MEMORY[0x270FA0238](v0, v1, v2);
}

void sub_256B3D180()
{
}

uint64_t sub_256B3D198()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_256B3EC8C();

  return MEMORY[0x270FA0238](v0, v1, v2);
}

void sub_256B3D1D0()
{
}

uint64_t sub_256B3D1F0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_256B3D238(unsigned char *a1)
{
  return sub_256B3BDB0(a1);
}

id sub_256B3D370@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_256B3BD7C(a1, a2);
}

id sub_256B3D388@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_256B3BDD4(a1, a2);
}

unsigned char *sub_256B3D468(unsigned char *a1)
{
  return sub_256B3CC80(a1);
}

void sub_256B3D490()
{
  *(void *)(v6 - 416) = v3;
  *(void *)(v6 - 392) = v1;
  *(void *)(v6 - 512) = v5;
  *(void *)(v6 - 504) = v2;
  *(void *)(v6 - 488) = v4;
  *(void *)(v6 - 496) = v0;
}

uint64_t sub_256B3D4C8()
{
  *(_WORD *)(v0 + 12) = 2048;
  *(void *)(v2 - 280) = v1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3D4F8()
{
  return *(void *)(v0 - 256);
}

__n128 sub_256B3D514(uint64_t a1)
{
  *(void *)(v3 - 376) = a1;
  *(void *)(v3 - 272) = a1;
  __n128 result = *(__n128 *)(v3 - 480);
  *uint64_t v1 = result.n128_u32[0];
  *(void *)(v3 - 392) = v2;
  return result;
}

uint64_t sub_256B3D558(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3D590()
{
  *(_WORD *)(v0 + 12) = 2048;
  *(void *)(v1 - 280) = *(void *)(v1 - 376);
  return sub_256B3FAA0();
}

uint64_t sub_256B3D5C8()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v1 - 272) = *(void *)(v1 - 392);
  return sub_256B3FAA0();
}

void sub_256B3D600()
{
  uint64_t v1 = *(void *)(v0 - 352);
  *(void *)(v0 - 400) = v1 + 16;
  *(void *)(v0 - 408) = v1 + 8;
}

__n128 sub_256B3D62C(uint64_t a1)
{
  *(void *)(v3 - 376) = a1;
  *(void *)(v3 - 240) = a1;
  __n128 result = *(__n128 *)(v3 - 480);
  *uint64_t v1 = result.n128_u32[0];
  *(void *)(v3 - 392) = v2;
  return result;
}

uint64_t sub_256B3D658()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v1 - 248) = *(void *)(v1 - 392);
  return sub_256B3FAA0();
}

uint64_t sub_256B3D68C()
{
  *(void *)(v0 - 96) = 0;
  return swift_beginAccess();
}

uint64_t sub_256B3D6B0()
{
  return swift_slowAlloc();
}

uint64_t sub_256B3D6CC()
{
  return swift_release();
}

uint64_t sub_256B3D6E4(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3D710@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 280) = *(void *)(a1 - 256);
  return sub_256B3FAA0();
}

uint64_t sub_256B3D734(uint64_t a1)
{
  *(void *)(v1 - 272) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3D764(uint64_t a1)
{
  *(void *)(v1 - 248) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3D7A8()
{
  return swift_allocObject();
}

uint64_t sub_256B3D7C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_256B3D7DC()
{
  return swift_allocObject();
}

uint64_t sub_256B3D7F4()
{
  return v0;
}

uint64_t sub_256B3D808()
{
  return swift_slowAlloc();
}

uint64_t sub_256B3D820()
{
  return swift_willThrow();
}

uint64_t sub_256B3D844()
{
  *(void *)(v1 - 368) = v0;
  return swift_retain();
}

uint64_t sub_256B3D8A0(uint64_t a1)
{
  *(void *)(v1 - 248) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3D8CC(uint64_t a1)
{
  *(void *)(v2 - 168) = a1;
  *uint64_t v1 = *(_OWORD *)(v2 - 448);
  return swift_bridgeObjectRetain();
}

uint64_t sub_256B3D8F8(uint64_t a1)
{
  *(void *)(v1 - 272) = a1;
  return sub_256B3FAA0();
}

void sub_256B3D924()
{
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v2 + 6);
}

uint64_t sub_256B3D964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 336) = a3;
  *(void *)(v3 - 376) = a2;
  return sub_256B3F4A0();
}

uint64_t sub_256B3D990(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_256B3B598(v3, v4, a3);
}

uint64_t sub_256B3D9A8()
{
  return swift_release();
}

void sub_256B3D9C0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_256B3D9E0()
{
  return sub_256B3FAA0();
}

uint64_t sub_256B3D9FC()
{
  uint64_t v2 = *(void *)(v0 - 376);
  unint64_t v3 = *(void *)(v0 - 336);
  return sub_256B3B598(v2, v3, (uint64_t *)(v0 - 168));
}

__n128 sub_256B3DA24(uint64_t a1)
{
  *(void *)(v2 - 168) = a1;
  __n128 result = *(__n128 *)(v2 - 480);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_256B3DA5C()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v1 - 272) = *(void *)(v1 - 376);
  return sub_256B3FAA0();
}

uint64_t sub_256B3DA9C()
{
  return sub_256B3FAA0();
}

uint64_t sub_256B3DAB4(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

uint64_t sub_256B3DAE8()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_256B3DB00(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_256B3DB1C()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v1 - 248) = *(void *)(v1 - 384);
  return sub_256B3FAA0();
}

void sub_256B3DB58()
{
  *(void *)(v5 - 376) = v2;
  *(void *)(v5 - 384) = v1;
  *(void *)(v5 - 440) = v3;
  *(void *)(v5 - 448) = v4;
  *(void *)(v5 - 432) = v0;
}

uint64_t sub_256B3DB88()
{
  return swift_arrayDestroy();
}

void sub_256B3DBA0()
{
  uint64_t v2 = *(void **)(v0 - 384);
}

uint64_t sub_256B3DBC4(uint64_t a1, unsigned char *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

uint64_t sub_256B3DBE0()
{
  return *(void *)(v0 - 512);
}

uint64_t sub_256B3DBF8()
{
  return *(void *)(v0 - 488);
}

uint64_t sub_256B3DC10()
{
  return *(void *)(v0 - 496);
}

uint64_t sub_256B3DC28()
{
  return swift_arrayDestroy();
}

void sub_256B3DC4C(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v3 - 376) = v2;
}

void sub_256B3DC64()
{
  *(void *)(v0 - 344) = v0 - 152;
  *(void *)(v0 - 392) = *(void *)(v0 - 352) + 8;
}

void sub_256B3DC90(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x20u);
}

uint64_t sub_256B3DCA8(uint64_t a1, uint64_t a2)
{
  sub_256A46E9C(a1, a2);
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_256B3DCDC()
{
  return *(void *)(v0 - 496);
}

uint64_t sub_256B3DCF0()
{
  return swift_allocObject();
}

uint64_t sub_256B3DD08()
{
  return swift_arrayDestroy();
}

BOOL sub_256B3DD20(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_256B3DD3C(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_256B3DD4C()
{
  *(void *)(v1 - 360) = v0;
  return swift_retain();
}

__n128 sub_256B3DD78(uint64_t a1)
{
  *(void *)(v2 - 344) = a1;
  *(void *)(v2 - 272) = a1;
  __n128 result = *(__n128 *)(v2 - 416);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_256B3DDA0()
{
  return swift_arrayDestroy();
}

uint64_t sub_256B3DDB8()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_256B3DDE4(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3DE14(uint64_t a1)
{
  *(void *)(v1 - 272) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3DE44(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

__n128 sub_256B3DE60(uint64_t a1)
{
  *(void *)(v2 - 344) = a1;
  *(void *)(v2 - 240) = a1;
  __n128 result = *(__n128 *)(v2 - 416);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_256B3DE84(uint64_t result)
{
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_256B3DE94()
{
  return *(void *)(v0 - 448);
}

uint64_t sub_256B3DEB8()
{
  return *(void *)(v0 - 456);
}

uint64_t sub_256B3DEDC()
{
  return *(void *)(v0 - 432);
}

uint64_t sub_256B3DF00()
{
  return v0;
}

void sub_256B3DF14()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v0 + 24) = *(void *)(v1 - 96);
}

id sub_256B3DF28()
{
  *(_WORD *)(v0 + 12) = 2112;
  return v1;
}

id sub_256B3DF48()
{
  *(_WORD *)(v0 + 12) = 2112;
  return v1;
}

uint64_t sub_256B3DF68(uint64_t a1)
{
  *(void *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease();
}

BOOL sub_256B3DF88()
{
  return sub_256B366D0(v1, v0);
}

uint64_t sub_256B3DFA8()
{
  return swift_arrayDestroy();
}

uint64_t sub_256B3DFC8(uint64_t a1)
{
  *(void *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease_n();
}

void sub_256B3DFE8(__n128 a1)
{
  *(__n128 *)(v2 - 480) = a1;
  *(void *)(v2 - 424) = v1;
}

void sub_256B3DFFC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_256B3E030()
{
  *(void *)(v0 - 160) = v1;
}

uint64_t sub_256B3E040()
{
  return swift_arrayDestroy();
}

uint64_t sub_256B3E05C(uint64_t a1)
{
  *(void *)(v1 - 272) = a1;
  return sub_256B3FAA0();
}

void sub_256B3E088()
{
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v2 + 6);
}

uint64_t sub_256B3E0B4(uint64_t a1)
{
  *(void *)(v1 - 248) = a1;
  return sub_256B3FAA0();
}

BOOL sub_256B3E0EC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_256B3E108()
{
  return sub_256B3B598(v0, v1, (uint64_t *)(v2 - 248));
}

BOOL sub_256B3E124(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_256B3E140()
{
  return swift_release();
}

uint64_t sub_256B3E158()
{
  *(void *)(v1 - 352) = v0;
  return swift_retain();
}

uint64_t sub_256B3E174(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_256B3B598(v3, v4, a3);
}

__n128 sub_256B3E18C(uint64_t a1)
{
  *(void *)(v2 - 168) = a1;
  __n128 result = *(__n128 *)(v2 - 416);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_256B3E1A8(uint64_t a1)
{
  *(void *)(v1 - 248) = a1;
  return sub_256B3FAA0();
}

uint64_t sub_256B3E1D0()
{
  return swift_arrayDestroy();
}

BOOL sub_256B3E204(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_256B3E230()
{
  return swift_arrayDestroy();
}

void sub_256B3E24C(uint64_t a1)
{
  *(void *)(v1 + 14) = a1;
  *uint64_t v2 = a1;
}

id sub_256B3E268()
{
  *(_WORD *)(v0 + 12) = 2112;
  return v1;
}

uint64_t sub_256B3E284()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_256B3E29C()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_256B3E2B8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_256B3E2D4()
{
  return swift_retain();
}

uint64_t sub_256B3E2F0()
{
  return swift_willThrow();
}

void sub_256B3E30C()
{
  *(void *)(v1 - 456) = v0 + 8;
}

id sub_256B3E31C(uint64_t a1, const char *a2)
{
  uint64_t v5 = *(void **)(v3 - 384);
  return objc_msgSend(v5, a2, v2);
}

void sub_256B3E338(uint64_t a1)
{
  *(void *)(v2 - 384) = a1;
  os_unfair_lock_unlock(v1);
}

uint64_t sub_256B3E354()
{
  return sub_256B3F690();
}

uint64_t sub_256B3E370()
{
  return v0;
}

id sub_256B3E380(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2, v4);
}

void sub_256B3E39C()
{
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v2 + 6);
}

uint64_t sub_256B3E3BC()
{
  return *(void *)(v0 - 344);
}

uint64_t sub_256B3E3CC()
{
  return swift_bridgeObjectRelease_n();
}

BOOL sub_256B3E3E8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_256B3E404()
{
  *(void *)(v2 - 424) = v0 + 8;
  *(void *)(v2 - 400) = v1;
}

uint64_t sub_256B3E41C()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_256B3E434()
{
  return *(void *)(v0 - 432);
}

uint64_t sub_256B3E44C(uint64_t result)
{
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_256B3E458()
{
  return sub_256B3F4A0();
}

void sub_256B3E480()
{
}

uint64_t sub_256B3E498@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

id sub_256B3E4A4()
{
  return v0;
}

uint64_t sub_256B3E4BC()
{
  return *(void *)(v0 - 352);
}

unint64_t sub_256B3E4C8()
{
  return sub_256A4993C();
}

id sub_256B3E4EC@<X0>(void *a1@<X8>)
{
  *(void *)(v3 - 456) = v1;
  *(void *)(v3 - 464) = v2;
  return a1;
}

BOOL sub_256B3E50C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_256B3E528()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v0 + 24) = *(void *)(v1 - 96);
}

id sub_256B3E53C()
{
  *(_WORD *)(v1 + 12) = 2112;
  return v0;
}

id sub_256B3E55C()
{
  *(_WORD *)(v0 + 12) = 2112;
  return v1;
}

BOOL sub_256B3E57C()
{
  return sub_256B366D0(v1, v0);
}

void sub_256B3E59C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_256B3E5BC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x20u);
}

uint64_t sub_256B3E5DC()
{
  *(void *)(v1 - 384) = v0;
  return swift_bridgeObjectRetain();
}

void sub_256B3E5FC()
{
  *(void *)(v6 - 392) = v0;
  *(void *)(v6 - 408) = v3;
  *(void *)(v6 - 416) = v1;
  *(void *)(v6 - 496) = v5;
  *(void *)(v6 - 488) = v4;
  *(void *)(v6 - 480) = v2;
}

uint64_t sub_256B3E634()
{
  return v0;
}

uint64_t sub_256B3E648()
{
  return v0;
}

uint64_t sub_256B3E65C()
{
  return v0;
}

uint64_t sub_256B3E674()
{
  return swift_arrayDestroy();
}

void sub_256B3E694()
{
  **(void **)(v2 - 376) = v1;
}

uint64_t sub_256B3E6B4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_256B3E6D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_256B3E6E8()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v1 - 272) = *(void *)(v1 - 384);
  return sub_256B3FAA0();
}

uint64_t sub_256B3E728()
{
  *(_WORD *)(v0 + 12) = 2048;
  *(void *)(v1 - 280) = *(void *)(v1 - 344);
  return sub_256B3FAA0();
}

void sub_256B3E768(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_256B3E78C(uint64_t result)
{
  *(void *)(v1 - 248) = result;
  return result;
}

uint64_t sub_256B3E798(uint64_t result)
{
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_256B3E7A4(uint64_t result)
{
  *(void *)(v1 - 248) = result;
  return result;
}

void sub_256B3E7B0(__n128 a1)
{
  *(__n128 *)(v1 - 448) = a1;
}

id sub_256B3E7BC()
{
  return v0;
}

uint64_t sub_256B3E7D4()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v1 - 248) = *(void *)(v1 - 392);
  return sub_256B3FAA0();
}

void sub_256B3E810()
{
  uint64_t v2 = *(void **)(v0 - 400);
}

__n128 sub_256B3E828(uint64_t a1)
{
  *(void *)(v3 - 368) = a1;
  *(void *)(v3 - 272) = a1;
  __n128 result = *(__n128 *)(v3 - 464);
  *uint64_t v1 = result.n128_u32[0];
  *(void *)(v3 - 392) = v2;
  return result;
}

uint64_t sub_256B3E864()
{
  return sub_256B3F470();
}

void sub_256B3E87C()
{
  void *v0 = v1;
}

id sub_256B3E8A0()
{
  return v0;
}

void sub_256B3E8B8()
{
  *uint64_t v1 = v2;
}

uint64_t sub_256B3E8D0()
{
  return sub_256B3F470();
}

id sub_256B3E8E8()
{
  *(_WORD *)(v1 + 12) = 2112;
  return v0;
}

uint64_t sub_256B3E908()
{
  return swift_bridgeObjectRetain();
}

void sub_256B3E92C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x20u);
}

uint64_t sub_256B3E960()
{
  return *(void *)(v0 - 280);
}

uint64_t sub_256B3E98C(uint64_t result)
{
  *(void *)(v1 - 248) = result;
  return result;
}

void sub_256B3E998()
{
  _Block_release(v0);
}

uint64_t sub_256B3E9B0(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(result + 24) = v2;
  return result;
}

void sub_256B3E9BC()
{
  *(void *)(v0 - 344) = v0 - 152;
  *(void *)(v0 - 424) = *(void *)(v0 - 352) + 8;
}

id sub_256B3E9E8@<X0>(void *a1@<X8>)
{
  *(void *)(v2 - 520) = v1;
  return a1;
}

void sub_256B3EA00()
{
  sub_256B34D64();
}

uint64_t sub_256B3EA18()
{
  return *(void *)(v0 - 344);
}

uint64_t sub_256B3EA30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_256B3EA54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_256B3B598(v3, v4, a3);
}

void sub_256B3EA6C(float a1)
{
  *uint64_t v1 = a1;
}

BOOL sub_256B3EA7C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_256B3EA98(void *a1)
{
  *(_DWORD *)uint64_t v2 = *(_OWORD *)(v4 - 448);
  *(void *)(v2 + 4) = v3;
  *a1 = v1;
}

id sub_256B3EACC()
{
  *(_WORD *)(v0 + 12) = 2112;
  return v1;
}

uint64_t sub_256B3EAE8()
{
  *(void *)(v1 - 352) = v0;
  return swift_retain();
}

uint64_t sub_256B3EB04()
{
  return v0;
}

uint64_t sub_256B3EB1C()
{
  return swift_beginAccess();
}

void sub_256B3EB60(uint64_t a1)
{
  *(void *)(v1 + 14) = a1;
  *uint64_t v2 = a1;
}

uint64_t sub_256B3EB7C()
{
  return v0;
}

__n128 sub_256B3EBA0(uint64_t a1)
{
  *(void *)(v2 - 368) = a1;
  *(void *)(v2 - 240) = a1;
  __n128 result = *(__n128 *)(v2 - 464);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_256B3EBC4()
{
  return *(void *)(v0 - 336);
}

uint64_t sub_256B3EBD0()
{
  return swift_bridgeObjectRetain();
}

void sub_256B3EBE8(uint64_t a1@<X8>)
{
  **(void **)(a1 - 256) = v2;
}

uint64_t sub_256B3EC04()
{
  return v0;
}

uint64_t sub_256B3EC34()
{
  return swift_beginAccess();
}

uint64_t sub_256B3EC5C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_256B3EC8C()
{
  return v0;
}

__n128 sub_256B3EC9C(uint64_t a1)
{
  *(void *)(v2 - 168) = a1;
  __n128 result = *(__n128 *)(v2 - 464);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_256B3ECB8()
{
  return v0;
}

uint64_t sub_256B3ECD4()
{
  return v0;
}

uint64_t sub_256B3ED18()
{
  return swift_release();
}

void sub_256B3ED30(__n128 a1)
{
  *(__n128 *)(v1 - 416) = a1;
}

id sub_256B3ED3C()
{
  return v0;
}

uint64_t sub_256B3ED54()
{
  return sub_256B3F470();
}

uint64_t sub_256B3ED78(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(void *)(v1 - 368) = result + 16;
  return result;
}

id sub_256B3ED90()
{
  return v0;
}

uint64_t sub_256B3EDC0()
{
  return v0;
}

id sub_256B3EDD0(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

id sub_256B3EDE8(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void sub_256B3EE00()
{
  os_unfair_lock_unlock(v0);
}

void sub_256B3EE18()
{
  _Block_release(v0);
}

_WORD *sub_256B3EE30(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t sub_256B3EE3C(uint64_t result)
{
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_256B3EE54(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(result + 24) = v2;
  return result;
}

void sub_256B3EE60()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_256B3EE70(uint64_t a1, unint64_t a2)
{
  return sub_256B3B598(a1, a2, (uint64_t *)(v2 - 168));
}

uint64_t sub_256B3EE88()
{
  return swift_willThrow();
}

void sub_256B3EEAC()
{
  sub_256B34D64();
}

void sub_256B3EEC4()
{
  void *v0 = v1;
}

uint64_t sub_256B3EEDC()
{
  *(void *)(v1 - 376) = v0;
  return swift_retain();
}

void sub_256B3EF00(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0x20u);
}

uint64_t sub_256B3EF18()
{
  return v0;
}

void sub_256B3EF28(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_256B3EF40()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_256B3EF58(uint64_t a1)
{
  *(void *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_256B3EF78()
{
  return sub_256B3FAA0();
}

uint64_t sub_256B3EF98@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 232) = *(void *)(a1 - 256);
  return v1 - 232;
}

__n128 sub_256B3EFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v9;
  __n128 result = a9;
  *(__n128 *)(a1 + 40) = a9;
  return result;
}

void sub_256B3EFC0()
{
  *(_WORD *)(v0 + 22) = 2048;
  *(void *)(v0 + 24) = *(void *)(v1 - 96);
}

void sub_256B3EFD4()
{
  *(_WORD *)(v0 + 12) = 2048;
}

uint64_t sub_256B3EFE8()
{
  *(_WORD *)(v1 + 12) = 2112;
  return v0;
}

uint64_t sub_256B3EFFC()
{
  return v0;
}

uint64_t sub_256B3F010()
{
  return v0;
}

void sub_256B3F04C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

__n128 sub_256B3F06C(uint64_t a1)
{
  *(void *)(v2 - 168) = a1;
  __n128 result = *(__n128 *)(v2 - 384);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

BOOL sub_256B3F080()
{
  return sub_256B366D0(v0, v1);
}

uint64_t sub_256B3F0A0()
{
  return v0;
}

uint64_t sub_256B3F0B4()
{
  return swift_release();
}

uint64_t sub_256B3F0CC()
{
  return swift_arrayDestroy();
}

uint64_t sub_256B3F10C()
{
  return sub_256B3F8F0();
}

uint64_t sub_256B3F124()
{
  return v0;
}

uint64_t sub_256B3F130()
{
  return MEMORY[0x270EEDDD8]();
}

uint64_t sub_256B3F140()
{
  return MEMORY[0x270EEDE08]();
}

uint64_t sub_256B3F150()
{
  return MEMORY[0x270EEDE20]();
}

uint64_t sub_256B3F160()
{
  return MEMORY[0x270EEDEF0]();
}

uint64_t sub_256B3F170()
{
  return MEMORY[0x270EEDF28]();
}

uint64_t sub_256B3F180()
{
  return MEMORY[0x270EEDF40]();
}

uint64_t sub_256B3F190()
{
  return MEMORY[0x270EEE620]();
}

uint64_t sub_256B3F1A0()
{
  return MEMORY[0x270EEE640]();
}

uint64_t sub_256B3F1B0()
{
  return MEMORY[0x270EEE660]();
}

uint64_t sub_256B3F1C0()
{
  return MEMORY[0x270EEE668]();
}

uint64_t sub_256B3F1D0()
{
  return MEMORY[0x270EEE690]();
}

uint64_t sub_256B3F1E0()
{
  return MEMORY[0x270EEE918]();
}

uint64_t sub_256B3F1F0()
{
  return MEMORY[0x270EEE928]();
}

uint64_t sub_256B3F200()
{
  return MEMORY[0x270EEE938]();
}

uint64_t sub_256B3F210()
{
  return MEMORY[0x270EEE948]();
}

uint64_t sub_256B3F220()
{
  return MEMORY[0x270EEEA58]();
}

uint64_t sub_256B3F230()
{
  return MEMORY[0x270EEF838]();
}

uint64_t sub_256B3F240()
{
  return MEMORY[0x270EEFC18]();
}

uint64_t sub_256B3F250()
{
  return MEMORY[0x270EEFC50]();
}

uint64_t sub_256B3F260()
{
  return MEMORY[0x270EEFC60]();
}

uint64_t sub_256B3F270()
{
  return MEMORY[0x270EEFD20]();
}

uint64_t sub_256B3F280()
{
  return MEMORY[0x270EEFD88]();
}

uint64_t sub_256B3F290()
{
  return MEMORY[0x270EEFE28]();
}

uint64_t sub_256B3F2A0()
{
  return MEMORY[0x270EEFE70]();
}

uint64_t sub_256B3F2B0()
{
  return MEMORY[0x270EEFE78]();
}

uint64_t sub_256B3F2C0()
{
  return MEMORY[0x270EEFF08]();
}

uint64_t sub_256B3F2D0()
{
  return MEMORY[0x270EEFF10]();
}

uint64_t sub_256B3F2E0()
{
  return MEMORY[0x270EEFF48]();
}

uint64_t sub_256B3F2F0()
{
  return MEMORY[0x270EEFF50]();
}

uint64_t sub_256B3F300()
{
  return MEMORY[0x270EEFF70]();
}

uint64_t sub_256B3F310()
{
  return MEMORY[0x270EEFFA0]();
}

uint64_t sub_256B3F320()
{
  return MEMORY[0x270EEFFA8]();
}

uint64_t sub_256B3F330()
{
  return MEMORY[0x270EEFFC0]();
}

uint64_t sub_256B3F340()
{
  return MEMORY[0x270EEFFD0]();
}

uint64_t sub_256B3F350()
{
  return MEMORY[0x270EF0010]();
}

uint64_t sub_256B3F360()
{
  return MEMORY[0x270EF0028]();
}

uint64_t sub_256B3F370()
{
  return MEMORY[0x270EF0088]();
}

uint64_t sub_256B3F380()
{
  return MEMORY[0x270EF00A0]();
}

uint64_t sub_256B3F390()
{
  return MEMORY[0x270EF00B8]();
}

uint64_t sub_256B3F3A0()
{
  return MEMORY[0x270EF00E0]();
}

uint64_t sub_256B3F3B0()
{
  return MEMORY[0x270EF0128]();
}

uint64_t sub_256B3F3C0()
{
  return MEMORY[0x270EF0170]();
}

uint64_t sub_256B3F3D0()
{
  return MEMORY[0x270EF01A0]();
}

uint64_t sub_256B3F3E0()
{
  return MEMORY[0x270EF01C8]();
}

uint64_t sub_256B3F3F0()
{
  return MEMORY[0x270EF02B8]();
}

uint64_t sub_256B3F400()
{
  return MEMORY[0x270EF0990]();
}

uint64_t sub_256B3F410()
{
  return MEMORY[0x270EF0C38]();
}

uint64_t sub_256B3F420()
{
  return MEMORY[0x270EF0C50]();
}

uint64_t sub_256B3F430()
{
  return MEMORY[0x270EF0D00]();
}

uint64_t sub_256B3F440()
{
  return MEMORY[0x270EF0D10]();
}

uint64_t sub_256B3F450()
{
  return MEMORY[0x270EF0FA8]();
}

uint64_t sub_256B3F460()
{
  return MEMORY[0x270EF10B0]();
}

uint64_t sub_256B3F470()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_256B3F480()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_256B3F490()
{
  return MEMORY[0x270FA2E18]();
}

uint64_t sub_256B3F4A0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_256B3F4B0()
{
  return MEMORY[0x270FA1970]();
}

uint64_t sub_256B3F4C0()
{
  return MEMORY[0x270FA1980]();
}

uint64_t sub_256B3F4D0()
{
  return MEMORY[0x270FA1990]();
}

uint64_t sub_256B3F4E0()
{
  return MEMORY[0x270FA19A8]();
}

uint64_t sub_256B3F4F0()
{
  return MEMORY[0x270FA19B0]();
}

uint64_t sub_256B3F500()
{
  return MEMORY[0x270FA19C8]();
}

uint64_t sub_256B3F510()
{
  return MEMORY[0x270FA19D8]();
}

uint64_t sub_256B3F520()
{
  return MEMORY[0x270FA19E8]();
}

uint64_t sub_256B3F530()
{
  return MEMORY[0x270FA19F8]();
}

uint64_t sub_256B3F540()
{
  return MEMORY[0x270FA1A10]();
}

uint64_t sub_256B3F550()
{
  return MEMORY[0x270FA1A40]();
}

uint64_t sub_256B3F560()
{
  return MEMORY[0x270FA09F0]();
}

uint64_t sub_256B3F570()
{
  return MEMORY[0x270FA0A50]();
}

uint64_t sub_256B3F580()
{
  return MEMORY[0x270EEAB00]();
}

uint64_t sub_256B3F590()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_256B3F5A0()
{
  return MEMORY[0x270EEAC48]();
}

uint64_t sub_256B3F5B0()
{
  return MEMORY[0x270EEACC8]();
}

uint64_t sub_256B3F5C0()
{
  return MEMORY[0x270EEACD8]();
}

uint64_t sub_256B3F5D0()
{
  return MEMORY[0x270EF1810]();
}

uint64_t sub_256B3F5E0()
{
  return MEMORY[0x270EF1848]();
}

uint64_t sub_256B3F5F0()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_256B3F600()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_256B3F610()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_256B3F620()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_256B3F630()
{
  return MEMORY[0x270EF1900]();
}

uint64_t sub_256B3F640()
{
  return MEMORY[0x270EF1920]();
}

uint64_t sub_256B3F650()
{
  return MEMORY[0x270EF1930]();
}

uint64_t sub_256B3F660()
{
  return MEMORY[0x270EF1940]();
}

uint64_t sub_256B3F670()
{
  return MEMORY[0x270EF1948]();
}

uint64_t sub_256B3F680()
{
  return MEMORY[0x270EF1960]();
}

uint64_t sub_256B3F690()
{
  return MEMORY[0x270EF19A8]();
}

uint64_t sub_256B3F6A0()
{
  return MEMORY[0x270EF19D0]();
}

uint64_t sub_256B3F6B0()
{
  return MEMORY[0x270EF19F0]();
}

uint64_t sub_256B3F6C0()
{
  return MEMORY[0x270EF1A08]();
}

uint64_t sub_256B3F6D0()
{
  return MEMORY[0x270EF1A48]();
}

uint64_t sub_256B3F6E0()
{
  return MEMORY[0x270EF1AA0]();
}

uint64_t sub_256B3F6F0()
{
  return MEMORY[0x270EF1AD8]();
}

uint64_t sub_256B3F700()
{
  return MEMORY[0x270EF1B00]();
}

uint64_t sub_256B3F710()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_256B3F720()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_256B3F730()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_256B3F740()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_256B3F750()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_256B3F760()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_256B3F770()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_256B3F780()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_256B3F790()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_256B3F7A0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_256B3F7C0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_256B3F7D0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_256B3F7E0()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_256B3F7F0()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_256B3F810()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_256B3F820()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_256B3F830()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_256B3F840()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_256B3F850()
{
  return MEMORY[0x270EF1B90]();
}

uint64_t sub_256B3F860()
{
  return MEMORY[0x270EF1BB0]();
}

uint64_t sub_256B3F870()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_256B3F880()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_256B3F890()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_256B3F8A0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_256B3F8B0()
{
  return MEMORY[0x270F9DCF0]();
}

uint64_t sub_256B3F8C0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_256B3F8D0()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_256B3F8E0()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_256B3F8F0()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_256B3F900()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_256B3F910()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_256B3F920()
{
  return MEMORY[0x270FA1F30]();
}

uint64_t sub_256B3F930()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_256B3F940()
{
  return MEMORY[0x270FA1F50]();
}

uint64_t sub_256B3F950()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_256B3F960()
{
  return MEMORY[0x270EF1CA0]();
}

uint64_t sub_256B3F980()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_256B3F990()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_256B3F9A0()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_256B3F9B0()
{
  return MEMORY[0x270F9DFC0]();
}

uint64_t sub_256B3F9C0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_256B3F9D0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_256B3F9E0()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_256B3F9F0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_256B3FA00()
{
  return MEMORY[0x270EF1F68]();
}

uint64_t sub_256B3FA10()
{
  return MEMORY[0x270FA0C58]();
}

uint64_t sub_256B3FA20()
{
  return MEMORY[0x270FA0D48]();
}

uint64_t sub_256B3FA30()
{
  return MEMORY[0x270FA0DC0]();
}

uint64_t sub_256B3FA40()
{
  return MEMORY[0x270EF2058]();
}

uint64_t sub_256B3FA50()
{
  return MEMORY[0x270EF20F0]();
}

uint64_t sub_256B3FA60()
{
  return MEMORY[0x270EF2118]();
}

uint64_t sub_256B3FA70()
{
  return MEMORY[0x270EF2190]();
}

uint64_t sub_256B3FA90()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_256B3FAA0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_256B3FAB0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_256B3FAC0()
{
  return MEMORY[0x270EF2588]();
}

uint64_t sub_256B3FAD0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_256B3FAE0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_256B3FAF0()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_256B3FB00()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_256B3FB10()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_256B3FB20()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_256B3FB30()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_256B3FB40()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_256B3FB50()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_256B3FB60()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_256B3FB70()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_256B3FB80()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_256B3FB90()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_256B3FBA0()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_256B3FBB0()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_256B3FBC0()
{
  return MEMORY[0x270F9EAD0]();
}

uint64_t sub_256B3FBD0()
{
  return MEMORY[0x270F9EAE0]();
}

uint64_t sub_256B3FBE0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_256B3FC00()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_256B3FC10()
{
  return MEMORY[0x270F9EF18]();
}

uint64_t sub_256B3FC20()
{
  return MEMORY[0x270F9EF20]();
}

uint64_t sub_256B3FC30()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_256B3FC40()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_256B3FC50()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_256B3FC60()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_256B3FC70()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_256B3FC80()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_256B3FC90()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_256B3FCA0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_256B3FCB0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_256B3FCC0()
{
  return MEMORY[0x270F9F210]();
}

uint64_t sub_256B3FCD0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_256B3FCE0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_256B3FCF0()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_256B3FD00()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_256B3FD10()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_256B3FD20()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_256B3FD30()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_256B3FD40()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_256B3FD50()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_256B3FD70()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_256B3FD80()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_256B3FD90()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_256B3FDA0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_256B3FDB0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_256B3FDC0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_256B3FDD0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_256B3FDE0()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_256B3FDF0()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_256B3FE00()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_256B3FE10()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_256B3FE20()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_256B3FE30()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_256B3FE40()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_256B3FE50()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_256B3FE60()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_256B3FE70()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_256B3FE80()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_256B3FEA0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_256B3FEB0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_256B3FEC0()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_256B3FEE0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_256B3FEF0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_256B3FF00()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_256B3FF10()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_256B3FF20()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_256B3FF30()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_256B3FF40()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_256B3FF50()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_256B3FF60()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_256B3FF70()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_256B3FF80()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_256B3FF90()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x270F960E8]();
}

uint64_t MobileGestalt_get_deviceSupportsGenerativeModelSystems()
{
  return MEMORY[0x270F96120]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x270EDA760](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x270FA2408]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x270FA0600]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x270FA0608]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x270EDBD40](xarray);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x270EDBD90](xarray, index);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x270EDBDE8](xBOOL);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x270EDBFB0](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x270EDBFC0](xdata);
}

uint64_t xpc_date_get_value_absolute()
{
  return MEMORY[0x270EDBFE0]();
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x270EDBFF0](xdict, applier);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  MEMORY[0x270EDC178](xdouble);
  return result;
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x270EDC1F8](object);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x270EDC220](xint);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x270EDC400](xstring);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return MEMORY[0x270EDC438](xuint);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x270EDC468](xuuid);
}