uint64_t sub_1E0E399A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1E0E399CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1E0E399F4()
{
  return sub_1E0E31C64(*(void *)(v0 + 16));
}

uint64_t sub_1E0E39A04@<X0>(uint64_t a1@<X8>)
{
  return sub_1E0E31E2C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1E0E39A0C(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  if (a8)
  {
    sub_1E0E1B03C(result, a2, a3);
    sub_1E0E1B03C(a4, a5, a6);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1E0E39A70(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  if (a8)
  {
    sub_1E0E1B0C8(result, a2, a3);
    sub_1E0E1B0C8(a4, a5, a6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E0E39AD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1E0E333A4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1E0E39ADC()
{
  unint64_t result = qword_1EAD6E8A0;
  if (!qword_1EAD6E8A0)
  {
    sub_1E0E35F5C(255);
    sub_1E0E35BB4(&qword_1EAD6E898, (void (*)(uint64_t))sub_1E0E35E7C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6E8A0);
  }
  return result;
}

uint64_t sub_1E0E39B88()
{
  return sub_1E0E33328();
}

void sub_1E0E39B90()
{
}

unint64_t sub_1E0E39BB0()
{
  unint64_t result = qword_1EAD6E8A8;
  if (!qword_1EAD6E8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6E8A8);
  }
  return result;
}

void sub_1E0E39C04()
{
}

uint64_t sub_1E0E39C2C()
{
  return 8;
}

uint64_t sub_1E0E39C38()
{
  return swift_release();
}

uint64_t sub_1E0E39C40(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1E0E39C50()
{
  return sub_1E0ECD070();
}

void *sub_1E0E39C94(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1E0E39CA0()
{
  if (!qword_1EAD6E8B0)
  {
    sub_1E0ECB500();
    unint64_t v0 = sub_1E0ECDA80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E8B0);
    }
  }
}

uint64_t sub_1E0E39D00()
{
  uint64_t v1 = type metadata accessor for FeatureRegulatoryInfoView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_1E0ECB810();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  sub_1E0E357CC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1E0ECC350();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = (v3 + v4 + v7) & ~v7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v10, v5);
  return MEMORY[0x1F4186498](v0, v10 + v8, v2 | v7 | 7);
}

uint64_t sub_1E0E39EBC()
{
  type metadata accessor for FeatureRegulatoryInfoView(0);
  sub_1E0ECB810();
  return sub_1E0E3367C();
}

void sub_1E0E39F88(uint64_t a1)
{
}

void sub_1E0E39FBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E3A020(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E0E3A088(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1E0E35C24(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0E3A108()
{
  return MEMORY[0x1E4FBB060];
}

uint64_t sub_1E0E3A114@<X0>(uint64_t *a1@<X8>)
{
  sub_1E0E3A158();
  uint64_t result = sub_1E0ECD820();
  *a1 = result;
  return result;
}

unint64_t sub_1E0E3A158()
{
  unint64_t result = qword_1EAD6DF48;
  if (!qword_1EAD6DF48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6DF48);
  }
  return result;
}

uint64_t sub_1E0E3A198(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E0ECD890();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1E4E3EF00](v8, a3);
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E0E3A308(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E0DEEA48(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v18;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1E4E3EF00](v9, a3);
      }
      else {
        id v10 = *(id *)(a3 + 8 * v9 + 32);
      }
      id v11 = v10;
      id v16 = v10;
      a1(&v17, &v16);
      if (v4)
      {
        swift_release();

        return v7;
      }
      uint64_t v4 = 0;

      uint64_t v12 = v17;
      uint64_t v18 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1E0DEEA48(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v18;
      }
      ++v9;
      *(void *)(v7 + 16) = v14 + 1;
      *(void *)(v7 + 8 * v14 + 32) = v12;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E3A498(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1E0DEEA48(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v8 = *(void *)(sub_1E0ECBEF0() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      a1(&v16, v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v16;
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1E0DEEA48(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v17;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      v9 += v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

void *sub_1E0E3A5F4(unint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = sub_1E0ECBEA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  v43 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v41 - v17;
  v19 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v19((char *)&v41 - v17, *MEMORY[0x1E4F65940], v7);
  uint64_t v44 = v3;
  uint64_t v46 = v3;
  v47 = v18;
  uint64_t result = (void *)sub_1E0E3A308((void (*)(uint64_t *__return_ptr, id *))sub_1E0E3B41C, (uint64_t)v45, a1);
  uint64_t v21 = result[2];
  int v42 = a3;
  uint64_t v22 = 0;
  if (v21)
  {
    v23 = result + 4;
    while (1)
    {
      uint64_t v24 = *v23++;
      BOOL v25 = __OFADD__(v22, v24);
      v22 += v24;
      if (v25) {
        break;
      }
      if (!--v21) {
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v41 = a2;
  swift_bridgeObjectRelease();
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v18, v7);
  uint64_t v27 = ((uint64_t (*)(char *, void, uint64_t))v19)(v15, *MEMORY[0x1E4F65938], v7);
  MEMORY[0x1F4188790](v27, v28);
  *(&v41 - 2) = v44;
  *(&v41 - 1) = (uint64_t)v15;
  uint64_t result = (void *)sub_1E0E3A308((void (*)(uint64_t *__return_ptr, id *))sub_1E0E3B4B4, (uint64_t)(&v41 - 4), a1);
  uint64_t v29 = result[2];
  if (v29)
  {
    uint64_t v30 = 0;
    v31 = result + 4;
    while (1)
    {
      uint64_t v32 = *v31++;
      BOOL v25 = __OFADD__(v30, v32);
      v30 += v32;
      if (v25) {
        break;
      }
      if (!--v29) {
        goto LABEL_11;
      }
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v30 = 0;
LABEL_11:
  swift_bridgeObjectRelease();
  v26(v15, v7);
  uint64_t v33 = (uint64_t)v43;
  uint64_t v34 = ((uint64_t (*)(char *, void, uint64_t))v19)(v43, *MEMORY[0x1E4F65948], v7);
  MEMORY[0x1F4188790](v34, v35);
  *(&v41 - 2) = v44;
  *(&v41 - 1) = v33;
  uint64_t result = (void *)sub_1E0E3A308((void (*)(uint64_t *__return_ptr, id *))sub_1E0E3B4B4, (uint64_t)(&v41 - 4), a1);
  uint64_t v36 = result[2];
  if (v36)
  {
    uint64_t v37 = 0;
    v38 = result + 4;
    while (1)
    {
      uint64_t v39 = *v38++;
      BOOL v25 = __OFADD__(v37, v39);
      v37 += v39;
      if (v25) {
        goto LABEL_20;
      }
      if (!--v36) {
        goto LABEL_17;
      }
    }
  }
  uint64_t v37 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  char v40 = v42 & 1;
  v26((char *)v33, v7);
  return sub_1E0E3A940(v22, v30, v37, v41, v40);
}

id sub_1E0E3A940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_1E0ECD160();
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v12 = sub_1E0ECBA30();
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v14 = sub_1E0ECD180();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  MEMORY[0x1F4188790](v16, v17);
  v19 = (char *)&v48 - v18;
  BOOL v20 = __OFADD__(a1, a2);
  uint64_t v21 = a1 + a2;
  if (v20)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v21 >= 1)
  {
    if ((a5 & 1) == 0 && a4 == 6)
    {
      sub_1E0ECD110();
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      sub_1E0ECD800();
      swift_bridgeObjectRelease();
      if (qword_1EAD69948 == -1) {
        goto LABEL_14;
      }
      goto LABEL_32;
    }
    sub_1E0E3B45C();
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v22 + 16) = xmmword_1E0F07C90;
    uint64_t v24 = MEMORY[0x1E4FBB5C8];
    *(void *)(v22 + 56) = v23;
    *(void *)(v22 + 64) = v24;
    *(void *)(v22 + 32) = v21;
    sub_1E0ECD1A0();
    v19 = v25;
    swift_bridgeObjectRelease();
    sub_1E0ECD150();
    sub_1E0ECD140();
    uint64_t v49 = v21;
    sub_1E0ECD120();
    sub_1E0ECD140();
    sub_1E0ECD170();
    uint64_t v49 = 0;
    unint64_t v50 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1)
    {
LABEL_10:
      id v26 = (id)qword_1EAD740B8;
      sub_1E0ECBA20();
      sub_1E0ECD1F0();
      uint64_t v28 = v27;
      goto LABEL_16;
    }
LABEL_31:
    swift_once();
    goto LABEL_10;
  }
  if (a3 < 1)
  {
    uint64_t v29 = (void *)sub_1E0ECD190();
    id v30 = HKUILocalizedString(v29);

    if (v30)
    {
      sub_1E0ECD1D0();
      v19 = v31;
    }
    else
    {
      v19 = 0;
    }
    goto LABEL_15;
  }
  sub_1E0ECD110();
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_32:
  }
    swift_once();
LABEL_14:
  id v32 = (id)qword_1EAD740B8;
  sub_1E0ECBA20();
  sub_1E0ECD1F0();
  v19 = v33;
LABEL_15:
  uint64_t v28 = 0;
LABEL_16:
  id v34 = objc_msgSend(objc_allocWithZone((Class)HKDisplayTypeContextItem), sel_init);
  uint64_t v35 = (void *)sub_1E0ECBDC0();
  id v36 = objc_msgSend(v35, sel_identifier);

  if (!v36)
  {
    sub_1E0ECD1D0();
    id v36 = (id)sub_1E0ECD190();
    swift_bridgeObjectRelease();
  }
  id v37 = objc_msgSend(self, sel_hk_chartOverlayAccessibilityIdentifier_, v36);

  if (v37 && (uint64_t v49 = 0, v50 = 0, sub_1E0ECD1C0(), v37, v50))
  {
    v38 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v34, sel_setAccessibilityIdentifier_, v38);

  sub_1E0E9455C();
  uint64_t v39 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setTitle_, v39);

  char v40 = self;
  id v41 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  id v42 = objc_msgSend(v40, sel_defaultContextViewColorsUsingColor_, v41);

  objc_msgSend(v34, sel_setMetricColors_, v42);
  sub_1E0DF92EC();
  uint64_t v44 = v43;
  objc_msgSend(v34, sel_setSelectedMetricColors_, v43);

  if (v19)
  {
    v45 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v34, sel_setValue_, v45);

  if (v28)
  {
    uint64_t v46 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
  }
  objc_msgSend(v34, sel_setUnit_, v46);

  objc_msgSend(v34, sel_setInfoHidden_, 0);
  return v34;
}

uint64_t sub_1E0E3B028@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  __swift_project_boxed_opaque_existential_0((void *)(*a1 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection), *(void *)(*a1 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection + 24));
  uint64_t v5 = sub_1E0ECBF50();
  v13[2] = a2;
  uint64_t v6 = sub_1E0E3A498((void (*)(uint64_t *__return_ptr, uint64_t))sub_1E0E3B43C, (uint64_t)v13, v5);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 32);
    while (1)
    {
      uint64_t v11 = *v10++;
      BOOL v12 = __OFADD__(v9, v11);
      v9 += v11;
      if (v12) {
        break;
      }
      if (!--v8) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = 0;
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v9;
  }
  return result;
}

uint64_t sub_1E0E3B12C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1E0ECBEA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBEB0();
  char v7 = sub_1E0ECBE90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v7 & 1;
  return result;
}

uint64_t sub_1E0E3B228()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI27BalanceMetricOverlayContext_selectedMetric;
  uint64_t v2 = sub_1E0ECBDF0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

id sub_1E0E3B294()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceMetricOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E3B338()
{
  return type metadata accessor for BalanceMetricOverlayContext();
}

uint64_t type metadata accessor for BalanceMetricOverlayContext()
{
  uint64_t result = qword_1EAD6E8C8;
  if (!qword_1EAD6E8C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0E3B38C()
{
  uint64_t result = sub_1E0ECBDF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1E0E3B41C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1E0E3B028(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1E0E3B43C@<X0>(void *a1@<X8>)
{
  return sub_1E0E3B12C(a1);
}

void sub_1E0E3B45C()
{
  if (!qword_1EAD69A30)
  {
    sub_1E0E1AB68();
    unint64_t v0 = sub_1E0ECD9C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD69A30);
    }
  }
}

uint64_t sub_1E0E3B4B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1E0E3B41C(a1, a2);
}

uint64_t *sub_1E0E3B4CC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1E0E3B4E4(void *a1@<X8>)
{
  *a1 = *v1;
}

id AudiogramLineSeriesPresentationStyle.__allocating_init(seriesEar:selectedEar:disableConnectionLines:disabledStyleOverride:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  id v9 = objc_allocWithZone(v4);
  return AudiogramLineSeriesPresentationStyle.init(seriesEar:selectedEar:disableConnectionLines:disabledStyleOverride:)(a1, a2, a3, a4);
}

id AudiogramLineSeriesPresentationStyle.init(seriesEar:selectedEar:disableConnectionLines:disabledStyleOverride:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)&v4[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_seriesEar] = a1;
  *(void *)&v4[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_selectedEar] = a2;
  if (a1 == a2) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!a2) {
    char v5 = 0;
  }
  if (a4) {
    char v6 = 2;
  }
  else {
    char v6 = v5;
  }
  v4[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_displayState] = v6;
  v4[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_disableConnectionLines] = a3 & 1;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for AudiogramLineSeriesPresentationStyle();
  return objc_msgSendSuper2(&v8, sel_init);
}

void sub_1E0E3B684()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)HKLineSeriesPresentationStyle), sel_init);
  if (*(unsigned char *)(v0 + OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_disableConnectionLines))
  {
    uint64_t v2 = 0;
  }
  else
  {
    sub_1E0E3BD5C();
    uint64_t v2 = v3;
  }
  objc_msgSend(v1, sel_setStrokeStyle_, v2);

  id v4 = sub_1E0E3BA28();
  char v5 = self;
  id v6 = objc_msgSend(v5, sel_sharedBehavior);
  if (!v6)
  {
    __break(1u);
    goto LABEL_18;
  }
  char v7 = v6;
  id v8 = objc_msgSend(v6, sel_features);

  if (!v8)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned int v9 = objc_msgSend(v8, sel_yodel);

  if (v9) {
    double v10 = 6.0;
  }
  else {
    double v10 = 4.0;
  }
  id v11 = objc_msgSend(v5, sel_sharedBehavior);
  if (!v11) {
    goto LABEL_19;
  }
  BOOL v12 = v11;
  id v13 = objc_msgSend(v11, sel_features);

  if (!v13)
  {
LABEL_20:
    __break(1u);
    return;
  }
  unsigned int v14 = objc_msgSend(v13, sel_yodel);

  if (v14) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 1;
  }
  id v16 = objc_msgSend(objc_allocWithZone((Class)HKLineSeriesPointMarkerStyle), sel_initWithColor_radius_style_, v4, v15, v10);

  objc_msgSend(v1, sel_setPointMarkerStyle_, v16);
  sub_1E0E3B940();
  if (v17)
  {
    sub_1E0E3BC18();
    v19 = v18;
    uint64_t v20 = *(void *)(v0 + OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_seriesEar);
    uint64_t v21 = HKAudiogramEarLocalizedKeyForEar(v20, 1);
    sub_1E0ECD1D0();

    uint64_t v22 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(self, sel_annotationStyleWithLabelStyle_localizedLabelKey_leftOfSeries_, v19, v22, v20 == 1);

    objc_msgSend(v1, sel_setLegendAnnotationStyle_, v23);
  }
}

void sub_1E0E3B940()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    id v1 = v0;
    id v2 = objc_msgSend(v0, sel_features);

    if (v2)
    {
      objc_msgSend(v2, sel_yodel);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1E0E3BA00()
{
  return sub_1E0E3BA3C((SEL *)&selRef_hk_hearingHealthAudiogramLeftEarLineColor, (SEL *)&selRef_hk_hearingHealthAudiogramRightEarLineColor);
}

id sub_1E0E3BA14()
{
  return sub_1E0E3BA3C((SEL *)&selRef_hk_hearingHealthAudiogramLeftEarAnnotationColor, (SEL *)&selRef_hk_hearingHealthAudiogramRightEarAnnotationColor);
}

id sub_1E0E3BA28()
{
  return sub_1E0E3BA3C((SEL *)&selRef_hk_hearingHealthAudiogramLeftEarPointMarkerColor, (SEL *)&selRef_hk_hearingHealthAudiogramRightEarPointMarkerColor);
}

id sub_1E0E3BA3C(SEL *a1, SEL *a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_seriesEar);
  if (v3)
  {
    if (v3 == 2)
    {
      int v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_displayState);
      id v6 = self;
      id v7 = [v6 *a2];
      id v8 = objc_msgSend(v6, sel_hk_hearingHealthAudiogramRightEarDeemphasizedColor);
      id v9 = objc_msgSend(v6, sel_hk_hearingHealthAudiogramDisabledLineColor);
      double v10 = v7;
      if (!v5) {
        goto LABEL_13;
      }
      double v10 = v8;
      if (v5 == 1) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    if (v3 == 1)
    {
      int v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_displayState);
      uint64_t v15 = self;
      id v7 = [v15 *a1];
      id v8 = objc_msgSend(v15, sel_hk_hearingHealthAudiogramLeftEarDeemphasizedColor);
      id v9 = objc_msgSend(v15, sel_hk_hearingHealthAudiogramDisabledLineColor);
      double v10 = v7;
      if (!v14) {
        goto LABEL_13;
      }
      double v10 = v8;
      if (v14 == 1) {
        goto LABEL_13;
      }
LABEL_12:
      double v10 = v9;
LABEL_13:
      id v16 = v10;

      return v16;
    }
    type metadata accessor for HKAudiogramEar(0);
    id result = (id)sub_1E0ECDA00();
    __break(1u);
  }
  else
  {
    id v11 = objc_msgSend(self, sel_hk_hearingHealthAudiogramDisabledLineColor);
    return v11;
  }
  return result;
}

void sub_1E0E3BC18()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (!v0)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_features);

  if (!v2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unsigned int v3 = objc_msgSend(v2, sel_yodel);

  if (v3) {
    double v4 = 14.0;
  }
  else {
    double v4 = 18.0;
  }
  double v5 = *MEMORY[0x1E4FB09D0];
  id v6 = sub_1E0E3BA14();
  id v7 = objc_msgSend(self, sel_hk_roundedSystemFontWithSize_weight_, v4, v5);
  id v8 = HKIntegerFormatter();
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(self, sel_labelStyleWithColor_font_horizontalAlignment_verticalAlignment_numberFormatter_, v6, v7, 0, 2, v8);

    return;
  }
LABEL_10:
  __break(1u);
}

void sub_1E0E3BD5C()
{
  id v1 = sub_1E0E3BA00();
  id v2 = objc_msgSend(self, sel_strokeStyleWithColor_lineWidth_, v1, 2.0);

  id v3 = objc_msgSend(self, sel_sharedBehavior);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  double v4 = v3;
  id v5 = objc_msgSend(v3, sel_features);

  if (!v5)
  {
LABEL_8:
    __break(1u);
    return;
  }
  unsigned __int8 v6 = objc_msgSend(v5, sel_yodel);

  BOOL v7 = (v6 & 1) == 0 && *(unsigned __int8 *)(v0 + OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_displayState) == 2;
  objc_msgSend(v2, sel_setDashStyle_, v7);
}

id AudiogramLineSeriesPresentationStyle.__deallocating_deinit()
{
  return sub_1E0E3DC1C(type metadata accessor for AudiogramLineSeriesPresentationStyle);
}

char *sub_1E0E3BE74(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1E0E3DD84(a1, a2, a3, 0, 0);
}

uint64_t sub_1E0E3BF3C(uint64_t a1, uint64_t a2, CGFloat *a3, CGContext *a4, uint64_t a5, id a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  id v11 = v10;
  CGFloat v18 = *a3;
  CGFloat v19 = a3[1];
  CGFloat v20 = a3[2];
  CGFloat v21 = a3[3];
  CGFloat v23 = a3[4];
  CGFloat v22 = a3[5];
  id v24 = objc_msgSend(a6, sel_axisAnnotationDelegateForSeries_, v10);
  if (((objc_msgSend(a6, sel_seriesDrawingDuringScrolling) & 1) != 0
     || (objc_msgSend(a6, sel_seriesDrawingDuringTiling) & 1) != 0
     || objc_msgSend(a6, sel_seriesDrawingDuringAutoscale))
    && v24)
  {
    objc_msgSend(v24, sel_clearAxisAnnotations);
  }
  v34.receiver = v11;
  v34.super_class = (Class)type metadata accessor for AudiogramLineSeries();
  v33.a = v18;
  v33.b = v19;
  v33.c = v20;
  v33.d = v21;
  v33.tx = v23;
  v33.ty = v22;
  objc_msgSendSuper2(&v34, sel_drawSeriesWithBlockCoordinates_axisRect_zoomLevelConfiguration_pointTransform_renderContext_secondaryRenderContext_seriesRenderingDelegate_, a1, a2, &v33, a4, a5, a6, a7, a8, a9, a10);
  BOOL v25 = *(void **)&v11[OBJC_IVAR___HKAudiogramLineSeries_selectedFrequency];
  if (v25)
  {
    id v26 = self;
    id v27 = v25;
    sub_1E0ECBD80();
    objc_msgSend(v26, sel_axisValueFromFrequency_);
    v33.a = v18;
    v33.b = v19;
    v33.c = v20;
    v33.d = v21;
    v33.tx = v23;
    v33.ty = v22;
    v35.y = 0.0;
    *(void *)&double v28 = *(_OWORD *)&CGPointApplyAffineTransform(v35, &v33);
    sub_1E0E3E100(a4, v28, a7, a8, a9, a10);
  }
  return swift_unknownObjectRelease();
}

void sub_1E0E3C21C(void *a1)
{
  id v3 = objc_msgSend(self, sel_sharedBehavior);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v4 = v3;
  id v5 = objc_msgSend(v3, sel_features);

  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  unsigned int v6 = objc_msgSend(v5, sel_yodel);

  if (v6)
  {
    id v7 = objc_msgSend(a1, sel_pointColor);
    objc_msgSend(a1, sel_radius);
    CGFloat v9 = v8 + v8;
    objc_msgSend(a1, sel_radius);
    CGFloat v11 = v10 + v10;
    BOOL v12 = self;
    id v13 = v7;
    id v14 = objc_msgSend(v12, sel_systemBackgroundColor);
    v16.origin.x = 0.0;
    v16.origin.y = 0.0;
    v16.size.width = v9;
    v16.size.height = v11;
    AudiogramPointMarker.makePointMarkerImage(bounds:)(v16);
  }
  else
  {
    v15.receiver = v1;
    v15.super_class = (Class)type metadata accessor for AudiogramLineSeries();
    objc_msgSendSuper2(&v15, sel_pointMarkerImageForPointMarkerStyle_, a1);
  }
}

uint64_t sub_1E0E3C430(void *a1)
{
  swift_getObjectType();
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = (void *)v2;
    swift_unknownObjectRetain();
    unsigned int v4 = objc_msgSend(v3, sel_isMasked);
    uint64_t v5 = 5;
    if (!v4) {
      uint64_t v5 = 1;
    }
    uint64_t v20 = v5;
    sub_1E0E3C21C(a1);
    uint64_t v7 = v6;
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EAD6D4E8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1E0ECC010();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EAD74150);
    swift_unknownObjectRetain_n();
    CGFloat v9 = sub_1E0ECBFF0();
    os_log_type_t v10 = sub_1E0ECD520();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = v12;
      *(_DWORD *)uint64_t v11 = 136446722;
      uint64_t v13 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v13, v14, &v20);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2082;
      sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6E920);
      uint64_t v15 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v15, v16, &v20);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 22) = 2082;
      swift_getObjectType();
      uint64_t v17 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v17, v18, &v20);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v9, v10, "[%{public}s] Unable to cast user info into %{public}s, found %{public}s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v12, -1, -1);
      MEMORY[0x1E4E41080](v11, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return 0;
  }
  return v7;
}

void sub_1E0E3C6F8(CGContext *a1, void *a2, uint64_t *a3, void *a4, void *a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = *a3;
  uint64_t v15 = a3[1];
  unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))a3[2];
  uint64_t v17 = (void *)a3[3];
  uint64_t v20 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a3[4];
  CGFloat v19 = a3[5];
  id v21 = objc_msgSend(self, sel_sharedBehavior);
  if (!v21)
  {
    __break(1u);
    goto LABEL_15;
  }
  CGFloat v22 = v21;
  id v23 = objc_msgSend(v21, sel_features);

  if (!v23)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unsigned int v24 = objc_msgSend(v23, sel_yodel);

  if (v24)
  {
    id v25 = objc_msgSend(v7, sel_pointMarkerImageForPointMarkerStyle_, a4);
    if (v25)
    {
      id v26 = v25;
      CGContextSaveGState(a1);
      v53 = v20;
      os_log_t osloga = v19;
      double v27 = HKChartSeriesPointMarkerBaseRect(v26);
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      id v52 = a2;
      id v34 = objc_msgSend(v7, sel_pointMarkerImageForPointMarkerStyle_, a5);
      id v35 = objc_msgSend(v7, sel_pointMarkerImageForPointMarkerStyle_, a6);
      id v36 = (double *)swift_allocObject();
      *((void *)v36 + 2) = v26;
      v36[3] = v27;
      *((void *)v36 + 4) = v29;
      *((void *)v36 + 5) = v31;
      *((void *)v36 + 6) = v33;
      *((void *)v36 + 7) = v7;
      *((void *)v36 + 8) = a4;
      *((void *)v36 + 9) = a5;
      *((void *)v36 + 10) = v34;
      *((void *)v36 + 11) = a6;
      *((void *)v36 + 12) = v35;
      *((void *)v36 + 13) = a1;
      *((void *)v36 + 14) = ObjectType;
      v60 = sub_1E0E3E390;
      os_log_t v61 = (os_log_t)v36;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v57 = 1107296256;
      v58 = sub_1E0E3D108;
      v59 = &block_descriptor_6;
      id v37 = _Block_copy(&aBlock);
      id v38 = v26;
      id v39 = v7;
      id v40 = a4;
      id v41 = a5;
      id v42 = v34;
      id v43 = a6;
      id v44 = v35;
      v45 = a1;
      swift_release();
      uint64_t aBlock = v16;
      uint64_t v57 = v15;
      v58 = v18;
      v59 = v17;
      v60 = v53;
      os_log_t v61 = osloga;
      objc_msgSend(v52, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v37);
      _Block_release(v37);
      CGContextRestoreGState(v45);
    }
    else
    {
      if (qword_1EAD6D4E8 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1E0ECC010();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EAD74150);
      oslog = sub_1E0ECBFF0();
      os_log_type_t v47 = sub_1E0ECD520();
      if (os_log_type_enabled(oslog, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t aBlock = v49;
        *(_DWORD *)uint64_t v48 = 136446210;
        uint64_t v50 = sub_1E0ECDBC0();
        sub_1E0DED7E4(v50, v51, &aBlock);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1E0B26000, oslog, v47, "[%{public}s] Unable to determine default point marker image", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v49, -1, -1);
        MEMORY[0x1E4E41080](v48, -1, -1);
      }
      else
      {
      }
    }
  }
  else
  {
    v62.receiver = v7;
    v62.super_class = (Class)type metadata accessor for AudiogramLineSeries();
    uint64_t aBlock = v16;
    uint64_t v57 = v15;
    v58 = v18;
    v59 = v17;
    v60 = v20;
    os_log_t v61 = v19;
    [(CGContext *)&v62 renderPointMarkersInContext:a1 blockCoordinates:a2 pointTransform:&aBlock pointMarkerStyle:a4 selectedBoundsMarkerStyle:a5 selectedPointMarkerStyle:a6];
  }
}

void sub_1E0E3CB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18)
{
  if (!a1 || (self, (uint64_t v27 = swift_dynamicCastObjCClass()) == 0))
  {
    if (qword_1EAD6D4E8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1E0ECC010();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EAD74150);
    swift_unknownObjectRetain_n();
    v45 = sub_1E0ECBFF0();
    os_log_type_t v46 = sub_1E0ECD520();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(void *)&long long v71 = v48;
      *(_DWORD *)uint64_t v47 = 136446466;
      uint64_t v49 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v49, v50, (uint64_t *)&v71);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2082;
      *(void *)&long long v69 = sub_1E0DED7E4(0xD000000000000026, 0x80000001E0F2A1B0, (uint64_t *)&v71);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_1E0B26000, v45, v46, "[%{public}s] Unable to cast coordinate to _HKLineSeriesBlockCoordinate, found type %{public}s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v48, -1, -1);
      MEMORY[0x1E4E41080](v47, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return;
  }
  uint64_t v28 = (void *)v27;
  swift_unknownObjectRetain();
  objc_msgSend(v28, sel_coordinate);
  double v30 = v29;
  double v32 = v31;
  id v33 = objc_msgSend(a12, sel_CGImage);
  if (!objc_msgSend(v28, sel_userInfo))
  {

    __break(1u);
    goto LABEL_37;
  }
  id v34 = (void *)sub_1E0E3C430(a14);
  swift_unknownObjectRelease();
  CGFloat v67 = v32;
  CGFloat v68 = v30;
  if (!v34) {
    goto LABEL_13;
  }
  id v35 = objc_msgSend(v34, sel_CGImage);
  if (!v35)
  {

LABEL_13:
    double v37 = a6;
    CGFloat v39 = a7;
    CGFloat v41 = a8;
    CGFloat v43 = a9;
    goto LABEL_14;
  }
  id v36 = v35;

  double v37 = HKChartSeriesPointMarkerBaseRect(v34);
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;

  id v33 = v36;
LABEL_14:
  objc_msgSend(a13, sel_selectedPathRange);
  long long v51 = v71;
  long long v52 = v72;
  *(void *)&long long v71 = a2;
  *((void *)&v71 + 1) = a3;
  *(void *)&long long v72 = a4;
  *((void *)&v72 + 1) = a5;
  long long v69 = v51;
  long long v70 = v52;
  if (HKGraphSeriesDataPointPathEqualToPath(&v71, &v69)
    || (objc_msgSend(a13, sel_selectedPathRange),
        *(void *)&long long v71 = a2,
        *((void *)&v71 + 1) = a3,
        *(void *)&long long v72 = a4,
        *((void *)&v72 + 1) = a5,
        long long v69 = v73,
        long long v70 = v74,
        HKGraphSeriesDataPointPathEqualToPath(&v71, &v69)))
  {
    uint64_t v66 = a5;
    if (objc_msgSend(v28, sel_userInfo))
    {
      v53 = v33;
      v54 = (void *)sub_1E0E3C430(a15);
      swift_unknownObjectRelease();
      if (v54)
      {
        id v55 = v54;
        v56 = v54;
      }
      else
      {
        v56 = a16;
        if (!a16) {
          goto LABEL_24;
        }
        id v55 = a16;
        v54 = 0;
      }
      id v57 = v54;
      id v58 = objc_msgSend(v55, sel_CGImage);
      if (v58)
      {
        v59 = v58;

        id v33 = v59;
        double v37 = HKChartSeriesPointMarkerBaseRect(v55);
        CGFloat v39 = v60;
        CGFloat v41 = v61;
        CGFloat v43 = v62;

LABEL_25:
        a5 = v66;
        goto LABEL_26;
      }

LABEL_24:
      id v33 = v53;
      goto LABEL_25;
    }
LABEL_37:

    __break(1u);
    goto LABEL_38;
  }
LABEL_26:
  objc_msgSend(a13, sel_selectedPathRange);
  *(void *)&long long v69 = a2;
  *((void *)&v69 + 1) = a3;
  *(void *)&long long v70 = a4;
  *((void *)&v70 + 1) = a5;
  if (!HKGraphSeriesDataPointPathInRange((uint64_t *)&v69, (uint64_t *)&v71)) {
    goto LABEL_33;
  }
  if (!objc_msgSend(v28, sel_userInfo))
  {
LABEL_38:

    __break(1u);
    return;
  }
  id v63 = (id)sub_1E0E3C430(a17);
  swift_unknownObjectRelease();
  if (v63) {
    goto LABEL_31;
  }
  if (a18)
  {
    id v63 = a18;
LABEL_31:
    id v64 = objc_msgSend(v63, sel_CGImage);

    if (v64)
    {

      id v33 = v64;
      double v37 = a6;
      CGFloat v39 = a7;
      CGFloat v41 = a8;
      CGFloat v43 = a9;
LABEL_34:
      id v65 = v33;
      v75.origin.x = v37;
      v75.origin.y = v39;
      v75.size.width = v41;
      v75.size.height = v43;
      CGRectOffset(v75, v68, v67);
      sub_1E0ECD4D0();
      swift_unknownObjectRelease();

      return;
    }
  }
LABEL_33:
  if (v33) {
    goto LABEL_34;
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1E0E3D108(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v11 = a3[3];
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v12(a2, v8, v9, v10, v11, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_1E0E3D29C(uint64_t a1, void *a2, char a3, double a4, double a5, double a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  id v23 = self;
  id v24 = objc_msgSend(v23, sel_sharedBehavior);
  if (!v24)
  {
    __break(1u);
    goto LABEL_20;
  }
  id v25 = v24;
  id v26 = objc_msgSend(v24, sel_features);

  if (!v26)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unsigned int v27 = objc_msgSend(v26, sel_yodel);

  if (!v27)
  {
    v45.receiver = v11;
    v45.super_class = (Class)type metadata accessor for AudiogramLineSeries();
    objc_msgSendSuper2(&v45, sel_drawLegendPointLabelInContext_point_untransformedPoint_axisRect_presentationStyle_leftOfPoint_, a1, a2, a3 & 1, a4, a5, a6, a7, a8, a9, a10, a11);
    return;
  }
  id v28 = objc_msgSend(a2, sel_pointMarkerStyle);
  if (!v28
    || (double v29 = v28, v30 = objc_msgSend(v28, sel_pointColor), v29, !v30))
  {
    id v30 = objc_msgSend(self, sel_redColor);
  }
  double v31 = a5 + -9.0;
  if (a3) {
    double v32 = a4 + -18.0 + -10.0;
  }
  else {
    double v32 = a4 + 10.0;
  }
  v46.size.width = 18.0;
  v46.size.height = 18.0;
  v46.origin.x = v32;
  v46.origin.y = v31;
  double MaxY = CGRectGetMaxY(v46);
  v47.origin.x = a8;
  v47.origin.y = a9;
  v47.size.width = a10;
  v47.size.height = a11;
  if (CGRectGetMaxY(v47) >= MaxY)
  {
    v50.size.width = 18.0;
    v50.size.height = 18.0;
    v50.origin.x = v32;
    v50.origin.y = v31;
    if (CGRectGetMinY(v50) >= 0.0) {
      double v35 = v31;
    }
    else {
      double v35 = 0.0;
    }
  }
  else
  {
    v48.origin.x = a8;
    v48.origin.y = a9;
    v48.size.width = a10;
    v48.size.height = a11;
    double v34 = CGRectGetMaxY(v48);
    v49.size.width = 18.0;
    v49.size.height = 18.0;
    v49.origin.x = v32;
    v49.origin.y = v31;
    double v35 = v31 + v34 - CGRectGetMaxY(v49);
  }
  id v36 = self;
  id v37 = v30;
  id v38 = objc_msgSend(v36, sel_systemBackgroundColor);
  id v39 = objc_msgSend(v23, sel_sharedBehavior);
  if (!v39) {
    goto LABEL_21;
  }
  double v40 = v39;
  id v41 = objc_msgSend(v39, sel_features);

  if (v41)
  {
    objc_msgSend(v41, sel_yodel);

    id v42 = v37;
    id v43 = v38;
    v51.size.width = 18.0;
    v51.size.height = 18.0;
    v51.origin.x = v32;
    v51.origin.y = v35;
    CGFloat Height = CGRectGetHeight(v51);
    sub_1E0E1F458(v32, v35, 18.0, 18.0, Height * 0.85);

    return;
  }
LABEL_22:
  __break(1u);
}

id sub_1E0E3D90C(char a1)
{
  if (a1)
  {
    sub_1E0E3B684();
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_pointMarkerStyle);

    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_pointColor);

      if (v4) {
        return v4;
      }
    }
    uint64_t v6 = &selRef_redColor;
  }
  else
  {
    uint64_t v6 = &selRef_hk_chartLollipopLabelColor;
  }
  id v7 = [self *v6];
  return v7;
}

uint64_t sub_1E0E3D9CC(double a1, double a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a1, a2);
  uint64_t v6 = swift_allocObject();
  *(double *)(v6 + 16) = a1;
  *(double *)(v6 + 24) = a2;
  *(void *)(v6 + 40) = 0;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 32) = v2;
  *(double *)(v6 + 56) = a1;
  *(double *)(v6 + 64) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1E0E3F3D8;
  *(void *)(v7 + 24) = v6;
  v12[4] = sub_1E0E3F3FC;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1E0E1E258;
  v12[3] = &block_descriptor_28;
  uint64_t v8 = _Block_copy(v12);
  id v9 = v2;
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v5, sel_imageWithActions_, v8);

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v5 & 1) == 0) {
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

id AudiogramLineSeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudiogramLineSeries.init()()
{
}

id AudiogramLineSeries.__deallocating_deinit()
{
  return sub_1E0E3DC1C(type metadata accessor for AudiogramLineSeries);
}

id sub_1E0E3DC1C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1E0E3DC64(void *a1, void *a2, double a3, CGFloat a4, double a5, double a6, double a7, double a8)
{
  unint64_t v14 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSaveGState(v14);
  CGAffineTransformMakeTranslation(&transform, 0.0, a4);
  CGAffineTransformScale(&v15, &transform, 1.0, -1.0);
  CGAffineTransform transform = v15;
  CGContextConcatCTM(v14, &transform);
  objc_msgSend(a2, sel_drawInRect_, a5, a6, a7, a8);
  CGContextRestoreGState(v14);
}

uint64_t sub_1E0E3DD50()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudiogramLineSeriesPresentationStyle()
{
  return self;
}

char *sub_1E0E3DD84(uint64_t a1, uint64_t a2, char a3, char a4, void *a5)
{
  id v10 = (objc_class *)type metadata accessor for AudiogramLineSeries();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR___HKAudiogramLineSeries_selectedFrequency] = 0;
  *(void *)&v11[OBJC_IVAR___HKAudiogramLineSeries_seriesEar] = a1;
  v40.receiver = v11;
  v40.super_class = v10;
  id v12 = objc_msgSendSuper2(&v40, sel_init);
  objc_msgSend(v12, sel_setDrawSelectionLineBehindAllSeries_, 1);
  objc_msgSend(v12, sel_setAllowsSelection_, a2 == 0);
  id v13 = v12;
  sub_1E0E8F13C();
  CGAffineTransform v15 = v14;
  objc_msgSend(v13, sel_setYAxis_, v14);

  uint64_t v16 = (char *)v13;
  sub_1E0E8F25C();
  unint64_t v18 = v17;
  objc_msgSend(v16, sel_setAxisScalingRule_, v17);

  CGFloat v19 = *(void **)&v16[OBJC_IVAR___HKAudiogramLineSeries_selectedFrequency];
  *(void *)&v16[OBJC_IVAR___HKAudiogramLineSeries_selectedFrequency] = a5;
  id v20 = a5;

  id v21 = objc_allocWithZone((Class)type metadata accessor for AudiogramLineSeriesPresentationStyle());
  id v22 = AudiogramLineSeriesPresentationStyle.init(seriesEar:selectedEar:disableConnectionLines:disabledStyleOverride:)(a1, a2, a3, a4);
  sub_1E0E3B684();
  id v24 = v23;
  sub_1E0E3F4B4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1E0F06EB0;
  *(void *)(v25 + 32) = v24;
  sub_1E0ECD340();
  sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6DC40);
  id v26 = v16;
  id v27 = v24;
  id v28 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setUnhighlightedPresentationStyles_, v28);

  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1E0F06EB0;
  *(void *)(v29 + 32) = v27;
  sub_1E0ECD340();
  id v30 = v26;
  id v31 = v27;
  double v32 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setHighlightedPresentationStyles_, v32);

  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1E0F06EB0;
  *(void *)(v33 + 32) = v31;
  sub_1E0ECD340();
  double v34 = v30;
  id v35 = v31;
  id v36 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSelectedPresentationStyles_, v36);

  objc_msgSend(v34, sel_setInactivePresentationStyle_, v35);
  id v37 = v34;
  id v38 = objc_msgSend(v35, sel_pointMarkerStyle);
  objc_msgSend(v37, sel_setSelectedPointMarkerStyle_, v38);

  return v37;
}

uint64_t type metadata accessor for AudiogramLineSeries()
{
  return self;
}

void sub_1E0E3E100(CGContext *a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  CGContextSaveGState(a1);
  id v12 = (id)HKAudiogramFrequencyAxisFont();
  id v24 = objc_msgSend(self, sel_configurationWithFont_scale_, v12, 1);
  id v13 = (void *)sub_1E0ECD190();
  id v14 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v13, v24);

  if (v14)
  {
    id v15 = objc_msgSend(self, sel_labelColor);
    id v16 = objc_msgSend(v14, sel_imageWithTintColor_renderingMode_, v15, 1);

    objc_msgSend(v14, sel_size);
    double v18 = v17;
    double v20 = v19;
    double v21 = a2 + v17 * -0.5;
    v26.origin.x = a3;
    v26.origin.y = a4;
    v26.size.width = a5;
    v26.size.height = a6;
    double MinY = CGRectGetMinY(v26);
    v27.origin.x = a3;
    v27.origin.y = a4;
    v27.size.width = a5;
    v27.size.height = a6;
    CGFloat Height = CGRectGetHeight(v27);
    CGContextTranslateCTM(a1, 0.0, Height + v20 * -1.5);
    objc_msgSend(v16, sel_drawInRect_, v21, MinY, v18, v20);
    CGContextRestoreGState(a1);

    id v12 = v14;
    id v24 = v16;
  }
  else
  {
    CGContextRestoreGState(a1);
  }
}

uint64_t sub_1E0E3E320()
{
  return MEMORY[0x1F4186498](v0, 120, 7);
}

void sub_1E0E3E390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1E0E3CB68(a1, a2, a3, a4, a5, *(double *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(CGFloat *)(v7 + 48), a6, a7, *(void **)(v7 + 16), *(void **)(v7 + 56), *(void **)(v7 + 64), *(void **)(v7 + 72), *(void **)(v7 + 80), *(void **)(v7 + 88), *(void **)(v7 + 96));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_1E0E3E3F0(unint64_t a1, unint64_t a2, unsigned char *a3)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    id v7 = (id)sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v7 != (id)1) {
      goto LABEL_52;
    }
  }
  else
  {
    id v7 = *(id *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7 != (id)1) {
      goto LABEL_52;
    }
  }
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 == (void *)2) {
      goto LABEL_5;
    }
LABEL_52:
    swift_bridgeObjectRetain();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (v8 != (void *)2) {
    goto LABEL_52;
  }
LABEL_5:
  if ((a1 & 0xC000000000000001) == 0)
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
      if (v9 != 1)
      {
        id v10 = *(void **)(a1 + 40);
        id v7 = *(id *)(a1 + 32);
        id v11 = v10;
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  id v7 = (id)MEMORY[0x1E4E3EF00](0, a1);
  id v11 = (id)MEMORY[0x1E4E3EF00](1, a1);
LABEL_9:
  uint64_t v8 = v11;
  unint64_t v4 = (unint64_t)&selRef_unselectedFillStyle;
  id v12 = objc_msgSend(v7, sel_userInfo);
  if (!v12)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  id v13 = v12;
  sub_1E0E3F45C();
  unint64_t v3 = sub_1E0ECD330();

  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_46:

LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
LABEL_45:
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_46;
  }
LABEL_12:
  if ((v3 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1E4E3EF00](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_49;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (!v14)
  {
LABEL_25:
    swift_unknownObjectRelease();

    goto LABEL_52;
  }
  unint64_t v3 = v14;
  unint64_t v32 = a1 & 0xC000000000000001;
  id v15 = [v8 *(SEL *)(v4 + 736)];
  if (v15)
  {
    id v16 = v15;
    unint64_t v4 = sub_1E0ECD330();

    if (!(v4 >> 62))
    {
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_19:
        if ((v4 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1E4E3EF00](0, v4);
          goto LABEL_22;
        }
        if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          swift_unknownObjectRetain();
LABEL_22:
          swift_bridgeObjectRelease();
          self;
          uint64_t v17 = swift_dynamicCastObjCClass();
          if (!v17
            || (double v18 = (void *)v17,
                objc_msgSend((id)v3, sel_frequencyHertz),
                double v20 = v19,
                objc_msgSend(v18, sel_frequencyHertz),
                v20 == v21))
          {
            swift_unknownObjectRelease();
            goto LABEL_25;
          }
          objc_msgSend(v7, sel_xDistanceFromFirstTouchPoint);
          double v23 = fabs(v22);
          objc_msgSend(v8, sel_xDistanceFromFirstTouchPoint);
          double v25 = fabs(v24);
          *a3 = 1;
          if (vabdd_f64(v23, v25) < 0.000001)
          {

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            return;
          }
          sub_1E0E3F4B4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_1E0F06EB0;
          if (v25 >= v23)
          {
            if (v32)
            {
              uint64_t v27 = 0;
              goto LABEL_33;
            }
            uint64_t v29 = *(void **)(a1 + 32);
          }
          else
          {
            if (v32)
            {
              uint64_t v27 = 1;
LABEL_33:
              id v28 = (id)MEMORY[0x1E4E3EF00](v27, a1);
LABEL_37:
              *(void *)(v26 + 32) = v28;
              sub_1E0ECD340();

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              return;
            }
            uint64_t v29 = *(void **)(a1 + 40);
          }
          id v28 = v29;
          goto LABEL_37;
        }
        __break(1u);
        goto LABEL_55;
      }
      goto LABEL_50;
    }
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_19;
    }
LABEL_50:
    swift_unknownObjectRelease();

    goto LABEL_51;
  }
LABEL_56:
  __break(1u);
}

void *sub_1E0E3E894(void *a1, void *a2, void *a3)
{
  unint64_t v4 = _s8HealthUI20AudiogramPointMarkerV7OptionsV03forC0_4sideSayAEGSo17HKAudiogramSampleC_So0I19SensitivityTestSideVtFZ_0(a1, a2);
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6E250);
  sub_1E0E3F404();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1E0F07C90;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 32) = 0xD00000000000001DLL;
  *(void *)(v5 + 40) = 0x80000001E0F292F0;
  sub_1E0E3F4B4(0, &qword_1EAD6E268, (uint64_t)&type metadata for AudiogramPointMarker.Options, MEMORY[0x1E4FBB320]);
  *(void *)(v5 + 88) = v6;
  *(void *)(v5 + 64) = v4;
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6E270);
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_1E0ECD4F0();
  uint64_t v8 = (void *)sub_1E0ECD4E0();

  id v9 = a3;
  objc_msgSend(v8, sel___swift_setObject_forKeyedSubscript_, v9, sub_1E0ECDA10(), 0xD000000000000026, 0x80000001E0F29310);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_1E0E3EA1C(void *a1)
{
  if (objc_msgSend(a1, sel_isMasked)) {
    uint64_t v1 = 4;
  }
  else {
    uint64_t v1 = 0;
  }
  sub_1E0E3F4B4(0, (unint64_t *)&unk_1EAD6E940, (uint64_t)&type metadata for AudiogramPointMarker.Options, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1E0F07C90;
  *(void *)(v2 + 32) = v1;
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6E250);
  sub_1E0E3F404();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E0F07C90;
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 32) = 0xD00000000000001DLL;
  *(void *)(v3 + 40) = 0x80000001E0F292F0;
  sub_1E0E3F4B4(0, &qword_1EAD6E268, (uint64_t)&type metadata for AudiogramPointMarker.Options, MEMORY[0x1E4FBB320]);
  *(void *)(v3 + 88) = v4;
  *(void *)(v3 + 64) = v2;
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6E270);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1E0ECD4F0();
  uint64_t v6 = sub_1E0ECD4E0();
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t sub_1E0E3EB94(void *a1)
{
  v5[0] = 0xD00000000000001DLL;
  v5[1] = 0x80000001E0F292F0;
  id v1 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_1E0ECDA10());
  swift_unknownObjectRelease();
  if (v1)
  {
    sub_1E0ECD760();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1E0DF0A14((uint64_t)v4, (uint64_t)v5);
  if (v5[3])
  {
    sub_1E0E3F4B4(0, &qword_1EAD6E268, (uint64_t)&type metadata for AudiogramPointMarker.Options, MEMORY[0x1E4FBB320]);
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1E0B32EE4((uint64_t)v5);
    return 0;
  }
}

id sub_1E0E3ECB4(void *a1)
{
  *(void *)&v5[0] = 0xD000000000000026;
  *((void *)&v5[0] + 1) = 0x80000001E0F29310;
  id v1 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_1E0ECDA10());
  swift_unknownObjectRelease();
  if (v1)
  {
    sub_1E0ECD760();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1E0DF0A14((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_1E0DF2C04(0, &qword_1EAD69A10);
    if (swift_dynamicCast()) {
      return (id)v4;
    }
  }
  else
  {
    sub_1E0B32EE4((uint64_t)v6);
  }
  id v3 = objc_msgSend(self, sel_hk_chartLollipopBackgroundColor);
  return v3;
}

void sub_1E0E3EDF0(uint64_t a1, char a2, void *a3, double a4)
{
  uint64_t v8 = (objc_class *)type metadata accessor for AudiogramLineSeriesPresentationStyle();
  id v9 = objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_seriesEar] = a1;
  *(void *)&v9[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_selectedEar] = 0;
  v9[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_displayState] = 0;
  v9[OBJC_IVAR___HKAudiogramLineSeriesPresentationStyle_disableConnectionLines] = 0;
  v23.receiver = v9;
  v23.super_class = v8;
  id v10 = objc_msgSendSuper2(&v23, sel_init);
  id v11 = sub_1E0E3D90C(a2);
  id v12 = v11;
  if (a3)
  {
    id v13 = v11;
    id v14 = a3;
  }
  else
  {
    id v15 = self;
    id v16 = v12;
    id v14 = objc_msgSend(v15, sel_systemBackgroundColor);
  }
  uint64_t v17 = self;
  id v18 = a3;
  id v19 = objc_msgSend(v17, sel_sharedBehavior);
  if (v19)
  {
    double v20 = v19;
    id v21 = objc_msgSend(v19, sel_features);

    if (v21)
    {
      objc_msgSend(v21, sel_yodel);

      v24.origin.x = 0.0;
      v24.origin.y = 0.0;
      v24.size.width = 18.0;
      v24.size.height = 18.0;
      Class isa = AudiogramPointMarker.makePointMarkerImage(bounds:)(v24).super.isa;
      sub_1E0E3D9CC(a4 + a4, a4 + a4);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_1E0E3EFCC(void *a1, uint64_t a2, char a3, double a4)
{
  uint64_t v8 = sub_1E0E3EB94(a1);
  if (v8)
  {
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      unint64_t v19 = MEMORY[0x1E4FBC860];
      sub_1E0ECD890();
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = v10 + 1;
        id v12 = sub_1E0E3ECB4(a1);
        sub_1E0E3EDF0(a2, a3 & 1, v12, a4);

        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        uint64_t v10 = v11;
      }
      while (v9 != v11);
      unint64_t v13 = v19;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v13 = MEMORY[0x1E4FBC860];
    }
    unint64_t v18 = _s8HealthUI20AudiogramPointMarkerV13renderAndJoin7symbolsSo7UIImageCSayAGG_tFZ_0(v13);
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    id v14 = sub_1E0E3ECB4(a1);
    sub_1E0E3EDF0(a2, a3 & 1, v14, a4);
    uint64_t v16 = v15;

    return v16;
  }
}

uint64_t method lookup function for AudiogramLineSeriesPresentationStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramLineSeriesPresentationStyle);
}

uint64_t dispatch thunk of AudiogramLineSeriesPresentationStyle.__allocating_init(seriesEar:selectedEar:disableConnectionLines:disabledStyleOverride:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of AudiogramLineSeriesPresentationStyle.lineSeriesPresentationStyle()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t method lookup function for AudiogramLineSeries(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramLineSeries);
}

uint64_t dispatch thunk of static AudiogramLineSeries.makeAudiogramLineSeries(seriesEar:selectedEar:disableConnectionLines:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static AudiogramLineSeries.makeAudiogramLineSeries(seriesEar:selectedEar:disableConnectionLines:disabledStyleOverride:selectedFrequency:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of static AudiogramLineSeries.selectedRangeMetadata(forAudiogram:side:backgroundColor:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of static AudiogramLineSeries.selectedRangeMetadata(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of static AudiogramLineSeries.filledSymbol(usingMetadata:forEar:radius:useEarSpecificColor:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t type metadata accessor for AudiogramSelectedRangeMetadataProvider()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AudiogramLineSeriesPresentationStyle.DisplayState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E0E3F310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramLineSeriesPresentationStyle.DisplayState()
{
  return &type metadata for AudiogramLineSeriesPresentationStyle.DisplayState;
}

unint64_t sub_1E0E3F34C()
{
  unint64_t result = qword_1EAD6E918;
  if (!qword_1EAD6E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6E918);
  }
  return result;
}

uint64_t sub_1E0E3F3A0()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1E0E3F3D8(void *a1)
{
  sub_1E0E3DC64(a1, *(void **)(v1 + 32), *(double *)(v1 + 16), *(CGFloat *)(v1 + 24), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64));
}

uint64_t sub_1E0E3F3EC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E3F3FC(uint64_t a1)
{
  return sub_1E0E1E230(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1E0E3F404()
{
  if (!qword_1EAD6E950)
  {
    sub_1E0E187C8();
    unint64_t v0 = sub_1E0ECD9C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E950);
    }
  }
}

unint64_t sub_1E0E3F45C()
{
  unint64_t result = qword_1EAD6E958;
  if (!qword_1EAD6E958)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6E958);
  }
  return result;
}

void sub_1E0E3F4B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1E0E3F50C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1E0E40F18();
  uint64_t v2 = sub_1E0ECD940();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1E0E40E10(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1E0E406EC);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1E0E5D80C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1E0DEDF98(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E0E3F648(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1E0E40A8C();
  uint64_t v2 = (void *)sub_1E0ECD940();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1E0E5D8C8((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E0E3F750(uint64_t a1)
{
  sub_1E0E40C8C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v9 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1E0E40D54();
  uint64_t v8 = sub_1E0ECD940();
  char v9 = (void *)v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v9;
  }
  uint64_t v11 = *(int *)(v3 + 48);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1E0E40E10(v14, (uint64_t)v7, (uint64_t (*)(void))sub_1E0E40C8C);
    unint64_t result = sub_1E0E5D90C((uint64_t)v7);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v9[6];
    uint64_t v20 = sub_1E0ECBDF0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v7, v20);
    *(void *)(v9[7] + 8 * v18) = *(void *)&v7[v11];
    uint64_t v21 = v9[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v9[2] = v23;
    v14 += v15;
    if (!--v10)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E0E3F948(uint64_t a1)
{
  sub_1E0E40B28();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v9 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1E0E40B98();
  uint64_t v8 = sub_1E0ECD940();
  char v9 = (void *)v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v9;
  }
  uint64_t v11 = *(int *)(v3 + 48);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1E0E40E10(v14, (uint64_t)v7, (uint64_t (*)(void))sub_1E0E40B28);
    unint64_t result = sub_1E0E5D90C((uint64_t)v7);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v9[6];
    uint64_t v20 = sub_1E0ECBDF0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v7, v20);
    *(_OWORD *)(v9[7] + 16 * v18) = *(_OWORD *)&v7[v11];
    uint64_t v21 = v9[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v9[2] = v23;
    v14 += v15;
    if (!--v10)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E0E3FB40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1E0E40E78();
  uint64_t v2 = sub_1E0ECD940();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1E0E40E10(v6, (uint64_t)&v13, (uint64_t (*)(void))sub_1E0E1AC68);
    uint64_t v7 = v13;
    unint64_t result = sub_1E0E5D9E0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1E0DEDF98(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1E0E3FC6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1E0E40A14();
  uint64_t v2 = (void *)sub_1E0ECD940();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1E0E5D80C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t AudiogramPerformanceAnalytics.Metric.DUFieldNames.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1E0ECD980();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 6;
  if (v2 < 6) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static AudiogramPerformanceAnalytics.Metric.DUFieldNames.allCases.getter()
{
  return &unk_1F3B98C60;
}

unint64_t AudiogramPerformanceAnalytics.Metric.DUFieldNames.rawValue.getter()
{
  unint64_t result = 0x656D614E776F6C66;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6172676F69647561;
      break;
    case 2:
    case 3:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E0E3FEB4(unsigned __int8 *a1, char *a2)
{
  return sub_1E0E85A88(*a1, *a2);
}

uint64_t sub_1E0E3FEC0()
{
  return sub_1E0E860C0();
}

uint64_t sub_1E0E3FEC8()
{
  return sub_1E0E861D4();
}

uint64_t sub_1E0E3FED0()
{
  return sub_1E0E863C4();
}

uint64_t sub_1E0E3FED8@<X0>(char *a1@<X8>)
{
  return AudiogramPerformanceAnalytics.Metric.DUFieldNames.init(rawValue:)(a1);
}

unint64_t sub_1E0E3FEE4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AudiogramPerformanceAnalytics.Metric.DUFieldNames.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1E0E3FF0C(void *a1@<X8>)
{
  *a1 = &unk_1F3B98C60;
}

uint64_t AudiogramPerformanceAnalytics.Metric.duPayload.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AudiogramPerformanceAnalytics.Metric.ihaPayload.getter()
{
  return swift_bridgeObjectRetain();
}

id static AudiogramPerformanceAnalytics.Metric.allAudiogramResultsQuery(queryDuration:audiogramCount:)(uint64_t a1, double a2)
{
  sub_1E0E40694();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F08070;
  *(void *)(inited + 32) = 0x656D614E776F6C66;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = 0xD000000000000022;
  *(void *)(inited + 56) = 0x80000001E0F2A1E0;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 80) = 0xD000000000000013;
  *(void *)(inited + 88) = 0x80000001E0F280F0;
  uint64_t v6 = MEMORY[0x1E4FBB3D0];
  *(double *)(inited + 96) = a2;
  *(void *)(inited + 120) = v6;
  strcpy((char *)(inited + 128), "audiogramCount");
  *(void *)(inited + 168) = MEMORY[0x1E4FBB550];
  *(unsigned char *)(inited + 143) = -18;
  *(void *)(inited + 144) = a1;
  unint64_t v7 = sub_1E0E3F50C(inited);
  unint64_t v8 = sub_1E0E3F50C(MEMORY[0x1E4FBC860]);
  char v9 = (char *)objc_allocWithZone(v2);
  *(void *)&v9[OBJC_IVAR____TtCC8HealthUI29AudiogramPerformanceAnalytics6Metric_duPayload] = v7;
  *(void *)&v9[OBJC_IVAR____TtCC8HealthUI29AudiogramPerformanceAnalytics6Metric_ihaPayload] = v8;
  v11.receiver = v9;
  v11.super_class = v2;
  return objc_msgSendSuper2(&v11, sel_init);
}

id AudiogramPerformanceAnalytics.Metric.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudiogramPerformanceAnalytics.Metric.init()()
{
}

id AudiogramPerformanceAnalytics.Metric.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E401C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E0E401D0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1E0E40210(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1E0E40F84();
  unint64_t v3 = (void *)sub_1E0ECD940();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1E0E5D884(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  unint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1E0E5D884(v5);
    unint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

id _s8HealthUI29AudiogramPerformanceAnalyticsC6MetricC017longitudinalChartC11Aggregation8strategy13queryDuration011aggregationL014audiogramCountAEXDAA0I8StrategyO_S2dSitFZ_0(unsigned __int8 *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7 = *a1;
  sub_1E0E40694();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F08E20;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 32) = 0x656D614E776F6C66;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = 0xD000000000000026;
  *(void *)(inited + 56) = 0x80000001E0F2A2A0;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 0xD000000000000013;
  *(void *)(inited + 88) = 0x80000001E0F280F0;
  uint64_t v10 = MEMORY[0x1E4FBB3D0];
  *(double *)(inited + 96) = a3;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = 0xD000000000000019;
  *(void *)(inited + 136) = 0x80000001E0F28110;
  *(double *)(inited + 144) = a4;
  *(void *)(inited + 168) = v10;
  *(void *)(inited + 176) = 0xD000000000000013;
  *(void *)(inited + 184) = 0x80000001E0F28130;
  *(double *)(inited + 192) = a3 + a4;
  *(void *)(inited + 216) = v10;
  strcpy((char *)(inited + 224), "audiogramCount");
  uint64_t v11 = MEMORY[0x1E4FBB550];
  *(unsigned char *)(inited + 239) = -18;
  *(void *)(inited + 240) = a2;
  *(void *)(inited + 264) = v11;
  *(void *)(inited + 272) = 0xD000000000000013;
  unint64_t v12 = 0xE400000000000000;
  unint64_t v13 = 1701736302;
  *(void *)(inited + 280) = 0x80000001E0F280D0;
  switch(v7)
  {
    case 1:
      unint64_t v12 = 0xE600000000000000;
      uint64_t v14 = 1920298856;
      goto LABEL_7;
    case 2:
      unint64_t v12 = 0xE500000000000000;
      unint64_t v13 = 0x796C696164;
      break;
    case 3:
      unint64_t v12 = 0xE600000000000000;
      uint64_t v14 = 1801807223;
      goto LABEL_7;
    case 4:
      unint64_t v12 = 0xE700000000000000;
      unint64_t v13 = 0x796C68746E6F6DLL;
      break;
    case 5:
      unint64_t v12 = 0xE600000000000000;
      uint64_t v14 = 1918985593;
LABEL_7:
      unint64_t v13 = v14 & 0xFFFF0000FFFFFFFFLL | 0x796C00000000;
      break;
    default:
      break;
  }
  *(void *)(inited + 312) = v9;
  *(void *)(inited + 288) = v13;
  *(void *)(inited + 296) = v12;
  unint64_t v15 = sub_1E0E3F50C(inited);
  unint64_t v16 = sub_1E0E3F50C(MEMORY[0x1E4FBC860]);
  char v17 = (objc_class *)type metadata accessor for AudiogramPerformanceAnalytics.Metric();
  unint64_t v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR____TtCC8HealthUI29AudiogramPerformanceAnalytics6Metric_duPayload] = v15;
  *(void *)&v18[OBJC_IVAR____TtCC8HealthUI29AudiogramPerformanceAnalytics6Metric_ihaPayload] = v16;
  v20.receiver = v18;
  v20.super_class = v17;
  return objc_msgSendSuper2(&v20, sel_init);
}

id _s8HealthUI29AudiogramPerformanceAnalyticsC6MetricC19audiogramChartQuery13queryDuration0G5CountAEXDSd_SitFZ_0(uint64_t a1, double a2)
{
  sub_1E0E40694();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F08070;
  *(void *)(inited + 32) = 0x656D614E776F6C66;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = 0xD00000000000001DLL;
  *(void *)(inited + 56) = 0x80000001E0F2A280;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 80) = 0xD000000000000013;
  *(void *)(inited + 88) = 0x80000001E0F280F0;
  uint64_t v5 = MEMORY[0x1E4FBB3D0];
  *(double *)(inited + 96) = a2;
  *(void *)(inited + 120) = v5;
  strcpy((char *)(inited + 128), "audiogramCount");
  *(void *)(inited + 168) = MEMORY[0x1E4FBB550];
  *(unsigned char *)(inited + 143) = -18;
  *(void *)(inited + 144) = a1;
  unint64_t v6 = sub_1E0E3F50C(inited);
  unint64_t v7 = sub_1E0E3F50C(MEMORY[0x1E4FBC860]);
  unint64_t v8 = (objc_class *)type metadata accessor for AudiogramPerformanceAnalytics.Metric();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR____TtCC8HealthUI29AudiogramPerformanceAnalytics6Metric_duPayload] = v6;
  *(void *)&v9[OBJC_IVAR____TtCC8HealthUI29AudiogramPerformanceAnalytics6Metric_ihaPayload] = v7;
  v11.receiver = v9;
  v11.super_class = v8;
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_1E0E40694()
{
  if (!qword_1EAD6E970)
  {
    sub_1E0E406EC();
    unint64_t v0 = sub_1E0ECD9C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E970);
    }
  }
}

void sub_1E0E406EC()
{
  if (!qword_1EAD6E978)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6E978);
    }
  }
}

unint64_t sub_1E0E4075C()
{
  unint64_t result = qword_1EAD6E980;
  if (!qword_1EAD6E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6E980);
  }
  return result;
}

unint64_t sub_1E0E407B4()
{
  unint64_t result = qword_1EAD6E988;
  if (!qword_1EAD6E988)
  {
    sub_1E0E40D0C(255, &qword_1EAD6E990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6E988);
  }
  return result;
}

uint64_t dispatch thunk of AudiogramAnalyticsMetric.duPayload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AudiogramAnalyticsMetric.ihaPayload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for AudiogramPerformanceAnalytics.Metric()
{
  return self;
}

uint64_t method lookup function for AudiogramPerformanceAnalytics.Metric(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramPerformanceAnalytics.Metric);
}

uint64_t _s14descr1F3B96BC1V6MetricC12DUFieldNamesOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr1F3B96BC1V6MetricC12DUFieldNamesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E0E409DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiogramPerformanceAnalytics.Metric.DUFieldNames()
{
  return &type metadata for AudiogramPerformanceAnalytics.Metric.DUFieldNames;
}

void sub_1E0E40A14()
{
  if (!qword_1EAD6E998)
  {
    sub_1E0DF2C04(255, (unint64_t *)&unk_1EAD6ED40);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E998);
    }
  }
}

void sub_1E0E40A8C()
{
  if (!qword_1EAD6E9A0)
  {
    sub_1E0DF2C04(255, (unint64_t *)&qword_1EAD6D9E0);
    sub_1E0DF2C04(255, &qword_1EAD6DC58);
    sub_1E0DFD8FC();
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E9A0);
    }
  }
}

void sub_1E0E40B28()
{
  if (!qword_1EAD6E9A8)
  {
    sub_1E0ECBDF0();
    sub_1E0DF0964();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6E9A8);
    }
  }
}

void sub_1E0E40B98()
{
  if (!qword_1EAD6E9B0)
  {
    sub_1E0ECBDF0();
    sub_1E0DF0964();
    sub_1E0E40C44((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E9B0);
    }
  }
}

uint64_t sub_1E0E40C44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E40C8C()
{
  if (!qword_1EAD6E9B8)
  {
    sub_1E0ECBDF0();
    sub_1E0E40D0C(255, &qword_1EAD6E9C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6E9B8);
    }
  }
}

void sub_1E0E40D0C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1E0ECD380();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1E0E40D54()
{
  if (!qword_1EAD6EDB0)
  {
    sub_1E0ECBDF0();
    sub_1E0E40D0C(255, &qword_1EAD6E9C0);
    sub_1E0E40C44((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EDB0);
    }
  }
}

uint64_t sub_1E0E40E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1E0E40E78()
{
  if (!qword_1EAD69A18)
  {
    type metadata accessor for Key(255);
    sub_1E0E40C44((unint64_t *)&qword_1EAD699D0, type metadata accessor for Key);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD69A18);
    }
  }
}

void sub_1E0E40F18()
{
  if (!qword_1EAD698D8)
  {
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD698D8);
    }
  }
}

void sub_1E0E40F84()
{
  if (!qword_1EAD6EDD0)
  {
    sub_1E0E40FEC();
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EDD0);
    }
  }
}

void sub_1E0E40FEC()
{
  if (!qword_1EAD6E9C8)
  {
    sub_1E0DF2C04(255, (unint64_t *)&unk_1EAD6EDE0);
    unint64_t v0 = sub_1E0ECD380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E9C8);
    }
  }
}

Swift::Void __swiftcall NSMutableAttributedString.setContentSizeCategory(_:)(__C::UIContentSizeCategory a1)
{
  uint64_t v3 = *MEMORY[0x1E4FB06F8];
  id v4 = objc_msgSend(v1, sel_length);
  uint64_t v5 = (__C::UIContentSizeCategory *)swift_allocObject();
  v5[2]._rawValue = a1._rawValue;
  v5[3]._rawValue = v1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1E0E41578;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_1E0E41590;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1E0E414A8;
  v10[3] = &block_descriptor_7;
  BOOL v7 = _Block_copy(v10);
  id v8 = a1._rawValue;
  id v9 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_enumerateAttribute_inRange_options_usingBlock_, v3, 0, v4, 0, v7);
  _Block_release(v7);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v3) {
    __break(1u);
  }
}

void sub_1E0E411EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_1E0B32F68(a1, (uint64_t)&v23);
  if (!*((void *)&v24 + 1)) {
    goto LABEL_13;
  }
  sub_1E0E415D0();
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v10 = objc_msgSend(v22, sel_fontDescriptor);
  id v11 = objc_msgSend(v10, sel_fontAttributes);

  type metadata accessor for AttributeName(0);
  sub_1E0E41610();
  uint64_t v12 = sub_1E0ECCFD0();

  if (*(void *)(v12 + 16))
  {
    id v13 = (id)*MEMORY[0x1E4FB0948];
    unint64_t v14 = sub_1E0E5D9E0((uint64_t)v13);
    if (v15)
    {
      sub_1E0DEDFA8(*(void *)(v12 + 56) + 32 * v14, (uint64_t)&v23);
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
    }
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1))
  {

LABEL_13:
    sub_1E0B32EE4((uint64_t)&v23);
    return;
  }
  if (swift_dynamicCast())
  {
    unint64_t v16 = self;
    char v17 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, a5);
    id v19 = objc_msgSend(v16, sel_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_, v17, v18);

    id v20 = objc_msgSend(self, sel_fontWithDescriptor_size_, v19, 0.0);
    uint64_t v21 = *MEMORY[0x1E4FB06F8];
    objc_msgSend(a6, sel_removeAttribute_range_, *MEMORY[0x1E4FB06F8], a2, a3);
    objc_msgSend(a6, sel_addAttribute_value_range_, v21, v20, a2, a3);
  }
  else
  {
  }
}

uint64_t sub_1E0E41480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1E0E414A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1E0B32EE4((uint64_t)&v11);
}

uint64_t sub_1E0E41538()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1E0E41578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1E0E411EC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1E0E41580()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E41590()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1E0E415D0()
{
  unint64_t result = qword_1EAD69A00;
  if (!qword_1EAD69A00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD69A00);
  }
  return result;
}

unint64_t sub_1E0E41610()
{
  unint64_t result = qword_1EAD6DA68;
  if (!qword_1EAD6DA68)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6DA68);
  }
  return result;
}

id AudiogramAnnotationViewDataSource.__allocating_init(applicationItems:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1E0E422EC(a1);

  return v4;
}

id AudiogramAnnotationViewDataSource.init(applicationItems:)(void *a1)
{
  id v2 = sub_1E0E422EC(a1);

  return v2;
}

uint64_t sub_1E0E41710(unint64_t a1, uint64_t a2, char a3)
{
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                             + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_applicationItems), sel_dateCache));
  sub_1E0E8F67C(a2, v7, 1);
  uint64_t v9 = v8;

  id v10 = *(void **)(v3 + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_currentDateView);
  *(void *)(v3 + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_currentDateView) = v9;

  sub_1E0E41BD0(a1, a3);
  *(void *)(v3 + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_keyValuePairs) = v11;
  return swift_bridgeObjectRelease();
}

void *sub_1E0E418FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_currentDateView);
  id v2 = v1;
  return v1;
}

uint64_t sub_1E0E41944()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_keyValuePairs);
  if (!(v1 >> 62)) {
    return *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1E0E41A38(unint64_t result, uint64_t a2)
{
  unint64_t v4 = result;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR___HKAudiogramAnnotationViewDataSource_keyValuePairs);
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v6 = (id)MEMORY[0x1E4E3EF00](v4, v5);
    swift_bridgeObjectRelease();
    if (a2) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    id v6 = *(id *)(v5 + 8 * result + 32);
    if (a2)
    {
LABEL_5:
      uint64_t v7 = 0;
LABEL_8:
      objc_msgSend(v6, sel_setOrientation_, v7);
      return (unint64_t)v6;
    }
LABEL_7:
    uint64_t v7 = 1;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1E0E41BD0(unint64_t a1, char a2)
{
  LOBYTE(v3) = a2;
  unint64_t v4 = a1;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1E0ECD910())
  {
    char v33 = v3;
    unint64_t v6 = 0;
    unint64_t v38 = v4;
    unint64_t v39 = v4 & 0xC000000000000001;
    uint64_t v36 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v37 = v5;
    double v34 = v2;
    unint64_t v35 = v4 + 32;
    while (1)
    {
      if (v39)
      {
        id v7 = (id)MEMORY[0x1E4E3EF00](v6, v4);
      }
      else
      {
        if (v6 >= *(void *)(v36 + 16)) {
          goto LABEL_34;
        }
        id v7 = *(id *)(v35 + 8 * v6);
      }
      uint64_t v8 = v7;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      id v10 = objc_msgSend(v7, sel_userInfo);
      if (v10)
      {
        uint64_t v11 = v10;
        sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6E958);
        unint64_t v12 = sub_1E0ECD330();

        unint64_t v40 = MEMORY[0x1E4FBC860];
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          LOBYTE(v3) = sub_1E0ECD910();
          swift_bridgeObjectRelease();
          uint64_t v2 = &v40;
          sub_1E0ECD890();
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_1E0ECD910();
          swift_bridgeObjectRelease();
          if (v13)
          {
LABEL_13:
            if ((v12 & 0xC000000000000001) != 0)
            {
              uint64_t v3 = 0;
              while (1)
              {
                uint64_t v14 = MEMORY[0x1E4E3EF00](v3, v12);
                unint64_t v4 = v3 + 1;
                if (__OFADD__(v3, 1)) {
                  break;
                }
                uint64_t v2 = (unint64_t *)v14;
                if (!swift_dynamicCastObjCProtocolConditional())
                {
                  swift_unknownObjectRelease();
                  goto LABEL_25;
                }
                sub_1E0ECD870();
                sub_1E0ECD8A0();
                sub_1E0ECD8B0();
                uint64_t v2 = &v40;
                sub_1E0ECD880();
                ++v3;
                if (v4 == v13) {
                  goto LABEL_23;
                }
              }
              __break(1u);
            }
            else
            {
              uint64_t v15 = 0;
              while (1)
              {
                unint64_t v4 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                uint64_t v2 = *(unint64_t **)(v12 + 32 + 8 * v15);
                uint64_t v16 = swift_dynamicCastObjCProtocolConditional();
                if (!v16)
                {
LABEL_25:

                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_26;
                }
                LOBYTE(v3) = v16;
                swift_unknownObjectRetain();
                sub_1E0ECD870();
                sub_1E0ECD8A0();
                sub_1E0ECD8B0();
                uint64_t v2 = &v40;
                sub_1E0ECD880();
                ++v15;
                if (v4 == v13) {
                  goto LABEL_23;
                }
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v2 = &v40;
          sub_1E0ECD890();
          uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v13) {
            goto LABEL_13;
          }
        }
LABEL_23:
        unint64_t v17 = v40;
        swift_bridgeObjectRelease();
        uint64_t v2 = (unint64_t *)&v41;
        sub_1E0E4E544(v17);

LABEL_26:
        uint64_t v5 = v37;
        unint64_t v4 = v38;
        if (v6 == v37)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          uint64_t v2 = v34;
          LOBYTE(v3) = v33;
          goto LABEL_37;
        }
      }
      else
      {

        if (v6 == v5) {
          goto LABEL_30;
        }
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_37:
  id v18 = &OBJC_IVAR___HKAudiogramAnnotationViewDataSource_averageSensitivityFormatter;
  if ((v3 & 1) == 0) {
    id v18 = &OBJC_IVAR___HKAudiogramAnnotationViewDataSource_hearingSensitivityFormatter;
  }
  id v19 = *(void **)((char *)v2 + *v18);
  sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6EAA0);
  id v20 = v19;
  uint64_t v21 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_formattedSelectedRangeLabelDataWithChartData_context_, v21, 0);

  sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6EA70);
  unint64_t v23 = sub_1E0ECD330();

  unint64_t v40 = MEMORY[0x1E4FBC860];
  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v24) {
      goto LABEL_41;
    }
LABEL_49:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_49;
  }
LABEL_41:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0) {
        id v26 = (id)MEMORY[0x1E4E3EF00](v25, v23);
      }
      else {
        id v26 = *(id *)(v23 + 8 * v25 + 32);
      }
      uint64_t v27 = v26;
      id v28 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartAnnotationViewKeyValueLabel), sel_init);
      id v29 = objc_msgSend(v28, sel_keyLabel);
      objc_msgSend(v29, sel_setSelectedRangeData_, v27);

      id v30 = objc_msgSend(v28, sel_valueLabel);
      id v31 = objc_msgSend(v27, sel_attributedString);
      objc_msgSend(v30, sel_setAttributedText_, v31);

      id v32 = v28;
      MEMORY[0x1E4E3E9E0]();
      if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1E0ECD350();
      }
      ++v25;
      sub_1E0ECD370();
      sub_1E0ECD340();
    }
    while (v24 != v25);
    goto LABEL_49;
  }
  __break(1u);
}

id AudiogramAnnotationViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudiogramAnnotationViewDataSource.init()()
{
}

id AudiogramAnnotationViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramAnnotationViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1E0E422EC(void *a1)
{
  *(void *)&v1[OBJC_IVAR___HKAudiogramAnnotationViewDataSource_currentDateView] = 0;
  *(void *)&v1[OBJC_IVAR___HKAudiogramAnnotationViewDataSource_applicationItems] = a1;
  uint64_t v3 = v1;
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_unitController);
  id v6 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartHearingSensitivityFormatter), sel_initWithUnitController_, v5);

  *(void *)&v3[OBJC_IVAR___HKAudiogramAnnotationViewDataSource_hearingSensitivityFormatter] = v6;
  id v7 = objc_msgSend(v4, sel_unitController);
  id v8 = objc_allocWithZone((Class)type metadata accessor for AudiogramAverageSensitivityChartFormatter());
  *(void *)&v3[OBJC_IVAR___HKAudiogramAnnotationViewDataSource_averageSensitivityFormatter] = AudiogramChartDataFormatter.init(displayType:unitController:)(0, v7);
  *(void *)&v3[OBJC_IVAR___HKAudiogramAnnotationViewDataSource_keyValuePairs] = MEMORY[0x1E4FBC860];

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for AudiogramAnnotationViewDataSource();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for AudiogramAnnotationViewDataSource()
{
  return self;
}

uint64_t method lookup function for AudiogramAnnotationViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramAnnotationViewDataSource);
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.__allocating_init(applicationItems:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.update(pointSelectionContexts:date:isAverage:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.dateView(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.leftMarginView(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.numberOfValues(forAnnotationView:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.valueViewForColumn(at:orientation:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.showSeparators()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AudiogramAnnotationViewDataSource.reverseColumnsInRightToLeftLayoutDirection()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t sub_1E0E425C4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id StateOfMindCoordinateInfo.__allocating_init(dateInterval:dailyReflectiveCount:dailyValenceRange:momentaryReflectiveCount:momentaryValenceRange:isSharingPreview:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v16 = objc_allocWithZone(v10);
  unint64_t v17 = &v16[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dateInterval];
  uint64_t v18 = sub_1E0ECB3C0();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  *(void *)&v16[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount] = a2;
  id v20 = &v16[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange];
  *(void *)id v20 = a3;
  *((void *)v20 + 1) = a4;
  v20[16] = a5 & 1;
  *(void *)&v16[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount] = a6;
  uint64_t v21 = &v16[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryValenceRange];
  *(void *)uint64_t v21 = a7;
  *((void *)v21 + 1) = a8;
  v21[16] = a9 & 1;
  v16[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_isSharingPreview] = a10;
  v27.receiver = v16;
  v27.super_class = v10;
  id v22 = objc_msgSendSuper2(&v27, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return v22;
}

id StateOfMindCoordinateInfo.init(dateInterval:dailyReflectiveCount:dailyValenceRange:momentaryReflectiveCount:momentaryValenceRange:isSharingPreview:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v16 = &v10[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dateInterval];
  uint64_t v17 = sub_1E0ECB3C0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  *(void *)&v10[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount] = a2;
  uint64_t v19 = &v10[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange];
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = a4;
  v19[16] = a5 & 1;
  *(void *)&v10[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount] = a6;
  id v20 = &v10[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryValenceRange];
  *(void *)id v20 = a7;
  *((void *)v20 + 1) = a8;
  v20[16] = a9 & 1;
  v10[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_isSharingPreview] = a10;
  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for StateOfMindCoordinateInfo();
  id v21 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
  return v21;
}

uint64_t type metadata accessor for StateOfMindCoordinateInfo()
{
  uint64_t result = qword_1EAD6EA78;
  if (!qword_1EAD6EA78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id StateOfMindCoordinateInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void StateOfMindCoordinateInfo.init()()
{
}

id StateOfMindCoordinateInfo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindCoordinateInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E42A9C()
{
  return type metadata accessor for StateOfMindCoordinateInfo();
}

uint64_t sub_1E0E42AA4()
{
  uint64_t result = sub_1E0ECB3C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StateOfMindCoordinateInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateOfMindCoordinateInfo);
}

uint64_t dispatch thunk of StateOfMindCoordinateInfo.__allocating_init(dateInterval:dailyReflectiveCount:dailyValenceRange:momentaryReflectiveCount:momentaryValenceRange:isSharingPreview:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 128))(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_1E0E42B9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1E0ECD890();
    uint64_t v4 = *(void *)(sub_1E0ECBDF0() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      sub_1E0ECBDC0();
      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

id sub_1E0E42CA4()
{
  uint64_t v0 = sub_1E0ECBDE0();
  sub_1E0E42B9C(v0);
  swift_bridgeObjectRelease();
  sub_1E0E42E50();
  unint64_t v1 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static HKSampleType.associatedBalanceMetricsTypes.getter()
{
  uint64_t v0 = sub_1E0ECBDE0();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1E0ECD890();
    uint64_t v2 = *(void *)(sub_1E0ECBDF0() - 8);
    unint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v4 = *(void *)(v2 + 72);
    do
    {
      sub_1E0ECBDC0();
      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      v3 += v4;
      --v1;
    }
    while (v1);
    uint64_t v5 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

unint64_t sub_1E0E42E50()
{
  unint64_t result = qword_1EAD6DB78;
  if (!qword_1EAD6DB78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6DB78);
  }
  return result;
}

uint64_t sub_1E0E42E90@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X8>)
{
  sub_1E0E439B0();
  uint64_t v59 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v7, v10);
  uint64_t v13 = (char *)&v51 - v12;
  uint64_t v15 = MEMORY[0x1F4188790](v11, v14);
  uint64_t v17 = (char *)&v51 - v16;
  MEMORY[0x1F4188790](v15, v18);
  id v21 = (char *)&v51 - v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v55 = a1 + 64;
  char v23 = *(unsigned char *)(a1 + 32);
  uint64_t v24 = 1 << v23;
  uint64_t v25 = -1;
  if (1 << v23 < 64) {
    uint64_t v25 = ~(-1 << (1 << v23));
  }
  unint64_t v26 = v25 & v22;
  if (v26)
  {
    uint64_t v51 = v19;
    long long v52 = a2;
    uint64_t v53 = v2;
    uint64_t v27 = 0;
    unint64_t v28 = __clz(__rbit64(v26));
    unint64_t v29 = (v26 - 1) & v26;
    int64_t v56 = (unint64_t)(v24 + 63) >> 6;
    while (1)
    {
      unint64_t v54 = v28;
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = sub_1E0ECBEA0();
      uint64_t v32 = *(void *)(v31 - 8);
      char v33 = *(void (**)(void, void))(v32 + 16);
      uint64_t v57 = *(void *)(v32 + 72);
      uint64_t v58 = v31;
      uint64_t v34 = v30 + v57 * v28;
      unint64_t v35 = v17;
      a2 = (void (*)(void, void, void))v33;
      uint64_t v36 = (uint64_t)v17;
      uint64_t v17 = (char *)(v32 + 16);
      v33(v35, v34);
      *(void *)(v36 + *(int *)(v59 + 48)) = *(void *)(*(void *)(a1 + 56) + 8 * v54);
      sub_1E0E43A74(v36, (uint64_t)v21);
      swift_bridgeObjectRetain();
      while (v29)
      {
        while (1)
        {
          unint64_t v38 = __clz(__rbit64(v29));
          v29 &= v29 - 1;
          unint64_t v39 = v38 | (v27 << 6);
LABEL_25:
          a2(v9, *(void *)(a1 + 48) + v39 * v57, v58);
          uint64_t v43 = *(void *)(*(void *)(a1 + 56) + 8 * v39);
          uint64_t v44 = v59;
          *(void *)&v9[*(int *)(v59 + 48)] = v43;
          sub_1E0E43A74((uint64_t)v9, (uint64_t)v13);
          if (*(void *)&v21[*(int *)(v44 + 48)] < *(void *)&v13[*(int *)(v44 + 48)]) {
            break;
          }
          sub_1E0E43AD8((uint64_t)v13, (uint64_t (*)(void))sub_1E0E439B0);
          if (!v29) {
            goto LABEL_9;
          }
        }
        sub_1E0E43AD8((uint64_t)v21, (uint64_t (*)(void))sub_1E0E439B0);
        sub_1E0E43A74((uint64_t)v13, (uint64_t)v21);
      }
LABEL_9:
      int64_t v40 = v27 + 1;
      if (__OFADD__(v27, 1))
      {
        __break(1u);
LABEL_39:
        if (v37 < 9) {
          return (*(uint64_t (**)(void (*)(void, void, void), uint64_t, uint64_t, uint64_t))(v19 + 56))(a2, 1, 1, v59);
        }
        unint64_t v47 = *(void *)(a1 + 96);
        if (v47)
        {
          uint64_t v27 = 4;
          goto LABEL_32;
        }
        unint64_t v47 = *(void *)(a1 + 104);
        if (v47)
        {
          uint64_t v27 = 5;
          goto LABEL_32;
        }
      }
      else
      {
        if (v40 >= v56) {
          goto LABEL_28;
        }
        unint64_t v41 = *(void *)(v55 + 8 * v40);
        ++v27;
        if (v41) {
          goto LABEL_24;
        }
        uint64_t v27 = v40 + 1;
        if (v40 + 1 >= v56) {
          goto LABEL_28;
        }
        unint64_t v41 = *(void *)(v55 + 8 * v27);
        if (v41) {
          goto LABEL_24;
        }
        uint64_t v27 = v40 + 2;
        if (v40 + 2 >= v56) {
          goto LABEL_28;
        }
        unint64_t v41 = *(void *)(v55 + 8 * v27);
        if (v41) {
          goto LABEL_24;
        }
        uint64_t v27 = v40 + 3;
        if (v40 + 3 >= v56) {
          goto LABEL_28;
        }
        unint64_t v41 = *(void *)(v55 + 8 * v27);
        if (v41) {
          goto LABEL_24;
        }
        int64_t v42 = v40 + 4;
        if (v42 >= v56)
        {
LABEL_28:
          swift_release();
          uint64_t v45 = (uint64_t)v52;
          sub_1E0E43A74((uint64_t)v21, (uint64_t)v52);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v45, 0, 1, v59);
        }
        unint64_t v41 = *(void *)(v55 + 8 * v42);
        if (v41)
        {
          uint64_t v27 = v42;
LABEL_24:
          unint64_t v29 = (v41 - 1) & v41;
          unint64_t v39 = __clz(__rbit64(v41)) + (v27 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          uint64_t v27 = v42 + 1;
          if (__OFADD__(v42, 1)) {
            break;
          }
          if (v27 >= v56) {
            goto LABEL_28;
          }
          unint64_t v41 = *(void *)(v55 + 8 * v27);
          ++v42;
          if (v41) {
            goto LABEL_24;
          }
        }
        __break(1u);
      }
      uint64_t v48 = 0;
      uint64_t v49 = 6;
      if (v56 > 6) {
        uint64_t v49 = v56;
      }
      uint64_t v50 = v49 - 6;
      do
      {
        if (v50 == v48) {
          return (*(uint64_t (**)(void (*)(void, void, void), uint64_t, uint64_t, uint64_t))(v19 + 56))(a2, 1, 1, v59);
        }
        unint64_t v47 = *(void *)(a1 + 112 + 8 * v48++);
      }
      while (!v47);
      uint64_t v27 = v48 + 5;
LABEL_32:
      unint64_t v29 = (v47 - 1) & v47;
      unint64_t v28 = __clz(__rbit64(v47)) + (v27 << 6);
    }
  }
  unsigned int v37 = v23 & 0x3F;
  if (v37 > 6)
  {
    int64_t v56 = (unint64_t)(v24 + 63) >> 6;
    unint64_t v47 = *(void *)(a1 + 72);
    if (v47)
    {
      uint64_t v51 = v19;
      long long v52 = a2;
      uint64_t v53 = v2;
      uint64_t v27 = 1;
      goto LABEL_32;
    }
    if (v37 >= 8)
    {
      unint64_t v47 = *(void *)(a1 + 80);
      long long v52 = a2;
      uint64_t v53 = v2;
      uint64_t v51 = v19;
      if (v47)
      {
        uint64_t v27 = 2;
      }
      else
      {
        unint64_t v47 = *(void *)(a1 + 88);
        if (!v47) {
          goto LABEL_39;
        }
        uint64_t v27 = 3;
      }
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(void (*)(void, void, void), uint64_t, uint64_t, uint64_t))(v19 + 56))(a2, 1, 1, v59);
}

uint64_t sub_1E0E4336C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  sub_1E0E43958();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v66 = (void *)((char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1E0ECBEA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v9, v12);
  v77 = (char *)v65 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  uint64_t v75 = (uint64_t)v65 - v17;
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)v65 - v19;
  id v21 = (char *)MEMORY[0x1E4FBC860];
  v78 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v68 = v7;
  if (v22)
  {
    uint64_t v23 = v7 + 16;
    long long v74 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    unint64_t v24 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v25 = *(void *)(v7 + 72);
    v65[1] = a1;
    unint64_t v69 = v24;
    uint64_t v26 = a1 + v24;
    unsigned int v73 = *MEMORY[0x1E4F65930];
    uint64_t v27 = (void (**)(char *, uint64_t))(v23 - 8);
    long long v71 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    long long v72 = (void (**)(char *, void, uint64_t))(v23 + 88);
    v76 = v11;
    uint64_t v70 = v23;
    v74(v20, v26, v6);
    while (1)
    {
      unint64_t v28 = v77;
      (*v72)(v77, v73, v6);
      sub_1E0E43A1C();
      char v29 = sub_1E0ECD100();
      uint64_t v30 = *v27;
      (*v27)(v28, v6);
      if (v29)
      {
        v30(v20, v6);
      }
      else
      {
        uint64_t v31 = *v71;
        (*v71)(v76, v20, v6);
        uint64_t v32 = v78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1E0DEE9F8(0, *((void *)v32 + 2) + 1, 1);
          uint64_t v32 = v78;
        }
        unint64_t v34 = *((void *)v32 + 2);
        unint64_t v33 = *((void *)v32 + 3);
        if (v34 >= v33 >> 1)
        {
          sub_1E0DEE9F8(v33 > 1, v34 + 1, 1);
          uint64_t v32 = v78;
        }
        *((void *)v32 + 2) = v34 + 1;
        v31(&v32[v69 + v34 * v25], v76, v6);
        v78 = v32;
      }
      v26 += v25;
      if (!--v22) {
        break;
      }
      v74(v20, v26, v6);
    }
    id v21 = v78;
    uint64_t v7 = v68;
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v21 + 2);
  uint64_t v36 = v75;
  if (v35)
  {
    unsigned int v37 = *(char **)(v7 + 16);
    unint64_t v38 = &v21[(*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)];
    v76 = *(char **)(v7 + 72);
    v77 = v37;
    unint64_t v39 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    int64_t v40 = (char *)MEMORY[0x1E4FBC868];
    while (1)
    {
      ((void (*)(uint64_t, char *, uint64_t))v77)(v36, v38, v6);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = v36;
      int v43 = isUniquelyReferenced_nonNull_native;
      v78 = v40;
      unint64_t v45 = sub_1E0E5DA74(v42);
      uint64_t v46 = *((void *)v40 + 2);
      BOOL v47 = (v44 & 1) == 0;
      uint64_t v48 = v46 + v47;
      if (__OFADD__(v46, v47)) {
        break;
      }
      char v49 = v44;
      if (*((void *)v40 + 3) >= v48)
      {
        if ((v43 & 1) == 0)
        {
          sub_1E0E606C8();
          int64_t v40 = v78;
        }
        uint64_t v36 = v75;
      }
      else
      {
        sub_1E0E5E810(v48, v43);
        int64_t v40 = v78;
        uint64_t v36 = v75;
        unint64_t v50 = sub_1E0E5DA74(v75);
        if ((v49 & 1) != (v51 & 1)) {
          goto LABEL_36;
        }
        unint64_t v45 = v50;
      }
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0)
      {
        *(void *)&v40[8 * (v45 >> 6) + 64] |= 1 << v45;
        ((void (*)(unint64_t, uint64_t, uint64_t))v77)(*((void *)v40 + 6) + v45 * (void)v76, v36, v6);
        *(void *)(*((void *)v40 + 7) + 8 * v45) = 0;
        uint64_t v52 = *((void *)v40 + 2);
        BOOL v53 = __OFADD__(v52, 1);
        uint64_t v54 = v52 + 1;
        if (v53) {
          goto LABEL_35;
        }
        *((void *)v40 + 2) = v54;
      }
      uint64_t v55 = *((void *)v40 + 7);
      uint64_t v56 = *(void *)(v55 + 8 * v45);
      BOOL v53 = __OFADD__(v56, 1);
      uint64_t v57 = v56 + 1;
      if (v53) {
        goto LABEL_34;
      }
      *(void *)(v55 + 8 * v45) = v57;
      (*v39)(v36, v6);
      unint64_t v38 = &v76[(void)v38];
      if (!--v35)
      {
        swift_release_n();
        uint64_t v7 = v68;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    uint64_t result = sub_1E0ECDA30();
    __break(1u);
  }
  else
  {
    swift_release();
LABEL_29:
    uint64_t v58 = swift_bridgeObjectRetain();
    uint64_t v59 = (void (*)(void, void, void))v66;
    sub_1E0E42E90(v58, (void (*)(void, void, void))v66);
    swift_bridgeObjectRelease();
    sub_1E0E439B0();
    int v61 = (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v59, 1, v60);
    uint64_t v62 = v67;
    if (v61 == 1)
    {
      sub_1E0E43AD8((uint64_t)v59, (uint64_t (*)(void))sub_1E0E43958);
      uint64_t v63 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v67, v59, v6);
      uint64_t v63 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v62, v63, 1, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1E0E43958()
{
  if (!qword_1EAD6EA90)
  {
    sub_1E0E439B0();
    unint64_t v0 = sub_1E0ECD6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EA90);
    }
  }
}

void sub_1E0E439B0()
{
  if (!qword_1EAD6EA98)
  {
    sub_1E0ECBEA0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6EA98);
    }
  }
}

unint64_t sub_1E0E43A1C()
{
  unint64_t result = qword_1EAD6ED60;
  if (!qword_1EAD6ED60)
  {
    sub_1E0ECBEA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6ED60);
  }
  return result;
}

uint64_t sub_1E0E43A74(uint64_t a1, uint64_t a2)
{
  sub_1E0E439B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E43AD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

Swift::Bool __swiftcall UITraitEnvironment.contentSizeCategoryIsEqual(to:)(UITraitCollection_optional to)
{
  if (!to.value.super.isa) {
    return 0;
  }
  uint64_t v2 = to.value.super.isa;
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  id v5 = [(objc_class *)v2 preferredContentSizeCategory];
  uint64_t v6 = sub_1E0ECD1D0();
  uint64_t v8 = v7;
  if (v6 == sub_1E0ECD1D0() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_1E0ECD9E0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

void static NSAttributedString.AccessoryImageAlignment.baseline.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

void static NSAttributedString.AccessoryImageAlignment.center.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void static NSAttributedString.AccessoryImageAlignment.descender.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 2;
}

id NSAttributedString.init(leadingSymbolName:leadingImage:symbolColor:symbolScale:symbolContentSizeCategory:symbolAlignment:text:spacer:textColor:font:numericFont:)(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, void *a12, void *a13, void *a14)
{
  uint64_t v14 = a4;
  uint64_t v15 = a14;
  if (a2 | a3)
  {
    char v18 = *((unsigned char *)a7 + 8);
    uint64_t v19 = *a7;
    sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD699C0);
    uint64_t v82 = v19;
    uint64_t v15 = a14;
    LOBYTE(v83) = v18;
    id v23 = a6;
    id v24 = a13;
    id v25 = (id)a3;
    id v26 = a4;
    uint64_t v27 = (void *)a3;
    uint64_t v14 = a4;
    NSAttributedString.init(symbolName:image:symbolColor:symbolContentSizeCategory:symbolAlignment:font:scale:)(a1, a2, v27, a4, a6, (uint64_t)&v82, v24, a5);
    uint64_t v16 = v28;
  }
  else
  {
    uint64_t v16 = 0;
  }
  char v29 = a12;
  uint64_t v82 = a10;
  unint64_t v83 = a11;
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  uint64_t v31 = v82;
  unint64_t v30 = v83;
  uint64_t v32 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
  if (v15)
  {
    sub_1E0E2002C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
    unint64_t v34 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v35 = v16;
    uint64_t v36 = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
    *(void *)(inited + 64) = v36;
    *(void *)(inited + 40) = a13;
    id v37 = a13;
    id v38 = v15;
    unint64_t v39 = v14;
    id v40 = v38;
    uint64_t v79 = v31;
    id v41 = v34;
    sub_1E0E3FB40(inited);
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = xmmword_1E0F07C90;
    *(void *)(v42 + 64) = v36;
    uint64_t v16 = v35;
    char v29 = a12;
    *(void *)(v42 + 32) = v41;
    *(void *)(v42 + 40) = v40;
    id v43 = v40;
    uint64_t v14 = v39;
    id v44 = v43;
    id v45 = v41;
    uint64_t v46 = v42;
    uint64_t v32 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
    sub_1E0E3FB40(v46);
    BOOL v47 = _sSo18NSAttributedStringC8HealthUIE16numericFormatted6string0E10Attributes05otherH0ABSS_SDySo0aB3KeyaypGAJtFZ_0(v79, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v47);
    char v49 = (char **)0x1F6C20000;
  }
  else
  {
    id v50 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    char v51 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v52 = objc_msgSend(v50, sel_initWithString_, v51);

    sub_1E0E2002C();
    uint64_t v53 = swift_initStackObject();
    *(_OWORD *)(v53 + 16) = xmmword_1E0F07C90;
    uint64_t v54 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v53 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v53 + 64) = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
    *(void *)(v53 + 40) = a13;
    id v55 = a13;
    id v44 = v52;
    id v56 = v54;
    sub_1E0E3FB40(v53);
    type metadata accessor for Key(0);
    sub_1E0E1ACD4();
    BOOL v47 = (void *)sub_1E0ECCFC0();
    swift_bridgeObjectRelease();
    char v49 = &selRef_isCurrentOnboardingVersionCompletedWithCompletion_;
    objc_msgSend(v44, sel_addAttributes_range_, v47, 0, objc_msgSend(v44, sel_length));
    id v48 = v44;
  }

  uint64_t v57 = (void **)MEMORY[0x1E4FB0700];
  if (v29)
  {
    sub_1E0E2002C();
    uint64_t v58 = v49;
    uint64_t v59 = swift_initStackObject();
    *(_OWORD *)(v59 + 16) = xmmword_1E0F07C90;
    uint64_t v60 = *v57;
    *(void *)(v59 + 32) = *v57;
    *(void *)(v59 + 64) = sub_1E0DF2C04(0, &qword_1EAD69A10);
    *(void *)(v59 + 40) = v29;
    int v61 = v57;
    id v62 = v29;
    id v63 = v60;
    sub_1E0E3FB40(v59);
    type metadata accessor for Key(0);
    sub_1E0E1ACD4();
    id v64 = (void *)sub_1E0ECCFC0();
    char v49 = v58;
    swift_bridgeObjectRelease();
    objc_msgSend(v48, sel_addAttributes_range_, v64, 0, objc_msgSend(v48, (SEL)v58 + 408));

    uint64_t v57 = v61;
    uint64_t v32 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
  }
  id v65 = a14;
  if (v16)
  {
    id v66 = v16;
    objc_msgSend(v48, sel_insertAttributedString_atIndex_, v66, 0);
    if (v14)
    {
      sub_1E0E2002C();
      uint64_t v67 = v49;
      uint64_t v68 = swift_initStackObject();
      *(_OWORD *)(v68 + 16) = xmmword_1E0F07C90;
      unint64_t v69 = *v57;
      *(void *)(v68 + 32) = *v57;
      *(void *)(v68 + 64) = sub_1E0DF2C04(0, &qword_1EAD69A10);
      *(void *)(v68 + 40) = v14;
      id v70 = v14;
      id v71 = v69;
      id v65 = a14;
      sub_1E0E3FB40(v68);
      type metadata accessor for Key(0);
      sub_1E0E1ACD4();
      long long v72 = (void *)sub_1E0ECCFC0();
      swift_bridgeObjectRelease();
      objc_msgSend(v48, sel_addAttributes_range_, v72, 0, objc_msgSend(v66, (SEL)v67 + 408));

      uint64_t v32 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
    }
  }
  id v73 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v74 = v48;
  id v75 = objc_msgSend(v73, v32[494], v74);

  return v75;
}

void NSAttributedString.init(symbolName:image:symbolColor:symbolContentSizeCategory:symbolAlignment:font:scale:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v10 = a4;
  int v11 = *(unsigned __int8 *)(a6 + 8);
  if (!a2)
  {
    if (a3) {
      id v19 = a3;
    }
    else {
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
    }
    id v23 = v19;
    if (!v10) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  int v37 = *(unsigned __int8 *)(a6 + 8);
  id v12 = objc_msgSend(self, sel_configurationWithFont_scale_, a7, a8);
  uint64_t v13 = a5;
  if (a5)
  {
    uint64_t v14 = self;
    id v15 = v12;
    uint64_t v16 = v13;
    id v17 = v13;
    id v18 = objc_msgSend(v14, sel_traitCollectionWithPreferredContentSizeCategory_, v17);
    id v12 = objc_msgSend(v15, sel_configurationWithTraitCollection_, v18);
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v20 = v12;
  id v21 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v21, v20);

  if (!v22)
  {
    __break(1u);
    return;
  }
  id v23 = objc_msgSend(v22, sel_imageWithRenderingMode_, 2);

  a5 = v16;
  uint64_t v10 = a4;
  int v11 = v37;
  if (a4)
  {
LABEL_9:
    id v24 = v10;
    id v25 = objc_msgSend(v23, sel_imageWithTintColor_, v24);

    id v23 = v25;
  }
LABEL_10:
  id v26 = objc_msgSend(self, sel_textAttachmentWithImage_, v23);
  uint64_t v27 = v26;
  if (v11 != 255)
  {
    id v28 = objc_msgSend(v26, sel_image);
    if (v28)
    {
      char v29 = v28;
      if (v11)
      {
        if (v11 == 1)
        {
          objc_msgSend(a7, sel_capHeight);
          objc_msgSend(v29, sel_size);
        }
        else
        {
          objc_msgSend(a7, sel_descender);
        }
      }
      objc_msgSend(v29, sel_size);
      objc_msgSend(v29, sel_size);
      objc_msgSend(v27, sel_setBounds_, CGRectMake());
    }
  }
  id v30 = objc_msgSend(self, sel_attributedStringWithAttachment_, v27);
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v30);

  if (!a5)
  {
    sub_1E0E2002C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
    unint64_t v33 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
    *(void *)(inited + 40) = a7;
    id v34 = v33;
    id v35 = a7;
    sub_1E0E3FB40(inited);
    type metadata accessor for Key(0);
    sub_1E0E1ACD4();
    uint64_t v36 = (void *)sub_1E0ECCFC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_addAttributes_range_, v36, 0, objc_msgSend(v31, sel_length));

    a5 = 0;
  }
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAttributedString_, v31);
}

id NSAttributedString.init(leadingSymbolName:leadingImage:paletteColors:symbolScale:symbolContentSizeCategory:symbolAlignment:text:spacer:textColor:font:numericFont:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, void *a12, void *a13, void *a14)
{
  id v15 = (void *)a3;
  if (a2 | a3)
  {
    char v17 = *(unsigned char *)(a7 + 8);
    uint64_t v19 = *(void *)a7;
    sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD699C0);
    uint64_t v65 = v19;
    id v15 = (void *)a3;
    LOBYTE(v66) = v17;
    id v21 = a6;
    id v22 = a13;
    id v23 = (id)a3;
    NSAttributedString.init(symbolName:image:paletteColors:symbolContentSizeCategory:symbolAlignment:font:scale:)(a1, a2, (void *)a3, a4, a6, (uint64_t)&v65, v22, a5);
    id v63 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v63 = 0;
  }
  uint64_t v65 = a10;
  unint64_t v66 = a11;
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  uint64_t v26 = v65;
  unint64_t v25 = v66;
  if (a14)
  {
    sub_1E0E2002C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
    id v28 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v29 = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
    *(void *)(inited + 64) = v29;
    *(void *)(inited + 40) = a13;
    id v30 = a13;
    id v31 = a14;
    id v32 = v28;
    unint64_t v33 = v15;
    id v34 = v32;
    sub_1E0E3FB40(inited);
    uint64_t v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_1E0F07C90;
    *(void *)(v35 + 64) = v29;
    *(void *)(v35 + 32) = v34;
    *(void *)(v35 + 40) = v31;
    id v36 = v31;
    id v37 = v34;
    id v15 = v33;
    sub_1E0E3FB40(v35);
    id v38 = _sSo18NSAttributedStringC8HealthUIE16numericFormatted6string0E10Attributes05otherH0ABSS_SDySo0aB3KeyaypGAJtFZ_0(v26, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v39 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v38);
    id v41 = (char **)0x1F6706000;
    uint64_t v42 = (char **)0x1F6C20000;
  }
  else
  {
    id v43 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    id v44 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v45 = objc_msgSend(v43, sel_initWithString_, v44);

    sub_1E0E2002C();
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = xmmword_1E0F07C90;
    BOOL v47 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v46 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v46 + 64) = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
    *(void *)(v46 + 40) = a13;
    id v48 = a13;
    id v36 = v45;
    id v49 = v47;
    sub_1E0E3FB40(v46);
    type metadata accessor for Key(0);
    sub_1E0E1ACD4();
    id v38 = (void *)sub_1E0ECCFC0();
    swift_bridgeObjectRelease();
    uint64_t v42 = &selRef_isCurrentOnboardingVersionCompletedWithCompletion_;
    id v41 = &selRef_activeEnergyResults;
    objc_msgSend(v36, sel_addAttributes_range_, v38, 0, objc_msgSend(v36, sel_length));
    id v40 = v36;
    unint64_t v39 = (char **)0x1F6B2E000;
  }

  if (a12)
  {
    sub_1E0E2002C();
    id v50 = v42;
    uint64_t v51 = swift_initStackObject();
    *(_OWORD *)(v51 + 16) = xmmword_1E0F07C90;
    id v52 = v41;
    uint64_t v53 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(v51 + 32) = *MEMORY[0x1E4FB0700];
    *(void *)(v51 + 64) = sub_1E0DF2C04(0, &qword_1EAD69A10);
    *(void *)(v51 + 40) = a12;
    id v54 = a12;
    id v55 = v53;
    sub_1E0E3FB40(v51);
    type metadata accessor for Key(0);
    sub_1E0E1ACD4();
    id v56 = (void *)sub_1E0ECCFC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, (SEL)v52 + 24, v56, 0, objc_msgSend(v40, (SEL)v50 + 408));
  }
  if (v63) {
    objc_msgSend(v40, sel_insertAttributedString_atIndex_, v63, 0);
  }
  id v57 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v58 = v40;
  id v59 = objc_msgSend(v57, v39[494], v58);

  return v59;
}

void NSAttributedString.init(symbolName:image:paletteColors:symbolContentSizeCategory:symbolAlignment:font:scale:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8)
{
  int v11 = *(unsigned __int8 *)(a6 + 8);
  if (!a2)
  {
    if (a3) {
      id v19 = a3;
    }
    else {
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
    }
    id v23 = v19;
    if (!a4) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  id v12 = objc_msgSend(self, sel_configurationWithFont_scale_, a7, a8);
  uint64_t v13 = a5;
  if (a5)
  {
    uint64_t v14 = self;
    id v15 = v12;
    uint64_t v16 = v13;
    id v17 = v13;
    id v18 = objc_msgSend(v14, sel_traitCollectionWithPreferredContentSizeCategory_, v17);
    id v12 = objc_msgSend(v15, sel_configurationWithTraitCollection_, v18);
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v20 = v12;
  id v21 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v21, v20);

  if (!v22)
  {
    __break(1u);
    goto LABEL_26;
  }
  id v23 = objc_msgSend(v22, sel_imageWithRenderingMode_, 2);

  a5 = v16;
  if (a4)
  {
LABEL_12:
    sub_1E0DF2C04(0, &qword_1EAD69A10);
    id v24 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(self, sel_configurationWithPaletteColors_, v24);

    id v26 = objc_msgSend(v23, sel_imageByApplyingSymbolConfiguration_, v25);
    if (v26)
    {
      id v27 = v26;

      id v23 = v27;
      goto LABEL_14;
    }
LABEL_26:
    __break(1u);
    return;
  }
LABEL_14:
  id v28 = objc_msgSend(self, sel_textAttachmentWithImage_, v23);
  uint64_t v29 = v28;
  if (v11 != 255)
  {
    id v30 = objc_msgSend(v28, sel_image);
    if (v30)
    {
      id v31 = v30;
      if (v11)
      {
        if (v11 == 1)
        {
          objc_msgSend(a7, sel_capHeight);
          objc_msgSend(v31, sel_size);
        }
        else
        {
          objc_msgSend(a7, sel_descender);
        }
      }
      objc_msgSend(v31, sel_size);
      objc_msgSend(v31, sel_size);
      objc_msgSend(v29, sel_setBounds_, CGRectMake());
    }
  }
  id v32 = objc_msgSend(self, sel_attributedStringWithAttachment_, v29);
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v32);

  if (!a5)
  {
    sub_1E0E2002C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
    uint64_t v35 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
    *(void *)(inited + 40) = a7;
    id v36 = v35;
    id v37 = a7;
    sub_1E0E3FB40(inited);
    type metadata accessor for Key(0);
    sub_1E0E1ACD4();
    id v38 = (void *)sub_1E0ECCFC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_addAttributes_range_, v38, 0, objc_msgSend(v33, sel_length));
  }
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAttributedString_, v33);
}

double NSAttributedString.expectedSize(forWidth:)(double a1)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 3, 0, a1, 1.79769313e308);
  CGFloat x = v8.origin.x;
  CGFloat y = v8.origin.y;
  CGFloat width = v8.size.width;
  CGFloat height = v8.size.height;
  double v6 = CGRectGetWidth(v8);
  v9.origin.CGFloat x = x;
  v9.origin.CGFloat y = y;
  v9.size.CGFloat width = width;
  v9.size.CGFloat height = height;
  CGRectGetHeight(v9);
  return v6;
}

double NSAttributedString.expectedSize(forHeight:)(double a1)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 3, 0, 1.79769313e308, a1);
  CGFloat x = v8.origin.x;
  CGFloat y = v8.origin.y;
  CGFloat width = v8.size.width;
  CGFloat height = v8.size.height;
  double v6 = CGRectGetWidth(v8);
  v9.origin.CGFloat x = x;
  v9.origin.CGFloat y = y;
  v9.size.CGFloat width = width;
  v9.size.CGFloat height = height;
  CGRectGetHeight(v9);
  return v6;
}

double NSAttributedString.expectedWidth(forHeight:)(double a1)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 3, 0, 1.79769313e308, a1);
  CGFloat x = v8.origin.x;
  CGFloat y = v8.origin.y;
  CGFloat width = v8.size.width;
  CGFloat height = v8.size.height;
  double v6 = CGRectGetWidth(v8);
  v9.origin.CGFloat x = x;
  v9.origin.CGFloat y = y;
  v9.size.CGFloat width = width;
  v9.size.CGFloat height = height;
  CGRectGetHeight(v9);
  return v6;
}

double NSAttributedString.expectedHeight(forWidth:)(double a1)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 3, 0, a1, 1.79769313e308);
  CGFloat x = v12.origin.x;
  CGFloat y = v12.origin.y;
  CGFloat width = v12.size.width;
  CGFloat height = v12.size.height;
  CGRectGetWidth(v12);
  CGFloat v6 = x;
  CGFloat v7 = y;
  CGFloat v8 = width;
  CGFloat v9 = height;
  return CGRectGetHeight(*(CGRect *)&v6);
}

id NSAttributedString.expectedNumberOfLines(forWidth:font:)(void *a1, double a2)
{
  objc_msgSend(v2, sel_boundingRectWithSize_options_context_, 3, 0, a2, 1.79769313e308);
  CGFloat x = v12.origin.x;
  CGFloat y = v12.origin.y;
  CGFloat width = v12.size.width;
  CGFloat height = v12.size.height;
  CGRectGetWidth(v12);
  v13.origin.CGFloat x = x;
  v13.origin.CGFloat y = y;
  v13.size.CGFloat width = width;
  v13.size.CGFloat height = height;
  double v8 = CGRectGetHeight(v13);
  id result = objc_msgSend(a1, sel_lineHeight);
  double v11 = round(v8 / v10);
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v11 < 9.22337204e18) {
    return (id)(uint64_t)v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

BOOL NSAttributedString.isTaller(than:forWidth:returnLongerIfTied:)(void *a1, char a2, double a3)
{
  objc_msgSend(v3, sel_boundingRectWithSize_options_context_, 3, 0, a3, 1.79769313e308);
  CGFloat x = v19.origin.x;
  CGFloat y = v19.origin.y;
  CGFloat width = v19.size.width;
  CGFloat height = v19.size.height;
  CGRectGetWidth(v19);
  v20.origin.CGFloat x = x;
  v20.origin.CGFloat y = y;
  v20.size.CGFloat width = width;
  v20.size.CGFloat height = height;
  double v11 = CGRectGetHeight(v20);
  objc_msgSend(a1, sel_boundingRectWithSize_options_context_, 3, 0, a3, 1.79769313e308);
  CGFloat v12 = v21.origin.x;
  CGFloat v13 = v21.origin.y;
  CGFloat v14 = v21.size.width;
  CGFloat v15 = v21.size.height;
  CGRectGetWidth(v21);
  v22.origin.CGFloat x = v12;
  v22.origin.CGFloat y = v13;
  v22.size.CGFloat width = v14;
  v22.size.CGFloat height = v15;
  double v16 = CGRectGetHeight(v22);
  if (v16 < v11) {
    return 1;
  }
  BOOL result = 0;
  if (v11 == v16 && (a2 & 1) != 0)
  {
    id v18 = objc_msgSend(v3, sel_length);
    return (uint64_t)objc_msgSend(a1, sel_length) < (uint64_t)v18;
  }
  return result;
}

NSAttributedString __swiftcall NSAttributedString.withContentSizeCategory(_:)(__C::UIContentSizeCategory a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v1);
  uint64_t v4 = *MEMORY[0x1E4FB06F8];
  id v5 = objc_msgSend(v3, sel_length);
  CGFloat v6 = (__C::UIContentSizeCategory *)swift_allocObject();
  v6[2]._rawValue = a1._rawValue;
  v6[3]._rawValue = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1E0E41578;
  *(void *)(v7 + 24) = v6;
  v12[4] = sub_1E0E4583C;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1E0E414A8;
  v12[3] = &block_descriptor_8;
  double v8 = _Block_copy(v12);
  id v9 = a1._rawValue;
  id v10 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_enumerateAttribute_inRange_options_usingBlock_, v4, 0, v5, 0, v8);
  _Block_release(v8);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.Class isa = (Class)swift_release();
  if ((v4 & 1) == 0) {
    return (NSAttributedString)v10;
  }
  __break(1u);
  return result;
}

id _sSo18NSAttributedStringC8HealthUIE16numericFormatted6string0E10Attributes05otherH0ABSS_SDySo0aB3KeyaypGAJtFZ_0(uint64_t a1, unint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v16 = 0;
  uint64_t v17 = v5;
  swift_bridgeObjectRetain();
  sub_1E0ECD260();
  if (v6)
  {
    do
    {
      sub_1E0ECD080();
      swift_bridgeObjectRetain();
      id v7 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      double v8 = (void *)sub_1E0ECD190();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1E0E1ACD4();
      id v9 = (void *)sub_1E0ECCFC0();
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v7, sel_initWithString_attributes_, v8, v9, v14, v15, v16, v17);

      objc_msgSend(v4, sel_appendAttributedString_, v10);
      sub_1E0ECD260();
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithAttributedString_, v4);

  return v12;
}

double CGRectMake()
{
  return 0.0;
}

uint64_t sub_1E0E457EC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E4582C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E4583C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1E0E41480(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)NSAttributedString result = v2;
  return result;
}

uint64_t _s23AccessoryImageAlignmentOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s23AccessoryImageAlignmentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)NSAttributedString result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1E0E458FC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1E0E45904(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NSAttributedString.AccessoryImageAlignment()
{
  return &type metadata for NSAttributedString.AccessoryImageAlignment;
}

uint64_t sub_1E0E4591C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1E0ECD890();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E4E3EF00](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        double v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1E0ECD910();
    swift_bridgeObjectRelease();
    sub_1E0ECD890();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1E0E45B04(unint64_t a1)
{
  return sub_1E0E45D80(a1, (void (*)(void))type metadata accessor for BalanceChartPoint);
}

uint64_t sub_1E0E45B1C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1E0ECD890();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E4E3EF00](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1E0ECD910();
    swift_bridgeObjectRelease();
    sub_1E0ECD890();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1E0E45D08(unint64_t a1)
{
  return sub_1E0E45D80(a1, (void (*)(void))type metadata accessor for AudiogramLongitudinalChartData);
}

uint64_t sub_1E0E45D20(unint64_t a1)
{
  return sub_1E0E45D80(a1, (void (*)(void))type metadata accessor for StateOfMindChartPoint);
}

uint64_t sub_1E0E45D38(unint64_t a1)
{
  return sub_1E0E45D80(a1, (void (*)(void))type metadata accessor for AudiogramLongitudinalChartPoint);
}

uint64_t sub_1E0E45D50(unint64_t a1)
{
  return sub_1E0E45D80(a1, (void (*)(void))type metadata accessor for BalanceCoordinateInfo);
}

uint64_t sub_1E0E45D68(unint64_t a1)
{
  return sub_1E0E45D80(a1, (void (*)(void))type metadata accessor for StateOfMindCoordinateInfo);
}

uint64_t sub_1E0E45D80(unint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1E0ECD890();
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E4E3EF00](i, v3);
        uint64_t v6 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        a2(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        if (v6 == v4) {
          return v11;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v8 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        a2(0);
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v3 = v9;
        swift_unknownObjectRetain();
        sub_1E0ECD870();
        sub_1E0ECD8A0();
        sub_1E0ECD8B0();
        sub_1E0ECD880();
        if (v8 == v4) {
          return v11;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1E0ECD910();
    swift_bridgeObjectRelease();
    sub_1E0ECD890();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1E0E45F70(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1E0DEEC40(0, v3 & ~(v3 >> 63), 0);
    uint64_t v4 = v26;
    if (v2) {
      break;
    }
    unint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v4;
    }
LABEL_7:
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        uint64_t v6 = MEMORY[0x1E4E3EF00](i, v1);
        uint64_t v7 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        uint64_t v8 = v6;
        swift_getObjectType();
        uint64_t v9 = swift_conformsToProtocol2();
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = 0;
        }
        if (v9) {
          uint64_t v11 = v8;
        }
        else {
          uint64_t v11 = 0;
        }
        if (!v11)
        {
          swift_release();
          swift_unknownObjectRelease();
          return 0;
        }
        unint64_t v13 = *(void *)(v26 + 16);
        unint64_t v12 = *(void *)(v26 + 24);
        if (v13 >= v12 >> 1) {
          sub_1E0DEEC40(v12 > 1, v13 + 1, 1);
        }
        *(void *)(v26 + 16) = v13 + 1;
        uint64_t v14 = v26 + 16 * v13;
        *(void *)(v14 + 32) = v11;
        *(void *)(v14 + 40) = v10;
        if (v7 == v2) {
          return v4;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v15 = 0;
      unint64_t v25 = v1 + 32;
      while (1)
      {
        uint64_t v16 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        uint64_t v17 = *(void *)(v25 + 8 * v15);
        swift_getObjectType();
        uint64_t v18 = swift_conformsToProtocol2();
        if (v18) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = 0;
        }
        if (v18) {
          uint64_t v20 = v17;
        }
        else {
          uint64_t v20 = 0;
        }
        if (!v20)
        {
          swift_release();
          return 0;
        }
        unint64_t v22 = *(void *)(v26 + 16);
        unint64_t v21 = *(void *)(v26 + 24);
        unint64_t v1 = v22 + 1;
        swift_unknownObjectRetain();
        if (v22 >= v21 >> 1) {
          sub_1E0DEEC40(v21 > 1, v22 + 1, 1);
        }
        *(void *)(v26 + 16) = v1;
        uint64_t v23 = v26 + 16 * v22;
        *(void *)(v23 + 32) = v20;
        *(void *)(v23 + 40) = v19;
        ++v15;
        if (v16 == v2) {
          return v4;
        }
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_7;
  }
  return v4;
}

uint64_t sub_1E0E461C0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (!v19) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  unint64_t v6 = sub_1E0E45B1C(a1);
  if (!v6)
  {
    if (qword_1EAD6D4E0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1E0ECC010();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EAD74138);
    uint64_t v9 = sub_1E0ECBFF0();
    os_log_type_t v10 = sub_1E0ECD520();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v24 = v12;
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v13 = sub_1E0ECDBC0();
      uint64_t v23 = sub_1E0DED7E4(v13, v14, &v24);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v9, v10, "[%{public}s] Asked to create selected range data for incompatible chart data", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v12, -1, -1);
      MEMORY[0x1E4E41080](v11, -1, -1);
    }

    sub_1E0E467C4();
    uint64_t v15 = (void *)sub_1E0ECD320();
    uint64_t v16 = (objc_class *)type metadata accessor for SleepApneaEventInteractiveChartFormatter();
    v25.receiver = v3;
    v25.super_class = v16;
    id v17 = objc_msgSendSuper2(&v25, sel_formattedSelectedRangeLabelDataWithChartData_context_, v15, a2);
    goto LABEL_18;
  }
  if (a2 == 1)
  {
    if (v6 >> 62)
    {
      sub_1E0E467C4();
      sub_1E0ECD900();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1E0ECD9F0();
      sub_1E0E467C4();
    }
    swift_bridgeObjectRelease();
    sub_1E0E467C4();
    uint64_t v15 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    v21.receiver = v3;
    v21.super_class = (Class)type metadata accessor for SleepApneaEventInteractiveChartFormatter();
    id v17 = objc_msgSendSuper2(&v21, sel_formattedSelectedRangeLabelDataWithChartData_context_, v15, 1);
    goto LABEL_18;
  }
  if (a2)
  {
    if (v6 >> 62)
    {
      sub_1E0E467C4();
      sub_1E0ECD900();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1E0ECD9F0();
      sub_1E0E467C4();
    }
    swift_bridgeObjectRelease();
    sub_1E0E467C4();
    uint64_t v15 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    v22.receiver = v3;
    v22.super_class = (Class)type metadata accessor for SleepApneaEventInteractiveChartFormatter();
    id v17 = objc_msgSendSuper2(&v22, sel_formattedSelectedRangeLabelDataWithChartData_context_, v15, a2);
LABEL_18:
    id v18 = v17;

    sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6EA70);
    uint64_t v7 = sub_1E0ECD330();

    return v7;
  }
  uint64_t v7 = sub_1E0E46840();
  swift_bridgeObjectRelease();
  return v7;
}

id SleepApneaEventInteractiveChartFormatter.__allocating_init(localizedCategoryName:)()
{
  id v1 = objc_allocWithZone(v0);
  unint64_t v2 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithLocalizedCategoryName_, v2);

  return v3;
}

id SleepApneaEventInteractiveChartFormatter.init(localizedCategoryName:)()
{
  id v1 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for SleepApneaEventInteractiveChartFormatter();
  id v2 = objc_msgSendSuper2(&v4, sel_initWithLocalizedCategoryName_, v1);

  return v2;
}

id SleepApneaEventInteractiveChartFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SleepApneaEventInteractiveChartFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1E0E467C4()
{
  unint64_t result = qword_1EAD6EAA0;
  if (!qword_1EAD6EAA0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6EAA0);
  }
  return result;
}

uint64_t type metadata accessor for SleepApneaEventInteractiveChartFormatter()
{
  return self;
}

uint64_t sub_1E0E46840()
{
  id v1 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 32);
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  sub_1E0E2002C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F06210;
  objc_super v4 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  id v5 = v4;
  id v6 = objc_msgSend(v0, sel_majorFont, 0xE000000000000000);
  *(void *)(inited + 64) = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
  if (!v6) {
    id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  }
  uint64_t v7 = (void **)MEMORY[0x1E4FB0700];
  *(void *)(inited + 40) = v6;
  uint64_t v8 = *v7;
  *(void *)(inited + 72) = *v7;
  uint64_t v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_hk_chartLollipopValueColor);
  *(void *)(inited + 104) = sub_1E0DF2C04(0, &qword_1EAD69A10);
  *(void *)(inited + 80) = v11;
  sub_1E0E3FB40(inited);
  id v12 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v13 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1E0E1ACD4();
  unint64_t v14 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v12, sel_initWithString_attributes_, v13, v14);

  objc_msgSend(v1, sel_setAttributedString_, v15);
  sub_1E0DF2BA8();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1E0F06EB0;
  *(void *)(v16 + 32) = v1;
  uint64_t v18 = v16;
  sub_1E0ECD340();
  return v18;
}

uint64_t method lookup function for SleepApneaEventInteractiveChartFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SleepApneaEventInteractiveChartFormatter);
}

id sub_1E0E46B7C(uint64_t a1)
{
  return sub_1E0E47760(a1, _s26ActivePairedDeviceProviderCMa);
}

uint64_t _s26ActivePairedDeviceProviderCMa()
{
  return self;
}

uint64_t sub_1E0E46BC8()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider
                 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

uint64_t sub_1E0E46C14()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider
                 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t sub_1E0E46C60@<X0>(uint64_t *a1@<X8>)
{
  _s26ActivePairedDeviceProviderCMa();
  uint64_t result = sub_1E0ECC140();
  *a1 = result;
  return result;
}

uint64_t sub_1E0E46C9C()
{
  id v1 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_pairedDeviceRegistry), sel_getActivePairedDevice);
  if (!v1)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    sub_1E0B32EE4((uint64_t)&v6);
    return 0;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x1E4F79DD8]);

  if (v3)
  {
    sub_1E0ECD760();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1E0DF0A14((uint64_t)v5, (uint64_t)&v6);
  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v5[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_1E0E46D9C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v42 = sub_1E0ECD630();
  uint64_t v0 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42, v1);
  id v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E47B40();
  uint64_t v41 = v4;
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  id v38 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = (void *)*MEMORY[0x1E4F79EB8];
  id v44 = (id)*MEMORY[0x1E4F79EA0];
  id v45 = v7;
  id v46 = (id)*MEMORY[0x1E4F79E88];
  id v8 = v46;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  id v9 = v44;
  id v10 = v7;
  id v11 = v8;
  sub_1E0DEEAE4(0, 3, 0);
  uint64_t v12 = v43;
  uint64_t v13 = self;
  id v14 = v9;
  id v15 = objc_msgSend(v13, sel_defaultCenter);
  sub_1E0ECD640();

  unint64_t v17 = *(void *)(v12 + 16);
  unint64_t v16 = *(void *)(v12 + 24);
  if (v17 >= v16 >> 1)
  {
    sub_1E0DEEAE4(v16 > 1, v17 + 1, 1);
    uint64_t v12 = v43;
  }
  v37[1] = &v44;
  *(void *)(v12 + 16) = v17 + 1;
  unint64_t v18 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v19 = *(void *)(v0 + 72);
  unint64_t v20 = v12 + v18 + v19 * v17;
  objc_super v21 = *(void (**)(unint64_t, char *, uint64_t))(v0 + 32);
  v21(v20, v3, v42);
  id v22 = v45;
  id v23 = objc_msgSend(v13, sel_defaultCenter);
  sub_1E0ECD640();

  uint64_t v43 = v12;
  unint64_t v25 = *(void *)(v12 + 16);
  unint64_t v24 = *(void *)(v12 + 24);
  if (v25 >= v24 >> 1)
  {
    sub_1E0DEEAE4(v24 > 1, v25 + 1, 1);
    uint64_t v12 = v43;
  }
  *(void *)(v12 + 16) = v25 + 1;
  uint64_t v26 = v42;
  v21(v12 + v18 + v19 * v25, v3, v42);
  id v27 = v46;
  id v28 = objc_msgSend(v13, sel_defaultCenter);
  sub_1E0ECD640();

  uint64_t v43 = v12;
  unint64_t v30 = *(void *)(v12 + 16);
  unint64_t v29 = *(void *)(v12 + 24);
  if (v30 >= v29 >> 1)
  {
    sub_1E0DEEAE4(v29 > 1, v30 + 1, 1);
    uint64_t v12 = v43;
  }
  *(void *)(v12 + 16) = v30 + 1;
  v21(v12 + v18 + v19 * v30, v3, v26);
  type metadata accessor for Name(0);
  swift_arrayDestroy();
  uint64_t v43 = v12;
  sub_1E0E47BD8();
  sub_1E0E47CA8(&qword_1EAD6EB00, 255, MEMORY[0x1E4F27FC8]);
  sub_1E0E47CA8(&qword_1EAD6EB10, 255, (void (*)(uint64_t))sub_1E0E47BD8);
  id v31 = v38;
  sub_1E0ECC0D0();
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = ObjectType;
  *(void *)(v33 + 16) = v32;
  *(void *)(v33 + 24) = v34;
  sub_1E0E47CA8(&qword_1EAD6EB18, 255, (void (*)(uint64_t))sub_1E0E47B40);
  uint64_t v35 = v41;
  sub_1E0ECC260();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v35);
  swift_beginAccess();
  sub_1E0ECC110();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1E0E472F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E0ECB3E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  id v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E0ECC010();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2 + 16;
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1E4E41170](v14);
  if (v15)
  {
    unint64_t v16 = (void *)v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15+ OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_logger, v9);

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    unint64_t v17 = sub_1E0ECBFF0();
    os_log_type_t v18 = sub_1E0ECD540();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v38 = v10;
      uint64_t v21 = v20;
      uint64_t v36 = swift_slowAlloc();
      v40[0] = v36;
      *(_DWORD *)uint64_t v21 = 136446466;
      os_log_t v35 = v17;
      uint64_t v22 = sub_1E0ECDBC0();
      uint64_t v37 = v9;
      uint64_t v39 = sub_1E0DED7E4(v22, v23, v40);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v33[1] = v21 + 14;
      unint64_t v24 = (void *)sub_1E0ECB3D0();
      uint64_t v25 = sub_1E0ECD1D0();
      int v34 = v19;
      uint64_t v26 = v25;
      unint64_t v28 = v27;

      uint64_t v39 = sub_1E0DED7E4(v26, v28, v40);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      os_log_t v29 = v35;
      _os_log_impl(&dword_1E0B26000, v35, (os_log_type_t)v34, "[%{public}s] Received paired device change notification: %s", (uint8_t *)v21, 0x16u);
      uint64_t v30 = v36;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v30, -1, -1);
      MEMORY[0x1E4E41080](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v37);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E4E41170](v14);
  if (result)
  {
    uint64_t v32 = (void *)result;
    swift_retain();

    sub_1E0E47AD4();
    sub_1E0E47CA8(&qword_1EAD6FDE0, 255, (void (*)(uint64_t))sub_1E0E47AD4);
    sub_1E0ECC1D0();
    return swift_release();
  }
  return result;
}

id sub_1E0E47744()
{
  return sub_1E0E47760(0, _s38NanoRegistryActivePairedDeviceProviderCMa);
}

id sub_1E0E47760(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1E0E47838()
{
  return _s38NanoRegistryActivePairedDeviceProviderCMa();
}

uint64_t _s38NanoRegistryActivePairedDeviceProviderCMa()
{
  uint64_t result = qword_1EAD6EAD0;
  if (!qword_1EAD6EAD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0E4788C()
{
  uint64_t result = sub_1E0ECC010();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1E0E47948()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1E0E47958()
{
  return sub_1E0ECC230();
}

uint64_t sub_1E0E479E0@<X0>(uint64_t *a1@<X8>)
{
  _s38NanoRegistryActivePairedDeviceProviderCMa();
  uint64_t result = sub_1E0ECC140();
  *a1 = result;
  return result;
}

uint64_t sub_1E0E47A20(uint64_t a1)
{
  uint64_t result = sub_1E0E47CA8(&qword_1EAD6EAE0, 255, (void (*)(uint64_t))_s38NanoRegistryActivePairedDeviceProviderCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1E0E47A7C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1E0E47CA8(&qword_1EAD6EAE8, a2, (void (*)(uint64_t))_s26ActivePairedDeviceProviderCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1E0E47AD4()
{
  if (!qword_1EAD6EAF0)
  {
    unint64_t v0 = sub_1E0ECC170();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EAF0);
    }
  }
}

void sub_1E0E47B40()
{
  if (!qword_1EAD6EAF8)
  {
    sub_1E0ECD630();
    sub_1E0E47CA8(&qword_1EAD6EB00, 255, MEMORY[0x1E4F27FC8]);
    unint64_t v0 = sub_1E0ECC0C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EAF8);
    }
  }
}

void sub_1E0E47BD8()
{
  if (!qword_1EAD6EB08)
  {
    sub_1E0ECD630();
    unint64_t v0 = sub_1E0ECD380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EB08);
    }
  }
}

uint64_t sub_1E0E47C30()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0E47C68()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E47CA0(uint64_t a1)
{
  return sub_1E0E472F8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1E0E47CA8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0E47CF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1E0E36384(0);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)&v25 - v12;
  sub_1E0ECB800();
  uint64_t v14 = sub_1E0ECB810();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14) != 1)
  {
    uint64_t v10 = v13;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v10, v14);
  }
  sub_1E0E482B0((uint64_t)v13);
  if (qword_1EAD6D4F0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1E0ECC010();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EAD74168);
  swift_bridgeObjectRetain_n();
  os_log_type_t v18 = sub_1E0ECBFF0();
  os_log_type_t v19 = sub_1E0ECD530();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = a3;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    unint64_t v27 = v16;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v25 = v21 + 4;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1E0DED7E4(a1, a2, &v30);
    unint64_t v16 = v27;
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1E0B26000, v18, v19, "HKClinicalAuthorizationSequenceContext failed to create Health App url from %s, returning static ViewHealthRecords deep link", v21, 0xCu);
    uint64_t v22 = v26;
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v22, -1, -1);
    unint64_t v23 = v21;
    a3 = v28;
    MEMORY[0x1E4E41080](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1E0ECB800();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v10, 1, v14);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v10, v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E48000@<X0>(uint64_t a1@<X8>)
{
  sub_1E0ECD800();
  sub_1E0ECD250();
  id v3 = objc_msgSend(v1, sel_source);
  id v4 = objc_msgSend(v3, sel_bundleIdentifier);

  sub_1E0ECD1D0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0E47CF0(0, 0xE000000000000000, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0E48104@<X0>(uint64_t a1@<X8>)
{
  sub_1E0ECD800();
  sub_1E0ECD250();
  sub_1E0ECB9C0();
  sub_1E0E48258();
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  id v3 = objc_msgSend(v1, sel_source);
  id v4 = objc_msgSend(v3, sel_bundleIdentifier);

  sub_1E0ECD1D0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0E47CF0(0, 0xE000000000000000, a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1E0E48258()
{
  unint64_t result = qword_1EAD6EB20;
  if (!qword_1EAD6EB20)
  {
    sub_1E0ECB9C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6EB20);
  }
  return result;
}

uint64_t sub_1E0E482B0(uint64_t a1)
{
  sub_1E0E36384(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id AudiogramLongitudinalChartFormatter.__allocating_init(displayType:unitController:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return AudiogramChartDataFormatter.init(displayType:unitController:)(a1, a2);
}

uint64_t sub_1E0E48350()
{
  return 33;
}

uint64_t sub_1E0E48358()
{
  return 34;
}

uint64_t sub_1E0E48428(unint64_t a1)
{
  uint64_t v3 = sub_1E0E45D08(a1);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v5 = v3;
    if ((unint64_t)v3 >> 62)
    {
      if (v3 >= 0) {
        uint64_t v2 = (void *)(v3 & 0xFFFFFFFFFFFFFF8);
      }
      else {
        uint64_t v2 = (void *)v3;
      }
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1E0ECD910();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
        }
        else
        {
          id v55 = v1;
          unint64_t v7 = v5 & 0xC000000000000001;
          swift_bridgeObjectRetain();
          uint64_t v8 = 0;
          double v9 = 0.0;
          double v10 = 0.0;
          do
          {
            if (v7) {
              uint64_t v11 = (char *)MEMORY[0x1E4E3EF00](v8, v5);
            }
            else {
              uint64_t v11 = (char *)*(id *)(v5 + 8 * v8 + 32);
            }
            uint64_t v12 = v11;
            id v13 = *(id *)&v11[OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary];
            id v14 = objc_msgSend(v13, sel_leftEarMetrics);
            if (v14
              && (uint64_t v15 = v14,
                  id v16 = objc_msgSend(v14, sel_averageSensitivity),
                  v15,
                  v16))
            {
              id v17 = objc_msgSend(self, sel_decibelHearingLevelUnit);
              objc_msgSend(v16, sel_doubleValueForUnit_, v17);
              double v19 = v18;

              double v10 = v10 + 1.0;
              double v9 = v9 + v19;
            }
            else
            {
            }
            ++v8;
          }
          while (v6 != v8);
          swift_bridgeObjectRelease();
          if (v10 <= 0.0)
          {
            id v54 = 0;
          }
          else
          {
            uint64_t v20 = self;
            id v21 = objc_msgSend(v20, sel_decibelHearingLevelUnit);
            id v22 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v21, v9 / v10);

            id v23 = objc_msgSend(v20, sel_decibelHearingLevelUnit);
            objc_msgSend(v22, sel_doubleValueForUnit_, v23);
            double v25 = v24;
            id v26 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
            objc_msgSend(v26, sel_setDataType_, 33);
            id v27 = objc_msgSend(v55, sel_attributedStringWithValue_unit_showUnit_, v23, 1, v25);
            objc_msgSend(v26, sel_setAttributedString_, v27);

            uint64_t v28 = (void *)sub_1E0ECBD90();
            id v54 = v26;
            objc_msgSend(v26, sel_setValueAsNumber_, v28);
          }
          swift_bridgeObjectRetain();
          uint64_t v29 = 0;
          double v30 = 0.0;
          double v31 = 0.0;
          do
          {
            if (v7) {
              uint64_t v32 = (char *)MEMORY[0x1E4E3EF00](v29, v5);
            }
            else {
              uint64_t v32 = (char *)*(id *)(v5 + 8 * v29 + 32);
            }
            uint64_t v33 = v32;
            id v34 = *(id *)&v32[OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary];
            id v35 = objc_msgSend(v34, sel_rightEarMetrics);
            if (v35
              && (uint64_t v36 = v35,
                  id v37 = objc_msgSend(v35, sel_averageSensitivity),
                  v36,
                  v37))
            {
              id v38 = objc_msgSend(self, sel_decibelHearingLevelUnit);
              objc_msgSend(v37, sel_doubleValueForUnit_, v38);
              double v40 = v39;

              double v31 = v31 + 1.0;
              double v30 = v30 + v40;
            }
            else
            {
            }
            ++v29;
          }
          while (v6 != v29);
          swift_bridgeObjectRelease();
          if (v31 <= 0.0)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = 0;
          }
          else
          {
            uint64_t v41 = self;
            id v42 = objc_msgSend(v41, sel_decibelHearingLevelUnit);
            id v43 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v42, v30 / v31);

            id v44 = objc_msgSend(v41, sel_decibelHearingLevelUnit);
            objc_msgSend(v43, sel_doubleValueForUnit_, v44);
            double v46 = v45;
            uint64_t v6 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
            objc_msgSend((id)v6, sel_setDataType_, 34);
            id v47 = objc_msgSend(v55, sel_attributedStringWithValue_unit_showUnit_, v44, 1, v46);
            objc_msgSend((id)v6, sel_setAttributedString_, v47);

            id v48 = (void *)sub_1E0ECBD90();
            objc_msgSend((id)v6, sel_setValueAsNumber_, v48);
            swift_bridgeObjectRelease();
          }
          uint64_t v2 = v54;
          uint64_t v56 = MEMORY[0x1E4FBC860];
          if (!v54)
          {
            id v51 = (id)v6;
            if (!v6)
            {
LABEL_37:
              uint64_t v4 = v56;

              return v4;
            }
LABEL_34:
            id v52 = (id)v6;
            MEMORY[0x1E4E3E9E0]();
            if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1E0ECD350();
            }
            sub_1E0ECD370();
            sub_1E0ECD340();
            goto LABEL_37;
          }
          id v49 = (id)v6;
          id v50 = v54;
          MEMORY[0x1E4E3E9E0]();
          if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_31:
            sub_1E0ECD370();
            sub_1E0ECD340();
            if (!v6) {
              goto LABEL_37;
            }
            goto LABEL_34;
          }
        }
        sub_1E0ECD350();
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1E0E48A6C(unint64_t a1)
{
  unint64_t v1 = sub_1E0E45D08(a1);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v1) {
    return result;
  }
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_4;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1E0ECD910();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_4:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        uint64_t v6 = (char *)MEMORY[0x1E4E3EF00](i, v1);
      }
      else {
        uint64_t v6 = (char *)*(id *)(v1 + 8 * i + 32);
      }
      unint64_t v7 = v6;
      uint64_t v8 = OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary;
      id v9 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary], sel_leftEarMetrics);
      if (v9)
      {
        double v10 = v9;
        id v11 = objc_msgSend(v9, sel_averageSensitivity);
        if (v11)
        {
          uint64_t v12 = v11;
          id v13 = objc_msgSend(self, sel_decibelHearingLevelUnit);
          objc_msgSend(v12, sel_doubleValueForUnit_, v13);
          double v15 = v14;
          id v16 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
          objc_msgSend(v16, sel_setDataType_, 33);
          id v17 = objc_msgSend(v28, sel_attributedStringWithValue_unit_showUnit_, v13, 1, v15);
          objc_msgSend(v16, sel_setAttributedString_, v17);

          double v18 = (void *)sub_1E0ECBD90();
          objc_msgSend(v16, sel_setValueAsNumber_, v18);

          MEMORY[0x1E4E3E9E0]();
          if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1E0ECD350();
          }
          sub_1E0ECD370();
          sub_1E0ECD340();
        }
      }
      double v19 = (char *)objc_msgSend(*(id *)&v7[v8], sel_rightEarMetrics);
      if (v19)
      {
        uint64_t v20 = v19;
        id v21 = (char *)objc_msgSend(v19, sel_averageSensitivity);
        if (v21)
        {
          uint64_t v5 = v21;
          id v22 = objc_msgSend(self, sel_decibelHearingLevelUnit);
          objc_msgSend(v5, sel_doubleValueForUnit_, v22);
          double v24 = v23;
          id v25 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
          objc_msgSend(v25, sel_setDataType_, 34);
          id v26 = objc_msgSend(v28, sel_attributedStringWithValue_unit_showUnit_, v22, 1, v24);
          objc_msgSend(v25, sel_setAttributedString_, v26);

          id v27 = (void *)sub_1E0ECBD90();
          objc_msgSend(v25, sel_setValueAsNumber_, v27);

          MEMORY[0x1E4E3E9E0]();
          if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1E0ECD350();
          }
          sub_1E0ECD370();
          sub_1E0ECD340();

          unint64_t v7 = v20;
        }
        else
        {
          uint64_t v5 = v20;
        }
      }
    }
    swift_bridgeObjectRelease();
    return v29;
  }
  return result;
}

id AudiogramLongitudinalChartFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramLongitudinalChartFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AudiogramLongitudinalChartFormatter()
{
  return self;
}

uint64_t method lookup function for AudiogramLongitudinalChartFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramLongitudinalChartFormatter);
}

unint64_t sub_1E0E48ECC()
{
  unint64_t result = qword_1EAD6EA70;
  if (!qword_1EAD6EA70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6EA70);
  }
  return result;
}

void sub_1E0E48F0C(uint64_t a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI48ClinicalAuthorizationAccountsIntroViewController_delegate] = a1;
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI48ClinicalAuthorizationAccountsIntroViewController_viewControllerToPush] = a2;
  swift_unknownObjectRetain();
  id v4 = a2;
  uint64_t v5 = (void *)sub_1E0ECD190();
  id v6 = HKHealthRecordsAPILocalizedString(v5);

  if (v6)
  {
    id v7 = HKHealthUIFrameworkBundle();
    uint64_t v8 = (void *)sub_1E0ECD190();
    id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v7);

    v12.receiver = v2;
    v12.super_class = (Class)type metadata accessor for ClinicalAuthorizationAccountsIntroViewController();
    id v10 = objc_msgSendSuper2(&v12, sel_initWithTitle_detailText_icon_contentLayout_, v6, 0, v9, 2);

    id v11 = v10;
    objc_msgSend(v11, sel_setShouldMoveHeaderViewTitleToNavigationTitleWhenScrolledOffScreen_, 0);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1E0E490D8()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 1);

  id v2 = objc_msgSend(v0, sel_navigationItem);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonPressed_);
  objc_msgSend(v2, sel_setRightBarButtonItem_, v3);

  id v4 = objc_msgSend(self, sel_boldButton);
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_systemBlueColor);
  objc_msgSend(v6, sel_setTintColor_, v7);

  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonPressed_, 64);
  uint64_t v8 = (void *)sub_1E0ECD190();
  id v9 = HKHealthRecordsAPILocalizedString(v8);

  objc_msgSend(v6, sel_setTitle_forState_, v9, 0);
  id v10 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v10, sel_addButton_, v6);
}

void sub_1E0E492C0()
{
  id v1 = (void *)sub_1E0ECD190();
  id v2 = HKHealthRecordsAPILocalizedString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v3 = (void *)sub_1E0ECD190();
  id v4 = HKHealthRecordsAPILocalizedString(v3);

  if (!v4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = (void *)sub_1E0ECD190();
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_symbolName_tintColor_, v2, v4, v5, 0);

  id v6 = (void *)sub_1E0ECD190();
  id v7 = HKHealthRecordsAPILocalizedString(v6);

  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = (void *)sub_1E0ECD190();
  id v9 = HKHealthRecordsAPILocalizedString(v8);

  if (!v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v10 = (void *)sub_1E0ECD190();
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_symbolName_tintColor_, v7, v9, v10, 0);

  id v11 = (void *)sub_1E0ECD190();
  id v12 = HKHealthRecordsAPILocalizedString(v11);

  if (!v12)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v13 = (void *)sub_1E0ECD190();
  id v14 = HKHealthRecordsAPILocalizedString(v13);

  if (!v14)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v15 = (id)sub_1E0ECD190();
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_symbolName_tintColor_, v12, v14, v15, 0);
}

void sub_1E0E495BC()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI48ClinicalAuthorizationAccountsIntroViewController_delegate);
  id v2 = self;
  id v3 = (void *)sub_1E0ECD190();
  id v4 = objc_msgSend(v2, sel_hk_error_description_, 7, v3);

  id v5 = (id)sub_1E0ECB760();
  objc_msgSend(v1, sel_promptControllerDidFinish_error_, v0, v5);
}

void sub_1E0E496F4(uint64_t a1, char a2)
{
  id v3 = v2;
  id v6 = objc_msgSend(v3, sel_navigationController);
  if (v6)
  {
    oslog = v6;
    [v6 pushViewController:a1 animated:a2 & 1];
  }
  else
  {
    if (qword_1EAD6D4F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1E0ECC010();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EAD74168);
    oslog = sub_1E0ECBFF0();
    os_log_type_t v8 = sub_1E0ECD530();
    if (os_log_type_enabled(oslog, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_1E0B26000, oslog, v8, "ClinicalAuthorizationAccountsIntroViewController tasked to push but doesn't live in a navigation controller", v9, 2u);
      MEMORY[0x1E4E41080](v9, -1, -1);
    }
  }
}

id sub_1E0E49884()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalAuthorizationAccountsIntroViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAuthorizationAccountsIntroViewController()
{
  return self;
}

uint64_t CalendarViewDataSource.startDate(forSection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v3 = sub_1E0ECB980();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E0ECBB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E4DD00(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8, v14);
  id v16 = (char *)&v19 - v15;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4F27C30], v8);
  uint64_t v20 = *(void (**)(char *))(v4 + 16);
  uint64_t v21 = v2 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startDate;
  v20(v7);
  sub_1E0ECBB30();
  id v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v16, 1, v3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v22, v16, v3);
  }
  sub_1E0DF0AA0((uint64_t)v16);
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  strcpy((char *)v25, "Unable to add ");
  HIBYTE(v25[1]) = -18;
  uint64_t v24 = v23;
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  ((void (*)(char *, uint64_t, uint64_t))v20)(v7, v21, v3);
  sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  v17(v7, v3);
  uint64_t result = sub_1E0ECD8F0();
  __break(1u);
  return result;
}

uint64_t CalendarViewDataSource.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_calendar;
  uint64_t v4 = sub_1E0ECBB60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CalendarViewDataSource.__allocating_init(cellProvider:calendar:currentDate:startDate:endDate:)(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, char *a4, char *a5, char *a6)
{
  id v13 = objc_allocWithZone(v6);
  uint64_t v14 = sub_1E0E4D078(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t CalendarViewDataSource.init(cellProvider:calendar:currentDate:startDate:endDate:)(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, char *a4, char *a5, char *a6)
{
  uint64_t v6 = sub_1E0E4D078(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t CalendarViewDataSource.__allocating_init(cellProvider:calendar:currentDate:)(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v63 = a2;
  id v64 = a1;
  uint64_t v68 = sub_1E0ECBB60();
  uint64_t v65 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68, v6);
  id v62 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E0ECBB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  id v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E4DD00(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8, v14);
  id v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_1E0ECB980();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  uint64_t v56 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20, v22);
  int v61 = (char *)&v55 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23, v25);
  uint64_t v60 = (char *)&v55 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26, v28);
  id v59 = (char *)&v55 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29, v31);
  uint64_t v67 = (char *)&v55 - v33;
  MEMORY[0x1F4188790](v32, v34);
  uint64_t v36 = (char *)&v55 - v35;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4F27C20], v8);
  uint64_t v66 = a4;
  uint64_t v37 = a3;
  sub_1E0ECBB30();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1E0DF0AA0((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v56, v66, v17);
    unint64_t v69 = 0;
    unint64_t v70 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    unint64_t v69 = 0xD00000000000002CLL;
    unint64_t v70 = 0x80000001E0F2AAD0;
    sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
    sub_1E0ECD9B0();
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E0ECD8F0();
    __break(1u);
  }
  else
  {
    id v38 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    id v58 = v36;
    v38(v36, v16, v17);
    uint64_t v39 = v18;
    uint64_t v57 = v37;
    double v40 = (void *)sub_1E0ECBB00();
    uint64_t v41 = (void *)sub_1E0ECB920();
    id v42 = objc_msgSend(v40, sel_hk_startOfYearForDate_addingYears_, v41, 0);

    id v43 = v67;
    sub_1E0ECB940();

    uint64_t v44 = v65;
    uint64_t v45 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v62, v37, v68);
    double v46 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    id v47 = v59;
    uint64_t v48 = v66;
    v46(v59, v66, v17);
    id v49 = v60;
    v46(v60, (uint64_t)v43, v17);
    id v50 = v61;
    v46(v61, v48, v17);
    id v51 = objc_allocWithZone((Class)type metadata accessor for CalendarViewDataSource());
    uint64_t v52 = sub_1E0E4D078(v64, v63, v45, v47, v49, v50);
    swift_unknownObjectRelease();
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v53(v48, v17);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v57, v68);
    v53((uint64_t)v67, v17);
    v53((uint64_t)v58, v17);
    return v52;
  }
  return result;
}

id CalendarViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CalendarViewDataSource.init()()
{
}

id CalendarViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s8HealthUI22CalendarViewDataSourceC16numberOfSections2inSiSo012UICollectionD0C_tF_0()
{
  uint64_t v1 = sub_1E0ECB460();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v1, v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v4, v7);
  uint64_t v10 = (char *)v24 - v9;
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)v24 - v12;
  v24[1] = v0 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_calendar;
  sub_1E0E4DD00(0, &qword_1EAD6EB60, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = sub_1E0ECBB40();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1E0F07C90;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x1E4F27C30], v14);
  sub_1E0E4CD64(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v18 = v0 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startComponents;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v19(v10, v0 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startComponents, v1);
  v24[0] = v0 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_endComponents;
  ((void (*)(char *))v19)(v6);
  sub_1E0ECBA90();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20(v6, v1);
  v20(v10, v1);
  uint64_t v21 = sub_1E0ECB450();
  LOBYTE(v6) = v22;
  v20(v13, v1);
  if ((v6 & 1) == 0) {
    return v21;
  }
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD00000000000001CLL;
  unint64_t v26 = 0x80000001E0F2AC20;
  v19(v10, v18, v1);
  sub_1E0E4E018((unint64_t *)&unk_1EAD6F980, MEMORY[0x1E4F26F90]);
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  v20(v10, v1);
  sub_1E0ECD250();
  v19(v10, v24[0], v1);
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  v20(v10, v1);
  uint64_t result = sub_1E0ECD8F0();
  __break(1u);
  return result;
}

uint64_t CalendarViewDataSource.startDate(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E0ECB980();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E0ECBD20();
  CalendarViewDataSource.startDate(forSection:)(v7, (uint64_t)v6);
  uint64_t v8 = sub_1E0E4ABF8((uint64_t)v6);
  uint64_t result = sub_1E0ECBD10();
  if (__OFSUB__(result, v8))
  {
    __break(1u);
  }
  else
  {
    sub_1E0E4AEE8((result - v8) & ~((result - v8) >> 63), a1);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_1E0E4ABF8(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECB980();
  uint64_t v22 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E0ECBB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  v15((char *)&v21 - v13, *MEMORY[0x1E4F27C68], v6);
  v15(v11, *MEMORY[0x1E4F27BC0], v6);
  uint64_t v16 = sub_1E0ECBA60();
  char v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v11, v6);
  v19(v14, v6);
  if (v18) {
    goto LABEL_5;
  }
  uint64_t result = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v5, a1, v2);
    unint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    unint64_t v23 = 0xD000000000000024;
    unint64_t v24 = 0x80000001E0F2AC40;
    sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
    sub_1E0ECD9B0();
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E0ECD8F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1E0E4AEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1E0ECB980();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v22 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E0ECBB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E4DD00(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  char v17 = (char *)&v20 - v16;
  uint64_t v21 = v2;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E4F27BF0], v9);
  sub_1E0ECBB30();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v17, v5);
  }
  sub_1E0DF0AA0((uint64_t)v17);
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "Unable to add ");
  HIBYTE(v24[1]) = -18;
  uint64_t v23 = a1;
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  uint64_t v19 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v22, v21 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startDate, v5);
  sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  uint64_t result = sub_1E0ECD8F0();
  __break(1u);
  return result;
}

uint64_t sub_1E0E4B2B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1E0ECB460();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E0ECB980();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v29 - v15;
  char v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v31 = v2 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startDate;
  uint64_t v34 = v17;
  ((void (*)(char *))v17)((char *)&v29 - v15);
  sub_1E0E4E018(qword_1EAD6F8E0, MEMORY[0x1E4F27928]);
  uint64_t v36 = a1;
  char v18 = sub_1E0ECD0C0();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v9 + 8);
  v35(v16, v8);
  uint64_t v19 = 0;
  if (v18) {
    return v19;
  }
  v34(v16, v2 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_endDate, v8);
  char v20 = sub_1E0ECD0C0();
  v35(v16, v8);
  if (v20)
  {
    uint64_t v21 = _s8HealthUI22CalendarViewDataSourceC16numberOfSections2inSiSo012UICollectionD0C_tF_0();
    if (!__OFSUB__(v21, 1)) {
      return (v21 - 1) & ~((v21 - 1) >> 63);
    }
    __break(1u);
  }
  else
  {
    uint64_t v30 = v13;
    sub_1E0E4DD00(0, &qword_1EAD6EB60, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
    uint64_t v22 = sub_1E0ECBB40();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1E0F07C90;
    (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x1E4F27C30], v22);
    sub_1E0E4CD64(v25);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v2 = v31;
    v34(v16, v31, v8);
    sub_1E0ECBAA0();
    swift_bridgeObjectRelease();
    v35(v16, v8);
    uint64_t v19 = sub_1E0ECB450();
    LOBYTE(v25) = v26;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
    if ((v25 & 1) == 0) {
      return v19;
    }
  }
  uint64_t v28 = v34;
  v34(v30, v36, v8);
  unint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  unint64_t v37 = 0xD00000000000001CLL;
  unint64_t v38 = 0x80000001E0F2AC20;
  v28(v16, v2, v8);
  sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  v35(v16, v8);
  sub_1E0ECD250();
  sub_1E0ECD9B0();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1E0ECD8F0();
  __break(1u);
  return result;
}

uint64_t CalendarViewDataSource.indexPath(containing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v4 = sub_1E0ECB460();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E0ECB980();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v10, v13);
  uint64_t v16 = (char *)&v37 - v15;
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = sub_1E0E4B2B8(a1);
  id v43 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v43(v19, v2 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startDate, v7);
  sub_1E0E4E018(qword_1EAD6F8E0, MEMORY[0x1E4F27928]);
  char v21 = sub_1E0ECD0C0();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v8 + 8);
  v44(v19, v7);
  if (v21) {
    return MEMORY[0x1E4E3D3D0](0, v20);
  }
  CalendarViewDataSource.startDate(forSection:)(v20, (uint64_t)v16);
  uint64_t v23 = sub_1E0E4ABF8((uint64_t)v16);
  uint64_t v42 = a1;
  uint64_t v24 = sub_1E0ECBAC0();
  uint64_t v41 = v23;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_13;
  }
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v39 = v27;
  uint64_t v40 = v20;
  unint64_t v38 = v12;
  sub_1E0E4DD00(0, &qword_1EAD6EB60, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v28 = sub_1E0ECBB40();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v16;
  unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1E0F07C90;
  (*(void (**)(unint64_t, void, uint64_t))(v29 + 104))(v32 + v31, *MEMORY[0x1E4F27BF0], v28);
  sub_1E0E4CD64(v32);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v33 = v45;
  a1 = v42;
  sub_1E0ECBAA0();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1E0ECB420();
  LOBYTE(v32) = v35;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  if (v32)
  {
LABEL_15:
    v43(v38, a1, v7);
    unint64_t v49 = 0;
    unint64_t v50 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    unint64_t v49 = 0xD00000000000001ALL;
    unint64_t v50 = 0x80000001E0F2AB20;
    sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
    sub_1E0ECD9B0();
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    sub_1E0ECD250();
    sub_1E0ECD9B0();
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E0ECD8F0();
    __break(1u);
    return result;
  }
  if (__OFADD__(v41, v34))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v39 >= v41 + v34) {
    uint64_t v36 = v41 + v34;
  }
  else {
    uint64_t v36 = v39;
  }
  MEMORY[0x1E4E3D3D0](v36, v40);
  return ((uint64_t (*)(char *, uint64_t))v44)(v30, v7);
}

Swift::Int __swiftcall CalendarViewDataSource.collectionView(_:numberOfItemsInSection:)(UICollectionView *_, Swift::Int numberOfItemsInSection)
{
  uint64_t v3 = sub_1E0ECB980();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalendarViewDataSource.startDate(forSection:)(numberOfItemsInSection, (uint64_t)v7);
  uint64_t v8 = sub_1E0E4ABF8((uint64_t)v7);
  uint64_t v9 = sub_1E0ECBAC0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  Swift::Int result = v8 + v9;
  if (__OFADD__(v8, v9)) {
    __break(1u);
  }
  return result;
}

uint64_t CalendarViewDataSource.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a1;
  uint64_t v5 = sub_1E0ECBB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10, v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = sub_1E0ECBD20();
  CalendarViewDataSource.startDate(forSection:)(v18, (uint64_t)v17);
  uint64_t v19 = sub_1E0E4ABF8((uint64_t)v17);
  if (sub_1E0ECBD10() < v19)
  {
    uint64_t v20 = v2 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider;
    uint64_t result = MEMORY[0x1E4E41170](v3 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider);
    if (result)
    {
      uint64_t v22 = *(void *)(v20 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v3, v35, a2, ObjectType, v22);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v10);
      return v24;
    }
    goto LABEL_9;
  }
  uint64_t v25 = sub_1E0ECBD10();
  BOOL v26 = __OFSUB__(v25, v19);
  uint64_t result = v25 - v19;
  if (v26)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v33 = v10;
  sub_1E0E4AEE8(result, (uint64_t)v14);
  uint64_t v27 = v2 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider;
  uint64_t result = MEMORY[0x1E4E41170](v3 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider);
  if (result)
  {
    uint64_t v28 = *(void *)(v27 + 8);
    uint64_t v32 = swift_getObjectType();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E4F27BF0], v5);
    uint64_t v29 = sub_1E0ECBB50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8))(v3, v35, v14, v29, a2, v32, v28);
    swift_unknownObjectRelease();
    uint64_t v30 = v33;
    unint64_t v31 = *(void (**)(char *, uint64_t))(v34 + 8);
    v31(v14, v33);
    v31(v17, v30);
    return v24;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t CalendarViewDataSource.collectionView(_:viewForSupplementaryElementOfKind:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1E0ECD1D0() != a2 || v15 != a3)
  {
    char v17 = sub_1E0ECD9E0();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_8;
    }
    unint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD000000000000029;
    unint64_t v25 = 0x80000001E0F2AB40;
    sub_1E0ECD250();
    sub_1E0ECD8F0();
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v18 = sub_1E0ECBD20();
  CalendarViewDataSource.startDate(forSection:)(v18, (uint64_t)v14);
  uint64_t v19 = v4 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider;
  uint64_t result = MEMORY[0x1E4E41170](v5 + OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider);
  if (result)
  {
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t result = sub_1E0E4ABF8((uint64_t)v14);
    if (!__OFADD__(result, 1))
    {
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 24))(v5, a1, v14, result + 1, a4, ObjectType, v21);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return v23;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CalendarViewDataSource.day(from:)()
{
  uint64_t v0 = sub_1E0ECB980();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v0, v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = sub_1E0ECBD20();
  CalendarViewDataSource.startDate(forSection:)(v9, (uint64_t)v5);
  uint64_t v10 = sub_1E0E4ABF8((uint64_t)v5);
  uint64_t result = sub_1E0ECBD10();
  if (__OFSUB__(result, v10))
  {
    __break(1u);
  }
  else
  {
    sub_1E0E4AEE8((result - v10) & ~((result - v10) >> 63), (uint64_t)v8);
    uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
    v12(v5, v0);
    sub_1E0ECBAE0();
    return ((uint64_t (*)(char *, uint64_t))v12)(v8, v0);
  }
  return result;
}

uint64_t CalendarViewDataSource.indexPath(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E0ECB980();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECCF20();
  CalendarViewDataSource.indexPath(containing:)((uint64_t)v6, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1E0E4CA50(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECDB30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2, v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v39 = (char *)&v32 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    sub_1E0E4DF84();
    uint64_t v11 = sub_1E0ECD7E0();
    uint64_t v12 = 0;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v37 = v14;
    uint64_t v38 = v11 + 56;
    uint64_t v15 = *(unsigned __int8 *)(v13 + 64);
    uint64_t v34 = v10;
    uint64_t v35 = a1 + ((v15 + 32) & ~v15);
    uint64_t v16 = *(void *)(v13 + 56);
    char v17 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v33 = (uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 16);
    while (1)
    {
      uint64_t v36 = v12;
      v37(v39, v35 + v16 * v12, v2);
      sub_1E0E4E018(&qword_1EAD6EBD0, MEMORY[0x1E4F281B0]);
      uint64_t v18 = sub_1E0ECD050();
      uint64_t v19 = ~(-1 << *(unsigned char *)(v11 + 32));
      unint64_t v20 = v18 & v19;
      unint64_t v21 = (v18 & (unint64_t)v19) >> 6;
      uint64_t v22 = *(void *)(v38 + 8 * v21);
      uint64_t v23 = 1 << (v18 & v19);
      if ((v23 & v22) != 0)
      {
        while (1)
        {
          uint64_t v24 = v13;
          v37(v7, *(void *)(v11 + 48) + v20 * v16, v2);
          sub_1E0E4E018(&qword_1EAD6EBD8, MEMORY[0x1E4F281B0]);
          char v25 = sub_1E0ECD100();
          BOOL v26 = *v17;
          (*v17)(v7, v2);
          if (v25) {
            break;
          }
          unint64_t v20 = (v20 + 1) & v19;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v38 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          uint64_t v13 = v24;
          if ((v22 & (1 << v20)) == 0) {
            goto LABEL_8;
          }
        }
        v26(v39, v2);
        uint64_t v13 = v24;
      }
      else
      {
LABEL_8:
        uint64_t v27 = v39;
        *(void *)(v38 + 8 * v21) = v23 | v22;
        uint64_t result = (*v33)(*(void *)(v11 + 48) + v20 * v16, v27, v2);
        uint64_t v29 = *(void *)(v11 + 16);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30)
        {
          __break(1u);
          return result;
        }
        *(void *)(v11 + 16) = v31;
      }
      uint64_t v12 = v36 + 1;
      if (v36 + 1 == v34) {
        return v11;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E0E4CD64(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECBB40();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2, v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v39 = (char *)&v32 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    sub_1E0E4DEF0();
    uint64_t v11 = sub_1E0ECD7E0();
    uint64_t v12 = 0;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v37 = v14;
    uint64_t v38 = v11 + 56;
    uint64_t v15 = *(unsigned __int8 *)(v13 + 64);
    uint64_t v34 = v10;
    uint64_t v35 = a1 + ((v15 + 32) & ~v15);
    uint64_t v16 = *(void *)(v13 + 56);
    char v17 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v33 = (uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 16);
    while (1)
    {
      uint64_t v36 = v12;
      v37(v39, v35 + v16 * v12, v2);
      sub_1E0E4E018(&qword_1EAD6EBB8, MEMORY[0x1E4F27C88]);
      uint64_t v18 = sub_1E0ECD050();
      uint64_t v19 = ~(-1 << *(unsigned char *)(v11 + 32));
      unint64_t v20 = v18 & v19;
      unint64_t v21 = (v18 & (unint64_t)v19) >> 6;
      uint64_t v22 = *(void *)(v38 + 8 * v21);
      uint64_t v23 = 1 << (v18 & v19);
      if ((v23 & v22) != 0)
      {
        while (1)
        {
          uint64_t v24 = v13;
          v37(v7, *(void *)(v11 + 48) + v20 * v16, v2);
          sub_1E0E4E018(&qword_1EAD6EBC0, MEMORY[0x1E4F27C88]);
          char v25 = sub_1E0ECD100();
          BOOL v26 = *v17;
          (*v17)(v7, v2);
          if (v25) {
            break;
          }
          unint64_t v20 = (v20 + 1) & v19;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v38 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          uint64_t v13 = v24;
          if ((v22 & (1 << v20)) == 0) {
            goto LABEL_8;
          }
        }
        v26(v39, v2);
        uint64_t v13 = v24;
      }
      else
      {
LABEL_8:
        uint64_t v27 = v39;
        *(void *)(v38 + 8 * v21) = v23 | v22;
        uint64_t result = (*v33)(*(void *)(v11 + 48) + v20 * v16, v27, v2);
        uint64_t v29 = *(void *)(v11 + 16);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30)
        {
          __break(1u);
          return result;
        }
        *(void *)(v11 + 16) = v31;
      }
      uint64_t v12 = v36 + 1;
      if (v36 + 1 == v34) {
        return v11;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1E0E4D078(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, char *a4, char *a5, char *a6)
{
  v123 = a5;
  v124 = a6;
  v115 = a4;
  v116 = a1;
  uint64_t v121 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_1E0ECBB40();
  v120 = *(void **)(v10 - 8);
  uint64_t v11 = v120;
  MEMORY[0x1F4188790](v10, v12);
  v107 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E4DD00(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  v106 = (char *)&v91 - v16;
  uint64_t v17 = sub_1E0ECB980();
  uint64_t v94 = v17;
  uint64_t v119 = *(void *)(v17 - 8);
  uint64_t v18 = v119;
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  v92 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20, v22);
  v112 = (char *)&v91 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23, v25);
  v111 = (char *)&v91 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26, v28);
  v110 = (char *)&v91 - v30;
  MEMORY[0x1F4188790](v29, v31);
  v118 = (char *)&v91 - v32;
  uint64_t v117 = sub_1E0ECB460();
  uint64_t v122 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117, v33);
  uint64_t v35 = (char *)&v91 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v6[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_cellProvider + 8] = 0;
  uint64_t v36 = swift_unknownObjectWeakInit();
  v6[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_includeSpacerCellsFromFirstWeekday] = 1;
  *(void *)(v36 + 8) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v37 = &v6[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_calendar];
  uint64_t v38 = sub_1E0ECBB60();
  uint64_t v113 = *(void *)(v38 - 8);
  uint64_t v114 = v38;
  (*(void (**)(char *, uint64_t))(v113 + 16))(v37, a3);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v108 = v18 + 16;
  v116 = v39;
  v39(&v6[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startDate], (uint64_t)a5, v17);
  sub_1E0E4DD00(0, &qword_1EAD6EB60, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v40 = v11[9];
  uint64_t v41 = v120;
  uint64_t v42 = *((unsigned __int8 *)v120 + 80);
  uint64_t v43 = (v42 + 32) & ~v42;
  uint64_t v103 = v44;
  uint64_t v102 = v43 + 3 * v40;
  uint64_t v101 = v42 | 7;
  uint64_t v45 = swift_allocObject();
  long long v98 = xmmword_1E0F08070;
  *(_OWORD *)(v45 + 16) = xmmword_1E0F08070;
  uint64_t v104 = v43;
  uint64_t v46 = (void (*)(uint64_t))v41[13];
  unsigned int v99 = *MEMORY[0x1E4F27C00];
  v46(v45 + v43);
  uint64_t v95 = v40;
  unsigned int v97 = *MEMORY[0x1E4F27C20];
  v46(v45 + v43 + v40);
  uint64_t v105 = 2 * v40;
  uint64_t v47 = *MEMORY[0x1E4F27C30];
  ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v45 + v43 + v105, v47, v10);
  uint64_t v48 = v6;
  sub_1E0E4CD64(v45);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v49 = v94;
  swift_deallocClassInstance();
  sub_1E0ECBAB0();
  uint64_t v50 = (uint64_t)v106;
  swift_bridgeObjectRelease();
  id v51 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
  v109 = v35;
  v122 += 32;
  v100 = v51;
  v51(&v48[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_startComponents], v35, v117);
  uint64_t v52 = v107;
  unsigned int v96 = v47;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v107, v47, v10);
  sub_1E0ECBB30();
  uint64_t v53 = (void (*)(char *, uint64_t))v120[1];
  v107 = (char *)v10;
  v53(v52, v10);
  uint64_t v54 = v119;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v50, 1, v49) == 1)
  {
    sub_1E0DF0AA0(v50);
    v116(v92, (uint64_t)v124, v49);
    uint64_t v127 = 0;
    unint64_t v128 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    uint64_t v127 = 0xD00000000000001ALL;
    unint64_t v128 = 0x80000001E0F2AC70;
    sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
    sub_1E0ECD9B0();
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1E0ECD8F0();
    __break(1u);
  }
  else
  {
    uint64_t v55 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v118, v50, v49);
    v120 = v48;
    uint64_t v56 = &v48[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_endDate];
    v116(&v48[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_endDate], (uint64_t)v55, v49);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v98;
    uint64_t v58 = v49;
    uint64_t v59 = v57 + v104;
    uint64_t v60 = v107;
    ((void (*)(uint64_t, void, char *))v46)(v57 + v104, v99, v107);
    ((void (*)(uint64_t, void, char *))v46)(v59 + v95, v97, v60);
    ((void (*)(uint64_t, void, char *))v46)(v59 + v105, v96, v60);
    sub_1E0E4CD64(v57);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    int v61 = v110;
    id v62 = v56;
    uint64_t v63 = (char *)v120;
    id v64 = v116;
    v116(v110, (uint64_t)v62, v58);
    uint64_t v65 = v109;
    uint64_t v66 = v121;
    sub_1E0ECBAB0();
    swift_bridgeObjectRelease();
    uint64_t v68 = *(char **)(v54 + 8);
    uint64_t v67 = v54 + 8;
    v110 = v68;
    ((void (*)(char *, uint64_t))v68)(v61, v58);
    v100(&v63[OBJC_IVAR____TtC8HealthUI22CalendarViewDataSource_endComponents], v65, v117);

    if (qword_1EAD6D4D0 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_1E0ECC010();
    __swift_project_value_buffer(v69, (uint64_t)qword_1EAD74120);
    unint64_t v70 = v111;
    v64(v111, (uint64_t)v123, v58);
    id v71 = v64;
    long long v72 = v112;
    v71(v112, (uint64_t)v124, v58);
    id v73 = sub_1E0ECBFF0();
    os_log_type_t v74 = sub_1E0ECD510();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v122 = swift_slowAlloc();
      uint64_t v127 = v122;
      *(_DWORD *)uint64_t v75 = 136446722;
      uint64_t v76 = sub_1E0ECDBC0();
      uint64_t v125 = sub_1E0DED7E4(v76, v77, &v127);
      uint64_t v119 = v67;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2080;
      sub_1E0E4E018((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
      uint64_t v78 = sub_1E0ECD9B0();
      uint64_t v125 = sub_1E0DED7E4(v78, v79, &v127);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      v80 = v70;
      v81 = (void (*)(char *, uint64_t))v110;
      ((void (*)(char *, uint64_t))v110)(v80, v58);
      *(_WORD *)(v75 + 22) = 2080;
      uint64_t v82 = sub_1E0ECD9B0();
      uint64_t v125 = sub_1E0DED7E4(v82, v83, &v127);
      uint64_t v63 = (char *)v120;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      v81(v72, v58);
      _os_log_impl(&dword_1E0B26000, v73, v74, "[%{public}s] Created in range %s to %s", (uint8_t *)v75, 0x20u);
      uint64_t v84 = v122;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v84, -1, -1);
      uint64_t v85 = v75;
      uint64_t v66 = v121;
      MEMORY[0x1E4E41080](v85, -1, -1);
    }
    else
    {
      v86 = v70;
      v81 = (void (*)(char *, uint64_t))v110;
      ((void (*)(char *, uint64_t))v110)(v86, v58);
      v81(v72, v58);
    }

    v87 = v118;
    v88 = (objc_class *)type metadata accessor for CalendarViewDataSource();
    v126.receiver = v63;
    v126.super_class = v88;
    id v89 = objc_msgSendSuper2(&v126, sel_init);
    v81(v124, v58);
    v81(v123, v58);
    v81(v115, v58);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v66, v114);
    v81(v87, v58);
    return (uint64_t)v89;
  }
  return result;
}

uint64_t type metadata accessor for CalendarViewDataSource()
{
  uint64_t result = qword_1EAD6EB98;
  if (!qword_1EAD6EB98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E0E4DD00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E4DD64()
{
  return type metadata accessor for CalendarViewDataSource();
}

uint64_t sub_1E0E4DD6C()
{
  uint64_t result = sub_1E0ECBB60();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1E0ECB980();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1E0ECB460();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for CalendarViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalendarViewDataSource);
}

uint64_t dispatch thunk of CalendarViewDataSource.__allocating_init(cellProvider:calendar:currentDate:startDate:endDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of CalendarViewDataSourceCellProvider.calendarDataSource(_:cellForItemIn:date:dayComponent:indexPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of CalendarViewDataSourceCellProvider.calendarDataSource(_:spacerCellForItemIn:indexPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of CalendarViewDataSourceCellProvider.calendarDataSource(_:headerForSectionIn:date:startOfMonthWeekday:indexPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

void sub_1E0E4DEF0()
{
  if (!qword_1EAD6EBB0)
  {
    sub_1E0ECBB40();
    sub_1E0E4E018(&qword_1EAD6EBB8, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1E0ECD7F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EBB0);
    }
  }
}

void sub_1E0E4DF84()
{
  if (!qword_1EAD6EBC8)
  {
    sub_1E0ECDB30();
    sub_1E0E4E018(&qword_1EAD6EBD0, MEMORY[0x1E4F281B0]);
    unint64_t v0 = sub_1E0ECD7F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EBC8);
    }
  }
}

uint64_t sub_1E0E4E018(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0E4E060(uint64_t a1)
{
  return sub_1E0E4E10C(a1, qword_1EAD74120);
}

uint64_t sub_1E0E4E080(uint64_t a1)
{
  return sub_1E0E4E10C(a1, qword_1EAD74098);
}

uint64_t sub_1E0E4E0A4(uint64_t a1)
{
  return sub_1E0E4E10C(a1, qword_1EAD74138);
}

uint64_t sub_1E0E4E0C0(uint64_t a1)
{
  return sub_1E0E4E10C(a1, qword_1EAD74150);
}

uint64_t sub_1E0E4E0E0(uint64_t a1)
{
  return sub_1E0E4E10C(a1, qword_1EAD74168);
}

uint64_t sub_1E0E4E10C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1E0ECC010();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1E0ECC000();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1E0E4E1E8(uint64_t a1)
{
  return sub_1E0E4E240(a1, (uint64_t (*)(void))sub_1E0E0BD40, (uint64_t (*)(void))sub_1E0E0B978);
}

uint64_t sub_1E0E4E214(uint64_t a1)
{
  return sub_1E0E4E240(a1, (uint64_t (*)(void))sub_1E0E0BFC0, MEMORY[0x1E4F65968]);
}

uint64_t sub_1E0E4E240(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E4E3FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1E0E0BC04(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E4E544(unint64_t a1)
{
  return sub_1E0E4E788(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1E0E65168);
}

uint64_t sub_1E0E4E55C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    uint64_t v5 = v20 + v3;
    if (!__OFADD__(v20, v3)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5) {
    uint64_t v10 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x1E4E3EF10](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v1 = v11;
  uint64_t v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = (*(void *)(v9 + 24) >> 1) - v12;
  uint64_t result = sub_1E0E653B0(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1E0E50300(0, &qword_1EAD6EF30, (unint64_t *)&unk_1EAD6F520, 0x1E4FB1EC0, MEMORY[0x1E4FBB320]);
    goto LABEL_20;
  }
  uint64_t v16 = v15;
  if (v15 >= 1)
  {
    uint64_t v17 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  swift_bridgeObjectRelease();
  if (v16 == v13) {
    goto LABEL_28;
  }
LABEL_20:
  return sub_1E0ECD340();
}

uint64_t sub_1E0E4E770(unint64_t a1)
{
  return sub_1E0E4E788(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1E0E6560C);
}

uint64_t sub_1E0E4E788(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1E4E3EF10](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1E0ECD340();
}

uint64_t sub_1E0E4E95C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1E4E3EF10](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1E0E65AB0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1E0ECD340();
}

double UIViewController.adaptiveReparentingManager.getter@<D0>(uint64_t a1@<X8>)
{
  if (!objc_msgSend(v1, sel_splitViewController)
    || (sub_1E0DF2C04(0, &qword_1EAD6EBE0), sub_1E0E4EBBC(), (swift_dynamicCast() & 1) == 0))
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1E0E4EBBC()
{
  unint64_t result = qword_1EAD6EBE8;
  if (!qword_1EAD6EBE8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6EBE8);
  }
  return result;
}

void UIViewController.showAdaptivelyIfPossible(_:sender:)(void *a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v29 = &unk_1F3C94A98;
  uint64_t v5 = swift_dynamicCastObjCProtocolConditional();
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1E0B32F68(a2, (uint64_t)v26);
    uint64_t v7 = v27;
    if (v27)
    {
      uint64_t v8 = __swift_project_boxed_opaque_existential_0(v26, v27);
      uint64_t v9 = *(void *)(v7 - 8);
      MEMORY[0x1F4188790](v8, v8);
      uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v9 + 16))(v11);
      id v12 = a1;
      uint64_t v13 = sub_1E0ECD9D0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
    }
    else
    {
      id v16 = a1;
      uint64_t v13 = 0;
    }
    objc_msgSend(v2, sel_showAdaptively_sender_, v6, v13);

    swift_unknownObjectRelease();
  }
  else
  {
    id v14 = objc_msgSend(v2, sel_navigationController);
    if (v14)
    {
      id v15 = v14;
      objc_msgSend(v14, sel_pushViewController_animated_, a1, 1);
    }
    else
    {
      if (qword_1EAD6D4D0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1E0ECC010();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EAD74120);
      id v15 = v2;
      BOOL v18 = sub_1E0ECBFF0();
      os_log_type_t v19 = sub_1E0ECD520();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        v26[0] = v21;
        *(_DWORD *)uint64_t v20 = 136315394;
        uint64_t v22 = sub_1E0ECDBC0();
        id v28 = (id)sub_1E0DED7E4(v22, v23, v26);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        id v28 = objc_msgSend(v15, sel_navigationController, v26[0]);
        sub_1E0E50300(0, &qword_1EAD6EBF0, &qword_1EAD6EBF8, 0x1E4FB19E8, MEMORY[0x1E4FBB718]);
        uint64_t v24 = sub_1E0ECD200();
        id v28 = (id)sub_1E0DED7E4(v24, v25, v26);
        sub_1E0ECD6D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1E0B26000, v18, v19, "[%s]: Unable to show adaptively or fallback. Navigation controller=%s", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v21, -1, -1);
        MEMORY[0x1E4E41080](v20, -1, -1);

        return;
      }
    }
  }
}

Swift::Void __swiftcall HKNavigationController.reparentViewControllerIfNecessary(traitCollection:previousTraitCollection:)(UITraitCollection traitCollection, UITraitCollection_optional previousTraitCollection)
{
  Class isa = previousTraitCollection.value.super.isa;
  if (previousTraitCollection.value.super.isa) {
    id v4 = [(objc_class *)previousTraitCollection.value.super.isa horizontalSizeClass];
  }
  else {
    id v4 = 0;
  }
  id v5 = [(objc_class *)traitCollection.super.isa horizontalSizeClass];
  if (isa && v4 == v5) {
    return;
  }
  if (isa)
  {
    id v6 = [(objc_class *)isa horizontalSizeClass];
    id v7 = [(objc_class *)traitCollection.super.isa horizontalSizeClass];
    if (v6 != (id)2)
    {
      if (v6 != (id)1) {
        return;
      }
      goto LABEL_12;
    }
    if (v7 != (id)1) {
      return;
    }
  }
  else
  {
    id v7 = [(objc_class *)traitCollection.super.isa horizontalSizeClass];
    if (v7 != (id)1)
    {
LABEL_12:
      if (v7 == (id)2)
      {
        HKNavigationController.reparentPushToModalIfPossible()();
      }
      return;
    }
  }
  HKNavigationController.reparentModalToPushIfPossible()();
}

Swift::Void __swiftcall HKNavigationController.reparentPushToModalIfPossible()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_splitViewController);
  if (!v2 || (v36[0] = v2, sub_1E0DF2C04(0, &qword_1EAD6EBE0), sub_1E0E4EBBC(), (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    goto LABEL_19;
  }
  if (!*((void *)&v34 + 1))
  {
LABEL_19:
    sub_1E0E501A0((uint64_t)&v33);
    return;
  }
  sub_1E0E50254(&v33, (uint64_t)v36);
  uint64_t v3 = v37;
  uint64_t v4 = v38;
  __swift_project_boxed_opaque_existential_0(v36, v37);
  if (((*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 8))(v0, v3, v4) & 1) == 0) {
    goto LABEL_49;
  }
  id v5 = objc_msgSend(v0, sel_presentedViewController);

  if (v5) {
    goto LABEL_49;
  }
  id v6 = objc_msgSend(v1, sel_view);
  if (!v6) {
    goto LABEL_51;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v6, sel_window);

  if (!v8)
  {
LABEL_49:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    return;
  }
  id v9 = objc_msgSend(v1, sel_viewControllers);
  unint64_t v10 = sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F520);
  unint64_t v11 = sub_1E0ECD330();

  if (v11 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
LABEL_10:
  uint64_t v13 = 0;
  id v14 = &selRef_lineSeriesPresentationStyle;
  while (1)
  {
    id v15 = (v11 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1E4E3EF00](v13, v11)
        : *(id *)(v11 + 8 * v13 + 32);
    uint64_t v16 = (uint64_t)v15;
    if (swift_dynamicCastObjCProtocolConditional()) {
      break;
    }

    uint64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    ++v13;
    if (v17 == v12) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();

  id v18 = objc_msgSend(v1, sel_viewControllers);
  uint64_t v19 = sub_1E0ECD330();

  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (id)MEMORY[0x1E4E3EF00](v13, v19);
  }
  else
  {
    if ((unint64_t)v13 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    id v20 = *(id *)(v19 + 8 * v13 + 32);
  }
  id v18 = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_dynamicCastObjCProtocolConditional();
  if (!v21)
  {

    goto LABEL_49;
  }
  uint64_t v19 = v21;
  id v14 = (char **)(v13 - 1);
  id v22 = objc_msgSend(v1, sel_viewControllers);
  uint64_t v16 = sub_1E0ECD330();

  if ((v16 & 0xC000000000000001) == 0)
  {
    if (v13 < 1)
    {
      __break(1u);
    }
    else if ((unint64_t)v14 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v23 = *(id *)(v16 + 8 * v13 + 24);
      goto LABEL_28;
    }
    __break(1u);
    goto LABEL_46;
  }
LABEL_43:
  id v23 = (id)MEMORY[0x1E4E3EF00](v14, v16);
LABEL_28:
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)HKNavigationController), sel_init);
  id v25 = objc_msgSend(v1, sel_popToViewController_animated_, v24, 0);
  if (!v25)
  {
LABEL_48:
    objc_msgSend((id)v19, sel_viewControllerWillEnterAdaptiveModal);
    id v31 = (id)v16;
    objc_msgSend(v31, sel_setModalPresentationStyle_, objc_msgSend((id)v19, sel_modalPresentationStyle));

    objc_msgSend(v1, sel_presentViewController_animated_completion_, v31, 0, 0);
    goto LABEL_49;
  }
  uint64_t v26 = v25;
  unint64_t v10 = sub_1E0ECD330();

  uint64_t v32 = v24;
  if (v10 >> 62)
  {
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1E0ECD910();
    if (v27) {
      goto LABEL_31;
    }
LABEL_47:
    swift_bridgeObjectRelease_n();
    uint64_t v24 = v32;
    goto LABEL_48;
  }
  uint64_t v27 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_47;
  }
LABEL_31:
  if (v27 >= 1)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v29 = (id)MEMORY[0x1E4E3EF00](i, v10);
      }
      else {
        id v29 = *(id *)(v10 + 8 * i + 32);
      }
      uint64_t v30 = v29;
      objc_msgSend((id)v16, sel_pushViewController_animated_, v29, 0);
    }
    goto LABEL_47;
  }
  __break(1u);
LABEL_51:
  __break(1u);
}

Swift::Void __swiftcall HKNavigationController.reparentModalToPushIfPossible()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_presentedViewController);
  if (!v2) {
    return;
  }
  id v31 = v2;
  id v3 = objc_msgSend(v2, sel_presentedViewController);

  if (!v3)
  {
    id v4 = objc_msgSend(v1, sel_splitViewController);
    if (v4 && (id v32 = v4, sub_1E0DF2C04(0, &qword_1EAD6EBE0), sub_1E0E4EBBC(), (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v34 + 1))
      {
        sub_1E0E50254(&v33, (uint64_t)v36);
        uint64_t v5 = v37;
        uint64_t v6 = v38;
        __swift_project_boxed_opaque_existential_0(v36, v37);
        if (((*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 8))(v1, v5, v6) & 1) == 0)
        {

          goto LABEL_56;
        }
        *(void *)&long long v33 = MEMORY[0x1E4FBC860];
        if (swift_dynamicCastObjCProtocolConditional())
        {
          id v7 = v31;
          MEMORY[0x1E4E3E9E0]();
          if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1E0ECD350();
          }
          sub_1E0ECD370();
          sub_1E0ECD340();
          goto LABEL_14;
        }
        self;
        uint64_t v15 = swift_dynamicCastObjCClass();
        if (v15)
        {
          uint64_t v16 = (void *)v15;
          id v17 = v31;
          id v18 = objc_msgSend(v16, sel_viewControllers);
          sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F520);
          unint64_t v19 = sub_1E0ECD330();

          if (v19 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v30 = sub_1E0ECD910();
            swift_bridgeObjectRelease();
            if (v30) {
              goto LABEL_32;
            }
          }
          else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_32:
            if ((v19 & 0xC000000000000001) != 0)
            {
              id v20 = (id)MEMORY[0x1E4E3EF00](0, v19);
            }
            else
            {
              if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_59;
              }
              id v20 = *(id *)(v19 + 32);
            }
            uint64_t v21 = v20;
            swift_bridgeObjectRelease();
            uint64_t v22 = swift_dynamicCastObjCProtocolConditional();

            if (v22)
            {
              id v23 = objc_msgSend(v16, sel_viewControllers);
              unint64_t v24 = sub_1E0ECD330();

              sub_1E0E4E55C(v24);
            }

            goto LABEL_14;
          }

          swift_bridgeObjectRelease();
        }
LABEL_14:
        uint64_t v8 = v33;
        unint64_t v9 = (unint64_t)v33 >> 62;
        if ((unint64_t)v33 >> 62) {
          goto LABEL_41;
        }
        unint64_t v10 = v31;
        if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          objc_msgSend(v31, sel_dismissViewControllerAnimated_completion_, 0, 0);
          unint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v11)
          {
            while (!__OFSUB__(v11--, 1))
            {
              if ((v8 & 0xC000000000000001) != 0)
              {
                id v12 = (id)MEMORY[0x1E4E3EF00](v11, v8);
LABEL_19:
                uint64_t v13 = v12;
                id v32 = v12;
                sub_1E0E4FBDC(&v32);

                if (!v11) {
                  goto LABEL_43;
                }
              }
              else
              {
                if ((v11 & 0x8000000000000000) != 0) {
                  goto LABEL_39;
                }
                if (v11 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  id v12 = *(id *)(v8 + 32 + 8 * v11);
                  goto LABEL_19;
                }
LABEL_40:
                __break(1u);
LABEL_41:
                swift_bridgeObjectRetain();
                uint64_t v25 = sub_1E0ECD910();
                swift_bridgeObjectRelease();
                unint64_t v10 = v31;
                if (!v25) {
                  goto LABEL_51;
                }
                objc_msgSend(v31, sel_dismissViewControllerAnimated_completion_, 0, 0);
                swift_bridgeObjectRetain_n();
                unint64_t v11 = sub_1E0ECD910();
                if (!v11) {
                  goto LABEL_43;
                }
              }
            }
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
LABEL_43:
          swift_bridgeObjectRelease_n();
          if (v9)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v26 = sub_1E0ECD910();
            if (v26)
            {
LABEL_45:
              if (v26 >= 1)
              {
                for (uint64_t i = 0; i != v26; ++i)
                {
                  if ((v8 & 0xC000000000000001) != 0) {
                    id v28 = (id)MEMORY[0x1E4E3EF00](i, v8);
                  }
                  else {
                    id v28 = *(id *)(v8 + 8 * i + 32);
                  }
                  id v29 = v28;
                  objc_msgSend(v1, sel_pushViewController_animated_, v28, 0);
                }
                goto LABEL_55;
              }
LABEL_59:
              __break(1u);
              return;
            }
          }
          else
          {
            uint64_t v26 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (v26) {
              goto LABEL_45;
            }
          }
LABEL_55:

          swift_bridgeObjectRelease_n();
          goto LABEL_56;
        }
LABEL_51:

        swift_bridgeObjectRelease();
LABEL_56:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
        return;
      }
    }
    else
    {
      uint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
    }

    sub_1E0E501A0((uint64_t)&v33);
    return;
  }
}

void sub_1E0E4FBDC(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(*a1, sel_navigationController);
  if (!v2) {
    goto LABEL_12;
  }
  id v3 = v2;
  id v4 = objc_msgSend(v2, sel_topViewController);
  if (!v4) {
    goto LABEL_11;
  }
  uint64_t v5 = v4;
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F520);
  id v6 = v1;
  id v7 = v5;
  char v8 = sub_1E0ECD6A0();

  if ((v8 & 1) == 0)
  {
LABEL_11:

LABEL_12:
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 0, 0);
    goto LABEL_13;
  }
  id v9 = objc_msgSend(v3, sel_viewControllers);
  unint64_t v10 = sub_1E0ECD330();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_6:
      if ((v10 & 0xC000000000000001) != 0)
      {
        id v11 = (id)MEMORY[0x1E4E3EF00](0, v10);
      }
      else
      {
        if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v11 = *(id *)(v10 + 32);
      }
      id v12 = v11;
      swift_bridgeObjectRelease();
      id v13 = v6;
      id v14 = v12;
      LOBYTE(v12) = sub_1E0ECD6A0();

      if (v12)
      {
        uint64_t v15 = (void *)sub_1E0ECD320();
        objc_msgSend(v3, sel_setViewControllers_animated_, v15, 0);

        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_18:

LABEL_13:
  uint64_t v16 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v16) {
    objc_msgSend(v16, sel_viewControllerDidLeaveAdaptiveModal);
  }
}

uint64_t (*sub_1E0E4FE24(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E0E50010(v6, a2, a3);
  return sub_1E0E4FE8C;
}

uint64_t (*sub_1E0E4FE90(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E0E50098(v6, a2, a3);
  return sub_1E0E4FE8C;
}

uint64_t (*sub_1E0E4FEF8(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E0E50120(v6, a2, a3);
  return sub_1E0E4FE8C;
}

uint64_t (*sub_1E0E4FF60(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1E0E50280(v6, a2, a3);
  return sub_1E0E4FE8C;
}

void sub_1E0E4FFC8(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1E0E50010(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E4E3EF00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_1E0E50090;
  }
  __break(1u);
  return result;
}

void sub_1E0E50090(id *a1)
{
}

uint64_t (*sub_1E0E50098(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1E4E3EF00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *id v3 = v4;
    return sub_1E0E50118;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E50118()
{
  return swift_unknownObjectRelease();
}

void (*sub_1E0E50120(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E4E3EF00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_1E0E50368;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E501A0(uint64_t a1)
{
  sub_1E0E501FC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1E0E501FC()
{
  if (!qword_1EAD6EC00)
  {
    sub_1E0E4EBBC();
    unint64_t v0 = sub_1E0ECD6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EC00);
    }
  }
}

uint64_t sub_1E0E50254(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t dispatch thunk of HKAdaptiveReparentingManager.shouldReparent(viewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t (*sub_1E0E50280(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  long long v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1E4E3EF00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *long long v3 = v4;
    return sub_1E0E5036C;
  }
  __break(1u);
  return result;
}

void sub_1E0E50300(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1E0DF2C04(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

id sub_1E0E50370(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return (id)v2;
  }
  uint64_t v3 = a1;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1E0DEEAC4(0, v1, 0);
  uint64_t v2 = v28;
  id result = (id)sub_1E0E5153C(v3);
  uint64_t v6 = (uint64_t)result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v23 = v3 + 80;
  int64_t v24 = v1;
  int v25 = v5;
  uint64_t v26 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    double v12 = *(double *)(*(void *)(v3 + 56) + 8 * v6);
    id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, *(void *)(*(void *)(v3 + 48) + 8 * v6));
    id result = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v12);
    id v13 = result;
    uint64_t v14 = v3;
    unint64_t v16 = *(void *)(v28 + 16);
    unint64_t v15 = *(void *)(v28 + 24);
    if (v16 >= v15 >> 1) {
      id result = (id)sub_1E0DEEAC4(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v28 + 16) = v16 + 1;
    uint64_t v17 = v28 + 16 * v16;
    *(void *)(v17 + 32) = v27;
    *(void *)(v17 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(v14 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v26;
    uint64_t v18 = *(void *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v14;
    int v5 = v25;
    if (*(_DWORD *)(v14 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(v23 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return (id)v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

double CLKDevice.scaledValue(_:overrides:)(uint64_t a1, double a2)
{
  return sub_1E0E50688(a1, (SEL *)&selRef_scaledValue_withOverrides_, a2);
}

void sub_1E0E505CC()
{
  if (!qword_1EAD6EDC0)
  {
    sub_1E0DF0BE0();
    sub_1E0E51664((unint64_t *)&qword_1EAD6DC60, (void (*)(uint64_t))sub_1E0DF0BE0);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EDC0);
    }
  }
}

double CLKDevice.scaledValueFromPixels(_:overrides:)(uint64_t a1)
{
  return sub_1E0E50818(a1, (double (*)(void))CLKDevice.scaledValue(_:overrides:));
}

double CLKDevice.constantValue(_:overrides:)(uint64_t a1, double a2)
{
  return sub_1E0E50688(a1, (SEL *)&selRef_constantValue_withOverrides_, a2);
}

double sub_1E0E50688(uint64_t a1, SEL *a2, double a3)
{
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F19A40]), sel_initWithDevice_identitySizeClass_, v3, 2);
  if (*((void *)sub_1E0E50370(a1) + 2))
  {
    sub_1E0E505CC();
    uint64_t v8 = sub_1E0ECD940();
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC868];
  }
  uint64_t v14 = v8;
  int64_t v9 = (void *)swift_bridgeObjectRetain();
  sub_1E0E511BC(v9, 1, &v14);
  swift_bridgeObjectRelease();
  sub_1E0DF0BE0();
  sub_1E0E51664((unint64_t *)&qword_1EAD6DC60, (void (*)(uint64_t))sub_1E0DF0BE0);
  int64_t v10 = (void *)sub_1E0ECCFC0();
  swift_release();
  objc_msgSend(v7, *a2, v10, a3);
  double v12 = v11;

  return v12;
}

double CLKDevice.constantValueFromPixels(_:overrides:)(uint64_t a1)
{
  return sub_1E0E50818(a1, (double (*)(void))CLKDevice.constantValue(_:overrides:));
}

double sub_1E0E50818(uint64_t a1, double (*a2)(void))
{
  double v3 = a2();
  objc_msgSend(v2, sel_screenScale);
  return v3 / v4;
}

uint64_t CLKDevice.specificValue<A>(_:overrides:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = v4;
  uint64_t v10 = sub_1E0ECD6C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v20 - v13;
  id v21 = objc_msgSend(v5, sel_sizeClass);
  type metadata accessor for CLKDeviceSizeClass(0);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1E0E51664(&qword_1EAD6EC08, type metadata accessor for CLKDeviceSizeClass);
  MEMORY[0x1E4E3E700](&v21, a2, v16, a3, v17);
  uint64_t v18 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, a3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a4, v14, a3);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a4, a1, a3);
}

uint64_t CLKDevice.deviceValue<A>(_:overrides:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = v4;
  uint64_t v10 = sub_1E0ECD6C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v20 - v13;
  id v21 = objc_msgSend(v5, sel_productFamilyType);
  type metadata accessor for CLKDeviceProductFamilyType(0);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1E0E51664(&qword_1EAD6EC10, type metadata accessor for CLKDeviceProductFamilyType);
  MEMORY[0x1E4E3E700](&v21, a2, v16, a3, v17);
  uint64_t v18 = *(void *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, a3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a4, v14, a3);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a4, a1, a3);
}

uint64_t CLKDevice.deviceValue<A>(_:overrides:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  int v5 = v4;
  uint64_t v57 = a4;
  uint64_t v58 = a1;
  uint64_t v8 = sub_1E0ECD6C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v11, v14);
  uint64_t v17 = (char *)&v53 - v16;
  uint64_t v18 = *(void *)(a3 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v15, v19);
  unint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23);
  id v62 = (char *)&v53 - v24;
  int v25 = objc_msgSend(v5, sel_productFamilyType);
  id v64 = v25;
  type metadata accessor for CLKDeviceProductFamilyType(0);
  uint64_t v27 = v26;
  uint64_t v55 = sub_1E0E51664(&qword_1EAD6EC10, type metadata accessor for CLKDeviceProductFamilyType);
  uint64_t v56 = v27;
  MEMORY[0x1E4E3E700](&v64, a2, v27, a3);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v28(v17, 1, a3) == 1)
  {
    int v61 = v28;
    id v62 = (char *)(v18 + 48);
    uint64_t v54 = v18;
    uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v29 = v9 + 8;
    uint64_t v59 = v30;
    v30(v17, v8);
    id v64 = v58;
    uint64_t v32 = v55;
    uint64_t v31 = v56;
    sub_1E0ECCFF0();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1E0E51664(&qword_1EAD6EC18, type metadata accessor for CLKDeviceProductFamilyType);
    uint64_t v63 = sub_1E0ECD2C0();
    sub_1E0E515C4();
    swift_getWitnessTable();
    sub_1E0ECD090();
    uint64_t result = (uint64_t)v64;
    uint64_t v34 = v64[2];
    uint64_t v35 = v58;
    if (v34)
    {
      uint64_t v36 = v31;
      uint64_t v37 = v32;
      uint64_t v38 = v34 + 3;
      uint64_t v53 = v22;
      uint64_t WitnessTable = (uint64_t)v64;
      while ((unint64_t)(v38 - 4) < *(void *)(result + 16))
      {
        uint64_t v39 = *(void *)(result + 8 * v38);
        if (v25 == (void *)-1 || (v39 != -1 ? (BOOL v40 = (uint64_t)v25 < v39) : (BOOL v40 = 1), !v40))
        {
          uint64_t v41 = v25;
          uint64_t v42 = v29;
          id v64 = *(void **)(result + 8 * v38);
          uint64_t v43 = v35;
          uint64_t v44 = v36;
          uint64_t v45 = v37;
          MEMORY[0x1E4E3E700](&v64);
          if (v61(v13, 1, a3) != 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v49 = v53;
            uint64_t v50 = v54;
            id v51 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
            v51(v53, v13, a3);
            uint64_t v52 = v57;
            v51(v57, v49, a3);
            return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v52, 0, 1, a3);
          }
          v59(v13, v8);
          uint64_t v35 = v43;
          uint64_t v29 = v42;
          uint64_t v36 = v44;
          uint64_t v37 = v45;
          int v25 = v41;
          uint64_t result = WitnessTable;
        }
        if (--v38 == 3) {
          goto LABEL_16;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v57, 1, 1, a3);
    }
  }
  else
  {
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v47 = v62;
    v46(v62, v17, a3);
    uint64_t v48 = v57;
    v46(v57, v47, a3);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, a3);
  }
  return result;
}

BOOL static CLKDeviceProductFamilyType.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a2 == -1 || a1 < a2;
  return a1 != -1 && v3;
}

BOOL sub_1E0E5111C(void *a1, void *a2)
{
  if (*a1 == -1) {
    return 0;
  }
  return *a2 == -1 || *a1 < *a2;
}

BOOL sub_1E0E51144(void *a1, void *a2)
{
  if (*a2 == -1) {
    return 1;
  }
  return *a1 != -1 && *a2 >= *a1;
}

BOOL sub_1E0E5116C(void *a1, void *a2)
{
  if (*a1 == -1) {
    return 1;
  }
  return *a2 != -1 && *a1 >= *a2;
}

BOOL sub_1E0E51194(void *a1, void *a2)
{
  if (*a2 == -1) {
    return 0;
  }
  return *a1 == -1 || *a2 < *a1;
}

void sub_1E0E511BC(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v7 = (void *)a1[4];
  uint64_t v8 = (void *)a1[5];
  swift_bridgeObjectRetain();
  uint64_t v43 = v7;
  uint64_t v9 = (void *)*a3;
  id v10 = v7;
  id v11 = v8;
  unint64_t v13 = sub_1E0E5D8C8((uint64_t)v10);
  uint64_t v14 = v9[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_23;
  }
  char v17 = v12;
  if (v9[3] >= v16)
  {
    if (a2)
    {
      if (v12) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1E0E60524();
      if (v17) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    uint64_t v23 = 8 * v13;
    *(void *)(v22[6] + v23) = v10;
    *(void *)(v22[7] + v23) = v11;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v26;
    uint64_t v27 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v28 = (void **)(a1 + 7);
    while (1)
    {
      uint64_t v29 = *v28;
      uint64_t v43 = *(v28 - 1);
      uint64_t v30 = (void *)*a3;
      id v31 = v43;
      id v11 = v29;
      unint64_t v32 = sub_1E0E5D8C8((uint64_t)v31);
      uint64_t v34 = v30[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v25 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v25) {
        break;
      }
      char v37 = v33;
      if (v30[3] < v36)
      {
        sub_1E0E5E540(v36, 1);
        unint64_t v32 = sub_1E0E5D8C8((uint64_t)v31);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = 8 * v32;
      *(void *)(v39[6] + v40) = v31;
      *(void *)(v39[7] + v40) = v11;
      uint64_t v41 = v39[2];
      BOOL v25 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v25) {
        goto LABEL_24;
      }
      v39[2] = v42;
      v28 += 2;
      if (!--v27) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1E0E5E540(v16, a2 & 1);
  unint64_t v18 = sub_1E0E5D8C8((uint64_t)v10);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    sub_1E0DFCAE0();
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1E0DF0BE0();
  sub_1E0ECDA30();
  __break(1u);
LABEL_26:
  sub_1E0ECD800();
  sub_1E0ECD250();
  sub_1E0DF0BE0();
  sub_1E0ECD8C0();
  sub_1E0ECD250();
  sub_1E0ECD8F0();
  __break(1u);
}

uint64_t sub_1E0E5153C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1E0E515C4()
{
  if (!qword_1EAD6EC20)
  {
    type metadata accessor for CLKDeviceProductFamilyType(255);
    unint64_t v0 = sub_1E0ECD380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EC20);
    }
  }
}

uint64_t sub_1E0E5161C()
{
  return sub_1E0E51664(&qword_1EAD6D920, type metadata accessor for CLKDeviceProductFamilyType);
}

uint64_t sub_1E0E51664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id SleepApneaEventAxis.__allocating_init(displayType:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___HKSleepApneaEventAxis_displayType] = a1;
  id v4 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_init);
  unint64_t v7 = self;
  id v8 = v6;
  id v9 = objc_msgSend(v7, sel_preferredAxisStyle);
  objc_msgSend(v8, sel_setPreferredStyle_, v9);

  v12.receiver = v3;
  v12.super_class = v1;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithConfiguration_, v8);

  return v10;
}

id SleepApneaEventAxis.init(displayType:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___HKSleepApneaEventAxis_displayType] = a1;
  id v3 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_init);
  id v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_preferredAxisStyle);
  objc_msgSend(v7, sel_setPreferredStyle_, v8);

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SleepApneaEventAxis();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithConfiguration_, v7);

  return v9;
}

uint64_t type metadata accessor for SleepApneaEventAxis()
{
  return self;
}

id SleepApneaEventAxis.__allocating_init(configuration:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithConfiguration_, a1);

  return v3;
}

void SleepApneaEventAxis.init(configuration:)()
{
}

id SleepApneaEventAxis.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SleepApneaEventAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E51B0C(void *a1, double a2, double a3)
{
  uint64_t v21 = MEMORY[0x1E4FBC860];
  id v6 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v6, sel_setLabelType_, 1);
  id v7 = objc_msgSend(a1, sel_presentation);
  objc_msgSend(v7, sel_adjustedDoubleForDaemonDouble_, a2);

  id v8 = (void *)sub_1E0ECBD90();
  objc_msgSend(v6, sel_setLocation_, v8);

  id v9 = v6;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v10 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v10, sel_setLabelType_, 0);
  id v11 = objc_msgSend(a1, sel_presentation);
  objc_msgSend(v11, sel_adjustedDoubleForDaemonDouble_, (a3 - a2) * 0.5 + a2);

  objc_super v12 = (void *)sub_1E0ECBD90();
  objc_msgSend(v10, sel_setLocation_, v12);

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  uint64_t v14 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setText_, v14, 0xE000000000000000, 0, 0xE000000000000000);

  id v15 = v10;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v16 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v16, sel_setLabelType_, 1);
  id v17 = objc_msgSend(a1, sel_presentation);
  objc_msgSend(v17, sel_adjustedDoubleForDaemonDouble_, a3);

  unint64_t v18 = (void *)sub_1E0ECBD90();
  objc_msgSend(v16, sel_setLocation_, v18);

  id v19 = v16;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();

  return v21;
}

uint64_t sub_1E0E51EEC(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  id v4 = objc_msgSend(a1, sel_minValue);
  if (v4)
  {
    id v23 = v4;
    if (swift_dynamicCast())
    {
      id v5 = objc_msgSend(a1, sel_maxValue);
      if (v5)
      {
        id v23 = v5;
        if ((swift_dynamicCast() & 1) != 0
          && (~*(void *)&v21 & 0x7FF0000000000000) != 0
          && v21 - v21 > 0.0
          && (COERCE_UNSIGNED_INT64(v21 - v21) & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          return sub_1E0E51B0C(*(void **)(v2 + OBJC_IVAR___HKSleepApneaEventAxis_displayType), v21, v21);
        }
      }
    }
  }
  if (qword_1EAD6D4E0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1E0ECC010();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EAD74138);
  id v8 = a1;
  id v9 = sub_1E0ECBFF0();
  os_log_type_t v10 = sub_1E0ECD520();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    id v23 = (id)v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v13 = sub_1E0ECDBC0();
    uint64_t v22 = sub_1E0DED7E4(v13, v14, (uint64_t *)&v23);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    id v15 = v8;
    id v16 = objc_msgSend(v15, sel_description, v22, v23);
    uint64_t v17 = sub_1E0ECD1D0();
    unint64_t v19 = v18;

    sub_1E0DED7E4(v17, v19, (uint64_t *)&v23);
    sub_1E0ECD6D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v9, v10, "[%{public}s] Asked to create axis labels for incompatible range: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v12, -1, -1);
    MEMORY[0x1E4E41080](v11, -1, -1);
  }
  else
  {
  }
  return 0;
}

uint64_t method lookup function for SleepApneaEventAxis(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SleepApneaEventAxis);
}

uint64_t dispatch thunk of SleepApneaEventAxis.__allocating_init(displayType:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1E0E52230()
{
  unint64_t result = qword_1EAD6EF00;
  if (!qword_1EAD6EF00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6EF00);
  }
  return result;
}

id AudiogramChartDataFormatter.__allocating_init(displayType:unitController:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return AudiogramChartDataFormatter.init(displayType:unitController:)(a1, a2);
}

id AudiogramChartDataFormatter.init(displayType:unitController:)(void *a1, void *a2)
{
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AudiogramChartDataFormatter();
  id v5 = objc_msgSendSuper2(&v11, sel_init);
  id v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_hk_chartCurrentValueValueFont);
  objc_msgSend(v7, sel_setMajorFont_, v8);

  id v9 = objc_msgSend(v6, sel_hk_chartCurrentValueKindFont);
  objc_msgSend(v7, sel_setMinorFont_, v9);

  objc_msgSend(v7, sel_setUnitController_, a2);
  objc_msgSend(v7, sel_setDisplayType_, a1);

  return v7;
}

uint64_t type metadata accessor for AudiogramChartDataFormatter()
{
  return self;
}

uint64_t sub_1E0E523E8(void *a1, uint64_t a2)
{
  id v5 = objc_msgSend(self, sel_decibelHearingLevelUnit);
  id v6 = objc_msgSend(a1, sel_doubleValueForUnit_, v5);
  double v8 = v7;
  id v9 = (void *)MEMORY[0x1E4FBC8C8];
  id v10 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, (*(uint64_t (**)(id))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x60))(v6));
  switch(a2)
  {
    case 1:
      uint64_t v11 = (*(uint64_t (**)(void))((*v9 & *v2) + 0x50))();
LABEL_5:
      objc_msgSend(v10, sel_setDataType_, v11);
      id v12 = objc_msgSend(v2, sel_attributedStringWithValue_unit_showUnit_, v5, 1, v8);
      objc_msgSend(v10, sel_setAttributedString_, v12);

      uint64_t v13 = (void *)sub_1E0ECBD90();
      objc_msgSend(v10, sel_setValueAsNumber_, v13);

      return (uint64_t)v10;
    case 2:
      uint64_t v11 = (*(uint64_t (**)(void))((*v9 & *v2) + 0x58))();
      goto LABEL_5;
    case 0:
      sub_1E0ECD8F0();
      __break(1u);
      break;
  }
  type metadata accessor for HKAudiogramEar(0);
  uint64_t result = sub_1E0ECDA00();
  __break(1u);
  return result;
}

uint64_t sub_1E0E52620()
{
  return 7;
}

uint64_t sub_1E0E52628()
{
  return 8;
}

id AudiogramChartDataFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramChartDataFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AudiogramChartDataFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramChartDataFormatter);
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.leftEarDataType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.rightEarDataType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.statisticsType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.__allocating_init(displayType:unitController:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AudiogramChartDataFormatter.makeSelectedRangeData(sensitivityQuantity:ear:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

id sub_1E0E529A8()
{
  uint64_t v1 = OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle);
  }
  else
  {
    id v4 = sub_1E0E52A08();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1E0E52A08()
{
  sub_1E0DF2BA8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E0F093C0;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.431372549, 0.160784314, 1.0);
  objc_super v2 = (void *)sub_1E0ECBD90();
  id v3 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v1, v2);

  *(void *)(v0 + 32) = v3;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.431372549, 0.160784314, 1.0);
  id v5 = (void *)sub_1E0ECBD90();
  id v6 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v4, v5);

  *(void *)(v0 + 40) = v6;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.623529412, 0.0, 1.0);
  double v8 = (void *)sub_1E0ECBD90();
  id v9 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v7, v8);

  *(void *)(v0 + 48) = v9;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.57254902, 0.850980392, 0.0862745098, 1.0);
  uint64_t v11 = (void *)sub_1E0ECBD90();
  id v12 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v10, v11);

  *(void *)(v0 + 56) = v12;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.321568627, 0.8, 0.768627451, 1.0);
  unint64_t v14 = (void *)sub_1E0ECBD90();
  id v15 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v13, v14);

  *(void *)(v0 + 64) = v15;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.270588235, 0.545098039, 0.901960784, 1.0);
  uint64_t v17 = (void *)sub_1E0ECBD90();
  id v18 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v16, v17);

  *(void *)(v0 + 72) = v18;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.270588235, 0.403921569, 0.901960784, 1.0);
  uint64_t v20 = (void *)sub_1E0ECBD90();
  id v21 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v19, v20);

  *(void *)(v0 + 80) = v21;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.360784314, 0.239215686, 0.8, 1.0);
  id v23 = (void *)sub_1E0ECBD90();
  id v24 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v22, v23);

  *(void *)(v0 + 88) = v24;
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.360784314, 0.239215686, 0.8, 1.0);
  uint64_t v26 = (void *)sub_1E0ECBD90();
  id v27 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v25, v26);

  *(void *)(v0 + 96) = v27;
  sub_1E0ECD340();
  id v28 = objc_allocWithZone((Class)HKMultiGradientFillStyle);
  sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6EC60);
  uint64_t v29 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithColors_, v29);

  return v30;
}

id sub_1E0E52E80()
{
  uint64_t v1 = OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)HKSolidFillStyle), sel_init);
    uint64_t v5 = qword_1EAD6D4F8;
    id v6 = v4;
    if (v5 != -1) {
      swift_once();
    }
    objc_msgSend(v6, sel_setColor_, qword_1EAD6EC30);

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    objc_super v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id StateOfMindSeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id StateOfMindSeries.init()()
{
  *(void *)&v0[OBJC_IVAR___HKStateOfMindSeries____lazy_storage___gradientFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKStateOfMindSeries____lazy_storage___inactiveFillStyle] = 0;
  id v1 = v0;
  *(void *)&v1[OBJC_IVAR___HKStateOfMindSeries_fixedAxisLabels] = sub_1E0E54324();

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for StateOfMindSeries();
  id v2 = objc_msgSendSuper2(&v4, sel_init);
  objc_msgSend(v2, sel_setAdjustYAxisForLabels_, 0);
  return v2;
}

void sub_1E0E5308C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v61 = a4;
  *((void *)&v60 + 1) = a3;
  *(void *)&long long v60 = a2;
  swift_getObjectType();
  uint64_t v9 = sub_1E0ECC010();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  id v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1E0ECB980();
  unint64_t v14 = *(char ***)(v66 - 8);
  MEMORY[0x1F4188790](v66, v15);
  uint64_t v65 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a1, sel_chartPoints);
  if (v17
    && (id v18 = v17,
        sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0),
        unint64_t v19 = sub_1E0ECD330(),
        v18,
        unint64_t v20 = sub_1E0E45D20(v19),
        swift_bridgeObjectRelease(),
        v20))
  {
    id v64 = objc_msgSend(a5, sel_transform);
    id v63 = objc_msgSend(a6, sel_transform);
    uint64_t v74 = MEMORY[0x1E4FBC860];
    if (v20 >> 62)
    {
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1E0ECD910();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_5:
        unint64_t v22 = v20 & 0xC000000000000001;
        id v62 = (void (**)(uint64_t, uint64_t))(v14 + 1);
        uint64_t v23 = 4;
        unint64_t v14 = &selRef_isCurrentOnboardingVersionCompletedWithCompletion_;
        do
        {
          if (v22) {
            id v24 = (id)MEMORY[0x1E4E3EF00](v23 - 4, v20);
          }
          else {
            id v24 = *(id *)(v20 + 8 * v23);
          }
          id v25 = v24;
          uint64_t v26 = v23 - 3;
          if (__OFADD__(v23 - 4, 1))
          {
            __break(1u);
            goto LABEL_25;
          }
          if ([v24 v14[387]])
          {
            sub_1E0ECD760();
            swift_unknownObjectRelease();
            sub_1E0DEDF98(&v69, &v71);
            if (objc_msgSend(v25, sel_minYValue))
            {
              unint64_t v27 = v20;
              uint64_t v28 = v21;
              sub_1E0ECD760();
              swift_unknownObjectRelease();
              sub_1E0DEDF98(&v68, &v69);
              uint64_t v29 = v65;
              sub_1E0DEBA88(v65);
              id v30 = (void *)sub_1E0ECB920();
              (*v62)(v29, v66);
              objc_msgSend(v64, sel_coordinateForValue_, v30);
              uint64_t v32 = v31;

              __swift_project_boxed_opaque_existential_0(&v71, v73);
              uint64_t v33 = sub_1E0ECD9D0();
              id v34 = v63;
              objc_msgSend(v63, sel_coordinateForValue_, v33);
              uint64_t v36 = v35;
              swift_unknownObjectRelease();
              __swift_project_boxed_opaque_existential_0(&v69, v70);
              objc_msgSend(v34, sel_coordinateForValue_, sub_1E0ECD9D0());
              uint64_t v38 = v37;
              swift_unknownObjectRelease();
              sub_1E0E54718((uint64_t)v25, 2, v34);
              uint64_t v40 = v39;
              sub_1E0E54718((uint64_t)v25, 1, v34);
              uint64_t v42 = v41;
              id v43 = objc_msgSend(v25, sel_userInfo);
              if (!v43)
              {
                __break(1u);
LABEL_30:
                __break(1u);
                return;
              }
              id v44 = v43;
              uint64_t v45 = (objc_class *)type metadata accessor for StateOfMindCoordinate();
              uint64_t v46 = (char *)objc_allocWithZone(v45);
              *(void *)&v46[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue] = v32;
              *(void *)&v46[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_maxYValue] = v36;
              *(void *)&v46[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_minYValue] = v38;
              *(void *)&v46[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_dailyYValueRanges] = v40;
              *(void *)&v46[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges] = v42;
              *(void *)&v46[OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_userInfo] = v44;
              v67.receiver = v46;
              v67.super_class = v45;
              id v47 = objc_msgSendSuper2(&v67, sel_init);
              MEMORY[0x1E4E3E9E0]();
              if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1E0ECD350();
              }
              sub_1E0ECD370();
              sub_1E0ECD340();

              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v69);
              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v71);
              uint64_t v21 = v28;
              unint64_t v20 = v27;
              unint64_t v14 = &selRef_isCurrentOnboardingVersionCompletedWithCompletion_;
            }
            else
            {

              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v71);
            }
          }
          else
          {
          }
          ++v23;
        }
        while (v26 != v21);
      }
    }
  }
  else
  {
    sub_1E0ECBFE0();
    uint64_t v48 = sub_1E0ECBFF0();
    os_log_type_t v49 = sub_1E0ECD520();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(void *)&long long v71 = v51;
      *(_DWORD *)uint64_t v50 = 136446210;
      uint64_t v52 = sub_1E0ECDBC0();
      *(void *)&long long v69 = sub_1E0DED7E4(v52, v53, (uint64_t *)&v71);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v48, v49, "[%{public}s] Unable to create coordinates from unsupported chart points", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v51, -1, -1);
      MEMORY[0x1E4E41080](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    uint64_t v54 = (void *)sub_1E0ECD320();
    uint64_t v55 = self;
    long long v71 = v60;
    uint64_t v72 = v61;
    id v56 = objc_msgSend(v55, sel_coordinateListWithCoordinates_blockPath_, v54, &v71);

    if (v56) {
      return;
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
  swift_bridgeObjectRetain();
  uint64_t v57 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  uint64_t v58 = self;
  long long v71 = v60;
  uint64_t v72 = v61;
  id v59 = objc_msgSend(v58, sel_coordinateListWithCoordinates_blockPath_, v57, &v71);

  if (!v59) {
    goto LABEL_30;
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_1E0E53908(uint64_t result, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, void *a18)
{
  if (result)
  {
    type metadata accessor for StateOfMindCoordinate();
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v26 = result;
      double v27 = *(double *)(result + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue);
      swift_unknownObjectRetain();
      v41.origin.CGFloat x = a2;
      v41.origin.CGFloat y = a3;
      v41.size.CGFloat width = a4;
      v41.size.CGFloat height = a5;
      if (CGRectGetMinX(v41) <= v27)
      {
        v42.origin.CGFloat x = a2;
        v42.origin.CGFloat y = a3;
        v42.size.CGFloat width = a4;
        v42.size.CGFloat height = a5;
        if (v27 <= CGRectGetMaxX(v42))
        {
          id v37 = a18;
          uint64_t v39 = *(void *)(v26 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges);
          swift_bridgeObjectRetain();
          uint64_t v28 = swift_bridgeObjectRetain();
          sub_1E0E4E3FC(v28);
          uint64_t v38 = sub_1E0E71C80(v39, 8.0);
          uint64_t v29 = *(void *)(v38 + 16);
          if (v29)
          {
            id v30 = self;
            uint64_t v31 = (double *)(v38 + 40);
            do
            {
              id v32 = objc_msgSend(v30, sel_bezierPathWithRoundedRect_cornerRadius_, v27 - a6 * 0.5, *(v31 - 1) - a6 * 0.5, a6, a6 * 0.5 + *v31 - (*(v31 - 1) - a6 * 0.5), a6 * 0.5, v37);
              objc_msgSend(a15, sel_appendPath_, v32);

              v31 += 2;
              --v29;
            }
            while (v29);
          }
          swift_bridgeObjectRelease();
          if (a17)
          {
            uint64_t v33 = *(void *)(v39 + 16);
            uint64_t result = swift_bridgeObjectRelease();
            if (v33 == 1) {
              a8 = a7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
          }
          double v34 = *(double *)(v26 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_maxYValue);
          double v35 = *(double *)(v26 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_minYValue);
          if (v34 > v35)
          {
            __break(1u);
            return result;
          }
          id v36 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v27 - a8 * 0.5, v34 - a8 * 0.5, a8, a8 * 0.5 + v35 - (v34 - a8 * 0.5), a8 * 0.5);
          objc_msgSend(v37, sel_appendPath_, v36);
        }
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1E0E53F28()
{
  return swift_bridgeObjectRetain();
}

id sub_1E0E53FAC(void *a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18)
{
  id result = objc_msgSend(v18, sel_yAxis);
  if (result)
  {
    uint64_t v28 = result;
    __swift_project_boxed_opaque_existential_0(a1, a1[3]);
    objc_msgSend(v28, sel_renderPositionForLabelLocation_rect_zoomScale_contentOffset_constantOffset_isHorizontal_optionalOffset_, sub_1E0ECD9D0(), a2 & 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);

    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id StateOfMindSeries.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindSeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1E0E542E8()
{
  id result = objc_msgSend(self, sel_systemGray3Color);
  qword_1EAD6EC30 = (uint64_t)result;
  return result;
}

uint64_t sub_1E0E54324()
{
  sub_1E0DF2BA8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E0F093D0;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v2 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init, 0xE000000000000000);
  id v3 = (void *)sub_1E0ECD190();
  objc_msgSend(v2, sel_setText_, v3);

  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, 1.05);
  objc_msgSend(v2, sel_setLocation_, v4);

  objc_msgSend(v2, sel_setLabelType_, 1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v2;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v5 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v6 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init, 0xE000000000000000);
  id v7 = (void *)sub_1E0ECD190();
  objc_msgSend(v6, sel_setText_, v7);

  id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, 0.0);
  objc_msgSend(v6, sel_setLocation_, v8);

  objc_msgSend(v6, sel_setLabelType_, 1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 40) = v6;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v9 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v10 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init, 0xE000000000000000);
  uint64_t v11 = (void *)sub_1E0ECD190();
  objc_msgSend(v10, sel_setText_, v11);

  id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, -1.05);
  objc_msgSend(v10, sel_setLocation_, v12);

  objc_msgSend(v10, sel_setLabelType_, 1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v10;
  sub_1E0ECD340();
  return v0;
}

uint64_t type metadata accessor for StateOfMindSeries()
{
  return self;
}

void sub_1E0E54718(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC8HealthUI21StateOfMindChartPoint_buckets);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    id v7 = (void *)MEMORY[0x1E4FBC860];
    for (uint64_t i = (uint64_t *)(v3 + 56); ; i += 4)
    {
      uint64_t v10 = *i;
      if (v10 == a2)
      {
        uint64_t v11 = (void *)sub_1E0ECBD90();
        objc_msgSend(a3, sel_coordinateForValue_, v11);
        double v13 = v12;

        unint64_t v14 = (void *)sub_1E0ECBD90();
        objc_msgSend(a3, sel_coordinateForValue_, v14);
        double v16 = v15;

        if (v13 > v16)
        {
          __break(1u);
          return;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v7 = sub_1E0E0BC04(0, v7[2] + 1, 1, v7);
        }
        unint64_t v18 = v7[2];
        unint64_t v17 = v7[3];
        if (v18 >= v17 >> 1) {
          id v7 = sub_1E0E0BC04((void *)(v17 > 1), v18 + 1, 1, v7);
        }
        v7[2] = v18 + 1;
        id v9 = (double *)&v7[2 * v18];
        v9[4] = v13;
        v9[5] = v16;
      }
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
    }
  }
}

uint64_t sub_1E0E54890(void *a1)
{
  uint64_t v2 = sub_1E0ECB460();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_canonicalSize);
  double v8 = v7;
  id v9 = objc_msgSend(a1, sel_seriesPointIntervalComponentsAtResolution_, 0);
  sub_1E0ECB410();

  uint64_t v10 = (void *)sub_1E0ECB400();
  objc_msgSend(v10, sel_hk_approximateDuration);
  double v12 = v11;

  double v13 = floor(v8 / fmax(v12, 1.0));
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v13 < 9.22337204e18) {
    return (uint64_t)v13;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1E0E54A04(void *a1, void *a2, long long *a3, uint64_t a4, void *a5, double a6, double a7, double a8, double a9)
{
  uint64_t v10 = v9;
  long long v38 = a3[1];
  long long v39 = *a3;
  uint64_t v19 = *((void *)a3 + 5);
  id v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((void *)a3 + 4);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  unsigned __int8 v22 = objc_msgSend(a5, sel_seriesDrawingAsTopOverlay_, v10);
  double v44 = round(a8 / (double)sub_1E0E54890(a2) * 0.3);
  sub_1E0DF09C0();
  sub_1E0ECD0B0();
  double v23 = v45;
  double v24 = v45 * 0.5;
  double v25 = v45 * 1.5;
  uint64_t v26 = swift_allocObject();
  *(double *)(v26 + 16) = a6;
  *(double *)(v26 + 24) = a7;
  *(double *)(v26 + 32) = a8;
  *(double *)(v26 + 40) = a9;
  *(void *)(v26 + 48) = v21;
  *(void *)(v26 + 56) = v10;
  *(double *)(v26 + 64) = v24;
  *(unsigned char *)(v26 + 72) = v22;
  *(double *)(v26 + 80) = v25;
  *(double *)(v26 + 88) = v23;
  *(void *)(v26 + 96) = v20;
  CGRect v42 = sub_1E0E5529C;
  uint64_t v43 = v26;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v41 = sub_1E0E3D108;
  *((void *)&v41 + 1) = &block_descriptor_9;
  double v27 = _Block_copy(&aBlock);
  id v28 = v21;
  id v29 = v10;
  id v30 = v20;
  swift_release();
  long long aBlock = v39;
  long long v41 = v38;
  CGRect v42 = v37;
  uint64_t v43 = v19;
  objc_msgSend(a1, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v27);
  _Block_release(v27);
  if (!objc_msgSend(v29, sel_allowsSelection))
  {
    id v33 = sub_1E0E52E80();
    if (objc_msgSend(v28, sel_isEmpty))
    {
LABEL_10:
      double v34 = v28;
      goto LABEL_11;
    }
    id v35 = objc_msgSend(v28, sel_CGPath);
    objc_msgSend(v33, sel_renderPath_context_axisRect_alpha_, v35, a4, a6, a7, a8, a9, 1.0);
    id v36 = v28;
    id v28 = v30;
LABEL_9:
    id v30 = v35;

    id v33 = v36;
    goto LABEL_10;
  }
  id v31 = sub_1E0E529A8();
  if ((objc_msgSend(v30, sel_isEmpty) & 1) == 0)
  {
    id v32 = objc_msgSend(v30, sel_CGPath);
    objc_msgSend(v31, sel_renderPath_context_axisRect_alpha_, v32, a4, a6, a7, a8, a9, 0.15);

    id v31 = v32;
  }

  id v33 = sub_1E0E529A8();
  if ((objc_msgSend(v28, sel_isEmpty) & 1) == 0)
  {
    id v35 = objc_msgSend(v28, sel_CGPath);
    objc_msgSend(v33, sel_renderPath_context_axisRect_alpha_, v35, a4, a6, a7, a8, a9, 1.0);
    id v36 = v30;
    goto LABEL_9;
  }
  double v34 = v30;
  id v30 = v28;
LABEL_11:
}

uint64_t sub_1E0E54DC4(double a1, double a2)
{
  type metadata accessor for StateOfMindCoordinate();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void *)(result + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges);
    uint64_t v13 = *(void *)(result + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_dailyYValueRanges);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1E0E4E3FC(v6);
    uint64_t v7 = *(void *)(v13 + 16);
    if (v7)
    {
      double v8 = (double *)(v13 + 40);
      double v9 = 1.79769313e308;
      while (1)
      {
        double v10 = *(v8 - 1);
        if (v10 <= a2 && *v8 >= a2) {
          break;
        }
        if (v10 <= a2) {
          double v10 = *v8;
        }
        double v12 = sqrt((a2 - v10) * (a2 - v10)+ (a1 - *(double *)(v5 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue))* (a1 - *(double *)(v5 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_xValue)));
        if (v9 >= v12) {
          double v9 = v12;
        }
        v8 += 2;
        if (!--v7) {
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
LABEL_14:
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

double sub_1E0E54F28(double a1)
{
  type metadata accessor for StateOfMindCoordinate();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2) {
    return 1.79769313e308;
  }
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_momentaryYValueRanges);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC8HealthUI21StateOfMindCoordinate_dailyYValueRanges);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1E0E4E3FC(v3);
  uint64_t v4 = *(void *)(v11 + 16);
  if (v4)
  {
    uint64_t v5 = (double *)(v11 + 40);
    double v6 = 1.79769313e308;
    while (1)
    {
      double v7 = *(v5 - 1);
      if (v7 <= a1 && *v5 >= a1) {
        break;
      }
      if (v7 <= a1) {
        double v7 = *v5;
      }
      double v9 = vabdd_f64(v7, a1);
      if (v6 >= v9) {
        double v6 = v9;
      }
      v5 += 2;
      if (!--v4) {
        goto LABEL_17;
      }
    }
    double v6 = 0.0;
  }
  else
  {
    double v6 = 1.79769313e308;
  }
LABEL_17:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

id _s8HealthUI17StateOfMindSeriesC08standardcdeF005statedE11DisplayType14unitControllerACSo09HKDisplayJ0C_So016HKUnitPreferenceL0CtFZ_0(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StateOfMindSeries()), sel_init);
  id v5 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_init);
  objc_msgSend(v7, sel_setMaxLabels_, 3);
  objc_msgSend(v7, sel_setLabelDataSource_, v6);
  objc_msgSend(v7, sel_setTopVerticalLabelPadding_, 12.0);
  objc_msgSend(v7, sel_setBottomVerticalLabelPadding_, 12.0);
  id v8 = objc_msgSend(self, sel_standardNumericYAxisWithConfigurationOverrides_, v7);

  objc_msgSend(v6, sel_setYAxis_, v8);
  id v9 = v6;
  objc_msgSend(v9, sel_setAxisScalingRule_, objc_msgSend(a1, sel_hk_axisScalingRuleForChartSizeClass_unitController_, 0, a2));

  swift_unknownObjectRelease();
  return v9;
}

uint64_t method lookup function for StateOfMindSeries(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateOfMindSeries);
}

uint64_t dispatch thunk of StateOfMindSeries.cacheKeys(forModelRange:zoomScale:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of StateOfMindSeries.findAxisLabels(inModelRange:zoomScale:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of StateOfMindSeries.renderPosition(forLabelLocation:rect:zoomScale:contentOffset:constantOffset:isHorizontal:optionalOffset:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t sub_1E0E55254()
{
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1E0E5529C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1E0E53908(a1, *(CGFloat *)(v7 + 16), *(CGFloat *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(double *)(v7 + 64), *(double *)(v7 + 80), *(double *)(v7 + 88), a2, a3, a4, a5, a6, a7, *(void **)(v7 + 48), *(void *)(v7 + 56), *(unsigned char *)(v7 + 72), *(void **)(v7 + 96));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void *StateOfMindChartDataSource.overlayPredicate.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___HKStateOfMindChartDataSource_overlayPredicate);
  id v2 = v1;
  return v1;
}

id StateOfMindChartDataSource.__allocating_init(displayType:healthStore:overlayPredicate:)(void *a1, void *a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  id v8 = sub_1E0E585B8((uint64_t)a1, (uint64_t)a2, a3);

  return v8;
}

id StateOfMindChartDataSource.init(displayType:healthStore:overlayPredicate:)(void *a1, void *a2, void *a3)
{
  id v6 = sub_1E0E585B8((uint64_t)a1, (uint64_t)a2, a3);

  return v6;
}

uint64_t sub_1E0E5550C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v84 = a2;
  uint64_t v85 = a3;
  uint64_t v88 = sub_1E0ECB460();
  uint64_t v83 = *(void *)(v88 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v88, v4);
  v81 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v82 = (char *)&v76 - v8;
  uint64_t v9 = sub_1E0ECBB60();
  uint64_t v91 = *(void *)(v9 - 8);
  uint64_t v92 = v9;
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  id v89 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v76 - v14;
  uint64_t v16 = sub_1E0ECCF30();
  uint64_t v86 = *(void *)(v16 - 8);
  uint64_t v87 = v16;
  uint64_t v18 = MEMORY[0x1F4188790](v16, v17);
  id v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v21);
  double v23 = (char *)&v76 - v22;
  uint64_t v24 = sub_1E0ECB980();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v24, v26);
  id v29 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v30);
  id v32 = (char *)&v76 - v31;
  id v33 = a1;
  id v34 = objc_msgSend(a1, sel_startDate);
  sub_1E0ECB940();

  sub_1E0ECB950();
  LOBYTE(v34) = sub_1E0ECB930();
  id v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  v35(v29, v24);
  v35(v32, v24);
  if ((v34 & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  id v36 = objc_msgSend(a1, sel_startDate);
  sub_1E0ECB940();

  id v37 = &v90[OBJC_IVAR___HKStateOfMindChartDataSource_gregorianCalendar];
  long long v38 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  uint64_t v39 = v92;
  v38(v15, &v90[OBJC_IVAR___HKStateOfMindChartDataSource_gregorianCalendar], v92);
  sub_1E0ECCEF0();
  id v40 = objc_msgSend(v33, sel_endDate);
  sub_1E0ECB940();

  v80 = v38;
  v38(v15, v37, v39);
  sub_1E0ECCEF0();
  uint64_t v41 = sub_1E0ECCF10();
  uint64_t v42 = sub_1E0ECCF10();
  uint64_t result = sub_1E0ECCF10();
  uint64_t v44 = v42 - result;
  if (!__OFSUB__(v42, result))
  {
    uint64_t v77 = v41;
    uint64_t v78 = v23;
    unint64_t v79 = v20;
    id v45 = objc_msgSend(v33, sel_statisticsInterval);
    uint64_t v46 = v82;
    sub_1E0ECB410();

    uint64_t v47 = sub_1E0ECB450();
    char v49 = v48;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v83 + 8);
    v50(v46, v88);
    if ((v49 & 1) != 0 || v47 != 1)
    {
      id v53 = objc_msgSend(v33, sel_statisticsInterval);
      uint64_t v54 = v81;
      sub_1E0ECB410();

      uint64_t v55 = sub_1E0ECB3F0();
      char v57 = v56;
      v50(v54, v88);
      uint64_t v51 = (v57 & 1) == 0 && v55 == 1;
    }
    else
    {
      uint64_t v51 = 2;
    }
    v80(v89, v37, v92);
    uint64_t v58 = v90;
    id v59 = *(void **)&v90[OBJC_IVAR___HKStateOfMindChartDataSource_overlayPredicate];
    long long v60 = v78;
    if (v59) {
      id v61 = objc_msgSend(v59, sel_predicate);
    }
    else {
      id v61 = 0;
    }
    id v62 = (void *)swift_allocObject();
    uint64_t v63 = v84;
    uint64_t v64 = v85;
    v62[2] = v58;
    v62[3] = v63;
    v62[4] = v64;
    id v65 = objc_allocWithZone(MEMORY[0x1E4F77A88]);
    id v66 = v58;
    swift_retain();
    objc_super v67 = v89;
    long long v68 = (void *)sub_1E0ECBB00();
    aBlock[4] = sub_1E0E58858;
    aBlock[5] = v62;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E0E5838C;
    aBlock[3] = &block_descriptor_10;
    long long v69 = _Block_copy(aBlock);
    id v70 = objc_msgSend(v65, sel_initWithDayIndexRange_gregorianCalendar_predicate_options_ascending_limit_resultsHandler_, v77, v44, v68, v61, v51, 1, 0, v69);
    _Block_release(v69);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v67, v92);
    swift_release();
    id v71 = v70;
    id v72 = objc_msgSend(v66, sel_queryDescription);
    objc_msgSend(v71, sel_setDebugIdentifier_, v72);

    sub_1E0B33088(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1E0F06EB0;
    *(void *)(v73 + 32) = v71;
    aBlock[0] = v73;
    sub_1E0ECD340();
    uint64_t v52 = aBlock[0];
    uint64_t v74 = v87;
    uint64_t v75 = *(void (**)(char *, uint64_t))(v86 + 8);
    v75(v79, v87);
    v75(v60, v74);
    return v52;
  }
  __break(1u);
  return result;
}

id sub_1E0E55D20(uint64_t a1)
{
  sub_1E0B32F68(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1E0B32EE4((uint64_t)v5);
    return 0;
  }
  sub_1E0E59214(0, &qword_1EAD69908, &qword_1EAD69920, 0x1E4F77A80, MEMORY[0x1E4FBB320]);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v1 = objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
  sub_1E0E579A4(v4, 0);
  sub_1E0DFAB14();
  id v2 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setChartPoints_, v2);
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t (*sub_1E0E55F60(void *a1, void *a2, void (*a3)(void, void), uint64_t a4))()
{
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = v5;
  v11[6] = ObjectType;
  v26[4] = sub_1E0E58930;
  v26[5] = v11;
  v26[0] = MEMORY[0x1E4F143A8];
  v26[1] = 1107296256;
  v26[2] = sub_1E0E56E9C;
  uint64_t v26[3] = &block_descriptor_9_1;
  uint64_t v12 = _Block_copy(v26);
  id v13 = a1;
  swift_retain();
  id v14 = v5;
  swift_release();
  id v15 = objc_msgSend(v14, sel_queriesForRequest_completionHandler_, v13, v12);
  _Block_release(v12);
  sub_1E0DF2C04(0, &qword_1EAD69928);
  unint64_t v16 = sub_1E0ECD330();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v21 > 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1E0ECD910();
      if (v22)
      {
        uint64_t v17 = v22;
        if (v22 >= 1)
        {
LABEL_4:
          for (uint64_t i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0) {
              id v19 = (id)MEMORY[0x1E4E3EF00](i, v16);
            }
            else {
              id v19 = *(id *)(v16 + 8 * i + 32);
            }
            id v20 = v19;
            objc_msgSend(a2, sel_executeQuery_, v19);
          }
          goto LABEL_13;
        }
        __break(1u);
      }
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v16;
      *(void *)(v23 + 24) = a2;
      id v24 = a2;
      return sub_1E0E58980;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  a3(0, 0);
  return 0;
}

id sub_1E0E561E4(uint64_t a1, void *a2, void *a3, unsigned char *a4, uint64_t a5, void *a6)
{
  id v114 = a6;
  uint64_t v123 = a5;
  uint64_t v128 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1E0ECB460();
  uint64_t v118 = *(void *)(v10 - 8);
  uint64_t v119 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v117 = &v108[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1E0ECB980();
  uint64_t v115 = *(void *)(v13 - 8);
  uint64_t v116 = v13;
  MEMORY[0x1F4188790](v13, v14);
  unint64_t v16 = &v108[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_1E0ECC010();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  uint64_t v121 = &v108[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = MEMORY[0x1F4188790](v20, v22);
  uint64_t v25 = &v108[-v24];
  MEMORY[0x1F4188790](v23, v26);
  uint64_t v28 = &v108[-v27];
  sub_1E0B32F68(a1, (uint64_t)&v125);
  if (v126)
  {
    sub_1E0DEDF98(&v125, v127);
    if (a2)
    {
      id v29 = a2;
      sub_1E0ECBFE0();
      uint64_t v113 = a3;
      id v30 = a3;
      id v31 = a2;
      id v32 = v30;
      id v33 = a2;
      id v34 = sub_1E0ECBFF0();
      os_log_type_t v35 = sub_1E0ECD500();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = swift_slowAlloc();
        os_log_t v111 = v34;
        uint64_t v38 = v37;
        v110 = (void *)swift_slowAlloc();
        uint64_t v112 = swift_slowAlloc();
        *(void *)&long long v125 = v112;
        *(_DWORD *)uint64_t v38 = 136315650;
        uint64_t v39 = HKStringForChartDataSourceQueryRequestAudience((uint64_t)objc_msgSend(v32, sel_audience));
        uint64_t v120 = v17;
        id v40 = v39;
        uint64_t v41 = sub_1E0ECD1D0();
        uint64_t v122 = v18;
        uint64_t v42 = v41;
        int v109 = v36;
        uint64_t v43 = a4;
        unint64_t v45 = v44;

        unint64_t v124 = sub_1E0DED7E4(v42, v45, (uint64_t *)&v125);
        sub_1E0ECD6D0();

        a4 = v43;
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        uint64_t v46 = sub_1E0ECD1D0();
        unint64_t v124 = sub_1E0DED7E4(v46, v47, (uint64_t *)&v125);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 22) = 2114;
        id v48 = a2;
        uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
        unint64_t v124 = v49;
        uint64_t v17 = v120;
        uint64_t v18 = v122;
        sub_1E0ECD6D0();
        uint64_t v50 = v110;
        void *v110 = v49;

        os_log_t v51 = v111;
        _os_log_impl(&dword_1E0B26000, v111, (os_log_type_t)v109, "[RemoteCharting]_%s_%s: query returned successfully with error: %{public}@", (uint8_t *)v38, 0x20u);
        sub_1E0E59214(0, (unint64_t *)&qword_1EB584EA0, (unint64_t *)&qword_1EB584EB0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v50, -1, -1);
        uint64_t v52 = v112;
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v52, -1, -1);
        MEMORY[0x1E4E41080](v38, -1, -1);
      }
      else
      {
      }
      (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v25, v17);
      a3 = v113;
    }
    sub_1E0DEDFA8((uint64_t)v127, (uint64_t)&v125);
    sub_1E0E59214(0, &qword_1EAD69908, &qword_1EAD69920, 0x1E4F77A80, MEMORY[0x1E4FBB320]);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v122 = v18;
      id v87 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      uint64_t v88 = (void *)sub_1E0ECD190();
      id v89 = objc_msgSend(v87, sel_initWithDomain_code_userInfo_, v88, 1000, 0);

      v90 = v121;
      sub_1E0ECBFE0();
      id v91 = a3;
      uint64_t v92 = sub_1E0ECBFF0();
      os_log_type_t v93 = sub_1E0ECD520();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        *(void *)&long long v125 = v119;
        *(_DWORD *)uint64_t v94 = 136315394;
        uint64_t v95 = HKStringForChartDataSourceQueryRequestAudience((uint64_t)objc_msgSend(v91, sel_audience));
        uint64_t v120 = v17;
        unsigned int v96 = v95;
        unsigned int v97 = a4;
        uint64_t v98 = sub_1E0ECD1D0();
        unint64_t v100 = v99;

        uint64_t v101 = v98;
        a4 = v97;
        unint64_t v124 = sub_1E0DED7E4(v101, v100, (uint64_t *)&v125);
        sub_1E0ECD6D0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 12) = 2080;
        uint64_t v102 = sub_1E0ECD1D0();
        unint64_t v124 = sub_1E0DED7E4(v102, v103, (uint64_t *)&v125);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1E0B26000, v92, v93, "[RemoteCharting]_%s_%s: Unable to parse data from query.", (uint8_t *)v94, 0x16u);
        uint64_t v104 = v119;
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v104, -1, -1);
        MEMORY[0x1E4E41080](v94, -1, -1);

        (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v121, v120);
      }
      else
      {

        (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v90, v17);
      }
      id v86 = v89;
      ((void (*)(void, id))a4)(0, v89);
      goto LABEL_18;
    }
    id G0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0 = _s8HealthUI26StateOfMindChartDataSourceC16encodeToProtobuf9summariesSo09HKCodablecdegh5QueryG0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0(v124);
    swift_bridgeObjectRelease();
    id v69 = objc_msgSend(a3, sel_startDate);
    sub_1E0ECB940();

    id v70 = (void *)sub_1E0ECB920();
    uint64_t v71 = v116;
    id v72 = *(void (**)(unsigned char *, uint64_t))(v115 + 8);
    v72(v16, v116);
    id v73 = objc_msgSend(a3, sel_endDate);
    sub_1E0ECB940();

    uint64_t v74 = a3;
    uint64_t v75 = (void *)sub_1E0ECB920();
    v72(v16, v71);
    id v76 = objc_msgSend(v74, sel_statisticsInterval);
    uint64_t v77 = v117;
    sub_1E0ECB410();

    uint64_t v78 = (void *)sub_1E0ECB400();
    (*(void (**)(NSObject *, uint64_t))(v118 + 8))(v77, v119);
    id result = objc_msgSend(G0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0, sel_data);
    if (result)
    {
      v80 = result;
      uint64_t v81 = sub_1E0ECB830();
      unint64_t v83 = v82;

      uint64_t v84 = (void *)sub_1E0ECB820();
      sub_1E0E59098(v81, v83);
      id v85 = objc_msgSend(v114, sel_codableQueryDataWithType_startDate_endDate_statisticsInterval_queryDataObject_, 14, v70, v75, v78, v84);

      id v86 = v85;
      ((void (*)(id, void))a4)(v85, 0);

LABEL_18:
      return (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v127);
    }
    __break(1u);
  }
  else
  {
    uint64_t v122 = v18;
    uint64_t v120 = v17;
    sub_1E0B32EE4((uint64_t)&v125);
    sub_1E0ECBFE0();
    id v53 = a3;
    id v54 = a2;
    id v55 = v53;
    id v56 = a2;
    char v57 = sub_1E0ECBFF0();
    os_log_type_t v58 = sub_1E0ECD520();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v117 = v57;
      uint64_t v121 = a4;
      uint64_t v59 = swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      *(void *)&v127[0] = v119;
      *(_DWORD *)uint64_t v59 = 136315650;
      long long v60 = HKStringForChartDataSourceQueryRequestAudience((uint64_t)objc_msgSend(v55, sel_audience));
      uint64_t v61 = sub_1E0ECD1D0();
      unint64_t v63 = v62;

      *(void *)&long long v125 = sub_1E0DED7E4(v61, v63, (uint64_t *)v127);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2080;
      uint64_t v64 = sub_1E0ECD1D0();
      *(void *)&long long v125 = sub_1E0DED7E4(v64, v65, (uint64_t *)v127);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 22) = 2114;
      if (a2)
      {
        id v66 = a2;
        uint64_t v67 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v125 = v67;
        sub_1E0ECD6D0();
      }
      else
      {
        *(void *)&long long v125 = 0;
        sub_1E0ECD6D0();
        uint64_t v67 = 0;
      }
      uint64_t v105 = v117;
      uint64_t v106 = v118;
      *(void *)uint64_t v118 = v67;

      _os_log_impl(&dword_1E0B26000, v105, v58, "[RemoteCharting]_%s_%s: unable to fetch results from query with error: %{public}@", (uint8_t *)v59, 0x20u);
      sub_1E0E59214(0, (unint64_t *)&qword_1EB584EA0, (unint64_t *)&qword_1EB584EB0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v106, -1, -1);
      uint64_t v107 = v119;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v107, -1, -1);
      MEMORY[0x1E4E41080](v59, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v28, v120);
      a4 = v121;
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v28, v120);
    }
    return (id)((uint64_t (*)(void, void *))a4)(0, a2);
  }
  return result;
}

uint64_t sub_1E0E56E9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1E0B32EE4((uint64_t)&v8);
}

uint64_t sub_1E0E56F30(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1E0ECD910();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1E4E3EF00](i, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * i + 32);
    }
    long long v8 = v7;
    objc_msgSend(a2, sel_stopQuery_, v7);
  }
LABEL_10:
  return swift_bridgeObjectRelease();
}

void sub_1E0E57158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1E0ECB760();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id sub_1E0E571C8(void *a1, char a2)
{
  id v3 = objc_msgSend(a1, sel_queryDataObject);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1E0ECB830();
    unint64_t v7 = v6;

    long long v8 = (void *)sub_1E0ECB820();
    sub_1E0E59098(v5, v7);
  }
  else
  {
    long long v8 = 0;
  }
  id v9 = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindDataSourceQueryData), sel_initWithData_, v8);

  if (v9)
  {
    unint64_t G0C_tFZ_0 = _s8HealthUI26StateOfMindChartDataSourceC18decodeFromProtobuf05queryG0SaySo30HKMHValenceDistributionSummaryCGSo09HKCodablecdegh5QueryG0C_tFZ_0(v9);
    id v11 = objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
    sub_1E0E579A4(G0C_tFZ_0, a2 & 1);
    sub_1E0DFAB14();
    uint64_t v12 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setChartPoints_, v12);

    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    id v14 = objc_allocWithZone((Class)HKGraphSeriesDataBlock);
    return objc_msgSend(v14, sel_init);
  }
}

uint64_t sub_1E0E57394(unint64_t a1, void *a2, void (*a3)(void, void))
{
  swift_getObjectType();
  uint64_t v6 = sub_1E0ECC010();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  id v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  id v14 = (char *)&v41 - v13;
  if (!a2)
  {
    uint64_t v43 = v7;
    sub_1E0ECBFE0();
    swift_bridgeObjectRetain_n();
    id v29 = sub_1E0ECBFF0();
    os_log_type_t v30 = sub_1E0ECD500();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v44 = v6;
      unint64_t v45 = a3;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v46 = v32;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v33 = sub_1E0ECDBC0();
      *(void *)&long long v47 = sub_1E0DED7E4(v33, v34, &v46);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      if (a1)
      {
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_1E0ECD910();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
      }
      else
      {
        uint64_t v35 = 0;
      }
      *(void *)&long long v47 = v35;
      BYTE8(v47) = a1 == 0;
      sub_1E0B33088(0, &qword_1EB5851B8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
      uint64_t v38 = sub_1E0ECD200();
      *(void *)&long long v47 = sub_1E0DED7E4(v38, v39, &v46);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v29, v30, "[%{public}s] Query found %s sample(s).", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v32, -1, -1);
      MEMORY[0x1E4E41080](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
      a3 = v45;
      if (!a1) {
        goto LABEL_14;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v6);
      if (!a1)
      {
LABEL_14:
        long long v47 = 0u;
        long long v48 = 0u;
        goto LABEL_15;
      }
    }
    sub_1E0E59214(0, &qword_1EAD69908, &qword_1EAD69920, 0x1E4F77A80, MEMORY[0x1E4FBB320]);
    *((void *)&v48 + 1) = v37;
    *(void *)&long long v47 = a1;
LABEL_15:
    swift_bridgeObjectRetain();
    a3(&v47, 0);
    return sub_1E0B32EE4((uint64_t)&v47);
  }
  id v15 = a2;
  sub_1E0ECBFE0();
  id v16 = a2;
  id v17 = a2;
  uint64_t v18 = sub_1E0ECBFF0();
  os_log_type_t v19 = sub_1E0ECD520();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v44 = v6;
    uint64_t v42 = (void *)v21;
    uint64_t v43 = swift_slowAlloc();
    *(void *)&long long v47 = v43;
    *(_DWORD *)uint64_t v20 = 136446466;
    unint64_t v45 = a3;
    uint64_t v22 = sub_1E0ECDBC0();
    uint64_t v46 = sub_1E0DED7E4(v22, v23, (uint64_t *)&v47);
    uint64_t v24 = v7;
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2114;
    id v25 = a2;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v46 = v26;
    a3 = v45;
    sub_1E0ECD6D0();
    uint64_t v27 = v42;
    *uint64_t v42 = v26;

    _os_log_impl(&dword_1E0B26000, v18, v19, "[%{public}s] Query failed with error: %{public}@", (uint8_t *)v20, 0x16u);
    sub_1E0E59214(0, (unint64_t *)&qword_1EB584EA0, (unint64_t *)&qword_1EB584EB0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v27, -1, -1);
    uint64_t v28 = v43;
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v28, -1, -1);
    MEMORY[0x1E4E41080](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }
  long long v47 = 0u;
  long long v48 = 0u;
  id v36 = a2;
  a3(&v47, a2);

  return sub_1E0B32EE4((uint64_t)&v47);
}

uint64_t sub_1E0E579A4(unint64_t a1, int a2)
{
  id v3 = v2;
  swift_getObjectType();
  uint64_t v6 = sub_1E0ECC010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBFE0();
  swift_bridgeObjectRetain_n();
  id v11 = sub_1E0ECBFF0();
  os_log_type_t v12 = sub_1E0ECD500();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v3;
    int v22 = a2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v15 = sub_1E0ECDBC0();
    uint64_t v23 = sub_1E0DED7E4(v15, v16, &v24);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1E0ECD910();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = v17;
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v11, v12, "[%{public}s] Mapping %ld sample(s) to chart points.", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v14, -1, -1);
    MEMORY[0x1E4E41080](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    LOBYTE(a2) = v22;
    id v3 = v21;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  id v18 = v3;
  uint64_t v19 = sub_1E0E58444(a1, v18, a2 & 1);

  return v19;
}

id sub_1E0E57C6C@<X0>(id *a1@<X0>, void *a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  int v65 = a3;
  uint64_t v9 = sub_1E0ECB3C0();
  MEMORY[0x1F4188790](v9 - 8, v10);
  unint64_t v62 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E0ECB980();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  long long v60 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14, v16);
  uint64_t v59 = (char *)v58 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  uint64_t v61 = (char *)v58 - v21;
  MEMORY[0x1F4188790](v20, v22);
  id v69 = (char *)v58 - v23;
  id v68 = *a1;
  id v24 = objc_msgSend(v68, sel_valenceDistributions);
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD69910);
  unint64_t v25 = sub_1E0ECD330();

  if (v25 >> 62) {
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v66 = a4;
  uint64_t v67 = v4;
  if (v26)
  {
    while (1)
    {
      v58[1] = a2;
      uint64_t v71 = MEMORY[0x1E4FBC860];
      id result = (id)sub_1E0DEE968(0, v26 & ~(v26 >> 63), 0);
      if (v26 < 0) {
        break;
      }
      uint64_t v28 = 0;
      unint64_t v70 = v25 & 0xC000000000000001;
      uint64_t v5 = v71;
      while (1)
      {
        id v29 = v70 ? (id)MEMORY[0x1E4E3EF00](v28, v25) : *(id *)(v25 + 8 * (void)v28 + 32);
        a2 = v29;
        objc_msgSend(v29, sel_minimumValence);
        double v31 = v30;
        objc_msgSend(a2, sel_maximumValence);
        if (v31 > v32) {
          break;
        }
        double v33 = v32;
        a4 = (void *)v26;
        id v34 = objc_msgSend(a2, sel_sampleCount);
        id v35 = objc_msgSend(a2, sel_reflectiveInterval);

        uint64_t v71 = v5;
        unint64_t v37 = *(void *)(v5 + 16);
        unint64_t v36 = *(void *)(v5 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1E0DEE968(v36 > 1, v37 + 1, 1);
          uint64_t v5 = v71;
        }
        uint64_t v28 = (void *)((char *)v28 + 1);
        *(void *)(v5 + 16) = v37 + 1;
        uint64_t v38 = v5 + 32 * v37;
        *(double *)(v38 + 32) = v31;
        *(double *)(v38 + 40) = v33;
        *(void *)(v38 + 48) = v34;
        *(void *)(v38 + 56) = v35;
        uint64_t v26 = (uint64_t)a4;
        if (a4 == v28)
        {
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1E0ECD910();
      swift_bridgeObjectRelease();
      id v66 = a4;
      uint64_t v67 = v5;
      if (!v26) {
        goto LABEL_15;
      }
    }
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_16:
    unint64_t v39 = self;
    id v40 = v68;
    id v41 = objc_msgSend(v68, sel_dayIndexRange);
    uint64_t v42 = (void *)sub_1E0ECBB00();
    id v43 = objc_msgSend(v39, sel_hk_dateOnDayIndex_atHour_calendar_, v41, 0, v42);

    uint64_t v44 = v69;
    sub_1E0ECB940();

    unint64_t v45 = (char *)objc_msgSend(v40, sel_dayIndexRange);
    id result = objc_msgSend(v40, sel_dayIndexRange);
    long long v47 = &v45[v46];
    if (!__OFADD__(v45, v46))
    {
      long long v48 = (void *)sub_1E0ECBB00();
      id v49 = objc_msgSend(v39, sel_hk_dateOnDayIndex_atHour_calendar_, v47, 0, v48);

      uint64_t v50 = v61;
      sub_1E0ECB940();

      uint64_t v52 = v63;
      uint64_t v51 = v64;
      id v53 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
      v53(v59, v44, v64);
      v53(v60, v50, v51);
      uint64_t v54 = (uint64_t)v62;
      sub_1E0ECB390();
      id v55 = objc_allocWithZone((Class)type metadata accessor for StateOfMindChartPoint());
      id v56 = StateOfMindChartPoint.init(dateInterval:buckets:isSharingPreview:)(v54, v5, v65 & 1);
      char v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v50, v51);
      id result = (id)((uint64_t (*)(char *, uint64_t))v57)(v44, v51);
      *id v66 = v56;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id StateOfMindChartDataSource.__allocating_init(displayType:healthStore:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithDisplayType_healthStore_, a1, a2);

  return v5;
}

void StateOfMindChartDataSource.init(displayType:healthStore:)()
{
}

id StateOfMindChartDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void StateOfMindChartDataSource.init()()
{
}

id StateOfMindChartDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E5838C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1E0DF2C04(0, &qword_1EAD69920);
    uint64_t v5 = sub_1E0ECD330();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0E58444(unint64_t a1, void *a2, char a3)
{
  LOBYTE(v4) = a3;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E0ECD890();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    v4 &= 1u;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1E4E3EF00](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v12 = v9;
      sub_1E0E57C6C(&v12, a2, v4, &v13);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      if (v6 == v8) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1E0E585B8(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v37 = a3;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v4 = sub_1E0ECBB60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E0ECB9C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)&v3[OBJC_IVAR___HKStateOfMindChartDataSource_debugIdentifier];
  uint64_t v15 = v3;
  sub_1E0ECB9B0();
  uint64_t v16 = sub_1E0ECB990();
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v20 = sub_1E0E9D274(5, v16, v18, v19);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x1E4E3E8E0](v20, v22, v24, v26);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *uint64_t v14 = v27;
  v14[1] = v29;
  double v30 = &v15[OBJC_IVAR___HKStateOfMindChartDataSource_gregorianCalendar];
  id v31 = objc_msgSend(self, sel_hk_gregorianCalendar);
  sub_1E0ECBB20();

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v8, v4);
  double v32 = v37;
  *(void *)&v15[OBJC_IVAR___HKStateOfMindChartDataSource_overlayPredicate] = v37;
  id v33 = v32;

  id v34 = (objc_class *)type metadata accessor for StateOfMindChartDataSource();
  v40.receiver = v15;
  v40.super_class = v34;
  return objc_msgSendSuper2(&v40, sel_initWithDisplayType_healthStore_, v38, v39);
}

uint64_t sub_1E0E58818()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1E0E58858(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1E0E57394(a2, a3, *(void (**)(void, void))(v3 + 24));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_1E0E588A8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1E0E588E0(uint64_t a1)
{
  return sub_1E0E55D20(a1);
}

uint64_t sub_1E0E588E8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

id sub_1E0E58930(uint64_t a1, void *a2)
{
  return sub_1E0E561E4(a1, a2, *(void **)(v2 + 16), *(unsigned char **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1E0E58940()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E58980()
{
  return sub_1E0E56F30(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_1E0E58988(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindValenceDistributionSummary), sel_init);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v3 = result;
  id v4 = objc_msgSend(a1, sel_dayIndexRange);
  uint64_t v6 = v5;
  id result = objc_msgSend(objc_allocWithZone((Class)HKCodableDayIndexRange), sel_init);
  if (result)
  {
    uint64_t v7 = result;
    objc_msgSend(result, sel_setDayIndex_, v4);
    objc_msgSend(v7, sel_setDuration_, v6);
    objc_msgSend(v3, sel_setDayIndexRange_, v7);

    id v8 = objc_msgSend(a1, sel_valenceDistributions);
    sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD69910);
    unint64_t v9 = sub_1E0ECD330();

    if (v9 >> 62)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1E0ECD910();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_5:
        uint64_t v11 = 4;
        while (1)
        {
          if ((v9 & 0xC000000000000001) != 0) {
            id v12 = (id)MEMORY[0x1E4E3EF00](v11 - 4, v9);
          }
          else {
            id v12 = *(id *)(v9 + 8 * v11);
          }
          uint64_t v13 = v12;
          uint64_t v14 = v11 - 3;
          if (__OFADD__(v11 - 4, 1))
          {
            __break(1u);
            goto LABEL_17;
          }
          id result = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindValenceDistributionData), sel_init);
          if (!result) {
            break;
          }
          uint64_t v15 = result;
          objc_msgSend(v13, sel_minimumValence);
          objc_msgSend(v15, sel_setMinimumValence_);
          objc_msgSend(v13, sel_maximumValence);
          objc_msgSend(v15, sel_setMaximumValence_);
          objc_msgSend(v15, sel_setSampleCount_, objc_msgSend(v13, sel_sampleCount));
          if (objc_msgSend(v13, sel_reflectiveInterval) == (id)2) {
            uint64_t v16 = 2;
          }
          else {
            uint64_t v16 = 1;
          }
          objc_msgSend(v15, sel_setReflectiveInterval_, v16);
          objc_msgSend(v3, sel_addValenceDistributionData_, v15);

          ++v11;
          if (v14 == v10) {
            goto LABEL_15;
          }
        }
        __break(1u);
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10) {
        goto LABEL_5;
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return v3;
  }
LABEL_21:
  __break(1u);
  return result;
}

id _s8HealthUI26StateOfMindChartDataSourceC16encodeToProtobuf9summariesSo09HKCodablecdegh5QueryG0CSaySo30HKMHValenceDistributionSummaryCG_tFZ_0(unint64_t a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)HKCodableStateOfMindDataSourceQueryData), sel_init);
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v3 = result;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_1E0ECD910();
    uint64_t v4 = (uint64_t)result;
    if (result) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return v3;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_4:
  if (v4 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1E4E3EF00](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      ++v5;
      id v8 = sub_1E0E58988(v6);
      objc_msgSend(v3, sel_addValenceDistributionSummary_, v8);
    }
    while (v4 != v5);
    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1E0E58D1C(void *a1)
{
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_dayIndexRange);
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v3 = (void *)result;
  id v4 = objc_msgSend((id)result, sel_dayIndex);

  unint64_t result = (unint64_t)objc_msgSend(a1, sel_dayIndexRange);
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v5 = (void *)result;
  id v6 = objc_msgSend((id)result, sel_duration);

  uint64_t v20 = MEMORY[0x1E4FBC860];
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_valenceDistributionDatasCount);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v7 = result;
  if (result)
  {
    uint64_t v8 = 0;
    do
    {
      id v9 = objc_msgSend(a1, sel_valenceDistributionDataAtIndex_, v8);
      if (v9)
      {
        uint64_t v10 = v9;
        objc_msgSend(v9, sel_minimumValence);
        double v12 = v11;
        objc_msgSend(v10, sel_maximumValence);
        double v14 = v13;
        id v15 = objc_msgSend(v10, sel_sampleCount);
        if (objc_msgSend(v10, sel_reflectiveInterval) == 2) {
          uint64_t v16 = 2;
        }
        else {
          uint64_t v16 = 1;
        }
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F77A78]), sel_initWithMinimumValence_maximumValence_sampleCount_reflectiveInterval_, v15, v16, v12, v14);
        MEMORY[0x1E4E3E9E0]();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E0ECD350();
        }
        sub_1E0ECD370();
        sub_1E0ECD340();
      }
      ++v8;
    }
    while (v7 != v8);
  }
  id v17 = objc_allocWithZone(MEMORY[0x1E4F77A80]);
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD69910);
  unint64_t v18 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithDayIndexRange_valenceDistributions_, v4, v6, v18);

  return (unint64_t)v19;
}

unint64_t _s8HealthUI26StateOfMindChartDataSourceC18decodeFromProtobuf05queryG0SaySo30HKMHValenceDistributionSummaryCGSo09HKCodablecdegh5QueryG0C_tFZ_0(void *a1)
{
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_valenceDistributionSummarysCount);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = result;
    if (result)
    {
      uint64_t v4 = 0;
      do
      {
        id v5 = objc_msgSend(a1, sel_valenceDistributionSummaryAtIndex_, v4);
        if (v5)
        {
          id v6 = v5;
          sub_1E0E58D1C(v5);
          MEMORY[0x1E4E3E9E0]();
          if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1E0ECD350();
          }
          sub_1E0ECD370();
          sub_1E0ECD340();
        }
        ++v4;
      }
      while (v3 != v4);
      return v7;
    }
    else
    {
      return MEMORY[0x1E4FBC860];
    }
  }
  return result;
}

uint64_t sub_1E0E59098(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for StateOfMindChartDataSource()
{
  uint64_t result = qword_1EAD698F0;
  if (!qword_1EAD698F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0E5913C()
{
  return type metadata accessor for StateOfMindChartDataSource();
}

uint64_t sub_1E0E59144()
{
  uint64_t result = sub_1E0ECBB60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StateOfMindChartDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateOfMindChartDataSource);
}

uint64_t dispatch thunk of StateOfMindChartDataSource.__allocating_init(displayType:healthStore:overlayPredicate:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1E0E59214(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1E0DF2C04(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1E0E5927C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1E0E592B4(uint64_t a1, uint64_t a2)
{
  sub_1E0E57158(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1E0E592E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1E0DEEB34(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E0DEEB34(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1E0DEEB34(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1E0DEDF98(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1E0E59434()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramLongitudinalChartPoint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AudiogramLongitudinalChartPoint()
{
  return self;
}

uint64_t sub_1E0E5949C()
{
  type metadata accessor for AudiogramLongitudinalLineSeriesPresentationStyle();
  *(void *)(swift_initStackObject() + 16) = 1;
  uint64_t result = sub_1E0E30208();
  qword_1EAD6EC80 = result;
  return result;
}

uint64_t sub_1E0E594E8()
{
  type metadata accessor for AudiogramLongitudinalLineSeriesPresentationStyle();
  *(void *)(swift_initStackObject() + 16) = 2;
  uint64_t result = sub_1E0E30208();
  qword_1EAD6EC88 = result;
  return result;
}

void sub_1E0E59630(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData)+ OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary), sel_overallMetrics);
  if (v3
    && (uint64_t v4 = v3, v5 = objc_msgSend(v3, sel_averageSensitivity), v4, v5))
  {
    id v6 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v5, sel_doubleValueForUnit_, v6);
    double v8 = v7;

    *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
    *(double *)a1 = -v8;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t sub_1E0E599D0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData);
  uint64_t v2 = OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary;
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary), sel_leftEarMetrics);
  id v4 = objc_msgSend(v3, sel_averageSensitivity);

  double v5 = 0.0;
  double v6 = 0.0;
  if (v4)
  {
    id v7 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v4, sel_doubleValueForUnit_, v7);
    double v6 = v8;
  }
  id v9 = objc_msgSend(*(id *)(v1 + v2), sel_rightEarMetrics);
  id v10 = objc_msgSend(v9, sel_averageSensitivity);

  if (v10)
  {
    id v11 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v10, sel_doubleValueForUnit_, v11);
    double v5 = v12;
  }
  if (!v4)
  {
    double v13 = (void *)MEMORY[0x1E4FBC860];
    if (!v10) {
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  double v13 = sub_1E0E0BD88(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    double v13 = sub_1E0E0BD88((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  v13[2] = v15 + 1;
  *(double *)&v13[v15 + 4] = -v6;
  if (v10)
  {
LABEL_11:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v13 = sub_1E0E0BD88(0, v13[2] + 1, 1, v13);
    }
    unint64_t v17 = v13[2];
    unint64_t v16 = v13[3];
    if (v17 >= v16 >> 1) {
      double v13 = sub_1E0E0BD88((void *)(v16 > 1), v17 + 1, 1, v13);
    }
    v13[2] = v17 + 1;
    *(double *)&v13[v17 + 4] = -v5;
  }
LABEL_16:
  uint64_t v18 = sub_1E0E592E0((uint64_t)v13);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1E0E59C78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData);
  uint64_t v2 = OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary;
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary), sel_leftEarMetrics);
  id v4 = objc_msgSend(v3, sel_averageSensitivity);

  id v5 = objc_msgSend(*(id *)(v1 + v2), sel_rightEarMetrics);
  id v6 = objc_msgSend(v5, sel_averageSensitivity);

  if (!v4)
  {
    if (!v6) {
      return 0;
    }
    id v16 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v6, sel_doubleValueForUnit_, v16);
    double v10 = v17;

    return *(void *)&v10;
  }
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_decibelHearingLevelUnit);
  objc_msgSend(v4, sel_doubleValueForUnit_, v8);
  double v10 = v9;
  if (!v6)
  {

    return *(void *)&v10;
  }

  id v11 = objc_msgSend(v7, sel_decibelHearingLevelUnit);
  objc_msgSend(v6, sel_doubleValueForUnit_, v11);
  double v13 = v12;

  if (v10 > v13) {
    double v14 = v10;
  }
  else {
    double v14 = v13;
  }
  return *(void *)&v14;
}

id sub_1E0E59E48(void *a1, uint64_t a2, uint64_t (*a3)(void *))
{
  id v4 = a1;
  sub_1E0E59F8C(a3, v12);

  uint64_t v5 = v13;
  if (v13)
  {
    id v6 = __swift_project_boxed_opaque_existential_0(v12, v13);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x1F4188790](v6, v6);
    double v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    double v10 = (void *)sub_1E0ECD9D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  else
  {
    double v10 = 0;
  }
  return v10;
}

uint64_t sub_1E0E59F8C@<X0>(uint64_t (*a1)(void *)@<X0>, unint64_t *a2@<X8>)
{
  uint64_t result = a1(v2);
  if (v5)
  {
    if (objc_msgSend(v2, sel_yValue))
    {
      sub_1E0ECD760();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v6, 0, sizeof(v6));
    }
    return sub_1E0DF0A14((uint64_t)v6, (uint64_t)a2);
  }
  else
  {
    a2[3] = MEMORY[0x1E4FBB3D0];
    *a2 = result ^ 0x8000000000000000;
  }
  return result;
}

uint64_t sub_1E0E5A028(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData);
  uint64_t v2 = OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary;
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary), sel_leftEarMetrics);
  id v4 = objc_msgSend(v3, sel_averageSensitivity);

  id v5 = objc_msgSend(*(id *)(v1 + v2), sel_rightEarMetrics);
  id v6 = objc_msgSend(v5, sel_averageSensitivity);

  if (!v4)
  {
    if (!v6) {
      return 0;
    }
    id v16 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v6, sel_doubleValueForUnit_, v16);
    double v10 = v17;

    return *(void *)&v10;
  }
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_decibelHearingLevelUnit);
  objc_msgSend(v4, sel_doubleValueForUnit_, v8);
  double v10 = v9;
  if (!v6)
  {

    return *(void *)&v10;
  }

  id v11 = objc_msgSend(v7, sel_decibelHearingLevelUnit);
  objc_msgSend(v6, sel_doubleValueForUnit_, v11);
  double v13 = v12;

  if (v13 >= v10) {
    double v14 = v10;
  }
  else {
    double v14 = v13;
  }
  return *(void *)&v14;
}

char *sub_1E0E5A208(void *a1, void *a2)
{
  id v4 = &selRef_bottomPadding;
  objc_msgSend(a1, sel_coordinateForValue_, objc_msgSend(v2, sel_xValueAsGenericType));
  uint64_t v6 = v5;
  swift_unknownObjectRelease();
  uint64_t v7 = OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary;
  id v8 = *(char **)&v2[OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData];
  id v9 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary], sel_leftEarMetrics);
  id v10 = objc_msgSend(v9, sel_averageSensitivity);

  id v11 = &selRef_counterWithTargetCount_queue_completion_;
  if (v10)
  {
    id v12 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v10, sel_doubleValueForUnit_, v12);

    double v13 = (void *)sub_1E0ECBD90();
    double v14 = a2;
    objc_msgSend(a2, sel_coordinateForValue_, v13);
    double v16 = v15;

    if (qword_1EAD6D500 != -1) {
      swift_once();
    }
    id v17 = (id)qword_1EAD6EC80;
    uint64_t v18 = (char *)sub_1E0E0C3C0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v20 = *((void *)v18 + 2);
    unint64_t v19 = *((void *)v18 + 3);
    if (v20 >= v19 >> 1) {
      uint64_t v18 = (char *)sub_1E0E0C3C0((void *)(v19 > 1), v20 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20 + 1;
    uint64_t v21 = (double *)&v18[40 * v20];
    v21[4] = 1.16731606e214;
    v21[5] = -3.91910665e202;
    *((void *)v21 + 6) = v6;
    v21[7] = -v16;
    *((void *)v21 + 8) = v17;

    a2 = v14;
    id v4 = &selRef_bottomPadding;
    id v11 = &selRef_counterWithTargetCount_queue_completion_;
  }
  else
  {
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = *(void **)&v8[v7];
  uint64_t v23 = v8;
  id v24 = objc_msgSend(v22, sel_rightEarMetrics);
  id v25 = objc_msgSend(v24, sel_averageSensitivity);

  if (v25)
  {
    id v26 = objc_msgSend(self, (SEL)&selRef_currentLocalizedClassificationName + 5);
    objc_msgSend(v25, v11[435], v26);

    uint64_t v27 = (void *)sub_1E0ECBD90();
    objc_msgSend(a2, v4[483], v27);
    double v29 = v28;

    if (qword_1EAD6D508 != -1) {
      swift_once();
    }
    id v30 = (id)qword_1EAD6EC88;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = (char *)sub_1E0E0C3C0(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v32 = *((void *)v18 + 2);
    unint64_t v31 = *((void *)v18 + 3);
    if (v32 >= v31 >> 1) {
      uint64_t v18 = (char *)sub_1E0E0C3C0((void *)(v31 > 1), v32 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v32 + 1;
    id v33 = (double *)&v18[40 * v32];
    v33[4] = 7.85532579e160;
    v33[5] = -2.56842574e207;
    *((void *)v33 + 6) = v6;
    v33[7] = -v29;
    *((void *)v33 + 8) = v30;
  }
  if (!*((void *)v18 + 2) || !objc_msgSend(v2, sel_minYValue))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1E0ECD760();
  swift_unknownObjectRelease();
  sub_1E0DEDF98(&v42, &v44);
  if (!objc_msgSend(v2, sel_maxYValue))
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
    return 0;
  }
  sub_1E0ECD760();
  swift_unknownObjectRelease();
  sub_1E0DEDF98(&v41, &v42);
  __swift_project_boxed_opaque_existential_0(&v44, v45);
  objc_msgSend(a2, v4[483], sub_1E0ECD9D0());
  double v35 = v34;
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_0(&v42, v43);
  objc_msgSend(a2, v4[483], sub_1E0ECD9D0());
  double v37 = v36;
  swift_unknownObjectRelease();
  uint64_t v38 = (char *)objc_allocWithZone((Class)type metadata accessor for HKMultiLineSeriesBlockCoordinate());
  uint64_t v39 = sub_1E0E5A708(v18, (uint64_t)v23, v38, v35, v37);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v42);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v44);
  return v39;
}

char *sub_1E0E5A708(char *result, uint64_t a2, char *a3, double a4, double a5)
{
  *(void *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates] = result;
  uint64_t v5 = *((void *)result + 2);
  if (v5)
  {
    double v7 = *((double *)result + 6);
    uint64_t v6 = (double *)(result + 48);
    double v8 = v7;
    double v9 = v7;
    do
    {
      double v10 = *v6;
      v6 += 5;
      double v11 = v10;
      if (v10 < v9) {
        double v9 = v11;
      }
      if (v8 <= v11) {
        double v8 = v11;
      }
      --v5;
    }
    while (v5);
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue] = a4;
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue] = a5;
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_startXValue] = v9;
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_endXValue] = v8;
    *(void *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_userInfo] = a2;
    v12.receiver = a3;
    v12.super_class = (Class)type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    return (char *)objc_msgSendSuper2(&v12, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id InternalSettingsTapGestureRecognizer.__allocating_init(target:action:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    uint64_t v6 = __swift_project_boxed_opaque_existential_0(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v6, v6);
    double v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_1E0ECD9D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone(v2), sel_initWithTarget_action_, v10, a2);
  swift_unknownObjectRelease();
  return v11;
}

id InternalSettingsTapGestureRecognizer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL _s8HealthUI36InternalSettingsTapGestureRecognizerC07gestureG0_13shouldReceiveSbSo09UIGestureG0C_So7UITouchCtF_0(void *a1, id a2)
{
  id v4 = objc_msgSend(a2, sel_view);
  id v5 = objc_msgSend(a1, sel_view);
  uint64_t v6 = v5;
  if (!v4)
  {
    if (!v5) {
      return 1;
    }
    goto LABEL_8;
  }
  if (!v5)
  {
    uint64_t v6 = v4;
LABEL_8:

    goto LABEL_9;
  }
  sub_1E0E5AAEC();
  id v7 = v4;
  char v8 = sub_1E0ECD6A0();

  if (v8) {
    return 1;
  }
LABEL_9:
  id v9 = objc_msgSend(a2, sel_view);
  if (!v9) {
    return 1;
  }
  uint64_t v10 = v9;
  self;
  BOOL v11 = swift_dynamicCastObjCClass() == 0;

  return v11;
}

uint64_t type metadata accessor for InternalSettingsTapGestureRecognizer()
{
  return self;
}

unint64_t sub_1E0E5AAEC()
{
  unint64_t result = qword_1EAD69870;
  if (!qword_1EAD69870)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD69870);
  }
  return result;
}

void sub_1E0E5AB2C()
{
}

void sub_1E0E5AB88()
{
}

void sub_1E0E5ABE4()
{
}

uint64_t sub_1E0E5AC40()
{
  return 1;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.init()()
{
  return v0;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.featureRegulatoryInfoTransform(onboardingRecord:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v61 = a3;
  uint64_t v9 = type metadata accessor for FeatureRegulatoryInfo(0);
  MEMORY[0x1F4188790](v9, v10);
  objc_super v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E5B290(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v13 - 8, v14);
  double v16 = (char *)&v60 - v15;
  sub_1E0E5B290(0, &qword_1EAD6E830, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  uint64_t v19 = MEMORY[0x1F4188790](v17 - 8, v18);
  uint64_t v80 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v21);
  uint64_t v23 = (char *)&v60 - v22;
  uint64_t v24 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  uint64_t v78 = *(void *)(v24 - 8);
  uint64_t v79 = v24;
  id v26 = (char *)MEMORY[0x1F4188790](v24, v25);
  double v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v76 = v16;
  uint64_t v77 = a4;
  uint64_t v75 = v9;
  if (!a1) {
    goto LABEL_6;
  }
  id v26 = (char *)objc_msgSend(a1, sel_onboardingState);
  if ((unint64_t)(v26 - 3) >= 2)
  {
    if (v26 != (char *)1) {
      goto LABEL_7;
    }
LABEL_6:
    char v30 = (*(uint64_t (**)(char *))(*(void *)v5 + 104))(v26);
    LODWORD(v72) = 0;
    char v31 = v30 ^ 1;
    goto LABEL_11;
  }
  sub_1E0E5B350(v61, (uint64_t)v23);
  uint64_t v29 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v23, 1, v79) == 1)
  {
    sub_1E0E5B3D0((uint64_t)v23);
LABEL_7:
    LODWORD(v72) = 0;
    char v31 = 1;
    goto LABEL_11;
  }
  sub_1E0E5B448((uint64_t)v23, (uint64_t)v28, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  if (v28[*(int *)(v29 + 32)] == 1)
  {
    uint64_t v32 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    LODWORD(v72) = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 24))(ObjectType, v32);
    sub_1E0E5B4B0((uint64_t)v28);
    char v31 = 1;
  }
  else
  {
    sub_1E0E5B4B0((uint64_t)v28);
    char v31 = 1;
    LODWORD(v72) = 1;
  }
LABEL_11:
  PairedDeviceFeatureAttributesProvider.pairedDeviceAttributes.getter(v81);
  uint64_t v34 = v81[0];
  uint64_t v35 = v81[1];
  double v37 = (void *)v81[2];
  uint64_t v36 = v81[3];
  uint64_t v38 = v81[4];
  uint64_t v39 = (void *)v81[5];
  uint64_t v40 = (*(uint64_t (**)(void))(*(void *)v5 + 80))();
  uint64_t v70 = v41;
  uint64_t v71 = v40;
  uint64_t v42 = (*(uint64_t (**)(void))(*(void *)v5 + 88))();
  uint64_t v68 = v43;
  uint64_t v69 = v42;
  uint64_t v73 = v38;
  uint64_t v74 = v34;
  if (v31)
  {
    sub_1E0E1B03C(v34, v35, v37);
    sub_1E0E1B03C(v36, v38, v39);
    uint64_t v66 = v35;
    uint64_t v67 = v34;
    uint64_t v62 = (uint64_t)v37;
    uint64_t v65 = v36;
    uint64_t v64 = v38;
    uint64_t v63 = v39;
    if ((v72 & 1) == 0)
    {
LABEL_13:
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v80, 1, 1, v79);
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v65 = 0;
    uint64_t v64 = 0;
    uint64_t v63 = 0;
    uint64_t v62 = 1;
    if ((v72 & 1) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v44 = sub_1E0E5B350(v61, v80);
LABEL_16:
  id v72 = v39;
  uint64_t v45 = v37;
  uint64_t v46 = v35;
  uint64_t v47 = v77;
  if (v31)
  {
    uint64_t v48 = (uint64_t)v76;
    (*(void (**)(uint64_t))(*(void *)v5 + 96))(v44);
  }
  else
  {
    uint64_t v49 = sub_1E0ECB810();
    uint64_t v48 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v76, 1, 1, v49);
  }
  uint64_t v50 = v75;
  uint64_t v51 = (uint64_t)&v12[*(int *)(v75 + 32)];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v51, 1, 1, v79);
  uint64_t v52 = (uint64_t)&v12[*(int *)(v50 + 36)];
  uint64_t v53 = sub_1E0ECB810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
  uint64_t v54 = v70;
  *(void *)objc_super v12 = v71;
  *((void *)v12 + 1) = v54;
  uint64_t v55 = v68;
  *((void *)v12 + 2) = v69;
  *((void *)v12 + 3) = v55;
  uint64_t v56 = v66;
  *((void *)v12 + 4) = v67;
  *((void *)v12 + 5) = v56;
  uint64_t v57 = v65;
  *((void *)v12 + 6) = v62;
  *((void *)v12 + 7) = v57;
  os_log_type_t v58 = v63;
  *((void *)v12 + 8) = v64;
  *((void *)v12 + 9) = v58;
  v12[80] = v31 & 1;
  sub_1E0E5B2E4(v80, v51, &qword_1EAD6E830, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  sub_1E0E5B2E4(v48, v52, &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
  sub_1E0E5B448((uint64_t)v12, v47, type metadata accessor for FeatureRegulatoryInfo);
  sub_1E0E1B0C8(v74, v46, v45);
  return sub_1E0E1B0C8(v36, v73, v72);
}

void sub_1E0E5B290(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECD6C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E0E5B2E4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1E0E5B290(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0E5B350(uint64_t a1, uint64_t a2)
{
  sub_1E0E5B290(0, &qword_1EAD6E830, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E5B3D0(uint64_t a1)
{
  sub_1E0E5B290(0, &qword_1EAD6E830, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E0E5B448(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E0E5B4B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.deinit()
{
  return v0;
}

uint64_t DefaultFeatureRegulatoryInfoTransformProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1E0E5B524@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DefaultFeatureRegulatoryInfoTransformProvider.featureRegulatoryInfoTransform(onboardingRecord:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FeatureRegulatoryInfoTransformProvider.featureRegulatoryInfoTransform(onboardingRecord:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for DefaultFeatureRegulatoryInfoTransformProvider()
{
  return self;
}

uint64_t method lookup function for DefaultFeatureRegulatoryInfoTransformProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultFeatureRegulatoryInfoTransformProvider);
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.productDisplayName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.IFUURLProductName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.appleSupportURL.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.suppressContentBeforeOnboarding.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DefaultFeatureRegulatoryInfoTransformProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

id BalanceDaySeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BalanceDaySeries.init()()
{
  uint64_t v1 = sub_1E0ECBA40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E0ECBB60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4F27B20], v1);
  uint64_t v11 = v0;
  sub_1E0ECBA50();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[OBJC_IVAR___HKBalanceDaySeries_gregorianCalendar], v10, v6);
  *(void *)&v11[OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics] = sub_1E0ECBDD0();

  objc_super v12 = (objc_class *)type metadata accessor for BalanceDaySeries();
  v14.receiver = v11;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t type metadata accessor for BalanceDaySeries()
{
  uint64_t result = qword_1EAD6ED28;
  if (!qword_1EAD6ED28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E0E5BA68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v121 = a6;
  id v120 = a5;
  uint64_t v104 = a4;
  uint64_t v103 = a3;
  uint64_t v102 = a2;
  swift_getObjectType();
  uint64_t v7 = sub_1E0ECC010();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  MEMORY[0x1F4188790](v118, v12);
  uint64_t v117 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1E0ECB980();
  objc_super v14 = *(char ***)(v116 - 8);
  MEMORY[0x1F4188790](v116, v15);
  v131 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  MEMORY[0x1F4188790](v17 - 8, v18);
  uint64_t v123 = (char *)&v102 - v19;
  uint64_t v20 = sub_1E0ECBDF0();
  uint64_t v109 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20, v21);
  uint64_t v119 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  uint64_t v122 = (char **)((char *)&v102 - v26);
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v29 = (char *)&v102 - v28;
  id v30 = objc_msgSend(a1, sel_chartPoints);
  if (v30
    && (char v31 = v30,
        sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0),
        unint64_t v32 = sub_1E0ECD330(),
        v31,
        unint64_t v33 = sub_1E0E45B04(v32),
        swift_bridgeObjectRelease(),
        v33))
  {
    uint64_t v34 = (char **)MEMORY[0x1E4FBC860];
    uint64_t v145 = MEMORY[0x1E4FBC860];
    uint64_t v106 = v33 & 0xFFFFFFFFFFFFFF8;
    if (v33 >> 62) {
      goto LABEL_43;
    }
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v35)
    {
      unint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v112 = *(void *)(v127 + OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics);
      unint64_t v110 = *(void *)(v112 + 16);
      unint64_t v111 = v33 & 0xC000000000000001;
      unint64_t v105 = v33 + 32;
      uint64_t v136 = v109 + 16;
      uint64_t v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
      v132 = (void (**)(char **, uint64_t, uint64_t))(v109 + 32);
      v138 = (void (**)(char **, uint64_t))(v109 + 8);
      uint64_t v115 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56);
      id v114 = (void (**)(char *, uint64_t))(v14 + 1);
      uint64_t v38 = (uint64_t)v123;
      objc_super v14 = v122;
      unint64_t v108 = v33;
      uint64_t v107 = v35;
      while (1)
      {
        if (v111)
        {
          id v40 = (id)MEMORY[0x1E4E3EF00](v36, v33);
        }
        else
        {
          if (v36 >= *(void *)(v106 + 16)) {
            goto LABEL_42;
          }
          id v40 = *(id *)(v105 + 8 * v36);
        }
        id v135 = v40;
        BOOL v41 = __OFADD__(v36, 1);
        unint64_t v42 = v36 + 1;
        unint64_t v43 = v110;
        if (v41) {
          goto LABEL_41;
        }
        unint64_t v113 = v42;
        unint64_t v144 = (unint64_t)v34;
        if (v110) {
          break;
        }
        unint64_t v39 = (unint64_t)v34;
LABEL_7:
        sub_1E0E4E770(v39);

        unint64_t v36 = v113;
        if (v113 == v35) {
          goto LABEL_44;
        }
      }
      uint64_t v44 = v127 + OBJC_IVAR___HKBalanceSeries_selectedMetric;
      uint64_t v125 = (uint64_t)v135 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_date;
      uint64_t v124 = (uint64_t)v135 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection;
      uint64_t v45 = v109;
      uint64_t v46 = v112 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
      swift_bridgeObjectRetain();
      uint64_t v134 = v44;
      swift_beginAccess();
      uint64_t v133 = *(void *)(v45 + 72);
      v137 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
      unint64_t v33 = v43;
      uint64_t v47 = v126;
      v137(v29, v46, v20);
      while (1)
      {
        sub_1E0DFD6E0(v134, v38);
        if ((*v47)(v38, 1, v20) == 1)
        {
          sub_1E0E5D794(v38);
        }
        else
        {
          (*v132)(v14, v38, v20);
          sub_1E0E6178C((unint64_t *)&unk_1EAD6ED18, MEMORY[0x1E4F65908]);
          char v48 = sub_1E0ECD100();
          uint64_t v49 = *v138;
          (*v138)(v14, v20);
          if ((v48 & 1) == 0)
          {
            v49((char **)v29, v20);
            goto LABEL_16;
          }
        }
        uint64_t v50 = sub_1E0E14F5C();
        if (!*(void *)(v50 + 16) || (unint64_t v51 = sub_1E0E5D90C((uint64_t)v29), (v52 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          (*v138)((char **)v29, v20);
          goto LABEL_16;
        }
        uint64_t v53 = *(void *)(*(void *)(v50 + 56) + 8 * v51);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1E0E5CF70((uint64_t)v29, v125, v131);
        id v54 = objc_msgSend(v120, sel_transform);
        uint64_t v55 = (void *)sub_1E0ECB920();
        objc_msgSend(v54, sel_coordinateForValue_, v55);
        double v57 = v56;

        uint64_t v58 = (uint64_t)v119;
        v137(v119, (uint64_t)v29, v20);
        id v59 = v121;
        uint64_t v60 = v37;
        uint64_t v61 = sub_1E0E60DAC(v53, v59);
        uint64_t v130 = v60;
        swift_bridgeObjectRelease();

        uint64_t v62 = MEMORY[0x1E4FBC868];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v140 = v62;
        sub_1E0E5F4CC(v61, v58, isUniquelyReferenced_nonNull_native);
        uint64_t v129 = v140;
        swift_bridgeObjectRelease();
        uint64_t v64 = *v138;
        (*v138)((char **)v58, v20);
        sub_1E0E154E0();
        uint64_t v34 = (char **)objc_msgSend(v59, sel_transform);
        uint64_t v65 = (void *)sub_1E0ECBD90();
        objc_super v14 = &selRef_bottomPadding;
        objc_msgSend(v34, sel_coordinateForValue_, v65);
        double v67 = v66;

        uint64_t v68 = (void *)sub_1E0ECBD90();
        objc_msgSend(v34, sel_coordinateForValue_, v68);
        double v70 = v69;

        if (v67 > v70) {
          break;
        }
        uint64_t v71 = *(void *)(sub_1E0E155E0() + 16);
        uint64_t v128 = (void (*)(char *, uint64_t))v64;
        if (v71 && (sub_1E0E5D90C((uint64_t)v29), (v72 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          id v73 = objc_msgSend(v59, sel_transform);
          uint64_t v74 = (void *)sub_1E0ECBD90();
          uint64_t v34 = &selRef_bottomPadding;
          objc_msgSend(v73, sel_coordinateForValue_, v74);
          double v76 = v75;

          uint64_t v77 = (void *)sub_1E0ECBD90();
          objc_msgSend(v73, sel_coordinateForValue_, v77);
          double v79 = v78;

          if (v76 > v79) {
            goto LABEL_40;
          }
          char v80 = 0;
          unint64_t v81 = *(void *)&v76;
          uint64_t v82 = *(void *)&v79;
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v81 = 0;
          uint64_t v82 = 0;
          char v80 = 1;
        }
        sub_1E0E13A18(v124, (uint64_t)&v140);
        uint64_t v83 = (uint64_t)v117;
        v137(v117, (uint64_t)v29, v20);
        (*v115)(v83, 0, 1, v20);
        *(unsigned char *)(v83 + *(int *)(v118 + 20)) = 0;
        uint64_t v84 = (objc_class *)type metadata accessor for BalanceCoordinateInfo(0);
        id v85 = objc_allocWithZone(v84);
        sub_1E0E13A18((uint64_t)&v140, (uint64_t)v85 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection);
        sub_1E0E28120(v83, (uint64_t)v85 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context);
        v139.receiver = v85;
        v139.super_class = v84;
        id v86 = objc_msgSendSuper2(&v139, sel_init);
        sub_1E0E28184(v83);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v140);
        id v87 = objc_allocWithZone((Class)type metadata accessor for BalanceCoordinate());
        id v88 = sub_1E0E90920(v129, v81, v82, v80, (uint64_t)v86, v57, v67, v70);

        id v89 = v88;
        MEMORY[0x1E4E3E9E0]();
        if (*(void *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E0ECD350();
        }
        sub_1E0ECD370();
        sub_1E0ECD340();

        (*v114)(v131, v116);
        v128(v29, v20);
        uint64_t v38 = (uint64_t)v123;
        objc_super v14 = v122;
        uint64_t v37 = v130;
        uint64_t v47 = v126;
LABEL_16:
        v46 += v133;
        if (!--v33)
        {
          swift_bridgeObjectRelease();
          unint64_t v39 = v144;
          unint64_t v33 = v108;
          uint64_t v34 = (char **)MEMORY[0x1E4FBC860];
          uint64_t v35 = v107;
          goto LABEL_7;
        }
        v137(v29, v46, v20);
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1E0ECD910();
      swift_bridgeObjectRelease();
    }
LABEL_44:
    swift_bridgeObjectRelease();
    sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    swift_bridgeObjectRetain();
    unint64_t v99 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    unint64_t v100 = self;
    uint64_t v140 = v102;
    uint64_t v141 = v103;
    uint64_t v142 = v104;
    id v101 = objc_msgSend(v100, sel_coordinateListWithCoordinates_blockPath_, v99, &v140);

    if (v101) {
      swift_bridgeObjectRelease();
    }
    else {
      __break(1u);
    }
  }
  else
  {
    sub_1E0ECBFD0();
    v90 = sub_1E0ECBFF0();
    os_log_type_t v91 = sub_1E0ECD520();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      uint64_t v140 = v93;
      *(_DWORD *)uint64_t v92 = 136446210;
      uint64_t v94 = sub_1E0ECDBC0();
      uint64_t v143 = sub_1E0DED7E4(v94, v95, &v140);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v90, v91, "[%{public}s] Unable to create coordinates from unsupported chart points", v92, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v93, -1, -1);
      MEMORY[0x1E4E41080](v92, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    unsigned int v96 = (void *)sub_1E0ECD320();
    unsigned int v97 = self;
    uint64_t v140 = v102;
    uint64_t v141 = v103;
    uint64_t v142 = v104;
    id v98 = objc_msgSend(v97, sel_coordinateListWithCoordinates_blockPath_, v96, &v140);

    if (!v98)
    {
      __break(1u);
      goto LABEL_44;
    }
  }
}

uint64_t sub_1E0E5C970(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, char a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25)
{
  if (!result) {
    return result;
  }
  uint64_t v37 = a23;
  type metadata accessor for BalanceCoordinate();
  uint64_t result = swift_dynamicCastClass();
  if (!result) {
    return result;
  }
  uint64_t v38 = result;
  double v39 = *(double *)(result + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
  swift_unknownObjectRetain();
  v66.origin.CGFloat x = a6;
  v66.origin.CGFloat y = a7;
  v66.size.CGFloat width = a8;
  v66.size.CGFloat height = a9;
  if (CGRectGetMinX(v66) - a10 <= v39)
  {
    v67.origin.CGFloat x = a6;
    v67.origin.CGFloat y = a7;
    v67.size.CGFloat width = a8;
    v67.size.CGFloat height = a9;
    if (v39 <= CGRectGetMaxX(v67) + a10)
    {
      id v40 = (double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
      if ((*(unsigned char *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16) & 1) == 0)
      {
        double v57 = *v40;
        double v58 = v40[1];
        double v41 = *v40 - a10 * 0.5;
        id v56 = self;
        id v42 = objc_msgSend(v56, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a10 * 0.5, v41, a10, a10 * 0.5 + v58 - v41, a10 * 0.5);
        objc_msgSend(a15, sel_appendPath_, v42);

        uint64_t v37 = a23;
        id v43 = objc_msgSend(v56, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a11 * 0.5, v57 - a11 * 0.5, a11, a11 * 0.5 + v58 - (v57 - a11 * 0.5));
        objc_msgSend(a17, sel_appendPath_, v43);
      }
      if ((*(unsigned char *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange + 16) & 1) == 0)
      {
        float64x2_t v59 = *(float64x2_t *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange);
        sub_1E0E6184C(a19, (uint64_t)v63);
        if ((v64 & 1) == 0)
        {
          v62[0] = a2;
          v62[1] = a3;
          v62[2] = a4;
          v62[3] = a5;
          v61[0] = v63[0];
          v61[1] = v63[1];
          v61[2] = v63[2];
          v61[3] = v63[3];
          if (!HKGraphSeriesDataPointPathInRangeInclusive(v62, (uint64_t *)v61)) {
            goto LABEL_16;
          }
        }
        if (a18)
        {
          uint64_t v44 = (const double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
          float64x2_t v45 = vld1q_dup_f64(v44++);
          float64x2_t v46 = vld1q_dup_f64(v44);
          char v47 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vcgeq_f64(v46, v59), (int32x4_t)vcgeq_f64(v59, v45))), 0xFuLL)));
          char v48 = self;
          id v49 = objc_msgSend(v48, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a10 * 0.5, v59.f64[0] - a10 * 0.5, a10, a10 * 0.5 + v59.f64[1] - (v59.f64[0] - a10 * 0.5), a10 * 0.5);
          double v50 = v59.f64[0] - a12 * 0.5;
          double v51 = a12 * 0.5 + v59.f64[1] - v50;
          if ((v47 & 1) == 0)
          {
            objc_msgSend(a22, sel_appendPath_, v49);

            id v52 = objc_msgSend(v48, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a12 * 0.5, v50, a12, v51, a12 * 0.5);
            objc_msgSend(v37, sel_appendPath_, v52);
LABEL_26:

            return swift_unknownObjectRelease();
          }
          objc_msgSend(a20, sel_appendPath_, v49);

          id v52 = objc_msgSend(v48, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a12 * 0.5, v50, a12, v51, a12 * 0.5);
          a24 = a21;
        }
        else
        {
LABEL_16:
          double v53 = *(double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
          double v60 = *(double *)(v38 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
          id v52 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v39 - a10 * 0.5, v59.f64[0] - a10 * 0.5, a10, a10 * 0.5 + v59.f64[1] - (v59.f64[0] - a10 * 0.5), a10 * 0.5);
          if (v53 > v59.f64[0] || v59.f64[0] > v60 || (v53 <= v59.f64[1] ? (BOOL v54 = v59.f64[1] > v60) : (BOOL v54 = 1), v54)) {
            a24 = a25;
          }
        }
        objc_msgSend(a24, sel_appendPath_, v52);
        goto LABEL_26;
      }
    }
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1E0E5CF5C()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics) + 16);
}

void sub_1E0E5CF70(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v65 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1E0ECBDF0();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  uint64_t v9 = MEMORY[0x1F4188790](v7, v8);
  double v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v61 = (char *)&v52 - v12;
  uint64_t v13 = sub_1E0ECC010();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x1F4188790](v13, v14);
  char v64 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1E0ECB980();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)&v52 - v23;
  uint64_t v25 = *(void *)(v4 + OBJC_IVAR___HKBalanceDaySeries_sleepingMetrics);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1E0E5D53C(a1, v25);
  char v28 = v27;
  swift_bridgeObjectRelease();
  if (v28)
  {
    sub_1E0ECBFD0();
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v34(v21, a2, v16);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
    v35(v61, a1, v63);
    unint64_t v36 = sub_1E0ECBFF0();
    os_log_type_t v37 = sub_1E0ECD520();
    int v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v56 = a2;
      int v54 = v38;
      uint64_t v40 = v39;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v67 = v55;
      *(_DWORD *)uint64_t v40 = 136446722;
      os_log_t v53 = v36;
      uint64_t v41 = sub_1E0ECDBC0();
      id v42 = (void (*)(char *, char *, uint64_t))v35;
      uint64_t v66 = sub_1E0DED7E4(v41, v43, &v67);
      uint64_t ObjectType = (uint64_t)v34;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      sub_1E0E6178C((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
      uint64_t v44 = sub_1E0ECD9B0();
      uint64_t v66 = sub_1E0DED7E4(v44, v45, &v67);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      *(_WORD *)(v40 + 22) = 2082;
      float64x2_t v46 = v61;
      uint64_t v47 = v63;
      v42(v58, v61, v63);
      uint64_t v48 = sub_1E0ECD200();
      uint64_t v66 = sub_1E0DED7E4(v48, v49, &v67);
      uint64_t v34 = (void (*)(char *, uint64_t, uint64_t))ObjectType;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v47);
      os_log_t v50 = v53;
      _os_log_impl(&dword_1E0B26000, v53, (os_log_type_t)v54, "[%{public}s] cannot determine position for date %{public}s metric %{public}s", (uint8_t *)v40, 0x20u);
      uint64_t v51 = v55;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v51, -1, -1);
      a2 = v56;
      MEMORY[0x1E4E41080](v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v64, v60);
    v34(v65, a2, v16);
  }
  else
  {
    uint64_t v29 = self;
    uint64_t v30 = *(void *)(v25 + 16);
    sub_1E0ECBA70();
    char v31 = (void *)sub_1E0ECB920();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    unint64_t v32 = (void *)sub_1E0ECBB00();
    id v33 = objc_msgSend(v29, sel_datePositionForCategoryIndex_categoryCount_startDate_calendar_, v26, v30, v31, v32);

    sub_1E0ECB940();
  }
}

uint64_t sub_1E0E5D53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(sub_1E0ECBDF0() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_1E0E6178C((unint64_t *)&unk_1EAD6ED18, MEMORY[0x1E4F65908]);
  uint64_t v7 = 0;
  while ((sub_1E0ECD100() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_1E0E5D660()
{
  uint64_t v1 = v0 + OBJC_IVAR___HKBalanceDaySeries_gregorianCalendar;
  uint64_t v2 = sub_1E0ECBB60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease();
}

id BalanceDaySeries.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceDaySeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E5D794(uint64_t a1)
{
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E0E5D80C(uint64_t a1, uint64_t a2)
{
  sub_1E0ECDA50();
  sub_1E0ECD220();
  uint64_t v4 = sub_1E0ECDA70();
  return sub_1E0E5F938(a1, a2, v4);
}

unint64_t sub_1E0E5D884(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECDA40();
  return sub_1E0E5FA1C(a1, v2);
}

unint64_t sub_1E0E5D8C8(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECD690();
  return sub_1E0E5FAB8(a1, v2);
}

unint64_t sub_1E0E5D90C(uint64_t a1)
{
  sub_1E0ECBDF0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F65908];
  sub_1E0E6178C((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
  uint64_t v3 = sub_1E0ECD050();
  return sub_1E0E5FD4C(a1, v3, MEMORY[0x1E4F65908], (unint64_t *)&unk_1EAD6ED18, v2, MEMORY[0x1E4F65918]);
}

unint64_t sub_1E0E5D9E0(uint64_t a1)
{
  sub_1E0ECD1D0();
  sub_1E0ECDA50();
  sub_1E0ECD220();
  uint64_t v2 = sub_1E0ECDA70();
  swift_bridgeObjectRelease();
  return sub_1E0E5FBD4(a1, v2);
}

unint64_t sub_1E0E5DA74(uint64_t a1)
{
  sub_1E0ECBEA0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F65950];
  sub_1E0E6178C(&qword_1EAD6ED58, MEMORY[0x1E4F65950]);
  uint64_t v3 = sub_1E0ECD050();
  return sub_1E0E5FD4C(a1, v3, MEMORY[0x1E4F65950], (unint64_t *)&qword_1EAD6ED60, v2, MEMORY[0x1E4F65960]);
}

uint64_t sub_1E0E5DB48(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1E0E40F18();
  uint64_t v6 = sub_1E0ECD930();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1E0DEDF98(v24, v35);
      }
      else
      {
        sub_1E0DEDFA8((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1E0ECDA50();
      sub_1E0ECD220();
      uint64_t result = sub_1E0ECDA70();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1E0DEDF98(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1E0E5DE44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1E0E40F84();
  uint64_t result = sub_1E0ECD930();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1E0ECDA40();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1E0E5E0F8(uint64_t a1, int a2)
{
  return sub_1E0E5EC30(a1, a2, (unint64_t *)&qword_1EAD6EDB0, &qword_1EAD6E9C0);
}

uint64_t sub_1E0E5E114(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1E0ECBDF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1E0E40B98();
  int v48 = a2;
  uint64_t v11 = sub_1E0ECD930();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    uint64_t v44 = v2;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    float64x2_t v46 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v45 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    unint64_t v49 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v50 = v5;
    uint64_t v17 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    while (1)
    {
      if (v16)
      {
        unint64_t v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v23 = v22 | (v19 << 6);
      }
      else
      {
        int64_t v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v45) {
          goto LABEL_34;
        }
        unint64_t v25 = v46[v24];
        ++v19;
        if (!v25)
        {
          int64_t v19 = v24 + 1;
          if (v24 + 1 >= v45) {
            goto LABEL_34;
          }
          unint64_t v25 = v46[v19];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v45)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v44;
              if (v48)
              {
                uint64_t v42 = 1 << *(unsigned char *)(v10 + 32);
                if (v42 >= 64) {
                  bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *float64x2_t v46 = -1 << v42;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v46[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v19 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v19 >= v45) {
                  goto LABEL_34;
                }
                unint64_t v25 = v46[v19];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v26;
          }
        }
LABEL_21:
        unint64_t v16 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      uint64_t v27 = v10;
      uint64_t v28 = *(void *)(v10 + 48);
      uint64_t v29 = v6;
      uint64_t v30 = *(void *)(v6 + 72);
      uint64_t v31 = v28 + v30 * v23;
      if (v48) {
        (*v49)(v9, v31, v50);
      }
      else {
        (*v47)(v9, v31, v50);
      }
      uint64_t v32 = (uint64_t *)(*(void *)(v27 + 56) + 16 * v23);
      uint64_t v34 = *v32;
      uint64_t v33 = v32[1];
      sub_1E0E6178C((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
      uint64_t result = sub_1E0ECD050();
      uint64_t v35 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v36 = result & ~v35;
      unint64_t v37 = v36 >> 6;
      if (((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v38 = 0;
        unint64_t v39 = (unint64_t)(63 - v35) >> 6;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v40 = v37 == v39;
          if (v37 == v39) {
            unint64_t v37 = 0;
          }
          v38 |= v40;
          uint64_t v41 = *(void *)(v17 + 8 * v37);
        }
        while (v41 == -1);
        unint64_t v20 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v49)(*(void *)(v12 + 48) + v30 * v20, v9, v50);
      int64_t v21 = (void *)(*(void *)(v12 + 56) + 16 * v20);
      *int64_t v21 = v34;
      v21[1] = v33;
      ++*(void *)(v12 + 16);
      uint64_t v6 = v29;
      uint64_t v10 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1E0E5E540(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1E0E505CC();
  uint64_t v6 = sub_1E0ECD930();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1E0ECD690();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1E0E5E810(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1E0ECBEA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1E0E616F0();
  int v43 = a2;
  uint64_t v11 = sub_1E0ECD930();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    char v38 = v2;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    BOOL v40 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v39 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v17 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    uint64_t v45 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v16)
      {
        unint64_t v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v22 = v21 | (v19 << 6);
      }
      else
      {
        int64_t v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v39) {
          goto LABEL_34;
        }
        unint64_t v24 = v40[v23];
        ++v19;
        if (!v24)
        {
          int64_t v19 = v23 + 1;
          if (v23 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v24 = v40[v19];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v43)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v10 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v40 = -1 << v37;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v40[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v19 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v19 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v24 = v40[v19];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v25;
          }
        }
LABEL_21:
        unint64_t v16 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      uint64_t v26 = *(void *)(v6 + 72);
      unint64_t v27 = *(void *)(v10 + 48) + v26 * v22;
      if (v43) {
        (*v44)(v9, v27, v45);
      }
      else {
        (*v41)(v9, v27, v45);
      }
      uint64_t v28 = v10;
      uint64_t v29 = *(void *)(*(void *)(v10 + 56) + 8 * v22);
      sub_1E0E6178C(&qword_1EAD6ED58, MEMORY[0x1E4F65950]);
      uint64_t result = sub_1E0ECD050();
      uint64_t v30 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v17 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v31) & ~*(void *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v17 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v20 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v44)(*(void *)(v12 + 48) + v26 * v20, v9, v45);
      *(void *)(*(void *)(v12 + 56) + 8 * v20) = v29;
      ++*(void *)(v12 + 16);
      uint64_t v10 = v28;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1E0E5EC30(uint64_t a1, int a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v7 = v4;
  uint64_t v9 = sub_1E0ECBDF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v4;
  sub_1E0E6199C(0, a3, a4);
  int v51 = a2;
  uint64_t v15 = sub_1E0ECD930();
  uint64_t v16 = v14;
  uint64_t v17 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v18 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 64);
  uint64_t v47 = (void *)(v14 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  uint64_t v45 = v7;
  int64_t v46 = (unint64_t)(v18 + 63) >> 6;
  int v48 = (void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  uint64_t v50 = v10;
  unint64_t v22 = (void (**)(char *, unint64_t, uint64_t))(v10 + 32);
  uint64_t v23 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v25 = 0;
  for (i = v16; ; uint64_t v16 = i)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v25 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v46) {
      break;
    }
    uint64_t v30 = v47;
    unint64_t v31 = v47[v29];
    ++v25;
    if (!v31)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v31 = v47[v25];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v45;
          if ((v51 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v47[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v25 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v25 >= v46) {
              goto LABEL_34;
            }
            unint64_t v31 = v47[v25];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v25 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_22:
    uint64_t v33 = *(void *)(v50 + 72);
    unint64_t v34 = *(void *)(v16 + 48) + v33 * v28;
    if (v51)
    {
      (*v22)(v13, v34, v9);
      uint64_t v35 = *(void *)(*(void *)(v16 + 56) + 8 * v28);
    }
    else
    {
      (*v48)(v13, v34, v9);
      uint64_t v35 = *(void *)(*(void *)(v16 + 56) + 8 * v28);
      swift_bridgeObjectRetain();
    }
    sub_1E0E6178C((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
    uint64_t result = sub_1E0ECD050();
    uint64_t v36 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v23 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v37) & ~*(void *)(v23 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v23 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v26 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v23 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v22)(*(void *)(v17 + 48) + v33 * v26, v13, v9);
    *(void *)(*(void *)(v17 + 56) + 8 * v26) = v35;
    ++*(void *)(v17 + 16);
  }
  swift_release();
  uint64_t v7 = v45;
  uint64_t v30 = v47;
  if ((v51 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v16 + 32);
  if (v43 >= 64) {
    bzero(v30, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v30 = -1 << v43;
  }
  *(void *)(v16 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v17;
  return result;
}

uint64_t sub_1E0E5F06C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1E0E40A14();
  char v38 = a2;
  uint64_t v6 = sub_1E0ECD930();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    int64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1E0ECDA50();
    sub_1E0ECD220();
    uint64_t result = sub_1E0ECDA70();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_1E0E5F378(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1E0E5D80C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1E0E5FEEC();
      goto LABEL_7;
    }
    sub_1E0E5DB48(v15, a4 & 1);
    unint64_t v21 = sub_1E0E5D80C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1E0ECDA30();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_1E0DEDF98(a1, v19);
  }
LABEL_13:
  sub_1E0E5F814(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1E0E5F4CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1E0ECBDF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v15 = sub_1E0E5D90C(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v21 = *v4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1E0E60954((unint64_t *)&qword_1EAD6F340, (unint64_t *)&unk_1EAD6EDA0);
    goto LABEL_7;
  }
  sub_1E0E5EC30(v18, a3 & 1, (unint64_t *)&qword_1EAD6F340, (unint64_t *)&unk_1EAD6EDA0);
  unint64_t v24 = sub_1E0E5D90C(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1E0ECDA30();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  unint64_t v21 = *v4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_1E0E5F880(v15, (uint64_t)v12, a1, v21);
}

void sub_1E0E5F6A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1E0E5D80C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1E0E60BFC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1E0E5F06C(v15, a4 & 1);
  unint64_t v20 = sub_1E0E5D80C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1E0ECDA30();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;
  swift_bridgeObjectRetain();
}

_OWORD *sub_1E0E5F814(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1E0DEDF98(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1E0E5F880(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1E0ECBDF0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1E0E5F938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1E0ECD9E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1E0ECD9E0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1E0E5FA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1E0E5FAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6D9E0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1E0ECD6A0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1E0ECD6A0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1E0E5FBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1E0ECD1D0();
    uint64_t v8 = v7;
    if (v6 == sub_1E0ECD1D0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1E0ECD9E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1E0ECD1D0();
          uint64_t v15 = v14;
          if (v13 == sub_1E0ECD1D0() && v15 == v16) {
            break;
          }
          char v18 = sub_1E0ECD9E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1E0E5FD4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  BOOL v24 = a4;
  v22[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v23 = v6;
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  v22[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    char v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v17 = v9 + 16;
    uint64_t v16 = v18;
    uint64_t v19 = *(void *)(v17 + 56);
    do
    {
      v16(v12, *(void *)(v23 + 48) + v19 * v14, v8);
      sub_1E0E6178C(v24, v25);
      char v20 = sub_1E0ECD100();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v12, v8);
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v22[0] + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

void *sub_1E0E5FEEC()
{
  uint64_t v1 = v0;
  sub_1E0E40F18();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E0ECD920();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1E0DEDFA8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = v19;
    v21[1] = v18;
    sub_1E0DEDF98(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1E0E600D0()
{
  uint64_t v1 = v0;
  sub_1E0E40F84();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E0ECD920();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1E0E60270()
{
  return sub_1E0E60954((unint64_t *)&qword_1EAD6EDB0, &qword_1EAD6E9C0);
}

void *sub_1E0E6028C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBDF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E40B98();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1E0ECD920();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v26 = v1;
  unint64_t result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    unint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  uint64_t v27 = v7 + 64;
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v13);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v18 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    uint64_t v20 = 16 * v18;
    unint64_t v21 = *(void *)(v9 + 48) + v19;
    int64_t v22 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v30 = *(_OWORD *)(*(void *)(v7 + 56) + v20);
    unint64_t result = (void *)v22(v21, v6, v2);
    *(_OWORD *)(*(void *)(v9 + 56) + v20) = v30;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v13 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v13);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1E0E60524()
{
  uint64_t v1 = v0;
  sub_1E0E505CC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E0ECD920();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    unint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1E0E606C8()
{
  uint64_t v1 = sub_1E0ECBEA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E616F0();
  int64_t v25 = v0;
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1E0ECD920();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v25 = v8;
    return result;
  }
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v26 = v6 + 64;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  uint64_t v29 = v2 + 16;
  int64_t v27 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v28 = v2 + 32;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v12);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(void *)(v6 + 48) + v18, v1);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v6 + 56) + v19);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v8 + 48) + v18, v5, v1);
    *(void *)(*(void *)(v8 + 56) + v19) = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v27) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v27) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1E0E60954(unint64_t *a1, unint64_t *a2)
{
  uint64_t v5 = sub_1E0ECBDF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  int64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6199C(0, a1, a2);
  uint64_t v29 = v2;
  uint64_t v10 = *v2;
  uint64_t v11 = sub_1E0ECD920();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v29 = v12;
    return result;
  }
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  uint64_t v30 = v10 + 64;
  int64_t v31 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v32 = v6 + 32;
  uint64_t v33 = v6 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v31) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v30 + 8 * v25);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v25 + 1;
      if (v25 + 1 >= v31) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v30 + 8 * v16);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v21 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_12:
    unint64_t v22 = *(void *)(v6 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, *(void *)(v10 + 48) + v22, v5);
    uint64_t v23 = 8 * v21;
    uint64_t v24 = *(void *)(*(void *)(v10 + 56) + 8 * v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v12 + 48) + v22, v9, v5);
    *(void *)(*(void *)(v12 + 56) + v23) = v24;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v31) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v30 + 8 * v27);
  if (v26)
  {
    int64_t v16 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v16 >= v31) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v30 + 8 * v16);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1E0E60BFC()
{
  uint64_t v1 = v0;
  sub_1E0E40A14();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1E0ECD920();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1E0E60DAC(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1E0DEEB54(0, v2, 0);
    uint64_t v3 = v14;
    uint64_t v6 = a1 + 32;
    do
    {
      id v7 = objc_msgSend(a2, sel_transform);
      uint64_t v8 = (void *)sub_1E0ECBD90();
      objc_msgSend(v7, sel_coordinateForValue_, v8);
      uint64_t v10 = v9;

      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1E0DEEB54(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(void *)(v14 + 8 * v12 + 32) = v10;
      v6 += 8;
      --v2;
    }
    while (v2);
  }
  return v3;
}

void sub_1E0E60ED8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t *a7, uint64_t a8, void *a9)
{
  uint64_t v10 = v9;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))a7[2];
  uint64_t v62 = a7[1];
  uint64_t v63 = *a7;
  uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a7[4];
  uint64_t v61 = (void *)a7[3];
  uint64_t v59 = a7[5];
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  unsigned int v21 = objc_msgSend(v10, sel_allowsSelection);
  if (objc_msgSend(a9, sel_seriesDrawingDuringTiling))
  {
    long long v22 = 0uLL;
    int v23 = 1;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    long long v26 = 0uLL;
  }
  else
  {
    int64_t v27 = *(os_unfair_lock_s **)&v10[OBJC_IVAR___HKBalanceSeries_lollipopPathRangeLock];
    uint64_t v28 = (uint64_t)&v27[4];
    uint64_t v29 = v27 + 21;
    os_unfair_lock_lock(v27 + 21);
    sub_1E0E72200(v28, (uint64_t)&v80);
    os_unfair_lock_unlock(v29);
    long long v22 = v80;
    long long v24 = v81;
    long long v25 = v82;
    long long v26 = v83;
    int v23 = v84;
  }
  HIDWORD(v56) = v23;
  long long v80 = v22;
  long long v81 = v24;
  long long v82 = v25;
  long long v83 = v26;
  unsigned __int8 v84 = v23;
  double v30 = sub_1E0E720FC(a2, a3, a4, a5);
  uint64_t v31 = swift_allocObject();
  *(CGFloat *)(v31 + 16) = a2;
  *(CGFloat *)(v31 + 24) = a3;
  *(CGFloat *)(v31 + 32) = a4;
  *(CGFloat *)(v31 + 40) = a5;
  *(double *)(v31 + 48) = v30;
  *(void *)(v31 + 56) = v19;
  *(void *)(v31 + 64) = v10;
  *(void *)(v31 + 72) = v20;
  *(double *)(v31 + 80) = v30 * 0.7;
  *(unsigned char *)(v31 + 88) = v21;
  sub_1E0E6184C((uint64_t)&v80, v31 + 96);
  *(void *)(v31 + 168) = v17;
  *(void *)(v31 + 176) = v18;
  *(double *)(v31 + 184) = v30 * 0.5;
  LODWORD(v56) = v21;
  *(void *)(v31 + 192) = v70;
  *(void *)(v31 + 200) = v68;
  *(void *)(v31 + 208) = v57;
  *(void *)(v31 + 216) = v58;
  double v78 = sub_1E0E61920;
  uint64_t v79 = v31;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v75 = 1107296256;
  double v76 = sub_1E0E3D108;
  uint64_t v77 = &block_descriptor_11;
  uint64_t v32 = _Block_copy(&aBlock);
  id v66 = v19;
  v10;
  id v33 = v20;
  id v73 = v17;
  id v72 = v18;
  id v71 = v70;
  id v69 = v68;
  id v34 = v57;
  id v35 = v58;
  swift_release();
  uint64_t aBlock = v63;
  uint64_t v75 = v62;
  double v76 = v16;
  uint64_t v77 = v61;
  double v78 = v60;
  uint64_t v79 = v59;
  objc_msgSend(a1, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v32);
  _Block_release(v32);
  char v36 = BYTE4(v56) & v21;
  if (BYTE4(v56) & v21) {
    id v37 = sub_1E0E71F2C();
  }
  else {
    id v37 = sub_1E0E71F84();
  }
  char v38 = v37;
  id v65 = v35;
  if (objc_msgSend(v34, sel_isEmpty, v56))
  {

    if ((v36 & 1) == 0)
    {
LABEL_9:
      id v39 = sub_1E0E71FB0();
      goto LABEL_12;
    }
  }
  else
  {
    id v40 = objc_msgSend(v34, sel_CGPath);
    objc_msgSend(v38, sel_renderPath_context_axisRect_alpha_, v40, a8, a2, a3, a4, a5, 1.0);

    id v35 = v65;
    if ((v36 & 1) == 0) {
      goto LABEL_9;
    }
  }
  id v39 = sub_1E0E71F58();
LABEL_12:
  BOOL v41 = v39;
  if (!objc_msgSend(v35, sel_isEmpty))
  {
    id v42 = objc_msgSend(v35, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v41, sel_renderPath_context_axisRect_alpha_, v42, a8, a2, a3, a4, a5, 1.0);

    BOOL v41 = v42;
  }

  id v43 = sub_1E0E71F2C();
  if ((objc_msgSend(v73, sel_isEmpty) & 1) == 0)
  {
    id v44 = objc_msgSend(v73, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v43, sel_renderPath_context_axisRect_alpha_, v44, a8, a2, a3, a4, a5, 1.0);

    id v43 = v44;
  }

  id v45 = sub_1E0E71E7C();
  if ((objc_msgSend(v72, sel_isEmpty) & 1) == 0)
  {
    id v46 = objc_msgSend(v72, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v45, sel_renderPath_context_axisRect_alpha_, v46, a8, a2, a3, a4, a5, 1.0);

    id v45 = v46;
  }

  id v47 = sub_1E0E71F58();
  if ((objc_msgSend(v71, sel_isEmpty) & 1) == 0)
  {
    id v48 = objc_msgSend(v71, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v47, sel_renderPath_context_axisRect_alpha_, v48, a8, a2, a3, a4, a5, 1.0);

    id v47 = v48;
  }

  id v49 = sub_1E0E71E7C();
  if ((objc_msgSend(v69, sel_isEmpty) & 1) == 0)
  {
    id v50 = objc_msgSend(v69, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v49, sel_renderPath_context_axisRect_alpha_, v50, a8, a2, a3, a4, a5, 1.0);

    id v49 = v50;
  }
  int v51 = v66;

  id v52 = sub_1E0E71FDC();
  if ((objc_msgSend(v66, sel_isEmpty) & 1) == 0)
  {
    id v53 = objc_msgSend(v66, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v52, sel_renderPath_context_axisRect_alpha_, v53, a8, a2, a3, a4, a5, 1.0);

    id v52 = v53;
    int v51 = v66;
  }

  id v54 = sub_1E0E72008();
  if ((objc_msgSend(v33, sel_isEmpty) & 1) == 0)
  {
    id v55 = objc_msgSend(v33, (SEL)&selRef__averageSectionFromAudiogram_);
    objc_msgSend(v54, sel_renderPath_context_axisRect_alpha_, v55, a8, a2, a3, a4, a5, 1.0);

    id v33 = v54;
    id v54 = v55;
  }
}

uint64_t sub_1E0E61634()
{
  return type metadata accessor for BalanceDaySeries();
}

uint64_t sub_1E0E6163C()
{
  uint64_t result = sub_1E0ECBB60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BalanceDaySeries(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BalanceDaySeries);
}

void sub_1E0E616F0()
{
  if (!qword_1EAD6ED50)
  {
    sub_1E0ECBEA0();
    sub_1E0E6178C(&qword_1EAD6ED58, MEMORY[0x1E4F65950]);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6ED50);
    }
  }
}

uint64_t sub_1E0E6178C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0E617D4()
{
  return MEMORY[0x1F4186498](v0, 224, 7);
}

uint64_t sub_1E0E6184C(uint64_t a1, uint64_t a2)
{
  sub_1E0E618CC(0, (unint64_t *)&unk_1EAD6ED70, type metadata accessor for HKGraphSeriesDataPointPathRange);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1E0E618CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECD6C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E0E61920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1E0E5C970(a1, a2, a3, a4, a5, *(CGFloat *)(v7 + 16), *(CGFloat *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(double *)(v7 + 48), *(double *)(v7 + 80), *(double *)(v7 + 184), a6, a7, *(void **)(v7 + 56), *(void *)(v7 + 64), *(void **)(v7 + 72), *(unsigned char *)(v7 + 88), v7 + 96,
           *(void **)(v7 + 168),
           *(void **)(v7 + 176),
           *(void **)(v7 + 192),
           *(void **)(v7 + 200),
           *(void **)(v7 + 208),
           *(void **)(v7 + 216));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

void sub_1E0E6199C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1E0ECBDF0();
    sub_1E0E40D0C(255, a3);
    sub_1E0E6178C((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
    unint64_t v5 = sub_1E0ECD950();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1E0E61A58()
{
  v1[7] = v0;
  sub_1E0ECD3B0();
  v1[8] = sub_1E0ECD3A0();
  uint64_t v3 = sub_1E0ECD390();
  v1[9] = v3;
  v1[10] = v2;
  return MEMORY[0x1F4188298](sub_1E0E61AF0, v3, v2);
}

uint64_t sub_1E0E61AF0()
{
  id v1 = objc_msgSend(*(id *)(v0[7] + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_context), sel_wrappedFlowManager);
  sub_1E0ECD760();
  swift_unknownObjectRelease();
  type metadata accessor for ClinicalAuthorizationFlowManager();
  swift_dynamicCast();
  v0[11] = v0[6];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1E0E61BF4;
  return sub_1E0E0D0B0();
}

uint64_t sub_1E0E61BF4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 88);
  *(void *)(*v1 + 104) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v5 = *(void *)(v2 + 72);
  return MEMORY[0x1F4188298](sub_1E0E61D3C, v5, v4);
}

uint64_t sub_1E0E61D3C()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[13];
  swift_release();
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t)sub_1E0E63C6C(v6, (void (*)(void *, uint64_t, unint64_t))sub_1E0E65854);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = v2;
  sub_1E0E63BD8(&v7);
  uint64_t v3 = v0[7];
  swift_bridgeObjectRelease();
  *(void *)(v3 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts) = v7;
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1E0E61E50(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1E0ECB810();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v10 = a2;
    if (qword_1EAD6D4F0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1E0ECC010();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EAD74168);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a3, v5);
    id v12 = a2;
    id v13 = a2;
    uint64_t v14 = sub_1E0ECBFF0();
    os_log_type_t v15 = sub_1E0ECD520();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      long long v25 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v27 = type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
      sub_1E0E66D2C();
      uint64_t v17 = sub_1E0ECD200();
      uint64_t v27 = sub_1E0DED7E4(v17, v18, &v28);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_1E0E66D64(&qword_1EAD6EEB8, MEMORY[0x1E4F276F0]);
      uint64_t v19 = sub_1E0ECD9B0();
      uint64_t v27 = sub_1E0DED7E4(v19, v20, &v28);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      *(_WORD *)(v16 + 22) = 2112;
      id v21 = a2;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v22;
      sub_1E0ECD6D0();
      int v23 = v25;
      *long long v25 = v22;

      _os_log_impl(&dword_1E0B26000, v14, v15, "%s failed to open %s: %@", (uint8_t *)v16, 0x20u);
      sub_1E0E66DAC(0, (unint64_t *)&qword_1EB584EA0, (unint64_t *)&qword_1EB584EB0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v23, -1, -1);
      uint64_t v24 = v26;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v24, -1, -1);
      MEMORY[0x1E4E41080](v16, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
}

uint64_t sub_1E0E6222C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1E0ECCFD0();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0E622D8()
{
  uint64_t v0 = sub_1E0ECB810();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAD6D4F0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1E0ECC010();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EAD74168);
  id v6 = sub_1E0ECBFF0();
  os_log_type_t v7 = sub_1E0ECD540();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v11 = sub_1E0DED7E4(0xD00000000000002DLL, 0x80000001E0F095E0, &v12);
    sub_1E0ECD6D0();
    _os_log_impl(&dword_1E0B26000, v6, v7, "%s will open deep link to add an account", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v9, -1, -1);
    MEMORY[0x1E4E41080](v8, -1, -1);
  }

  sub_1E0E48000((uint64_t)v4);
  sub_1E0E65D48((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1E0E6250C(void *a1)
{
  uint64_t v2 = sub_1E0ECB810();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  id v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E0ECB9C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAD6D4F0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1E0ECC010();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EAD74168);
  id v13 = a1;
  uint64_t v14 = sub_1E0ECBFF0();
  os_log_type_t v15 = sub_1E0ECD540();
  int v16 = v15;
  uint64_t v17 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = v8;
    uint64_t v19 = v18;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v36 = v33;
    *(_DWORD *)uint64_t v19 = 136315394;
    int v32 = v16;
    uint64_t v35 = sub_1E0DED7E4(0xD00000000000002DLL, 0x80000001E0F095E0, &v36);
    v31[1] = &v36;
    sub_1E0ECD6D0();
    *(_WORD *)(v19 + 12) = 2080;
    id v20 = objc_msgSend(v13, sel_identifier, v19 + 14);
    sub_1E0ECB9A0();

    sub_1E0E66D64((unint64_t *)&qword_1EAD6EB20, MEMORY[0x1E4F27990]);
    uint64_t v21 = sub_1E0ECD9B0();
    uint64_t v22 = v6;
    uint64_t v23 = v3;
    uint64_t v24 = v2;
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v7);
    uint64_t v35 = sub_1E0DED7E4(v21, v26, &v36);
    sub_1E0ECD6D0();

    uint64_t v2 = v24;
    uint64_t v3 = v23;
    id v6 = v22;
    uint64_t v17 = &selRef_hk_activityStandGoalMissedGradientBottomColor;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v14, (os_log_type_t)v32, "%s will open deep link to view account %s", (uint8_t *)v19, 0x16u);
    uint64_t v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v8 = v34;
    MEMORY[0x1E4E41080](v28, -1, -1);
  }
  else
  {
  }
  id v29 = [v13 v17[398]];
  sub_1E0ECB9A0();

  sub_1E0E48104((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_1E0E65D48((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_1E0E6291C(void *a1, uint64_t a2)
{
  uint64_t v34 = a2;
  id v31 = a1;
  uint64_t v3 = sub_1E0ECBD30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v3, v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v32 = OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts;
  unint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v11, v34, v3);
  if (v13)
  {
    os_log_type_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v11, v3);
    uint64_t v16 = v32;
  }
  else
  {
    uint64_t v17 = sub_1E0ECBCF0();
    os_log_type_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v11, v3);
    uint64_t v16 = v32;
    if (!v17)
    {
LABEL_17:
      id v29 = (void *)sub_1E0ECBCC0();
      objc_msgSend(v31, sel_deselectRowAtIndexPath_animated_, v29, 1);

      return;
    }
  }
  v14(v8, v34, v3);
  uint64_t v18 = sub_1E0ECBCF0();
  uint64_t v19 = v33;
  unint64_t v20 = *(void *)(v33 + v16);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v15(v8, v3);
  if (v18 == v21)
  {
    sub_1E0E622D8();
    goto LABEL_17;
  }
  uint64_t v22 = sub_1E0ECBCF0();
  uint64_t v23 = v22;
  unint64_t v24 = *(void *)(v19 + v16);
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v23 >= v30) {
      goto LABEL_17;
    }
  }
  else if (v22 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_17;
  }
  unint64_t v25 = sub_1E0ECBCF0();
  unint64_t v26 = v25;
  uint64_t v27 = *(void *)(v33 + v16);
  if ((v27 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v28 = (id)MEMORY[0x1E4E3EF00](v26, v27);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v28 = *(id *)(v27 + 8 * v25 + 32);
LABEL_16:
    sub_1E0E6250C(v28);

    goto LABEL_17;
  }
  __break(1u);
}

void sub_1E0E62DA4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void **)&v2[qword_1EAD6EE20];
  sub_1E0E66FDC(a1, (uint64_t)v54);
  sub_1E0ECC660();
  id v6 = objc_msgSend(v5, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = v6;
  objc_msgSend(v6, sel_invalidateIntrinsicContentSize);

  id v8 = objc_msgSend(v5, sel_parentViewController);
  if (!v8) {
    goto LABEL_5;
  }
  uint64_t v9 = v8;
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F520);
  id v10 = a2;
  id v11 = v9;
  LOBYTE(v9) = sub_1E0ECD6A0();

  if (v9)
  {
    char v12 = 1;
  }
  else
  {
LABEL_5:
    objc_msgSend(v5, sel_willMoveToParentViewController_, 0);
    id v13 = objc_msgSend(v5, sel_view);
    if (!v13)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_removeFromSuperview);

    objc_msgSend(v5, sel_removeFromParentViewController);
    objc_msgSend(a2, sel_addChildViewController_, v5);
    char v12 = 0;
  }
  id v15 = objc_msgSend(v3, sel_contentView);
  id v16 = objc_msgSend(v15, sel_subviews);

  sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69870);
  unint64_t v17 = sub_1E0ECD330();

  id v18 = objc_msgSend(v5, sel_view);
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v19 = v18;
  char v20 = sub_1E0E63A50((uint64_t)v18, v17);
  swift_bridgeObjectRelease();

  if (v20) {
    goto LABEL_16;
  }
  id v21 = objc_msgSend(v3, sel_contentView);
  id v22 = objc_msgSend(v5, sel_view);
  if (!v22) {
    goto LABEL_22;
  }
  uint64_t v23 = v22;
  objc_msgSend(v21, sel_addSubview_, v22);

  id v24 = objc_msgSend(v5, sel_view);
  if (!v24)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v25 = v24;
  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v26 = objc_msgSend(v5, sel_view);
  if (!v26)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_leadingAnchor);

  id v29 = objc_msgSend(v3, sel_contentView);
  id v30 = objc_msgSend(v29, sel_layoutMarginsGuide);

  id v31 = objc_msgSend(v30, sel_leadingAnchor);
  id v32 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v31);

  objc_msgSend(v32, sel_setActive_, 1);
  id v33 = objc_msgSend(v5, sel_view);
  if (!v33)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v33, sel_trailingAnchor);

  id v36 = objc_msgSend(v3, sel_contentView);
  id v37 = objc_msgSend(v36, sel_layoutMarginsGuide);

  id v38 = objc_msgSend(v37, sel_trailingAnchor);
  id v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v38);

  objc_msgSend(v39, sel_setActive_, 1);
  id v40 = objc_msgSend(v5, sel_view);
  if (!v40)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  BOOL v41 = v40;
  id v42 = objc_msgSend(v40, sel_topAnchor);

  id v43 = objc_msgSend(v3, sel_contentView);
  id v44 = objc_msgSend(v43, sel_layoutMarginsGuide);

  id v45 = objc_msgSend(v44, sel_topAnchor);
  id v46 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v45);

  objc_msgSend(v46, sel_setActive_, 1);
  id v47 = objc_msgSend(v5, sel_view);
  if (!v47)
  {
LABEL_27:
    __break(1u);
    return;
  }
  id v48 = v47;
  id v49 = objc_msgSend(v47, sel_bottomAnchor);

  id v50 = objc_msgSend(v3, sel_contentView);
  id v51 = objc_msgSend(v50, sel_layoutMarginsGuide);

  id v52 = objc_msgSend(v51, sel_bottomAnchor);
  id v53 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v52);

  objc_msgSend(v53, sel_setActive_, 1);
LABEL_16:
  if ((v12 & 1) == 0) {
    objc_msgSend(v5, sel_didMoveToParentViewController_, a2);
  }
}

id sub_1E0E63578()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate()
{
  return self;
}

uint64_t sub_1E0E6362C()
{
  return swift_initClassMetadata2();
}

char *sub_1E0E63674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  uint64_t v9 = *(void *)(v8 + 0x50);
  uint64_t v10 = sub_1E0ECD6C0();
  MEMORY[0x1F4188790](v10, v11);
  id v13 = (char *)&v23 - v12;
  uint64_t v14 = qword_1EAD6EE20;
  uint64_t v25 = *(void *)(v8 + 88);
  swift_getWitnessTable();
  sub_1E0ECC670();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v13, 1, 1, v9);
  id v15 = v4;
  *(void *)&v4[v14] = sub_1E0ECC640();

  if (a3)
  {
    id v16 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  v24.receiver = v15;
  v24.super_class = ObjectType;
  unint64_t v17 = (char *)objc_msgSendSuper2(&v24, sel_initWithStyle_reuseIdentifier_, a1, v16);

  id v18 = *(void **)&v17[qword_1EAD6EE20];
  uint64_t v19 = v17;
  uint64_t result = (char *)objc_msgSend(v18, sel_view);
  if (result)
  {
    id v21 = result;
    id v22 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v21, sel_setBackgroundColor_, v22);

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1E0E638B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = sub_1E0ECD1D0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1E0E63674(a3, a4, v6);
}

id sub_1E0E63904()
{
  uint64_t v1 = *(void **)(v0 + qword_1EAD6EE20);
  objc_msgSend(v1, sel_willMoveToParentViewController_, 0);
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v3 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    return objc_msgSend(v1, sel_removeFromParentViewController);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1E0E63990()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1E0E63904();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1E0E639D8(void *a1)
{
  id v1 = a1;
  return sub_1E0E63990();
}

void sub_1E0E63A00(uint64_t a1)
{
}

void sub_1E0E63A10(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1E0E66A7C();
}

uint64_t type metadata accessor for HostingTableViewCell()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E0E63A50(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1E0ECD910())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x1E4E3EF00](0, a2);
LABEL_5:
      uint64_t v6 = v5;
      sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69870);
      char v7 = sub_1E0ECD6A0();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_1E0ECD6A0();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x1E4E3EF00](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_1E0ECD6A0();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1E0E63BD8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1E0E65D20();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1E0E63D84(v6);
  return sub_1E0ECD880();
}

void *sub_1E0E63C54(unint64_t a1)
{
  return sub_1E0E63C6C(a1, (void (*)(void *, uint64_t, unint64_t))sub_1E0E64F38);
}

void *sub_1E0E63C6C(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      id v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1E0B33040(0, (unint64_t *)&qword_1EAD69930);
      id v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      _OWORD v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

uint64_t sub_1E0E63D84(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1E0ECD9A0();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 >= -1)
    {
      uint64_t v7 = result;
      id v101 = a1;
      if (v4 < 2)
      {
        uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v113 = MEMORY[0x1E4FBC860];
        __dst = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v4 != 1)
        {
          unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          if (v13 < 2) {
            goto LABEL_109;
          }
          goto LABEL_97;
        }
      }
      else
      {
        uint64_t v8 = v6 >> 1;
        sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6DF48);
        uint64_t v9 = sub_1E0ECD360();
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
        __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
        uint64_t v113 = v9;
      }
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v103 = *a1 + 16;
      uint64_t v104 = v7;
      uint64_t v102 = *a1 - 8;
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v108 = v4;
      uint64_t v112 = *a1;
      while (1)
      {
        uint64_t v14 = v11++;
        uint64_t v107 = v14;
        if (v11 < v4)
        {
          unint64_t v105 = v10;
          id v15 = *(void **)(v12 + 8 * v14);
          id v16 = *(id *)(v12 + 8 * v11);
          id v17 = v15;
          id v18 = objc_msgSend(v16, sel_title);
          sub_1E0ECD1D0();

          id v19 = objc_msgSend(v17, sel_title);
          sub_1E0ECD1D0();

          uint64_t v4 = v108;
          sub_1E0E0F184();
          uint64_t v109 = sub_1E0ECD740();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v14 + 2;
          if (v14 + 2 < v108)
          {
            char v20 = (id *)(v103 + 8 * v14);
            while (1)
            {
              id v21 = *(v20 - 1);
              id v22 = *v20;
              id v23 = v21;
              id v24 = objc_msgSend(v22, sel_title);
              sub_1E0ECD1D0();

              id v25 = objc_msgSend(v23, sel_title);
              sub_1E0ECD1D0();

              uint64_t v26 = sub_1E0ECD740();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v109 == -1) == (v26 != -1)) {
                break;
              }
              ++v11;
              ++v20;
              uint64_t v4 = v108;
              if (v108 == v11)
              {
                uint64_t v11 = v108;
                goto LABEL_22;
              }
            }
            uint64_t v4 = v108;
          }
LABEL_22:
          uint64_t v10 = v105;
          uint64_t v12 = v112;
          if (v109 == -1)
          {
            if (v11 < v14) {
              goto LABEL_135;
            }
            if (v14 < v11)
            {
              uint64_t v27 = (uint64_t *)(v102 + 8 * v11);
              uint64_t v28 = v11;
              uint64_t v29 = v14;
              id v30 = (uint64_t *)(v112 + 8 * v14);
              do
              {
                if (v29 != --v28)
                {
                  if (!v112) {
                    goto LABEL_138;
                  }
                  uint64_t v31 = *v30;
                  *id v30 = *v27;
                  *uint64_t v27 = v31;
                }
                ++v29;
                --v27;
                ++v30;
              }
              while (v29 < v28);
            }
          }
        }
        if (v11 < v4)
        {
          if (__OFSUB__(v11, v14)) {
            goto LABEL_131;
          }
          if (v11 - v14 < v104)
          {
            if (__OFADD__(v14, v104)) {
              goto LABEL_133;
            }
            if (v14 + v104 >= v4) {
              uint64_t v32 = v4;
            }
            else {
              uint64_t v32 = v14 + v104;
            }
            if (v32 < v14)
            {
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              break;
            }
            if (v11 != v32)
            {
              uint64_t v106 = v32;
              uint64_t v33 = v102 + 8 * v11;
              do
              {
                uint64_t v34 = *(void **)(v12 + 8 * v11);
                uint64_t v35 = v14;
                uint64_t v110 = v33;
                uint64_t v36 = v33;
                while (1)
                {
                  id v37 = *(void **)v36;
                  id v38 = v34;
                  id v39 = v37;
                  id v40 = objc_msgSend(v38, sel_title);
                  sub_1E0ECD1D0();

                  id v41 = objc_msgSend(v39, sel_title);
                  sub_1E0ECD1D0();

                  sub_1E0E0F184();
                  uint64_t v42 = sub_1E0ECD740();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v42 != -1) {
                    break;
                  }
                  uint64_t v12 = v112;
                  if (!v112) {
                    goto LABEL_136;
                  }
                  id v43 = *(void **)v36;
                  uint64_t v34 = *(void **)(v36 + 8);
                  *(void *)uint64_t v36 = v34;
                  *(void *)(v36 + 8) = v43;
                  v36 -= 8;
                  if (v11 == ++v35) {
                    goto LABEL_41;
                  }
                }
                uint64_t v12 = v112;
LABEL_41:
                ++v11;
                uint64_t v33 = v110 + 8;
                uint64_t v14 = v107;
              }
              while (v11 != v106);
              uint64_t v11 = v106;
            }
          }
        }
        if (v11 < v14) {
          goto LABEL_126;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1E0E64BC4(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v45 = *((void *)v10 + 2);
        unint64_t v44 = *((void *)v10 + 3);
        unint64_t v13 = v45 + 1;
        uint64_t v12 = v112;
        if (v45 >= v44 >> 1)
        {
          uint64_t v94 = sub_1E0E64BC4((char *)(v44 > 1), v45 + 1, 1, v10);
          uint64_t v12 = v112;
          uint64_t v10 = v94;
        }
        *((void *)v10 + 2) = v13;
        id v46 = v10 + 32;
        id v47 = &v10[16 * v45 + 32];
        *(void *)id v47 = v14;
        *((void *)v47 + 1) = v11;
        if (v45)
        {
          while (1)
          {
            unint64_t v48 = v13 - 1;
            if (v13 >= 4)
            {
              id v53 = &v46[16 * v13];
              uint64_t v54 = *((void *)v53 - 8);
              uint64_t v55 = *((void *)v53 - 7);
              BOOL v59 = __OFSUB__(v55, v54);
              uint64_t v56 = v55 - v54;
              if (v59) {
                goto LABEL_115;
              }
              uint64_t v58 = *((void *)v53 - 6);
              uint64_t v57 = *((void *)v53 - 5);
              BOOL v59 = __OFSUB__(v57, v58);
              uint64_t v51 = v57 - v58;
              char v52 = v59;
              if (v59) {
                goto LABEL_116;
              }
              unint64_t v60 = v13 - 2;
              uint64_t v61 = &v46[16 * v13 - 32];
              uint64_t v63 = *(void *)v61;
              uint64_t v62 = *((void *)v61 + 1);
              BOOL v59 = __OFSUB__(v62, v63);
              uint64_t v64 = v62 - v63;
              if (v59) {
                goto LABEL_118;
              }
              BOOL v59 = __OFADD__(v51, v64);
              uint64_t v65 = v51 + v64;
              if (v59) {
                goto LABEL_121;
              }
              if (v65 >= v56)
              {
                long long v83 = &v46[16 * v48];
                uint64_t v85 = *(void *)v83;
                uint64_t v84 = *((void *)v83 + 1);
                BOOL v59 = __OFSUB__(v84, v85);
                uint64_t v86 = v84 - v85;
                if (v59) {
                  goto LABEL_125;
                }
                BOOL v76 = v51 < v86;
                goto LABEL_85;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v77 = *((void *)v10 + 4);
                uint64_t v78 = *((void *)v10 + 5);
                BOOL v59 = __OFSUB__(v78, v77);
                uint64_t v70 = v78 - v77;
                char v71 = v59;
                goto LABEL_79;
              }
              uint64_t v50 = *((void *)v10 + 4);
              uint64_t v49 = *((void *)v10 + 5);
              BOOL v59 = __OFSUB__(v49, v50);
              uint64_t v51 = v49 - v50;
              char v52 = v59;
            }
            if (v52) {
              goto LABEL_117;
            }
            unint64_t v60 = v13 - 2;
            id v66 = &v46[16 * v13 - 32];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v69 = __OFSUB__(v67, v68);
            uint64_t v70 = v67 - v68;
            char v71 = v69;
            if (v69) {
              goto LABEL_120;
            }
            id v72 = &v46[16 * v48];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v59 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v59) {
              goto LABEL_123;
            }
            if (__OFADD__(v70, v75)) {
              goto LABEL_124;
            }
            if (v70 + v75 >= v51)
            {
              BOOL v76 = v51 < v75;
LABEL_85:
              if (v76) {
                unint64_t v48 = v60;
              }
              goto LABEL_87;
            }
LABEL_79:
            if (v71) {
              goto LABEL_119;
            }
            uint64_t v79 = &v46[16 * v48];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v59 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v59) {
              goto LABEL_122;
            }
            if (v82 < v70) {
              goto LABEL_14;
            }
LABEL_87:
            unint64_t v87 = v48 - 1;
            if (v48 - 1 >= v13)
            {
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
              goto LABEL_134;
            }
            if (!v12) {
              goto LABEL_137;
            }
            id v88 = v10;
            id v89 = &v46[16 * v87];
            uint64_t v90 = *(void *)v89;
            os_log_type_t v91 = &v46[16 * v48];
            uint64_t v92 = *((void *)v91 + 1);
            sub_1E0E647BC((id *)(v12 + 8 * *(void *)v89), (id *)(v12 + 8 * *(void *)v91), v12 + 8 * v92, __dst);
            if (v1) {
              goto LABEL_109;
            }
            if (v92 < v90) {
              goto LABEL_112;
            }
            if (v48 > *((void *)v88 + 2)) {
              goto LABEL_113;
            }
            *(void *)id v89 = v90;
            *(void *)&v46[16 * v87 + 8] = v92;
            unint64_t v93 = *((void *)v88 + 2);
            if (v48 >= v93) {
              goto LABEL_114;
            }
            uint64_t v10 = v88;
            unint64_t v13 = v93 - 1;
            memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
            *((void *)v88 + 2) = v93 - 1;
            uint64_t v12 = v112;
            if (v93 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_14:
        uint64_t v4 = v108;
        if (v11 >= v108)
        {
          uint64_t v2 = v1;
          if (v13 < 2)
          {
LABEL_109:
            swift_bridgeObjectRelease();
            *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_1E0ECD340();
            return swift_bridgeObjectRelease();
          }
LABEL_97:
          uint64_t v95 = *v101;
          while (1)
          {
            unint64_t v96 = v13 - 2;
            if (v13 < 2) {
              goto LABEL_127;
            }
            if (!v95) {
              goto LABEL_139;
            }
            uint64_t v97 = *(void *)&v10[16 * v96 + 32];
            uint64_t v98 = *(void *)&v10[16 * v13 + 24];
            sub_1E0E647BC((id *)(v95 + 8 * v97), (id *)(v95 + 8 * *(void *)&v10[16 * v13 + 16]), v95 + 8 * v98, __dst);
            if (v2) {
              goto LABEL_109;
            }
            if (v98 < v97) {
              goto LABEL_128;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_1E0E64F24((uint64_t)v10);
            }
            if (v96 >= *((void *)v10 + 2)) {
              goto LABEL_129;
            }
            unint64_t v99 = &v10[16 * v96 + 32];
            *(void *)unint64_t v99 = v97;
            *((void *)v99 + 1) = v98;
            unint64_t v100 = *((void *)v10 + 2);
            if (v13 > v100) {
              goto LABEL_130;
            }
            memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v100 - v13));
            *((void *)v10 + 2) = v100 - 1;
            unint64_t v13 = v100 - 1;
            if (v100 <= 2) {
              goto LABEL_109;
            }
          }
        }
      }
    }
    uint64_t result = sub_1E0ECD8E0();
    __break(1u);
    return result;
  }
  if (v4 < 0) {
    goto LABEL_132;
  }
  if (v4) {
    return sub_1E0E64648(0, v4, 1, a1);
  }
  return result;
}

uint64_t sub_1E0E64648(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v18 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void **)(v18 + 8 * v4);
    uint64_t v7 = v16;
    uint64_t v17 = v5;
    while (1)
    {
      uint64_t v8 = *(void **)v5;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_title);
      sub_1E0ECD1D0();

      id v12 = objc_msgSend(v10, sel_title);
      sub_1E0ECD1D0();

      sub_1E0E0F184();
      uint64_t v13 = sub_1E0ECD740();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v13 != -1)
      {
LABEL_4:
        ++v4;
        uint64_t v5 = v17 + 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v18) {
        break;
      }
      uint64_t v14 = *(void **)v5;
      uint64_t v6 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v14;
      v5 -= 8;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1E0E647BC(id *a1, id *__src, unint64_t a3, char *__dst)
{
  uint64_t v5 = __src;
  uint64_t v6 = (char *)__src - (char *)a1;
  uint64_t v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v7 = (char *)__src - (char *)a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  id v41 = a1;
  id v40 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst) {
        memmove(__dst, __src, 8 * v11);
      }
      uint64_t v33 = __dst;
      id v21 = &__dst[8 * v11];
      id v39 = v21;
      id v41 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        id v22 = (id *)(a3 - 8);
        id v23 = v5;
        do
        {
          uint64_t v35 = v21;
          id v37 = v22 + 1;
          id v25 = (void *)*((void *)v21 - 1);
          v21 -= 8;
          id v24 = v25;
          uint64_t v26 = *--v23;
          id v27 = v24;
          id v28 = v26;
          id v29 = objc_msgSend(v27, sel_title);
          sub_1E0ECD1D0();

          id v30 = objc_msgSend(v28, sel_title);
          sub_1E0ECD1D0();

          sub_1E0E0F184();
          uint64_t v31 = sub_1E0ECD740();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31 == -1)
          {
            id v21 = v35;
            if (v37 != v5 || v22 >= v5) {
              *id v22 = *v23;
            }
            id v41 = v23;
          }
          else
          {
            id v39 = v21;
            id v23 = v5;
            if (v37 < (id *)v35 || v22 >= (id *)v35 || v37 != (id *)v35) {
              *id v22 = *(id *)v21;
            }
          }
          if (v23 <= a1) {
            break;
          }
          --v22;
          uint64_t v5 = v23;
        }
        while (v21 > v33);
      }
      goto LABEL_42;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst) {
      memmove(__dst, a1, 8 * v8);
    }
    uint64_t v36 = (void **)&__dst[8 * v8];
    id v39 = (char *)v36;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      id v12 = (void **)__dst;
      uint64_t v13 = a1;
      do
      {
        uint64_t v14 = *v12;
        id v15 = *v5;
        id v16 = v14;
        id v17 = objc_msgSend(v15, sel_title);
        sub_1E0ECD1D0();

        id v18 = objc_msgSend(v16, sel_title);
        sub_1E0ECD1D0();

        sub_1E0E0F184();
        uint64_t v19 = sub_1E0ECD740();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19 == -1)
        {
          char v20 = v5 + 1;
          if (v13 < v5 || v13 >= v20 || v13 != v5) {
            *uint64_t v13 = *v5;
          }
        }
        else
        {
          if (v13 != v12) {
            *uint64_t v13 = *v12;
          }
          id v40 = ++v12;
          char v20 = v5;
        }
        ++v13;
        if (v12 >= v36) {
          break;
        }
        uint64_t v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      id v41 = v13;
    }
LABEL_42:
    sub_1E0E64E68((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

char *sub_1E0E64BC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1E0E66E14(0, &qword_1EAD6EED8, (uint64_t (*)(uint64_t))sub_1E0E66E78, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1E0E64CEC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_1E0ECD960();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_1E0E64DAC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1E0ECD960();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1E0E64E68(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1E0ECD960();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1E0E64F24(uint64_t a1)
{
  return sub_1E0E64BC4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1E0E64F38(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1E0E66E14(0, (unint64_t *)&qword_1EAD6DBD8, (uint64_t (*)(uint64_t))type metadata accessor for AudiogramLongitudinalChartData, MEMORY[0x1E4FBB320]);
        sub_1E0E67144();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1E0E4FE24(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for AudiogramLongitudinalChartData();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E65168(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1E0E6709C(0, &qword_1EAD6EF48, (unint64_t *)&qword_1EAD6EAA0);
        sub_1E0E670F4((unint64_t *)&unk_1EAD6EF50, &qword_1EAD6EF48, (unint64_t *)&qword_1EAD6EAA0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1E0E4FE90(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6EAA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E653B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1E0E66DAC(0, &qword_1EAD6EF30, (unint64_t *)&unk_1EAD6F520, 0x1E4FB1EC0, MEMORY[0x1E4FBB320]);
        sub_1E0E67038((unint64_t *)&unk_1EAD6EF38, &qword_1EAD6EF30, (unint64_t *)&unk_1EAD6F520, 0x1E4FB1EC0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1E0E4FEF8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F520);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E6560C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1E0E6709C(0, &qword_1EAD6EF20, (unint64_t *)&unk_1EAD6EC50);
        sub_1E0E670F4(&qword_1EAD6EF28, &qword_1EAD6EF20, (unint64_t *)&unk_1EAD6EC50);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1E0E4FF60(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E65854(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1E0E66DAC(0, &qword_1EAD6EEC0, (unint64_t *)&qword_1EAD6DF48, 0x1E4F2ACF0, MEMORY[0x1E4FBB320]);
        sub_1E0E67038(&qword_1EAD6EEC8, &qword_1EAD6EEC0, (unint64_t *)&qword_1EAD6DF48, 0x1E4F2ACF0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1E0E4FEF8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6DF48);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E65AB0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1E0E66DAC(0, &qword_1EAD6EF08, (unint64_t *)&qword_1EAD6EF00, (uint64_t)off_1E6D4F1C0, MEMORY[0x1E4FBB320]);
        sub_1E0E67038((unint64_t *)&unk_1EAD6EF10, &qword_1EAD6EF08, (unint64_t *)&qword_1EAD6EF00, (uint64_t)off_1E6D4F1C0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1E0E4FEF8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6EF00);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E65D0C(uint64_t a1)
{
  return sub_1E0DEEC60(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1E0E65D20()
{
}

uint64_t sub_1E0E65D34(uint64_t a1)
{
  return sub_1E0DEF0EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1E0E65D48(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECB810();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2, v5);
  id v6 = objc_msgSend(self, sel_defaultWorkspace);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (void *)sub_1E0ECB7E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    aBlock[4] = sub_1E0E66C94;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E0E6222C;
    aBlock[3] = &block_descriptor_12;
    int64_t v11 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_openURL_configuration_completionHandler_, v8, 0, v11);
    _Block_release(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E0E65F30()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = v2 + 1;
    if (!__OFADD__(v2, 1)) {
      return result;
    }
LABEL_6:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  uint64_t result = v4 + 1;
  if (__OFADD__(v4, 1)) {
    goto LABEL_6;
  }
  return result;
}

unint64_t sub_1E0E65FA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v95 = a1;
  uint64_t v3 = sub_1E0ECB9C0();
  uint64_t v89 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  MEMORY[0x1F4188790](v3, v4);
  id v88 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1E0ECC0A0();
  uint64_t v6 = *(void *)(v93 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v93, v7);
  os_log_type_t v91 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v86 - v11;
  uint64_t v13 = sub_1E0ECBD30();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  id v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19);
  id v21 = (char *)&v86 - v20;
  uint64_t v94 = OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts;
  unint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  uint64_t v92 = v6;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v24(v21, v95, v13);
  if (v23)
  {
    id v25 = *(void (**)(char *, uint64_t))(v14 + 8);
    v25(v21, v13);
  }
  else
  {
    unint64_t v87 = v12;
    uint64_t v26 = sub_1E0ECBCF0();
    id v25 = *(void (**)(char *, uint64_t))(v14 + 8);
    v25(v21, v13);
    if (!v26)
    {
      id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D08]), sel_initWithStyle_reuseIdentifier_, 0, 0);
      MEMORY[0x1E4E3EC40]();
      char v71 = (void *)sub_1E0ECD190();
      id v72 = HKHealthRecordsAPILocalizedString(v71);

      if (v72)
      {
        sub_1E0ECD1D0();
      }
      uint64_t v32 = v87;
      sub_1E0ECC090();
      unint64_t v60 = self;
      id v74 = objc_msgSend(v60, sel_secondaryLabelColor);
      uint64_t v75 = (void (*)(uint64_t *, void))sub_1E0ECC080();
      sub_1E0ECC070();
      v75(v96, 0);
      uint64_t v63 = v93;
      uint64_t v97 = v93;
      uint64_t v98 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v96);
      uint64_t v65 = v92;
      (*(void (**)(uint64_t *, char *, uint64_t))(v92 + 16))(boxed_opaque_existential_0, v32, v63);
      MEMORY[0x1E4E3EC30](v96);
      objc_msgSend(v70, sel_setSelectionStyle_, 0);
      id v48 = v70;
      uint64_t v77 = (void *)sub_1E0ECD320();
      id v78 = HKUIJoinStringsForAutomationIdentifier(v77);

      objc_msgSend(v48, sel_setAccessibilityIdentifier_, v78);
      id v79 = objc_msgSend(v48, sel_traitCollection);
      id v80 = objc_msgSend(v79, sel_userInterfaceIdiom);

      if (v80 == (id)6) {
        goto LABEL_29;
      }
LABEL_28:
      id v81 = objc_msgSend(v60, sel_secondarySystemBackgroundColor);
      objc_msgSend(v48, sel_setBackgroundColor_, v81);

LABEL_29:
      (*(void (**)(char *, uint64_t))(v65 + 8))(v32, v63);
      return (unint64_t)v48;
    }
  }
  v24(v18, v95, v13);
  uint64_t v27 = sub_1E0ECBCF0();
  uint64_t v28 = v94;
  unint64_t v29 = *(void *)(v2 + v94);
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v25(v18, v13);
  if (v27 == v30)
  {
    id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D08]), sel_initWithStyle_reuseIdentifier_, 0, 0);
    uint64_t v32 = v91;
    MEMORY[0x1E4E3EC40]();
    uint64_t v33 = (void *)sub_1E0ECD190();
    id v34 = HKHealthRecordsAPILocalizedString(v33);

    if (v34)
    {
      sub_1E0ECD1D0();
    }
    sub_1E0ECC090();
    unint64_t v60 = self;
    id v61 = objc_msgSend(v60, sel_hk_appKeyColor);
    uint64_t v62 = (void (*)(uint64_t *, void))sub_1E0ECC080();
    sub_1E0ECC070();
    v62(v96, 0);
    uint64_t v63 = v93;
    uint64_t v97 = v93;
    uint64_t v98 = MEMORY[0x1E4FB0F88];
    uint64_t v64 = __swift_allocate_boxed_opaque_existential_0(v96);
    uint64_t v65 = v92;
    (*(void (**)(uint64_t *, char *, uint64_t))(v92 + 16))(v64, v32, v63);
    MEMORY[0x1E4E3EC30](v96);
    id v48 = v31;
    id v66 = (void *)sub_1E0ECD320();
    id v67 = HKUIJoinStringsForAutomationIdentifier(v66);

    objc_msgSend(v48, sel_setAccessibilityIdentifier_, v67);
    id v68 = objc_msgSend(v48, sel_traitCollection);
    id v69 = objc_msgSend(v68, sel_userInterfaceIdiom);

    if (v69 == (id)6) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v35 = sub_1E0ECBCF0();
  uint64_t v36 = v35;
  unint64_t v37 = *(void *)(v2 + v28);
  if (!(v37 >> 62))
  {
    if (v35 < *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_13;
    }
LABEL_34:
    id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D08]), sel_initWithStyle_reuseIdentifier_, 0, 0);
    id v83 = objc_msgSend(v48, sel_traitCollection);
    id v84 = objc_msgSend(v83, sel_userInterfaceIdiom);

    if (v84 != (id)6)
    {
      id v85 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      objc_msgSend(v48, sel_setBackgroundColor_, v85);
    }
    return (unint64_t)v48;
  }
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (v36 >= v82) {
    goto LABEL_34;
  }
LABEL_13:
  unint64_t result = sub_1E0ECBCF0();
  unint64_t v39 = result;
  uint64_t v40 = *(void *)(v2 + v28);
  if ((v40 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v41 = (id)MEMORY[0x1E4E3EF00](v39, v40);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v41 = *(id *)(v40 + 8 * result + 32);
LABEL_17:
    uint64_t v42 = *(void **)(v2 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_context);
    id v43 = v41;
    sub_1E0E79BDC(v43, v42, 1, (uint64_t)v96);
    sub_1E0E66ED8();
    id v45 = objc_msgSend(objc_allocWithZone(v44), sel_initWithStyle_reuseIdentifier_, 0, 0);
    objc_msgSend(v45, sel_setSelectionStyle_, 3);
    objc_msgSend(v45, sel_setAccessoryType_, 1);
    sub_1E0B33040(0, (unint64_t *)&qword_1EAD69880);
    uint64_t v46 = v2;
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1E0F08070;
    *(void *)(v47 + 32) = 0x746E756F636341;
    *(void *)(v47 + 40) = 0xE700000000000000;
    id v48 = v45;
    id v49 = objc_msgSend(v43, sel_identifier);
    uint64_t v50 = v88;
    sub_1E0ECB9A0();

    uint64_t v51 = sub_1E0ECB990();
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v50, v90);
    *(void *)(v47 + 48) = v51;
    *(void *)(v47 + 56) = v53;
    *(void *)(v47 + 64) = 1819043139;
    *(void *)(v47 + 72) = 0xE400000000000000;
    uint64_t v54 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    id v55 = HKUIJoinStringsForAutomationIdentifier(v54);

    objc_msgSend(v48, sel_setAccessibilityIdentifier_, v55);
    uint64_t v56 = (void *)MEMORY[0x1E4E41170](v46 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_controller);
    if (v56)
    {
      uint64_t v57 = v56;
      sub_1E0E62DA4((uint64_t)v96, v56);
    }
    id v58 = objc_msgSend(v48, sel_traitCollection);
    id v59 = objc_msgSend(v58, sel_userInterfaceIdiom);

    if (v59 == (id)6)
    {
    }
    else
    {
      id v73 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      objc_msgSend(v48, sel_setBackgroundColor_, v73);
    }
    sub_1E0E66F88((uint64_t)v96);
    return (unint64_t)v48;
  }
  __break(1u);
  return result;
}

void sub_1E0E66A7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  uint64_t v3 = *(void *)(v2 + 0x50);
  uint64_t v4 = sub_1E0ECD6C0();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)v9 - v6;
  uint64_t v8 = qword_1EAD6EE20;
  v9[1] = *(void *)(v2 + 88);
  swift_getWitnessTable();
  sub_1E0ECC670();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v7, 1, 1, v3);
  *(void *)&v1[v8] = sub_1E0ECC640();

  sub_1E0ECD8F0();
  __break(1u);
}

uint64_t sub_1E0E66C04()
{
  uint64_t v1 = sub_1E0ECB810();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1E0E66C94(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1E0ECB810() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_1E0E61E50(a1, a2, v6);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

unint64_t sub_1E0E66D2C()
{
  unint64_t result = qword_1EAD6EEB0;
  if (!qword_1EAD6EEB0)
  {
    type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6EEB0);
  }
  return result;
}

uint64_t sub_1E0E66D64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E66DAC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1E0DF2C04(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1E0E66E14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1E0E66E78()
{
  if (!qword_1EAD6EEE0)
  {
    unint64_t v0 = sub_1E0ECD4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EEE0);
    }
  }
}

void sub_1E0E66ED8()
{
  if (!qword_1EAD6EEE8)
  {
    sub_1E0E66F34();
    unint64_t v0 = type metadata accessor for HostingTableViewCell();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EEE8);
    }
  }
}

unint64_t sub_1E0E66F34()
{
  unint64_t result = qword_1EAD6EEF0;
  if (!qword_1EAD6EEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6EEF0);
  }
  return result;
}

uint64_t sub_1E0E66F88(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0E66FDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E0E67038(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0E66DAC(255, a2, a3, a4, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E6709C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1E0E425C4(255, a3);
    unint64_t v4 = sub_1E0ECD380();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E0E670F4(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0E6709C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E0E67144()
{
  unint64_t result = qword_1EAD6EF60;
  if (!qword_1EAD6EF60)
  {
    sub_1E0E66E14(255, (unint64_t *)&qword_1EAD6DBD8, (uint64_t (*)(uint64_t))type metadata accessor for AudiogramLongitudinalChartData, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6EF60);
  }
  return result;
}

id OverlayConfiguration.attributes.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void OverlayConfiguration.attributes.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*OverlayConfiguration.attributes.modify())()
{
  return nullsub_1;
}

double OverlayConfiguration.frame.getter()
{
  return *(double *)(v0 + 8);
}

void OverlayConfiguration.frame.setter(double a1, double a2, double a3, double a4)
{
  v4[1] = a1;
  _OWORD v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

uint64_t (*OverlayConfiguration.frame.modify())()
{
  return nullsub_1;
}

uint64_t OverlayConfiguration.kind.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t OverlayConfiguration.indexPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OverlayConfiguration() + 28);
  uint64_t v4 = sub_1E0ECBD30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for OverlayConfiguration()
{
  uint64_t result = qword_1EAD6EFD0;
  if (!qword_1EAD6EFD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OverlayConfiguration.init(attributes:frame:kind:indexPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(void *)a5 = a1;
  *(double *)(a5 + 8) = a6;
  *(double *)(a5 + 16) = a7;
  *(double *)(a5 + 24) = a8;
  *(double *)(a5 + 32) = a9;
  *(void *)(a5 + 40) = a2;
  *(void *)(a5 + 48) = a3;
  uint64_t v10 = a5 + *(int *)(type metadata accessor for OverlayConfiguration() + 28);
  uint64_t v11 = sub_1E0ECBD30();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  return v12(v10, a4, v11);
}

uint64_t dispatch thunk of static ConfigurableDecorationView.elementKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static ConfigurableDecorationView.configure(attributes:in:initialFrame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

char *initializeBufferWithCopyOfBuffer for OverlayConfiguration(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1E0ECBD30();
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for OverlayConfiguration(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1E0ECBD30();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1E0ECBD30();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1E0ECBD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1E0ECBD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E0ECBD30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0E67818);
}

uint64_t sub_1E0E67818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1E0ECBD30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for OverlayConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0E678DC);
}

uint64_t sub_1E0E678DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1E0ECBD30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1E0E67984()
{
  uint64_t result = sub_1E0ECBD30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t View.hideCancellationButton()()
{
  return sub_1E0ECCBE0();
}

uint64_t sub_1E0E67AE0()
{
  uint64_t v0 = sub_1E0ECC780();
  MEMORY[0x1F4188790](v0 - 8, v1);
  sub_1E0E67CC0();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECC770();
  sub_1E0ECC2C0();
  unint64_t v8 = sub_1E0E67D2C();
  MEMORY[0x1E4E3DE80](v7, v3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_1E0E67C3C()
{
  if (!qword_1EAD6EFE0)
  {
    sub_1E0E67CC0();
    sub_1E0E67D2C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EAD6EFE0);
    }
  }
}

void sub_1E0E67CC0()
{
  if (!qword_1EAD6EFE8)
  {
    unint64_t v0 = sub_1E0ECC2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6EFE8);
    }
  }
}

unint64_t sub_1E0E67D2C()
{
  unint64_t result = qword_1EAD6EFF0;
  if (!qword_1EAD6EFF0)
  {
    sub_1E0E67CC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6EFF0);
  }
  return result;
}

uint64_t sub_1E0E67D84()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1E0E67E1C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_1E0E67E2C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1E0E67ED4(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v25 = a4;
  uint64_t v11 = sub_1E0ECCE70();
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1E0ECCEA0();
  uint64_t v15 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27, v16);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6FDC0);
  uint64_t v26 = sub_1E0ECD5D0();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v25;
  *(void *)(v19 + 32) = a5;
  *(void *)(v19 + 40) = a3;
  *(void *)(v19 + 48) = a6;
  *(void *)(v19 + 56) = a1;
  aBlock[4] = sub_1E0E6A258;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E0E67E2C;
  aBlock[3] = &block_descriptor_37;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  id v21 = a3;
  id v22 = a6;
  swift_bridgeObjectRetain();
  swift_release();
  sub_1E0ECCE90();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1E0E6A26C();
  sub_1E0E6A2C4(0, &qword_1EAD6F058, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1E0E6A328();
  sub_1E0ECD7A0();
  uint64_t v23 = (void *)v26;
  MEMORY[0x1E4E3ECB0](0, v18, v14, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v27);
}

void sub_1E0E681CC(char a1, void (*a2)(uint64_t, id), int a3, id a4, uint64_t a5, unint64_t a6)
{
  if (a1)
  {
    unint64_t v8 = sub_1E0E6858C(a6);
    uint64_t v9 = *(void *)(a5
                   + OBJC_IVAR____TtC8HealthUI61AudiogramLongitudinalHearingLevelClassificationOverlayContext_hearingLevelClassification);
    uint64_t v10 = *(void *)(a5
                    + OBJC_IVAR____TtC8HealthUI61AudiogramLongitudinalHearingLevelClassificationOverlayContext_baseDisplayType);
    id v11 = objc_msgSend(*(id *)(a5+ OBJC_IVAR____TtC8HealthUI61AudiogramLongitudinalHearingLevelClassificationOverlayContext_applicationItems), sel_unitController);
    id v12 = sub_1E0E69AE4(v9, v8, v10, v11);

    uint64_t v13 = *(void **)(a5
                   + OBJC_IVAR____TtC8HealthUI61AudiogramLongitudinalHearingLevelClassificationOverlayContext_lastUpdatedItem);
    *(void *)(a5
              + OBJC_IVAR____TtC8HealthUI61AudiogramLongitudinalHearingLevelClassificationOverlayContext_lastUpdatedItem) = v12;

    a2(1, 0);
  }
  else
  {
    if (a4) {
      id v15 = a4;
    }
    else {
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C58]), sel_init);
    }
    id v16 = a4;
    a2(0, v15);
  }
}

void sub_1E0E68310(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  sub_1E0DFAB14();
  uint64_t v7 = sub_1E0ECD330();
  swift_retain();
  id v8 = a4;
  v6(v7, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1E0E68504(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1E0ECB760();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

unint64_t sub_1E0E6858C(unint64_t a1)
{
  unint64_t result = sub_1E0E45D38(a1);
  if (!result) {
    return 0;
  }
  unint64_t v2 = result;
  if (result >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
  {
LABEL_20:
    uint64_t v4 = 0;
LABEL_21:
    swift_bridgeObjectRelease();
    return v4;
  }
  while (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = OBJC_IVAR____TtC8HealthUI61AudiogramLongitudinalHearingLevelClassificationOverlayContext_hearingLevelClassification;
    unint64_t v21 = v2 & 0xC000000000000001;
    while (1)
    {
      uint64_t v7 = v21 ? (char *)MEMORY[0x1E4E3EF00](v5, v2) : (char *)*(id *)(v2 + 8 * v5 + 32);
      id v8 = v7;
      uint64_t v9 = OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData;
      id v10 = objc_msgSend(*(id *)(*(void *)&v7[OBJC_IVAR____TtC8HealthUI31AudiogramLongitudinalChartPoint_audiogramChartData]+ OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary), sel_leftEarMetrics, v21);
      if (v10)
      {
        id v11 = v10;
        id v12 = objc_msgSend(v10, sel_averageSensitivity);
        uint64_t v13 = HKHearingLevelClassificationForSensitivity();

        uint64_t v14 = *(void *)(v22 + v6) == v13;
        BOOL v15 = __OFADD__(v4, v14);
        v4 += v14;
        if (v15) {
          break;
        }
      }
      id v16 = objc_msgSend(*(id *)(*(void *)&v8[v9] + OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary), sel_rightEarMetrics);
      if (v16)
      {
        uint64_t v17 = v16;
        id v18 = objc_msgSend(v16, sel_averageSensitivity);
        uint64_t v19 = HKHearingLevelClassificationForSensitivity();

        uint64_t v20 = *(void *)(v22 + v6) == v19;
        BOOL v15 = __OFADD__(v4, v20);
        v4 += v20;
        if (v15)
        {
          __break(1u);
          return 0;
        }
      }
      else
      {
      }
      if (v3 == ++v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_19:
    unint64_t result = sub_1E0ECD910();
    uint64_t v3 = result;
    if (!result) {
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

id sub_1E0E687A8(uint64_t a1)
{
  return sub_1E0E69894(a1, type metadata accessor for AudiogramLongitudinalHearingLevelClassificationOverlayContext);
}

uint64_t type metadata accessor for AudiogramLongitudinalHearingLevelClassificationOverlayContext()
{
  return self;
}

uint64_t sub_1E0E68860()
{
  unint64_t v0 = self;
  uint64_t v1 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_hk_chartOverlayAccessibilityIdentifier_, v1);

  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x1E0E689BCLL);
  }
  uint64_t v3 = sub_1E0ECD1D0();

  return v3;
}

id sub_1E0E689D4(void *a1, void *a2)
{
  id v84 = a2;
  uint64_t v3 = sub_1E0ECB3C0();
  uint64_t v83 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E0ECB460();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v80 = v11;
  id v81 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v86 = (char *)&v72 - v13;
  sub_1E0E6A2C4(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  unint64_t v87 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v21 = sub_1E0ECB980();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v21, v23);
  id v79 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v24, v26);
  id v85 = (char *)&v72 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27, v29);
  uint64_t v32 = (char *)&v72 - v31;
  MEMORY[0x1F4188790](v30, v33);
  id v88 = (char *)&v72 - v34;
  uint64_t v35 = a1;
  id v36 = objc_msgSend(a1, sel_startDate);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    goto LABEL_10;
  }
  unint64_t v37 = v36;
  uint64_t v73 = v8;
  uint64_t v75 = v3;
  BOOL v76 = v6;
  uint64_t v74 = v7;
  sub_1E0ECB940();

  id v38 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v38(v20, v32, v21);
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v77(v20, 0, 1, v21);
  uint64_t v78 = v22;
  unint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v39(v20, 1, v21) == 1)
  {
LABEL_10:
    uint64_t v71 = (uint64_t)v20;
LABEL_13:
    sub_1E0DF0AA0(v71);
    return (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = v88;
  v38(v88, v20, v21);
  id v41 = objc_msgSend(v35, sel_endDate);
  uint64_t v42 = v21;
  if (!v41)
  {
    Class v44 = v87;
    v77(v87, 1, 1, v42);
    goto LABEL_12;
  }
  id v43 = v41;
  sub_1E0ECB940();

  Class v44 = v87;
  v38(v87, v32, v42);
  v77(v44, 0, 1, v42);
  if (v39(v44, 1, v42) == 1)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v40, v42);
    uint64_t v71 = (uint64_t)v44;
    goto LABEL_13;
  }
  id v45 = v85;
  v38(v85, v44, v42);
  uint64_t v46 = self;
  unint64_t v87 = (char *)objc_msgSend(v46, sel_configurationForZoomLevel_, v84);
  id v47 = objc_msgSend(v87, sel_seriesPointIntervalComponentsAtResolution_, 0);
  id v48 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v42;
  id v49 = v86;
  sub_1E0ECB410();

  id result = objc_msgSend(v46, sel_defaultCalendar);
  id v84 = result;
  if (result)
  {
    uint64_t v51 = *(void (**)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 16);
    v51(v32, v40, v48);
    uint64_t v77 = v48;
    v51(v79, v45, v48);
    sub_1E0ECB390();
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v53 = (void *)sub_1E0ECB360();
    uint64_t v54 = (void *)sub_1E0ECB400();
    uint64_t v55 = v73;
    uint64_t v56 = v81;
    uint64_t v57 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v81, v49, v74);
    unint64_t v58 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    uint64_t v59 = swift_allocObject();
    unint64_t v60 = v82;
    *(void *)(v59 + 16) = v52;
    *(void *)(v59 + 24) = v60;
    unint64_t v61 = v59 + v58;
    uint64_t v62 = v57;
    (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v61, v56, v57);
    aBlock[4] = sub_1E0E69A48;
    aBlock[5] = v59;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E0E93164;
    aBlock[3] = &block_descriptor_13;
    uint64_t v63 = _Block_copy(aBlock);
    swift_retain();
    id v64 = v60;
    swift_release();
    id v65 = v84;
    objc_msgSend(v84, sel_hk_enumerateDateInterval_byDateComponents_block_, v53, v54, v63);
    _Block_release(v63);

    swift_beginAccess();
    unint64_t v66 = *(void *)(v52 + 16);
    if (v66 >> 62)
    {
      sub_1E0DFAB14();
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1E0ECD900();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_1E0ECD9F0();
      sub_1E0DFAB14();
      uint64_t v67 = v66;
    }
    uint64_t v68 = v83;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v76, v75);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v86, v62);
    id v69 = v77;
    id v70 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
    v70(v85, v77);
    v70(v88, v69);
    swift_release();
    return (id)v67;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E691E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1E0E69318(a1, a5);
  uint64_t v6 = swift_beginAccess();
  MEMORY[0x1E4E3E9E0](v6);
  if (*(void *)((*(void *)(a3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a3 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1E0ECD350();
  sub_1E0ECD370();
  sub_1E0ECD340();
  return swift_endAccess();
}

void sub_1E0E69318(uint64_t a1, void *a2)
{
  id v44 = a2;
  uint64_t v45 = a1;
  uint64_t v3 = sub_1E0ECB980();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v2;
  id v7 = (id)HKMaximumDecibelQuantityForHearingLevelClassification();
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = v7;
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
  objc_msgSend(v8, sel_doubleValueForUnit_, v10);
  double v12 = v11;

  id v13 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, floor(v12));

  if (!v15)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v16 = objc_retain(*(id *)(v48
                          + OBJC_IVAR____TtC8HealthUIP33_092EC19E3FD96CFEDE476DA46BB43D0653HearingLevelClassificationDateRangeDataSourceDelegate_dBHL));
  objc_msgSend(v15, sel_doubleValueForUnit_, v16);
  id v18 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, -v17);

  id v19 = (id)HKMinimumDecibelQuantityForHearingLevelClassification();
  if (!v19) {
    goto LABEL_8;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
  objc_msgSend(v20, sel_doubleValueForUnit_, v21);
  double v23 = v22;

  id v24 = objc_msgSend(v9, sel_decibelHearingLevelUnit);
  id v25 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v24, ceil(v23));

  if (!v25) {
    goto LABEL_8;
  }
  id v26 = v16;
  objc_msgSend(v25, sel_doubleValueForUnit_, v26);
  id v28 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v26, -v27);

  id v29 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartSinglePointData), sel_init);
  objc_msgSend(v29, sel_setUnit_, v26);
  objc_msgSend(v18, sel_doubleValueForUnit_, v26);
  objc_msgSend(v29, sel_setMinValue_);
  objc_msgSend(v28, sel_doubleValueForUnit_, v26);
  objc_msgSend(v29, sel_setMaxValue_);
  objc_msgSend(v29, sel_setRepresentsRange_, 1);
  objc_msgSend(v29, sel_setRecordCount_, 1);
  uint64_t v30 = (void *)sub_1E0ECB400();
  objc_msgSend(v29, sel_setStatisticsInterval_, v30);

  id v31 = objc_msgSend(objc_allocWithZone((Class)HKQuantityTypeDataSourceValue), sel_init);
  objc_msgSend(v31, sel_setMinQuantity_, v18);
  objc_msgSend(v31, sel_setMaxQuantity_, v28);
  id v44 = v18;
  sub_1E0ECB3A0();
  uint64_t v32 = (void *)sub_1E0ECB920();
  uint64_t v33 = v47;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v46 + 8);
  v34(v6, v47);
  objc_msgSend(v31, sel_setStartDate_, v32);

  sub_1E0ECB380();
  uint64_t v35 = (void *)sub_1E0ECB920();
  v34(v6, v33);
  objc_msgSend(v31, sel_setEndDate_, v35);

  id v36 = *(void **)(v48
                 + OBJC_IVAR____TtC8HealthUIP33_092EC19E3FD96CFEDE476DA46BB43D0653HearingLevelClassificationDateRangeDataSourceDelegate_applicationItems);
  id v37 = v26;
  id v38 = v31;
  id v39 = objc_msgSend(v36, sel_displayTypeController);
  id v40 = objc_msgSend(self, sel_audiogramSampleType);
  id v41 = objc_msgSend(v39, sel_displayTypeForObjectType_, v40);

  if (v41)
  {
    id v42 = objc_msgSend(objc_allocWithZone((Class)HKHealthChartPoint), sel_initWithDataSourceValue_options_unit_displayType_, v38, 12, v37, v41);

    objc_msgSend(v42, sel_setUserInfo_, v29);
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1E0E69878()
{
  return sub_1E0E69894(0, type metadata accessor for HearingLevelClassificationDateRangeDataSourceDelegate);
}

id sub_1E0E69894(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for HearingLevelClassificationDateRangeDataSourceDelegate()
{
  return self;
}

uint64_t sub_1E0E6993C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0E69974()
{
  uint64_t v1 = sub_1E0ECB460();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1E0E69A48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1E0ECB460() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  return sub_1E0E691E0(a1, a2, v6, v7, v8);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

id sub_1E0E69AE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_msgSend(objc_allocWithZone((Class)HKDisplayTypeContextItem), sel_init);
  id v8 = (id)HKLocalizedStringForHearingLevelClassification();
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1E0ECD1D0();
  }
  id v10 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setTitle_, v10);

  id v11 = objc_msgSend(self, sel_defaultMetricColorsForOverlayMode_, 3);
  objc_msgSend(v7, sel_setMetricColors_, v11);

  id v12 = objc_msgSend(self, sel_hearingHealthColors);
  objc_msgSend(v7, sel_setSelectedMetricColors_, v12);

  objc_msgSend(v7, sel_setInfoHidden_, 1);
  id v13 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAnalyticsIdentifier_, v13);

  sub_1E0E68860();
  uint64_t v14 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v14);

  if (a2)
  {
    sub_1E0ECD9B0();
    id v15 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setValue_, v15);

    id v16 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a2);
    id v17 = objc_msgSend(a4, sel_localizedDisplayNameForDisplayType_value_, a3, v16);

    if (!v17)
    {
      sub_1E0ECD1D0();
      id v17 = (id)sub_1E0ECD190();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v18 = HKLocalizedNoDataString();
    objc_msgSend(v7, sel_setValue_, v18);

    id v17 = (id)sub_1E0ECD190();
  }
  objc_msgSend(v7, sel_setUnit_, v17);

  return v7;
}

void sub_1E0E69E8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void (**a6)(void, void, void))
{
  id v28 = a5;
  uint64_t v29 = a3;
  uint64_t v9 = sub_1E0ECB980();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  id v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a6;
  _Block_copy(a6);
  id v15 = objc_msgSend(a2, sel_primaryDisplayType);
  self;
  id v16 = (void *)swift_dynamicCastObjCClass();
  if (v16 && (id v17 = objc_msgSend(v16, sel_graphSeriesForTimeScope_, v29)) != 0)
  {
    id v18 = v17;
    uint64_t v27 = a4;
    sub_1E0ECB3A0();
    uint64_t v26 = sub_1E0ECB920();
    id v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v13, v9);
    sub_1E0ECB380();
    uint64_t v20 = (void *)sub_1E0ECB920();
    v19(v13, v9);
    id v21 = (void *)swift_allocObject();
    v21[2] = sub_1E0E6A1B4;
    v21[3] = v14;
    double v22 = v28;
    v21[4] = v28;
    aBlock[4] = sub_1E0E6A1FC;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E0E68310;
    aBlock[3] = &block_descriptor_31;
    double v23 = _Block_copy(aBlock);
    swift_retain();
    id v24 = v22;
    swift_release();
    id v25 = (void *)v26;
    objc_msgSend(a2, sel_cachedDataForCustomGraphSeries_timeScope_resolution_startDate_endDate_completion_, v18, v29, v27, v26, v20, v23);
    _Block_release(v23);
    swift_release();
  }
  else
  {

    a6[2](a6, 0, 0);
    swift_release();
  }
}

uint64_t sub_1E0E6A17C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1E0E6A1B4(char a1, uint64_t a2)
{
  sub_1E0E68504(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1E0E6A1BC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1E0E6A1FC(uint64_t a1, char a2, void *a3)
{
  return sub_1E0E67ED4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1E0E6A208()
{
  swift_release();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1E0E6A258()
{
  sub_1E0E681CC(*(unsigned char *)(v0 + 16), *(void (**)(uint64_t, id))(v0 + 24), *(void *)(v0 + 32), *(id *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

unint64_t sub_1E0E6A26C()
{
  unint64_t result = qword_1EAD6F050;
  if (!qword_1EAD6F050)
  {
    sub_1E0ECCE70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F050);
  }
  return result;
}

void sub_1E0E6A2C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1E0E6A328()
{
  unint64_t result = qword_1EAD6F060;
  if (!qword_1EAD6F060)
  {
    sub_1E0E6A2C4(255, &qword_1EAD6F058, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F060);
  }
  return result;
}

void sub_1E0E6A3C0(unint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  uint64_t v4 = a2;
  unint64_t v5 = a1;
  if ((a3 & 1) != 0 || a2 != 6)
  {
    id v18 = v32;
    uint64_t v19 = sub_1E0E6B7F0(v5, (uint64_t)v18);

    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void *)(v19 + 8 * v21 + 32);
        BOOL v24 = __OFADD__(v22, v23);
        v22 += v23;
        if (v24)
        {
          __break(1u);
          goto LABEL_27;
        }
        ++v21;
      }
      while (v20 != v21);
LABEL_24:
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_31:
      swift_bridgeObjectRelease();
      uint64_t v22 = 0;
    }
    sub_1E0E6ACF4(v22, v4, v3 & 1);
  }
  else
  {
    if (a1 >> 62) {
      goto LABEL_29;
    }
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v7 = v32;
    if (!v6) {
      goto LABEL_30;
    }
    while (1)
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      sub_1E0DEEA48(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0) {
        break;
      }
      int v29 = v3;
      uint64_t v8 = 0;
      uint64_t v9 = v33;
      uint64_t v30 = v4;
      unint64_t v31 = v5 & 0xC000000000000001;
      uint64_t v4 = v5;
      while (v6 != v8)
      {
        if (v31) {
          uint64_t v10 = (char *)MEMORY[0x1E4E3EF00](v8, v5);
        }
        else {
          uint64_t v10 = (char *)*(id *)(v5 + 8 * v8 + 32);
        }
        uint64_t v11 = v10;
        __swift_project_boxed_opaque_existential_0(&v10[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection], *(void *)&v10[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection + 24]);
        uint64_t v12 = sub_1E0ECBF60();
        id v13 = v32;
        uint64_t v14 = sub_1E0E6B4B0(v12, (uint64_t)v13);
        swift_bridgeObjectRelease();

        uint64_t v15 = *(void *)(v14 + 16);
        swift_bridgeObjectRelease();
        unint64_t v17 = *(void *)(v33 + 16);
        unint64_t v16 = *(void *)(v33 + 24);
        unint64_t v3 = v17 + 1;
        if (v17 >= v16 >> 1) {
          sub_1E0DEEA48(v16 > 1, v17 + 1, 1);
        }
        ++v8;
        *(void *)(v33 + 16) = v3;
        *(void *)(v33 + 8 * v17 + 32) = v15;
        unint64_t v5 = v4;
        if (v6 == v8)
        {

          uint64_t v4 = v30;
          LODWORD(v3) = v29;
          uint64_t v25 = *(void *)(v33 + 16);
          if (v25) {
            goto LABEL_21;
          }
          goto LABEL_31;
        }
      }
LABEL_27:
      __break(1u);
      while (1)
      {
        __break(1u);
LABEL_29:
        id v28 = v32;
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1E0ECD910();
        swift_bridgeObjectRelease();
        if (v6) {
          break;
        }
LABEL_30:

        uint64_t v9 = MEMORY[0x1E4FBC860];
        uint64_t v25 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (!v25) {
          goto LABEL_31;
        }
LABEL_21:
        uint64_t v26 = 0;
        uint64_t v22 = 0;
        while (1)
        {
          uint64_t v27 = *(void *)(v9 + 8 * v26 + 32);
          BOOL v24 = __OFADD__(v22, v27);
          v22 += v27;
          if (v24) {
            break;
          }
          if (v25 == ++v26) {
            goto LABEL_24;
          }
        }
      }
    }
    __break(1u);
  }
}

uint64_t sub_1E0E6A688@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v76 = sub_1E0ECBEF0();
  uint64_t v69 = *(void *)(v76 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v76, v5);
  uint64_t v56 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v75 = (char *)v55 - v9;
  uint64_t v10 = sub_1E0ECBEA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v67 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  id v18 = (char *)v55 - v17;
  MEMORY[0x1F4188790](v16, v19);
  uint64_t v21 = (char *)v55 - v20;
  uint64_t v22 = *a1;
  uint64_t v23 = a2 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
  BOOL v24 = *(void (**)(char *, void, uint64_t))(v11 + 104);
  v24((char *)v55 - v20, *MEMORY[0x1E4F65948], v10);
  uint64_t v74 = v23;
  LODWORD(v72) = sub_1E0ECBE90();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v68 = v21;
  uint64_t v73 = v25;
  unint64_t v71 = v11 + 8;
  v25(v21, v10);
  uint64_t v26 = (void *)(v22 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection);
  __swift_project_boxed_opaque_existential_0(v26, v26[3]);
  uint64_t v27 = sub_1E0ECBF60();
  uint64_t v28 = *(void *)(v27 + 16);
  if (v72)
  {
    id v64 = v24;
    uint64_t v65 = v11 + 104;
    unint64_t v66 = v18;
    uint64_t v70 = v10;
    if (v28)
    {
      uint64_t v63 = v26;
      int v29 = v68;
      uint64_t v72 = *(char **)(v69 + 16);
      unint64_t v30 = v27 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
      uint64_t v31 = *(void *)(v69 + 72);
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v72)(v75, v30, v76);
        sub_1E0ECBE80();
        char v32 = sub_1E0ECBE90();
        v73(v29, v70);
        if (v32) {
          break;
        }
        v30 += v31;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = 1;
LABEL_14:
      uint64_t v40 = v76;
      uint64_t v26 = v63;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v76;
      int v29 = v68;
    }
    __swift_project_boxed_opaque_existential_0(v26, v26[3]);
    uint64_t v41 = sub_1E0ECBF60();
    id v42 = *(char **)(v41 + 16);
    if (v42)
    {
      v55[0] = v28;
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      unint64_t v43 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      v55[1] = v41;
      unint64_t v44 = v41 + v43;
      unsigned int v61 = *MEMORY[0x1E4F65940];
      unint64_t v60 = (void (**)(char *, char *, uint64_t))(v11 + 16);
      unsigned int v59 = *MEMORY[0x1E4F65938];
      uint64_t v63 = (void *)(v69 + 8);
      v69 += 16;
      uint64_t v58 = *(void *)(v69 + 56);
      uint64_t v45 = v56;
      uint64_t v46 = v70;
      uint64_t v47 = v66;
      while (1)
      {
        unint64_t v71 = v44;
        uint64_t v72 = v42;
        uint64_t v48 = v62;
        ((void (*)(char *))v62)(v45);
        v48(v75, v45, v40);
        sub_1E0ECBE80();
        id v49 = v64;
        v64(v29, v61, v46);
        LODWORD(v74) = sub_1E0ECBE90();
        uint64_t v50 = v73;
        v73(v29, v46);
        uint64_t v51 = v67;
        (*v60)(v67, v47, v46);
        if (v74) {
          break;
        }
        v49(v29, v59, v46);
        char v52 = sub_1E0ECBE90();
        v50(v29, v46);
        v50(v47, v46);
        v50(v51, v46);
        ((void (*)(char *, uint64_t))*v63)(v45, v76);
        if (v52) {
          goto LABEL_24;
        }
        unint64_t v44 = v71 + v58;
        id v42 = v72 - 1;
        uint64_t v40 = v76;
        uint64_t v47 = v66;
        int v29 = v68;
        if (v72 == (char *)1)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v54 = v57;
          uint64_t v28 = v55[0];
          goto LABEL_26;
        }
      }
      v50(v47, v46);
      v50(v51, v46);
      ((void (*)(char *, uint64_t))*v63)(v45, v76);
LABEL_24:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      goto LABEL_25;
    }
LABEL_21:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (!v28) {
    goto LABEL_21;
  }
  uint64_t v33 = v68;
  uint64_t v34 = v69 + 16;
  uint64_t v72 = *(char **)(v69 + 16);
  uint64_t v35 = *(unsigned __int8 *)(v69 + 80);
  uint64_t v69 = v27;
  uint64_t v36 = v27 + ((v35 + 32) & ~v35);
  uint64_t v37 = *(void *)(v34 + 56);
  id v38 = v73;
  while (1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v72)(v75, v36, v76);
    sub_1E0ECBE80();
    char v39 = sub_1E0ECBE90();
    v38(v33, v10);
    if (v39) {
      break;
    }
    v36 += v37;
    if (!--v28) {
      goto LABEL_21;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = 1;
LABEL_25:
  uint64_t v54 = v57;
LABEL_26:
  uint64_t *v54 = v28;
  return result;
}

void sub_1E0E6ACF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = sub_1E0ECBEA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v47 - v14;
  if (a1 < 1)
  {
    uint64_t v23 = (void *)sub_1E0ECD190();
    id v24 = HKUILocalizedString(v23);

    if (!v24)
    {
      __break(1u);
      return;
    }
    uint64_t v55 = sub_1E0ECD1D0();
    uint64_t v20 = v25;

    if ((a3 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v49 = 0;
    uint64_t v22 = 0;
    goto LABEL_7;
  }
  sub_1E0E3B45C();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v16 + 16) = xmmword_1E0F07C90;
  uint64_t v18 = MEMORY[0x1E4FBB5C8];
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = v18;
  *(void *)(v16 + 32) = a1;
  uint64_t v55 = sub_1E0ECD1A0();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (a3) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v49 = sub_1E0E6BBC0(a1, a2, 0);
  uint64_t v22 = v21;
LABEL_7:
  id v26 = objc_msgSend(objc_allocWithZone((Class)HKDisplayTypeContextItem), sel_init);
  uint64_t v27 = v3 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
  char v52 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v52(v15, v3 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification, v7);
  uint64_t v48 = v8;
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t))(v8 + 88);
  int v28 = v51(v15, v7);
  int v29 = *MEMORY[0x1E4F65940];
  uint64_t v56 = v20;
  uint64_t v53 = v3;
  uint64_t v54 = v22;
  int v50 = v29;
  if (v28 == v29)
  {
    uint64_t v30 = v27;
    uint64_t v31 = v12;
  }
  else if (v28 == *MEMORY[0x1E4F65938])
  {
    uint64_t v30 = v27;
    uint64_t v31 = v12;
  }
  else
  {
    uint64_t v30 = v27;
    if (v28 == *MEMORY[0x1E4F65948])
    {
      uint64_t v31 = v12;
    }
    else
    {
      uint64_t v31 = v12;
      if (v28 != *MEMORY[0x1E4F65930]) {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v7);
      }
    }
  }
  char v32 = self;
  uint64_t v33 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v32, sel_hk_chartOverlayAccessibilityIdentifier_, v33);

  if (v34)
  {
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    sub_1E0ECD1C0();

    uint64_t v35 = v31;
    if (v58)
    {
      id v34 = (id)sub_1E0ECD190();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v34 = 0;
    }
  }
  else
  {
    uint64_t v35 = v31;
  }
  uint64_t v36 = v30;
  objc_msgSend(v26, sel_setAccessibilityIdentifier_, v34);

  uint64_t v37 = *(void *)(v53 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_mode);
  if (v37 == 1) {
    sub_1E0E98F34();
  }
  else {
    sub_1E0E99228();
  }
  uint64_t v38 = v54;
  char v39 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setTitle_, v39);

  id v40 = objc_msgSend(self, sel_defaultMetricColorsForOverlayMode_, v37);
  objc_msgSend(v26, sel_setMetricColors_, v40);

  v52(v35, v36, v7);
  int v41 = v51(v35, v7);
  if (v41 == v50 || v41 == *MEMORY[0x1E4F65938])
  {
    sub_1E0DF9300();
    unint64_t v43 = v44;
  }
  else
  {
    sub_1E0DF92EC();
    unint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v7);
  }
  objc_msgSend(v26, sel_setSelectedMetricColors_, v43);

  uint64_t v45 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setValue_, v45);

  if (v38)
  {
    uint64_t v46 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
  }
  objc_msgSend(v26, sel_setUnit_, v46);
}

void sub_1E0E6B27C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
  uint64_t v2 = sub_1E0ECBEA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_dataSourceDelegate);
}

id sub_1E0E6B2F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceClassificationOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E6B3B0()
{
  return type metadata accessor for BalanceClassificationOverlayContext();
}

uint64_t type metadata accessor for BalanceClassificationOverlayContext()
{
  uint64_t result = qword_1EAD6F068;
  if (!qword_1EAD6F068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0E6B404()
{
  uint64_t result = sub_1E0ECBEA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1E0E6B4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E0ECBEA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  int v41 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E0ECBEF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  unint64_t v43 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  id v42 = (char *)&v32 - v15;
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v21 = v9 + 16;
    char v39 = v22;
    uint64_t v40 = v4;
    uint64_t v23 = *(void *)(v21 + 56);
    unint64_t v34 = (*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64);
    uint64_t v35 = a2 + OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification;
    id v24 = (char *)(a1 + v34);
    uint64_t v33 = (void (**)(char *, uint64_t))(v21 - 8);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    uint64_t v38 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v21;
    do
    {
      uint64_t v25 = v39;
      v39(v18, v24, v8);
      v25(v42, v18, v8);
      id v26 = v41;
      sub_1E0ECBE80();
      char v27 = sub_1E0ECBE90();
      (*v38)(v26, v40);
      if (v27)
      {
        int v28 = *v37;
        (*v37)(v43, v18, v8);
        uint64_t v29 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1E0DEEB74(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v44;
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1E0DEEB74(v30 > 1, v31 + 1, 1);
          uint64_t v29 = v44;
        }
        *(void *)(v29 + 16) = v31 + 1;
        v28((char *)(v29 + v34 + v31 * v23), v43, v8);
        uint64_t v44 = v29;
      }
      else
      {
        (*v33)(v18, v8);
      }
      v24 += v23;
      --v20;
    }
    while (v20);
    return v44;
  }
  return result;
}

uint64_t sub_1E0E6B7F0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (!v5) {
      return v6;
    }
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E0DEEA48(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    uint64_t v8 = 0;
    uint64_t v6 = v17;
    while (v5 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1E4E3EF00](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v15 = v9;
      sub_1E0E6A688((uint64_t *)&v15, a2, &v16);
      if (v3)
      {
        swift_release();

        return v6;
      }
      uint64_t v3 = 0;

      uint64_t v11 = v16;
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1E0DEEA48(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v17;
      }
      ++v8;
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      if (v5 == v8) {
        return v6;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1E0E6B974(void *a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v8 = sub_1E0ECBEA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  char v27 = a3;
  v13(&v4[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification], (uint64_t)a3, v8);
  v13(v12, (uint64_t)a3, v8);
  uint64_t v14 = (objc_class *)type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
  id v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_applicationItems] = a2;
  *(void *)&v15[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_baseDisplayType] = a1;
  v13(&v15[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_classification], (uint64_t)v12, v8);
  v29.receiver = v15;
  v29.super_class = v14;
  uint64_t v16 = v4;
  id v17 = a2;
  id v18 = a1;
  id v19 = objc_msgSendSuper2(&v29, sel_init);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, v8);
  *(void *)&v16[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_dataSourceDelegate] = v19;
  *(void *)&v16[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_mode] = v26;
  id v21 = v19;
  id v22 = sub_1E0DFD320(v18, (uint64_t)v21);

  *(void *)&v16[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
  *(void *)&v16[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v18;
  *(void *)&v16[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v22;
  uint64_t v23 = (objc_class *)type metadata accessor for BalanceOverlayContext();
  v28.receiver = v16;
  v28.super_class = v23;
  id v24 = objc_msgSendSuper2(&v28, sel_init);
  v20(v27, v8);
  return v24;
}

uint64_t sub_1E0E6BBC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1E0ECBA30();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v8 = sub_1E0ECD160();
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v10 = sub_1E0ECD180();
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  MEMORY[0x1F4188790](v14, v15);
  if ((a3 & 1) == 0)
  {
    if (a2 == 3)
    {
      if (a1 < 1)
      {
        sub_1E0ECD110();
      }
      else
      {
        sub_1E0ECD150();
        sub_1E0ECD140();
        sub_1E0ECD120();
        sub_1E0ECD140();
        sub_1E0ECD170();
      }
      sub_1E0ECD800();
      swift_bridgeObjectRelease();
      if (qword_1EAD69948 != -1) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    if (a2 == 6)
    {
      if (a1 < 1)
      {
        sub_1E0ECD110();
      }
      else
      {
        sub_1E0ECD150();
        sub_1E0ECD140();
        sub_1E0ECD120();
        sub_1E0ECD140();
        sub_1E0ECD170();
      }
      sub_1E0ECD800();
      swift_bridgeObjectRelease();
      if (qword_1EAD69948 == -1) {
        goto LABEL_18;
      }
LABEL_19:
      swift_once();
      goto LABEL_18;
    }
  }
  if (a1 < 1)
  {
    sub_1E0ECD110();
  }
  else
  {
    sub_1E0ECD150();
    sub_1E0ECD140();
    sub_1E0ECD120();
    sub_1E0ECD140();
    sub_1E0ECD170();
  }
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    goto LABEL_19;
  }
LABEL_18:
  id v16 = (id)qword_1EAD740B8;
  sub_1E0ECBA20();
  return sub_1E0ECD1F0();
}

uint64_t sub_1E0E6C088@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1E0ECD530();
    unint64_t v31 = (void *)sub_1E0ECC8A0();
    sub_1E0ECBFC0();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_1E0ECC420();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1E0E11B20(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E0E6C27C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1E0ECD530();
    uint64_t v23 = (void *)sub_1E0ECC8A0();
    sub_1E0ECBFC0();
  }
  sub_1E0ECC420();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_1E0E71880((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_1E0E718DC((uint64_t)v39);
  sub_1E0E2FDF4((uint64_t)&v38);
  return sub_1E0E71C54((uint64_t)&v34);
}

uint64_t sub_1E0E6C458@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1E0ECD530();
    uint64_t v23 = (void *)sub_1E0ECC8A0();
    sub_1E0ECBFC0();
  }
  sub_1E0ECC420();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(void *)(a9 + 64) = *(void *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;
  return sub_1E0E71C54(v13);
}

uint64_t TipView.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TipView.detail.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id TipView.iconConfiguration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[5];
  id v4 = (id)v1[6];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

__n128 TipView.init(title:detail:iconConfiguration:isTipPresented:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v18 = *a5;
  sub_1E0E71A94(0, &qword_1EAD6F078, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBB718]);
  __n128 v21 = *(__n128 *)(a5 + 1);
  sub_1E0ECCCF0();
  *(void *)(a9 + 80) = v22;
  *(unsigned char *)(a9 + 88) = v23;
  *(void *)(a9 + 96) = v24;
  id v19 = (uint64_t *)(a9 + *(int *)(type metadata accessor for TipView() + 36));
  uint64_t *v19 = swift_getKeyPath();
  sub_1E0E70D40(0, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  swift_storeEnumTagMultiPayload();
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = v18;
  __n128 result = v21;
  *(__n128 *)(a9 + 40) = v21;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(unsigned char *)(a9 + 72) = a8;
  return result;
}

uint64_t type metadata accessor for TipView()
{
  uint64_t result = qword_1EAD6F220;
  if (!qword_1EAD6F220) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TipView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = type metadata accessor for TipView();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v67 = *(void *)(v68 + 64);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v65 = sub_1E0E6EF34;
  uint64_t v66 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3EBC8];
  sub_1E0E70D40(0, &qword_1EAD6F080, (uint64_t (*)(uint64_t))sub_1E0E6EF34, MEMORY[0x1E4F3EBC8]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v63 - v8;
  sub_1E0E6FA28();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6FAEC(0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15, v17);
  id v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6FB14(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20, v22);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6FBA0(0);
  uint64_t v26 = v25 - 8;
  MEMORY[0x1F4188790](v25, v27);
  long long v29 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6CE18(v2, (uint64_t)v9);
  id v30 = objc_msgSend(self, sel_labelColor);
  uint64_t v31 = MEMORY[0x1E4E3E2D0](v30);
  sub_1E0E6FBC8((uint64_t)v9, (uint64_t)v14);
  *(void *)&v14[*(int *)(v11 + 44)] = v31;
  sub_1E0E70908((uint64_t)v9, &qword_1EAD6F080, (uint64_t (*)(uint64_t))v65, v64);
  LOBYTE(v31) = sub_1E0ECC8E0();
  sub_1E0ECC270();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_1E0E71B5C((uint64_t)v14, (uint64_t)v19, (uint64_t (*)(void))sub_1E0E6FA28);
  uint64_t v40 = &v19[*(int *)(v16 + 44)];
  *uint64_t v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_1E0E6FC5C((uint64_t)v14, (uint64_t (*)(void))sub_1E0E6FA28);
  LOBYTE(v31) = sub_1E0ECC930();
  sub_1E0ECC270();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_1E0E71B5C((uint64_t)v19, (uint64_t)v24, (uint64_t (*)(void))sub_1E0E6FAEC);
  uint64_t v49 = &v24[*(int *)(v21 + 44)];
  *uint64_t v49 = v31;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_1E0E6FC5C((uint64_t)v19, (uint64_t (*)(void))sub_1E0E6FAEC);
  uint64_t v50 = v63;
  char v51 = *(unsigned char *)(v63 + 88);
  uint64_t v52 = *(void *)(v63 + 96);
  *(void *)&long long v70 = *(void *)(v63 + 80);
  BYTE8(v70) = v51;
  *(void *)&long long v71 = v52;
  sub_1E0E6F354(0, &qword_1EAD6F1A8, &qword_1EAD6F078, MEMORY[0x1E4FBC958], MEMORY[0x1E4F3ECC8]);
  sub_1E0ECCD00();
  sub_1E0ECCE20();
  sub_1E0ECC320();
  sub_1E0E71B5C((uint64_t)v24, (uint64_t)v29, (uint64_t (*)(void))sub_1E0E6FB14);
  uint64_t v53 = &v29[*(int *)(v26 + 44)];
  long long v54 = v71;
  *(_OWORD *)uint64_t v53 = v70;
  *((_OWORD *)v53 + 1) = v54;
  *((_OWORD *)v53 + 2) = v72;
  sub_1E0E6FC5C((uint64_t)v24, (uint64_t (*)(void))sub_1E0E6FB14);
  uint64_t v55 = v50;
  uint64_t v56 = v66;
  sub_1E0E71B5C(v55, v66, (uint64_t (*)(void))type metadata accessor for TipView);
  unint64_t v57 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v58 = swift_allocObject();
  sub_1E0E6FCC0(v56, v58 + v57);
  uint64_t v59 = v69;
  sub_1E0E71B5C((uint64_t)v29, v69, (uint64_t (*)(void))sub_1E0E6FBA0);
  sub_1E0E71638(0, &qword_1EAD6F1B0, (uint64_t (*)(uint64_t))sub_1E0E6FBA0, (uint64_t (*)(uint64_t))sub_1E0E6FD94, MEMORY[0x1E4F3CC10]);
  unsigned int v61 = (void *)(v59 + *(int *)(v60 + 36));
  *unsigned int v61 = sub_1E0E6D278;
  v61[1] = 0;
  v61[2] = sub_1E0E6FD24;
  v61[3] = v58;
  return sub_1E0E6FC5C((uint64_t)v29, (uint64_t (*)(void))sub_1E0E6FBA0);
}

uint64_t sub_1E0E6CE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v26[0] = a2;
  sub_1E0E6F694();
  v26[1] = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E71638(0, &qword_1EAD6F288, (uint64_t (*)(uint64_t))sub_1E0E6EF7C, (uint64_t (*)(uint64_t))sub_1E0E6F694, MEMORY[0x1E4F3D748]);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)v26 - v9;
  sub_1E0E6EF7C();
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E0ECC3E0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  id v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TipView();
  sub_1E0E2D158((uint64_t)v19);
  char v20 = sub_1E0ECC3D0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (v20)
  {
    *(void *)uint64_t v14 = sub_1E0ECC630();
    *((void *)v14 + 1) = 0;
    v14[16] = 1;
    sub_1E0E71AE0(0, &qword_1EAD6F298, &qword_1EAD6F098, (uint64_t (*)(uint64_t))sub_1E0E6F030);
    sub_1E0E6D330(a1, (uint64_t)&v14[*(int *)(v21 + 44)]);
    sub_1E0E71B5C((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))sub_1E0E6EF7C);
    swift_storeEnumTagMultiPayload();
    sub_1E0E71568(&qword_1EAD6F268, (void (*)(uint64_t))sub_1E0E6EF7C);
    sub_1E0E71568(&qword_1EAD6F270, (void (*)(uint64_t))sub_1E0E6F694);
    sub_1E0ECC740();
    uint64_t v22 = sub_1E0E6EF7C;
    uint64_t v23 = (uint64_t)v14;
  }
  else
  {
    *(void *)uint64_t v6 = sub_1E0ECC5F0();
    *((void *)v6 + 1) = 0x4026000000000000;
    v6[16] = 0;
    sub_1E0E716BC(0, &qword_1EAD6F290, &qword_1EAD6F128, (uint64_t (*)(uint64_t))sub_1E0E6F748);
    sub_1E0E6DEDC(a1, (uint64_t)&v6[*(int *)(v24 + 44)]);
    sub_1E0E71B5C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))sub_1E0E6F694);
    swift_storeEnumTagMultiPayload();
    sub_1E0E71568(&qword_1EAD6F268, (void (*)(uint64_t))sub_1E0E6EF7C);
    sub_1E0E71568(&qword_1EAD6F270, (void (*)(uint64_t))sub_1E0E6F694);
    sub_1E0ECC740();
    uint64_t v22 = sub_1E0E6F694;
    uint64_t v23 = (uint64_t)v6;
  }
  return sub_1E0E6FC5C(v23, (uint64_t (*)(void))v22);
}

uint64_t sub_1E0E6D278@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1E0ECC330();
  *a1 = v3;
  return result;
}

uint64_t sub_1E0E6D2A4()
{
  return sub_1E0ECCD10();
}

uint64_t sub_1E0E6D330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E0E6F0A4();
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)&v38 - v10;
  *(void *)uint64_t v11 = sub_1E0ECC5F0();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  sub_1E0E716BC(0, &qword_1EAD6F2A0, &qword_1EAD6F0B0, (uint64_t (*)(uint64_t))sub_1E0E6F158);
  sub_1E0E6D668(a1, (uint64_t)&v11[*(int *)(v12 + 44)]);
  sub_1E0E6DAB0((uint64_t)v60);
  sub_1E0E6DCD4((uint64_t)v62);
  sub_1E0E71B5C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1E0E6F0A4);
  long long v57 = v60[8];
  long long v58 = v60[9];
  uint64_t v59 = v61;
  long long v53 = v60[4];
  long long v54 = v60[5];
  long long v55 = v60[6];
  long long v56 = v60[7];
  long long v49 = v60[0];
  long long v50 = v60[1];
  long long v51 = v60[2];
  long long v52 = v60[3];
  long long v46 = v62[8];
  long long v47 = v62[9];
  uint64_t v48 = v63;
  long long v42 = v62[4];
  long long v43 = v62[5];
  long long v44 = v62[6];
  long long v45 = v62[7];
  long long v38 = v62[0];
  long long v39 = v62[1];
  long long v40 = v62[2];
  long long v41 = v62[3];
  sub_1E0E71B5C((uint64_t)v8, a2, (uint64_t (*)(void))sub_1E0E6F0A4);
  sub_1E0E6F030();
  uint64_t v14 = *(int *)(v13 + 48);
  uint64_t v15 = v59;
  uint64_t v65 = v59;
  uint64_t v16 = a2 + v14;
  long long v18 = v57;
  long long v17 = v58;
  v64[8] = v57;
  v64[9] = v58;
  long long v19 = v54;
  v64[4] = v53;
  v64[5] = v54;
  long long v20 = v55;
  long long v21 = v56;
  v64[6] = v55;
  v64[7] = v56;
  long long v22 = v49;
  long long v23 = v50;
  v64[0] = v49;
  v64[1] = v50;
  long long v25 = v51;
  long long v24 = v52;
  v64[2] = v51;
  v64[3] = v52;
  *(_OWORD *)(v16 + 64) = v53;
  *(_OWORD *)(v16 + 80) = v19;
  *(void *)(v16 + 160) = v15;
  *(_OWORD *)(v16 + 128) = v18;
  *(_OWORD *)(v16 + 144) = v17;
  *(_OWORD *)(v16 + 96) = v20;
  *(_OWORD *)(v16 + 112) = v21;
  *(_OWORD *)uint64_t v16 = v22;
  *(_OWORD *)(v16 + 16) = v23;
  *(_OWORD *)(v16 + 32) = v25;
  *(_OWORD *)(v16 + 48) = v24;
  uint64_t v26 = *(int *)(v13 + 64);
  long long v27 = v47;
  v66[8] = v46;
  v66[9] = v47;
  long long v28 = v42;
  long long v29 = v43;
  v66[4] = v42;
  v66[5] = v43;
  long long v31 = v44;
  long long v30 = v45;
  v66[6] = v44;
  v66[7] = v45;
  long long v32 = v38;
  long long v33 = v39;
  v66[0] = v38;
  v66[1] = v39;
  long long v35 = v40;
  long long v34 = v41;
  v66[2] = v40;
  v66[3] = v41;
  uint64_t v36 = a2 + v26;
  *(_OWORD *)(v36 + 128) = v46;
  *(_OWORD *)(v36 + 144) = v27;
  *(_OWORD *)(v36 + 64) = v28;
  *(_OWORD *)(v36 + 80) = v29;
  *(_OWORD *)(v36 + 96) = v31;
  *(_OWORD *)(v36 + 112) = v30;
  *(_OWORD *)uint64_t v36 = v32;
  *(_OWORD *)(v36 + 16) = v33;
  uint64_t v67 = v48;
  *(void *)(v36 + 160) = v48;
  *(_OWORD *)(v36 + 32) = v35;
  *(_OWORD *)(v36 + 48) = v34;
  sub_1E0E71738((uint64_t)v64);
  sub_1E0E71738((uint64_t)v66);
  sub_1E0E6FC5C((uint64_t)v11, (uint64_t (*)(void))sub_1E0E6F0A4);
  v68[8] = v46;
  v68[9] = v47;
  uint64_t v69 = v48;
  v68[4] = v42;
  v68[5] = v43;
  v68[7] = v45;
  v68[6] = v44;
  v68[0] = v38;
  v68[1] = v39;
  v68[3] = v41;
  v68[2] = v40;
  sub_1E0E71788((uint64_t)v68);
  v70[8] = v57;
  v70[9] = v58;
  uint64_t v71 = v59;
  v70[4] = v53;
  v70[5] = v54;
  v70[6] = v55;
  v70[7] = v56;
  v70[0] = v49;
  v70[1] = v50;
  v70[2] = v51;
  v70[3] = v52;
  sub_1E0E71788((uint64_t)v70);
  return sub_1E0E6FC5C((uint64_t)v8, (uint64_t (*)(void))sub_1E0E6F0A4);
}

uint64_t sub_1E0E6D668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TipView();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v44 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v42 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6F25C();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v7, v10);
  long long v46 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v13);
  long long v43 = (char *)&v38 - v14;
  uint64_t v15 = sub_1E0ECCCB0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  long long v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  id v21 = v20;
  sub_1E0ECCCE0();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E4F3EBF8], v15);
  uint64_t v22 = sub_1E0ECCCD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  sub_1E0ECCE20();
  sub_1E0ECC320();
  LOBYTE(v16) = v53;
  uint64_t v40 = v54;
  uint64_t v41 = v52;
  LOBYTE(v19) = v55;
  uint64_t v38 = v57;
  uint64_t v39 = v56;
  uint64_t v23 = a1;
  uint64_t v24 = v42;
  sub_1E0E71B5C(v23, v42, (uint64_t (*)(void))type metadata accessor for TipView);
  unint64_t v25 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v26 = swift_allocObject();
  sub_1E0E6FCC0(v24, v26 + v25);
  sub_1E0E6F2C0();
  sub_1E0E6F3D0();
  long long v27 = v43;
  sub_1E0ECCD40();
  char v51 = 1;
  char v50 = 0;
  char v49 = v16;
  char v48 = (char)v19;
  char v47 = 1;
  long long v28 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  long long v29 = v46;
  v28(v46, v27, v8);
  char v30 = v51;
  char v31 = v50;
  char v32 = v49;
  char v33 = v48;
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v30;
  *(unsigned char *)(a2 + 17) = v31;
  *(void *)(a2 + 24) = v41;
  *(unsigned char *)(a2 + 32) = v32;
  *(void *)(a2 + 40) = v40;
  *(unsigned char *)(a2 + 48) = v33;
  uint64_t v34 = v38;
  *(void *)(a2 + 56) = v39;
  *(void *)(a2 + 64) = v34;
  LOBYTE(v34) = v47;
  *(void *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = v34;
  sub_1E0E6F158();
  v28((char *)(a2 + *(int *)(v35 + 64)), v29, v8);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v36(v27, v8);
  v36(v29, v8);
  return swift_release();
}

double sub_1E0E6DAB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *(void *)&long long v32 = v3;
  *((void *)&v32 + 1) = v4;
  sub_1E0E0F184();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1E0ECCAF0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1E0ECC970();
  sub_1E0ECC9B0();
  sub_1E0ECC9F0();
  swift_release();
  uint64_t v10 = sub_1E0ECCAB0();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v24 = v15;
  swift_release();
  sub_1E0DF8F74(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1E0E11B20(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  uint64_t v26 = v10;
  uint64_t v27 = v12;
  char v28 = v14 & 1;
  uint64_t v29 = v24;
  uint64_t v30 = KeyPath;
  char v31 = 0;
  sub_1E0ECCE30();
  sub_1E0E6C27C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1);
  sub_1E0DF8F74(v10, v12, v14 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1E0DF8F74(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  long long v38 = v25[6];
  long long v39 = v25[7];
  long long v40 = v25[8];
  long long v41 = v25[9];
  long long v34 = v25[2];
  long long v35 = v25[3];
  long long v36 = v25[4];
  long long v37 = v25[5];
  long long v32 = v25[0];
  long long v33 = v25[1];
  int v17 = sub_1E0ECC7D0();
  long long v18 = v39;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v18;
  long long v19 = v41;
  *(_OWORD *)(a1 + 128) = v40;
  *(_OWORD *)(a1 + 144) = v19;
  long long v20 = v35;
  *(_OWORD *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v20;
  long long v21 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v21;
  double result = *(double *)&v32;
  long long v23 = v33;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v23;
  *(_WORD *)(a1 + 160) = 256;
  *(_DWORD *)(a1 + 164) = v17;
  return result;
}

double sub_1E0E6DCD4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)&long long v32 = v3;
  *((void *)&v32 + 1) = v4;
  sub_1E0E0F184();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1E0ECCAF0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1E0ECC940();
  uint64_t v10 = sub_1E0ECCAB0();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v24 = v15;
  swift_release();
  sub_1E0DF8F74(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1E0E11B20(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  uint64_t v26 = v10;
  uint64_t v27 = v12;
  char v28 = v14 & 1;
  uint64_t v29 = v24;
  uint64_t v30 = KeyPath;
  char v31 = 0;
  sub_1E0ECCE30();
  sub_1E0E6C27C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1);
  sub_1E0DF8F74(v10, v12, v14 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1E0DF8F74(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  long long v38 = v25[6];
  long long v39 = v25[7];
  long long v40 = v25[8];
  long long v41 = v25[9];
  long long v34 = v25[2];
  long long v35 = v25[3];
  long long v36 = v25[4];
  long long v37 = v25[5];
  long long v32 = v25[0];
  long long v33 = v25[1];
  int v17 = sub_1E0ECC7E0();
  long long v18 = v39;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v18;
  long long v19 = v41;
  *(_OWORD *)(a1 + 128) = v40;
  *(_OWORD *)(a1 + 144) = v19;
  long long v20 = v35;
  *(_OWORD *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v20;
  long long v21 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v21;
  double result = *(double *)&v32;
  long long v23 = v33;
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v23;
  *(_WORD *)(a1 + 160) = 256;
  *(_DWORD *)(a1 + 164) = v17;
  return result;
}

uint64_t sub_1E0E6DEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E0E6F940();
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v58 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v56 - v9;
  sub_1E0E6F7DC();
  uint64_t v13 = MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v59 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v57 = (uint64_t *)((char *)&v56 - v16);
  uint64_t v17 = sub_1E0ECCCB0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19);
  long long v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  id v23 = v22;
  sub_1E0ECCCE0();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, *MEMORY[0x1E4F3EBF8], v17);
  uint64_t v24 = sub_1E0ECCCD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  sub_1E0ECCE20();
  sub_1E0ECC320();
  uint64_t v76 = v24;
  uint64_t v77 = 0;
  __int16 v78 = 1;
  uint64_t v79 = v71;
  char v80 = v72;
  uint64_t v81 = v73;
  char v82 = v74;
  long long v83 = v75;
  sub_1E0ECCE20();
  sub_1E0E6C458(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v84, 0.0, 1, INFINITY, 0);
  swift_release();
  uint64_t v25 = sub_1E0ECC620();
  uint64_t v26 = (uint64_t)v57;
  *uint64_t v57 = v25;
  *(void *)(v26 + 8) = 0;
  *(unsigned char *)(v26 + 16) = 1;
  sub_1E0E71AE0(0, &qword_1EAD6F2A8, &qword_1EAD6F148, (uint64_t (*)(uint64_t))sub_1E0E6F890);
  uint64_t v28 = v26 + *(int *)(v27 + 44);
  *(void *)uint64_t v10 = sub_1E0ECC5F0();
  *((void *)v10 + 1) = 0x4024000000000000;
  v10[16] = 0;
  sub_1E0E716BC(0, &qword_1EAD6F2B0, &qword_1EAD6F160, (uint64_t (*)(uint64_t))sub_1E0E6F9F4);
  sub_1E0E6E4F0(a1, (uint64_t)&v10[*(int *)(v29 + 44)]);
  sub_1E0E6DCD4((uint64_t)v96);
  uint64_t v30 = v58;
  sub_1E0E71B5C((uint64_t)v10, v58, (uint64_t (*)(void))sub_1E0E6F940);
  long long v68 = v96[8];
  long long v69 = v96[9];
  uint64_t v70 = v97;
  long long v64 = v96[4];
  long long v65 = v96[5];
  long long v66 = v96[6];
  long long v67 = v96[7];
  long long v60 = v96[0];
  long long v61 = v96[1];
  long long v62 = v96[2];
  long long v63 = v96[3];
  sub_1E0E71B5C(v30, v28, (uint64_t (*)(void))sub_1E0E6F940);
  sub_1E0E6F890(0);
  uint64_t v32 = *(int *)(v31 + 48);
  long long v33 = v69;
  v98[8] = v68;
  v98[9] = v69;
  long long v34 = v64;
  long long v35 = v65;
  v98[4] = v64;
  v98[5] = v65;
  long long v37 = v66;
  long long v36 = v67;
  v98[6] = v66;
  v98[7] = v67;
  long long v38 = v60;
  long long v39 = v61;
  v98[0] = v60;
  v98[1] = v61;
  long long v41 = v62;
  long long v40 = v63;
  v98[2] = v62;
  v98[3] = v63;
  uint64_t v42 = v28 + v32;
  *(_OWORD *)(v42 + 128) = v68;
  *(_OWORD *)(v42 + 144) = v33;
  *(_OWORD *)(v42 + 64) = v34;
  *(_OWORD *)(v42 + 80) = v35;
  *(_OWORD *)(v42 + 96) = v37;
  *(_OWORD *)(v42 + 112) = v36;
  *(_OWORD *)uint64_t v42 = v38;
  *(_OWORD *)(v42 + 16) = v39;
  uint64_t v99 = v70;
  *(void *)(v42 + 160) = v70;
  *(_OWORD *)(v42 + 32) = v41;
  *(_OWORD *)(v42 + 48) = v40;
  sub_1E0E71738((uint64_t)v98);
  sub_1E0E6FC5C((uint64_t)v10, (uint64_t (*)(void))sub_1E0E6F940);
  v100[8] = v68;
  v100[9] = v69;
  uint64_t v101 = v70;
  v100[4] = v64;
  v100[5] = v65;
  v100[6] = v66;
  v100[7] = v67;
  v100[0] = v60;
  v100[1] = v61;
  v100[2] = v62;
  v100[3] = v63;
  sub_1E0E71788((uint64_t)v100);
  sub_1E0E6FC5C(v30, (uint64_t (*)(void))sub_1E0E6F940);
  uint64_t v43 = v59;
  sub_1E0E71B5C(v26, v59, (uint64_t (*)(void))sub_1E0E6F7DC);
  long long v44 = v93;
  v102[8] = v92;
  v102[9] = v93;
  long long v45 = v94;
  v102[10] = v94;
  long long v46 = v88;
  long long v47 = v89;
  v102[4] = v88;
  v102[5] = v89;
  long long v48 = v90;
  long long v49 = v91;
  v102[6] = v90;
  v102[7] = v91;
  long long v50 = v84;
  long long v51 = v85;
  v102[0] = v84;
  v102[1] = v85;
  long long v52 = v86;
  long long v53 = v87;
  v102[2] = v86;
  v102[3] = v87;
  *(_OWORD *)(a2 + 128) = v92;
  *(_OWORD *)(a2 + 144) = v44;
  *(_OWORD *)(a2 + 160) = v45;
  *(_OWORD *)(a2 + 64) = v46;
  *(_OWORD *)(a2 + 80) = v47;
  *(_OWORD *)(a2 + 96) = v48;
  *(_OWORD *)(a2 + 112) = v49;
  *(_OWORD *)a2 = v50;
  *(_OWORD *)(a2 + 16) = v51;
  uint64_t v103 = v95;
  *(void *)(a2 + 176) = v95;
  *(_OWORD *)(a2 + 32) = v52;
  *(_OWORD *)(a2 + 48) = v53;
  sub_1E0E6F748();
  sub_1E0E71B5C(v43, a2 + *(int *)(v54 + 48), (uint64_t (*)(void))sub_1E0E6F7DC);
  sub_1E0E71C54((uint64_t)v102);
  sub_1E0E6FC5C(v26, (uint64_t (*)(void))sub_1E0E6F7DC);
  sub_1E0E6FC5C(v43, (uint64_t (*)(void))sub_1E0E6F7DC);
  v104[8] = v92;
  v104[9] = v93;
  v104[10] = v94;
  uint64_t v105 = v95;
  v104[4] = v88;
  v104[5] = v89;
  v104[6] = v90;
  v104[7] = v91;
  v104[0] = v84;
  v104[1] = v85;
  v104[2] = v86;
  v104[3] = v87;
  return sub_1E0E71BC4((uint64_t)v104);
}

uint64_t sub_1E0E6E4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TipView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8, v7);
  sub_1E0E6F25C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8, v11);
  long long v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v16 = (char *)&v33 - v15;
  sub_1E0E6DAB0((uint64_t)v46);
  sub_1E0E71B5C(a1, (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TipView);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1E0E6FCC0((uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  sub_1E0E6F2C0();
  sub_1E0E6F3D0();
  sub_1E0ECCD40();
  long long v43 = v46[8];
  long long v44 = v46[9];
  uint64_t v45 = v47;
  long long v39 = v46[4];
  long long v40 = v46[5];
  long long v41 = v46[6];
  long long v42 = v46[7];
  long long v35 = v46[0];
  long long v36 = v46[1];
  long long v37 = v46[2];
  long long v38 = v46[3];
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v20 = v34;
  v19(v34, v16, v9);
  long long v21 = v44;
  v48[8] = v43;
  v48[9] = v44;
  long long v22 = v39;
  long long v23 = v40;
  v48[4] = v39;
  v48[5] = v40;
  long long v25 = v41;
  long long v24 = v42;
  v48[6] = v41;
  v48[7] = v42;
  long long v26 = v35;
  long long v27 = v36;
  v48[0] = v35;
  v48[1] = v36;
  long long v29 = v37;
  long long v28 = v38;
  v48[2] = v37;
  v48[3] = v38;
  *(_OWORD *)(a2 + 128) = v43;
  *(_OWORD *)(a2 + 144) = v21;
  *(_OWORD *)(a2 + 64) = v22;
  *(_OWORD *)(a2 + 80) = v23;
  *(_OWORD *)(a2 + 96) = v25;
  *(_OWORD *)(a2 + 112) = v24;
  *(_OWORD *)a2 = v26;
  *(_OWORD *)(a2 + 16) = v27;
  uint64_t v49 = v45;
  *(void *)(a2 + 160) = v45;
  *(_OWORD *)(a2 + 32) = v29;
  *(_OWORD *)(a2 + 48) = v28;
  sub_1E0E6F9F4(0);
  v19((char *)(a2 + *(int *)(v30 + 48)), v20, v9);
  sub_1E0E71738((uint64_t)v48);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v16, v9);
  v31(v20, v9);
  v50[8] = v43;
  v50[9] = v44;
  uint64_t v51 = v45;
  v50[4] = v39;
  v50[5] = v40;
  v50[6] = v41;
  v50[7] = v42;
  v50[0] = v35;
  v50[1] = v36;
  v50[2] = v37;
  v50[3] = v38;
  return sub_1E0E71788((uint64_t)v50);
}

uint64_t sub_1E0E6E83C()
{
  return sub_1E0ECCDB0();
}

uint64_t sub_1E0E6E8B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1E0ECCCA0();
  sub_1E0ECC940();
  sub_1E0ECC9B0();
  uint64_t v3 = sub_1E0ECC9F0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = sub_1E0ECC7C0();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

HealthUI::TipView::IconConfiguration __swiftcall TipView.IconConfiguration.init(name:bundle:)(Swift::String name, NSBundle bundle)
{
  *(Swift::String *)uint64_t v2 = name;
  *(NSBundle *)(v2 + 16) = bundle;
  result.name = name;
  result.bundle = bundle;
  return result;
}

uint64_t TipView.configureForPopover(backgroundColor:)(uint64_t a1)
{
  uint64_t v3 = sub_1E0ECC760();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1E0E6FE44();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = v1;
  uint64_t v18 = a1;
  sub_1E0ECC8D0();
  sub_1E0E71638(0, &qword_1EAD6F1D0, (uint64_t (*)(uint64_t))sub_1E0E6FEEC, (uint64_t (*)(uint64_t))sub_1E0E6FFA0, MEMORY[0x1E4F3CC10]);
  sub_1E0E7011C();
  sub_1E0ECC290();
  sub_1E0ECC750();
  unsigned __int8 v14 = sub_1E0ECC8D0();
  sub_1E0ECC8C0();
  sub_1E0ECC8C0();
  if (sub_1E0ECC8C0() != v14) {
    sub_1E0ECC8C0();
  }
  sub_1E0E71568(&qword_1EAD6F210, (void (*)(uint64_t))sub_1E0E6FE44);
  sub_1E0ECCB90();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1E0E6EBCC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1E0ECC800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E6FEEC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  unsigned __int8 v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECC7F0();
  type metadata accessor for TipView();
  sub_1E0E71568(&qword_1EAD6F1E0, (void (*)(uint64_t))type metadata accessor for TipView);
  sub_1E0ECCBB0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v15 = sub_1E0ECCE20();
  uint64_t v17 = v16;
  sub_1E0ECCE60();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a2, v14, v10);
  sub_1E0E71638(0, &qword_1EAD6F1D0, (uint64_t (*)(uint64_t))sub_1E0E6FEEC, (uint64_t (*)(uint64_t))sub_1E0E6FFA0, MEMORY[0x1E4F3CC10]);
  uint64_t v23 = a2 + *(int *)(v22 + 36);
  *(void *)uint64_t v23 = a1;
  __asm { FMOV            V0.2D, #1.5 }
  *(_OWORD *)(v23 + 8) = _Q0;
  *(void *)(v23 + 24) = v19;
  *(void *)(v23 + 32) = v21;
  *(void *)(v23 + 40) = v15;
  *(void *)(v23 + 48) = v17;
  long long v29 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  swift_retain();
  return v29(v14, v10);
}

uint64_t sub_1E0E6EE44()
{
  return sub_1E0ECC470();
}

uint64_t sub_1E0E6EE68(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECC3E0();
  MEMORY[0x1F4188790](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1E0ECC480();
}

void sub_1E0E6EF34(uint64_t a1)
{
}

void sub_1E0E6EF7C()
{
  if (!qword_1EAD6F090)
  {
    sub_1E0E70D40(255, &qword_1EAD6F098, (uint64_t (*)(uint64_t))sub_1E0E6F030, MEMORY[0x1E4F3F108]);
    sub_1E0E6F630(&qword_1EAD6F118, &qword_1EAD6F098, (uint64_t (*)(uint64_t))sub_1E0E6F030);
    unint64_t v0 = sub_1E0ECCD90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F090);
    }
  }
}

void sub_1E0E6F030()
{
  if (!qword_1EAD6F0A0)
  {
    sub_1E0E6F0A4();
    sub_1E0E6F4CC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAD6F0A0);
    }
  }
}

void sub_1E0E6F0A4()
{
  if (!qword_1EAD6F0A8)
  {
    sub_1E0E70D40(255, &qword_1EAD6F0B0, (uint64_t (*)(uint64_t))sub_1E0E6F158, MEMORY[0x1E4F3F108]);
    sub_1E0E6F630(&qword_1EAD6F0F0, &qword_1EAD6F0B0, (uint64_t (*)(uint64_t))sub_1E0E6F158);
    unint64_t v0 = sub_1E0ECCD70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F0A8);
    }
  }
}

void sub_1E0E6F158()
{
  if (!qword_1EAD6F0B8)
  {
    sub_1E0E6F1D0();
    sub_1E0E6F25C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAD6F0B8);
    }
  }
}

void sub_1E0E6F1D0()
{
  if (!qword_1EAD6F0C0)
  {
    sub_1E0E70030(255, (unint64_t *)&qword_1EB584FF8, MEMORY[0x1E4F3EC98], MEMORY[0x1E4F3D4F8], MEMORY[0x1E4F3CC10]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F0C0);
    }
  }
}

void sub_1E0E6F25C()
{
  if (!qword_1EAD6F0C8)
  {
    sub_1E0E6F2C0();
    sub_1E0E6F3D0();
    unint64_t v0 = sub_1E0ECCD60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F0C8);
    }
  }
}

void sub_1E0E6F2C0()
{
  if (!qword_1EAD6F0D0)
  {
    sub_1E0DF63D0();
    sub_1E0E70030(255, &qword_1EAD6F0D8, MEMORY[0x1E4F3D9E0], MEMORY[0x1E4F3D9D8], MEMORY[0x1E4F3DC28]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F0D0);
    }
  }
}

void sub_1E0E6F354(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1E0E71A94(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1E0E6F3D0()
{
  unint64_t result = qword_1EAD6F0E0;
  if (!qword_1EAD6F0E0)
  {
    sub_1E0E6F2C0();
    sub_1E0DF668C();
    sub_1E0E6F468(&qword_1EAD6F0E8, &qword_1EAD6F0D8, MEMORY[0x1E4F3D9E0], MEMORY[0x1E4F3D9D8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F0E0);
  }
  return result;
}

uint64_t sub_1E0E6F468(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0E70030(255, a2, a3, a4, MEMORY[0x1E4F3DC28]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E6F4CC()
{
  if (!qword_1EAD6F0F8)
  {
    sub_1E0E6FB3C(255, &qword_1EAD6F100, sub_1E0E6F584);
    sub_1E0E70030(255, &qword_1EAD6F0D8, MEMORY[0x1E4F3D9E0], MEMORY[0x1E4F3D9D8], MEMORY[0x1E4F3DC28]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F0F8);
    }
  }
}

void sub_1E0E6F584(uint64_t a1)
{
}

void sub_1E0E6F5AC()
{
  if (!qword_1EAD6F110)
  {
    sub_1E0E71A94(255, &qword_1EB5850B8, MEMORY[0x1E4F3C870], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F110);
    }
  }
}

uint64_t sub_1E0E6F630(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0E70D40(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E6F694()
{
  if (!qword_1EAD6F120)
  {
    sub_1E0E70D40(255, &qword_1EAD6F128, (uint64_t (*)(uint64_t))sub_1E0E6F748, MEMORY[0x1E4F3F108]);
    sub_1E0E6F630(&qword_1EAD6F180, &qword_1EAD6F128, (uint64_t (*)(uint64_t))sub_1E0E6F748);
    unint64_t v0 = sub_1E0ECCD70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F120);
    }
  }
}

void sub_1E0E6F748()
{
  if (!qword_1EAD6F130)
  {
    sub_1E0E6FB3C(255, &qword_1EAD6F138, (void (*)(uint64_t))sub_1E0E6F1D0);
    sub_1E0E6F7DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6F130);
    }
  }
}

void sub_1E0E6F7DC()
{
  if (!qword_1EAD6F140)
  {
    sub_1E0E70D40(255, &qword_1EAD6F148, (uint64_t (*)(uint64_t))sub_1E0E6F890, MEMORY[0x1E4F3F108]);
    sub_1E0E6F630(&qword_1EAD6F178, &qword_1EAD6F148, (uint64_t (*)(uint64_t))sub_1E0E6F890);
    unint64_t v0 = sub_1E0ECCD90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F140);
    }
  }
}

void sub_1E0E6F890(uint64_t a1)
{
}

void sub_1E0E6F8C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1E0E6F940()
{
  if (!qword_1EAD6F158)
  {
    sub_1E0E70D40(255, &qword_1EAD6F160, (uint64_t (*)(uint64_t))sub_1E0E6F9F4, MEMORY[0x1E4F3F108]);
    sub_1E0E6F630(&qword_1EAD6F170, &qword_1EAD6F160, (uint64_t (*)(uint64_t))sub_1E0E6F9F4);
    unint64_t v0 = sub_1E0ECCD70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F158);
    }
  }
}

void sub_1E0E6F9F4(uint64_t a1)
{
}

void sub_1E0E6FA28()
{
  if (!qword_1EAD6F188)
  {
    sub_1E0E70D40(255, &qword_1EAD6F080, (uint64_t (*)(uint64_t))sub_1E0E6EF34, MEMORY[0x1E4F3EBC8]);
    sub_1E0E70030(255, &qword_1EAD6E0E0, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB78], MEMORY[0x1E4F3DC28]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F188);
    }
  }
}

void sub_1E0E6FAEC(uint64_t a1)
{
}

void sub_1E0E6FB14(uint64_t a1)
{
}

void sub_1E0E6FB3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECC3F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1E0E6FBA0(uint64_t a1)
{
}

uint64_t sub_1E0E6FBC8(uint64_t a1, uint64_t a2)
{
  sub_1E0E70D40(0, &qword_1EAD6F080, (uint64_t (*)(uint64_t))sub_1E0E6EF34, MEMORY[0x1E4F3EBC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E6FC5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E0E6FCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TipView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E6FD24()
{
  type metadata accessor for TipView();
  return sub_1E0E6D2A4();
}

void sub_1E0E6FD94()
{
  if (!qword_1EAD6F1B8)
  {
    sub_1E0E6FDF0();
    unint64_t v0 = sub_1E0ECC810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F1B8);
    }
  }
}

unint64_t sub_1E0E6FDF0()
{
  unint64_t result = qword_1EAD6F1C0;
  if (!qword_1EAD6F1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F1C0);
  }
  return result;
}

void sub_1E0E6FE44()
{
  if (!qword_1EAD6F1C8)
  {
    sub_1E0E71638(255, &qword_1EAD6F1D0, (uint64_t (*)(uint64_t))sub_1E0E6FEEC, (uint64_t (*)(uint64_t))sub_1E0E6FFA0, MEMORY[0x1E4F3CC10]);
    sub_1E0E7011C();
    unint64_t v0 = sub_1E0ECC280();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F1C8);
    }
  }
}

void sub_1E0E6FEEC()
{
  if (!qword_1EAD6F1D8)
  {
    type metadata accessor for TipView();
    sub_1E0E71568(&qword_1EAD6F1E0, (void (*)(uint64_t))type metadata accessor for TipView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EAD6F1D8);
    }
  }
}

void sub_1E0E6FFA0()
{
  if (!qword_1EAD6F1E8)
  {
    sub_1E0E70030(255, &qword_1EAD6F1F0, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3C7F0], MEMORY[0x1E4F3CC10]);
    sub_1E0E70080();
    unint64_t v0 = sub_1E0ECC730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F1E8);
    }
  }
}

void sub_1E0E70030(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1E0E70080()
{
  unint64_t result = qword_1EAD6F1F8;
  if (!qword_1EAD6F1F8)
  {
    sub_1E0E70030(255, &qword_1EAD6F1F0, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3C7F0], MEMORY[0x1E4F3CC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F1F8);
  }
  return result;
}

unint64_t sub_1E0E7011C()
{
  unint64_t result = qword_1EAD6F200;
  if (!qword_1EAD6F200)
  {
    sub_1E0E71638(255, &qword_1EAD6F1D0, (uint64_t (*)(uint64_t))sub_1E0E6FEEC, (uint64_t (*)(uint64_t))sub_1E0E6FFA0, MEMORY[0x1E4F3CC10]);
    type metadata accessor for TipView();
    sub_1E0E71568(&qword_1EAD6F1E0, (void (*)(uint64_t))type metadata accessor for TipView);
    swift_getOpaqueTypeConformance2();
    sub_1E0E71568(&qword_1EAD6F208, (void (*)(uint64_t))sub_1E0E6FFA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F200);
  }
  return result;
}

uint64_t sub_1E0E70268@<X0>(uint64_t a1@<X8>)
{
  return sub_1E0E6EBCC(*(void *)(v1 + 24), a1);
}

uint64_t sub_1E0E70270()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for TipView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = (void *)a2[6];
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v16 = (void *)(a1 + v10);
    uint64_t v11 = (uint64_t *)((char *)a2 + v10);
    *(void *)(a1 + 96) = a2[12];
    sub_1E0E70D40(0, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v12 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1E0ECC3E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v11, v13);
    }
    else
    {
      *uint64_t v16 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for TipView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_1E0E70D40(0, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1E0ECC3E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void **)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v9);
  uint64_t v10 = (void *)(a2 + v9);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_1E0E70D40(0, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1E0ECC3E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v14, v10, v12);
  }
  else
  {
    *uint64_t v14 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a2 + 48);
  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v6;
  id v8 = v6;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 36);
    id v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F3CB98];
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3C648];
    sub_1E0E70908(a1 + v10, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
    sub_1E0E70D40(0, &qword_1EAD6E728, v13, v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1E0ECC3E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
    }
    else
    {
      *id v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1E0E70908(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1E0E70D40(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t initializeWithTake for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  sub_1E0E70D40(0, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1E0ECC3E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v6, v7, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 36);
    id v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F3CB98];
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3C648];
    sub_1E0E70908(a1 + v10, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
    sub_1E0E70D40(0, &qword_1EAD6E728, v13, v14);
    uint64_t v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1E0ECC3E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v11, v12, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0E70C60);
}

uint64_t sub_1E0E70C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1E0E70D40(0, &qword_1EAD6F218, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C658]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

void sub_1E0E70D40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t storeEnumTagSinglePayload for TipView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0E70DB8);
}

uint64_t sub_1E0E70DB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1E0E70D40(0, &qword_1EAD6F218, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C658]);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1E0E70E90()
{
  sub_1E0E70D40(319, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void destroy for DeviceFeatureAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s8HealthUI23DeviceFeatureAttributesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for DeviceFeatureAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for DeviceFeatureAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for TipView.IconConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipView.IconConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TipView.IconConfiguration()
{
  return &type metadata for TipView.IconConfiguration;
}

unint64_t sub_1E0E7113C()
{
  unint64_t result = qword_1EAD6F230;
  if (!qword_1EAD6F230)
  {
    sub_1E0E71638(255, &qword_1EAD6F1B0, (uint64_t (*)(uint64_t))sub_1E0E6FBA0, (uint64_t (*)(uint64_t))sub_1E0E6FD94, MEMORY[0x1E4F3CC10]);
    sub_1E0E712D8(&qword_1EAD6F238, sub_1E0E6FBA0, (void (*)(void))sub_1E0E71260);
    sub_1E0E71568(&qword_1EAD6F280, (void (*)(uint64_t))sub_1E0E6FD94);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F230);
  }
  return result;
}

uint64_t sub_1E0E71260()
{
  return sub_1E0E712D8(&qword_1EAD6F240, sub_1E0E6FB14, (void (*)(void))sub_1E0E7129C);
}

uint64_t sub_1E0E7129C()
{
  return sub_1E0E712D8(&qword_1EAD6F248, sub_1E0E6FAEC, (void (*)(void))sub_1E0E71358);
}

uint64_t sub_1E0E712D8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E0E71358()
{
  unint64_t result = qword_1EAD6F250;
  if (!qword_1EAD6F250)
  {
    sub_1E0E6FA28();
    sub_1E0E713F0();
    sub_1E0E6F468(&qword_1EAD6F278, &qword_1EAD6E0E0, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F250);
  }
  return result;
}

unint64_t sub_1E0E713F0()
{
  unint64_t result = qword_1EAD6F258;
  if (!qword_1EAD6F258)
  {
    sub_1E0E70D40(255, &qword_1EAD6F080, (uint64_t (*)(uint64_t))sub_1E0E6EF34, MEMORY[0x1E4F3EBC8]);
    sub_1E0E71490();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F258);
  }
  return result;
}

unint64_t sub_1E0E71490()
{
  unint64_t result = qword_1EAD6F260;
  if (!qword_1EAD6F260)
  {
    sub_1E0E6EF34(255);
    sub_1E0E71568(&qword_1EAD6F268, (void (*)(uint64_t))sub_1E0E6EF7C);
    sub_1E0E71568(&qword_1EAD6F270, (void (*)(uint64_t))sub_1E0E6F694);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F260);
  }
  return result;
}

uint64_t sub_1E0E71568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0E715B0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1E0E71638(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1E0E716BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1E0E70D40(255, a3, a4, MEMORY[0x1E4F3F108]);
    unint64_t v5 = sub_1E0ECC380();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1E0E71738(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0E71788(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0E717D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E0ECC4F0();
  *a1 = result;
  return result;
}

uint64_t sub_1E0E71804@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1E0ECC4F0();
  *a1 = result;
  return result;
}

uint64_t sub_1E0E71830()
{
  return sub_1E0ECC500();
}

uint64_t sub_1E0E71858()
{
  return sub_1E0ECC500();
}

uint64_t sub_1E0E71880(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1E0E718DC(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = (int *)(type metadata accessor for TipView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[11];
  sub_1E0E70D40(0, &qword_1EAD6E728, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C648]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1E0ECC3E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

void sub_1E0E71A94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1E0E71AE0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1E0E70D40(255, a3, a4, MEMORY[0x1E4F3F108]);
    unint64_t v5 = sub_1E0ECC380();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1E0E71B5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E0E71BC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0E71BF4()
{
  type metadata accessor for TipView();
  return sub_1E0E6E83C();
}

uint64_t sub_1E0E71C54(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0E71C80(uint64_t a1, double a2)
{
  uint64_t v20 = (void *)a1;
  swift_bridgeObjectRetain();
  sub_1E0E74ECC((uint64_t *)&v20);
  uint64_t v3 = v20;
  unint64_t v4 = v20[2];
  if (v4 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = 1;
  while (v5 < v4)
  {
    if (v6 >= v4) {
      goto LABEL_24;
    }
    int8x16_t v7 = *(int8x16_t *)&v3[2 * v5 + 4];
    double v8 = *(double *)&v3[2 * v5 + 5];
    double v9 = v8 + a2;
    if (*(double *)v7.i64 - a2 > v8 + a2) {
      goto LABEL_25;
    }
    int8x16_t v10 = *(int8x16_t *)&v3[2 * v6 + 4];
    if (*(double *)v7.i64 - a2 > *(double *)v10.i64 || *(double *)v10.i64 > v9)
    {
      if (__OFADD__(v6++, 1)) {
        goto LABEL_26;
      }
      ++v5;
      if (v6 >= (uint64_t)v4) {
        return (uint64_t)v3;
      }
    }
    else
    {
      *(void *)&v13.f64[0] = v3[2 * v5 + 4];
      *(void *)&v13.f64[1] = v3[2 * v6 + 5];
      *(void *)&v14.f64[0] = v3[2 * v6 + 4];
      *(void *)&v14.f64[1] = v3[2 * v5 + 5];
      float64x2_t v15 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v14, v13), v7, v10);
      if (vmovn_s64((int64x2_t)vmvnq_s8((int8x16_t)vcgeq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v15, 1), v15))).u8[0]) {
        goto LABEL_27;
      }
      float64x2_t v19 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1E0EADB54(v3);
      }
      uint64_t v16 = v3[2];
      if (v5 >= v16) {
        goto LABEL_28;
      }
      *(float64x2_t *)&v3[2 * v5 + 4] = v19;
      if (v6 >= v16) {
        goto LABEL_29;
      }
      unint64_t v4 = v16 - 1;
      uint64_t v17 = v16 - 1 - v6;
      if (v17 < 0) {
        goto LABEL_30;
      }
      memmove(&v3[2 * v6 + 4], &v3[2 * v6 + 6], 16 * v17);
      v3[2] = v4;
      if (v6 >= (uint64_t)v4) {
        return (uint64_t)v3;
      }
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  sub_1E0ECD960();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_1E0E71E50()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___backgroundInactiveFillStyle, &qword_1EAD6D510, &qword_1EAD74198);
}

id sub_1E0E71E7C()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___innerFillStyle, &qword_1EAD6D518, &qword_1EAD741A0);
}

id sub_1E0E71EA8()
{
  uint64_t v1 = OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_strokeStyleWithColor_lineWidth_, 0, 2.0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1E0E71F2C()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryInRangeFillStyle, &qword_1EAD6D520, &qword_1EAD741A8);
}

id sub_1E0E71F58()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryOutOfRangeFillStyle, &qword_1EAD6D530, &qword_1EAD741B8);
}

id sub_1E0E71F84()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryInRangeFillStyle, &qword_1EAD6D528, &qword_1EAD741B0);
}

id sub_1E0E71FB0()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryOutOfRangeFillStyle, &qword_1EAD6D538, &qword_1EAD741C0);
}

id sub_1E0E71FDC()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupFillStyle, &qword_1EAD6D548, &qword_1EAD741D0);
}

id sub_1E0E72008()
{
  return sub_1E0E72034(&OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupInnerFillStyle, &qword_1EAD6D540, &qword_1EAD741C8);
}

id sub_1E0E72034(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone((Class)HKSolidFillStyle), sel_init);
    uint64_t v10 = *a2;
    id v11 = v9;
    if (v10 != -1) {
      swift_once();
    }
    objc_msgSend(v11, sel_setColor_, *a3);

    uint64_t v12 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v11;
    id v6 = v11;

    unint64_t v5 = 0;
  }
  id v13 = v5;
  return v6;
}

double sub_1E0E720FC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x1C8))();
  v11.origin.CGFloat x = a1;
  v11.origin.CGFloat y = a2;
  v11.size.CGFloat width = a3;
  v11.size.CGFloat height = a4;
  CGRectGetWidth(v11);
  sub_1E0DF09C0();
  sub_1E0ECD0B0();
  return v10;
}

__n128 sub_1E0E72200@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v5 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 64) = v2;
  return result;
}

id BalanceSeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BalanceSeries.init()()
{
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v4 = (char *)&v22 - v3;
  uint64_t v5 = (uint64_t)&v0[OBJC_IVAR___HKBalanceSeries_selectedMetric];
  uint64_t v6 = sub_1E0ECBDF0();
  int8x16_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___backgroundInactiveFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___innerFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___metricsLineStrokeStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryInRangeFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___primaryOutOfRangeFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryInRangeFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___secondaryOutOfRangeFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupFillStyle] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceSeries____lazy_storage___warmupInnerFillStyle] = 0;
  v7((uint64_t)v4, 1, 1, v6);
  swift_beginAccess();
  double v8 = v0;
  sub_1E0DFD774((uint64_t)v4, v5);
  swift_endAccess();
  sub_1E0E72520();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 84) = 0;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(unsigned char *)(v9 + 80) = 1;
  *(void *)&v8[OBJC_IVAR___HKBalanceSeries_lollipopPathRangeLock] = v9;

  double v10 = (objc_class *)type metadata accessor for BalanceSeries();
  v24.receiver = v8;
  v24.super_class = v10;
  id v11 = objc_msgSendSuper2(&v24, sel_init);
  uint64_t v12 = (objc_class *)type metadata accessor for BalanceYAxis();
  id v13 = objc_allocWithZone(v12);
  id v14 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  id v15 = v11;
  id v16 = objc_msgSend(v14, sel_init);
  uint64_t v17 = self;
  id v18 = v16;
  id v19 = objc_msgSend(v17, sel_preferredAxisStyle);
  objc_msgSend(v18, sel_setPreferredStyle_, v19);

  v23.receiver = v13;
  v23.super_class = v12;
  id v20 = objc_msgSendSuper2(&v23, sel_initWithConfiguration_, v18);

  objc_msgSend(v15, sel_setYAxis_, v20);
  return v15;
}

void sub_1E0E72520()
{
  if (!qword_1EAD6F300)
  {
    sub_1E0E618CC(255, (unint64_t *)&unk_1EAD6ED70, type metadata accessor for HKGraphSeriesDataPointPathRange);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1E0ECD850();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F300);
    }
  }
}

uint64_t type metadata accessor for BalanceSeries()
{
  uint64_t result = qword_1EAD6F328;
  if (!qword_1EAD6F328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E0E72614(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v7 = v6;
  id v116 = a6;
  id v115 = a5;
  uint64_t v99 = a4;
  uint64_t v98 = a3;
  uint64_t v97 = a2;
  swift_getObjectType();
  uint64_t v9 = sub_1E0ECC010();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  id v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v114 = (uint64_t)&v97 - v16;
  uint64_t v113 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  MEMORY[0x1F4188790](v113, v17);
  uint64_t v112 = (uint64_t)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1E0ECCF30();
  id v19 = *(char **)(v111 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v111, v20);
  uint64_t v110 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21, v23);
  uint64_t v109 = (char *)&v97 - v24;
  sub_1E0E251B4();
  uint64_t v108 = v25;
  uint64_t v27 = MEMORY[0x1F4188790](v25, v26);
  uint64_t v107 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27, v29);
  uint64_t v106 = (char *)&v97 - v30;
  id v31 = objc_msgSend(a1, sel_chartPoints);
  if (v31
    && (uint64_t v32 = v31,
        sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0),
        unint64_t v33 = sub_1E0ECD330(),
        v32,
        unint64_t v34 = sub_1E0E45B04(v33),
        swift_bridgeObjectRelease(),
        v34))
  {
    uint64_t v129 = MEMORY[0x1E4FBC860];
    if (v34 >> 62) {
      goto LABEL_28;
    }
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35)
    {
      while (v35 >= 1)
      {
        unint64_t v105 = v34 & 0xC000000000000001;
        uint64_t v102 = v7 + OBJC_IVAR___HKBalanceSeries_selectedMetric;
        swift_beginAccess();
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
        unint64_t v100 = (void (**)(char *, uint64_t))(v19 + 8);
        uint64_t v104 = (char **)v34;
        uint64_t v103 = v35;
        while (1)
        {
          long long v38 = v105 ? (char *)MEMORY[0x1E4E3EF00](v36, v34) : (char *)*(id *)(v34 + 8 * v36 + 32);
          long long v39 = v38;
          unint64_t v34 = (unint64_t)&selRef_snapshotForCurrentState;
          id v40 = objc_msgSend(v115, sel_transform, v97);
          long long v41 = (void *)sub_1E0ECB920();
          objc_msgSend(v40, sel_coordinateForValue_, v41);
          double v43 = v42;

          uint64_t v44 = sub_1E0E14F5C();
          id v45 = v116;
          uint64_t v7 = sub_1E0E77400(v44, v45);
          swift_bridgeObjectRelease();

          sub_1E0E154E0();
          id v46 = objc_msgSend(v45, sel_transform);
          uint64_t v47 = (void *)sub_1E0ECBD90();
          objc_msgSend(v46, sel_coordinateForValue_, v47);
          double v49 = v48;

          id v19 = (char *)sub_1E0ECBD90();
          objc_msgSend(v46, sel_coordinateForValue_, v19);
          double v51 = v50;

          if (v49 > v51) {
            break;
          }
          unint64_t v52 = sub_1E0E15530();
          char v55 = v54;
          uint64_t v122 = v37;
          uint64_t v123 = v36;
          uint64_t v121 = v7;
          if (v54)
          {
            double v119 = *(double *)&v52;
            double v120 = *(double *)&v53;
          }
          else
          {
            id v19 = (char *)objc_msgSend(v45, sel_transform);
            uint64_t v56 = (void *)sub_1E0ECBD90();
            unint64_t v34 = (unint64_t)&selRef_bottomPadding;
            objc_msgSend(v19, sel_coordinateForValue_, v56);
            double v58 = v57;

            uint64_t v59 = (void *)sub_1E0ECBD90();
            objc_msgSend(v19, sel_coordinateForValue_, v59);
            double v61 = v60;

            if (v58 > v61) {
              goto LABEL_27;
            }
            double v119 = v58;
            double v120 = v61;
          }
          int v117 = v55 & 1;
          long long v62 = &v39[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection];
          __swift_project_boxed_opaque_existential_0(&v39[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection], *(void *)&v39[OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection + 24]);
          uint64_t v63 = (uint64_t)v106;
          sub_1E0ECBF40();
          long long v64 = *v101;
          long long v65 = v109;
          uint64_t v66 = v111;
          (*v101)(v109, v63 + *(int *)(v108 + 36), v111);
          sub_1E0E7781C(v63, (uint64_t (*)(void))sub_1E0E251B4);
          __swift_project_boxed_opaque_existential_0(v62, *((void *)v62 + 3));
          uint64_t v118 = v39;
          uint64_t v67 = (uint64_t)v107;
          sub_1E0ECBF40();
          long long v68 = v110;
          v64(v110, v67, v66);
          sub_1E0E7781C(v67, (uint64_t (*)(void))sub_1E0E251B4);
          sub_1E0E7865C(&qword_1EAD6DE30, MEMORY[0x1E4F295A0]);
          char v69 = sub_1E0ECD100();
          uint64_t v70 = *v100;
          (*v100)(v68, v66);
          v70(v65, v66);
          sub_1E0E13A18((uint64_t)v62, (uint64_t)&v125);
          uint64_t v71 = v114;
          sub_1E0DFD6E0(v102, v114);
          if (v69) {
            char v72 = 1;
          }
          else {
            char v72 = 2;
          }
          uint64_t v73 = v112;
          sub_1E0E78390(v71, v112, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
          *(unsigned char *)(v73 + *(int *)(v113 + 20)) = v72;
          char v74 = (objc_class *)type metadata accessor for BalanceCoordinateInfo(0);
          id v75 = objc_allocWithZone(v74);
          sub_1E0E13A18((uint64_t)&v125, (uint64_t)v75 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection);
          sub_1E0E28120(v73, (uint64_t)v75 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context);
          v124.receiver = v75;
          v124.super_class = v74;
          id v76 = objc_msgSendSuper2(&v124, sel_init);
          sub_1E0E7781C(v73, type metadata accessor for BalanceCoordinateInfo.Context);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v125);
          id v77 = objc_allocWithZone((Class)type metadata accessor for BalanceCoordinate());
          id v78 = sub_1E0E90920(v121, *(unint64_t *)&v119, *(uint64_t *)&v120, v117, (uint64_t)v76, v43, v49, v51);

          id v79 = v78;
          MEMORY[0x1E4E3E9E0]();
          if (*(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1E0ECD350();
          }
          uint64_t v36 = v123 + 1;
          sub_1E0ECD370();
          sub_1E0ECD340();

          unint64_t v34 = (unint64_t)v104;
          uint64_t v37 = v122;
          if (v103 == v36) {
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1E0ECD910();
        swift_bridgeObjectRelease();
        if (!v35) {
          goto LABEL_29;
        }
      }
      __break(1u);
      goto LABEL_33;
    }
  }
  else
  {
    sub_1E0ECBFD0();
    char v80 = sub_1E0ECBFF0();
    os_log_type_t v81 = sub_1E0ECD520();
    if (os_log_type_enabled(v80, v81))
    {
      char v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      uint64_t v125 = v83;
      *(_DWORD *)char v82 = 136446210;
      uint64_t v84 = sub_1E0ECDBC0();
      uint64_t v128 = sub_1E0DED7E4(v84, v85, &v125);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v80, v81, "[%{public}s] Unable to create coordinates from unsupported chart points", v82, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v83, -1, -1);
      MEMORY[0x1E4E41080](v82, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v86 = v99;
    uint64_t v87 = v98;
    uint64_t v88 = v97;
    sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    long long v89 = (void *)sub_1E0ECD320();
    long long v90 = self;
    uint64_t v125 = v88;
    uint64_t v126 = v87;
    uint64_t v127 = v86;
    id v91 = objc_msgSend(v90, sel_coordinateListWithCoordinates_blockPath_, v89, &v125);

    if (v91) {
      return;
    }
    __break(1u);
  }
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v92 = v99;
  uint64_t v93 = v98;
  sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
  swift_bridgeObjectRetain();
  long long v94 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  uint64_t v95 = self;
  uint64_t v125 = v97;
  uint64_t v126 = v93;
  uint64_t v127 = v92;
  id v96 = objc_msgSend(v95, sel_coordinateListWithCoordinates_blockPath_, v94, &v125);

  if (!v96)
  {
LABEL_33:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1E0E7336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,unsigned __int8 a21,void *a22,void *a23,void *a24,void *a25,uint64_t a26)
{
  uint64_t v146 = a5;
  uint64_t v145 = a4;
  uint64_t v144 = a3;
  uint64_t v143 = a2;
  uint64_t v35 = a25;
  uint64_t v140 = a22;
  int v141 = a21;
  uint64_t v148 = a20;
  id v142 = a19;
  uint64_t v151 = a18;
  id v147 = a17;
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  uint64_t v38 = MEMORY[0x1F4188790](v36 - 8, v37);
  id v40 = &v131.i8[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v38, v41);
  double v43 = &v131.i8[-v42];
  uint64_t v44 = sub_1E0ECBDF0();
  v150.i64[0] = *(void *)(v44 - 8);
  uint64_t v46 = MEMORY[0x1F4188790](v44, v45);
  *(void *)&double v149 = (char *)v131.i64 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v46, v48);
  double v51 = &v131.i8[-v50];
  if (a1)
  {
    type metadata accessor for BalanceCoordinate();
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      v138 = a23;
      double v52 = *(double *)(result + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
      uint64_t v53 = result;
      swift_unknownObjectRetain();
      v157.origin.CGFloat x = a6;
      v157.origin.CGFloat y = a7;
      v157.size.CGFloat width = a8;
      v157.size.CGFloat height = a9;
      if (CGRectGetMinX(v157) - a10 <= v52
        && (uint64_t v139 = v53,
            v158.origin.CGFloat x = a6,
            v158.origin.CGFloat y = a7,
            v158.size.CGFloat width = a8,
            v158.size.CGFloat height = a9,
            v52 <= CGRectGetMaxX(v158) + a10))
      {
        char v54 = (double *)(v139 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
        char v55 = *(unsigned char *)(v139 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16);
        uint64_t v136 = a26;
        uint64_t v137 = a1;
        if ((v55 & 1) == 0)
        {
          double v135 = a12;
          double v56 = *v54;
          double v134 = v54[1];
          double v57 = a10 * 0.5 + v134 - (v56 - a10 * 0.5);
          double v58 = self;
          id v59 = objc_msgSend(v58, sel_bezierPathWithRoundedRect_cornerRadius_, v52 - a10 * 0.5, v56 - a10 * 0.5, a10, v57, a10 * 0.5);
          objc_msgSend(a15, sel_appendPath_, v59);

          double v60 = v56 - a11 * 0.5;
          a12 = v135;
          id v61 = objc_msgSend(v58, sel_bezierPathWithRoundedRect_cornerRadius_, v52 - a11 * 0.5, v60, a11, a11 * 0.5 + v134 - v60);
          objc_msgSend(v147, sel_appendPath_, v61);

          uint64_t v35 = a25;
        }
        sub_1E0DFD6E0(v151, (uint64_t)v43);
        uint64_t v62 = v150.i64[0];
        uint64_t v63 = (void *)(v150.i64[0] + 48);
        long long v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v150.i64[0] + 48);
        int v65 = v64(v43, 1, v44);
        v132 = v35;
        id v147 = v63;
        double v135 = *(double *)&v64;
        if (v65 == 1)
        {
          sub_1E0E5D794((uint64_t)v43);
          uint64_t v66 = v139;
          uint64_t v67 = *(void *)(v139 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric);
          uint64_t v68 = swift_bridgeObjectRetain();
          uint64_t v69 = sub_1E0E75884(v68);
          uint64_t v133 = v67;
          swift_bridgeObjectRelease();
          uint64_t v70 = a24;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v51, v43, v44);
          uint64_t v71 = *(void *)(v139 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric);
          uint64_t v72 = *(void *)(v71 + 16);
          uint64_t v133 = v71;
          if (v72 && (unint64_t v73 = sub_1E0E5D90C((uint64_t)v51), (v74 & 1) != 0))
          {
            uint64_t v69 = *(void *)(*(void *)(v71 + 56) + 8 * v73);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v69 = MEMORY[0x1E4FBC860];
          }
          uint64_t v70 = a24;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v51, v44);
          uint64_t v66 = v139;
        }
        swift_unknownObjectRetain();
        uint64_t v75 = sub_1E0E75BC0(v69, v66);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        int64_t v76 = *(void *)(v75 + 16);
        double v134 = 0.0;
        if (v76)
        {
          uint64_t v77 = MEMORY[0x1E4FBC860];
          *(void *)&v154[0] = MEMORY[0x1E4FBC860];
          sub_1E0DEEA68(0, v76, 0);
          uint64_t v79 = 0;
          uint64_t v80 = *(void *)&v154[0];
          do
          {
            v78.i64[0] = *(void *)(v75 + 8 * v79 + 32);
            *(void *)&v154[0] = v80;
            unint64_t v82 = *(void *)(v80 + 16);
            unint64_t v81 = *(void *)(v80 + 24);
            if (v82 >= v81 >> 1)
            {
              int64x2_t v131 = v78;
              sub_1E0DEEA68(v81 > 1, v82 + 1, 1);
              v78.i64[0] = v131.i64[0];
              uint64_t v80 = *(void *)&v154[0];
            }
            ++v79;
            *(void *)(v80 + 16) = v82 + 1;
            int64x2_t v78 = vdupq_lane_s64(v78.i64[0], 0);
            *(int64x2_t *)(v80 + 16 * v82 + 32) = v78;
          }
          while (v76 != v79);
          uint64_t v70 = a24;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v77 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRelease();
          uint64_t v80 = MEMORY[0x1E4FBC860];
        }
        uint64_t v83 = v150.i64[0];
        uint64_t v84 = *(void *)&v149;
        uint64_t v85 = v133;
        uint64_t v86 = sub_1E0E71C80(v80, 8.0);
        swift_bridgeObjectRelease();
        sub_1E0DFD6E0(v151, (uint64_t)v40);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))&v135)(v40, 1, v44) == 1)
        {
          sub_1E0E5D794((uint64_t)v40);
          uint64_t v87 = swift_bridgeObjectRetain();
          uint64_t v88 = sub_1E0E75884(v87);
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v84, v40, v44);
          if (*(void *)(v85 + 16) && (unint64_t v89 = sub_1E0E5D90C(v84), (v90 & 1) != 0))
          {
            uint64_t v88 = *(void *)(*(void *)(v85 + 56) + 8 * v89);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v88 = MEMORY[0x1E4FBC860];
          }
          (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v84, v44);
        }
        uint64_t v91 = v77;
        swift_unknownObjectRetain();
        uint64_t v92 = sub_1E0E75CD4(v88, v139);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        int64_t v93 = *(void *)(v92 + 16);
        if (v93)
        {
          *(void *)&v154[0] = v91;
          sub_1E0DEEA68(0, v93, 0);
          uint64_t v95 = 0;
          uint64_t v96 = *(void *)&v154[0];
          do
          {
            v94.i64[0] = *(void *)(v92 + 8 * v95 + 32);
            *(void *)&v154[0] = v96;
            unint64_t v98 = *(void *)(v96 + 16);
            unint64_t v97 = *(void *)(v96 + 24);
            if (v98 >= v97 >> 1)
            {
              int64x2_t v150 = v94;
              sub_1E0DEEA68(v97 > 1, v98 + 1, 1);
              v94.i64[0] = v150.i64[0];
              uint64_t v96 = *(void *)&v154[0];
            }
            ++v95;
            *(void *)(v96 + 16) = v98 + 1;
            int64x2_t v94 = vdupq_lane_s64(v94.i64[0], 0);
            *(int64x2_t *)(v96 + 16 * v98 + 32) = v94;
          }
          while (v93 != v95);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v96 = MEMORY[0x1E4FBC860];
        }
        uint64_t v99 = v136;
        uint64_t v100 = v148;
        v150.i64[0] = v136 + 16;
        uint64_t v101 = sub_1E0E71C80(v96, 8.0);
        swift_bridgeObjectRelease();
        double v102 = COERCE_DOUBLE(sub_1E0E8FF9C(v151));
        if ((v104 & 1) == 0)
        {
          id v105 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v52 - a10 * 0.5, v102 - a10 * 0.5, a10, a10 * 0.5 + v103 - (v102 - a10 * 0.5), a10 * 0.5);
          objc_msgSend(v142, sel_appendPath_, v105);
        }
        sub_1E0E78390(v100, (uint64_t)v154, (unint64_t *)&unk_1EAD6ED70, type metadata accessor for HKGraphSeriesDataPointPathRange);
        if (v155 == 1) {
          goto LABEL_50;
        }
        v153[0] = v143;
        v153[1] = v144;
        v153[2] = v145;
        v153[3] = v146;
        v152[0] = v154[0];
        v152[1] = v154[1];
        v152[2] = v154[2];
        v152[3] = v154[3];
        if (!HKGraphSeriesDataPointPathInRangeInclusive(v153, (uint64_t *)v152)) {
          goto LABEL_50;
        }
        if (v141)
        {
          double v149 = v52;
          uint64_t v151 = v86;
          uint64_t v106 = *(void *)(v86 + 16);
          uint64_t v107 = v138;
          uint64_t v108 = v140;
          if (v106)
          {
            double v109 = v149;
            double v110 = v149 - a10 * 0.5;
            uint64_t v111 = self;
            double v112 = v109 - a12 * 0.5;
            uint64_t v113 = (double *)(v151 + 40);
            do
            {
              double v114 = *(v113 - 1);
              double v115 = *v113;
              id v116 = objc_msgSend(v111, sel_bezierPathWithRoundedRect_cornerRadius_, v110, v114 - a10 * 0.5, a10, a10 * 0.5 + *v113 - (v114 - a10 * 0.5), a10 * 0.5);
              objc_msgSend(v108, sel_appendPath_, v116);

              id v117 = objc_msgSend(v111, sel_bezierPathWithRoundedRect_cornerRadius_, v112, v114 - a12 * 0.5, a12, a12 * 0.5 + v115 - (v114 - a12 * 0.5), a12 * 0.5);
              objc_msgSend(v107, sel_appendPath_, v117);

              v113 += 2;
              --v106;
            }
            while (v106);
          }
          swift_bridgeObjectRelease();
          uint64_t v118 = *(void *)(v101 + 16);
          if (v118)
          {
            double v119 = v149;
            double v120 = v149 - a10 * 0.5;
            uint64_t v121 = self;
            double v122 = v119 - a12 * 0.5;
            uint64_t v123 = (double *)(v101 + 40);
            objc_super v124 = v132;
            do
            {
              double v125 = *(v123 - 1);
              double v126 = *v123;
              id v127 = objc_msgSend(v121, sel_bezierPathWithRoundedRect_cornerRadius_, v120, v125 - a10 * 0.5, a10, a10 * 0.5 + *v123 - (v125 - a10 * 0.5), a10 * 0.5);
              objc_msgSend(v70, sel_appendPath_, v127);

              id v128 = objc_msgSend(v121, sel_bezierPathWithRoundedRect_cornerRadius_, v122, v125 - a12 * 0.5, a12, a12 * 0.5 + v126 - (v125 - a12 * 0.5), a12 * 0.5);
              objc_msgSend(v124, sel_appendPath_, v128);

              v123 += 2;
              --v118;
            }
            while (v118);
          }
          swift_bridgeObjectRelease();
          uint64_t v99 = v136;
        }
        else
        {
LABEL_50:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v129 = *(void *)(v139 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
        uint64_t v130 = *(void *)(v139 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
        swift_unknownObjectRelease();
        uint64_t result = swift_beginAccess();
        *(void *)(v99 + 16) = v129;
        *(void *)(v99 + 24) = v130;
        *(unsigned char *)(v99 + 32) = 0;
      }
      else
      {
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

char *sub_1E0E73F7C(char *result, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18, CGContext *a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25)
{
  if (result)
  {
    unint64_t v33 = (unsigned char *)(a17 + 16);
    type metadata accessor for BalanceCoordinate();
    uint64_t v34 = swift_dynamicCastClass();
    if (!v34) {
      goto LABEL_5;
    }
    uint64_t v35 = v34;
    double v36 = *(double *)(v34 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
    swift_unknownObjectRetain();
    v60.origin.CGFloat x = a2;
    v60.origin.CGFloat y = a3;
    v60.size.CGFloat width = a4;
    v60.size.CGFloat height = a5;
    if (CGRectGetMinX(v60) > v36)
    {
      swift_unknownObjectRelease();
LABEL_5:
      uint64_t result = (char *)swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      uint64_t v37 = (uint64_t)result;
      if (*(void *)(*(void *)&result[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric] + 16)
        && (sub_1E0E5D90C(a15), (v38 & 1) != 0))
      {
        swift_unknownObjectRetain();
        uint64_t v39 = swift_bridgeObjectRetain();
        id v40 = (double *)sub_1E0E75DE0(v39, v37);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        if (!*((void *)v40 + 2)) {
          goto LABEL_9;
        }
      }
      else
      {
        id v40 = (double *)MEMORY[0x1E4FBC860];
        if (!*(void *)(MEMORY[0x1E4FBC860] + 16))
        {
LABEL_9:
          uint64_t result = (char *)swift_bridgeObjectRelease();
          if ((*(unsigned char *)(v37 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16) & 1) == 0)
          {
            uint64_t result = (char *)swift_beginAccess();
            *unint64_t v33 = 0;
          }
          return result;
        }
      }
      double v44 = v40[4];
      double v45 = v40[5];
      swift_bridgeObjectRelease();
      return (char *)objc_msgSend(a16, sel_moveToPoint_, v44, v45);
    }
    if (*(void *)(*(void *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric) + 16)
      && (sub_1E0E5D90C(a15), (v41 & 1) != 0))
    {
      swift_unknownObjectRetain();
      uint64_t v42 = swift_bridgeObjectRetain();
      uint64_t v43 = sub_1E0E75DE0(v42, v35);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v43 = MEMORY[0x1E4FBC860];
    }
    if (*(void *)(v43 + 16))
    {
      double v46 = *(double *)(v43 + 32);
      double v47 = *(double *)(v43 + 40);
      swift_bridgeObjectRelease();
      objc_msgSend(a16, sel_currentPoint);
      double v49 = vabdd_f64(v46, v48);
      swift_beginAccess();
      if (v49 < a6) {
        int v50 = *v33;
      }
      else {
        int v50 = 0;
      }
      swift_beginAccess();
      *unint64_t v33 = v50;
      if (v50 == 1)
      {
        objc_msgSend(a16, sel_addLineToPoint_, v46, v47);
        id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
        objc_msgSend(v51, sel_appendPath_, a16);
        objc_msgSend(a18, sel_applyToContext_, a19);
        double v52 = (const CGPath *)objc_msgSend(v51, sel_CGPath);
        CGContextAddPath(a19, v52);
      }
      else
      {
        swift_beginAccess();
        *unint64_t v33 = 1;
      }
      if (*(double *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange) > v47
        || v47 > *(double *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8))
      {
        a22 = a24;
        char v55 = self;
        id v56 = objc_msgSend(v55, sel_bezierPathWithRoundedRect_cornerRadius_, v46 - a7 * 0.5, v47 - a7 * 0.5, a7, a7 * 0.5 + v47 - (v47 - a7 * 0.5), a7 * 0.5);
        objc_msgSend(a23, sel_appendPath_, v56);
      }
      else
      {
        char v55 = self;
        id v56 = objc_msgSend(v55, sel_bezierPathWithRoundedRect_cornerRadius_, v46 - a7 * 0.5, v47 - a7 * 0.5, a7, a7 * 0.5 + v47 - (v47 - a7 * 0.5), a7 * 0.5);
        objc_msgSend(a20, sel_appendPath_, v56);
      }

      id v57 = objc_msgSend(v55, sel_bezierPathWithRoundedRect_cornerRadius_, v46 - a8 * 0.5, v47 - a8 * 0.5, a8, a8 * 0.5 + v47 - (v47 - a8 * 0.5));
      objc_msgSend(a22, sel_appendPath_, v57);

      objc_msgSend(a16, sel_moveToPoint_, v46, v47);
    }
    else
    {
      swift_bridgeObjectRelease();
      if ((*(unsigned char *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16) & 1) == 0)
      {
        swift_beginAccess();
        *unint64_t v33 = 0;
      }
    }
    uint64_t v58 = *(void *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
    uint64_t v59 = *(void *)(v35 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
    swift_unknownObjectRelease();
    uint64_t result = (char *)swift_beginAccess();
    *(void *)(a25 + 16) = v58;
    *(void *)(a25 + 24) = v59;
    *(unsigned char *)(a25 + 32) = 0;
  }
  return result;
}

uint64_t sub_1E0E744FC(void *a1)
{
  uint64_t v2 = sub_1E0ECB460();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_canonicalSize);
  double v8 = v7;
  id v9 = objc_msgSend(a1, sel_seriesPointIntervalComponentsAtResolution_, 0);
  sub_1E0ECB410();

  uint64_t v10 = (void *)sub_1E0ECB400();
  objc_msgSend(v10, sel_hk_approximateDuration);
  double v12 = v11;

  double v13 = floor(v8 / fmax(v12, 1.0));
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v13 < 9.22337204e18) {
    return (uint64_t)v13;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_1E0E74844(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 64) = 1;
  return result;
}

id BalanceSeries.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceSeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1E0E74C60(uint64_t a1)
{
  return sub_1E0E74E88(a1, (SEL *)&selRef_systemGray3Color, &qword_1EAD74198);
}

id sub_1E0E74C74(uint64_t a1)
{
  return sub_1E0E74E88(a1, (SEL *)&selRef_hk_chartBackgroundColor, &qword_1EAD741A0);
}

void sub_1E0E74C88(uint64_t a1)
{
}

void sub_1E0E74CAC(uint64_t a1)
{
}

void sub_1E0E74CD0(uint64_t a1)
{
}

void sub_1E0E74CF4(uint64_t a1)
{
}

void sub_1E0E74D18(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EAD740B8;
  uint64_t v6 = (void *)sub_1E0ECD190();
  id v7 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7) {
    *a4 = v7;
  }
  else {
    __break(1u);
  }
}

void sub_1E0E74DDC()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemGray6Color);
  id v2 = objc_msgSend(v0, sel_systemGray5Color);
  id v3 = HKUIDynamicColorWithColors(v1, v2);

  if (v3) {
    qword_1EAD741C8 = (uint64_t)v3;
  }
  else {
    __break(1u);
  }
}

id sub_1E0E74E74(uint64_t a1)
{
  return sub_1E0E74E88(a1, (SEL *)&selRef_systemGray3Color, &qword_1EAD741D0);
}

id sub_1E0E74E88(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

uint64_t sub_1E0E74ECC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1E0E65D34(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1E0E74F38(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1E0E74F38(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1E0ECD9A0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v82 = *a1;
      uint64_t v83 = -1;
      uint64_t v84 = 1;
      uint64_t v85 = *a1;
      do
      {
        double v86 = *(double *)(v82 + 16 * v84);
        uint64_t v87 = v83;
        uint64_t v88 = v85;
        do
        {
          if (v86 >= *(double *)v88) {
            break;
          }
          if (!v82) {
            goto LABEL_141;
          }
          uint64_t v89 = *(void *)(v88 + 24);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(double *)uint64_t v88 = v86;
          *(void *)(v88 + 8) = v89;
          v88 -= 16;
        }
        while (!__CFADD__(v87++, 1));
        ++v84;
        v85 += 16;
        --v83;
      }
      while (v84 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      double v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v91 = v12;
      uint64_t v102 = v9;
      if (v13 >= 2)
      {
        uint64_t v92 = *v99;
        do
        {
          unint64_t v93 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v92) {
            goto LABEL_145;
          }
          int64x2_t v94 = v91;
          uint64_t v95 = *(void *)&v91[16 * v93 + 32];
          uint64_t v96 = *(void *)&v91[16 * v13 + 24];
          sub_1E0E75608((double *)(v92 + 16 * v95), (double *)(v92 + 16 * *(void *)&v91[16 * v13 + 16]), v92 + 16 * v96, __dst);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64x2_t v94 = sub_1E0E64F24((uint64_t)v94);
          }
          if (v93 >= *((void *)v94 + 2)) {
            goto LABEL_134;
          }
          unint64_t v97 = &v94[16 * v93 + 32];
          *(void *)unint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v94 + 2);
          if (v13 > v98) {
            goto LABEL_135;
          }
          memmove(&v94[16 * v13 + 16], &v94[16 * v13 + 32], 16 * (v98 - v13));
          uint64_t v91 = v94;
          *((void *)v94 + 2) = v98 - 1;
          unint64_t v13 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v102 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v102 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_1E0DF0964();
    uint64_t v8 = sub_1E0ECD360();
    *(void *)(v8 + 16) = v7;
    uint64_t v102 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v100 = *a1 - 16;
  uint64_t v101 = *a1 + 32;
  double v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v103 = v6;
  uint64_t v104 = v3;
  uint64_t v105 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10);
      double v16 = *(double *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (double *)(v101 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = (long long *)(v100 + 16 * v10);
          uint64_t v21 = v10;
          uint64_t v22 = v14;
          uint64_t v23 = (long long *)(v11 + 16 * v14);
          do
          {
            if (v22 != --v21)
            {
              if (!v11) {
                goto LABEL_144;
              }
              long long v24 = *v23;
              long long *v23 = *v20;
              *uint64_t v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v25 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v25 >= v3) {
      uint64_t v25 = v3;
    }
    if (v25 < v14) {
      break;
    }
    if (v10 != v25)
    {
      uint64_t v26 = v100 + 16 * v10;
      do
      {
        double v27 = *(double *)(v11 + 16 * v10);
        uint64_t v28 = v14;
        uint64_t v29 = v26;
        do
        {
          if (v27 >= *(double *)v29) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v30 = *(void *)(v29 + 24);
          *(_OWORD *)(v29 + 16) = *(_OWORD *)v29;
          *(double *)uint64_t v29 = v27;
          *(void *)(v29 + 8) = v30;
          v29 -= 16;
          ++v28;
        }
        while (v10 != v28);
        ++v10;
        v26 += 16;
      }
      while (v10 != v25);
      uint64_t v10 = v25;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v12 = sub_1E0E64BC4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v32 = *((void *)v12 + 2);
    unint64_t v31 = *((void *)v12 + 3);
    unint64_t v13 = v32 + 1;
    uint64_t v11 = v105;
    if (v32 >= v31 >> 1)
    {
      unint64_t v81 = sub_1E0E64BC4((char *)(v31 > 1), v32 + 1, 1, v12);
      uint64_t v11 = v105;
      double v12 = v81;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v33 = v12 + 32;
    uint64_t v34 = &v12[16 * v32 + 32];
    *(void *)uint64_t v34 = v14;
    *((void *)v34 + 1) = v10;
    if (v32)
    {
      while (1)
      {
        unint64_t v35 = v13 - 1;
        if (v13 >= 4)
        {
          id v40 = &v33[16 * v13];
          uint64_t v41 = *((void *)v40 - 8);
          uint64_t v42 = *((void *)v40 - 7);
          BOOL v46 = __OFSUB__(v42, v41);
          uint64_t v43 = v42 - v41;
          if (v46) {
            goto LABEL_120;
          }
          uint64_t v45 = *((void *)v40 - 6);
          uint64_t v44 = *((void *)v40 - 5);
          BOOL v46 = __OFSUB__(v44, v45);
          uint64_t v38 = v44 - v45;
          char v39 = v46;
          if (v46) {
            goto LABEL_121;
          }
          unint64_t v47 = v13 - 2;
          double v48 = &v33[16 * v13 - 32];
          uint64_t v50 = *(void *)v48;
          uint64_t v49 = *((void *)v48 + 1);
          BOOL v46 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          if (v46) {
            goto LABEL_123;
          }
          BOOL v46 = __OFADD__(v38, v51);
          uint64_t v52 = v38 + v51;
          if (v46) {
            goto LABEL_126;
          }
          if (v52 >= v43)
          {
            uint64_t v70 = &v33[16 * v35];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            BOOL v46 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v46) {
              goto LABEL_130;
            }
            BOOL v63 = v38 < v73;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v64 = *((void *)v12 + 4);
            uint64_t v65 = *((void *)v12 + 5);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
            goto LABEL_77;
          }
          uint64_t v37 = *((void *)v12 + 4);
          uint64_t v36 = *((void *)v12 + 5);
          BOOL v46 = __OFSUB__(v36, v37);
          uint64_t v38 = v36 - v37;
          char v39 = v46;
        }
        if (v39) {
          goto LABEL_122;
        }
        unint64_t v47 = v13 - 2;
        uint64_t v53 = &v33[16 * v13 - 32];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v56 = __OFSUB__(v54, v55);
        uint64_t v57 = v54 - v55;
        char v58 = v56;
        if (v56) {
          goto LABEL_125;
        }
        uint64_t v59 = &v33[16 * v35];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v46 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v46) {
          goto LABEL_128;
        }
        if (__OFADD__(v57, v62)) {
          goto LABEL_129;
        }
        if (v57 + v62 >= v38)
        {
          BOOL v63 = v38 < v62;
LABEL_83:
          if (v63) {
            unint64_t v35 = v47;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v58) {
          goto LABEL_124;
        }
        uint64_t v66 = &v33[16 * v35];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v46 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v46) {
          goto LABEL_127;
        }
        if (v69 < v57) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v74 = v35 - 1;
        if (v35 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v75 = v12;
        int64_t v76 = &v33[16 * v74];
        uint64_t v77 = *(void *)v76;
        int64x2_t v78 = &v33[16 * v35];
        uint64_t v79 = *((void *)v78 + 1);
        sub_1E0E75608((double *)(v11 + 16 * *(void *)v76), (double *)(v11 + 16 * *(void *)v78), v11 + 16 * v79, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v79 < v77) {
          goto LABEL_117;
        }
        if (v35 > *((void *)v75 + 2)) {
          goto LABEL_118;
        }
        *(void *)int64_t v76 = v77;
        *(void *)&v33[16 * v74 + 8] = v79;
        unint64_t v80 = *((void *)v75 + 2);
        if (v35 >= v80) {
          goto LABEL_119;
        }
        double v12 = v75;
        unint64_t v13 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((void *)v75 + 2) = v80 - 1;
        uint64_t v11 = v105;
        if (v80 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v103;
    uint64_t v3 = v104;
    if (v10 >= v104)
    {
      uint64_t v9 = v102;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1E0ECD8E0();
  __break(1u);
  return result;
}

uint64_t sub_1E0E75608(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  long long v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v16 = &v4[2 * v13];
      uint64_t v22 = v16;
      long long v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v17 = (double *)(a3 - 16);
        double v18 = v6;
        while (1)
        {
          double v19 = v17 + 2;
          double v20 = *(v18 - 2);
          v18 -= 2;
          if (*(v16 - 2) >= v20)
          {
            uint64_t v22 = v16 - 2;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)uint64_t v17 = *((_OWORD *)v16 - 1);
            }
            double v18 = v6;
            v16 -= 2;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
            }
            long long v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 2;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 2;
          uint64_t v23 = v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 2;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 2;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      long long v24 = v7;
    }
LABEL_42:
    sub_1E0E64DAC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0E75884(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  uint64_t v10 = 0;
  int64_t v11 = 0;
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v13 = MEMORY[0x1E4FBC860] + 32;
LABEL_4:
  uint64_t v38 = (void *)v13;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = *(void *)(v8 + 16);
      if (v9 != v17)
      {
        if (v9 >= v17) {
          goto LABEL_51;
        }
        uint64_t v22 = *(void *)(v8 + 8 * v9 + 32);
        if (!v10)
        {
          unint64_t v23 = v12[3];
          if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_55;
          }
          int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
          if (v24 <= 1) {
            uint64_t v25 = 1;
          }
          else {
            uint64_t v25 = v24;
          }
          sub_1E0B330D4(0, &qword_1EAD6D970, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBBE00]);
          uint64_t v26 = (void *)swift_allocObject();
          int64_t v27 = _swift_stdlib_malloc_size(v26);
          uint64_t v28 = v27 - 32;
          if (v27 < 32) {
            uint64_t v28 = v27 - 25;
          }
          uint64_t v29 = v28 >> 3;
          void v26[2] = v25;
          uint64_t v26[3] = 2 * (v28 >> 3);
          unint64_t v30 = (unint64_t)(v26 + 4);
          uint64_t v31 = v12[3] >> 1;
          if (v12[2])
          {
            unint64_t v32 = v12 + 4;
            if (v26 != v12 || v30 >= (unint64_t)v32 + 8 * v31)
            {
              uint64_t v37 = v28 >> 3;
              memmove(v26 + 4, v32, 8 * v31);
              unint64_t v30 = (unint64_t)(v26 + 4);
              uint64_t v29 = v37;
            }
            v12[2] = 0;
          }
          uint64_t v38 = (void *)(v30 + 8 * v31);
          uint64_t v10 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
          uint64_t result = swift_release();
          uint64_t v12 = v26;
        }
        BOOL v33 = __OFSUB__(v10--, 1);
        if (!v33)
        {
          ++v9;
          void *v38 = v22;
          uint64_t v13 = (uint64_t)(v38 + 1);
          goto LABEL_4;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
    }
    if (v5)
    {
      unint64_t v14 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_6;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v18 >= v6) {
      goto LABEL_46;
    }
    unint64_t v19 = *(void *)(v2 + 8 * v18);
    if (!v19) {
      break;
    }
LABEL_19:
    unint64_t v5 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    int64_t v11 = v18;
LABEL_6:
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v9 = 0;
    uint64_t v8 = v16;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_46;
  }
  unint64_t v19 = *(void *)(v2 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v21 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_46;
  }
  unint64_t v19 = *(void *)(v2 + 8 * v21);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v11 + 4;
  if (v11 + 4 >= v6) {
    goto LABEL_46;
  }
  unint64_t v19 = *(void *)(v2 + 8 * v20);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v21 = v11 + 5;
  if (v11 + 5 >= v6) {
    goto LABEL_46;
  }
  unint64_t v19 = *(void *)(v2 + 8 * v21);
  if (v19)
  {
LABEL_18:
    int64_t v18 = v21;
    goto LABEL_19;
  }
  int64_t v20 = v11 + 6;
  if (v11 + 6 >= v6)
  {
LABEL_46:
    sub_1E0E78584();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v34 = v12[3];
    if (v34 >= 2)
    {
      unint64_t v35 = v34 >> 1;
      BOOL v33 = __OFSUB__(v35, v10);
      uint64_t v36 = v35 - v10;
      if (v33) {
        goto LABEL_54;
      }
      v12[2] = v36;
    }
    return (uint64_t)v12;
  }
  unint64_t v19 = *(void *)(v2 + 8 * v20);
  if (v19)
  {
LABEL_15:
    int64_t v18 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v6) {
      goto LABEL_46;
    }
    unint64_t v19 = *(void *)(v2 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1E0E75BC0(uint64_t result, uint64_t a2)
{
  unint64_t v2 = 0;
  unint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = (double *)(a2 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_2:
  if (v2 <= v3) {
    unint64_t v7 = v3;
  }
  else {
    unint64_t v7 = v2;
  }
  while (1)
  {
    if (v3 == v2) {
      return v6;
    }
    if (v7 == v2) {
      break;
    }
    double v8 = *(double *)(v5 + 8 * v2++);
    if (*v4 <= v8 && v8 <= v4[1])
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1E0DEEB54(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v10 = *(void *)(v6 + 16);
      unint64_t v9 = *(void *)(v6 + 24);
      if (v10 >= v9 >> 1) {
        uint64_t result = sub_1E0DEEB54(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v6 + 16) = v10 + 1;
      *(double *)(v6 + 8 * v10 + 32) = v8;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E75CD4(uint64_t result, uint64_t a2)
{
  unint64_t v2 = 0;
  unint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = (double *)(a2 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_2:
  if (v2 <= v3) {
    unint64_t v7 = v3;
  }
  else {
    unint64_t v7 = v2;
  }
  while (1)
  {
    if (v3 == v2) {
      return v6;
    }
    if (v7 == v2) {
      break;
    }
    double v8 = *(double *)(v5 + 8 * v2++);
    if (*v4 > v8 || v8 > v4[1])
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1E0DEEB54(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      if (v11 >= v10 >> 1) {
        uint64_t result = sub_1E0DEEB54(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v6 + 16) = v11 + 1;
      *(double *)(v6 + 8 * v11 + 32) = v8;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E75DE0(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1E0DEEBC4(0, v3, 0);
    uint64_t result = v12;
    uint64_t v6 = (uint64_t *)(a1 + 32);
    uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
    do
    {
      uint64_t v8 = *v6;
      uint64_t v13 = result;
      unint64_t v10 = *(void *)(result + 16);
      unint64_t v9 = *(void *)(result + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1E0DEEBC4(v9 > 1, v10 + 1, 1);
        uint64_t result = v13;
      }
      *(void *)(result + 16) = v10 + 1;
      uint64_t v11 = result + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      ++v6;
      --v3;
    }
    while (v3);
  }
  return result;
}

id sub_1E0E75EC0(char a1, double a2, double a3)
{
  if (a2 + a3 < a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a1)
  {
    if (qword_1EAD6D538 == -1)
    {
LABEL_4:
      uint64_t v3 = qword_1EAD6D528;
      id v4 = (id)qword_1EAD741C0;
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v5 = &qword_1EAD741B0;
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1EAD6D530 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EAD6D520;
  id v4 = (id)qword_1EAD741B8;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v5 = &qword_1EAD741A8;
LABEL_12:
  uint64_t v7 = (void *)*v5;
  sub_1E0B330D4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E0F09980;
  id v9 = v4;
  id v10 = v7;
  uint64_t v11 = (void *)sub_1E0ECBD90();
  id v12 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v9, v11);

  *(void *)(v8 + 32) = v12;
  id v13 = v10;
  unint64_t v14 = (void *)sub_1E0ECBD90();
  id v15 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v13, v14);

  *(void *)(v8 + 40) = v15;
  id v16 = v13;
  unint64_t v17 = (void *)sub_1E0ECBD90();
  id v18 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v16, v17);

  *(void *)(v8 + 48) = v18;
  id v19 = v9;
  int64_t v20 = (void *)sub_1E0ECBD90();
  id v21 = objc_msgSend(objc_allocWithZone((Class)HKMultiGradientFillColor), sel_initWithColor_location_, v19, v20);

  *(void *)(v8 + 56) = v21;
  sub_1E0ECD340();
  id v22 = objc_allocWithZone((Class)HKMultiGradientFillStyle);
  sub_1E0E7817C();
  unint64_t v23 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v22, sel_initWithColors_, v23);

  return v24;
}

void sub_1E0E7621C(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t *a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v11 = v10;
  id v92 = a1;
  uint64_t v91 = *a7;
  id v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))a7[2];
  uint64_t v90 = a7[1];
  uint64_t v89 = (void *)a7[3];
  uint64_t v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a7[4];
  uint64_t v87 = a7[5];
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x1F4188790](v20 - 8, v23);
  uint64_t v25 = (char *)&v77 - v24;
  id v97 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v86 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  unsigned __int8 v26 = objc_msgSend(a9, sel_seriesDrawingDuringTiling);
  uint64_t v78 = a8;
  if (v26)
  {
    long long v27 = 0uLL;
    int v28 = 1;
    long long v29 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
  }
  else
  {
    unint64_t v32 = *(os_unfair_lock_s **)&v11[OBJC_IVAR___HKBalanceSeries_lollipopPathRangeLock];
    uint64_t v33 = (uint64_t)&v32[4];
    unint64_t v34 = v32 + 21;
    os_unfair_lock_lock(v32 + 21);
    sub_1E0E72200(v33, (uint64_t)&v104);
    os_unfair_lock_unlock(v34);
    long long v27 = v104;
    long long v29 = v105;
    long long v30 = v106;
    long long v31 = v107;
    int v28 = v108;
  }
  long long v104 = v27;
  long long v105 = v29;
  long long v106 = v30;
  long long v107 = v31;
  HIDWORD(v77) = v28;
  unsigned __int8 v108 = v28;
  unsigned int v93 = objc_msgSend(v11, sel_allowsSelection);
  double v35 = sub_1E0E720FC(a2, a3, a4, a5);
  uint64_t v36 = swift_allocObject();
  uint64_t v94 = v36;
  *(void *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  uint64_t v82 = v36 + 16;
  *(unsigned char *)(v36 + 32) = 1;
  sub_1E0DFD6E0(a10, (uint64_t)v25);
  unint64_t v37 = (*(unsigned __int8 *)(v21 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v38 = (v22 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v79 = v25;
  unint64_t v80 = (v39 + 73) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  id v81 = v11;
  unint64_t v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  *(CGFloat *)(v45 + 16) = a2;
  *(CGFloat *)(v45 + 24) = a3;
  *(CGFloat *)(v45 + 32) = a4;
  *(CGFloat *)(v45 + 40) = a5;
  *(double *)(v45 + 48) = v35;
  *(void *)(v45 + 56) = v96;
  *(void *)(v45 + 64) = v11;
  *(void *)(v45 + 72) = v95;
  *(double *)(v45 + 80) = v35 * 0.7;
  sub_1E0E78390((uint64_t)v79, v45 + v37, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  *(void *)(v45 + v38) = v97;
  sub_1E0E78390((uint64_t)&v104, v45 + v39, (unint64_t *)&unk_1EAD6ED70, type metadata accessor for HKGraphSeriesDataPointPathRange);
  *(unsigned char *)(v45 + v39 + 65) = v93;
  BOOL v46 = v86;
  *(void *)(v45 + v80) = v86;
  unint64_t v47 = v85;
  *(void *)(v45 + v40) = v85;
  *(double *)(v45 + v41) = v35 * 0.5;
  double v48 = v84;
  *(void *)(v45 + v42) = v84;
  uint64_t v49 = v83;
  *(void *)(v45 + v43) = v83;
  uint64_t v50 = v94;
  *(void *)(v45 + v44) = v94;
  uint64_t v102 = sub_1E0E783FC;
  uint64_t v103 = v45;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v99 = 1107296256;
  uint64_t v100 = sub_1E0E3D108;
  uint64_t v101 = &block_descriptor_43;
  uint64_t v51 = _Block_copy(&aBlock);
  id v96 = v96;
  id v52 = v81;
  id v53 = v95;
  id v54 = v97;
  id v97 = v46;
  id v55 = v47;
  id v56 = v48;
  id v57 = v49;
  swift_retain();
  swift_release();
  uint64_t aBlock = v91;
  uint64_t v99 = v90;
  uint64_t v100 = v19;
  uint64_t v101 = v89;
  uint64_t v102 = v88;
  uint64_t v103 = v87;
  objc_msgSend(v92, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v51);
  _Block_release(v51);
  swift_beginAccess();
  if (*(unsigned char *)(v50 + 32))
  {
    swift_release();
    id v58 = v96;
  }
  else
  {
    uint64_t v59 = v54;
    id v81 = v53;
    if (v93) {
      id v60 = sub_1E0E75EC0(BYTE4(v77) ^ 1u, a3, a5);
    }
    else {
      id v60 = sub_1E0E71E50();
    }
    id v95 = v60;
    uint64_t v61 = v78;
    if (!objc_msgSend(v59, sel_isEmpty))
    {
      id v62 = objc_msgSend(v59, sel_CGPath);
      objc_msgSend(v95, sel_renderPath_context_axisRect_alpha_, v62, v61, a2, a3, a4, a5, 1.0);
    }
    id v63 = sub_1E0E71F2C();
    id v64 = v97;
    if ((objc_msgSend(v97, sel_isEmpty) & 1) == 0)
    {
      id v65 = objc_msgSend(v64, sel_CGPath);
      objc_msgSend(v63, sel_renderPath_context_axisRect_alpha_, v65, v61, a2, a3, a4, a5, 1.0);

      id v63 = v65;
    }

    id v66 = sub_1E0E71E7C();
    if ((objc_msgSend(v55, sel_isEmpty) & 1) == 0)
    {
      id v67 = objc_msgSend(v55, sel_CGPath);
      objc_msgSend(v66, sel_renderPath_context_axisRect_alpha_, v67, v61, a2, a3, a4, a5, 1.0);

      id v66 = v67;
    }

    id v68 = sub_1E0E71F58();
    if ((objc_msgSend(v56, sel_isEmpty) & 1) == 0)
    {
      id v69 = objc_msgSend(v56, sel_CGPath);
      objc_msgSend(v68, sel_renderPath_context_axisRect_alpha_, v69, v61, a2, a3, a4, a5, 1.0);

      id v68 = v69;
    }

    id v70 = sub_1E0E71E7C();
    if ((objc_msgSend(v57, sel_isEmpty) & 1) == 0)
    {
      id v71 = objc_msgSend(v57, sel_CGPath);
      objc_msgSend(v70, sel_renderPath_context_axisRect_alpha_, v71, v61, a2, a3, a4, a5, 1.0);

      id v70 = v71;
    }

    id v72 = sub_1E0E71FDC();
    id v73 = v96;
    if ((objc_msgSend(v96, sel_isEmpty) & 1) == 0)
    {
      id v74 = objc_msgSend(v73, sel_CGPath);
      objc_msgSend(v72, sel_renderPath_context_axisRect_alpha_, v74, v61, a2, a3, a4, a5, 1.0);

      id v72 = v74;
    }

    id v75 = sub_1E0E72008();
    id v53 = v81;
    if (objc_msgSend(v81, sel_isEmpty))
    {
      swift_release();

      id v58 = v96;
      id v54 = v59;
    }
    else
    {
      id v76 = objc_msgSend(v53, sel_CGPath);
      objc_msgSend(v75, sel_renderPath_context_axisRect_alpha_, v76, v61, a2, a3, a4, a5, 1.0);
      swift_release();

      id v54 = v64;
      id v97 = v55;
      id v55 = v56;
      id v56 = v57;
      id v57 = v96;
      id v58 = v53;
      id v53 = v76;
    }
  }
}

uint64_t sub_1E0E76C14(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, long long *a7, void *a8, uint64_t a9)
{
  id v82 = a8;
  id v79 = a1;
  long long v78 = *a7;
  long long v77 = a7[1];
  id v16 = (double *)*((void *)a7 + 5);
  id v76 = (char *(*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((void *)a7 + 4);
  uint64_t v17 = sub_1E0ECBDF0();
  uint64_t v68 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v17, v20);
  id v69 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGContextSaveGState((CGContextRef)a8);
  id v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  id v81 = v9;
  double v21 = sub_1E0E720FC(a2, a3, a4, a5);
  id v80 = sub_1E0E71EA8();
  uint64_t v22 = swift_allocObject();
  uint64_t v70 = v22;
  *(void *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = 0;
  uint64_t v75 = v22 + 16;
  *(unsigned char *)(v22 + 32) = 1;
  uint64_t v84 = swift_allocObject();
  *(unsigned char *)(v84 + 16) = 1;
  v89.origin.CGFloat x = a2;
  v89.origin.CGFloat y = a3;
  v89.size.CGFloat width = a4;
  v89.size.CGFloat height = a5;
  CGFloat v23 = CGRectGetWidth(v89) * 1.4;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a9, v17);
  unint64_t v24 = (*(unsigned __int8 *)(v18 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v67 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v63 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v31 = (double *)swift_allocObject();
  void v31[2] = a2;
  v31[3] = a3;
  v31[4] = a4;
  v31[5] = a5;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v31 + v24, v69, v68);
  unint64_t v32 = v74;
  *(void *)((char *)v31 + v67) = v74;
  *(void *)((char *)v31 + v66) = v84;
  *(double *)((char *)v31 + v65) = v23;
  *(void *)((char *)v31 + v64) = v80;
  *(void *)((char *)v31 + v62) = v82;
  *(void *)((char *)v31 + v63) = v83;
  *(void *)((char *)v31 + v25) = v81;
  *(double *)((char *)v31 + v26) = v21;
  uint64_t v33 = v73;
  *(void *)((char *)v31 + v27) = v73;
  *(double *)((char *)v31 + v28) = v21 * 0.5;
  uint64_t v34 = v70;
  double v35 = v72;
  *(void *)((char *)v31 + v29) = v72;
  uint64_t v36 = v71;
  *(void *)((char *)v31 + v30) = v71;
  *(void *)((char *)v31 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8)) = v34;
  uint64_t v87 = sub_1E0E77FD8;
  uint64_t v88 = v31;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v86 = sub_1E0E3D108;
  *((void *)&v86 + 1) = &block_descriptor_14;
  unint64_t v37 = _Block_copy(&aBlock);
  id v38 = v32;
  swift_retain();
  id v39 = v80;
  unint64_t v40 = (CGContext *)v82;
  id v41 = v83;
  id v83 = v81;
  id v82 = v33;
  id v42 = v35;
  unint64_t v43 = v40;
  id v44 = v42;
  id v45 = v36;
  swift_retain();
  swift_release();
  long long aBlock = v78;
  long long v86 = v77;
  uint64_t v87 = v76;
  uint64_t v88 = v16;
  objc_msgSend(v79, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v37);
  BOOL v46 = v37;
  unint64_t v47 = v41;
  _Block_release(v46);
  swift_beginAccess();
  if ((*(unsigned char *)(v34 + 32) & 1) == 0)
  {
    id v81 = v44;
    id v79 = v39;
    id v48 = sub_1E0E75EC0(0, a3, a5);
    id v80 = v38;
    if (!objc_msgSend(v38, sel_isEmpty))
    {
      CGContextReplacePathWithStrokedPath(v43);
      id v49 = objc_msgSend(v80, sel_CGPath);
      objc_msgSend(v48, sel_renderPath_context_axisRect_alpha_, v49, v43, a2, a3, a4, a5, 1.0);
    }
    id v50 = sub_1E0E71F2C();
    if ((objc_msgSend(v41, sel_isEmpty) & 1) == 0)
    {
      id v51 = objc_msgSend(v41, sel_CGPath);
      objc_msgSend(v50, sel_renderPath_context_axisRect_alpha_, v51, v43, a2, a3, a4, a5, 1.0);

      id v50 = v51;
    }

    id v52 = sub_1E0E71E7C();
    id v53 = v82;
    if ((objc_msgSend(v82, sel_isEmpty) & 1) == 0)
    {
      id v54 = objc_msgSend(v53, sel_CGPath);
      objc_msgSend(v52, sel_renderPath_context_axisRect_alpha_, v54, v43, a2, a3, a4, a5, 1.0);

      id v52 = v54;
    }

    id v55 = sub_1E0E71F58();
    id v56 = v81;
    if ((objc_msgSend(v81, sel_isEmpty) & 1) == 0)
    {
      id v57 = objc_msgSend(v56, sel_CGPath);
      objc_msgSend(v55, sel_renderPath_context_axisRect_alpha_, v57, v43, a2, a3, a4, a5, 1.0);

      id v55 = v57;
    }
    unint64_t v47 = v41;

    id v58 = sub_1E0E71E7C();
    if ((objc_msgSend(v45, sel_isEmpty) & 1) == 0)
    {
      id v59 = objc_msgSend(v45, sel_CGPath);
      objc_msgSend(v58, sel_renderPath_context_axisRect_alpha_, v59, v43, a2, a3, a4, a5, 1.0);

      id v48 = v58;
      id v58 = v59;
    }
    id v38 = v80;
    id v44 = v81;

    id v39 = v79;
  }
  CGContextRestoreGState(v43);

  swift_release();
  return swift_release();
}

uint64_t sub_1E0E77400(uint64_t a1, void *a2)
{
  id v50 = a2;
  uint64_t v3 = sub_1E0ECBDF0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v3, v5);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  id v55 = (char *)v46 - v10;
  sub_1E0E7858C();
  uint64_t result = sub_1E0ECD920();
  id v12 = (void *)result;
  int64_t v13 = 0;
  uint64_t v56 = v4;
  uint64_t v57 = a1;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v51 = v15;
  int64_t v52 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v53 = result + 64;
  uint64_t v54 = v4 + 16;
  id v48 = v8;
  uint64_t v49 = v3;
  v46[2] = v4 + 32;
  unint64_t v47 = (void *)result;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v59 = (v19 - 1) & v19;
  int64_t v60 = v13;
  for (unint64_t i = __clz(__rbit64(v19)) | (v13 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v26 = v56;
    uint64_t v25 = v57;
    uint64_t v27 = *(void *)(v57 + 48);
    unint64_t v61 = *(void *)(v56 + 72) * i;
    unint64_t v28 = v55;
    (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v55, v27 + v61, v3);
    uint64_t v29 = *(void *)(v25 + 56);
    unint64_t v62 = i;
    uint64_t v30 = *(void *)(v29 + 8 * i);
    long long v31 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v31(v8, v28, v3);
    int64_t v32 = *(void *)(v30 + 16);
    if (v32)
    {
      id v58 = v31;
      uint64_t v63 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      id v33 = v50;
      sub_1E0DEEB54(0, v32, 0);
      uint64_t v34 = 0;
      uint64_t v35 = v63;
      do
      {
        id v36 = objc_msgSend(v33, sel_transform);
        unint64_t v37 = (void *)sub_1E0ECBD90();
        objc_msgSend(v36, sel_coordinateForValue_, v37);
        uint64_t v39 = v38;

        uint64_t v63 = v35;
        unint64_t v41 = *(void *)(v35 + 16);
        unint64_t v40 = *(void *)(v35 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_1E0DEEB54(v40 > 1, v41 + 1, 1);
          uint64_t v35 = v63;
        }
        ++v34;
        *(void *)(v35 + 16) = v41 + 1;
        *(void *)(v35 + 8 * v41 + 32) = v39;
      }
      while (v32 != v34);
      swift_bridgeObjectRelease();

      uint64_t v8 = v48;
      uint64_t v3 = v49;
      id v12 = v47;
      long long v31 = v58;
    }
    else
    {
      uint64_t v35 = MEMORY[0x1E4FBC860];
    }
    unint64_t v42 = v62;
    *(void *)(v53 + ((v62 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v62;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(v12[6] + v61, v8, v3);
    *(void *)(v12[7] + 8 * v42) = v35;
    uint64_t v43 = v12[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v12[2] = v45;
    unint64_t v19 = v59;
    int64_t v13 = v60;
    if (v59) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_31;
    }
    if (v21 >= v52) {
      return (uint64_t)v12;
    }
    unint64_t v22 = *(void *)(v51 + 8 * v21);
    int64_t v23 = v13 + 1;
    if (!v22)
    {
      int64_t v23 = v13 + 2;
      if (v13 + 2 >= v52) {
        return (uint64_t)v12;
      }
      unint64_t v22 = *(void *)(v51 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v13 + 3;
        if (v13 + 3 >= v52) {
          return (uint64_t)v12;
        }
        unint64_t v22 = *(void *)(v51 + 8 * v23);
        if (!v22) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v59 = (v22 - 1) & v22;
    int64_t v60 = v23;
  }
  uint64_t v24 = v13 + 4;
  if (v13 + 4 >= v52) {
    return (uint64_t)v12;
  }
  unint64_t v22 = *(void *)(v51 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v13 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v52) {
      return (uint64_t)v12;
    }
    unint64_t v22 = *(void *)(v51 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1E0E7781C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E0E7787C(void *a1, void *a2, uint64_t *a3, void *a4, void *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  id v33 = a5;
  uint64_t v34 = a4;
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  uint64_t v19 = MEMORY[0x1F4188790](v17 - 8, v18);
  int64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)&v32 - v23;
  uint64_t v25 = sub_1E0ECBDF0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v9 + OBJC_IVAR___HKBalanceSeries_selectedMetric;
  swift_beginAccess();
  sub_1E0DFD6E0(v30, (uint64_t)v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_1E0E5D794((uint64_t)v24);
LABEL_5:
    sub_1E0DFD6E0(v30, (uint64_t)v21);
    sub_1E0E7621C(a1, a6, a7, a8, a9, (uint64_t)a2, a3, (uint64_t)v34, v33, (uint64_t)v21);
    return sub_1E0E5D794((uint64_t)v21);
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v24, v25);
  if (objc_msgSend(a2, sel_intendedTimeScope) == (id)3)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    goto LABEL_5;
  }
  sub_1E0E76C14(a1, a6, a7, a8, a9, (uint64_t)a2, (long long *)a3, v34, (uint64_t)v29);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v25);
}

id sub_1E0E77B18(id a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = objc_msgSend(a1, sel_minValue);
    if (v2)
    {
      uint64_t v3 = v2;
      objc_msgSend(v2, sel_doubleValue);
      double v5 = v4;

      id v6 = objc_msgSend(v1, sel_maxValue);
      id v1 = v6;
      if (v6)
      {
        objc_msgSend(v6, sel_doubleValue);
        double v8 = v7;

        id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v5 + -0.05);
        id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v8 + 0.05);
        id v1 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v9, v10);
      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1E0E77C44()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1E0E77D18()
{
  return type metadata accessor for BalanceSeries();
}

void sub_1E0E77D20()
{
  sub_1E0E618CC(319, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for BalanceSeries(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BalanceSeries);
}

double sub_1E0E77E0C(uint64_t a1)
{
  *(void *)&double result = sub_1E0E77E24(a1).n128_u64[0];
  return result;
}

__n128 sub_1E0E77E24(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  long long v3 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = *(__n128 *)(v2 + 32);
  long long v5 = *(_OWORD *)(v2 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1E0E77E40()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1E0E77E50()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1E0E77E60()
{
  uint64_t v1 = sub_1E0ECBDF0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v14 = v3 | 7;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v14);
}

char *sub_1E0E77FD8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = *(void *)(sub_1E0ECBDF0() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1E0E73F7C(a1, v7[2], v7[3], v7[4], v7[5], *(CGFloat *)((char *)v7 + v19), *(CGFloat *)((char *)v7 + v24), *(CGFloat *)((char *)v7 + v26), a2, a3, a4, a5, a6, a7, (uint64_t)v7 + v16, *(void **)((char *)v7 + v17), *(void *)((char *)v7 + v18), *(void **)((char *)v7 + v20), *(CGContext **)((char *)v7 + v21),
           *(void **)((char *)v7 + v22),
           *(void *)((char *)v7 + v23),
           *(void **)((char *)v7 + v25),
           *(void **)((char *)v7 + v27),
           *(void **)((char *)v7 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)),
           *(void *)((char *)v7 + ((((v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

unint64_t sub_1E0E7817C()
{
  unint64_t result = qword_1EAD6EC60;
  if (!qword_1EAD6EC60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6EC60);
  }
  return result;
}

uint64_t sub_1E0E781BC()
{
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 88) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = sub_1E0ECBDF0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))((char *)v0 + v3, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 73) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  return MEMORY[0x1F4186498](v0, ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1E0E78390(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1E0E618CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0E783FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1E0E618CC(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
  unint64_t v17 = (*(void *)(*(void *)(v15 - 8) + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 73) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1E0E7336C(a1, a2, a3, a4, a5, *(CGFloat *)(v7 + 16), *(CGFloat *)(v7 + 24), *(CGFloat *)(v7 + 32), *(CGFloat *)(v7 + 40), *(double *)(v7 + 48), *(double *)(v7 + 80), *(double *)(v7 + v21), a6, a7, *(void **)(v7 + 56), *(void *)(v7 + 64), *(void **)(v7 + 72), v7 + v16, *(void **)(v7 + v17),
           v7 + v18,
           *(unsigned char *)(v7 + v18 + 65),
           *(void **)(v7 + v19),
           *(void **)(v7 + v20),
           *(void **)(v7 + v22),
           *(void **)(v7 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)),
           *(void *)(v7 + ((((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1E0E78584()
{
  return swift_release();
}

void sub_1E0E7858C()
{
  if (!qword_1EAD6F340)
  {
    sub_1E0ECBDF0();
    sub_1E0B330D4(255, (unint64_t *)&unk_1EAD6EDA0, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBB320]);
    sub_1E0E7865C((unint64_t *)&unk_1EAD6ED90, MEMORY[0x1E4F65908]);
    unint64_t v0 = sub_1E0ECD950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F340);
    }
  }
}

uint64_t sub_1E0E7865C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id AudiogramAverageSensitivityChartFormatter.__allocating_init(displayType:unitController:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return AudiogramChartDataFormatter.init(displayType:unitController:)(a1, a2);
}

id AudiogramAverageSensitivityDataSource.dataBlock.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HKAudiogramAverageSensitivityDataSource_dataBlock);
}

id AudiogramAverageSensitivityDataSource.__allocating_init(audiogramSample:isLeftEar:)(void *a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = objc_allocWithZone((Class)HKGraphSeriesDataBlock);
  uint64_t v7 = (char *)v5;
  id v8 = objc_msgSend(v6, sel_init);
  sub_1E0E79084(a1, a2);
  sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0);
  unint64_t v9 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setChartPoints_, v9);

  *(void *)&v7[OBJC_IVAR___HKAudiogramAverageSensitivityDataSource_dataBlock] = v8;
  v12.receiver = v7;
  v12.super_class = v2;
  id v10 = objc_msgSendSuper2(&v12, sel_init);

  return v10;
}

id AudiogramAverageSensitivityDataSource.init(audiogramSample:isLeftEar:)(void *a1, char a2)
{
  id v5 = objc_allocWithZone((Class)HKGraphSeriesDataBlock);
  id v6 = v2;
  id v7 = objc_msgSend(v5, sel_init);
  sub_1E0E79084(a1, a2);
  sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0);
  id v8 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setChartPoints_, v8);

  *(void *)&v6[OBJC_IVAR___HKAudiogramAverageSensitivityDataSource_dataBlock] = v7;
  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for AudiogramAverageSensitivityDataSource();
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

void AudiogramAverageSensitivityDataSource.init()()
{
}

id AudiogramAverageSensitivityDataSource.__deallocating_deinit(uint64_t a1)
{
  return sub_1E0E7904C(a1, type metadata accessor for AudiogramAverageSensitivityDataSource);
}

id AudiogramAverageSensitivityChartData.__allocating_init(averageSensitivity:isLeftEar:)(char a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  *(double *)&v5[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity] = a2;
  v5[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar] = a1;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1E0E78DF0()
{
  return sub_1E0E7904C(0, type metadata accessor for AudiogramAverageSensitivityChartPoint);
}

double AudiogramAverageSensitivityChartData.averageSensitivity.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity);
}

uint64_t AudiogramAverageSensitivityChartData.isLeftEar.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar);
}

id AudiogramAverageSensitivityChartData.init(averageSensitivity:isLeftEar:)(char a1, double a2)
{
  *(double *)&v2[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity] = a2;
  v2[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar] = a1;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for AudiogramAverageSensitivityChartData();
  return objc_msgSendSuper2(&v4, sel_init);
}

id AudiogramAverageSensitivityChartData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudiogramAverageSensitivityChartData.init()()
{
}

id AudiogramAverageSensitivityChartData.__deallocating_deinit(uint64_t a1)
{
  return sub_1E0E7904C(a1, type metadata accessor for AudiogramAverageSensitivityChartData);
}

uint64_t sub_1E0E78F70()
{
  return 3;
}

id AudiogramAverageSensitivityChartFormatter.__deallocating_deinit(uint64_t a1)
{
  return sub_1E0E7904C(a1, type metadata accessor for AudiogramAverageSensitivityChartFormatter);
}

id sub_1E0E7904C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1E0E79084(void *a1, char a2)
{
  LOBYTE(v2) = a2;
  objc_super v4 = &selRef_averageLeftEarSensitivity;
  if ((a2 & 1) == 0) {
    objc_super v4 = &selRef_averageRightEarSensitivity;
  }
  id v5 = [a1 *v4];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    objc_super v7 = v5;
    id v40 = self;
    id v8 = objc_msgSend(v40, sel_decibelHearingLevelUnit);
    objc_msgSend(v7, sel_doubleValueForUnit_, v8);
    double v10 = v9;

    id v11 = objc_msgSend(a1, sel_sensitivityPoints);
    sub_1E0DF2C04(0, &qword_1EAD6E3E8);
    unint64_t v12 = sub_1E0ECD330();

    uint64_t v46 = v6;
    if (v12 >> 62) {
      goto LABEL_34;
    }
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v13)
    {
      uint64_t v38 = v7;
      objc_super v7 = 0;
      unint64_t v42 = v12;
      unint64_t v43 = v12 & 0xC000000000000001;
      unint64_t v41 = v12 + 32;
      BOOL v14 = (v2 & 1) == 0;
      char v39 = v2 & 1;
      unint64_t v12 = (unint64_t)&selRef_setSelectable_;
      while (v43)
      {
        id v15 = (id)MEMORY[0x1E4E3EF00](v7, v42);
        BOOL v16 = __OFADD__(v7, 1);
        objc_super v7 = (char *)v7 + 1;
        if (v16) {
          goto LABEL_33;
        }
LABEL_14:
        uint64_t v2 = (void *)v13;
        id v44 = v15;
        id v17 = objc_msgSend(v15, sel_tests, v38);
        sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F3A0);
        unint64_t v18 = sub_1E0ECD330();

        if (v18 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1E0ECD910();
          if (v19)
          {
LABEL_16:
            uint64_t v20 = 4;
            while (1)
            {
              if ((v18 & 0xC000000000000001) != 0) {
                id v21 = (id)MEMORY[0x1E4E3EF00](v20 - 4, v18);
              }
              else {
                id v21 = *(id *)(v18 + 8 * v20);
              }
              unint64_t v22 = v21;
              uint64_t v23 = v20 - 3;
              if (__OFADD__(v20 - 4, 1))
              {
                __break(1u);
                goto LABEL_33;
              }
              if (objc_msgSend(v21, sel_side) == (id)v14) {
                break;
              }

              ++v20;
              if (v23 == v19) {
                goto LABEL_7;
              }
            }
            swift_bridgeObjectRelease_n();
            id v24 = objc_msgSend(v22, sel_sensitivity);

            uint64_t v13 = (uint64_t)v2;
            if (v24)
            {
              id v25 = objc_msgSend(v44, sel_frequency);
              id v26 = objc_msgSend(v40, sel_hertzUnit);
              objc_msgSend(v25, sel_doubleValueForUnit_, v26);
              long double v28 = v27;

              long double v29 = (log(v28) + -4.82831374) / 0.693147181;
              uint64_t v30 = (objc_class *)type metadata accessor for AudiogramAverageSensitivityChartPoint();
              id v31 = objc_allocWithZone(v30);
              id v32 = objc_allocWithZone(NSNumber);
              id v33 = v31;
              id v34 = objc_msgSend(v32, sel_initWithDouble_, (double)v29);
              *(void *)&v33[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_xCoord] = v34;
              id v35 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, -v10);
              *(void *)&v33[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_yCoord] = v35;
              *(double *)&v33[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_averageSensitivity] = v10;
              v33[OBJC_IVAR____TtC8HealthUIP33_2A1C24F28D3D74C6BE1A5464632B356C37AudiogramAverageSensitivityChartPoint_isLeftEar] = v39;

              v45.receiver = v33;
              v45.super_class = v30;
              objc_msgSendSuper2(&v45, sel_init);

              MEMORY[0x1E4E3E9E0]();
              if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1E0ECD350();
              }
              sub_1E0ECD370();
              uint64_t v2 = &v46;
              sub_1E0ECD340();
            }
            else
            {
            }
            goto LABEL_8;
          }
        }
        else
        {
          uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v19) {
            goto LABEL_16;
          }
        }
LABEL_7:
        swift_bridgeObjectRelease_n();

        uint64_t v13 = (uint64_t)v2;
LABEL_8:
        if (v7 == (void *)v13)
        {
          swift_bridgeObjectRelease();
          unint64_t v36 = v46;
          objc_super v7 = v38;
          goto LABEL_36;
        }
      }
      id v15 = *(id *)(v41 + 8 * (void)v7);
      BOOL v16 = __OFADD__(v7, 1);
      objc_super v7 = (char *)v7 + 1;
      if (!v16) {
        goto LABEL_14;
      }
LABEL_33:
      __break(1u);
LABEL_34:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1E0ECD910();
    }
    swift_bridgeObjectRelease();
    unint64_t v36 = MEMORY[0x1E4FBC860];
LABEL_36:
    swift_bridgeObjectRelease();
    if (v36 >> 62)
    {
      sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0);
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1E0ECD900();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1E0ECD9F0();
      sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0);

      uint64_t v6 = v36;
    }
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t type metadata accessor for AudiogramAverageSensitivityDataSource()
{
  return self;
}

uint64_t type metadata accessor for AudiogramAverageSensitivityChartData()
{
  return self;
}

uint64_t sub_1E0E79634(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
    uint64_t v39 = MEMORY[0x1E4FBC860];
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1E0ECD910();
  if (!v8) {
    goto LABEL_30;
  }
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
LABEL_33:
    sub_1E0ECD350();
    goto LABEL_24;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    objc_super v4 = 0;
    uint64_t v3 = 0;
    for (uint64_t i = 0; i != v8; ++i)
    {
      MEMORY[0x1E4E3EF00](i, a1);
      type metadata accessor for AudiogramAverageSensitivityChartData();
      uint64_t v10 = swift_dynamicCastClass();
      if (v10)
      {
        id v11 = (void *)v10;
        if (*(unsigned char *)(v10 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar) == 1)
        {

          uint64_t v3 = v11;
        }
        else
        {

          objc_super v4 = v11;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    type metadata accessor for AudiogramAverageSensitivityChartData();
    objc_super v4 = 0;
    uint64_t v3 = 0;
    for (uint64_t j = 0; j != v8; ++j)
    {
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        BOOL v14 = (void *)v13;
        int v15 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_isLeftEar);
        swift_unknownObjectRetain();
        if (v15) {
          BOOL v16 = v3;
        }
        else {
          BOOL v16 = v4;
        }
        if (v15) {
          uint64_t v3 = v14;
        }
        else {
          objc_super v4 = v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = &selRef_counterWithTargetCount_queue_completion_;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  id v17 = &selRef_setBodyMarginsLayout_;
  unint64_t v18 = &selRef_activeEnergyResults;
  if (!v3) {
    goto LABEL_25;
  }
  uint64_t v19 = self;
  uint64_t v8 = v3;
  id v20 = objc_msgSend(v19, sel_decibelHearingLevelUnit);
  id v2 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v20, *(double *)(v8 + OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity));

  id v21 = objc_msgSend(v19, sel_decibelHearingLevelUnit);
  objc_msgSend(v2, sel_doubleValueForUnit_, v21);
  double v23 = v22;
  id v24 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 3);
  id v5 = &selRef_setBodyMarginsLayout_;
  objc_msgSend(v24, sel_setDataType_, 7);
  id v1 = &selRef_activeEnergyResults;
  id v25 = objc_msgSend(v38, sel_attributedStringWithValue_unit_showUnit_, v21, 1, v23);
  objc_msgSend(v24, sel_setAttributedString_, v25);

  id v26 = (void *)sub_1E0ECBD90();
  objc_msgSend(v24, sel_setValueAsNumber_, v26);

  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_33;
  }
LABEL_24:
  sub_1E0ECD370();
  sub_1E0ECD340();

  unint64_t v18 = v1;
  id v17 = v5;
LABEL_25:
  if (v4)
  {
    double v27 = self;
    long double v28 = v4;
    id v29 = [v27 v6[205]];
    id v30 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v29, *(double *)&v28[OBJC_IVAR____TtC8HealthUI36AudiogramAverageSensitivityChartData_averageSensitivity]);

    id v31 = [v27 v6[205]];
    objc_msgSend(v30, sel_doubleValueForUnit_, v31);
    double v33 = v32;
    id v34 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 3);
    objc_msgSend(v34, v17[203], 8);
    id v35 = objc_msgSend(v38, v18[337], v31, 1, v33);
    objc_msgSend(v34, sel_setAttributedString_, v35);

    unint64_t v36 = (void *)sub_1E0ECBD90();
    objc_msgSend(v34, sel_setValueAsNumber_, v36);

    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E0ECD350();
    }
    sub_1E0ECD370();
    sub_1E0ECD340();
  }
LABEL_31:

  return v39;
}

uint64_t type metadata accessor for AudiogramAverageSensitivityChartFormatter()
{
  return self;
}

uint64_t method lookup function for AudiogramAverageSensitivityDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramAverageSensitivityDataSource);
}

uint64_t dispatch thunk of AudiogramAverageSensitivityDataSource.__allocating_init(audiogramSample:isLeftEar:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for AudiogramAverageSensitivityChartPoint()
{
  return self;
}

uint64_t method lookup function for AudiogramAverageSensitivityChartData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramAverageSensitivityChartData);
}

uint64_t dispatch thunk of AudiogramAverageSensitivityChartData.__allocating_init(averageSensitivity:isLeftEar:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1E0E79BDC(void *a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 56) = a3;
  id v6 = a1;
  id v7 = a2;
  id v8 = objc_msgSend(v7, sel_wrappedFlowManager);
  sub_1E0ECD760();
  swift_unknownObjectRelease();
  type metadata accessor for ClinicalAuthorizationFlowManager();
  swift_dynamicCast();
  id v9 = *(id *)&v13[OBJC_IVAR___HKClinicalAuthorizationFlowManager_healthRecordsStore];

  uint64_t v10 = type metadata accessor for ClinicalAccountLogoLoader();
  id v11 = (void *)swift_allocObject();
  v11[4] = 0x8000000000000000;
  id v12 = v6;
  sub_1E0ECBD60();
  v11[2] = v9;
  v11[3] = v12;
  *(void *)(a4 + 40) = v10;
  *(void *)(a4 + 48) = &off_1F3B9B810;

  *(void *)(a4 + 16) = v11;
}

uint64_t destroy for ClinicalAccountRow(id *a1)
{
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 2));
}

uint64_t initializeWithCopy for ClinicalAccountRow(uint64_t a1, uint64_t a2)
{
  objc_super v4 = *(void **)a2;
  id v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a1 + 16;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  id v11 = v4;
  id v12 = v5;
  v10(v6, v7, v9);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for ClinicalAccountRow(uint64_t a1, uint64_t a2)
{
  objc_super v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClinicalAccountRow(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalAccountRow(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountRow()
{
  return &type metadata for ClinicalAccountRow;
}

uint64_t sub_1E0E79F84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E0E79FA0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for ClinicalAccountBrandLogoView();
  uint64_t v5 = MEMORY[0x1F4188790](v3, v4);
  uint64_t v30 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v7);
  id v9 = (uint64_t *)((char *)&v27 - v8);
  id v10 = *a1;
  sub_1E0E13A18((uint64_t)(a1 + 2), (uint64_t)&v27 - v8 + 8);
  *id v9 = v10;
  v31[0] = 0x4042000000000000;
  sub_1E0E11E6C();
  id v11 = v10;
  sub_1E0ECC2E0();
  uint64_t v28 = sub_1E0ECC630();
  sub_1E0E7A194(a1, (uint64_t)v31);
  uint64_t v12 = v31[0];
  uint64_t v13 = v31[1];
  char v14 = v32;
  uint64_t v16 = v33;
  uint64_t v15 = v34;
  uint64_t v17 = v35;
  uint64_t v18 = v36;
  uint64_t v19 = v37;
  uint64_t v20 = v30;
  sub_1E0E7A754((uint64_t)v9, v30);
  uint64_t v21 = v20;
  uint64_t v22 = v29;
  sub_1E0E7A754(v21, v29);
  sub_1E0E7A528();
  uint64_t v24 = v22 + *(int *)(v23 + 48);
  *(void *)uint64_t v24 = v28;
  *(void *)(v24 + 8) = 0;
  *(unsigned char *)(v24 + 16) = 1;
  *(void *)(v24 + 24) = v12;
  *(void *)(v24 + 32) = v13;
  *(unsigned char *)(v24 + 40) = v14;
  *(void *)(v24 + 48) = v16;
  *(void *)(v24 + 56) = v15;
  *(void *)(v24 + 64) = v17;
  *(void *)(v24 + 72) = v18;
  *(void *)(v24 + 80) = v19;
  uint64_t v25 = v22 + *(int *)(v23 + 64);
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  sub_1E0E11B20(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_1E0E7A7B8(v15, v17, v18, v19);
  sub_1E0E7A7FC((uint64_t)v9);
  sub_1E0DF8F74(v12, v13, v14);
  swift_bridgeObjectRelease();
  sub_1E0E7A858(v15, v17, v18, v19);
  return sub_1E0E7A7FC(v30);
}

void sub_1E0E7A194(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_title);
  sub_1E0ECD1D0();

  sub_1E0E0F184();
  uint64_t v5 = sub_1E0ECCAF0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1E0ECC9B0();
  uint64_t v10 = sub_1E0ECCA80();
  uint64_t v12 = v11;
  char v36 = v13;
  uint64_t v15 = v14;
  sub_1E0DF8F74(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v37 = v12;
  if (!objc_msgSend(v3, sel_needsRelogin))
  {
    uint64_t v28 = 0;
    uint64_t v30 = 0;
    uint64_t v34 = 0;
    uint64_t v32 = 0;
    goto LABEL_5;
  }
  uint64_t v35 = v15;
  uint64_t v16 = (void *)sub_1E0ECD190();
  id v17 = HKHealthRecordsAPILocalizedString(v16);

  if (v17)
  {
    sub_1E0ECD1D0();

    uint64_t v18 = sub_1E0ECCAF0();
    uint64_t v20 = v19;
    char v22 = v21 & 1;
    sub_1E0ECCA30();
    uint64_t v23 = sub_1E0ECCAB0();
    uint64_t v25 = v24;
    char v27 = v26;
    swift_release();
    sub_1E0DF8F74(v18, v20, v22);
    swift_bridgeObjectRelease();
    sub_1E0ECCC30();
    uint64_t v28 = sub_1E0ECCAA0();
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v34 = v33 & 1;
    sub_1E0DF8F74(v23, v25, v27 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = v35;
LABEL_5:
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v37;
    *(unsigned char *)(a2 + 16) = v36 & 1;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v28;
    *(void *)(a2 + 40) = v30;
    *(void *)(a2 + 48) = v34;
    *(void *)(a2 + 56) = v32;
    sub_1E0E11B20(v10, v37, v36 & 1);
    swift_bridgeObjectRetain();
    sub_1E0E7A7B8(v28, v30, v34, v32);
    sub_1E0E7A858(v28, v30, v34, v32);
    sub_1E0DF8F74(v10, v37, v36 & 1);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t sub_1E0E7A45C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1E0ECC600();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_1E0E7A4A4();
  return sub_1E0E79FA0(v1, a1 + *(int *)(v3 + 44));
}

void sub_1E0E7A4A4()
{
  if (!qword_1EAD6F3B0)
  {
    sub_1E0E7A640(255, &qword_1EAD6F3B8, (void (*)(uint64_t))sub_1E0E7A528);
    unint64_t v0 = sub_1E0ECC380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F3B0);
    }
  }
}

void sub_1E0E7A528()
{
  if (!qword_1EAD6F3C0)
  {
    type metadata accessor for ClinicalAccountBrandLogoView();
    sub_1E0E7A5A0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAD6F3C0);
    }
  }
}

void sub_1E0E7A5A0()
{
  if (!qword_1EAD6F3C8)
  {
    sub_1E0E7A640(255, &qword_1EAD6F3D0, (void (*)(uint64_t))sub_1E0E7A694);
    sub_1E0E7A998(&qword_1EAD6F3E8, &qword_1EAD6F3D0, (void (*)(uint64_t))sub_1E0E7A694);
    unint64_t v0 = sub_1E0ECCD90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F3C8);
    }
  }
}

void sub_1E0E7A640(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECCE40();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1E0E7A694()
{
  if (!qword_1EAD6F3D8)
  {
    sub_1E0E7A6FC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6F3D8);
    }
  }
}

void sub_1E0E7A6FC()
{
  if (!qword_1EAD6F3E0)
  {
    unint64_t v0 = sub_1E0ECD6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F3E0);
    }
  }
}

uint64_t sub_1E0E7A754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalAccountBrandLogoView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E7A7B8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1E0E11B20(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1E0E7A7FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalAccountBrandLogoView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E0E7A858(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1E0DF8F74(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1E0E7A8A0()
{
  unint64_t result = qword_1EAD6F3F0;
  if (!qword_1EAD6F3F0)
  {
    sub_1E0E7A8F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F3F0);
  }
  return result;
}

void sub_1E0E7A8F8()
{
  if (!qword_1EAD6F3F8)
  {
    sub_1E0E7A640(255, &qword_1EAD6F3B8, (void (*)(uint64_t))sub_1E0E7A528);
    sub_1E0E7A998(&qword_1EAD6F400, &qword_1EAD6F3B8, (void (*)(uint64_t))sub_1E0E7A528);
    unint64_t v0 = sub_1E0ECCD70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F3F8);
    }
  }
}

uint64_t sub_1E0E7A998(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0E7A640(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDisplayType:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1E0E7B358(a1);

  return v4;
}

uint64_t sub_1E0E7AA28(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1E0DEE988(0, v2, 0);
    uint64_t result = v13;
    id v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = (unint64_t)"dataTypeIdentifier";
    do
    {
      int v6 = *v4++;
      unint64_t v7 = 0xE600000000000000;
      unint64_t v8 = 0x6E6F69746361;
      switch(v6)
      {
        case 1:
          unint64_t v7 = 0xEA00000000006563;
          unint64_t v8 = 0x6E616E65766F7270;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x747865746E6F63;
          break;
        case 3:
          unint64_t v7 = 0xE900000000000065;
          unint64_t v8 = 0x706F6353656D6974;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000018;
          unint64_t v7 = v5 | 0x8000000000000000;
          break;
        case 5:
          unint64_t v7 = 0xEF79616C7265764FLL;
          unint64_t v8 = 0x64657463656C6573;
          break;
        case 6:
          unint64_t v7 = 0x80000001E0F2C000;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 7:
          unint64_t v8 = 0xD00000000000001CLL;
          unint64_t v7 = 0x80000001E0F2BFE0;
          break;
        default:
          break;
      }
      uint64_t v14 = result;
      unint64_t v10 = *(void *)(result + 16);
      unint64_t v9 = *(void *)(result + 24);
      if (v10 >= v9 >> 1)
      {
        uint64_t v12 = (const char *)v5;
        sub_1E0DEE988(v9 > 1, v10 + 1, 1);
        unint64_t v5 = (unint64_t)v12;
        uint64_t result = v14;
      }
      *(void *)(result + 16) = v10 + 1;
      uint64_t v11 = result + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v7;
      --v2;
    }
    while (v2);
  }
  return result;
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(for:timeScopeSelected:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1E0E7B450(a1, a2);

  return v6;
}

id HKInteractiveChartInteractionAnalyticsEvent.init(for:timeScopeSelected:)(void *a1, uint64_t a2)
{
  id v3 = sub_1E0E7B450(a1, a2);

  return v3;
}

id HKInteractiveChartInteractionAnalyticsEvent.init(showMoreDataForDisplayType:)(void *a1)
{
  id v2 = sub_1E0E7B358(a1);

  return v2;
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDataType:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1E0E7B610(a1);

  return v4;
}

id HKInteractiveChartInteractionAnalyticsEvent.init(showMoreDataForDataType:)(void *a1)
{
  id v2 = sub_1E0E7B610(a1);

  return v2;
}

unint64_t sub_1E0E7AE3C()
{
  return 0xD000000000000027;
}

unint64_t sub_1E0E7AE58()
{
  return sub_1E0E3F50C(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1E0E7AEF4()
{
  return sub_1E0E7B824();
}

id HKInteractiveChartInteractionAnalyticsEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HKInteractiveChartInteractionAnalyticsEvent.init()()
{
}

id HKInteractiveChartInteractionAnalyticsEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E7B0CC(void *a1)
{
  uint64_t v1 = sub_1E0E7AA28((uint64_t)&unk_1F3B98B18);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    id v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_17:
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(a1, sel_identifier);
    uint64_t v22 = sub_1E0ECD1D0();
    uint64_t v24 = v23;

    uint64_t v30 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v29 = v22;
    *((void *)&v29 + 1) = v24;
    sub_1E0DEDF98(&v29, v28);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1E0E5F378(v28, 0xD000000000000012, 0x80000001E0F2C000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  id v3 = (uint64_t *)(v1 + 40);
  id v4 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v7 = *(v3 - 1);
    uint64_t v6 = *v3;
    uint64_t v30 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v29 = 776023630;
    *((void *)&v29 + 1) = 0xE400000000000000;
    sub_1E0DEDF98(&v29, v28);
    swift_bridgeObjectRetain();
    char v8 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v10 = sub_1E0E5D80C(v7, v6);
    uint64_t v11 = v4[2];
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (v4[3] >= v13)
    {
      if (v8)
      {
        if (v9) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1E0E5FEEC();
        if (v14) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1E0E5DB48(v13, v8);
      unint64_t v15 = sub_1E0E5D80C(v7, v6);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_20;
      }
      unint64_t v10 = v15;
      if (v14)
      {
LABEL_3:
        id v5 = (_OWORD *)(v4[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
        sub_1E0DEDF98(v28, v5);
        goto LABEL_4;
      }
    }
    v4[(v10 >> 6) + 8] |= 1 << v10;
    id v17 = (uint64_t *)(v4[6] + 16 * v10);
    *id v17 = v7;
    v17[1] = v6;
    sub_1E0DEDF98(v28, (_OWORD *)(v4[7] + 32 * v10));
    uint64_t v18 = v4[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_19;
    }
    _OWORD v4[2] = v20;
    swift_bridgeObjectRetain();
LABEL_4:
    v3 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1E0ECDA30();
  __break(1u);
  return result;
}

id sub_1E0E7B358(void *a1)
{
  id v3 = v1;
  id v4 = objc_msgSend(a1, sel_objectType);
  uint64_t v5 = sub_1E0E7B0CC(v4);

  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  strcpy((char *)&v11, "showMoreData");
  BYTE13(v11) = 0;
  HIWORD(v11) = -5120;
  sub_1E0DEDF98(&v11, v10);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = v5;
  sub_1E0E5F378(v10, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(void *)&v3[OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload] = v5;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1E0E7B450(void *a1, uint64_t a2)
{
  uint64_t v5 = v2;
  id v6 = objc_msgSend(a1, sel_objectType);
  uint64_t v7 = sub_1E0E7B0CC(v6);

  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  uint64_t v22 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v21 = 0x695465676E616863;
  *((void *)&v21 + 1) = 0xEF65706F6353656DLL;
  sub_1E0DEDF98(&v21, v20);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = v7;
  sub_1E0E5F378(v20, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v10 = v7;
  uint64_t v23 = v7;
  swift_bridgeObjectRelease();
  id v11 = HKStringForHKTimeScope(a2, 0);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1E0ECD1D0();
    uint64_t v15 = v14;

    uint64_t v22 = v8;
    *(void *)&long long v21 = v13;
    *((void *)&v21 + 1) = v15;
    sub_1E0DEDF98(&v21, v20);
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = v10;
    sub_1E0E5F378(v20, 0x706F6353656D6974, 0xE900000000000065, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1E0EA9D30(0x706F6353656D6974, 0xE900000000000065, &v21);
    sub_1E0B32EE4((uint64_t)&v21);
    uint64_t v10 = v23;
  }
  *(void *)&v5[OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload] = v10;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_1E0E7B610(void *a1)
{
  id v3 = v1;
  uint64_t v4 = sub_1E0E7B0CC(a1);
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  strcpy((char *)&v10, "showMoreData");
  BYTE13(v10) = 0;
  HIWORD(v10) = -5120;
  sub_1E0DEDF98(&v10, v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = v4;
  sub_1E0E5F378(v9, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(void *)&v3[OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload] = v4;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1E0E7B6EC()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_getActivePairedDevice);

  if (v1)
  {
    if (objc_msgSend(v1, sel_valueForProperty_, *MEMORY[0x1E4F79E18]))
    {
      sub_1E0ECD760();
      swift_unknownObjectRelease();
    }
    else
    {

      long long v5 = 0u;
      long long v6 = 0u;
    }
    sub_1E0DF0A14((uint64_t)&v5, (uint64_t)v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1E0DF0A14((uint64_t)v7, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 776023630;
    }
  }
  else
  {
    uint64_t v2 = 776023630;
    sub_1E0B32EE4((uint64_t)&v5);
  }
  return v2;
}

uint64_t sub_1E0E7B824()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8HealthUI43HKInteractiveChartInteractionAnalyticsEvent_eventPayload);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1E0E7B6EC();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v7 = v2;
  *((void *)&v7 + 1) = v3;
  sub_1E0DEDF98(&v7, v6);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1E0E5F378(v6, 0xD00000000000001CLL, 0x80000001E0F2BFE0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for HKInteractiveChartInteractionAnalyticsEvent()
{
  return self;
}

uint64_t method lookup function for HKInteractiveChartInteractionAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKInteractiveChartInteractionAnalyticsEvent);
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(for:timeScopeSelected:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDisplayType:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.__allocating_init(showMoreDataForDataType:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.isEventSubmissionIHAGated.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.eventName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.makeUnrestrictedEventPayload(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HKInteractiveChartInteractionAnalyticsEvent.makeIHAGatedEventPayload(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

void *sub_1E0E7BA38(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  sub_1E0E251B4();
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v28 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)v27 - v11;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = sub_1E0ECD910())
  {
    uint64_t v30 = v12;
    v27[1] = v3;
    unint64_t v32 = a1 & 0xC000000000000001;
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v15 = 4;
    unint64_t v31 = a1;
    uint64_t v29 = v13;
    uint64_t v16 = (uint64_t)v12;
    while (1)
    {
      uint64_t v12 = (char *)(v15 - 4);
      id v17 = v32 ? (char *)MEMORY[0x1E4E3EF00](v15 - 4, a1) : (char *)*(id *)(a1 + 8 * v15);
      uint64_t v3 = v17;
      if (__OFADD__(v12, 1)) {
        break;
      }
      uint64_t v33 = v15 - 3;
      id v38 = v14;
      objc_super v18 = a2;
      uint64_t v19 = *a2;
      uint64_t v20 = &v17[OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection];
      __swift_project_boxed_opaque_existential_0(&v17[OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection], *(void *)&v17[OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection + 24]);
      swift_bridgeObjectRetain();
      sub_1E0ECBF40();
      char v21 = sub_1E0E22D44(v16, v19);
      swift_bridgeObjectRelease();
      sub_1E0E7781C(v16, (uint64_t (*)(void))sub_1E0E251B4);
      if (v21)
      {
        uint64_t v36 = 0;
        long long v34 = 0u;
        long long v35 = 0u;
      }
      else
      {
        __swift_project_boxed_opaque_existential_0(v20, *((void *)v20 + 3));
        uint64_t v22 = (uint64_t)v28;
        sub_1E0ECBF40();
        sub_1E0E2D664(v16, v22);
        sub_1E0E7781C(v16, (uint64_t (*)(void))sub_1E0E251B4);
        sub_1E0E13A18((uint64_t)v20, (uint64_t)&v34);
      }
      a2 = v18;
      uint64_t v14 = v38;

      a1 = v31;
      uint64_t v23 = v29;
      if (*((void *)&v35 + 1))
      {
        sub_1E0E50254(&v34, (uint64_t)v37);
        sub_1E0E50254(v37, (uint64_t)&v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_1E0E0C60C(0, v14[2] + 1, 1, v14);
        }
        unint64_t v25 = v14[2];
        unint64_t v24 = v14[3];
        if (v25 >= v24 >> 1) {
          uint64_t v14 = sub_1E0E0C60C((void *)(v24 > 1), v25 + 1, 1, v14);
        }
        v14[2] = v25 + 1;
        sub_1E0E50254(&v34, (uint64_t)&v14[5 * v25 + 4]);
      }
      else
      {
        sub_1E0E7F1E8((uint64_t)&v34, &qword_1EAD6F448, (uint64_t (*)(uint64_t))sub_1E0E0CDD0);
      }
      ++v15;
      if (v33 == v23)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t sub_1E0E7BD8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1E0DEEA48(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_0(v4, v4[3]);
      uint64_t v5 = sub_1E0ECBF70();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1E0DEEA48(0, *(void *)(v9 + 16) + 1, 1);
      }
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_1E0DEEA48(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v5;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id BalanceChartFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id sub_1E0E7BED8()
{
  uint64_t v1 = OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter];
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartBaselineRelativeStatFormatter), sel_init);
    id v5 = objc_msgSend(v0, sel_unitController);
    objc_msgSend(v4, sel_setUnitController_, v5);

    unint64_t v6 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

unint64_t sub_1E0E7BF8C()
{
  return sub_1E0E7BFC4(&OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___valueAttributes, (SEL *)&selRef_majorFont, (SEL *)&selRef_hk_chartLollipopValueColor);
}

unint64_t sub_1E0E7BFA8()
{
  return sub_1E0E7BFC4(&OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___unitAttributes, (SEL *)&selRef_minorFont, (SEL *)&selRef_hk_chartLollipopLabelColor);
}

unint64_t sub_1E0E7BFC4(uint64_t *a1, SEL *a2, SEL *a3)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *(void *)&v3[*a1];
  if (v5)
  {
    unint64_t v6 = v5;
  }
  else
  {
    unint64_t v6 = sub_1E0E7C028(v3, a2, a3);
    *(void *)&v3[v4] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v6;
}

unint64_t sub_1E0E7C028(void *a1, SEL *a2, SEL *a3)
{
  sub_1E0E7F528(0, (unint64_t *)&qword_1EAD69A20, (uint64_t (*)(uint64_t))sub_1E0E1AC68, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F06210;
  id v7 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  id v8 = v7;
  id v9 = [a1 *a2];
  if (!v9) {
    id v9 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  }
  uint64_t v10 = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
  *(void *)(inited + 40) = v9;
  uint64_t v11 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = [v12 *a3];
  *(void *)(inited + 104) = sub_1E0DF2C04(0, &qword_1EAD69A10);
  *(void *)(inited + 80) = v14;
  return sub_1E0E3FB40(inited);
}

unint64_t sub_1E0E7C198(unint64_t a1, uint64_t a2)
{
  sub_1E0E7F528(0, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context, MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8, v6);
  id v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = &v24[-v11];
  uint64_t v13 = sub_1E0E45D50(a1);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v13;
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1E0ECD910();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v21 = type metadata accessor for BalanceCoordinateInfo.Context(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1E0ECD910();
  if (!v15) {
    goto LABEL_16;
  }
LABEL_6:
  unint64_t result = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v14 & 0xC000000000000001) != 0)
  {
LABEL_23:
    uint64_t v23 = MEMORY[0x1E4E3EF00](result, v14);
    swift_bridgeObjectRelease();
    sub_1E0E28120(v23 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v12);
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v17 = *(id *)(v14 + 8 * result + 32);
    swift_bridgeObjectRelease();
    sub_1E0E28120((uint64_t)v17 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v12);

LABEL_11:
    uint64_t v18 = type metadata accessor for BalanceCoordinateInfo.Context(0);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 0, 1, v18);
LABEL_17:
    sub_1E0E7C4C8((uint64_t)v12, (uint64_t)v9, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    if (sub_1E0E7EBE4(a2, (uint64_t)v9))
    {
      unint64_t v20 = sub_1E0E7C5F8(v14, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v22 = v2;
      unint64_t v20 = sub_1E0E7EA48(v14, (uint64_t)v22);
      swift_bridgeObjectRelease();
    }
    sub_1E0E7F1E8((uint64_t)v12, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E7C4C8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1E0E7F528(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1E0E7C5F8(unint64_t a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v4 = sub_1E0ECBEF0();
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4, v5);
  long long v78 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v72 - v9;
  uint64_t v11 = sub_1E0ECBDF0();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  MEMORY[0x1F4188790](v11, v12);
  id v76 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E7F528(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908], MEMORY[0x1E4FBB718]);
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19);
  uint64_t v21 = (char *)&v72 - v20;
  uint64_t v22 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  uint64_t v24 = MEMORY[0x1F4188790](v22, v23);
  char v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24, v27);
  uint64_t v82 = (uint64_t)&v72 - v28;
  uint64_t v29 = sub_1E0E7F258(a1);
  if (!(a1 >> 62))
  {
    uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_3;
    }
LABEL_61:
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1E0ECD910();
  if (!v30) {
    goto LABEL_61;
  }
LABEL_3:
  unint64_t result = v30 - 1;
  if (__OFSUB__(v30, 1))
  {
    __break(1u);
  }
  else if ((a1 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v32 = *(id *)(a1 + 8 * result + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  id v32 = (id)MEMORY[0x1E4E3EF00](result, a1);
LABEL_8:
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  sub_1E0E28120((uint64_t)v33 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v26);

  uint64_t v34 = (uint64_t)v26;
  uint64_t v35 = v82;
  sub_1E0E7F424(v34, v82);
  if (!*(void *)(v29 + 16))
  {
    sub_1E0E7781C(v35, type metadata accessor for BalanceCoordinateInfo.Context);
LABEL_62:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v75 = v2;
  swift_getKeyPath();
  uint64_t v36 = *(void *)(v29 + 16);
  if (!v36)
  {
    swift_release();
    uint64_t v39 = *(void *)(v29 + 16);
    if (v39)
    {
LABEL_17:
      id v40 = (void *)(v29 + 32);
      swift_bridgeObjectRetain();
      while (1)
      {
        __swift_project_boxed_opaque_existential_0(v40, v40[3]);
        if (sub_1E0EAF8DC()) {
          break;
        }
        v40 += 5;
        if (!--v39)
        {
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_30;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    if (v77)
    {
LABEL_30:
      sub_1E0B33040(0, (unint64_t *)&qword_1EAD69930);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1E0F06EB0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v21, 1, 1, v81);
      id v44 = sub_1E0E7D618((uint64_t)v21);
      sub_1E0E7F1E8((uint64_t)v21, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
      *(void *)(v43 + 32) = v44;
      uint64_t v83 = v43;
      sub_1E0ECD340();
      uint64_t v45 = v83;
      sub_1E0E7781C(v35, type metadata accessor for BalanceCoordinateInfo.Context);
      return v45;
    }
    sub_1E0E7781C(v35, type metadata accessor for BalanceCoordinateInfo.Context);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v37 = (void *)(v29 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v29 + 32;
  while (1)
  {
    swift_getAtKeyPath();
    if (v83 != 1) {
      break;
    }
    v38 += 40;
    if (!--v36)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v35 = v82;
      uint64_t v39 = *(void *)(v29 + 16);
      if (v39) {
        goto LABEL_17;
      }
      goto LABEL_21;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v29 + 16);
  if (!v41)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    sub_1E0E7781C(v82, type metadata accessor for BalanceCoordinateInfo.Context);
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v42 = (void *)(v29 + 32);
  while (1)
  {
    __swift_project_boxed_opaque_existential_0(v42, v42[3]);
    if (sub_1E0EAF998()) {
      break;
    }
    v42 += 5;
    if (!--v41)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = v82;
  sub_1E0E7C4C8(v82, (uint64_t)v18, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  uint64_t v48 = v80;
  uint64_t v47 = v81;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v18, 1, v81) == 1)
  {
    sub_1E0E7F1E8((uint64_t)v18, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
LABEL_39:
    uint64_t v54 = sub_1E0E7BD8C(v29);
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      uint64_t v56 = 0;
      uint64_t v57 = (uint64_t *)(v54 + 32);
      while (1)
      {
        uint64_t v58 = *v57++;
        BOOL v59 = __OFADD__(v56, v58);
        v56 += v58;
        if (v59) {
          goto LABEL_69;
        }
        if (!--v55) {
          goto LABEL_45;
        }
      }
    }
    uint64_t v56 = 0;
LABEL_45:
    swift_bridgeObjectRelease();
    sub_1E0B33040(0, (unint64_t *)&qword_1EAD69930);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1E0F06EB0;
    *(void *)(v60 + 32) = sub_1E0E7DAC0(v56);
    uint64_t v83 = v60;
    sub_1E0ECD340();
    uint64_t v45 = v83;
    sub_1E0E7781C(v46, type metadata accessor for BalanceCoordinateInfo.Context);
    return v45;
  }
  uint64_t v49 = v76;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v76, v18, v47);
  if (!*(unsigned char *)(v46 + *(int *)(v22 + 20)))
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
    goto LABEL_39;
  }
  uint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v83 = MEMORY[0x1E4FBC860];
  uint64_t v51 = *(void *)(v29 + 16);
  if (v51)
  {
    swift_bridgeObjectRetain();
    do
    {
      __swift_project_boxed_opaque_existential_0(v37, v37[3]);
      uint64_t v52 = sub_1E0ECBF50();
      sub_1E0E4E214(v52);
      v37 += 5;
      --v51;
    }
    while (v51);
    unint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v53 = v83;
    uint64_t v50 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v53 = MEMORY[0x1E4FBC860];
  }
  uint64_t v83 = v50;
  uint64_t v61 = *(void *)(v53 + 16);
  uint64_t v62 = v82;
  if (!v61)
  {
LABEL_59:
    swift_bridgeObjectRelease();
    uint64_t v70 = *(void *)(v50 + 16);
    swift_release();
    sub_1E0B33040(0, (unint64_t *)&qword_1EAD69930);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1E0F06EB0;
    *(void *)(v71 + 32) = sub_1E0E7DAC0(v70);
    uint64_t v83 = v71;
    sub_1E0ECD340();
    uint64_t v45 = v83;
    sub_1E0E7781C(v62, type metadata accessor for BalanceCoordinateInfo.Context);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v76, v81);
    return v45;
  }
  unint64_t v63 = 0;
  uint64_t v77 = v79 + 16;
  id v72 = (uint64_t (**)(char *, uint64_t))(v79 + 8);
  uint64_t v73 = v61;
  id v74 = (void (**)(char *, char *, uint64_t))(v79 + 32);
  while (v63 < *(void *)(v53 + 16))
  {
    unint64_t v64 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    uint64_t v65 = *(void *)(v79 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v10, v53 + v64 + v65 * v63, v4);
    if (sub_1E0ECBE70())
    {
      unint64_t v66 = *v74;
      (*v74)(v78, v10, v4);
      uint64_t v67 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E0DEEB74(0, *(void *)(v67 + 16) + 1, 1);
        uint64_t v67 = v83;
      }
      unint64_t v69 = *(void *)(v67 + 16);
      unint64_t v68 = *(void *)(v67 + 24);
      if (v69 >= v68 >> 1)
      {
        sub_1E0DEEB74(v68 > 1, v69 + 1, 1);
        uint64_t v67 = v83;
      }
      *(void *)(v67 + 16) = v69 + 1;
      unint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v66)(v67 + v64 + v69 * v65, v78, v4);
      uint64_t v83 = v67;
      uint64_t v62 = v82;
      uint64_t v61 = v73;
    }
    else
    {
      unint64_t result = (*v72)(v10, v4);
    }
    if (v61 == ++v63)
    {
      uint64_t v50 = v83;
      goto LABEL_59;
    }
  }
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1E0E7CFF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v55 = a3;
  uint64_t v4 = sub_1E0ECBE10();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1E0E7F528(0, (unint64_t *)&unk_1EAD6F438, MEMORY[0x1E4F65968], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = sub_1E0ECBEF0();
  uint64_t v53 = *(void *)(v12 - 8);
  uint64_t v54 = v12;
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v52 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F65908];
  sub_1E0E7F528(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908], v7);
  uint64_t v18 = MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v47 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (char *)&v46 - v21;
  uint64_t v23 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  MEMORY[0x1F4188790](v23 - 8, v24);
  char v26 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1E0ECBDF0();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27, v29);
  unint64_t v31 = (char *)&v46 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *a1;
  sub_1E0E28120(v32 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_context, (uint64_t)v26);
  sub_1E0E7F58C((uint64_t)v26, (uint64_t)v22, (unint64_t *)&qword_1EAD6E590, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27) == 1)
  {
    uint64_t v33 = (unint64_t *)&qword_1EAD6E590;
    uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F65908];
    uint64_t v35 = (uint64_t)v22;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v22, v27);
    __swift_project_boxed_opaque_existential_0((void *)(v32 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection), *(void *)(v32 + OBJC_IVAR____TtC8HealthUI21BalanceCoordinateInfo_collection + 24));
    uint64_t v36 = sub_1E0ECBF50();
    if (*(void *)(v36 + 16))
    {
      uint64_t v38 = v53;
      uint64_t v37 = v54;
      (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v11, v36 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)), v54);
      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v39 = 1;
      uint64_t v38 = v53;
      uint64_t v37 = v54;
    }
    id v40 = v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v11, v39, 1, v37);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v11, 1, v37) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v40, v11, v37);
      if (sub_1E0ECBE60())
      {
        uint64_t v43 = (uint64_t)v47;
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v47, v31, v27);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v43, 0, 1, v27);
        id v42 = sub_1E0E7D618(v43);
        sub_1E0E7F1E8(v43, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
      }
      else
      {
        id v44 = v48;
        sub_1E0ECBEE0();
        uint64_t v45 = (void *)sub_1E0ECBE00();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v50);
        if (!v45)
        {
          (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v31, v27);
          goto LABEL_9;
        }
        id v42 = sub_1E0E7DEB4(v45, (uint64_t)v31);
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v31, v27);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
    uint64_t v33 = (unint64_t *)&unk_1EAD6F438;
    uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F65968];
    uint64_t v35 = (uint64_t)v11;
  }
  uint64_t result = sub_1E0E7F1E8(v35, v33, v34);
LABEL_9:
  id v42 = 0;
LABEL_15:
  *uint64_t v55 = v42;
  return result;
}

id sub_1E0E7D618(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F65908];
  sub_1E0E7F528(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)v25 - v5;
  uint64_t v7 = sub_1E0ECBDF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)v25 - v14;
  id v16 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
  sub_1E0E7C4C8(a1, (uint64_t)v6, (unint64_t *)&qword_1EAD6E590, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1E0E7F1E8((uint64_t)v6, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v15, v7);
    int v17 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v12, v7);
    if (v17 == *MEMORY[0x1E4F65900])
    {
      uint64_t v18 = 36;
    }
    else if (v17 == *MEMORY[0x1E4F658F0])
    {
      uint64_t v18 = 37;
    }
    else if (v17 == *MEMORY[0x1E4F658E8])
    {
      uint64_t v18 = 35;
    }
    else if (v17 == *MEMORY[0x1E4F658F8])
    {
      uint64_t v18 = 39;
    }
    else if (v17 == *MEMORY[0x1E4F658E0])
    {
      uint64_t v18 = 38;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      uint64_t v18 = 0;
    }
    objc_msgSend(v16, sel_setDataType_, v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
  }
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  sub_1E0E7BF8C();
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v21 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1E0E7F4E0((unint64_t *)&qword_1EAD699D0, type metadata accessor for Key);
  uint64_t v22 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  objc_msgSend(v16, sel_setAttributedString_, v23);
  return v16;
}

id sub_1E0E7DAC0(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECBA30();
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v4 = sub_1E0ECD180();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v6 = sub_1E0ECD160();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v8 = sub_1E0ECBEA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
  if (a1)
  {
    sub_1E0ECD150();
    sub_1E0ECD140();
    uint64_t v21 = a1;
    sub_1E0ECD120();
    sub_1E0ECD140();
    sub_1E0ECD170();
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EAD740B8;
    sub_1E0ECBA20();
    sub_1E0ECD1F0();
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4F65948], v8);
    sub_1E0E99228();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  sub_1E0E7BF8C();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v16 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1E0E7F4E0((unint64_t *)&qword_1EAD699D0, type metadata accessor for Key);
  int v17 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

  objc_msgSend(v13, sel_setAttributedString_, v18);
  return v13;
}

id sub_1E0E7DEB4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1E0ECBDF0();
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1F4188790](v9, v12);
  id v15 = &v78[-v14];
  MEMORY[0x1F4188790](v13, v16);
  id v18 = &v78[-v17];
  id v19 = objc_msgSend(v3, sel_unitController);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = v19;
  id v85 = a1;
  id v21 = objc_msgSend(v19, sel_healthStore);

  if (!v21) {
    return v21;
  }
  uint64_t v84 = v7;
  unint64_t v22 = self;
  id v86 = v21;
  id result = objc_msgSend(v22, sel_sharedInstanceForHealthStore_, v21);
  if (result)
  {
    uint64_t v24 = result;
    uint64_t v25 = (void *)sub_1E0ECBDC0();
    id v26 = objc_msgSend(v24, sel_displayTypeForObjectType_, v25);

    if (v26)
    {
      id v27 = objc_msgSend(v3, sel_unitController);
      id v21 = v27;
      if (v27)
      {
        id v28 = objc_msgSend(v27, sel_unitForChartingDisplayType_, v26);

        if (v28)
        {
          id v82 = v28;
          id v83 = v26;
          id v21 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, 0);
          uint64_t v29 = v84;
          uint64_t v81 = (void (*)(unsigned char *, uint64_t, uint64_t))v84[2];
          v81(v18, a2, v6);
          uint64_t v80 = (uint64_t (*)(unsigned char *, uint64_t))v29[11];
          int v30 = v80(v18, v6);
          unint64_t v31 = (int *)MEMORY[0x1E4F658F8];
          int v79 = *MEMORY[0x1E4F65900];
          if (v30 == v79)
          {
            uint64_t v32 = 36;
          }
          else if (v30 == *MEMORY[0x1E4F658F0])
          {
            uint64_t v32 = 37;
          }
          else if (v30 == *MEMORY[0x1E4F658E8])
          {
            uint64_t v32 = 35;
          }
          else if (v30 == *MEMORY[0x1E4F658F8])
          {
            uint64_t v32 = 39;
          }
          else if (v30 == *MEMORY[0x1E4F658E0])
          {
            uint64_t v32 = 38;
          }
          else
          {
            ((void (*)(unsigned char *, uint64_t))v84[1])(v18, v6);
            uint64_t v32 = 0;
          }
          objc_msgSend(v21, sel_setDataType_, v32);
          v81(v15, a2, v6);
          int v33 = v80(v15, v6);
          int v34 = *v31;
          if (v33 == *v31)
          {
            id v35 = sub_1E0E7BED8();
            objc_msgSend(v35, sel_setDisplayType_, v83);

            id v36 = v85;
            objc_msgSend(v85, sel__value);
            uint64_t v84 = (void *)sub_1E0ECBD90();
            id v37 = sub_1E0E7BED8();
            id v38 = v82;
            objc_msgSend(v36, sel_doubleValueForUnit_, v82);
            id v40 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v39);
            id v41 = objc_msgSend(v37, sel_valueStringFromNumber_, v40);

            sub_1E0ECD1D0();
            sub_1E0E7BF8C();
            id v42 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
            uint64_t v43 = (void *)sub_1E0ECD190();
            swift_bridgeObjectRelease();
            type metadata accessor for Key(0);
            sub_1E0E7F4E0((unint64_t *)&qword_1EAD699D0, type metadata accessor for Key);
            id v44 = (void *)sub_1E0ECCFC0();
            swift_bridgeObjectRelease();
            id v85 = objc_msgSend(v42, sel_initWithString_attributes_, v43, v44);

            id v45 = sub_1E0E7BED8();
            id v46 = objc_msgSend(v45, sel_unitStringFromUnit_number_, v38, v84);

            sub_1E0ECD1D0();
            sub_1E0E7BFA8();
            id v47 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
            uint64_t v48 = (void *)sub_1E0ECD190();
            swift_bridgeObjectRelease();
            uint64_t v49 = (void *)sub_1E0ECCFC0();
            swift_bridgeObjectRelease();
            id v50 = objc_msgSend(v47, sel_initWithString_attributes_, v48, v49);

            sub_1E0B33040(0, (unint64_t *)&qword_1EAD69A40);
            uint64_t v51 = swift_allocObject();
            *(_OWORD *)(v51 + 16) = xmmword_1E0F06210;
            uint64_t v52 = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD699C0);
            id v53 = v85;
            *(void *)(v51 + 32) = v85;
            *(void *)(v51 + 88) = v52;
            *(void *)(v51 + 56) = v52;
            *(void *)(v51 + 64) = v50;
            id v54 = v53;
            id v55 = v50;
            uint64_t v56 = (void *)sub_1E0ECD320();
            swift_bridgeObjectRelease();
            if (qword_1EAD69948 != -1) {
              swift_once();
            }
            id v57 = (id)qword_1EAD740B8;
            sub_1E0ECB680();

            uint64_t v58 = (void *)sub_1E0ECD190();
            swift_bridgeObjectRelease();
            id v59 = HKUIJoinAttributedStringsWithFormat(v56, v58);

            objc_msgSend(v21, sel_setAttributedString_, v59);
          }
          else
          {
            int v60 = *MEMORY[0x1E4F658E0];
            if (v33 != *MEMORY[0x1E4F658E0])
            {
              objc_msgSend(v3, sel_setDisplayType_, v83);
              objc_msgSend(v85, sel_doubleValueForUnit_, v82);
              double v70 = v69;
              v81(v11, a2, v6);
              int v71 = v80(v11, v6);
              BOOL v75 = v71 == v79 || v71 == *MEMORY[0x1E4F658F0] || v71 == *MEMORY[0x1E4F658E8] || v71 == v34;
              if (v71 != v60 && !v75) {
                ((void (*)(unsigned char *, uint64_t))v84[1])(v11, v6);
              }
              id v76 = v82;
              id v77 = objc_msgSend(v3, sel_attributedStringWithValue_unit_showUnit_, v82, v75, v70);
              objc_msgSend(v21, sel_setAttributedString_, v77);

              ((void (*)(unsigned char *, uint64_t))v84[1])(v15, v6);
              return v21;
            }
            id v61 = objc_msgSend(self, sel_secondUnit);
            objc_msgSend(v85, sel_doubleValueForUnit_, v61);
            double v63 = v62;

            id v64 = objc_msgSend(v3, sel_majorFont);
            if (!v64) {
              id v64 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
            }
            id v65 = objc_msgSend(v3, sel_minorFont);
            if (!v65) {
              id v65 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
            }
            id v66 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v63);
            id v67 = HKTimePeriodStringWithFonts(v64, v65, v66, 0x1CuLL);

            objc_msgSend(v21, sel_setAttributedString_, v67);
            id v68 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v63);
            objc_msgSend(v21, sel_setValueAsNumber_, v68);
          }
        }
        else
        {

          return 0;
        }
      }
      else
      {
      }
    }
    else
    {

      return 0;
    }
    return v21;
  }
  __break(1u);
  return result;
}

id BalanceChartFormatter.init()()
{
  *(void *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___relativeStatFormatter] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___valueAttributes] = 0;
  *(void *)&v0[OBJC_IVAR___HKBalanceChartFormatter____lazy_storage___unitAttributes] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceChartFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BalanceChartFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceChartFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E7EA48(unint64_t a1, uint64_t a2)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1E0ECD910())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E4E3EF00](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v12 = v6;
      sub_1E0E7CFF8((uint64_t *)&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v11)
      {
        MEMORY[0x1E4E3E9E0]();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E0ECD350();
        }
        sub_1E0ECD370();
        sub_1E0ECD340();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

BOOL sub_1E0E7EBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1E0E7F528(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v46 - v7;
  sub_1E0E7F528(0, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context, v4);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v11, v14);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v19 = MEMORY[0x1F4188790](v15, v18);
  uint64_t v48 = (uint64_t)&v46 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  uint64_t v49 = (uint64_t)&v46 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  id v27 = (char *)&v46 - v26;
  MEMORY[0x1F4188790](v25, v28);
  int v30 = (char *)&v46 - v29;
  sub_1E0E7C4C8(a2, (uint64_t)&v46 - v29, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
  uint64_t v31 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  uint64_t v32 = *(unsigned int (**)(void, void, void))(*(void *)(v31 - 8) + 48);
  if (v32(v30, 1, v31) == 1)
  {
    sub_1E0E7F1E8((uint64_t)v30, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    int v33 = 0;
  }
  else
  {
    uint64_t v34 = *(int *)(v31 + 20);
    uint64_t v47 = v31;
    id v35 = v32;
    id v36 = v13;
    id v37 = v8;
    int v38 = v30[v34];
    sub_1E0E7781C((uint64_t)v30, type metadata accessor for BalanceCoordinateInfo.Context);
    BOOL v39 = v38 == 0;
    uint64_t v8 = v37;
    uint64_t v13 = v36;
    uint64_t v32 = v35;
    uint64_t v31 = v47;
    int v33 = v39;
  }
  sub_1E0E7F58C(a2, (uint64_t)v27, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
  if (a1)
  {
    uint64_t v17 = v27;
LABEL_8:
    sub_1E0E7F1E8((uint64_t)v17, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    return 1;
  }
  uint64_t v41 = v49;
  sub_1E0E7F58C((uint64_t)v27, v49, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
  if (v33)
  {
    sub_1E0E7F1E8(v41, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    return 0;
  }
  uint64_t v42 = v48;
  sub_1E0E7C4C8(v41, v48, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
  if (v32(v42, 1, v31) == 1)
  {
    sub_1E0E7F1E8(v42, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    uint64_t v43 = sub_1E0ECBDF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v8, 1, 1, v43);
LABEL_16:
    sub_1E0E7F1E8((uint64_t)v8, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
    sub_1E0E7F58C(v41, (uint64_t)v17, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
    goto LABEL_8;
  }
  sub_1E0E7C4C8(v42, (uint64_t)v8, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  sub_1E0E7781C(v42, type metadata accessor for BalanceCoordinateInfo.Context);
  uint64_t v44 = sub_1E0ECBDF0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v8, 1, v44) == 1) {
    goto LABEL_16;
  }
  sub_1E0E7F1E8((uint64_t)v8, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908]);
  sub_1E0E7F58C(v41, (uint64_t)v17, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
  sub_1E0E7F58C((uint64_t)v17, (uint64_t)v13, &qword_1EAD6F410, type metadata accessor for BalanceCoordinateInfo.Context);
  if (v32(v13, 1, v31) == 1)
  {
    uint64_t v17 = v13;
    goto LABEL_8;
  }
  int v45 = v13[*(int *)(v31 + 20)];
  sub_1E0E7781C((uint64_t)v13, type metadata accessor for BalanceCoordinateInfo.Context);
  return v45 != 1;
}

uint64_t type metadata accessor for BalanceChartFormatter()
{
  return self;
}

uint64_t method lookup function for BalanceChartFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BalanceChartFormatter);
}

uint64_t sub_1E0E7F1E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1E0E7F528(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1E0E7F258(unint64_t a1)
{
  uint64_t v17 = MEMORY[0x1E4FBC870];
  uint64_t result = (uint64_t)sub_1E0E7BA38(a1, &v17);
  uint64_t v2 = result;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(result + 16);
  if (!v4)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 32;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  while (v5 < *(void *)(v2 + 16))
  {
    sub_1E0E13A18(v6, (uint64_t)&v14);
    __swift_project_boxed_opaque_existential_0(&v14, v15);
    char v8 = sub_1E0ECBF90();
    sub_1E0E13A18((uint64_t)&v14, (uint64_t)&v12);
    if (v8)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v12);
LABEL_9:
      sub_1E0E50254(&v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1E0DEEC00(0, *(void *)(v7 + 16) + 1, 1);
      }
      uint64_t v7 = v16;
      unint64_t v11 = *(void *)(v16 + 16);
      unint64_t v10 = *(void *)(v16 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1E0DEEC00(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      *(void *)(v7 + 16) = v11 + 1;
      uint64_t result = sub_1E0E50254(&v12, v7 + 40 * v11 + 32);
      goto LABEL_4;
    }
    __swift_project_boxed_opaque_existential_0(&v12, v13);
    char v9 = sub_1E0EAF998();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v12);
    if (v9) {
      goto LABEL_9;
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
LABEL_4:
    ++v5;
    v6 += 40;
    if (v4 == v5)
    {
      uint64_t v3 = v16;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1E0E7F424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BalanceCoordinateInfo.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E7F488(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_1E0E7F490@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  uint64_t result = sub_1E0ECBF90();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1E0E7F4E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E7F528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E7F58C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1E0E7F528(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0E7F60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E0E7F7C0(a1, a2, a3, (unint64_t *)&unk_1EAD6F460);
}

uint64_t sub_1E0E7F620(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (unint64_t *)&unk_1EAD6F460);
}

void sub_1E0E7F634()
{
}

void sub_1E0E7F65C()
{
}

uint64_t sub_1E0E7F678()
{
  return sub_1E0ECD100() & 1;
}

uint64_t sub_1E0E7F6D0()
{
  return sub_1E0ECD070();
}

uint64_t sub_1E0E7F714()
{
  sub_1E0E804C0(&qword_1EAD69950, MEMORY[0x1E4F27100]);
  return sub_1E0ECB730();
}

uint64_t sub_1E0E7F788()
{
  return sub_1E0ECB4C0();
}

uint64_t sub_1E0E7F7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E0E7F7C0(a1, a2, a3, &qword_1EAD6F458);
}

uint64_t sub_1E0E7F7C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  return sub_1E0ECD100() & 1;
}

uint64_t sub_1E0E7F820(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EAD6F458);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return sub_1E0ECD070();
}

void sub_1E0E7F880()
{
}

void sub_1E0E7F8A8()
{
}

uint64_t static HKMCPregnancyDatesFactory.gestationalAgeAttributedString(startDate:startDateTimeZone:asOfDate:unitFont:unitColor:digitFont:digitColor:)@<X0>(void *a1@<X4>, void *a2@<X5>, void *a3@<X6>, void *a4@<X7>, uint64_t a5@<X8>)
{
  id v68 = a3;
  id v69 = a4;
  int v79 = a1;
  uint64_t v80 = a2;
  uint64_t v82 = a5;
  uint64_t v5 = sub_1E0ECB470();
  uint64_t v77 = *(void *)(v5 - 8);
  uint64_t v78 = v5;
  MEMORY[0x1F4188790](v5, v6);
  BOOL v75 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E80288();
  uint64_t v76 = v8;
  uint64_t v74 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E8031C();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  MEMORY[0x1F4188790](v11, v12);
  id v65 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E0ECB6F0();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v16 = MEMORY[0x1F4188790](v14, v15);
  double v70 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v81 = (char *)&v58 - v19;
  uint64_t v64 = sub_1E0ECDAD0();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64, v20);
  double v62 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1E0ECDB70();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61, v22);
  uint64_t v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1E0ECDB80();
  uint64_t v59 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25, v26);
  uint64_t v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECD660();
  sub_1E0ECDB50();
  sub_1E0ECD650();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v24, v61);
  uint64_t v29 = v62;
  sub_1E0ECDAE0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v28, v25);
  sub_1E0E804C0(&qword_1EAD69A58, MEMORY[0x1E4F281A8]);
  uint64_t v30 = v64;
  sub_1E0ECDB90();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v30);
  uint64_t KeyPath = swift_getKeyPath();
  *(&v58 - 2) = MEMORY[0x1F4188790](KeyPath, v32);
  swift_getKeyPath();
  int v33 = v79;
  id v83 = v79;
  sub_1E0E271F8();
  id v34 = v33;
  sub_1E0ECB580();
  uint64_t v35 = swift_getKeyPath();
  *(&v58 - 2) = MEMORY[0x1F4188790](v35, v36);
  swift_getKeyPath();
  id v37 = v80;
  id v83 = v80;
  sub_1E0E2728C();
  id v38 = v37;
  sub_1E0ECB580();
  uint64_t v39 = swift_getKeyPath();
  *(&v58 - 2) = MEMORY[0x1F4188790](v39, v40);
  swift_getKeyPath();
  uint64_t v41 = v65;
  sub_1E0ECB6B0();
  swift_release();
  uint64_t v42 = v67;
  id v83 = v68;
  uint64_t v43 = v81;
  sub_1E0ECB6C0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v42);
  uint64_t v44 = swift_getKeyPath();
  *(&v58 - 2) = MEMORY[0x1F4188790](v44, v45);
  swift_getKeyPath();
  id v83 = v69;
  id v46 = v69;
  sub_1E0ECB690();
  uint64_t v47 = swift_getKeyPath();
  *(&v58 - 2) = MEMORY[0x1F4188790](v47, v48);
  swift_getKeyPath();
  sub_1E0E804C0(&qword_1EAD69950, MEMORY[0x1E4F27100]);
  uint64_t v49 = v73;
  sub_1E0ECB6B0();
  swift_release();
  uint64_t v51 = v77;
  uint64_t v50 = v78;
  uint64_t v52 = v75;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v75, *MEMORY[0x1E4F270E0], v78);
  id v53 = v70;
  uint64_t v54 = v76;
  sub_1E0ECB6C0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v54);
  sub_1E0ECB5A0();
  uint64_t v55 = v72;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v71 + 8);
  v56(v53, v72);
  return ((uint64_t (*)(char *, uint64_t))v56)(v43, v55);
}

void sub_1E0E80288()
{
  if (!qword_1EAD69968)
  {
    sub_1E0ECB480();
    sub_1E0E804C0(&qword_1EAD69950, MEMORY[0x1E4F27100]);
    unint64_t v0 = sub_1E0ECB6D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD69968);
    }
  }
}

void sub_1E0E8031C()
{
  if (!qword_1EAD69970)
  {
    sub_1E0E271F8();
    unint64_t v0 = sub_1E0ECB6D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD69970);
    }
  }
}

void sub_1E0E80378()
{
}

void sub_1E0E80398()
{
}

uint64_t sub_1E0E803C0()
{
  return 8;
}

uint64_t sub_1E0E803CC()
{
  return swift_release();
}

uint64_t sub_1E0E803D4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1E0E803E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E0E7F7C0(a1, a2, a3, (unint64_t *)&unk_1EAD6F460) & 1;
}

uint64_t sub_1E0E8040C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, (unint64_t *)&unk_1EAD6F460);
}

void *sub_1E0E80420(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1E0E8042C()
{
}

void sub_1E0E8044C()
{
}

uint64_t sub_1E0E80474()
{
  return 8;
}

uint64_t sub_1E0E80480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1E0E7F7C0(a1, a2, a3, &qword_1EAD6F458) & 1;
}

uint64_t sub_1E0E804AC(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EAD6F458);
}

uint64_t sub_1E0E804C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0E80508()
{
  return sub_1E0ECB4C0();
}

uint64_t sub_1E0E8052C()
{
  return sub_1E0E804C0(&qword_1EAD69950, MEMORY[0x1E4F27100]);
}

uint64_t sub_1E0E80574()
{
  sub_1E0E804C0(&qword_1EAD69950, MEMORY[0x1E4F27100]);
  return sub_1E0ECB730();
}

uint64_t sub_1E0E805E8()
{
  return 8;
}

uint64_t sub_1E0E805F8()
{
  return sub_1E0ECD070();
}

void sub_1E0E8063C()
{
  if (!qword_1EAD6F450)
  {
    sub_1E0ECB500();
    sub_1E0ECB480();
    unint64_t v0 = sub_1E0ECDA80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F450);
    }
  }
}

void sub_1E0E806A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1E0ECB540();
    unint64_t v3 = sub_1E0ECDA80();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

id static BalanceOverlayRoomViewController.createInteractiveChartViewController(forTypeIdentifier:chartFactory:applicationItems:display:preferredOverlay:restorationUserActivity:trendModel:factorDisplayTypes:additionalChartOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v17 = (char *)&v20 - v16;
  type metadata accessor for BalanceOverlayRoomViewController();
  sub_1E0E858B0(a5, (uint64_t)v17, (unint64_t *)&qword_1EAD6DB60, v13);
  swift_bridgeObjectRetain();
  id v18 = BalanceOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)((uint64_t)v17, a4, a9, 1);
  objc_msgSend(v18, sel_setRestorationUserActivity_, a7);
  objc_msgSend(v18, sel_setAdditionalChartOptions_, a10);
  return v18;
}

uint64_t type metadata accessor for BalanceOverlayRoomViewController()
{
  uint64_t result = qword_1EAD6F498;
  if (!qword_1EAD6F498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id BalanceOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) != 1)
  {
    uint64_t v12 = (void *)sub_1E0ECB920();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  if (a3)
  {
    sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6DAF0);
    uint64_t v13 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  id v14 = objc_msgSend(objc_allocWithZone(v5), sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v12, a2, v13, a4);

  return v14;
}

id BalanceOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:mode:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5 = sub_1E0E8429C(a1, a2, a3, a4);

  return v5;
}

id sub_1E0E80FF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a1;
  swift_getObjectType();
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_1E0ECC010();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBFD0();
  uint64_t v16 = sub_1E0ECBFF0();
  os_log_type_t v17 = sub_1E0ECD540();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = v10;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    id v37 = a3;
    uint64_t v21 = v20;
    uint64_t v40 = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v35 = v4;
    uint64_t v22 = sub_1E0ECDBC0();
    uint64_t v39 = sub_1E0DED7E4(v22, v23, &v40);
    uint64_t v34 = v11;
    uint64_t v4 = v35;
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    uint64_t v39 = v38;
    sub_1E0ECD6D0();
    _os_log_impl(&dword_1E0B26000, v16, v17, "[%{public}s] creating view controller for mode: %ld", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v24 = v21;
    a3 = v37;
    MEMORY[0x1E4E41080](v24, -1, -1);
    uint64_t v25 = v19;
    uint64_t v10 = v36;
    MEMORY[0x1E4E41080](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  sub_1E0E858B0(a2, (uint64_t)v10, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928]);
  id v26 = objc_msgSend(v4, sel_factorDisplayTypes);
  if (v26)
  {
    uint64_t v27 = v26;
    sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6DAF0);
    uint64_t v28 = sub_1E0ECD330();
  }
  else
  {
    uint64_t v28 = 0;
  }
  type metadata accessor for BalanceOverlayRoomViewController();
  id v29 = a3;
  uint64_t v30 = v38;
  id v31 = BalanceOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)((uint64_t)v10, v29, v28, v38);
  objc_msgSend(v31, sel_setAdditionalChartOptions_, objc_msgSend(v4, sel_filteredInteractiveChartOptionsForMode_, v30));

  return v31;
}

id sub_1E0E81548()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1E0E85930(0, &qword_1EAD6DE80, MEMORY[0x1E4F27CA0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v35 - v5;
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], v2);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = *(void **)&v1[OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType];
  id v12 = objc_msgSend(v11, sel_baseDisplayType);
  if (!v12)
  {
    unint64_t v14 = 0;
    goto LABEL_5;
  }
  uint64_t v13 = v12;
  unint64_t v14 = (unint64_t)objc_msgSend(v12, sel_hk_interactiveChartOptions);

  if ((v14 & 0x2000) == 0) {
LABEL_5:
  }
    v14 |= 0x2000uLL;
  unint64_t v15 = (unint64_t)objc_msgSend(v1, sel_additionalChartOptions);
  id v16 = objc_msgSend(v1, sel_applicationItems);
  id v38 = objc_msgSend(v16, sel_healthStore);

  id v37 = v11;
  id v17 = objc_msgSend(v1, sel_applicationItems);
  id v36 = objc_msgSend(v17, sel_unitController);

  id v18 = objc_msgSend(v1, sel_applicationItems);
  id v19 = objc_msgSend(v18, sel_dateCache);

  id v20 = objc_msgSend(v1, sel_applicationItems);
  id v21 = objc_msgSend(v20, sel_chartDataCacheController);

  id v22 = objc_msgSend(v1, sel_applicationItems);
  id v23 = objc_msgSend(v22, sel_timeScopeController);

  id v24 = objc_msgSend(v1, sel_applicationItems);
  id v25 = objc_msgSend(v24, sel_sampleDateRangeController);

  id v26 = objc_msgSend(v1, sel_displayDate);
  if (v26)
  {
    uint64_t v27 = v26;
    sub_1E0ECB940();

    uint64_t v28 = sub_1E0ECB980();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
  }
  else
  {
    uint64_t v29 = sub_1E0ECB980();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
  }
  if ((v15 & ~v14) != 0) {
    unint64_t v30 = v15;
  }
  else {
    unint64_t v30 = 0;
  }
  uint64_t v31 = v30 | v14;
  type metadata accessor for BalanceInteractiveChartViewController();
  uint64_t v32 = sub_1E0ECBB60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
  id v33 = sub_1E0E09464(v38, v37, v36, v19, v21, v23, v25, (uint64_t)v10, (uint64_t)v6, v31);
  objc_msgSend(v33, sel_setCurrentValueViewDataSourceDelegate_, v1);
  objc_msgSend(v33, sel_setCurrentOverlayLocationProvider_, v1);
  return v33;
}

uint64_t sub_1E0E8199C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(v3, sel_chartController);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_stringForValueRange_timeScope_, a1, a2);

  if (!v8) {
    return 0;
  }
  uint64_t v9 = sub_1E0ECD1D0();

  return v9;
}

id sub_1E0E81C00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  id v6 = objc_msgSend(objc_allocWithZone((Class)HKModalNavigationController), sel_init);
  if (a3 >> 62)
  {
    sub_1E0E425C4(0, &qword_1EAD6F4B8);
    swift_bridgeObjectRetain();
    sub_1E0ECD900();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1E0ECD9F0();
    sub_1E0E425C4(0, &qword_1EAD6F4B8);
  }
  id v7 = objc_allocWithZone((Class)HKInfographicViewController);
  sub_1E0E425C4(0, &qword_1EAD6F4B8);
  id v8 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithItems_, v8);

  id v10 = v9;
  uint64_t v11 = (void *)sub_1E0ECD190();
  objc_msgSend(v10, sel_setTitle_, v11);

  id v12 = objc_msgSend(v10, sel_navigationItem);
  uint64_t v13 = (void *)sub_1E0ECD190();
  id v14 = HKUILocalizedString(v13);

  if (v14)
  {
    uint64_t v15 = sub_1E0ECD1D0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  v24[3] = type metadata accessor for BalanceOverlayRoomViewController();
  v24[0] = v4;
  objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v18 = v4;
  id v19 = sub_1E0E830D4(v15, v17, 2, v24, (uint64_t)sel_dismiss_);
  objc_msgSend(v12, sel_setRightBarButtonItem_, v19, v24[0]);

  sub_1E0B32FF4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1E0F06EB0;
  *(void *)(v20 + 32) = v10;
  v24[0] = v20;
  sub_1E0ECD340();
  sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6F520);
  id v21 = v10;
  id v22 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setViewControllers_animated_, v22, 0);

  return v6;
}

uint64_t sub_1E0E81F14(void *a1)
{
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v3 = sub_1E0ECBDD0();
  id v4 = v1;
  id v5 = a1;
  unint64_t v6 = sub_1E0E83638(v3, (uint64_t)v4, v5);
  swift_bridgeObjectRelease();

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  sub_1E0B32FF4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1E0F06EB0;
  if (v6 >> 62)
  {
    sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DB70);
    swift_bridgeObjectRetain();
    sub_1E0ECD900();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1E0ECD9F0();
    sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DB70);
  }
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone((Class)HKOverlayContextSection);
  sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DB70);
  id v10 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithSectionTitle_overlayContextItems_, 0, v10, 0xE000000000000000);

  *(void *)(v8 + 32) = v11;
  sub_1E0ECD340();
  id v12 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
  uint64_t v13 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  sub_1E0DF2C04(0, &qword_1EAD6F4B0);
  id v14 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v12, sel_initWithContainerTitle_overlayContextSections_, v13, v14);

  id v16 = v15;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  uint64_t v55 = v16;
  sub_1E0ECD370();
  sub_1E0ECD340();
  sub_1E0E85930(0, (unint64_t *)&unk_1EAD6D9A8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBBE00]);
  uint64_t v17 = sub_1E0ECBEA0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1E0F08070;
  id v22 = *(void (**)(unint64_t, void, uint64_t))(v18 + 104);
  v22(v21 + v20, *MEMORY[0x1E4F65940], v17);
  v22(v21 + v20 + v19, *MEMORY[0x1E4F65948], v17);
  v22(v21 + v20 + 2 * v19, *MEMORY[0x1E4F65938], v17);
  id v23 = v4;
  id v24 = v5;
  unint64_t v25 = sub_1E0E8398C(v21, (uint64_t)v23, v24);

  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v26 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1E0F06EB0;
  swift_bridgeObjectRetain();
  if (v25 >> 62)
  {
    sub_1E0ECD900();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1E0ECD9F0();
  }
  swift_bridgeObjectRelease();
  id v28 = objc_allocWithZone((Class)HKOverlayContextSection);
  uint64_t v29 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithSectionTitle_overlayContextItems_, 0, v29, 0xE000000000000000);

  *(void *)(v27 + 32) = v30;
  sub_1E0ECD340();
  id v31 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
  uint64_t v32 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v33 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v31, sel_initWithContainerTitle_overlayContextSections_, v32, v33);

  id v35 = v34;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v36 = objc_msgSend(v23, sel_factorDisplayTypes);
  if (v36)
  {
    id v37 = v36;
    sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6DAF0);
    unint64_t v38 = sub_1E0ECD330();

    id v39 = objc_msgSend(v23, sel_chartController);
    if (!v39)
    {

      swift_bridgeObjectRelease();
      return v56;
    }
    uint64_t v40 = v39;
    if ((objc_msgSend(v23, sel_healthFactorsEnabled) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      return v56;
    }
    uint64_t v41 = (char *)v23;
    id v42 = v24;
    id v43 = v40;
    sub_1E0E8325C(v38, (uint64_t)v43, (uint64_t)v42, v41);
    swift_bridgeObjectRelease();

    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    id v44 = (id)qword_1EAD740B8;
    sub_1E0ECB680();

    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1E0F06EB0;
    id v46 = objc_allocWithZone((Class)HKOverlayContextSection);
    uint64_t v47 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(v46, sel_initWithSectionTitle_overlayContextItems_, 0, v47, 0xE000000000000000);

    *(void *)(v45 + 32) = v48;
    sub_1E0ECD340();
    id v49 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
    uint64_t v50 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    uint64_t v51 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    id v52 = objc_msgSend(v49, sel_initWithContainerTitle_overlayContextSections_, v50, v51);

    id v53 = v52;
    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E0ECD350();
    }
    sub_1E0ECD370();
    sub_1E0ECD340();
  }
  return v56;
}

uint64_t sub_1E0E828B8(void *a1)
{
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  unint64_t v6 = (char *)&v34 - v5;
  uint64_t v7 = sub_1E0ECBEA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  id v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *(void **)(v1 + OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType);
  if (*(unsigned char *)(v1 + OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined) == 1)
  {
    uint64_t v13 = v1 + OBJC_IVAR___HKBalanceOverlayRoomViewController_mostFrequentClassification;
    swift_beginAccess();
    sub_1E0E858B0(v13, (uint64_t)v6, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4F65948], v7);
      id v14 = v12;
      sub_1E0E85994((uint64_t)v6, (uint64_t)&qword_1EAD6E3F8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0E85930);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
      id v19 = v12;
    }
    id v20 = objc_allocWithZone((Class)type metadata accessor for BalanceClassificationOverlayContext());
    id v21 = a1;
    id v18 = sub_1E0E6B974(v12, v21, v11, 1);
  }
  else
  {
    id v15 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceMostFrequentClassificationOverlayContext());
    *(void *)&v15[OBJC_IVAR____TtC8HealthUI47BalanceMostFrequentClassificationOverlayContext_delegate + 8] = 0;
    *(void *)(swift_unknownObjectWeakInit() + 8) = &off_1F3B9ADB8;
    swift_unknownObjectWeakAssign();
    *(void *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
    *(void *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v12;
    *(void *)&v15[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v12;
    id v16 = (objc_class *)type metadata accessor for BalanceOverlayContext();
    v36.receiver = v15;
    v36.super_class = v16;
    id v17 = v12;
    id v18 = objc_msgSendSuper2(&v36, sel_init);
  }
  sub_1E0B32FF4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  long long v34 = xmmword_1E0F06EB0;
  *(_OWORD *)(v22 + 16) = xmmword_1E0F06EB0;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v34;
  *(void *)(v23 + 32) = v18;
  uint64_t v35 = v23;
  sub_1E0ECD340();
  id v24 = objc_allocWithZone((Class)HKOverlayContextSection);
  sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DB70);
  id v25 = v18;
  id v26 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v24, sel_initWithSectionTitle_overlayContextItems_, 0, v26);

  *(void *)(v22 + 32) = v27;
  uint64_t v35 = v22;
  sub_1E0ECD340();
  id v28 = objc_allocWithZone((Class)HKOverlayContextSectionContainer);
  sub_1E0DF2C04(0, &qword_1EAD6F4B0);
  uint64_t v29 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithContainerTitle_overlayContextSections_, 0, v29);

  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v34;
  *(void *)(v31 + 32) = v30;
  uint64_t v35 = v31;
  sub_1E0ECD340();
  uint64_t v32 = v35;

  return v32;
}

id sub_1E0E82D6C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1E0ECC010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBFD0();
  uint64_t v7 = sub_1E0ECBFF0();
  os_log_type_t v8 = sub_1E0ECD540();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    id v17 = v1;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = sub_1E0ECDBC0();
    uint64_t v18 = sub_1E0DED7E4(v12, v13, &v19);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v7, v8, "[%{public}s] dismissing", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v11, -1, -1);
    id v14 = v10;
    uint64_t v1 = v17;
    MEMORY[0x1E4E41080](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id BalanceOverlayRoomViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceOverlayRoomViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1E0E830D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  unint64_t v6 = v5;
  if (!a2)
  {
    uint64_t v10 = 0;
    uint64_t v11 = a4[3];
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  uint64_t v11 = a4[3];
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v12 = __swift_project_boxed_opaque_existential_0(a4, v11);
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v12, v12);
  id v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  uint64_t v16 = sub_1E0ECD9D0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a4);
LABEL_6:
  id v17 = objc_msgSend(v6, sel_initWithTitle_style_target_action_, v10, a3, v16, a5);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1E0E8325C(unint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5 = v4;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v38 = sub_1E0ECBA40();
  os_log_type_t v8 = *(char **)(v38 - 8);
  MEMORY[0x1F4188790](v38, v9);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1E0ECBB60();
  uint64_t v12 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37, v13);
  id v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v16) {
      break;
    }
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E0ECD890();
    if (v16 < 0)
    {
      __break(1u);
      return result;
    }
    v28[1] = v5;
    unint64_t v34 = a1 & 0xC000000000000001;
    uint64_t v18 = self;
    uint64_t v19 = v12;
    uint64_t v12 = 0;
    id v32 = *(id *)&a4[OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType];
    id v33 = v18;
    id v30 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v31 = (void (**)(char *, void, uint64_t))(v8 + 104);
    unsigned int v29 = *MEMORY[0x1E4F27B20];
    uint64_t v5 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v35 = v16;
    unint64_t v36 = a1;
    while (v16 != v12)
    {
      if (v34) {
        id v21 = (char *)MEMORY[0x1E4E3EF00](v12, a1);
      }
      else {
        id v21 = (char *)*(id *)(a1 + 8 * v12 + 32);
      }
      os_log_type_t v8 = v21;
      id v22 = objc_msgSend(v21, sel_sampleType);
      uint64_t v23 = v38;
      (*v31)(v11, v29, v38);
      sub_1E0ECBA50();
      (*v30)(v11, v23);
      id v24 = (void *)sub_1E0ECBB00();
      (*v5)(v15, v37);
      id v25 = objc_msgSend(v33, sel_generateDisplayTypeForTemplateDisplayType_sampleType_overlayChartController_applicationItems_currentTimeScope_currentCalendar_, v8, v22, v39, v40, 5, v24);

      id v26 = objc_msgSend(v25, sel_graphSeriesForTimeScope_, 6);
      if (v26)
      {
        self;
        id v27 = (void *)swift_dynamicCastObjCClass();
        if (v27) {
          objc_msgSend(v27, sel_setRoundDaySamples_, 1);
        }
      }
      ++v12;
      id v20 = objc_allocWithZone((Class)HKOverlayRoomFactorContext);
      a4 = (char *)v32;
      objc_msgSend(v20, sel_initWithPrimaryInteractiveChartDisplayType_interactiveChartFactorDisplayType_overlayChartController_currentCalendarOverride_applicationItems_overlayMode_, a4, v25, v39, 0, v40, 3);

      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      uint64_t v16 = v35;
      a1 = v36;
      if (v35 == v12) {
        return v41;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1E0E83638(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_1E0ECBDF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8, v13);
  id v15 = (char *)v25 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v16)
  {
    v25[1] = v3;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    uint64_t v31 = a3;
    sub_1E0ECD890();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    id v29 = *(id *)(a2 + OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType);
    id v30 = v18;
    uint64_t v20 = *(void *)(v8 + 72);
    id v27 = (void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v28 = v20;
    uint64_t v32 = v8 + 16;
    id v26 = (void (**)(char *, uint64_t))(v8 + 8);
    do
    {
      id v21 = v30;
      v30(v15, v19, v7);
      (*v27)(v15, 0, 1, v7);
      id v33 = v29;
      uint64_t v22 = sub_1E0DFCE0C(v31, (uint64_t)v15);
      sub_1E0E85994((uint64_t)v15, (uint64_t)&qword_1EAD6E590, MEMORY[0x1E4F65908], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0E85930);
      v21(v11, v19, v7);
      uint64_t v23 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceMetricOverlayContext());
      v21(&v23[OBJC_IVAR____TtC8HealthUI27BalanceMetricOverlayContext_selectedMetric], (uint64_t)v11, v7);
      *(void *)&v23[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
      *(void *)&v23[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v33;
      *(void *)&v23[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v22;
      id v24 = (objc_class *)type metadata accessor for BalanceOverlayContext();
      v34.receiver = v23;
      v34.super_class = v24;
      objc_msgSendSuper2(&v34, sel_init);
      (*v26)(v11, v7);
      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      v19 += v28;
      --v16;
    }
    while (v16);
    return v35;
  }
  return result;
}

uint64_t sub_1E0E8398C(uint64_t a1, uint64_t a2, void *a3)
{
  id v46 = a3;
  uint64_t v6 = sub_1E0ECBEA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  MEMORY[0x1F4188790](v9, v10);
  id v49 = (char *)v39 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v13)
  {
    v39[1] = v3;
    uint64_t v52 = MEMORY[0x1E4FBC860];
    id v44 = v11;
    sub_1E0ECD890();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v17 = (char *)(a1 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64)));
    id v42 = *(void **)(a2 + OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType);
    id v43 = v16;
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v45 = v15;
    uint64_t v40 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    uint64_t v41 = v18;
    uint64_t v19 = v49;
    do
    {
      uint64_t v47 = v13;
      id v48 = v17;
      uint64_t v20 = v43;
      v43(v19, v17, v6);
      id v21 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceClassificationOverlayContext());
      v20(&v21[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_selectedClassification], v49, v6);
      uint64_t v22 = v6;
      uint64_t v23 = v44;
      v20(v44, v49, v22);
      id v24 = (objc_class *)type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
      id v25 = (char *)objc_allocWithZone(v24);
      id v26 = v46;
      *(void *)&v25[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_applicationItems] = v46;
      id v27 = v42;
      *(void *)&v25[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_baseDisplayType] = v42;
      v20(&v25[OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_classification], v23, v22);
      v51.receiver = v25;
      v51.super_class = v24;
      id v28 = v27;
      id v29 = v26;
      id v30 = v28;
      uint64_t v31 = v21;
      id v32 = objc_msgSendSuper2(&v51, sel_init);
      id v33 = *v40;
      objc_super v34 = v23;
      uint64_t v6 = v22;
      (*v40)((uint64_t)v34, v22);
      *(void *)&v31[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_dataSourceDelegate] = v32;
      *(void *)&v31[OBJC_IVAR____TtC8HealthUI35BalanceClassificationOverlayContext_mode] = 3;
      id v35 = v32;
      id v36 = sub_1E0DFD320(v30, (uint64_t)v35);

      *(void *)&v31[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_currentContextItem] = 0;
      *(void *)&v31[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_baseDisplayType] = v30;
      *(void *)&v31[OBJC_IVAR____TtC8HealthUI21BalanceOverlayContext_overlayDisplayType] = v36;
      uint64_t v37 = v47;
      uint64_t v38 = (objc_class *)type metadata accessor for BalanceOverlayContext();
      v50.receiver = v31;
      v50.super_class = v38;
      uint64_t v19 = v49;
      objc_msgSendSuper2(&v50, sel_init);
      v33((uint64_t)v19, v6);

      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      sub_1E0ECD880();
      id v17 = &v48[v41];
      uint64_t v13 = v37 - 1;
    }
    while (v13);
    return v52;
  }
  return result;
}

id sub_1E0E83D08(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F65950];
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBB718]);
  v45[2] = v6;
  uint64_t v8 = MEMORY[0x1F4188790](v6, v7);
  uint64_t v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)v45 - v12;
  uint64_t v50 = sub_1E0ECC010();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v50, v14);
  id v49 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)v45 - v18;
  sub_1E0ECBFD0();
  uint64_t v47 = a1;
  sub_1E0E858B0(a1, (uint64_t)v13, (unint64_t *)&qword_1EAD6E3F8, v5);
  uint64_t v20 = sub_1E0ECBFF0();
  os_log_type_t v21 = sub_1E0ECD540();
  BOOL v22 = os_log_type_enabled(v20, v21);
  id v46 = v10;
  v45[1] = ObjectType;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v52[0] = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    v45[0] = v2;
    uint64_t v25 = sub_1E0ECDBC0();
    uint64_t v51 = sub_1E0DED7E4(v25, v26, v52);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v27 = MEMORY[0x1E4F65950];
    sub_1E0E858B0((uint64_t)v13, (uint64_t)v10, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950]);
    uint64_t v28 = sub_1E0ECD200();
    uint64_t v51 = sub_1E0DED7E4(v28, v29, v52);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    uint64_t v30 = v27;
    objc_super v2 = (unsigned char *)v45[0];
    sub_1E0E85994((uint64_t)v13, (uint64_t)&qword_1EAD6E3F8, v30, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0E85930);
    _os_log_impl(&dword_1E0B26000, v20, v21, "[%{public}s] most frequent classification updated: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v24, -1, -1);
    MEMORY[0x1E4E41080](v23, -1, -1);
  }
  else
  {
    sub_1E0E85994((uint64_t)v13, (uint64_t)&qword_1EAD6E3F8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0E85930);
  }

  uint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v48 + 8);
  id result = (id)v31(v19, v50);
  uint64_t v33 = OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined;
  objc_super v34 = v49;
  if ((v2[OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined] & 1) == 0)
  {
    sub_1E0ECBFD0();
    id v35 = sub_1E0ECBFF0();
    os_log_type_t v36 = sub_1E0ECD540();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v52[0] = v38;
      *(_DWORD *)uint64_t v37 = 136446210;
      uint64_t v39 = sub_1E0ECDBC0();
      uint64_t v51 = sub_1E0DED7E4(v39, v40, v52);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v35, v36, "[%{public}s] reloading overlay context items", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v38, -1, -1);
      MEMORY[0x1E4E41080](v37, -1, -1);

      uint64_t v41 = v49;
    }
    else
    {

      uint64_t v41 = v34;
    }
    v31(v41, v50);
    uint64_t v43 = (uint64_t)v46;
    uint64_t v42 = v47;
    v2[v33] = 1;
    sub_1E0E858B0(v42, v43, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950]);
    uint64_t v44 = (uint64_t)&v2[OBJC_IVAR___HKBalanceOverlayRoomViewController_mostFrequentClassification];
    swift_beginAccess();
    sub_1E0E859F4(v43, v44);
    swift_endAccess();
    return objc_msgSend(v2, sel_reloadOverlayContextItems);
  }
  return result;
}

id sub_1E0E8429C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = MEMORY[0x1E4F65908];
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6E590, MEMORY[0x1E4F65908], v9);
  MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v18 = (char *)&v31 - v17;
  v4[OBJC_IVAR___HKBalanceOverlayRoomViewController_isMostFrequentClassificationDetermined] = 0;
  uint64_t v19 = &v4[OBJC_IVAR___HKBalanceOverlayRoomViewController_mostFrequentClassification];
  uint64_t v20 = sub_1E0ECBEA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = sub_1E0ECBDF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
  BOOL v22 = v4;
  uint64_t v31 = a2;
  uint64_t v23 = sub_1E0DFCE0C(a2, (uint64_t)v18);
  sub_1E0E85994((uint64_t)v18, (uint64_t)&qword_1EAD6E590, v14, (uint64_t)v9, (uint64_t (*)(void))sub_1E0E85930);
  *(void *)&v22[OBJC_IVAR___HKBalanceOverlayRoomViewController_balanceDisplayType] = v23;

  sub_1E0E858B0(a1, (uint64_t)v13, (unint64_t *)&qword_1EAD6DB60, v8);
  uint64_t v24 = sub_1E0ECB980();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v24) != 1)
  {
    unint64_t v26 = (void *)sub_1E0ECB920();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
  }
  if (a3)
  {
    sub_1E0DF2C04(0, (unint64_t *)&unk_1EAD6DAF0);
    uint64_t v27 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v28 = (objc_class *)type metadata accessor for BalanceOverlayRoomViewController();
  v33.receiver = v22;
  v33.super_class = v28;
  id v29 = objc_msgSendSuper2(&v33, sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v26, v31, v27, v32);

  sub_1E0E85994(a1, (uint64_t)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0E85930);
  return v29;
}

uint64_t sub_1E0E8461C(uint64_t a1, void *a2)
{
  uint64_t v17 = a2;
  swift_getObjectType();
  uint64_t v3 = sub_1E0ECC010();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBFD0();
  uint64_t v8 = sub_1E0ECBFF0();
  os_log_type_t v9 = sub_1E0ECD540();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    v15[1] = v10 + 4;
    uint64_t v12 = sub_1E0ECDBC0();
    uint64_t v18 = sub_1E0DED7E4(v12, v13, &v19);
    uint64_t v16 = v3;
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    uint64_t v18 = a1;
    sub_1E0ECD6D0();
    _os_log_impl(&dword_1E0B26000, v8, v9, "[%{public}s] building containers for mode: %ld", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v11, -1, -1);
    MEMORY[0x1E4E41080](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  if (a1 == 1) {
    return sub_1E0E828B8(v17);
  }
  if (a1 == 3) {
    return sub_1E0E81F14(v17);
  }
  return MEMORY[0x1E4FBC860];
}

id sub_1E0E84880()
{
  swift_getObjectType();
  uint64_t v0 = sub_1E0ECC010();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBFD0();
  uint64_t v5 = sub_1E0ECBFF0();
  os_log_type_t v6 = sub_1E0ECD540();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    unint64_t v49 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v9 = sub_1E0ECDBC0();
    uint64_t v48 = sub_1E0DED7E4(v9, v10, (uint64_t *)&v49);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v5, v6, "[%{public}s] opening info from current value view", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v8, -1, -1);
    MEMORY[0x1E4E41080](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1E0B32FF4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1E0F093D0;
  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v12 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  unint64_t v13 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithString_, v13);

  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v15 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v17 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_initWithString_, v17);

  id v19 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v14, v18);
  uint64_t v20 = v47;
  *(void *)(v47 + 32) = v19;
  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v21 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v22 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v23 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v22, sel_initWithString_, v23);

  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v25 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v27 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v26, sel_initWithString_, v27);

  id v29 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v24, v28);
  *(void *)(v20 + 40) = v29;
  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v30 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v31 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v32 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v31, sel_initWithString_, v32);

  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v34 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  id v35 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  os_log_type_t v36 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v35, sel_initWithString_, v36);

  id v38 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v33, v37);
  *(void *)(v20 + 48) = v38;
  unint64_t v49 = v20;
  sub_1E0ECD340();
  unint64_t v39 = v49;
  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v40 = (id)qword_1EAD740B8;
  uint64_t v41 = sub_1E0ECB680();
  uint64_t v43 = v42;

  id v44 = sub_1E0E81C00(v41, v43, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1E0E85078(uint64_t a1)
{
  os_log_t ObjectType = (os_log_t)swift_getObjectType();
  uint64_t v2 = sub_1E0ECC010();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2, v4);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)v54 - v9;
  uint64_t v11 = sub_1E0ECBDF0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  id v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v14, v17);
  uint64_t v20 = (char *)v54 - v19;
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v61 = (char *)v54 - v22;
  uint64_t v23 = *(void *)(sub_1E0ECBDD0() + 16);
  swift_bridgeObjectRelease();
  if (v23 > a1)
  {
    uint64_t v24 = sub_1E0ECBDD0();
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(void *)(v24 + 16) > (unint64_t)a1)
    {
      uint64_t v56 = v12;
      uint64_t v57 = v3;
      id v25 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      unint64_t v26 = v24
          + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
          + *(void *)(v12 + 72) * a1;
      uint64_t v27 = v61;
      v25(v61, v26, v11);
      swift_bridgeObjectRelease();
      sub_1E0ECBFD0();
      v25(v20, (unint64_t)v27, v11);
      id v28 = sub_1E0ECBFF0();
      os_log_type_t v29 = sub_1E0ECD540();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v62[0] = v55;
        *(_DWORD *)uint64_t v30 = 136446466;
        v54[1] = v30 + 4;
        uint64_t v31 = sub_1E0ECDBC0();
        os_log_t ObjectType = v28;
        uint64_t v63 = sub_1E0DED7E4(v31, v32, v62);
        uint64_t v58 = v2;
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2082;
        v25(v16, (unint64_t)v20, v11);
        uint64_t v33 = sub_1E0ECD200();
        uint64_t v63 = sub_1E0DED7E4(v33, v34, v62);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        id v16 = *(char **)(v56 + 8);
        ((void (*)(char *, uint64_t))v16)(v20, v11);
        os_log_t v35 = ObjectType;
        _os_log_impl(&dword_1E0B26000, ObjectType, v29, "[%{public}s] opening info view for type: %{public}s", (uint8_t *)v30, 0x16u);
        uint64_t v36 = v55;
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v36, -1, -1);
        MEMORY[0x1E4E41080](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v58);
      }
      else
      {
        id v16 = *(char **)(v56 + 8);
        ((void (*)(char *, uint64_t))v16)(v20, v11);

        (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v2);
      }
      v62[0] = 0;
      v62[1] = 0xE000000000000000;
      sub_1E0ECD800();
      swift_bridgeObjectRelease();
      if (qword_1EAD69948 == -1) {
        goto LABEL_11;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_14:
    swift_once();
LABEL_11:
    id v45 = (id)qword_1EAD740B8;
    uint64_t v46 = sub_1E0ECB680();
    uint64_t v48 = v47;

    unint64_t v49 = v61;
    unint64_t v50 = sub_1E0E94C14();
    uint64_t v51 = v46;
    uint64_t v52 = v59;
    id v53 = sub_1E0E81C00(v51, v48, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v52, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v53, 0, 1, 0);

    return ((uint64_t (*)(char *, uint64_t))v16)(v49, v11);
  }
  uint64_t v37 = v3;
  sub_1E0ECBFD0();
  id v38 = sub_1E0ECBFF0();
  os_log_type_t v39 = sub_1E0ECD520();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v62[0] = v41;
    *(_DWORD *)uint64_t v40 = 136446466;
    uint64_t v58 = v2;
    uint64_t v42 = sub_1E0ECDBC0();
    uint64_t v63 = sub_1E0DED7E4(v42, v43, v62);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2048;
    uint64_t v63 = a1;
    sub_1E0ECD6D0();
    _os_log_impl(&dword_1E0B26000, v38, v39, "[%{public}s] tapped unsupported index: %ld", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v41, -1, -1);
    MEMORY[0x1E4E41080](v40, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v58);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v2);
  }
}

uint64_t sub_1E0E8571C()
{
  return type metadata accessor for BalanceOverlayRoomViewController();
}

void sub_1E0E85724()
{
  sub_1E0E85930(319, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for BalanceOverlayRoomViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BalanceOverlayRoomViewController);
}

uint64_t dispatch thunk of BalanceOverlayRoomViewController.string(for:timeScope:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BalanceOverlayRoomViewController.infographicSupported(for:healthStore:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BalanceOverlayRoomViewController.infographicViewController(for:healthStore:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t sub_1E0E858B0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1E0E85930(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1E0E85930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E85994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1E0E859F4(uint64_t a1, uint64_t a2)
{
  sub_1E0E85930(0, (unint64_t *)&qword_1EAD6E3F8, MEMORY[0x1E4F65950], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E85A88(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x656D614E776F6C66;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656D614E776F6C66;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6172676F69647561;
      unint64_t v3 = 0xEE00746E756F436DLL;
      break;
    case 2:
      uint64_t v6 = "aggregationStrategy";
      goto LABEL_7;
    case 3:
      uint64_t v6 = "queryDurationInSecs";
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v3 = 0x80000001E0F28110;
      break;
    case 5:
      uint64_t v6 = "totalDurationInSecs";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000013;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x6172676F69647561;
      unint64_t v7 = 0xEE00746E756F436DLL;
      break;
    case 2:
      unint64_t v8 = "aggregationStrategy";
      goto LABEL_14;
    case 3:
      unint64_t v8 = "queryDurationInSecs";
      goto LABEL_14;
    case 4:
      unint64_t v2 = 0xD000000000000019;
      unint64_t v7 = 0x80000001E0F28110;
      break;
    case 5:
      unint64_t v8 = "totalDurationInSecs";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000013;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1E0ECD9E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1E0E85C70(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1920298856;
      goto LABEL_7;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x796C696164;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1801807223;
      goto LABEL_7;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x796C68746E6F6DLL;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1918985593;
LABEL_7:
      unint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x796C00000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1920298856;
      goto LABEL_17;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      if (v5 != 0x796C696164) {
        goto LABEL_20;
      }
      goto LABEL_18;
    case 3:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1801807223;
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v2 = 0x796C68746E6F6DLL;
      goto LABEL_14;
    case 5:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1918985593;
LABEL_17:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x796C00000000)) {
        goto LABEL_18;
      }
      goto LABEL_20;
    default:
LABEL_14:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_18:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_1E0ECD9E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t AggregationStrategy.init(statisticsInterval:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1E0ECB430();
  if (v4)
  {
    sub_1E0ECB420();
    if (v8)
    {
      sub_1E0ECB3F0();
      if (v10)
      {
        sub_1E0ECB450();
        if (v12)
        {
          sub_1E0ECB440();
          char v15 = v14;
          uint64_t v16 = sub_1E0ECB460();
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
          if (v15) {
            char v7 = 0;
          }
          else {
            char v7 = 5;
          }
        }
        else
        {
          uint64_t v13 = sub_1E0ECB460();
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
          char v7 = 4;
        }
      }
      else
      {
        uint64_t v11 = sub_1E0ECB460();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
        char v7 = 3;
      }
    }
    else
    {
      uint64_t v9 = sub_1E0ECB460();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      char v7 = 2;
    }
  }
  else
  {
    uint64_t v5 = sub_1E0ECB460();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    char v7 = 1;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1E0E85FCC()
{
  return sub_1E0ECDA70();
}

uint64_t sub_1E0E860C0()
{
  return sub_1E0ECDA70();
}

uint64_t sub_1E0E861D4()
{
  sub_1E0ECD220();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0E862D4()
{
  return sub_1E0ECDA70();
}

uint64_t sub_1E0E863C4()
{
  return sub_1E0ECDA70();
}

uint64_t AggregationStrategy.rawValue.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x796C72756F68;
      break;
    case 2:
      uint64_t result = 0x796C696164;
      break;
    case 3:
      uint64_t result = 0x796C6B656577;
      break;
    case 4:
      uint64_t result = 0x796C68746E6F6DLL;
      break;
    case 5:
      uint64_t result = 0x796C72616579;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E0E86584(uint64_t a1)
{
  uint64_t v29 = sub_1E0ECBB60();
  uint64_t v2 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29, v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E0ECCF30();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  char v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v26 = a1;
  uint64_t v19 = (void *)sub_1E0ECBB00();
  uint64_t v20 = sub_1E0ECBA80();
  uint64_t v21 = (void *)sub_1E0ECB920();
  id v22 = objc_msgSend(v19, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v20, v21, 0);

  sub_1E0ECB940();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v26, v29);
  sub_1E0ECCEF0();
  uint64_t v23 = sub_1E0ECCF10();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  return v23;
}

uint64_t sub_1E0E86840(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v25 = sub_1E0ECBB60();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25, v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1E0ECCF30();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E0ECB980();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = (void *)sub_1E0ECBB00();
  uint64_t v18 = (void *)sub_1E0ECB920();
  id v19 = objc_msgSend(v17, sel_hk_startOfMonthForDate_, v18);

  sub_1E0ECB940();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v16, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v3, v22, v25);
  sub_1E0ECCEF0();
  uint64_t v20 = sub_1E0ECCF10();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  return v20;
}

void sub_1E0E86AF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v5 = sub_1E0ECBB60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v28 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E0ECCF30();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*v3)
  {
    case 1:
      sub_1E0E86E5C();
      break;
    case 2:
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v13, a1, v10);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v29, v5);
      sub_1E0ECCEF0();
      uint64_t v21 = sub_1E0ECCF10();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      uint64_t v22 = self;
      uint64_t v23 = (void *)sub_1E0ECBB00();
      id v24 = objc_msgSend(v22, sel_hk_noonWithDayIndex_calendar_, v21, v23);

      sub_1E0ECB940();
      break;
    case 3:
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4F27BC0];
      uint64_t v26 = sub_1E0E86584;
      goto LABEL_9;
    case 4:
      uint64_t v25 = (unsigned int *)MEMORY[0x1E4F27C30];
      uint64_t v26 = sub_1E0E86840;
LABEL_9:
      sub_1E0E86FF0(v29, v26, v25, v30);
      break;
    case 5:
      sub_1E0E87308(v29, v30);
      break;
    default:
      id v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
      uint64_t v20 = v30;
      v19(v20, a1, v10);
      break;
  }
}

uint64_t sub_1E0E86E5C()
{
  uint64_t v0 = sub_1E0ECB980();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v0, v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = (void *)sub_1E0ECB920();
  id v10 = HKStartOfHourForDate(v9);

  sub_1E0ECB940();
  sub_1E0ECB850();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v8, v0);
  uint64_t v12 = (void *)sub_1E0ECB920();
  id v13 = HKEndOfHourForDate(v12);

  sub_1E0ECB940();
  sub_1E0ECB850();
  v11(v5, v0);
  return sub_1E0ECB840();
}

uint64_t sub_1E0E86FF0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v32 = a3;
  v30[1] = a4;
  uint64_t v31 = sub_1E0ECBB40();
  uint64_t v6 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31, v7);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0DF2AF8();
  MEMORY[0x1F4188790](v10 - 8, v11);
  id v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E0ECB980();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14, v16);
  v30[0] = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v21 = (char *)v30 - v20;
  uint64_t v22 = a2(a1);
  uint64_t v23 = self;
  id v24 = (void *)sub_1E0ECBB00();
  id v25 = objc_msgSend(v23, sel_hk_dateOnDayIndex_atHour_calendar_, v22, 0, v24);

  sub_1E0ECB940();
  uint64_t v26 = v31;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *v32, v31);
  sub_1E0ECBB30();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v26);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v28 = v30[0];
    (*(void (**)(void, char *, uint64_t))(v15 + 32))(v30[0], v13, v14);
    sub_1E0ECB850();
    sub_1E0ECB850();
    sub_1E0ECB840();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v29(v28, v14);
    return ((uint64_t (*)(char *, uint64_t))v29)(v21, v14);
  }
  return result;
}

uint64_t sub_1E0E87308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v25[1] = a2;
  void v25[2] = a1;
  uint64_t v26 = sub_1E0ECBB40();
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26, v3);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0DF2AF8();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)v25 - v17;
  uint64_t v19 = (void *)sub_1E0ECBB00();
  uint64_t v20 = (void *)sub_1E0ECB920();
  id v21 = objc_msgSend(v19, sel_hk_startOfYearForDate_addingYears_, v20, 0);

  sub_1E0ECB940();
  uint64_t v22 = v26;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4F27C20], v26);
  sub_1E0ECBB30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v22);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v9, v10);
    sub_1E0ECB850();
    sub_1E0ECB850();
    sub_1E0ECB840();
    id v24 = *(void (**)(char *, uint64_t))(v11 + 8);
    v24(v15, v10);
    return ((uint64_t (*)(char *, uint64_t))v24)(v18, v10);
  }
  return result;
}

HealthUI::AggregationStrategy_optional __swiftcall AggregationStrategy.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1E0ECD980();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static AggregationStrategy.allCases.getter()
{
  return &unk_1F3B98D08;
}

uint64_t sub_1E0E8766C(unsigned __int8 *a1, char *a2)
{
  return sub_1E0E85C70(*a1, *a2);
}

unint64_t sub_1E0E8767C()
{
  unint64_t result = qword_1EAD6F540;
  if (!qword_1EAD6F540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F540);
  }
  return result;
}

uint64_t sub_1E0E876D0()
{
  return sub_1E0E85FCC();
}

uint64_t sub_1E0E876D8()
{
  sub_1E0ECD220();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0E877B4()
{
  return sub_1E0E862D4();
}

HealthUI::AggregationStrategy_optional sub_1E0E877BC(Swift::String *a1)
{
  return AggregationStrategy.init(rawValue:)(*a1);
}

void sub_1E0E877C8(void *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x796C72756F68;
      goto LABEL_3;
    case 2:
      *a1 = 0x796C696164;
      a1[1] = 0xE500000000000000;
      return;
    case 3:
      uint64_t v4 = 1801807223;
      goto LABEL_8;
    case 4:
      *a1 = 0x796C68746E6F6DLL;
      a1[1] = 0xE700000000000000;
      return;
    case 5:
      uint64_t v4 = 1918985593;
LABEL_8:
      *a1 = v4 & 0xFFFF0000FFFFFFFFLL | 0x796C00000000;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1E0E87888()
{
  unint64_t result = qword_1EAD6F548;
  if (!qword_1EAD6F548)
  {
    sub_1E0E878E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F548);
  }
  return result;
}

void sub_1E0E878E0()
{
  if (!qword_1EAD6F550)
  {
    unint64_t v0 = sub_1E0ECD380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F550);
    }
  }
}

void sub_1E0E87938(void *a1@<X8>)
{
  *a1 = &unk_1F3B98D08;
}

unsigned char *storeEnumTagSinglePayload for AggregationStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E0E87A14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregationStrategy()
{
  return &type metadata for AggregationStrategy;
}

uint64_t sub_1E0E87A4C@<X0>(uint64_t a1@<X8>)
{
  sub_1E0E891BC();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(v1 + 80);
  v21[4] = *(_OWORD *)(v1 + 64);
  v21[5] = v9;
  uint64_t v22 = *(void *)(v1 + 96);
  long long v10 = *(_OWORD *)(v1 + 16);
  v21[0] = *(_OWORD *)v1;
  v21[1] = v10;
  long long v11 = *(_OWORD *)(v1 + 48);
  v21[2] = *(_OWORD *)(v1 + 32);
  v21[3] = v11;
  if (*((void *)&v21[0] + 1))
  {
    long long v18 = v21[0];
    sub_1E0E0F184();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1E0ECCAF0();
    uint64_t v16 = v15 & 1;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v16 = 0;
    uint64_t v14 = 0;
  }
  *(void *)&long long v18 = v12;
  *((void *)&v18 + 1) = v13;
  uint64_t v19 = v16;
  uint64_t v20 = v14;
  MEMORY[0x1F4188790](v12, v13);
  *((void *)&v18 - 2) = v21;
  sub_1E0E896C0(0, (unint64_t *)&qword_1EAD6F3E0);
  sub_1E0E893A8(0, &qword_1EAD6F560, (uint64_t (*)(uint64_t))sub_1E0E8926C, MEMORY[0x1E4F3F108]);
  sub_1E0E8954C();
  sub_1E0E895C4();
  sub_1E0ECCDE0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v8, v4);
}

uint64_t sub_1E0E87C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  sub_1E0E89474();
  uint64_t v114 = v3;
  uint64_t v113 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  double v112 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E8940C();
  uint64_t v120 = v6;
  uint64_t v119 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6, v7);
  uint64_t v111 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v110 = (uint64_t)&v105 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1E0E893A8(0, &qword_1EAD6F580, (uint64_t (*)(uint64_t))sub_1E0E8940C, MEMORY[0x1E4FBB718]);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v126 = (uint64_t)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  id v127 = (char *)&v105 - v18;
  sub_1E0E893A8(0, &qword_1EAD6F578, (uint64_t (*)(uint64_t))sub_1E0E89348, v12);
  uint64_t v21 = MEMORY[0x1F4188790](v19 - 8, v20);
  uint64_t v125 = (uint64_t)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21, v23);
  uint64_t v118 = (uint64_t)&v105 - v24;
  sub_1E0E89348();
  uint64_t v117 = v25;
  uint64_t v116 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25, v26);
  uint64_t v130 = (uint64_t)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v27, v29);
  uint64_t v124 = (uint64_t)&v105 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30, v32);
  long long v107 = (char *)&v105 - v34;
  uint64_t v36 = MEMORY[0x1F4188790](v33, v35);
  uint64_t v106 = (uint64_t)&v105 - v37;
  uint64_t v39 = MEMORY[0x1F4188790](v36, v38);
  uint64_t v123 = (char *)&v105 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39, v41);
  uint64_t v132 = (uint64_t)&v105 - v43;
  uint64_t v45 = MEMORY[0x1F4188790](v42, v44);
  uint64_t v47 = (char *)&v105 - v46;
  MEMORY[0x1F4188790](v45, v48);
  uint64_t v131 = (uint64_t)&v105 - v49;
  unint64_t v50 = *(void *)(a1 + 32);
  uint64_t v122 = *(void *)(a1 + 40);
  unint64_t v51 = *(void *)(a1 + 48);
  uint64_t v105 = *(void *)(a1 + 56);
  unint64_t v115 = *(void *)(a1 + 64);
  uint64_t v109 = *(void *)(a1 + 72);
  unint64_t v108 = *(void *)(a1 + 80);
  long long v143 = *(_OWORD *)a1;
  uint64_t v52 = *(void *)(a1 + 24);
  uint64_t v144 = *(void **)(a1 + 16);
  id v53 = v144;
  swift_bridgeObjectRetain();
  id v54 = objc_msgSend(v53, sel_featureVersion);
  uint64_t v55 = sub_1E0ECD1D0();
  uint64_t v57 = v56;

  uint64_t v135 = v52;
  unint64_t v136 = v50;
  uint64_t v137 = v55;
  uint64_t v138 = v57;
  uint64_t v150 = 0;
  unint64_t v151 = 0xE000000000000000;
  sub_1E0ECD800();
  uint64_t v148 = v150;
  unint64_t v149 = v151;
  sub_1E0E8964C((uint64_t)&v143, (uint64_t)v145);
  uint64_t v58 = *(void *)(a1 + 88);
  unint64_t v59 = *(void *)(a1 + 96);
  sub_1E0E8964C((uint64_t)v145, (uint64_t)&v150);
  uint64_t v129 = v58;
  if (v151)
  {
    uint64_t v146 = v58;
    unint64_t v147 = v59;
    sub_1E0E899CC(a1);
    swift_bridgeObjectRetain();
    sub_1E0ECD250();
    sub_1E0ECD250();
    sub_1E0E89A54(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  unint64_t v128 = sub_1E0E89708();
  sub_1E0ECCBA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E0E8975C((uint64_t)v47, v131, (uint64_t (*)(void))sub_1E0E89348);
  swift_bridgeObjectRetain();
  id v60 = objc_msgSend(v53, sel_updateVersion);
  uint64_t v61 = sub_1E0ECD1D0();
  uint64_t v63 = v62;

  uint64_t v135 = v122;
  unint64_t v136 = v51;
  uint64_t v137 = v61;
  uint64_t v138 = v63;
  uint64_t v148 = 0;
  unint64_t v149 = 0xE000000000000000;
  sub_1E0ECD800();
  uint64_t v146 = v148;
  unint64_t v147 = v149;
  sub_1E0E8964C((uint64_t)v145, (uint64_t)&v148);
  if (v149)
  {
    uint64_t v141 = v129;
    unint64_t v142 = v59;
    sub_1E0E899CC(a1);
    swift_bridgeObjectRetain();
    sub_1E0ECD250();
    sub_1E0ECD250();
    sub_1E0E89A54(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v64 = (uint64_t)v127;
  unint64_t v65 = v115;
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  uint64_t v66 = (uint64_t)v123;
  sub_1E0ECCBA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E0E8975C(v66, v132, (uint64_t (*)(void))sub_1E0E89348);
  id v67 = objc_msgSend(v53, sel_yearOfRelease);
  if (v67)
  {
    id v68 = v67;
    uint64_t v69 = sub_1E0ECD1D0();
    uint64_t v71 = v70;

    uint64_t v135 = v105;
    unint64_t v136 = v65;
    uint64_t v137 = v69;
    uint64_t v138 = v71;
    uint64_t v146 = 0;
    unint64_t v147 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1E0ECD800();
    uint64_t v141 = v146;
    unint64_t v142 = v147;
    sub_1E0E8964C((uint64_t)v145, (uint64_t)&v146);
    if (v147)
    {
      uint64_t v72 = v129;
      uint64_t v133 = v129;
      unint64_t v134 = v59;
      sub_1E0E899CC(a1);
      swift_bridgeObjectRetain();
      sub_1E0ECD250();
      sub_1E0ECD250();
      sub_1E0E89A54(a1);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = v129;
    }
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    sub_1E0ECD250();
    uint64_t v77 = (uint64_t)v107;
    sub_1E0ECCBA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v78 = v106;
    sub_1E0E8975C(v77, v106, (uint64_t (*)(void))sub_1E0E89348);
    uint64_t v74 = v118;
    sub_1E0E8975C(v78, v118, (uint64_t (*)(void))sub_1E0E89348);
    uint64_t v73 = 0;
    uint64_t v75 = v117;
    uint64_t v76 = v116;
  }
  else
  {
    uint64_t v73 = 1;
    uint64_t v74 = v118;
    uint64_t v75 = v117;
    uint64_t v76 = v116;
    uint64_t v72 = v129;
  }
  uint64_t v79 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v74, v73, 1, v75);
  id v80 = objc_msgSend(v53, sel_UDIDeviceIdentifier);
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = sub_1E0ECD1D0();
    uint64_t v84 = v83;

    uint64_t v85 = v109;
    unint64_t v86 = v108;
    uint64_t v141 = v109;
    unint64_t v142 = v108;
    uint64_t v135 = v72;
    unint64_t v136 = v59;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1E0ECD250();
    uint64_t v87 = v135;
    unint64_t v88 = v136;
    uint64_t v135 = v85;
    unint64_t v136 = v86;
    uint64_t v137 = v82;
    uint64_t v138 = v84;
    uint64_t v139 = v87;
    unint64_t v140 = v88;
    sub_1E0E894F0();
    sub_1E0E0F184();
    CGRect v89 = v112;
    sub_1E0ECC3A0();
    uint64_t v141 = 0;
    unint64_t v142 = 0xE000000000000000;
    sub_1E0E8964C((uint64_t)v145, (uint64_t)&v135);
    if (v136)
    {
      uint64_t v133 = v72;
      unint64_t v134 = v59;
      sub_1E0E899CC(a1);
      swift_bridgeObjectRetain();
      sub_1E0ECD250();
      sub_1E0ECD250();
      sub_1E0E89A54(a1);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v90 = v121;
    uint64_t v94 = v130;
    uint64_t v64 = (uint64_t)v127;
    sub_1E0ECD250();
    swift_bridgeObjectRelease();
    sub_1E0ECD250();
    sub_1E0E89974();
    uint64_t v95 = (uint64_t)v111;
    uint64_t v96 = v114;
    sub_1E0ECCBA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v89, v96);
    uint64_t v97 = v110;
    sub_1E0E8975C(v95, v110, (uint64_t (*)(void))sub_1E0E8940C);
    sub_1E0E8975C(v97, v64, (uint64_t (*)(void))sub_1E0E8940C);
    uint64_t v79 = 0;
    uint64_t v91 = v120;
    uint64_t v92 = v119;
    uint64_t v93 = v94;
  }
  else
  {
    uint64_t v90 = v121;
    uint64_t v91 = v120;
    uint64_t v92 = v119;
    uint64_t v93 = v130;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v64, v79, 1, v91);
  uint64_t v98 = v124;
  sub_1E0E897C4(v131, v124);
  sub_1E0E897C4(v132, v93);
  uint64_t v99 = v125;
  sub_1E0E89828(v74, v125, &qword_1EAD6F578, (uint64_t (*)(uint64_t))sub_1E0E89348);
  uint64_t v100 = v126;
  sub_1E0E89828(v64, v126, &qword_1EAD6F580, (uint64_t (*)(uint64_t))sub_1E0E8940C);
  sub_1E0E897C4(v98, v90);
  sub_1E0E8926C();
  uint64_t v101 = v74;
  uint64_t v103 = v102;
  sub_1E0E897C4(v93, v90 + *(int *)(v102 + 48));
  sub_1E0E89828(v99, v90 + *(int *)(v103 + 64), &qword_1EAD6F578, (uint64_t (*)(uint64_t))sub_1E0E89348);
  sub_1E0E89828(v100, v90 + *(int *)(v103 + 80), &qword_1EAD6F580, (uint64_t (*)(uint64_t))sub_1E0E8940C);
  sub_1E0E898A8(v64, &qword_1EAD6F580, (uint64_t (*)(uint64_t))sub_1E0E8940C);
  sub_1E0E898A8(v101, &qword_1EAD6F578, (uint64_t (*)(uint64_t))sub_1E0E89348);
  sub_1E0E89918(v132);
  sub_1E0E89918(v131);
  sub_1E0E898A8(v100, &qword_1EAD6F580, (uint64_t (*)(uint64_t))sub_1E0E8940C);
  sub_1E0E898A8(v99, &qword_1EAD6F578, (uint64_t (*)(uint64_t))sub_1E0E89348);
  sub_1E0E89918(v130);
  return sub_1E0E89918(v98);
}

uint64_t DeviceFeatureAttributes.deviceName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceFeatureAttributes.deviceName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceFeatureAttributes.deviceName.modify())()
{
  return nullsub_1;
}

id DeviceFeatureAttributes.featureAttributes.getter()
{
  return *(id *)(v0 + 16);
}

void DeviceFeatureAttributes.featureAttributes.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*DeviceFeatureAttributes.featureAttributes.modify())()
{
  return nullsub_1;
}

uint64_t DeviceFeatureAttributes.init(deviceName:featureAttributes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _s8HealthUI23DeviceFeatureAttributesV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_1E0ECD9E0() & 1) != 0) {
        goto LABEL_8;
      }
    }
  }
  else if (!v4)
  {
LABEL_8:
    sub_1E0E1BEF0();
    return sub_1E0ECD6A0() & 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for DeviceFeatureAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceFeatureAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFeatureAttributes()
{
  return &type metadata for DeviceFeatureAttributes;
}

void sub_1E0E88BC4(uint64_t *a1@<X8>)
{
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EAD740B8;
  uint64_t v17 = sub_1E0ECB680();
  uint64_t v4 = v3;

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v5 = (id)qword_1EAD740B8;
  uint64_t v6 = sub_1E0ECB680();
  uint64_t v8 = v7;

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v9 = (id)qword_1EAD740B8;
  uint64_t v10 = sub_1E0ECB680();
  uint64_t v12 = v11;

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  id v13 = (id)qword_1EAD740B8;
  uint64_t v14 = sub_1E0ECB680();
  uint64_t v16 = v15;

  *a1 = v17;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v8;
  a1[4] = v10;
  a1[5] = v12;
  a1[6] = v14;
  a1[7] = v16;
}

uint64_t destroy for DeviceFeatureAttributesSection(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DeviceFeatureAttributesSection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  id v10 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeviceFeatureAttributesSection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for DeviceFeatureAttributesSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceFeatureAttributesSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceFeatureAttributesSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFeatureAttributesSection()
{
  return &type metadata for DeviceFeatureAttributesSection;
}

uint64_t sub_1E0E891A0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1E0E891BC()
{
  if (!qword_1EAD6F558)
  {
    sub_1E0E896C0(255, (unint64_t *)&qword_1EAD6F3E0);
    sub_1E0E893A8(255, &qword_1EAD6F560, (uint64_t (*)(uint64_t))sub_1E0E8926C, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1E0ECCE10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F558);
    }
  }
}

void sub_1E0E8926C()
{
  if (!qword_1EAD6F568)
  {
    sub_1E0E89348();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
    sub_1E0E893A8(255, &qword_1EAD6F578, (uint64_t (*)(uint64_t))sub_1E0E89348, MEMORY[0x1E4FBB718]);
    sub_1E0E893A8(255, &qword_1EAD6F580, (uint64_t (*)(uint64_t))sub_1E0E8940C, v0);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EAD6F568);
    }
  }
}

void sub_1E0E89348()
{
  if (!qword_1EAD6F570)
  {
    sub_1E0ECC890();
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F570);
    }
  }
}

void sub_1E0E893A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1E0E8940C()
{
  if (!qword_1EAD6F588)
  {
    sub_1E0E89474();
    sub_1E0ECC890();
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F588);
    }
  }
}

void sub_1E0E89474()
{
  if (!qword_1EAD6F590)
  {
    sub_1E0E894F0();
    unint64_t v0 = sub_1E0ECC3B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F590);
    }
  }
}

unint64_t sub_1E0E894F0()
{
  unint64_t result = qword_1EAD6F598;
  if (!qword_1EAD6F598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F598);
  }
  return result;
}

uint64_t sub_1E0E89544@<X0>(uint64_t a1@<X8>)
{
  return sub_1E0E87C64(*(void *)(v1 + 16), a1);
}

unint64_t sub_1E0E8954C()
{
  unint64_t result = qword_1EAD6F5A0;
  if (!qword_1EAD6F5A0)
  {
    sub_1E0E896C0(255, (unint64_t *)&qword_1EAD6F3E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F5A0);
  }
  return result;
}

unint64_t sub_1E0E895C4()
{
  unint64_t result = qword_1EAD6F5A8;
  if (!qword_1EAD6F5A8)
  {
    sub_1E0E893A8(255, &qword_1EAD6F560, (uint64_t (*)(uint64_t))sub_1E0E8926C, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F5A8);
  }
  return result;
}

uint64_t sub_1E0E8964C(uint64_t a1, uint64_t a2)
{
  sub_1E0E896C0(0, &qword_1EAD6F5B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1E0E896C0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1E0ECD6C0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1E0E89708()
{
  unint64_t result = qword_1EAD6F5B8;
  if (!qword_1EAD6F5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F5B8);
  }
  return result;
}

uint64_t sub_1E0E8975C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E0E897C4(uint64_t a1, uint64_t a2)
{
  sub_1E0E89348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E89828(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1E0E893A8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0E898A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1E0E893A8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1E0E89918(uint64_t a1)
{
  sub_1E0E89348();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E0E89974()
{
  unint64_t result = qword_1EAD6F5C0;
  if (!qword_1EAD6F5C0)
  {
    sub_1E0E89474();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F5C0);
  }
  return result;
}

uint64_t sub_1E0E899CC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1E0E89A54(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for DeviceFeatureAttributesSection.Localization()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DeviceFeatureAttributesSection.Localization(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeviceFeatureAttributesSection.Localization(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DeviceFeatureAttributesSection.Localization(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceFeatureAttributesSection.Localization(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceFeatureAttributesSection.Localization(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFeatureAttributesSection.Localization()
{
  return &type metadata for DeviceFeatureAttributesSection.Localization;
}

unint64_t sub_1E0E89D50()
{
  unint64_t result = qword_1EAD6F5C8;
  if (!qword_1EAD6F5C8)
  {
    sub_1E0E891BC();
    sub_1E0E8954C();
    sub_1E0E895C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F5C8);
  }
  return result;
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.CGFloat x = a1;
  v10.origin.CGFloat y = a2;
  v10.size.CGFloat width = a3;
  v10.size.CGFloat height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

float64x2_t CGRect.center.setter(float64x2_t a1, float64_t a2)
{
  __asm { FMOV            V3.2D, #-0.5 }
  a1.f64[1] = a2;
  float64x2_t result = vaddq_f64(a1, vmulq_f64(v2[1], _Q3));
  *unint64_t v2 = result;
  return result;
}

float64x2_t (*CGRect.center.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  CGFloat v3 = *v1;
  CGFloat v4 = v1[1];
  CGFloat v5 = v1[2];
  CGFloat v6 = v1[3];
  v10.origin.CGFloat x = *v1;
  v10.origin.CGFloat y = v4;
  v10.size.CGFloat width = v5;
  v10.size.CGFloat height = v6;
  CGFloat MidX = CGRectGetMidX(v10);
  v11.origin.CGFloat x = v3;
  v11.origin.CGFloat y = v4;
  v11.size.CGFloat width = v5;
  v11.size.CGFloat height = v6;
  CGFloat MidY = CGRectGetMidY(v11);
  *(CGFloat *)a1 = MidX;
  *(CGFloat *)(a1 + 8) = MidY;
  return sub_1E0E89EE0;
}

float64x2_t sub_1E0E89EE0(uint64_t a1)
{
  uint64_t v1 = *(float64x2_t **)(a1 + 16);
  __asm { FMOV            V2.2D, #-0.5 }
  float64x2_t result = vaddq_f64(*(float64x2_t *)a1, vmulq_f64(v1[1], _Q2));
  *uint64_t v1 = result;
  return result;
}

void sub_1E0E89F00(CGFloat *a1@<X0>, CGFloat *a2@<X8>)
{
  CGFloat v3 = *a1;
  CGFloat v4 = a1[1];
  CGFloat v5 = a1[2];
  CGFloat v6 = a1[3];
  v9.origin.CGFloat x = *a1;
  v9.origin.CGFloat y = v4;
  v9.size.CGFloat width = v5;
  v9.size.CGFloat height = v6;
  CGFloat MidX = CGRectGetMidX(v9);
  v10.origin.CGFloat x = v3;
  v10.origin.CGFloat y = v4;
  v10.size.CGFloat width = v5;
  v10.size.CGFloat height = v6;
  CGFloat MidY = CGRectGetMidY(v10);
  *a2 = MidX;
  a2[1] = MidY;
}

float64x2_t sub_1E0E89F70(float64x2_t *a1, float64x2_t *a2)
{
  __asm { FMOV            V2.2D, #-0.5 }
  float64x2_t result = vaddq_f64(*a1, vmulq_f64(a2[1], _Q2));
  *a2 = result;
  return result;
}

id sub_1E0E89F8C()
{
  uint64_t v1 = OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = sub_1E0E8ACE8(v0);
    CGFloat v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1E0E89FF0()
{
  uint64_t v1 = OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette);
  }
  else
  {
    double v4 = *(double *)(v0 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width);
    objc_msgSend(self, sel_preferredHeight);
    id v6 = objc_msgSend(objc_allocWithZone((Class)HKWeekdayHeaderPaletteView), sel_initWithFrame_shouldSupportRTL_, HKUICalendarLocaleIsRightToLeft(), 0.0, 0.0, v4, v5);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    unint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id TitledWeekdayHeaderPaletteView.__allocating_init(title:width:)(uint64_t a1, uint64_t a2, double a3)
{
  id v7 = objc_allocWithZone(v3);
  return TitledWeekdayHeaderPaletteView.init(title:width:)(a1, a2, a3);
}

id TitledWeekdayHeaderPaletteView.init(title:width:)(uint64_t a1, uint64_t a2, double a3)
{
  os_log_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___titleLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView____lazy_storage___weekdayPalette] = 0;
  *(double *)&v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width] = a3;
  id v8 = &v3[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_title];
  *(void *)id v8 = a1;
  *((void *)v8 + 1) = a2;
  CGRect v9 = self;
  sub_1E0ECD1D0();
  swift_bridgeObjectRetain();
  CGRect v10 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  uint64_t v11 = *MEMORY[0x1E4FB27B8];
  id v12 = objc_msgSend(v9, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v10, 2, *MEMORY[0x1E4FB27B8]);

  id v13 = (void *)sub_1E0ECD190();
  sub_1E0E8AB18(0, (unint64_t *)&qword_1EAD69A20, (void (*)(uint64_t))sub_1E0E1AC68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
  uint64_t v15 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1E0E415D0();
  *(void *)(inited + 40) = v12;
  id v16 = v15;
  id v17 = v12;
  sub_1E0E3FB40(inited);
  type metadata accessor for Key(0);
  sub_1E0E1ACD4();
  uint64_t v18 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_boundingRectWithSize_options_attributes_context_, 1, v18, 0, a3, 1.79769313e308);
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v42.origin.CGFloat x = v20;
  v42.origin.CGFloat y = v22;
  v42.size.CGFloat width = v24;
  v42.size.CGFloat height = v26;
  double Height = CGRectGetHeight(v42);
  swift_bridgeObjectRelease();

  double v28 = ceil(Height) + 8.0;
  objc_msgSend(self, sel_preferredHeight);
  v41.receiver = v3;
  v41.super_class = ObjectType;
  id v30 = objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, a3, v28 + v29);
  objc_msgSend(v30, sel_setMaximumContentSizeCategory_, v11);
  id v31 = v30;
  id v32 = sub_1E0E89F8C();
  objc_msgSend(v31, sel_addSubview_, v32);

  id v33 = v31;
  id v34 = sub_1E0E89FF0();
  objc_msgSend(v33, sel_addSubview_, v34);

  id v35 = sub_1E0E89FF0();
  objc_msgSend(v35, sel_layoutMargins);
  objc_msgSend(v35, sel_setLayoutMargins_, v28);

  sub_1E0E8AB18(0, (unint64_t *)&qword_1EAD6F5F0, (void (*)(uint64_t))sub_1E0E8AB6C);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1E0F07C90;
  uint64_t v37 = sub_1E0ECC0B0();
  uint64_t v38 = MEMORY[0x1E4FB1138];
  *(void *)(v36 + 32) = v37;
  *(void *)(v36 + 40) = v38;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1E0E8AC40();
  id v39 = v33;
  sub_1E0ECD670();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v39;
}

void sub_1E0E8A4F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1E4E41170](v4);
  if (v5)
  {
    id v6 = (void *)v5;
    if (!a2) {
      goto LABEL_8;
    }
    id v7 = a2;
    id v8 = objc_msgSend(v6, sel_traitCollection);
    id v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

    id v10 = objc_msgSend(v7, sel_preferredContentSizeCategory);
    uint64_t v11 = sub_1E0ECD1D0();
    uint64_t v13 = v12;
    if (v11 == sub_1E0ECD1D0() && v13 == v14)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    char v16 = sub_1E0ECD9E0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
LABEL_8:
    }
      sub_1E0E8A63C();
LABEL_10:
  }
}

void sub_1E0E8A63C()
{
  double v1 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width];
  unint64_t v2 = self;
  sub_1E0ECD1D0();
  id v3 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  uint64_t v4 = *MEMORY[0x1E4FB27B8];
  id v5 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v3, 2, *MEMORY[0x1E4FB27B8]);

  id v6 = (void *)sub_1E0ECD190();
  sub_1E0E8AB18(0, (unint64_t *)&qword_1EAD69A20, (void (*)(uint64_t))sub_1E0E1AC68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
  id v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1E0E415D0();
  *(void *)(inited + 40) = v5;
  id v9 = v8;
  id v10 = v5;
  sub_1E0E3FB40(inited);
  type metadata accessor for Key(0);
  sub_1E0E1ACD4();
  uint64_t v11 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_boundingRectWithSize_options_attributes_context_, 1, v11, 0, v1, 1.79769313e308);
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v28.origin.CGFloat x = v13;
  v28.origin.CGFloat y = v15;
  v28.size.CGFloat width = v17;
  v28.size.CGFloat height = v19;
  double Height = CGRectGetHeight(v28);

  double v21 = ceil(Height);
  objc_msgSend(self, sel_preferredHeight);
  objc_msgSend(v0, sel_setFrame_, 0.0, 0.0, v1, v21 + 8.0 + v22);
  id v23 = sub_1E0E89F8C();
  sub_1E0ECD1D0();
  CGFloat v24 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v24, 2, v4);

  objc_msgSend(v23, sel_setFont_, v25);
  id v26 = sub_1E0E89F8C();
  objc_msgSend(v26, sel_setFrame_, 0.0, 0.0, v1, v21);

  id v27 = sub_1E0E89FF0();
  objc_msgSend(v27, sel_layoutMargins);
  objc_msgSend(v27, sel_setLayoutMargins_, v21 + 8.0);
}

id TitledWeekdayHeaderPaletteView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void TitledWeekdayHeaderPaletteView.init(frame:)()
{
}

id TitledWeekdayHeaderPaletteView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1E0E8AB18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECD9C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1E0E8AB6C()
{
  unint64_t result = qword_1EAD6FC20;
  if (!qword_1EAD6FC20)
  {
    sub_1E0E8ABA8();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6FC20);
  }
  return result;
}

unint64_t sub_1E0E8ABA8()
{
  unint64_t result = qword_1EAD6F600;
  if (!qword_1EAD6F600)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6F600);
  }
  return result;
}

uint64_t sub_1E0E8AC00()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1E0E8AC38(uint64_t a1, void *a2)
{
  sub_1E0E8A4F0(a1, a2, v2);
}

unint64_t sub_1E0E8AC40()
{
  unint64_t result = qword_1EAD6FC30;
  if (!qword_1EAD6FC30)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6FC30);
  }
  return result;
}

uint64_t type metadata accessor for TitledWeekdayHeaderPaletteView()
{
  return self;
}

uint64_t method lookup function for TitledWeekdayHeaderPaletteView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TitledWeekdayHeaderPaletteView);
}

uint64_t dispatch thunk of TitledWeekdayHeaderPaletteView.__allocating_init(title:width:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

id sub_1E0E8ACE8(uint64_t a1)
{
  double v1 = *(double *)(a1 + OBJC_IVAR____TtC8HealthUI30TitledWeekdayHeaderPaletteView_width);
  uint64_t v2 = self;
  sub_1E0ECD1D0();
  id v3 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  uint64_t v4 = *MEMORY[0x1E4FB27B8];
  id v5 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v3, 2, *MEMORY[0x1E4FB27B8]);

  id v6 = (void *)sub_1E0ECD190();
  sub_1E0E8AB18(0, (unint64_t *)&qword_1EAD69A20, (void (*)(uint64_t))sub_1E0E1AC68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F07C90;
  id v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1E0E415D0();
  *(void *)(inited + 40) = v5;
  id v9 = v8;
  id v10 = v5;
  sub_1E0E3FB40(inited);
  type metadata accessor for Key(0);
  sub_1E0E1ACD4();
  uint64_t v11 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_boundingRectWithSize_options_attributes_context_, 1, v11, 0, v1, 1.79769313e308);
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v26.origin.CGFloat x = v13;
  v26.origin.CGFloat y = v15;
  v26.size.CGFloat width = v17;
  v26.size.CGFloat height = v19;
  double Height = CGRectGetHeight(v26);

  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, v1, ceil(Height));
  double v22 = (void *)sub_1E0ECD190();
  objc_msgSend(v21, sel_setText_, v22);

  objc_msgSend(v21, sel_setTextAlignment_, 1);
  sub_1E0ECD1D0();
  id v23 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v2, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v23, 2, v4);

  objc_msgSend(v21, sel_setFont_, v24);
  return v21;
}

unint64_t static CalendarYearOverlayView.elementKind.getter()
{
  return 0xD000000000000017;
}

id CalendarYearOverlayView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *CalendarYearOverlayView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v11 = v4;
  id v12 = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  CGFloat v13 = self;
  id v14 = objc_msgSend(v13, sel_systemBackgroundColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v14);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v4[v9] = v12;
  uint64_t v15 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v17 = objc_msgSend(v13, sel_labelColor);
  objc_msgSend(v16, sel_setTextColor_, v17);

  objc_msgSend(v16, sel_setNumberOfLines_, 0);
  objc_msgSend(v16, sel_setTextAlignment_, 1);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v11[v15] = v16;
  uint64_t v18 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient;
  id v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v20 = objc_msgSend(v13, sel_systemBackgroundColor);
  id v21 = objc_msgSend(v13, sel_systemBackgroundColor);
  id v22 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.0);

  sub_1E0E20FF0(v20, v22);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v11[v18] = v19;
  *(void *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = 0x4056800000000000;
  *(void *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator] = 0;
  id v23 = &v11[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate];
  uint64_t v24 = sub_1E0ECB980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);

  v81.receiver = v11;
  v81.super_class = (Class)type metadata accessor for CalendarYearOverlayView();
  id v25 = (char *)objc_msgSendSuper2(&v81, sel_initWithFrame_, a1, a2, a3, a4);
  id v26 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v25, sel_setBackgroundColor_, v26);

  objc_msgSend(v25, sel_setAlpha_, 0.0);
  uint64_t v79 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label;
  id v27 = *(void **)&v25[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
  objc_msgSend(v27, sel_setAlpha_, 0.0);
  objc_msgSend(v25, sel_setHidden_, 1);
  uint64_t v28 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background;
  double v29 = *(void **)&v25[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background];
  objc_msgSend(v29, sel_addSubview_, v27);
  objc_msgSend(v25, sel_addSubview_, v29);
  uint64_t v30 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient;
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient]);
  id v80 = self;
  sub_1E0DF2BA8();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1E0F09FB0;
  id v32 = objc_msgSend(v29, sel_topAnchor);
  id v33 = objc_msgSend(v25, (SEL)&selRef_stringWithFormat_ + 3);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(void *)(v31 + 32) = v34;
  id v35 = objc_msgSend(*(id *)&v25[v28], sel_leadingAnchor);
  id v36 = objc_msgSend(v25, sel_leadingAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  *(void *)(v31 + 40) = v37;
  id v38 = objc_msgSend(v25, sel_trailingAnchor);
  id v39 = objc_msgSend(*(id *)&v25[v28], sel_trailingAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(void *)(v31 + 48) = v40;
  id v41 = objc_msgSend(*(id *)&v25[v30], sel_topAnchor);
  id v42 = objc_msgSend(*(id *)&v25[v28], sel_bottomAnchor);
  id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

  *(void *)(v31 + 56) = v43;
  id v44 = objc_msgSend(*(id *)&v25[v30], sel_leadingAnchor);
  id v45 = objc_msgSend(v25, sel_leadingAnchor);
  id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

  *(void *)(v31 + 64) = v46;
  id v47 = objc_msgSend(v25, sel_trailingAnchor);
  id v48 = objc_msgSend(*(id *)&v25[v30], sel_trailingAnchor);
  id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(void *)(v31 + 72) = v49;
  id v50 = objc_msgSend(v25, sel_bottomAnchor);
  id v51 = objc_msgSend(*(id *)&v25[v30], sel_bottomAnchor);
  id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(void *)(v31 + 80) = v52;
  id v53 = objc_msgSend(*(id *)&v25[v30], sel_heightAnchor);
  if (qword_1EAD6D558 != -1) {
    swift_once();
  }
  id v54 = objc_msgSend(v53, sel_constraintEqualToConstant_, *(double *)&qword_1EAD6F618);

  *(void *)(v31 + 88) = v54;
  id v55 = objc_msgSend(*(id *)&v25[v79], sel_topAnchor);
  id v56 = objc_msgSend(*(id *)&v25[v28], sel_topAnchor);
  if (qword_1EAD6D550 != -1) {
    swift_once();
  }
  id v57 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v56, *(double *)&qword_1EAD6F610);

  *(void *)(v31 + 96) = v57;
  id v58 = objc_msgSend(*(id *)&v25[v79], sel_leadingAnchor);
  id v59 = objc_msgSend(*(id *)&v25[v28], sel_layoutMarginsGuide);
  id v60 = objc_msgSend(v59, sel_leadingAnchor);

  id v61 = objc_msgSend(v58, (SEL)&selRef_calendarScrollViewController_didSelectDate_ + 6, v60);
  *(void *)(v31 + 104) = v61;
  id v62 = objc_msgSend(*(id *)&v25[v28], sel_layoutMarginsGuide);
  id v63 = objc_msgSend(v62, sel_trailingAnchor);

  id v64 = objc_msgSend(*(id *)&v25[v79], sel_trailingAnchor);
  id v65 = objc_msgSend(v63, (SEL)&selRef_calendarScrollViewController_didSelectDate_ + 6, v64);

  *(void *)(v31 + 112) = v65;
  id v66 = objc_msgSend(*(id *)&v25[v28], sel_bottomAnchor);
  id v67 = objc_msgSend(*(id *)&v25[v79], sel_bottomAnchor);
  id v68 = objc_msgSend(v66, (SEL)&selRef_calendarScrollViewController_didSelectDate_ + 6, v67);

  *(void *)(v31 + 120) = v68;
  sub_1E0ECD340();
  sub_1E0E8CDD8();
  uint64_t v69 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v80, sel_activateConstraints_, v69);

  uint64_t v70 = *(void **)&v25[v79];
  uint64_t v71 = self;
  if (qword_1EAD6D560 != -1) {
    swift_once();
  }
  sub_1E0ECD1D0();
  uint64_t v72 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v73 = objc_msgSend(v71, sel_hk_preferredFontForTextStyle_symbolicTraits_, v72, 2);

  objc_msgSend(v70, sel_setFont_, v73);
  sub_1E0E8D810(0, (unint64_t *)&qword_1EAD6F5F0, (uint64_t (*)(uint64_t))sub_1E0E8AB6C, MEMORY[0x1E4FBBE00]);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1E0F07C90;
  uint64_t v75 = sub_1E0ECC0B0();
  uint64_t v76 = MEMORY[0x1E4FB1138];
  *(void *)(v74 + 32) = v75;
  *(void *)(v74 + 40) = v76;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1E0E8AC40();
  uint64_t v77 = v25;
  sub_1E0ECD670();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v77;
}

uint64_t type metadata accessor for CalendarYearOverlayView()
{
  uint64_t result = qword_1EAD6F650;
  if (!qword_1EAD6F650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1E0E8BB1C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1E4E41170](v4);
  if (v5)
  {
    id v6 = (char *)v5;
    if (a2)
    {
      id v7 = a2;
      id v8 = objc_msgSend(v6, sel_traitCollection);
      id v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

      id v10 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      uint64_t v11 = sub_1E0ECD1D0();
      uint64_t v13 = v12;
      if (v11 == sub_1E0ECD1D0() && v13 == v14)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_1E0ECD9E0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          goto LABEL_8;
        }
      }
LABEL_12:

      return;
    }
LABEL_8:
    id v17 = *(void **)&v6[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
    uint64_t v18 = self;
    if (qword_1EAD6D560 != -1) {
      swift_once();
    }
    sub_1E0ECD1D0();
    id v19 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v18, sel_hk_preferredFontForTextStyle_symbolicTraits_, v19, 2);

    objc_msgSend(v17, sel_setFont_, v20);
    objc_msgSend(v6, sel_frame);
    CGFloat Width = CGRectGetWidth(v25);
    LODWORD(v22) = 1148846080;
    LODWORD(v23) = 1112014848;
    objc_msgSend(v6, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, Width, 0.0, v22, v23);
    *(void *)&v6[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = v24;
    objc_msgSend(v6, sel_frame);
    objc_msgSend(v6, sel_setFrame_);
    goto LABEL_12;
  }
}

id CalendarYearOverlayView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1E0E8BF00(uint64_t a1, void *a2)
{
  sub_1E0E8D810(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  id v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = &v14[-v10];
  sub_1E0DF0C20(a1, (uint64_t)&v14[-v10]);
  uint64_t v12 = *a2 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  sub_1E0DF0C20(v12, (uint64_t)v8);
  swift_beginAccess();
  sub_1E0DFF5EC((uint64_t)v11, v12);
  swift_endAccess();
  sub_1E0E8C044((uint64_t)v8);
  sub_1E0DF0AA0((uint64_t)v11);
  return sub_1E0DF0AA0((uint64_t)v8);
}

uint64_t sub_1E0E8C044(uint64_t a1)
{
  uint64_t v55 = a1;
  sub_1E0E25024();
  uint64_t v54 = v2;
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E8D810(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v53 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v51 - v12;
  MEMORY[0x1F4188790](v11, v14);
  char v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_1E0ECB980();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  id v52 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v22);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = (uint64_t)&v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate];
  swift_beginAccess();
  sub_1E0DF0C20(v25, (uint64_t)v16);
  id v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v26(v16, 1, v17) == 1) {
    return sub_1E0DF0AA0((uint64_t)v16);
  }
  id v51 = v1;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v28(v24, v16, v17);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v13, v24, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  uint64_t v29 = (uint64_t)&v5[*(int *)(v54 + 48)];
  sub_1E0DF0C20(v55, (uint64_t)v5);
  sub_1E0DF0C20((uint64_t)v13, v29);
  BOOL v30 = v26(v5, 1, v17) == 1;
  uint64_t v31 = (uint64_t)v13;
  if (v30)
  {
    sub_1E0DF0AA0((uint64_t)v13);
    if (v26((char *)v29, 1, v17) == 1)
    {
      sub_1E0DF0AA0((uint64_t)v5);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v24, v17);
    }
    goto LABEL_9;
  }
  id v32 = (void (*)(char *, uint64_t, uint64_t))v28;
  uint64_t v55 = v31;
  uint64_t v33 = v53;
  sub_1E0DF0C20((uint64_t)v5, v53);
  if (v26((char *)v29, 1, v17) == 1)
  {
    sub_1E0DF0AA0(v55);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v33, v17);
LABEL_9:
    sub_1E0E8DA9C((uint64_t)v5);
    goto LABEL_12;
  }
  id v34 = v52;
  v32(v52, v29, v17);
  sub_1E0E8DAF8();
  id v35 = v24;
  uint64_t v36 = v17;
  uint64_t v37 = v33;
  char v38 = sub_1E0ECD100();
  id v39 = *(void (**)(char *, uint64_t))(v18 + 8);
  v39(v34, v36);
  sub_1E0DF0AA0(v55);
  uint64_t v40 = v37;
  uint64_t v17 = v36;
  uint64_t v41 = v36;
  uint64_t v24 = v35;
  v39((char *)v40, v41);
  sub_1E0DF0AA0((uint64_t)v5);
  if (v38) {
    return ((uint64_t (*)(char *, uint64_t))v39)(v35, v17);
  }
LABEL_12:
  id v42 = v51;
  id v43 = *(void **)&v51[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
  id v44 = (void *)sub_1E0ECB920();
  id v45 = v24;
  id v46 = HKLocalizedStringForDateAndTemplate(v44, 6);

  objc_msgSend(v43, sel_setText_, v46);
  objc_msgSend(v42, sel_frame);
  CGFloat Width = CGRectGetWidth(v56);
  LODWORD(v48) = 1148846080;
  LODWORD(v49) = 1112014848;
  objc_msgSend(v42, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, Width, 0.0, v48, v49);
  *(void *)&v42[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = v50;
  objc_msgSend(v42, sel_frame);
  objc_msgSend(v42, sel_setFrame_);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v45, v17);
}

uint64_t sub_1E0E8C55C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  return sub_1E0DF0C20(v3, a1);
}

uint64_t sub_1E0E8C5B0(uint64_t a1)
{
  sub_1E0E8D810(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = &v9[-v5];
  uint64_t v7 = v1 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  sub_1E0DF0C20(v7, (uint64_t)v6);
  swift_beginAccess();
  sub_1E0DFF5EC(a1, v7);
  swift_endAccess();
  sub_1E0E8C044((uint64_t)v6);
  sub_1E0DF0AA0(a1);
  return sub_1E0DF0AA0((uint64_t)v6);
}

void (*sub_1E0E8C6BC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1E0E8D810(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  v3[11] = malloc(v5);
  uint64_t v6 = malloc(v5);
  uint64_t v7 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  v3[12] = v6;
  v3[13] = v7;
  uint64_t v8 = v1 + v7;
  swift_beginAccess();
  sub_1E0DF0C20(v8, (uint64_t)v6);
  return sub_1E0E8C7B4;
}

void sub_1E0E8C7B4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 96);
  uint64_t v3 = *(void *)(*(void *)a1 + 104);
  size_t v5 = *(void **)(*(void *)a1 + 80);
  uint64_t v6 = *(void **)(*(void *)a1 + 88);
  uint64_t v7 = *(void *)(*(void *)a1 + 72) + v3;
  if (a2)
  {
    sub_1E0DF0C20(*(void *)(*(void *)a1 + 96), (uint64_t)v6);
    sub_1E0DF0C20(v7, (uint64_t)v5);
    swift_beginAccess();
    sub_1E0DFF5EC((uint64_t)v6, v7);
    swift_endAccess();
    sub_1E0E8C044((uint64_t)v5);
    sub_1E0DF0AA0((uint64_t)v6);
    uint64_t v8 = (uint64_t)v5;
    uint64_t v9 = (uint64_t)v4;
  }
  else
  {
    sub_1E0DF0C20(*(void *)(*(void *)a1 + 72) + v3, (uint64_t)v6);
    swift_beginAccess();
    sub_1E0DFF5EC((uint64_t)v4, v7);
    swift_endAccess();
    sub_1E0E8C044((uint64_t)v6);
    uint64_t v8 = (uint64_t)v4;
    uint64_t v9 = (uint64_t)v6;
  }
  sub_1E0DF0AA0(v8);
  sub_1E0DF0AA0(v9);
  free(v4);
  free(v6);
  free(v5);
  free(v2);
}

void sub_1E0E8C8E0(char a1, uint64_t a2, uint64_t a3, double a4)
{
  size_t v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator;
  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator];
  if (v11)
  {
    uint64_t v12 = v11;
    if (objc_msgSend(v12, sel_isRunning))
    {
      objc_msgSend(v12, sel_setReversed_, 1);
      goto LABEL_7;
    }

    uint64_t v13 = *(void **)&v5[v10];
    if (v13) {
      objc_msgSend(v13, sel_stopAnimation_, 1);
    }
  }
  uint64_t v14 = *(void **)&v5[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label];
  id v15 = objc_allocWithZone((Class)type metadata accessor for StaggeredAlphaAnimator());
  id v16 = v14;
  uint64_t v17 = v5;
  id v18 = sub_1E0E8D2B8(a1 & 1, a4, (uint64_t)v17, (uint64_t)v16, 3);

  uint64_t v19 = *(void **)&v5[v10];
  *(void *)&v5[v10] = v18;
  uint64_t v12 = (char *)v18;

LABEL_7:
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  uint64_t v21 = *(void **)&v12[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  v23[4] = sub_1E0E399CC;
  v23[5] = v20;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 1107296256;
  v23[2] = sub_1E0E8D224;
  v23[3] = &block_descriptor_15;
  uint64_t v22 = _Block_copy(v23);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_addCompletion_, v22);
  _Block_release(v22);
  swift_release();
  if ((objc_msgSend(v12, sel_isRunning) & 1) == 0) {
    objc_msgSend(v12, sel_startAnimation);
  }
}

id CalendarYearOverlayView.__deallocating_deinit()
{
  return sub_1E0E8CEE4((uint64_t (*)(void))type metadata accessor for CalendarYearOverlayView);
}

id static CalendarYearOverlayView.configure(attributes:in:initialFrame:)(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  objc_msgSend(a1, sel_setZIndex_, 100);
  objc_msgSend(a1, sel_setFrame_, a3, a4, a5, a6);
  objc_msgSend(a2, sel_adjustedContentInset);
  double v13 = v12;
  double v15 = v14;
  objc_msgSend(a2, sel_contentOffset);
  double v17 = v15 + v16;
  double v19 = v13 + v18;
  objc_msgSend(a1, sel_frame);
  return objc_msgSend(a1, sel_setFrame_, v17, v19);
}

unint64_t sub_1E0E8CC60()
{
  return 0xD000000000000017;
}

id sub_1E0E8CC7C(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  objc_msgSend(a1, sel_setZIndex_, 100);
  objc_msgSend(a1, sel_setFrame_, a3, a4, a5, a6);
  objc_msgSend(a2, sel_adjustedContentInset);
  double v13 = v12;
  double v15 = v14;
  objc_msgSend(a2, sel_contentOffset);
  double v17 = v15 + v16;
  double v19 = v13 + v18;
  objc_msgSend(a1, sel_frame);
  return objc_msgSend(a1, sel_setFrame_, v17, v19);
}

double static OverlayConfiguration.calendarYearOverlay.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CalendarYearOverlayView();
  type metadata accessor for OverlayConfiguration();
  MEMORY[0x1E4E3D3D0](0, 0);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = &protocol witness table for CalendarYearOverlayView;
  return result;
}

void sub_1E0E8CDB8()
{
  qword_1EAD6F610 = 0x4028000000000000;
}

void sub_1E0E8CDC8()
{
  qword_1EAD6F618 = 0x404E000000000000;
}

unint64_t sub_1E0E8CDD8()
{
  unint64_t result = qword_1EAD6FC10;
  if (!qword_1EAD6FC10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6FC10);
  }
  return result;
}

id sub_1E0E8CE18()
{
  qword_1EAD6F620 = *MEMORY[0x1E4FB2998];
  return (id)qword_1EAD6F620;
}

void sub_1E0E8CE30(uint64_t a1, double a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1E4E41170](v3);
  if (v4)
  {
    size_t v5 = v4;
    objc_msgSend(v4, sel_setAlpha_, a2);
  }
}

id sub_1E0E8CECC()
{
  return sub_1E0E8CEE4((uint64_t (*)(void))type metadata accessor for StaggeredAlphaAnimator);
}

id sub_1E0E8CEE4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1E0E8D000(char *a1, double a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  uint64_t v7 = a1;
  objc_msgSend(v6, *a4, a2);
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator], *a4, a2);
}

void sub_1E0E8D094(char *a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  size_t v5 = a1;
  [v4 *a3];
  [*(id *)&v5[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator] *a3];
}

void sub_1E0E8D114(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator];
  uint64_t v7 = a1;
  objc_msgSend(v6, *a4, a3);
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator], *a4, a3);
}

uint64_t sub_1E0E8D224(uint64_t a1, uint64_t a2)
{
  objc_super v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1E0E8D278()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1E0E8D2B0(uint64_t a1, void *a2)
{
  sub_1E0E8BB1C(a1, a2, v2);
}

id sub_1E0E8D2B8(char a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v10;
  if (a1) {
    double v12 = 1.0;
  }
  else {
    double v12 = 0.0;
  }
  *(void *)(v10 + 16) = v9;
  *(double *)(v10 + 24) = v12;
  if (a1) {
    double v13 = a2;
  }
  else {
    double v13 = a2 * 0.8;
  }
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  uint64_t v29 = sub_1E0E8DBF8;
  uint64_t v30 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  id v27 = sub_1E0E67E2C;
  uint64_t v28 = &block_descriptor_22;
  double v15 = _Block_copy(&aBlock);
  double v16 = v5;
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v14, sel_initWithDuration_curve_animations_, a5, v15, a2);
  _Block_release(v15);
  swift_release();
  *(void *)&v16[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_backgroundAnimator] = v17;
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(double *)(v19 + 24) = v12;
  id v20 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  uint64_t v29 = sub_1E0E8DBD8;
  uint64_t v30 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  id v27 = sub_1E0E67E2C;
  uint64_t v28 = &block_descriptor_29;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v22 = objc_msgSend(v20, sel_initWithDuration_curve_animations_, a5, v21, v13);
  _Block_release(v21);
  swift_release();
  *(void *)&v16[OBJC_IVAR____TtC8HealthUIP33_2CCCC3E80CB68C77458B1C83C70AE82122StaggeredAlphaAnimator_foregroundAnimator] = v22;

  v24.receiver = v16;
  v24.super_class = (Class)type metadata accessor for StaggeredAlphaAnimator();
  return objc_msgSendSuper2(&v24, sel_init);
}

void _s8HealthUI23CalendarYearOverlayViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_background;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v2] = v3;
  uint64_t v6 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_label;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v8 = objc_msgSend(v4, sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  objc_msgSend(v7, sel_setTextAlignment_, 1);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v6] = v7;
  uint64_t v9 = OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_gradient;
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v11 = objc_msgSend(v4, sel_systemBackgroundColor);
  id v12 = objc_msgSend(v4, sel_systemBackgroundColor);
  id v13 = objc_msgSend(v12, sel_colorWithAlphaComponent_, 0.0);

  sub_1E0E20FF0(v11, v13);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v9] = v10;
  *(void *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_height] = 0x4056800000000000;
  *(void *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_animator] = 0;
  id v14 = &v1[OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate];
  uint64_t v15 = sub_1E0ECB980();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  sub_1E0ECD8F0();
  __break(1u);
}

void sub_1E0E8D810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E8D874@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8HealthUI23CalendarYearOverlayView_displayDate;
  swift_beginAccess();
  return sub_1E0DF0C20(v3, a2);
}

uint64_t sub_1E0E8D8D0()
{
  return type metadata accessor for CalendarYearOverlayView();
}

void sub_1E0E8D8D8()
{
  sub_1E0E8D810(319, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CalendarYearOverlayView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalendarYearOverlayView);
}

uint64_t dispatch thunk of CalendarYearOverlayView.displayDate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CalendarYearOverlayView.displayDate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CalendarYearOverlayView.displayDate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t type metadata accessor for StaggeredAlphaAnimator()
{
  return self;
}

uint64_t sub_1E0E8DA9C(uint64_t a1)
{
  sub_1E0E25024();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1E0E8DAF8()
{
  unint64_t result = qword_1EAD6F6E0;
  if (!qword_1EAD6F6E0)
  {
    sub_1E0ECB980();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F6E0);
  }
  return result;
}

uint64_t sub_1E0E8DB50()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1E0E8DBA0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1E0E8DBD8()
{
  sub_1E0E8CE30(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

double sub_1E0E8DC14()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1E0E8DC5C(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1E0E8DCB0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1E0E8DD0C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1E0E8DD54(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1E0E8DDA0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1E0E8DDFC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1E0E8DE44(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  uint64_t result = swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1E0E8DE9C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1E0E8DEF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v5 = (objc_class *)type metadata accessor for CalendarViewLayoutAttributes();
  v18.receiver = v2;
  v18.super_class = v5;
  objc_msgSendSuper2(&v18, sel_copyWithZone_, a1);
  sub_1E0ECD760();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v6 = &v2[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
  swift_beginAccess();
  uint64_t v7 = *(void *)v6;
  unint64_t v8 = (void *)(v17 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  swift_beginAccess();
  *unint64_t v8 = v7;
  uint64_t v9 = &v2[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  id v11 = (void *)(v17 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  swift_beginAccess();
  *id v11 = v10;
  id v12 = &v2[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange];
  swift_beginAccess();
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = (void *)(v17 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  uint64_t result = swift_beginAccess();
  void *v15 = v13;
  v15[1] = v14;
  a2[3] = v5;
  *a2 = v17;
  return result;
}

uint64_t type metadata accessor for CalendarViewLayoutAttributes()
{
  return self;
}

id sub_1E0E8E0FC(uint64_t a1)
{
  sub_1E0B32F68(a1, (uint64_t)v26);
  if (!v27)
  {
    sub_1E0B32EE4((uint64_t)v26);
    return 0;
  }
  uint64_t v3 = (objc_class *)type metadata accessor for CalendarViewLayoutAttributes();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v4 = v25;
  id v5 = (double *)&v25[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
  swift_beginAccess();
  double v6 = *v5;
  uint64_t v7 = (double *)&v1[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
  swift_beginAccess();
  if (v6 != *v7) {
    goto LABEL_10;
  }
  unint64_t v8 = &v25[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = &v1[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
  swift_beginAccess();
  if (v9 != *(void *)v10
    || (id v11 = &v25[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange],
        swift_beginAccess(),
        uint64_t v13 = *(void *)v11,
        uint64_t v12 = *((void *)v11 + 1),
        uint64_t v14 = &v1[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange],
        swift_beginAccess(),
        v13 != *(void *)v14)
    || v12 != *((void *)v14 + 1))
  {
LABEL_10:

    return 0;
  }
  sub_1E0B32F68(a1, (uint64_t)v26);
  uint64_t v15 = v27;
  if (v27)
  {
    double v16 = __swift_project_boxed_opaque_existential_0(v26, v27);
    uint64_t v17 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v16, v16);
    uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    uint64_t v20 = sub_1E0ECD9D0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  }
  else
  {
    uint64_t v20 = 0;
  }
  v24.receiver = v1;
  v24.super_class = v3;
  id v21 = objc_msgSendSuper2(&v24, sel_isEqual_, v20);

  swift_unknownObjectRelease();
  return v21;
}

id CalendarViewLayoutAttributes.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CalendarViewLayoutAttributes.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek] = 7;
  *(_OWORD *)&v0[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange] = xmmword_1E0F0A040;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarViewLayoutAttributes();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CalendarViewLayoutAttributes.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarViewLayoutAttributes();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1E0E8E564@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_1E0E8E5B8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1E0E8E610@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1E0E8E664(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

__n128 sub_1E0E8E6B4@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  swift_beginAccess();
  __n128 result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_1E0E8E708(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  id v4 = (void *)(*a2 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_weekdayRange);
  uint64_t result = swift_beginAccess();
  *id v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t method lookup function for CalendarViewLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalendarViewLayoutAttributes);
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.horizontalSectionInset.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.horizontalSectionInset.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.horizontalSectionInset.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.numberOfDaysPerWeek.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.numberOfDaysPerWeek.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.numberOfDaysPerWeek.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.weekdayRange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.weekdayRange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CalendarViewLayoutAttributes.weekdayRange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t HKHostingController.__allocating_init(rootView:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  uint64_t v5 = sub_1E0E8EEB4(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)((char *)v2
                                                          + class metadata base offset for HKHostingController)
                                              - 8)
                                  + 8))(a1);
  return v5;
}

uint64_t HKHostingController.init(rootView:)(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v4 = sub_1E0E8EEB4(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + class metadata base offset for HKHostingController)
                                              - 8)
                                  + 8))(a1);
  return v4;
}

void sub_1E0E8EA74()
{
}

uint64_t sub_1E0E8EAD0(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void sub_1E0E8EAE8(char a1)
{
  id v3 = objc_msgSend(v1, sel_navigationItem);
  id v4 = sub_1E0E8EBBC((a1 & 1) == 0);
  objc_msgSend(v3, sel_setRightBarButtonItem_animated_, v4, 0);

  id v5 = objc_msgSend(v1, sel_navigationItem);
  id v6 = sub_1E0E8EBBC(a1);
  objc_msgSend(v5, sel_setRightBarButtonItem_animated_, v6, 0);
}

id sub_1E0E8EBBC(char a1)
{
  if ((a1 & 1) == 0) {
    return 0;
  }
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  type metadata accessor for HKHostingController();
  id v2 = objc_msgSend(v1, sel_initWithBarButtonSystemItem_target_action_, 0, sub_1E0ECD9D0(), sel_didTapDone_);
  swift_unknownObjectRelease();
  return v2;
}

id sub_1E0E8EC9C()
{
  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1E0E8ECB4(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1E0ECD760();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    id v5 = a1;
  }
  sub_1E0E8EC9C();

  return sub_1E0B32EE4((uint64_t)v7);
}

void sub_1E0E8ED20()
{
}

void sub_1E0E8ED28(void *a1)
{
  id v1 = a1;
  sub_1E0E8ED20();
}

void sub_1E0E8ED70()
{
}

void sub_1E0E8ED78(void *a1)
{
  id v1 = a1;
  sub_1E0E8ED70();
}

void HKHostingController.__allocating_init(coder:rootView:)()
{
}

void HKHostingController.init(coder:rootView:)()
{
}

id HKHostingController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HKHostingController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E8EEB4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1, a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - v1);
  return sub_1E0ECC650();
}

void sub_1E0E8EF9C()
{
}

void sub_1E0E8EFF8()
{
}

uint64_t type metadata accessor for HKHostingController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E0E8F040()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for HKHostingController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKHostingController);
}

uint64_t dispatch thunk of HKHostingController.viewControllerWillEnterAdaptiveModal()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for HKHostingController + (*MEMORY[0x1E4FBC8C8] & *v0) + 40))();
}

uint64_t dispatch thunk of HKHostingController.viewControllerDidLeaveAdaptiveModal()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for HKHostingController + (*MEMORY[0x1E4FBC8C8] & *v0) + 48))();
}

void sub_1E0E8F13C()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)HKNumericAxisConfiguration), sel_init);
  id v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DecibelsHearingLossAxisLabelDimension()), sel_init);
  objc_msgSend(v0, sel_setLabelDimension_, v1);

  id v2 = objc_allocWithZone(MEMORY[0x1E4F2B860]);
  id v3 = v0;
  id v4 = objc_msgSend(v2, sel_init);
  id v5 = objc_msgSend(v4, sel_features);

  if (v5)
  {
    unsigned int v6 = objc_msgSend(v5, sel_yodel);

    if (v6) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = 7;
    }
    objc_msgSend(v3, sel_setMaxLabels_, v7);

    objc_msgSend(self, sel_standardNumericYAxisWithConfigurationOverrides_, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_1E0E8F25C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B860]), sel_init);
  id v1 = objc_msgSend(v0, sel_features);

  if (v1)
  {
    unsigned int v2 = objc_msgSend(v1, sel_yodel);

    if (v2)
    {
      if (qword_1EAD6D570 != -1) {
        swift_once();
      }
      id v3 = &qword_1EAD6F790;
    }
    else
    {
      if (qword_1EAD6D568 != -1) {
        swift_once();
      }
      id v3 = &qword_1EAD6F788;
    }
    id v4 = objc_msgSend(self, sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_noDataAxisBounds_, *v3, 0, *v3);
    id v5 = v4;
  }
  else
  {
    __break(1u);
  }
}

void sub_1E0E8F384()
{
  id v0 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, -120.0);
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, 5.0);
  id v2 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v0, v1);

  qword_1EAD6F788 = (uint64_t)v2;
}

void sub_1E0E8F420()
{
  id v0 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, -120.0);
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 20);
  id v2 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v0, v1);

  qword_1EAD6F790 = (uint64_t)v2;
}

id sub_1E0E8F624()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DecibelsHearingLossAxisLabelDimension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DecibelsHearingLossAxisLabelDimension()
{
  return self;
}

void sub_1E0E8F67C(uint64_t a1, void *a2, int a3)
{
  int v31 = a3;
  uint64_t v5 = sub_1E0ECB870();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x1F4188790](v5, v6);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E0ECB8A0();
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1E0ECB980();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)sub_1E0ECB920();
  unsigned int v19 = objc_msgSend(a2, sel_isDateInToday_, v18);

  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  else
  {
    uint64_t v20 = (void *)sub_1E0ECB920();
    unsigned int v21 = objc_msgSend(a2, sel_isDateInYesterday_, v20);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    if (!v21)
    {
      sub_1E0ECB880();
      sub_1E0ECB860();
      sub_1E0ECB960();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v9);
      goto LABEL_7;
    }
  }
  id v22 = (void *)sub_1E0ECB920();
  id v23 = HKLastUpdatedTextWithOptions(v22, a2, v31 & 1);

  if (v23)
  {
    sub_1E0ECD1D0();

LABEL_7:
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    uint64_t v25 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_setText_, v25);

    objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v24, sel_setAdjustsFontSizeToFitWidth_, 1);
    objc_msgSend(v24, sel_setBaselineAdjustment_, 1);
    id v26 = objc_msgSend(self, sel_hk_chartCurrentValueDateFont);
    objc_msgSend(v24, sel_setFont_, v26);

    id v27 = objc_msgSend(self, sel_hk_chartLollipopLabelColor);
    objc_msgSend(v24, sel_setTextColor_, v27);

    return;
  }
  __break(1u);
}

uint64_t sub_1E0E8FA98(uint64_t a1)
{
  uint64_t v1 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = ~v1;
  uint64_t v3 = -v1;
  uint64_t v24 = a1 + 64;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  uint64_t v25 = v2;
  unint64_t v26 = v4 & *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E0E90794();
  uint64_t v6 = result;
  if ((v7 & 1) == 0)
  {
    double v8 = *(double *)&result;
    int64_t v9 = 0;
    int64_t v10 = (unint64_t)(v25 + 64) >> 6;
    unint64_t v11 = v26;
    while (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v9 << 6);
LABEL_12:
      uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v14 = 0;
      if (v17)
      {
        while (1)
        {
          unint64_t v12 = *(void *)(v17 + 16);
          if (v14 == v12) {
            break;
          }
          if (v14 >= v12) {
            goto LABEL_39;
          }
          uint64_t v13 = v17 + 8 * v14++;
          if (*(double *)(v13 + 32) < v8) {
            double v8 = *(double *)(v13 + 32);
          }
        }
      }
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v18 >= v10) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v18);
    if (v19)
    {
LABEL_23:
      unint64_t v11 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v18 << 6);
      int64_t v9 = v18;
      goto LABEL_12;
    }
    int64_t v20 = v9 + 2;
    if (v9 + 2 >= v10) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v20);
    if (v19)
    {
LABEL_19:
      int64_t v18 = v20;
      goto LABEL_23;
    }
    int64_t v21 = v9 + 3;
    if (v9 + 3 >= v10) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v21);
    if (!v19)
    {
      int64_t v20 = v9 + 4;
      if (v9 + 4 >= v10) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v24 + 8 * v20);
      if (v19) {
        goto LABEL_19;
      }
      int64_t v21 = v9 + 5;
      if (v9 + 5 >= v10) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v24 + 8 * v21);
      if (!v19)
      {
        int64_t v18 = v9 + 6;
        if (v9 + 6 >= v10) {
          goto LABEL_35;
        }
        unint64_t v19 = *(void *)(v24 + 8 * v18);
        if (!v19)
        {
          int64_t v22 = v9 + 7;
          while (v10 != v22)
          {
            unint64_t v19 = *(void *)(v24 + 8 * v22++);
            if (v19)
            {
              int64_t v18 = v22 - 1;
              goto LABEL_23;
            }
          }
LABEL_35:
          sub_1E0E78584();
          swift_bridgeObjectRelease();
          return *(void *)&v8;
        }
        goto LABEL_23;
      }
    }
    int64_t v18 = v21;
    goto LABEL_23;
  }
  sub_1E0E78584();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E0E8FD00(uint64_t a1)
{
  uint64_t v1 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = ~v1;
  uint64_t v3 = -v1;
  uint64_t v24 = a1 + 64;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  uint64_t v25 = v2;
  unint64_t v26 = v4 & *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E0E90794();
  uint64_t v6 = result;
  if ((v7 & 1) == 0)
  {
    double v8 = *(double *)&result;
    int64_t v9 = 0;
    int64_t v10 = (unint64_t)(v25 + 64) >> 6;
    unint64_t v11 = v26;
    while (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v9 << 6);
LABEL_12:
      uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v14 = 0;
      if (v17)
      {
        while (1)
        {
          unint64_t v12 = *(void *)(v17 + 16);
          if (v14 == v12) {
            break;
          }
          if (v14 >= v12) {
            goto LABEL_39;
          }
          uint64_t v13 = v17 + 8 * v14++;
          if (v8 < *(double *)(v13 + 32)) {
            double v8 = *(double *)(v13 + 32);
          }
        }
      }
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v18 >= v10) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v18);
    if (v19)
    {
LABEL_23:
      unint64_t v11 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v18 << 6);
      int64_t v9 = v18;
      goto LABEL_12;
    }
    int64_t v20 = v9 + 2;
    if (v9 + 2 >= v10) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v20);
    if (v19)
    {
LABEL_19:
      int64_t v18 = v20;
      goto LABEL_23;
    }
    int64_t v21 = v9 + 3;
    if (v9 + 3 >= v10) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v21);
    if (!v19)
    {
      int64_t v20 = v9 + 4;
      if (v9 + 4 >= v10) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v24 + 8 * v20);
      if (v19) {
        goto LABEL_19;
      }
      int64_t v21 = v9 + 5;
      if (v9 + 5 >= v10) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v24 + 8 * v21);
      if (!v19)
      {
        int64_t v18 = v9 + 6;
        if (v9 + 6 >= v10) {
          goto LABEL_35;
        }
        unint64_t v19 = *(void *)(v24 + 8 * v18);
        if (!v19)
        {
          int64_t v22 = v9 + 7;
          while (v10 != v22)
          {
            unint64_t v19 = *(void *)(v24 + 8 * v22++);
            if (v19)
            {
              int64_t v18 = v22 - 1;
              goto LABEL_23;
            }
          }
LABEL_35:
          sub_1E0E78584();
          swift_bridgeObjectRelease();
          return *(void *)&v8;
        }
        goto LABEL_23;
      }
    }
    int64_t v18 = v21;
    goto LABEL_23;
  }
  sub_1E0E78584();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1E0E8FF9C(uint64_t a1)
{
  sub_1E0E27F88();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E0ECBDF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0DFD6E0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1E0E5D794((uint64_t)v6);
    return *(void *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric);
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_1E0E5D90C((uint64_t)v11), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
    uint64_t v17 = *(void *)(v16 + 16);
    if (!v17)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v17 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v17) {
      goto LABEL_6;
    }
  }
  double v18 = *(double *)(v16 + 32);
  uint64_t v19 = v17 - 1;
  if (v19)
  {
    int64_t v21 = (double *)(v16 + 40);
    uint64_t v22 = v19;
    double v20 = *(double *)(v16 + 32);
    do
    {
      double v23 = *v21++;
      double v24 = v23;
      if (v23 < v20) {
        double v20 = v24;
      }
      --v22;
    }
    while (v22);
    uint64_t v25 = (double *)(v16 + 40);
    do
    {
      double v26 = *v25++;
      double v27 = v26;
      if (v18 < v26) {
        double v18 = v27;
      }
      --v19;
    }
    while (v19);
  }
  else
  {
    double v20 = *(double *)(v16 + 32);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (v20 <= v18) {
    return *(void *)&v20;
  }
  __break(1u);
  return result;
}

id sub_1E0E90234()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceCoordinate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BalanceCoordinate()
{
  return self;
}

uint64_t sub_1E0E90338(uint64_t a1, CGFloat *a2)
{
  CGFloat v3 = *a2;
  CGFloat v4 = a2[1];
  CGFloat v5 = a2[2];
  CGFloat v6 = a2[3];
  CGFloat v7 = a2[4];
  CGFloat v8 = a2[5];
  uint64_t v9 = sub_1E0ECBDF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
  unint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15);
  id v52 = (char *)&v44 - v16;
  sub_1E0E7858C();
  uint64_t result = sub_1E0ECD920();
  uint64_t v18 = result;
  int64_t v19 = 0;
  uint64_t v54 = a1;
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v47 = a1 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v48 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v50 = v10 + 16;
  uint64_t v53 = v10;
  uint64_t v57 = v10 + 32;
  uint64_t v49 = result + 64;
  uint64_t v51 = result;
  uint64_t v46 = v9;
  id v45 = v14;
  if (!v23) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v55 = (v23 - 1) & v23;
  int64_t v56 = v19;
  for (unint64_t i = __clz(__rbit64(v23)) | (v19 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v27 << 6))
  {
    uint64_t v30 = v53;
    uint64_t v29 = v54;
    unint64_t v31 = *(void *)(v53 + 72) * i;
    id v32 = v52;
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v52, *(void *)(v54 + 48) + v31, v9);
    uint64_t v33 = *(void *)(*(void *)(v29 + 56) + 8 * i);
    id v34 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v34(v14, v32, v9);
    int64_t v35 = *(void *)(v33 + 16);
    if (v35)
    {
      uint64_t v59 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1E0DEEB54(0, v35, 0);
      uint64_t v36 = 0;
      uint64_t v37 = v59;
      do
      {
        v60.CGFloat y = *(CGFloat *)(v33 + 8 * v36 + 32);
        v58.a = v3;
        v58.b = v4;
        v58.c = v5;
        v58.d = v6;
        v58.tCGFloat x = v7;
        v58.tCGFloat y = v8;
        v60.CGFloat x = 0.0;
        CGFloat y = CGPointApplyAffineTransform(v60, &v58).y;
        uint64_t v59 = v37;
        unint64_t v40 = *(void *)(v37 + 16);
        unint64_t v39 = *(void *)(v37 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_1E0DEEB54(v39 > 1, v40 + 1, 1);
          uint64_t v37 = v59;
        }
        ++v36;
        *(void *)(v37 + 16) = v40 + 1;
        *(CGFloat *)(v37 + 8 * v40 + 32) = y;
      }
      while (v35 != v36);
      swift_bridgeObjectRelease();
      uint64_t v9 = v46;
      unint64_t v14 = v45;
    }
    else
    {
      uint64_t v37 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v49 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v18 = v51;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v34)(*(void *)(v51 + 48) + v31, v14, v9);
    *(void *)(*(void *)(v18 + 56) + 8 * i) = v37;
    uint64_t v41 = *(void *)(v18 + 16);
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    *(void *)(v18 + 16) = v43;
    unint64_t v23 = v55;
    int64_t v19 = v56;
    if (v55) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v25 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      goto LABEL_31;
    }
    if (v25 >= v48) {
      return v18;
    }
    unint64_t v26 = *(void *)(v47 + 8 * v25);
    int64_t v27 = v19 + 1;
    if (!v26)
    {
      int64_t v27 = v19 + 2;
      if (v19 + 2 >= v48) {
        return v18;
      }
      unint64_t v26 = *(void *)(v47 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v19 + 3;
        if (v19 + 3 >= v48) {
          return v18;
        }
        unint64_t v26 = *(void *)(v47 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v55 = (v26 - 1) & v26;
    int64_t v56 = v27;
  }
  uint64_t v28 = v19 + 4;
  if (v19 + 4 >= v48) {
    return v18;
  }
  unint64_t v26 = *(void *)(v47 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v19 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v48) {
      return v18;
    }
    unint64_t v26 = *(void *)(v47 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1E0E90794()
{
  for (uint64_t i = v0[5]; ; uint64_t i = v4)
  {
    if (i)
    {
      unint64_t v6 = v0[6];
      unint64_t v7 = *(void *)(i + 16);
      if (v6 != v7) {
        break;
      }
    }
    int64_t v8 = v0[3];
    unint64_t v9 = v0[4];
    if (v9)
    {
      uint64_t v2 = (v9 - 1) & v9;
      unint64_t v3 = __clz(__rbit64(v9)) | (v8 << 6);
      goto LABEL_3;
    }
    int64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    int64_t v11 = (unint64_t)(v0[2] + 64) >> 6;
    int64_t v12 = v0[3];
    if (v10 >= v11) {
      goto LABEL_27;
    }
    uint64_t v13 = v0[1];
    unint64_t v14 = *(void *)(v13 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      int64_t v12 = v8 + 1;
      if (v8 + 2 >= v11) {
        goto LABEL_27;
      }
      unint64_t v14 = *(void *)(v13 + 8 * v15);
      if (!v14)
      {
        int64_t v12 = v8 + 2;
        if (v8 + 3 >= v11) {
          goto LABEL_27;
        }
        unint64_t v14 = *(void *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          int64_t v10 = v8 + 3;
          goto LABEL_16;
        }
        int64_t v15 = v8 + 4;
        int64_t v12 = v8 + 3;
        if (v8 + 4 >= v11) {
          goto LABEL_27;
        }
        unint64_t v14 = *(void *)(v13 + 8 * v15);
        if (!v14)
        {
          int64_t v10 = v8 + 5;
          int64_t v12 = v8 + 4;
          if (v8 + 5 >= v11) {
            goto LABEL_27;
          }
          unint64_t v14 = *(void *)(v13 + 8 * v10);
          if (!v14)
          {
            int64_t v12 = v11 - 1;
            int64_t v16 = v8 + 6;
            while (v11 != v16)
            {
              unint64_t v14 = *(void *)(v13 + 8 * v16++);
              if (v14)
              {
                int64_t v10 = v16 - 1;
                goto LABEL_16;
              }
            }
LABEL_27:
            uint64_t result = 0;
            v0[3] = v12;
            v0[4] = 0;
            return result;
          }
          goto LABEL_16;
        }
      }
      int64_t v10 = v15;
    }
LABEL_16:
    uint64_t v2 = (v14 - 1) & v14;
    unint64_t v3 = __clz(__rbit64(v14)) + (v10 << 6);
    int64_t v8 = v10;
LABEL_3:
    uint64_t v4 = *(void *)(*(void *)(*v0 + 56) + 8 * v3);
    v0[3] = v8;
    v0[4] = v2;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v0[5] = v4;
    v0[6] = 0;
  }
  if (v6 < v7)
  {
    uint64_t result = *(void *)(i + 8 * v6 + 32);
    v0[6] = v6 + 1;
    return result;
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1E0E90920(uint64_t a1, unint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  unint64_t v11 = a2;
  *(double *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue] = a6;
  *(void *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric] = a1;
  int64_t v12 = (double *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange];
  *int64_t v12 = a7;
  v12[1] = a8;
  uint64_t v13 = &v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange];
  *(void *)uint64_t v13 = a2;
  *((void *)v13 + 1) = a3;
  v13[16] = a4 & 1;
  *(void *)&v8[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_userInfo] = a5;
  swift_unknownObjectRetain();
  unint64_t v14 = v8;
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1E0E75884(v15);
  swift_bridgeObjectRelease();
  if (a4) {
    goto LABEL_8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_24;
  }
  while (1)
  {
    unint64_t v18 = *(void *)(v16 + 16);
    unint64_t v17 = *(void *)(v16 + 24);
    int64_t v19 = v17 >> 1;
    unint64_t v20 = v18 + 1;
    if (v17 >> 1 <= v18)
    {
      uint64_t v16 = (uint64_t)sub_1E0E0C4F0((void *)(v17 > 1), v18 + 1, 1, (void *)v16);
      unint64_t v17 = *(void *)(v16 + 24);
      int64_t v19 = v17 >> 1;
    }
    *(void *)(v16 + 16) = v20;
    *(void *)(v16 + 8 * v18 + 32) = v11;
    unint64_t v11 = v18 + 2;
    if (v19 < (uint64_t)(v18 + 2)) {
      uint64_t v16 = (uint64_t)sub_1E0E0C4F0((void *)(v17 > 1), v18 + 2, 1, (void *)v16);
    }
    *(void *)(v16 + 16) = v11;
    *(void *)(v16 + 8 * v20 + 32) = a3;
LABEL_8:
    uint64_t v21 = *(void *)(v16 + 16);
    if (!v21)
    {
      swift_bridgeObjectRelease();
      int64_t v25 = &v14[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange];
      *(void *)int64_t v25 = 0;
      *((void *)v25 + 1) = 0;
      v25[16] = 1;
      goto LABEL_22;
    }
    double v22 = *(double *)(v16 + 32);
    uint64_t v23 = v21 - 1;
    if (v23)
    {
      unint64_t v26 = (double *)(v16 + 40);
      uint64_t v27 = v23;
      double v24 = *(double *)(v16 + 32);
      do
      {
        double v28 = *v26++;
        double v29 = v28;
        if (v28 < v24) {
          double v24 = v29;
        }
        --v27;
      }
      while (v27);
      uint64_t v30 = (double *)(v16 + 40);
      do
      {
        double v31 = *v30++;
        double v32 = v31;
        if (v22 < v31) {
          double v22 = v32;
        }
        --v23;
      }
      while (v23);
    }
    else
    {
      double v24 = *(double *)(v16 + 32);
    }
    swift_bridgeObjectRelease();
    if (v24 <= v22) {
      break;
    }
    __break(1u);
LABEL_24:
    uint64_t v16 = (uint64_t)sub_1E0E0C4F0(0, *(void *)(v16 + 16) + 1, 1, (void *)v16);
  }
  uint64_t v33 = (double *)&v14[OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueRange];
  *uint64_t v33 = v24;
  v33[1] = v22;
  *((unsigned char *)v33 + 16) = 0;
LABEL_22:

  v35.receiver = v14;
  v35.super_class = (Class)type metadata accessor for BalanceCoordinate();
  return objc_msgSendSuper2(&v35, sel_init);
}

id sub_1E0E90B4C(CGFloat *a1)
{
  CGFloat v4 = a1[1];
  CGFloat v5 = a1[2];
  CGFloat v6 = a1[3];
  CGFloat v7 = a1[4];
  CGFloat v8 = a1[5];
  CGFloat v9 = *(double *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_xValue);
  v30.CGFloat a = *a1;
  CGFloat a = v30.a;
  v30.b = v4;
  v30.c = v5;
  v30.d = v6;
  v30.tCGFloat x = v7;
  v30.tCGFloat y = v8;
  v31.CGFloat y = 0.0;
  v31.CGFloat x = v9;
  *(void *)&double v29 = *(_OWORD *)&CGPointApplyAffineTransform(v31, &v30);
  uint64_t v10 = sub_1E0E90338(*(void *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValuesByMetric), a1);
  v32.CGFloat y = *(CGFloat *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange);
  CGFloat v11 = *(double *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueMedialRange + 8);
  v30.CGFloat a = a;
  v30.b = v4;
  v30.c = v5;
  v30.d = v6;
  v30.tCGFloat x = v7;
  v30.tCGFloat y = v8;
  v32.CGFloat x = v9;
  CGFloat y = CGPointApplyAffineTransform(v32, &v30).y;
  v30.CGFloat a = a;
  v30.b = v4;
  v30.c = v5;
  v30.d = v6;
  v30.tCGFloat x = v7;
  v30.tCGFloat y = v8;
  CGFloat v28 = v9;
  v33.CGFloat x = v9;
  v33.CGFloat y = v11;
  double v13 = y;
  CGPoint v14 = CGPointApplyAffineTransform(v33, &v30);
  if (v13 > v14.y)
  {
    double v15 = v14.y;
    if (v14.y <= v13) {
      goto LABEL_5;
    }
    __break(1u);
  }
  double v15 = v13;
  double v13 = v14.y;
LABEL_5:
  unint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
  CGFloat v17 = *(double *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 8);
  char v18 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange + 16);
  if ((v18 & 1) == 0)
  {
    double v27 = v15;
    v34.CGFloat y = *(CGFloat *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_yValueWarmupRange);
    v30.CGFloat a = a;
    v30.b = v4;
    v30.c = v5;
    v30.d = v6;
    v30.tCGFloat x = v7;
    v30.tCGFloat y = v8;
    v34.CGFloat x = v28;
    double v20 = CGPointApplyAffineTransform(v34, &v30).y;
    v30.CGFloat a = a;
    v30.b = v4;
    v30.c = v5;
    v30.d = v6;
    v30.tCGFloat x = v7;
    v30.tCGFloat y = v8;
    v35.CGFloat x = v28;
    v35.CGFloat y = v17;
    CGPoint v21 = CGPointApplyAffineTransform(v35, &v30);
    if (v20 > v21.y)
    {
      CGFloat v22 = v21.y;
      if (v21.y <= v20)
      {
LABEL_11:
        unint64_t v16 = *(void *)&v22;
        CGFloat v17 = v20;
        double v19 = v29;
        double v15 = v27;
        goto LABEL_12;
      }
      __break(1u);
    }
    CGFloat v22 = v20;
    double v20 = v21.y;
    goto LABEL_11;
  }
  double v19 = v29;
LABEL_12:
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC8HealthUI17BalanceCoordinate_userInfo);
  id v24 = objc_allocWithZone((Class)type metadata accessor for BalanceCoordinate());
  swift_unknownObjectRetain();
  id v25 = sub_1E0E90920(v10, v16, *(uint64_t *)&v17, v18, v23, v19, v15, v13);
  swift_unknownObjectRelease();
  return v25;
}

uint64_t sub_1E0E90D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E0ECD3E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1E0ECD3D0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1E0E92E70(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1E0ECD390();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1E0E90F08(uint64_t a1, void *a2)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_cancellables] = MEMORY[0x1E4FBC860];
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_delegate] = a1;
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_context] = a2;
  uint64_t v6 = (objc_class *)type metadata accessor for ClinicalAccountsOverviewDataSourceAndDelegate();
  uint64_t v7 = objc_allocWithZone(v6);
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts] = v5;
  v7[OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_healthAppIsAvailable] = 1;
  *(void *)&v7[OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_context] = a2;
  v24.receiver = v7;
  v24.super_class = v6;
  id v8 = a2;
  CGFloat v9 = v2;
  swift_unknownObjectRetain();
  *(void *)&v9[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate] = objc_msgSendSuper2(&v24, sel_init);

  uint64_t v10 = (void *)sub_1E0ECD190();
  id v11 = HKHealthRecordsAPILocalizedString(v10);

  if (v11)
  {
    int64_t v12 = (void *)sub_1E0ECD190();
    id v13 = HKHealthRecordsAPILocalizedString(v12);

    if (v13)
    {
      sub_1E0ECD1D0();

      sub_1E0E93100(0, (unint64_t *)&qword_1EAD69A30, (uint64_t (*)(uint64_t))sub_1E0E1AB68, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1E0F07C90;
      id v15 = objc_msgSend(v8, sel_source);
      id v16 = objc_msgSend(v15, sel_name);

      uint64_t v17 = sub_1E0ECD1D0();
      uint64_t v19 = v18;

      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 64) = sub_1E0E1ABC0();
      *(void *)(v14 + 32) = v17;
      *(void *)(v14 + 40) = v19;
      sub_1E0ECD1E0();
      swift_bridgeObjectRelease();
      double v20 = (void *)sub_1E0ECD190();
      swift_bridgeObjectRelease();
      v23.receiver = v9;
      v23.super_class = (Class)type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController();
      id v21 = objc_msgSendSuper2(&v23, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v20, 0, 1);

      id v22 = v21;
      objc_msgSend(v22, sel_setShouldMoveHeaderViewTitleToNavigationTitleWhenScrolledOffScreen_, 0);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1E0E91234()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1E0E93100(0, &qword_1EAD6E4D0, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v35 - v4;
  uint64_t v6 = (objc_class *)type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController();
  v38.receiver = v0;
  v38.super_class = v6;
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  id v7 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v7, sel_setLargeTitleDisplayMode_, 2);

  id v8 = objc_msgSend(v0, sel_navigationItem);
  CGFloat v9 = (void *)sub_1E0ECD190();
  id v10 = HKHealthRecordsAPILocalizedString(v9);

  objc_msgSend(v8, sel_setTitle_, v10);
  id v11 = objc_msgSend(v0, sel_navigationItem);
  int64_t v12 = (void *)sub_1E0ECD190();
  id v13 = HKHealthRecordsAPILocalizedString(v12);

  objc_msgSend(v11, sel_setAccessibilityLabel_, v13);
  id v14 = objc_msgSend(v0, sel_navigationItem);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonPressed_);
  objc_msgSend(v14, sel_setRightBarButtonItem_, v15);

  id v16 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v17 = (void *)sub_1E0ECD190();
  id v18 = HKHealthRecordsAPILocalizedString(v17);

  if (v18)
  {
    id v19 = objc_msgSend(self, sel_hk_backButtonWithTitle_, v18);

    objc_msgSend(v16, sel_setBackBarButtonItem_, v19);
    sub_1E0E92274();
    id v20 = objc_msgSend(self, sel_boldButton);
    id v21 = self;
    id v22 = v20;
    id v23 = objc_msgSend(v21, sel_systemBlueColor);
    objc_msgSend(v22, sel_setTintColor_, v23);

    objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonPressed_, 64);
    id v24 = objc_msgSend(v0, sel_buttonTray);
    objc_msgSend(v24, sel_addButton_, v22);

    swift_unknownObjectWeakAssign();
    sub_1E0E924A0();

    id v25 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_context], sel_wrappedFlowManager);
    sub_1E0ECD760();
    swift_unknownObjectRelease();
    type metadata accessor for ClinicalAuthorizationFlowManager();
    swift_dynamicCast();
    unint64_t v26 = v36;
    uint64_t v27 = *(void *)&v36[OBJC_IVAR___HKClinicalAuthorizationFlowManager_accountsEvents];
    swift_retain();

    uint64_t v37 = v27;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v0;
    *(void *)(v28 + 24) = ObjectType;
    sub_1E0E92C6C();
    sub_1E0E92CD4();
    double v29 = v0;
    sub_1E0ECC260();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_1E0E93100(0, &qword_1EAD6F870, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB320]);
    sub_1E0E92D2C();
    sub_1E0ECC120();
    swift_endAccess();
    swift_release();
    uint64_t v30 = sub_1E0ECD3E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v5, 1, 1, v30);
    sub_1E0ECD3B0();
    CGPoint v31 = v29;
    uint64_t v32 = sub_1E0ECD3A0();
    CGPoint v33 = (void *)swift_allocObject();
    uint64_t v34 = MEMORY[0x1E4FBCFD8];
    void v33[2] = v32;
    v33[3] = v34;
    v33[4] = v31;
    sub_1E0E90D64((uint64_t)v5, (uint64_t)&unk_1EAD6F888, (uint64_t)v33);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E0E917FC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1E0E93100(0, &qword_1EAD6E4D0, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  id v8 = (char *)&v15 - v7;
  uint64_t v9 = sub_1E0ECD3E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1E0ECD3B0();
  id v10 = a2;
  uint64_t v11 = sub_1E0ECD3A0();
  int64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBCFD8];
  v12[2] = v11;
  unint64_t v12[3] = v13;
  v12[4] = v10;
  v12[5] = a3;
  sub_1E0E90D64((uint64_t)v8, (uint64_t)&unk_1EAD6F8A8, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1E0E9194C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  void v5[4] = a5;
  v5[5] = sub_1E0ECD3B0();
  v5[6] = sub_1E0ECD3A0();
  uint64_t v7 = sub_1E0ECD390();
  v5[7] = v7;
  v5[8] = v6;
  return MEMORY[0x1F4188298](sub_1E0E919E8, v7, v6);
}

uint64_t sub_1E0E919E8()
{
  int64_t v12 = v0;
  if (qword_1EAD6D4F0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1E0ECC010();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EAD74168);
  uint64_t v2 = sub_1E0ECBFF0();
  os_log_type_t v3 = sub_1E0ECD500();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_1E0ECDBC0();
    v0[2] = sub_1E0DED7E4(v6, v7, &v11);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v2, v3, "%s received accounts event, reloading accounts list", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v5, -1, -1);
    MEMORY[0x1E4E41080](v4, -1, -1);
  }

  v0[9] = sub_1E0ECD3A0();
  uint64_t v9 = sub_1E0ECD390();
  v0[10] = v9;
  v0[11] = v8;
  return MEMORY[0x1F4188298](sub_1E0E91BD8, v9, v8);
}

uint64_t sub_1E0E91BD8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1E0E91C74;
  return sub_1E0E61A58();
}

uint64_t sub_1E0E91C74()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return MEMORY[0x1F4188298](sub_1E0E91D94, v3, v2);
}

uint64_t sub_1E0E91D94()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  uint64_t v2 = (uint64_t (*)())objc_msgSend(v1, sel_tableView);
  if (v2)
  {
    uint64_t v5 = v2;
    objc_msgSend(v2, sel_reloadData);

    sub_1E0E924A0();
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v2 = sub_1E0E91E38;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1E0E91E38()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E0E91E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[2] = a4;
  v4[3] = sub_1E0ECD3B0();
  v4[4] = sub_1E0ECD3A0();
  v4[5] = sub_1E0ECD3A0();
  uint64_t v6 = sub_1E0ECD390();
  v4[6] = v6;
  v4[7] = v5;
  return MEMORY[0x1F4188298](sub_1E0E91F40, v6, v5);
}

uint64_t sub_1E0E91F40()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1E0E91FDC;
  return sub_1E0E61A58();
}

uint64_t sub_1E0E91FDC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1E0E920FC, v3, v2);
}

uint64_t sub_1E0E920FC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  uint64_t v2 = (uint64_t (*)())objc_msgSend(v1, sel_tableView);
  if (v2)
  {
    uint64_t v5 = v2;
    objc_msgSend(v2, sel_reloadData);

    sub_1E0E924A0();
    uint64_t v6 = sub_1E0ECD390();
    uint64_t v8 = v7;
    uint64_t v2 = sub_1E0E921CC;
    uint64_t v3 = v6;
    uint64_t v4 = v8;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1E0E921CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1E0E92274()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTableView_, v1);

  id v2 = objc_msgSend(v0, sel_tableView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate];
  objc_msgSend(v2, sel_setDataSource_, v4);

  id v5 = objc_msgSend(v0, sel_tableView);
  if (!v5)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = v5;
  objc_msgSend(v5, sel_setDelegate_, v4);

  id v7 = objc_msgSend(v0, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8 == (id)6) {
    return;
  }
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  id v15 = objc_msgSend(v0, sel_tableView);
  if (!v15)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  id v14 = objc_msgSend(v12, sel_backgroundColor);

  objc_msgSend(v15, sel_setBackgroundColor_, v14);
}

void sub_1E0E924A0()
{
  uint64_t v1 = MEMORY[0x1E4E41170](v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_nextButton);
  if (v1)
  {
    id v8 = (id)v1;
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate);
    uint64_t v3 = OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts;
    if (*(void *)(v2 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1E0ECD910();
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = (void *)sub_1E0ECD190();
    id v5 = HKHealthRecordsAPILocalizedString(v4);

    objc_msgSend(v8, sel_setTitle_forState_, v5, 0);
    if (*(void *)(v2 + v3) >> 62)
    {
      id v7 = v8;
      swift_bridgeObjectRetain();
      sub_1E0ECD910();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v6 = v8;
    }
    objc_msgSend(v8, sel_setEnabled_, 1);
  }
}

void sub_1E0E92634()
{
  unint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_tableSourceAndDelegate)
                 + OBJC_IVAR____TtC8HealthUI45ClinicalAccountsOverviewDataSourceAndDelegate_accounts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_context);
    id v3 = objc_msgSend(v2, sel_wrappedFlowManager);
    sub_1E0ECD760();
    swift_unknownObjectRelease();
    type metadata accessor for ClinicalAuthorizationFlowManager();
    swift_dynamicCast();
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_delegate);
    id v5 = objc_msgSend(objc_allocWithZone((Class)HKClinicalAuthorizationSettingsViewController), sel_initWithContext_style_, v2, 1);
    objc_msgSend(v5, sel_setDelegate_, v4);
    id v6 = objc_msgSend(objc_allocWithZone((Class)HKClinicalAuthorizationYouShouldKnowViewController), sel_initWithContext_viewController_, v2, v5);
    objc_msgSend(v6, sel_setDelegate_, v4);

    id v7 = v6;
    sub_1E0E92964((uint64_t)v7, 1);

    return;
  }
  sub_1E0E622D8();
}

void sub_1E0E9282C()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI51ClinicalAuthorizationAccountsOverviewViewController_delegate);
  uint64_t v2 = self;
  id v3 = (void *)sub_1E0ECD190();
  id v4 = objc_msgSend(v2, sel_hk_error_description_, 7, v3);

  id v5 = (id)sub_1E0ECB760();
  objc_msgSend(v1, sel_promptControllerDidFinish_error_, v0, v5);
}

void sub_1E0E92964(uint64_t a1, char a2)
{
  id v3 = v2;
  id v6 = objc_msgSend(v3, sel_navigationController);
  if (v6)
  {
    oslog = v6;
    [v6 pushViewController:a1 animated:a2 & 1];
  }
  else
  {
    if (qword_1EAD6D4F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1E0ECC010();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EAD74168);
    oslog = sub_1E0ECBFF0();
    os_log_type_t v8 = sub_1E0ECD530();
    if (os_log_type_enabled(oslog, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_1E0B26000, oslog, v8, "ClinicalAuthorizationAccountsOverviewViewController tasked to push but doesn't live in a navigation controller", v9, 2u);
      MEMORY[0x1E4E41080](v9, -1, -1);
    }
  }
}

id sub_1E0E92B58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAuthorizationAccountsOverviewViewController()
{
  return self;
}

uint64_t sub_1E0E92C2C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E92C64(uint64_t a1)
{
  return sub_1E0E917FC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1E0E92C6C()
{
  if (!qword_1EAD6F860)
  {
    type metadata accessor for HKHealthRecordsAccountsEvent(255);
    unint64_t v0 = sub_1E0ECC170();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F860);
    }
  }
}

unint64_t sub_1E0E92CD4()
{
  unint64_t result = qword_1EAD6F868;
  if (!qword_1EAD6F868)
  {
    sub_1E0E92C6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6F868);
  }
  return result;
}

unint64_t sub_1E0E92D2C()
{
  unint64_t result = qword_1EAD6F878;
  if (!qword_1EAD6F878)
  {
    sub_1E0E93100(255, &qword_1EAD6F870, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAD6F878);
  }
  return result;
}

uint64_t sub_1E0E92DB4()
{
  return objectdestroy_13Tm_0(40);
}

uint64_t sub_1E0E92DBC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1E0E1CF24;
  return sub_1E0E91E98(a1, v4, v5, v6);
}

uint64_t sub_1E0E92E70(uint64_t a1)
{
  sub_1E0E93100(0, &qword_1EAD6E4D0, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E0E92EFC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0E92F34(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1E0E08248;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAD6F890 + dword_1EAD6F890);
  return v6(a1, v4);
}

uint64_t sub_1E0E92FEC()
{
  return objectdestroy_13Tm_0(48);
}

uint64_t objectdestroy_13Tm_0(uint64_t a1)
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1E0E93040(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1E0E08248;
  return sub_1E0E9194C(a1, v4, v5, v7, v6);
}

void sub_1E0E93100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E93164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1E0ECB3C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t))(a1 + 32);
  sub_1E0ECB370();
  swift_retain();
  v10(v9, a3);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

id sub_1E0E9326C(void *a1, void *a2)
{
  id v83 = a2;
  uint64_t v3 = sub_1E0ECB3C0();
  uint64_t v82 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1E0ECB460();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v79 = v11;
  id v80 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v85 = (char *)&v71 - v13;
  sub_1E0DF2AF8();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  unint64_t v86 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v18);
  id v20 = (char *)&v71 - v19;
  uint64_t v21 = sub_1E0ECB980();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v21, v23);
  uint64_t v78 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v24, v26);
  uint64_t v84 = (char *)&v71 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27, v29);
  uint64_t v32 = (char *)&v71 - v31;
  MEMORY[0x1F4188790](v30, v33);
  uint64_t v87 = (char *)&v71 - v34;
  uint64_t v35 = a1;
  id v36 = objc_msgSend(a1, sel_startDate);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    goto LABEL_10;
  }
  uint64_t v37 = v36;
  uint64_t v74 = v8;
  uint64_t v75 = v6;
  uint64_t v72 = v7;
  uint64_t v73 = v3;
  sub_1E0ECB940();

  objc_super v38 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v38(v20, v32, v21);
  uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v76(v20, 0, 1, v21);
  uint64_t v77 = v22;
  unint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v39(v20, 1, v21) == 1)
  {
LABEL_10:
    uint64_t v70 = (uint64_t)v20;
LABEL_13:
    sub_1E0DF0AA0(v70);
    return (id)MEMORY[0x1E4FBC860];
  }
  unint64_t v40 = v87;
  v38(v87, v20, v21);
  id v41 = objc_msgSend(v35, sel_endDate);
  BOOL v42 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v21;
  if (!v41)
  {
    uint64_t v44 = v86;
    v76(v86, 1, 1, (uint64_t)v42);
    goto LABEL_12;
  }
  uint64_t v43 = v41;
  sub_1E0ECB940();

  uint64_t v44 = v86;
  v38(v86, v32, (uint64_t)v42);
  v76(v44, 0, 1, (uint64_t)v42);
  if (v39(v44, 1, (uint64_t)v42) == 1)
  {
LABEL_12:
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v77 + 8))(v40, v42);
    uint64_t v70 = (uint64_t)v44;
    goto LABEL_13;
  }
  id v45 = v84;
  v38(v84, v44, (uint64_t)v42);
  uint64_t v46 = self;
  unint64_t v86 = (char *)objc_msgSend(v46, sel_configurationForZoomLevel_, v83);
  id v47 = objc_msgSend(v86, sel_seriesPointIntervalComponentsAtResolution_, 0);
  int64_t v48 = v85;
  sub_1E0ECB410();

  id result = objc_msgSend(v46, sel_defaultCalendar);
  id v83 = result;
  if (result)
  {
    uint64_t v50 = *(void (**)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v77 + 16);
    v50(v32, v40, v42);
    uint64_t v76 = v42;
    v50(v78, v45, v42);
    sub_1E0ECB390();
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = MEMORY[0x1E4FBC860];
    id v52 = (uint64_t *)(v51 + 16);
    uint64_t v78 = (char *)sub_1E0ECB360();
    uint64_t v53 = (void *)sub_1E0ECB400();
    uint64_t v54 = v74;
    uint64_t v55 = v80;
    uint64_t v56 = v72;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v80, v48, v72);
    unint64_t v57 = (*(unsigned __int8 *)(v54 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    unint64_t v58 = (v79 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v59 = swift_allocObject();
    CGPoint v60 = v81;
    *(void *)(v59 + 16) = v81;
    (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v59 + v57, v55, v56);
    *(void *)(v59 + v58) = v51;
    aBlock[4] = sub_1E0E941D4;
    aBlock[5] = v59;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E0E93164;
    aBlock[3] = &block_descriptor_16;
    id v61 = _Block_copy(aBlock);
    id v62 = v60;
    swift_retain();
    swift_release();
    id v63 = v83;
    id v64 = v78;
    objc_msgSend(v83, sel_hk_enumerateDateInterval_byDateComponents_block_, v78, v53, v61);
    _Block_release(v61);

    swift_beginAccess();
    uint64_t v65 = *v52;
    if ((unint64_t)*v52 >> 62)
    {
      sub_1E0DFAB14();
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1E0ECD900();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_1E0ECD9F0();
      sub_1E0DFAB14();
      uint64_t v66 = v65;
    }
    uint64_t v67 = v82;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v75, v73);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v85, v56);
    id v68 = v76;
    uint64_t v69 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v77 + 8);
    v69(v84, v76);
    v69(v87, v68);
    swift_release();
    return (id)v66;
  }
  __break(1u);
  return result;
}

void sub_1E0E93A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = sub_1E0E93BA4();
  swift_beginAccess();
  id v7 = v6;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((*(void *)(a5 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a5 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1E0ECD350();
  sub_1E0ECD370();
  sub_1E0ECD340();
  swift_endAccess();
}

id sub_1E0E93BA4()
{
  uint64_t v1 = sub_1E0ECB980();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_countUnit);
  uint64_t v20 = v0;
  id v7 = sub_1E0E9951C();
  id v8 = sub_1E0E996FC();
  id v9 = objc_msgSend(objc_allocWithZone((Class)HKInteractiveChartSinglePointData), sel_init);
  objc_msgSend(v9, sel_setUnit_, v6);
  if (v7) {
    objc_msgSend(v7, sel_doubleValueForUnit_, v6);
  }
  else {
    double v10 = -1.79769313e308;
  }
  objc_msgSend(v9, sel_setMinValue_, v10);
  if (v8) {
    objc_msgSend(v8, sel_doubleValueForUnit_, v6);
  }
  else {
    double v11 = 1.79769313e308;
  }
  objc_msgSend(v9, sel_setMaxValue_, v11);
  objc_msgSend(v9, sel_setRepresentsRange_, 1);
  objc_msgSend(v9, sel_setRecordCount_, 1);
  uint64_t v12 = (void *)sub_1E0ECB400();
  objc_msgSend(v9, sel_setStatisticsInterval_, v12);

  id v13 = objc_msgSend(objc_allocWithZone((Class)HKQuantityTypeDataSourceValue), sel_init);
  objc_msgSend(v13, sel_setMinQuantity_, v7);
  objc_msgSend(v13, sel_setMaxQuantity_, v8);
  sub_1E0ECB3A0();
  uint64_t v14 = (void *)sub_1E0ECB920();
  id v19 = v8;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v5, v1);
  objc_msgSend(v13, sel_setStartDate_, v14);

  sub_1E0ECB380();
  uint64_t v16 = (void *)sub_1E0ECB920();
  v15(v5, v1);
  objc_msgSend(v13, sel_setEndDate_, v16);

  id v17 = objc_msgSend(objc_allocWithZone((Class)HKHealthChartPoint), sel_initWithDataSourceValue_options_unit_displayType_, v13, 12, v6, *(void *)(v20 + OBJC_IVAR____TtC8HealthUI48BalanceClassificationDateRangeDataSourceDelegate_baseDisplayType));
  objc_msgSend(v17, sel_setUserInfo_, v9);

  return v17;
}

id sub_1E0E93EF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E93FC0()
{
  return type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate();
}

uint64_t type metadata accessor for BalanceClassificationDateRangeDataSourceDelegate()
{
  uint64_t result = qword_1EAD6F8C8;
  if (!qword_1EAD6F8C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0E94014()
{
  uint64_t result = sub_1E0ECBEA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1E0E940B4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0E940EC()
{
  uint64_t v1 = sub_1E0ECB460();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

void sub_1E0E941D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1E0ECB460() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1E0E93A60(a1, a2, v7, v2 + v6, v8);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

double CALayer.center.getter()
{
  objc_msgSend(v0, sel_frame);
  CGFloat x = v7.origin.x;
  CGFloat y = v7.origin.y;
  CGFloat width = v7.size.width;
  CGFloat height = v7.size.height;
  double MidX = CGRectGetMidX(v7);
  v8.origin.CGFloat x = x;
  v8.origin.CGFloat y = y;
  v8.size.CGFloat width = width;
  v8.size.CGFloat height = height;
  CGRectGetMidY(v8);
  return MidX;
}

void sub_1E0E9430C(id *a1@<X0>, CGFloat *a2@<X8>)
{
  objc_msgSend(*a1, sel_frame);
  CGFloat x = v9.origin.x;
  CGFloat y = v9.origin.y;
  CGFloat width = v9.size.width;
  CGFloat height = v9.size.height;
  CGFloat MidX = CGRectGetMidX(v9);
  v10.origin.CGFloat x = x;
  v10.origin.CGFloat y = y;
  v10.size.CGFloat width = width;
  v10.size.CGFloat height = height;
  CGFloat MidY = CGRectGetMidY(v10);
  *a2 = MidX;
  a2[1] = MidY;
}

id CALayer.center.setter(double a1, double a2)
{
  objc_msgSend(v2, sel_frame);
  return objc_msgSend(v2, sel_setFrame_, a1 - v5 * 0.5, a2 - v6 * 0.5);
}

id (*CALayer.center.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  objc_msgSend(v1, sel_frame);
  CGFloat x = v10.origin.x;
  CGFloat y = v10.origin.y;
  CGFloat width = v10.size.width;
  CGFloat height = v10.size.height;
  CGFloat MidX = CGRectGetMidX(v10);
  v11.origin.CGFloat x = x;
  v11.origin.CGFloat y = y;
  v11.size.CGFloat width = width;
  v11.size.CGFloat height = height;
  CGFloat MidY = CGRectGetMidY(v11);
  *(CGFloat *)a1 = MidX;
  *(CGFloat *)(a1 + 8) = MidY;
  return sub_1E0E94480;
}

id sub_1E0E94480(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  double v2 = *(double *)a1;
  double v3 = *(double *)(a1 + 8);
  objc_msgSend(v1, sel_frame);
  return objc_msgSend(v1, sel_setFrame_, v2 - v4 * 0.5, v3 - v5 * 0.5);
}

id sub_1E0E944F0(double *a1, id *a2)
{
  double v2 = *a1;
  double v3 = a1[1];
  id v4 = *a2;
  objc_msgSend(*a2, sel_frame);
  return objc_msgSend(v4, sel_setFrame_, v2 - v5 * 0.5, v3 - v6 * 0.5);
}

uint64_t sub_1E0E9455C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECC010();
  uint64_t v39 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v3);
  double v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E0ECBDF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  CGRect v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v9, v12);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v33 - v17;
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19((char *)&v33 - v17, v1, v6);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v18, v6);
  if (v20 == *MEMORY[0x1E4F65900])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658F0])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658E8])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658F8])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658E0])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1)
    {
LABEL_15:
      id v21 = (id)qword_1EAD740B8;
      uint64_t v22 = sub_1E0ECB680();

      return v22;
    }
LABEL_21:
    swift_once();
    goto LABEL_15;
  }
  sub_1E0ECBFD0();
  v19(v15, v1, v6);
  uint64_t v24 = sub_1E0ECBFF0();
  os_log_type_t v25 = sub_1E0ECD530();
  int v38 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    os_log_t v36 = v24;
    uint64_t v27 = v26;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v40 = v37;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v34 = v27 + 4;
    uint64_t v42 = sub_1E0DED7E4(0xD000000000000016, 0x80000001E0F2CC00, &v40);
    uint64_t v35 = &v43;
    sub_1E0ECD6D0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v34 = v27 + 14;
    v19(v11, (uint64_t)v15, v6);
    uint64_t v28 = sub_1E0ECD200();
    uint64_t v42 = sub_1E0DED7E4(v28, v29, &v40);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v15, v6);
    os_log_t v31 = v36;
    _os_log_impl(&dword_1E0B26000, v36, (os_log_type_t)v38, "[%{public}s] unknown sleeping sample data type: %s", (uint8_t *)v27, 0x16u);
    uint64_t v32 = v37;
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v32, -1, -1);
    MEMORY[0x1E4E41080](v27, -1, -1);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v15, v6);
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
  v30(v18, v6);
  return 0;
}

uint64_t sub_1E0E94C14()
{
  sub_1E0DF2BA8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1E0F06EB0;
  sub_1E0E9455C();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v2 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithString_, v2);

  sub_1E0E94E2C();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v5 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithString_, v5);

  id v7 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v3, v6);
  *(void *)(v0 + 32) = v7;
  uint64_t v13 = v0;
  sub_1E0ECD340();
  id v8 = sub_1E0E95ACC();
  if (v8)
  {
    id v9 = v8;
    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E0ECD350();
    }
    sub_1E0ECD370();
    sub_1E0ECD340();
  }
  id v10 = sub_1E0E95C78();
  if (v10)
  {
    id v11 = v10;
    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E0ECD350();
    }
    sub_1E0ECD370();
    sub_1E0ECD340();
  }
  return v13;
}

uint64_t sub_1E0E94E2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECC010();
  uint64_t v39 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v3);
  double v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E0ECBDF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v9, v12);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v33 - v17;
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19((char *)&v33 - v17, v1, v6);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v18, v6);
  if (v20 == *MEMORY[0x1E4F65900])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658F0])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658E8])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658F8])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if (v20 == *MEMORY[0x1E4F658E0])
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1)
    {
LABEL_15:
      id v21 = (id)qword_1EAD740B8;
      uint64_t v22 = sub_1E0ECB680();

      return v22;
    }
LABEL_21:
    swift_once();
    goto LABEL_15;
  }
  sub_1E0ECBFD0();
  v19(v15, v1, v6);
  uint64_t v24 = sub_1E0ECBFF0();
  os_log_type_t v25 = sub_1E0ECD530();
  int v38 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    os_log_t v36 = v24;
    uint64_t v27 = v26;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v40 = v37;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v34 = v27 + 4;
    uint64_t v42 = sub_1E0DED7E4(0xD000000000000016, 0x80000001E0F2CC00, &v40);
    uint64_t v35 = &v43;
    sub_1E0ECD6D0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v34 = v27 + 14;
    v19(v11, (uint64_t)v15, v6);
    uint64_t v28 = sub_1E0ECD200();
    uint64_t v42 = sub_1E0DED7E4(v28, v29, &v40);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v15, v6);
    os_log_t v31 = v36;
    _os_log_impl(&dword_1E0B26000, v36, (os_log_type_t)v38, "[%{public}s] unknown sleeping sample data type: %s", (uint8_t *)v27, 0x16u);
    uint64_t v32 = v37;
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v32, -1, -1);
    MEMORY[0x1E4E41080](v27, -1, -1);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v15, v6);
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
  v30(v18, v6);
  return 0;
}

uint64_t sub_1E0E954E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBDF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E4F65900])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 == *MEMORY[0x1E4F658F0])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 != *MEMORY[0x1E4F658F8])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_9:
  id v8 = (id)qword_1EAD740B8;
  uint64_t v9 = sub_1E0ECB680();

  return v9;
}

uint64_t sub_1E0E957D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBDF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E4F65900])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 == *MEMORY[0x1E4F658F0])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 != *MEMORY[0x1E4F658E8])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_9:
  id v8 = (id)qword_1EAD740B8;
  uint64_t v9 = sub_1E0ECB680();

  return v9;
}

id sub_1E0E95ACC()
{
  sub_1E0E954E4();
  id v1 = v0;
  if (v0)
  {
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EAD740B8;
    sub_1E0ECB680();

    id v3 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v4 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v3, sel_initWithString_, v4, 0xE000000000000000);

    id v6 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    int v7 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithString_, v7);

    id v1 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v5, v8);
  }
  return v1;
}

id sub_1E0E95C78()
{
  sub_1E0E957D8();
  id v1 = v0;
  if (v0)
  {
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EAD740B8;
    sub_1E0ECB680();

    id v3 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v4 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v3, sel_initWithString_, v4, 0xE000000000000000);

    id v6 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    int v7 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithString_, v7);

    id v1 = objc_msgSend(objc_allocWithZone((Class)HKInfographicContentItem), sel_initWithTitle_description_, v5, v8);
  }
  return v1;
}

Swift::Bool __swiftcall EnableSmallCapsForUnits()()
{
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EAD740B8;
  uint64_t v1 = sub_1E0ECB680();
  uint64_t v3 = v2;

  if (v1 == 49 && v3 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1E0ECD9E0();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t sub_1E0E95F34(uint64_t a1, uint64_t a2, char a3, unint64_t a4, void *a5)
{
  int v9 = a3 & 1;
  if (a4 >> 62) {
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1E0ECD910())
  {
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v12 = v11 - 4;
      if ((a4 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v13 = (char *)MEMORY[0x1E4E3EF00](v11 - 4, a4);
      BOOL v14 = __OFADD__(v12, 1);
      uint64_t v15 = v11 - 3;
      if (v14) {
        goto LABEL_18;
      }
LABEL_11:
      uint64_t v16 = (double *)&v13[*a5];
      int v17 = *((unsigned __int8 *)v16 + 16);
      if ((v9 | v17))
      {
        int v9 = v9 ^ 1 | v17;
        a1 = *(uint64_t *)v16;
        a2 = *((uint64_t *)v16 + 1);
      }
      else
      {
        double v19 = *v16;
        double v18 = v16[1];

        double v20 = *(double *)&a2;
        double v21 = *(double *)&a1;
        if (v19 < *(double *)&a1) {
          double v21 = v19;
        }
        if (v18 >= *(double *)&a2) {
          double v20 = v18;
        }
        if (v21 > v20) {
          goto LABEL_19;
        }
        int v9 = 0;
        *(double *)&a1 = v21;
        *(double *)&a2 = v20;
      }
      ++v11;
      if (v15 == v10) {
        goto LABEL_21;
      }
    }
    uint64_t v13 = (char *)*(id *)(a4 + 8 * v11);
    BOOL v14 = __OFADD__(v12, 1);
    uint64_t v15 = v11 - 3;
    if (!v14) {
      goto LABEL_11;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1E0E9608C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      uint64_t v3 = 0;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      while ((a1 & 0xC000000000000001) == 0)
      {
        uint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_18;
        }
        uint64_t v10 = *(void *)(a1 + 32 + 8 * v3) + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange;
        if ((*(unsigned char *)(v10 + 16) & 1) == 0)
        {
          double v7 = *(double *)v10;
          double v8 = *(double *)(v10 + 8);
LABEL_13:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v4 = sub_1E0E0BD88(0, v4[2] + 1, 1, v4);
          }
          unint64_t v12 = v4[2];
          unint64_t v11 = v4[3];
          if (v12 >= v11 >> 1) {
            uint64_t v4 = sub_1E0E0BD88((void *)(v11 > 1), v12 + 1, 1, v4);
          }
          _OWORD v4[2] = v12 + 1;
          *(double *)&v4[v12 + 4] = (v7 + v8) * 0.5;
        }
LABEL_5:
        uint64_t v3 = v6;
        if (v6 == v2) {
          goto LABEL_21;
        }
      }
      uint64_t v5 = MEMORY[0x1E4E3EF00](v3, a1);
      uint64_t v6 = v3 + 1;
      if (!__OFADD__(v3, 1)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1E0ECD910();
      if (!v2) {
        goto LABEL_20;
      }
    }
    double v7 = *(double *)(v5 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange);
    double v8 = *(double *)(v5 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange + 8);
    char v9 = *(unsigned char *)(v5 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange + 16);
    swift_unknownObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_5;
  }
LABEL_20:
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_21:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1E0E9623C(unint64_t a1, uint64_t a2)
{
  sub_1E0E97CC0(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  double v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  unint64_t v11 = (char *)&v37 - v10;
  unint64_t v12 = sub_1E0E45D68(a1);
  uint64_t v13 = (uint64_t *)MEMORY[0x1E4FBC860];
  if (!v12) {
    return (uint64_t)v13;
  }
  unint64_t v14 = v12;
  if (v12 >> 62) {
    goto LABEL_55;
  }
  uint64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  while (1)
  {
    uint64_t result = sub_1E0E96E44(v14, (uint64_t)v11);
    int v38 = v13;
    if (a2 != 1) {
      break;
    }
    if (v15 < 1) {
      goto LABEL_59;
    }
    if ((v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      a2 = 0;
      while (1)
      {
        uint64_t v20 = MEMORY[0x1E4E3EF00](v13, v14);
        uint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
        BOOL v18 = __OFADD__(a2, v21);
        a2 += v21;
        if (v18) {
          break;
        }
        uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
        swift_unknownObjectRelease();
        BOOL v18 = __OFADD__(a2, v22);
        a2 += v22;
        if (v18) {
          goto LABEL_50;
        }
        uint64_t v13 = (uint64_t *)((char *)v13 + 1);
        if ((uint64_t *)v15 == v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    a2 = 0;
    unint64_t v29 = (void *)(v14 + 32);
    while (1)
    {
      uint64_t v30 = *(void *)(*v29 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
      BOOL v18 = __OFADD__(a2, v30);
      uint64_t v31 = a2 + v30;
      if (v18) {
        break;
      }
      uint64_t v32 = *(void *)(*v29 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
      a2 = v31 + v32;
      if (__OFADD__(v31, v32)) {
        goto LABEL_54;
      }
      ++v29;
      if (!--v15)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        uint64_t v33 = sub_1E0ECB980();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
        id v34 = sub_1E0E96CEC(5, 0, a2, (uint64_t)v8);
        sub_1E0E97DB8((uint64_t)v8, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928]);
LABEL_42:
        id v28 = v34;
LABEL_43:
        os_log_t v36 = v28;
        MEMORY[0x1E4E3E9E0]();
        if (*(void *)(((unint64_t)v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v38 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_1E0ECD350();
        sub_1E0ECD370();
        sub_1E0ECD340();

LABEL_46:
        sub_1E0E97DB8((uint64_t)v11, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928]);
        return (uint64_t)v38;
      }
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_56;
    }
  }
  if (a2)
  {
LABEL_39:
    sub_1E0E97DB8((uint64_t)v11, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928]);
    swift_bridgeObjectRelease();
    return (uint64_t)v38;
  }
  if (v15 >= 1)
  {
    if ((v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      a2 = 0;
      double v8 = 0;
      uint64_t v13 = &OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount;
      do
      {
        uint64_t v17 = *(void *)(MEMORY[0x1E4E3EF00](a2, v14)
                        + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
        swift_unknownObjectRelease();
        BOOL v18 = __OFADD__(v8, v17);
        v8 += v17;
        if (v18)
        {
          __break(1u);
          goto LABEL_48;
        }
        ++a2;
      }
      while (v15 != a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v13 = 0;
      a2 = 0;
      while (1)
      {
        uint64_t v19 = *(void *)(MEMORY[0x1E4E3EF00](v13, v14)
                        + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
        swift_unknownObjectRelease();
        BOOL v18 = __OFADD__(a2, v19);
        a2 += v19;
        if (v18) {
          goto LABEL_49;
        }
        uint64_t v13 = (uint64_t *)((char *)v13 + 1);
        if ((uint64_t *)v15 == v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
    }
    double v8 = 0;
    uint64_t v23 = (void *)(v14 + 32);
    uint64_t v24 = (void *)(v14 + 32);
    uint64_t v25 = v15;
    while (1)
    {
      uint64_t v26 = *(void *)(*v24 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyReflectiveCount);
      BOOL v18 = __OFADD__(v8, v26);
      v8 += v26;
      if (v18) {
        break;
      }
      ++v24;
      if (!--v25)
      {
        a2 = 0;
        while (1)
        {
          uint64_t v27 = *(void *)(*v23 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryReflectiveCount);
          BOOL v18 = __OFADD__(a2, v27);
          a2 += v27;
          if (v18) {
            goto LABEL_53;
          }
          ++v23;
          if (!--v15)
          {
LABEL_28:
            if ((uint64_t)v8 <= 0)
            {
              if (a2 < 1) {
                goto LABEL_39;
              }
              id v35 = sub_1E0E96918(v14, a2, (uint64_t)v11);
            }
            else
            {
              if (a2 >= 1)
              {
                uint64_t result = swift_bridgeObjectRelease();
                if (__OFADD__(v8, a2)) {
                  goto LABEL_60;
                }
                id v28 = sub_1E0E96CEC(5, 0, (uint64_t)&v8[a2], (uint64_t)v11);
                goto LABEL_43;
              }
              id v35 = sub_1E0E967F0(v14, (uint64_t)v8, (uint64_t)v11);
            }
            id v34 = v35;
            swift_bridgeObjectRelease();
            if (!v34) {
              goto LABEL_46;
            }
            goto LABEL_42;
          }
        }
      }
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

id sub_1E0E967F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 < 1) {
    return 0;
  }
  uint64_t v4 = 0x6E776F6E6B6E55;
  if (a2 == 1)
  {
    uint64_t v5 = sub_1E0E95F34(0, 0, 1, a1, &OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dailyValenceRange);
    if ((v7 & 1) != 0
      || (id v8 = HKUILocalizedStringForValenceRange(*(double *)&v5, v6)) == 0)
    {
      uint64_t v11 = 0xE700000000000000;
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v9 = v8;
      uint64_t v4 = sub_1E0ECD1D0();
      uint64_t v11 = v10;

      uint64_t v12 = 0;
    }
  }
  else
  {
    uint64_t v14 = sub_1E0E97A04(a1);
    if ((v16 & 1) != 0
      || (id v17 = HKUILocalizedStringForValenceRange(*(double *)&v14, v15)) == 0)
    {
      uint64_t v11 = 0xE700000000000000;
    }
    else
    {
      BOOL v18 = v17;
      uint64_t v4 = sub_1E0ECD1D0();
      uint64_t v11 = v19;
    }
    uint64_t v12 = 3;
  }
  id v13 = sub_1E0E96A10(v12, 30, v4, v11, a3);
  swift_bridgeObjectRelease();
  return v13;
}

id sub_1E0E96918(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 < 1) {
    return 0;
  }
  if (a2 != 1) {
    return sub_1E0E96CEC(0, 32, a2, a3);
  }
  uint64_t v4 = 0x6E776F6E6B6E55;
  uint64_t v5 = sub_1E0E95F34(0, 0, 1, a1, &OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_momentaryValenceRange);
  if ((v7 & 1) != 0
    || (id v8 = HKUILocalizedStringForValenceRange(*(double *)&v5, v6)) == 0)
  {
    uint64_t v11 = 0xE700000000000000;
  }
  else
  {
    uint64_t v9 = v8;
    uint64_t v4 = sub_1E0ECD1D0();
    uint64_t v11 = v10;
  }
  id v12 = sub_1E0E96A10(0, 31, v4, v11, a3);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1E0E96A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, a1);
  objc_msgSend(v8, sel_setDataType_, a2);
  sub_1E0E97CC0(0, (unint64_t *)&qword_1EAD69A20, (uint64_t (*)(uint64_t))sub_1E0E1AC68, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F06210;
  uint64_t v10 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  id v11 = v10;
  id v12 = objc_msgSend(v5, sel_majorFont);
  *(void *)(inited + 64) = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD69A00);
  if (!v12) {
    id v12 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  }
  id v13 = (void **)MEMORY[0x1E4FB0700];
  *(void *)(inited + 40) = v12;
  uint64_t v14 = *v13;
  *(void *)(inited + 72) = *v13;
  double v15 = self;
  id v16 = v14;
  id v17 = objc_msgSend(v15, sel_hk_chartLollipopValueColor);
  *(void *)(inited + 104) = sub_1E0DF2C04(0, &qword_1EAD69A10);
  *(void *)(inited + 80) = v17;
  sub_1E0E3FB40(inited);
  id v18 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1E0E97EBC((unint64_t *)&qword_1EAD699D0, type metadata accessor for Key);
  uint64_t v20 = (void *)sub_1E0ECCFC0();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  objc_msgSend(v8, sel_setAttributedString_, v21);
  (*(void (**)(id, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v5) + 0x98))(v8, a5);
  return v8;
}

id sub_1E0E96CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(objc_allocWithZone((Class)HKSelectedRangeData), sel_initWithStatisticsType_, a1);
  objc_msgSend(v8, sel_setDataType_, a2);
  id v9 = objc_msgSend(self, sel_countUnit);
  id v10 = objc_msgSend(v4, sel_attributedStringWithValue_unit_showUnit_, v9, 1, (double)a3);

  objc_msgSend(v8, sel_setAttributedString_, v10);
  id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a3);
  objc_msgSend(v8, sel_setValueAsNumber_, v11);

  (*(void (**)(id, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x98))(v8, a4);
  return v8;
}

uint64_t sub_1E0E96E44@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v111 = sub_1E0ECB980();
  uint64_t v95 = *(void *)(v111 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v111, v4);
  long long v107 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  uint64_t v106 = (char *)&v88 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v105 = (char *)&v88 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  long long v104 = (char *)&v88 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14, v16);
  uint64_t v103 = (char *)&v88 - v18;
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v120 = (char *)&v88 - v20;
  uint64_t v21 = sub_1E0ECB3C0();
  uint64_t v115 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21, v22);
  uint64_t v119 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v25);
  uint64_t v27 = (char *)&v88 - v26;
  sub_1E0E97CC0(0, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  uint64_t v30 = MEMORY[0x1F4188790](v28 - 8, v29);
  uint64_t v122 = (uint64_t)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v30, v32);
  unint64_t v108 = (char *)&v88 - v34;
  uint64_t v36 = MEMORY[0x1F4188790](v33, v35);
  int v38 = (char *)&v88 - v37;
  uint64_t v40 = MEMORY[0x1F4188790](v36, v39);
  uint64_t v109 = (uint64_t)&v88 - v41;
  uint64_t v43 = MEMORY[0x1F4188790](v40, v42);
  id v45 = (char *)&v88 - v44;
  MEMORY[0x1F4188790](v43, v46);
  int64_t v48 = (char *)&v88 - v47;
  unint64_t v121 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v49 = *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v110 = v49;
    if (v49) {
      goto LABEL_3;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1E0ECD910();
  uint64_t v110 = result;
  if (!result) {
    goto LABEL_32;
  }
LABEL_3:
  unint64_t v118 = v121 & 0xC000000000000001;
  if ((v121 & 0xC000000000000001) != 0)
  {
    id v87 = (id)MEMORY[0x1E4E3EF00](0, v121);
  }
  else
  {
    if (!*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_37;
    }
    id v87 = *(id *)(v121 + 32);
  }
  uint64_t v51 = v87;
  swift_bridgeObjectRelease();
  if ((*((unsigned char *)v51 + OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_isSharingPreview) & 1) == 0)
  {
    uint64_t v52 = a2;
    id v94 = v51;
    uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
    uint64_t v117 = v115 + 56;
    v116(v45, 1, 1, v21);
    uint64_t v53 = v109;
    uint64_t result = sub_1E0E97D24((uint64_t)v45, v109);
    if (v110 >= 1)
    {
      uint64_t v90 = v45;
      uint64_t v91 = v38;
      uint64_t v92 = v48;
      CGRect v89 = v27;
      uint64_t v93 = v52;
      uint64_t v54 = (void *)(v115 + 48);
      uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v115 + 32);
      uint64_t v98 = (void (**)(char *, char *, uint64_t))(v95 + 16);
      uint64_t v97 = (void (**)(char *, uint64_t))(v95 + 8);
      uint64_t v102 = (void (**)(char *, uint64_t))(v115 + 8);
      uint64_t v96 = (void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16);
      swift_bridgeObjectRetain();
      uint64_t v55 = 0;
      uint64_t v56 = (uint64_t)v108;
      uint64_t v57 = v110;
      uint64_t v100 = v21;
      uint64_t v99 = v54;
      do
      {
        if (v118) {
          uint64_t v59 = (char *)MEMORY[0x1E4E3EF00](v55, v121);
        }
        else {
          uint64_t v59 = (char *)*(id *)(v121 + 8 * v55 + 32);
        }
        CGPoint v60 = v59;
        uint64_t v61 = v122;
        sub_1E0E97D24(v53, v122);
        uint64_t v115 = *v54;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v115)(v61, 1, v21) == 1)
        {
          sub_1E0E97DB8(v122, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60]);
          unint64_t v58 = v60;
          (*v96)(v56, (uint64_t)&v60[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dateInterval], v21);
        }
        else
        {
          (*v101)(v119, v122, v21);
          id v62 = v103;
          sub_1E0ECB3A0();
          uint64_t v113 = &v60[OBJC_IVAR____TtC8HealthUI25StateOfMindCoordinateInfo_dateInterval];
          uint64_t v114 = v60;
          id v63 = v104;
          sub_1E0ECB3A0();
          sub_1E0E97EBC(qword_1EAD6F8E0, MEMORY[0x1E4F27928]);
          uint64_t v64 = v111;
          char v65 = sub_1E0ECD0C0();
          uint64_t v66 = *v98;
          double v112 = *v98;
          if (v65) {
            uint64_t v67 = v63;
          }
          else {
            uint64_t v67 = v62;
          }
          v66(v120, v67, v64);
          id v68 = *v97;
          (*v97)(v63, v64);
          v68(v62, v64);
          uint64_t v69 = v106;
          sub_1E0ECB380();
          uint64_t v70 = v107;
          uint64_t v71 = v100;
          sub_1E0ECB380();
          if (sub_1E0ECD0D0()) {
            uint64_t v72 = v70;
          }
          else {
            uint64_t v72 = v69;
          }
          v112(v105, v72, v64);
          uint64_t v56 = (uint64_t)v108;
          uint64_t v73 = v70;
          uint64_t v54 = v99;
          v68(v73, v64);
          uint64_t v74 = v64;
          unint64_t v58 = v114;
          v68(v69, v74);
          uint64_t v57 = v110;
          sub_1E0ECB390();
          uint64_t v53 = v109;
          uint64_t v21 = v71;
          (*v102)(v119, v71);
        }
        v116((char *)v56, 0, 1, v21);

        ++v55;
        sub_1E0E97DB8(v53, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60]);
        sub_1E0E97E28(v56, v53);
      }
      while (v57 != v55);
      swift_bridgeObjectRelease();
      uint64_t v75 = v53;
      uint64_t v76 = (uint64_t)v92;
      sub_1E0E97E28(v75, (uint64_t)v92);
      sub_1E0E97DB8((uint64_t)v90, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60]);
      uint64_t v77 = (uint64_t)v91;
      sub_1E0E97D24(v76, (uint64_t)v91);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v115)(v77, 1, v21) == 1)
      {
        uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26E60];
        sub_1E0E97DB8(v76, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60]);

        sub_1E0E97DB8(v77, &qword_1EAD6F8D8, v78);
        uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
        uint64_t v80 = v93;
      }
      else
      {
        objc_super v81 = v89;
        (*v101)(v89, v77, v21);
        sub_1E0ECB3B0();
        uint64_t v82 = v93;
        if (v83 <= 86401.0)
        {
          sub_1E0ECB3A0();

          (*v102)(v81, v21);
          sub_1E0E97DB8(v76, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60]);
          uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
          uint64_t v80 = v82;
          uint64_t v84 = 0;
          return v79(v80, v84, 1, v111);
        }

        (*v102)(v81, v21);
        sub_1E0E97DB8(v76, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60]);
        uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
        uint64_t v80 = v82;
      }
      uint64_t v84 = 1;
      return v79(v80, v84, 1, v111);
    }
LABEL_37:
    __break(1u);
    return result;
  }

LABEL_33:
  uint64_t v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56);
  uint64_t v86 = v111;
  return v85(a2, 1, 1, v86);
}

id StateOfMindChartFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id StateOfMindChartFormatter.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StateOfMindChartFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E97A04(unint64_t a1)
{
  id v1 = sub_1E0E9608C(a1);
  uint64_t v2 = v1[2];
  if (!v2)
  {
    swift_bridgeObjectRelease();
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if (v2 == 1)
  {
    uint64_t v3 = 0;
    double v4 = 0.0;
  }
  else
  {
    uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v6 = (double *)(v1 + 5);
    double v4 = 0.0;
    uint64_t v7 = v2 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v4 = v4 + *(v6 - 1) + *v6;
      v6 += 2;
      v7 -= 2;
    }
    while (v7);
    if (v2 == v3) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = v2 - v3;
  uint64_t v9 = (double *)&v1[v3 + 4];
  do
  {
    double v10 = *v9++;
    double v4 = v4 + v10;
    --v8;
  }
  while (v8);
LABEL_10:
  swift_bridgeObjectRelease();
  *(double *)&uint64_t result = v4 / (double)v2;
  return result;
}

uint64_t sub_1E0E97ADC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_integerValue);
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  sub_1E0E97CC0(0, (unint64_t *)&qword_1EAD69A30, (uint64_t (*)(uint64_t))sub_1E0E1AB68, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v3 + 16) = xmmword_1E0F07C90;
  uint64_t v5 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = v1;
  uint64_t v6 = sub_1E0ECD1A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for StateOfMindChartFormatter()
{
  return self;
}

uint64_t method lookup function for StateOfMindChartFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StateOfMindChartFormatter);
}

uint64_t dispatch thunk of StateOfMindChartFormatter.addTapOutBlock(for:tapOutDate:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

void sub_1E0E97CC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1E0E97D24(uint64_t a1, uint64_t a2)
{
  sub_1E0E97CC0(0, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E97DB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1E0E97CC0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1E0E97E28(uint64_t a1, uint64_t a2)
{
  sub_1E0E97CC0(0, &qword_1EAD6F8D8, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0E97EBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OptionSetIterator.init(element:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for OptionSetIterator();
  uint64_t v7 = a3 + *(int *)(v6 + 36);
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  *(void *)(a3 + *(int *)(v6 + 40)) = 1;
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v8(a3, a1, a2);
}

uint64_t type metadata accessor for OptionSetIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1E0E97FB0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1, v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (unsigned char *)(v7 + *(int *)(v6 + 44));
  if (v8[8] != 1) {
    return *(void *)v8;
  }
  (*(void (**)(char *))(v3 + 16))(v5);
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1E0ECD2D0();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
  uint64_t result = v12;
  *(void *)unint64_t v8 = v12;
  v8[8] = 0;
  return result;
}

uint64_t OptionSetIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_1E0E97FB0(a1))
  {
    uint64_t v5 = *(int *)(a1 + 40);
    uint64_t v6 = sub_1E0E97FB0(a1);
    uint64_t v7 = *(void *)(v2 + v5);
    if ((v7 & v6) != 0)
    {
LABEL_6:
      uint64_t v11 = sub_1E0E97FB0(a1);
      uint64_t v12 = v2 + *(int *)(a1 + 36);
      *(void *)uint64_t v12 = v11 & ~v7;
      *(unsigned char *)(v12 + 8) = 0;
      sub_1E0ECD2E0();
      uint64_t result = type metadata accessor for OptionSetIterator();
      *(void *)(v2 + *(int *)(result + 40)) *= 2;
      return result;
    }
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = type metadata accessor for OptionSetIterator();
    while (1)
    {
      *(void *)(v2 + *(int *)(v9 + 40)) *= 2;
      if (!sub_1E0E97FB0(a1)) {
        break;
      }
      uint64_t v10 = sub_1E0E97FB0(a1);
      uint64_t v7 = *(void *)(v2 + v5);
      if ((v7 & v10) != 0) {
        goto LABEL_6;
      }
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 16);
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  return v14(a2, 1, 1, v8);
}

uint64_t OptionSet<>.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  uint64_t v9 = type metadata accessor for OptionSetIterator();
  uint64_t v10 = a3 + *(int *)(v9 + 36);
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  *(void *)(a3 + *(int *)(v9 + 40)) = 1;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, a1);
}

uint64_t sub_1E0E98360()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1E0E98408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
    *(void *)unint64_t v10 = v12;
    *(void *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1E0E98520(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1E0E9854C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1E0E985EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1E0E9868C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1E0E9872C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1E0E987CC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1E0E988E0);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_1E0E988F4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1E0E98AA0);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t HKOverlayRoomPreferredOverlay.init(stateOfMindDomain:)(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECC010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) < 0x12) {
    return a1 + 99;
  }
  sub_1E0ECBFE0();
  size_t v8 = sub_1E0ECBFF0();
  os_log_type_t v9 = sub_1E0ECD530();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v13 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_1E0DED7E4(0xD00000000000001DLL, 0x80000001E0F2CF50, &v13);
    sub_1E0ECD6D0();
    *(_WORD *)(v10 + 12) = 2048;
    uint64_t v12 = a1;
    sub_1E0ECD6D0();
    _os_log_impl(&dword_1E0B26000, v8, v9, "[%{public}s] Cannot create preferred overlay for unknown domain: %ld", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v11, -1, -1);
    MEMORY[0x1E4E41080](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return 104;
}

void sub_1E0E98CD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1E0ECBEA0();
  uint64_t v3 = *(v2 - 1);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v3 + 16))(v6, v1, v2);
  int v7 = (*(uint64_t (**)(char *, void *))(v3 + 88))(v6, v2);
  uint64_t v8 = qword_1EAD69948;
  if (v7 != *MEMORY[0x1E4F65940] && v7 != *MEMORY[0x1E4F65938]) {
    goto LABEL_10;
  }
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  uint64_t v2 = (id)qword_1EAD740B8;
  uint64_t v6 = (char *)sub_1E0ECD190();
  id v10 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v6, v2, 0);

  if (!v10)
  {
    __break(1u);
LABEL_10:
    if (v8 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EAD740B8;
    uint64_t v12 = (void *)sub_1E0ECD190();
    id v13 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v12, v11, 0);

    if (v13) {
      (*(void (**)(char *, void *))(v3 + 8))(v6, v2);
    }
    else {
      __break(1u);
    }
  }
}

uint64_t sub_1E0E98F34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBEA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E4F65940])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 == *MEMORY[0x1E4F65938])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 != *MEMORY[0x1E4F65948])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_9:
  id v8 = (id)qword_1EAD740B8;
  uint64_t v9 = sub_1E0ECB680();

  return v9;
}

uint64_t sub_1E0E99228()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBEA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E4F65940])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 == *MEMORY[0x1E4F65938])
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v7 != *MEMORY[0x1E4F65948])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_9:
  id v8 = (id)qword_1EAD740B8;
  uint64_t v9 = sub_1E0ECB680();

  return v9;
}

id sub_1E0E9951C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBEA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBEC0();
  double v8 = v7;
  double v10 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v11 == *MEMORY[0x1E4F65940])
  {
    id v12 = objc_msgSend(self, sel_countUnit);
    id v13 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v12, v10);
  }
  else
  {
    if (v11 != *MEMORY[0x1E4F65948])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 0;
    }
    id v12 = objc_msgSend(self, sel_countUnit);
    id v13 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v12, v8);
  }
  id v14 = v13;

  return v14;
}

id sub_1E0E996FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E0ECBEA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBEC0();
  double v8 = v7;
  double v10 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v11 == *MEMORY[0x1E4F65938])
  {
    id v12 = objc_msgSend(self, sel_countUnit);
    id v13 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v12, v8);
  }
  else
  {
    if (v11 != *MEMORY[0x1E4F65948])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 0;
    }
    id v12 = objc_msgSend(self, sel_countUnit);
    id v13 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v12, v10);
  }
  id v14 = v13;

  return v14;
}

uint64_t sub_1E0E998DC(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v7 = a3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      double v8 = a1(&v9, v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x1E4E3E9E0](v8);
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E0ECD350();
        }
        sub_1E0ECD370();
        sub_1E0ECD340();
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_1E0E999FC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1E0B32F68(a1, (uint64_t)v11);
  uint64_t v5 = v12;
  if (!v12)
  {
    uint64_t v10 = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v6 = __swift_project_boxed_opaque_existential_0(v11, v12);
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v6, v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = sub_1E0ECD9D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)sub_1E0ECB760();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease();
}

id sub_1E0E99B60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(long long *))(a1 + 32);
  if (a2)
  {
    *((void *)&v7 + 1) = swift_getObjectType();
    *(void *)&long long v6 = a2;
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)v3(&v6);
  swift_release();
  sub_1E0E9D12C((uint64_t)&v6, (uint64_t)qword_1EB584EC0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0B32FF4);
  return v4;
}

id BalanceChartDataSource.__allocating_init(displayType:healthStore:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithDisplayType_healthStore_, a1, a2);

  return v5;
}

char *BalanceChartDataSource.init(displayType:healthStore:)(void *a1, void *a2)
{
  uint64_t v4 = sub_1E0ECBB60();
  MEMORY[0x1F4188790](v4 - 8, v5);
  long long v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_hk_gregorianCalendarWithFirstWeekdayFromRegion);
  sub_1E0ECBB20();

  id v9 = objc_allocWithZone((Class)type metadata accessor for BalanceChartDataSource());
  uint64_t v10 = sub_1E0E99F48(a1, a2, (uint64_t)v7);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t type metadata accessor for BalanceChartDataSource()
{
  uint64_t result = qword_1EAD6F9A0;
  if (!qword_1EAD6F9A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1E0E99F48(void *a1, void *a2, uint64_t a3)
{
  id v50 = a1;
  id v51 = a2;
  v45[1] = swift_getObjectType();
  uint64_t v46 = sub_1E0ECC010();
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46, v5);
  long long v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1E0ECB9C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (uint64_t *)&v3[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
  id v14 = v3;
  sub_1E0ECB9B0();
  uint64_t v15 = sub_1E0ECB990();
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v19 = sub_1E0E9D274(5, v15, v17, v18);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = MEMORY[0x1E4E3E8E0](v19, v21, v23, v25);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  *id v13 = v26;
  v13[1] = v28;
  uint64_t v29 = &v14[OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar];
  uint64_t v30 = sub_1E0ECBB60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  uint64_t v49 = a3;
  v32(v29, a3, v30);

  uint64_t v33 = (objc_class *)type metadata accessor for BalanceChartDataSource();
  v54.receiver = v14;
  v54.super_class = v33;
  id v34 = objc_msgSendSuper2(&v54, sel_initWithDisplayType_healthStore_, v50, v51);
  sub_1E0ECBFD0();
  uint64_t v35 = (char *)v34;
  uint64_t v47 = v7;
  uint64_t v36 = sub_1E0ECBFF0();
  os_log_type_t v37 = sub_1E0ECD540();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v53 = v39;
    *(_DWORD *)uint64_t v38 = 136446466;
    v45[0] = v30;
    uint64_t v40 = sub_1E0ECDBC0();
    uint64_t v52 = sub_1E0DED7E4(v40, v41, &v53);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    uint64_t v43 = *(void *)&v35[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
    unint64_t v42 = *(void *)&v35[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1E0DED7E4(v43, v42, &v53);
    sub_1E0ECD6D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v36, v37, "[%{public}s.%s] init", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v39, -1, -1);
    MEMORY[0x1E4E41080](v38, -1, -1);

    (*(void (**)(uint64_t, void))(v31 + 8))(v49, v45[0]);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v49, v30);
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v46);
  return v35;
}

uint64_t sub_1E0E9A514(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v146 = a2;
  uint64_t v147 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v143 = sub_1E0ECBF10();
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143, v5);
  uint64_t v144 = (char *)v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_1E0ECBB60();
  uint64_t v152 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154, v7);
  char v155 = (char *)v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1E0ECBDB0();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v141 = (char *)v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1E0ECB460();
  uint64_t v162 = *(void *)(v12 - 8);
  uint64_t v163 = v12;
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  unint64_t v149 = (char *)v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v148 = (char *)v136 - v17;
  uint64_t v157 = sub_1E0ECC010();
  uint64_t v18 = *(void *)(v157 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v157, v19);
  v160 = (char *)v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v22);
  v161 = (char *)v136 - v23;
  sub_1E0E251B4();
  uint64_t v145 = v24;
  uint64_t v26 = MEMORY[0x1F4188790](v24, v25);
  uint64_t v151 = (uint64_t)v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v26, v28);
  uint64_t v159 = (uint64_t)v136 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29, v31);
  os_log_t v158 = (os_log_t)((char *)v136 - v33);
  MEMORY[0x1F4188790](v32, v34);
  uint64_t v36 = (char *)v136 - v35;
  uint64_t v37 = sub_1E0ECB980();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v40 = MEMORY[0x1F4188790](v37, v39);
  unint64_t v42 = (char *)v136 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40, v43);
  id v45 = (char *)v136 - v44;
  id v46 = objc_msgSend(a1, sel_startDate);
  sub_1E0ECB940();

  sub_1E0ECB950();
  LOBYTE(v46) = sub_1E0ECB930();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v38 + 8);
  v47(v42, v37);
  uint64_t v153 = v38 + 8;
  uint64_t v150 = v47;
  v47(v45, v37);
  uint64_t v164 = v18;
  if (v46)
  {
    sub_1E0E9BF94(a1, v36);
    sub_1E0ECBFD0();
    sub_1E0E25248((uint64_t)v36, (uint64_t)v158);
    sub_1E0E25248((uint64_t)v36, v159);
    id v48 = a1;
    id v49 = v3;
    id v50 = v48;
    id v51 = (char *)v49;
    uint64_t v52 = sub_1E0ECBFF0();
    os_log_type_t v53 = sub_1E0ECD540();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      v160 = v51;
      uint64_t v56 = v55;
      uint64_t v139 = swift_slowAlloc();
      v166 = (char *)v139;
      *(_DWORD *)uint64_t v56 = 136447746;
      int v138 = v54;
      uint64_t v57 = sub_1E0ECDBC0();
      unint64_t v140 = v36;
      uint64_t v165 = sub_1E0DED7E4(v57, v58, (uint64_t *)&v166);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v59 = *(void *)&v160[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      unint64_t v60 = *(void *)&v160[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v165 = sub_1E0DED7E4(v59, v60, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 22) = 2082;
      v136[2] = v56 + 24;
      id v61 = objc_msgSend(v50, sel_statisticsInterval);
      os_log_t v137 = v52;
      id v62 = v148;
      sub_1E0ECB410();

      sub_1E0E9CF78((unint64_t *)&unk_1EAD6F980, MEMORY[0x1E4F26F90]);
      uint64_t v63 = v163;
      uint64_t v64 = sub_1E0ECD9B0();
      unint64_t v66 = v65;
      (*(void (**)(char *, uint64_t))(v162 + 8))(v62, v63);
      uint64_t v165 = sub_1E0DED7E4(v64, v66, (uint64_t *)&v166);
      v136[1] = &v166;
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 32) = 2082;
      uint64_t v148 = (char *)(v56 + 34);
      id v67 = objc_msgSend(v50, sel_startDate);
      sub_1E0ECB940();

      sub_1E0E9CF78((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
      uint64_t v68 = sub_1E0ECD9B0();
      unint64_t v70 = v69;
      uint64_t v71 = v150;
      v150(v45, v37);
      uint64_t v165 = sub_1E0DED7E4(v68, v70, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 42) = 2082;
      id v72 = objc_msgSend(v50, sel_endDate);
      sub_1E0ECB940();

      uint64_t v73 = sub_1E0ECD9B0();
      unint64_t v75 = v74;
      v71(v45, v37);
      uint64_t v76 = v162;
      uint64_t v165 = sub_1E0DED7E4(v73, v75, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      uint64_t v36 = v140;
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 52) = 2048;
      os_log_t v77 = v158;
      uint64_t v78 = sub_1E0ECCF10();
      sub_1E0E9CE5C((uint64_t)v77);
      uint64_t v165 = v78;
      sub_1E0ECD6D0();
      *(_WORD *)(v56 + 62) = 2048;
      uint64_t v79 = v159;
      uint64_t v80 = sub_1E0ECCF10();
      sub_1E0E9CE5C(v79);
      uint64_t v165 = v80;
      uint64_t v81 = v163;
      sub_1E0ECD6D0();
      os_log_t v82 = v137;
      _os_log_impl(&dword_1E0B26000, v137, (os_log_type_t)v138, "[%{public}s.%s] Creating query: %{public}s dates: %{public}s to %{public}s day indices: %ld-%ld", (uint8_t *)v56, 0x48u);
      uint64_t v83 = v139;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v83, -1, -1);
      uint64_t v84 = v56;
      id v51 = v160;
      MEMORY[0x1E4E41080](v84, -1, -1);

      (*(void (**)(char *, uint64_t))(v164 + 8))(v161, v157);
    }
    else
    {
      sub_1E0E9CE5C(v159);
      sub_1E0E9CE5C((uint64_t)v158);

      (*(void (**)(char *, uint64_t))(v164 + 8))(v161, v157);
      uint64_t v76 = v162;
      uint64_t v81 = v163;
    }
    id v114 = objc_msgSend(v50, sel_statisticsInterval);
    uint64_t v115 = v149;
    sub_1E0ECB410();

    uint64_t v116 = sub_1E0ECB3F0();
    char v118 = v117;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v115, v81);
    sub_1E0E25248((uint64_t)v36, v151);
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v155, &v51[OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar], v154);
    if ((v118 & 1) != 0 || v116 != 1)
    {
      uint64_t v126 = (void *)swift_allocObject();
      uint64_t v127 = v146;
      uint64_t v128 = v147;
      v126[2] = v51;
      v126[3] = v127;
      uint64_t v129 = ObjectType;
      v126[4] = v128;
      v126[5] = v129;
      sub_1E0E9CEE4();
      id v131 = objc_allocWithZone(v130);
      uint64_t v132 = v51;
      swift_retain();
      uint64_t v124 = (void *)sub_1E0ECBE30();
    }
    else
    {
      sub_1E0ECBDA0();
      (*(void (**)(char *, void, uint64_t))(v142 + 104))(v144, *MEMORY[0x1E4F65980], v143);
      uint64_t v119 = (void *)swift_allocObject();
      uint64_t v120 = v146;
      uint64_t v121 = v147;
      v119[2] = v51;
      v119[3] = v120;
      uint64_t v122 = ObjectType;
      v119[4] = v121;
      v119[5] = v122;
      sub_1E0ECBF30();
      swift_allocObject();
      uint64_t v123 = v51;
      swift_retain();
      sub_1E0ECBF00();
      uint64_t v124 = (void *)sub_1E0ECBF20();
      swift_release();
    }
    id v133 = objc_msgSend(v51, sel_queryDescription);
    objc_msgSend(v124, sel_setDebugIdentifier_, v133);

    sub_1E0B32FF4(0, (unint64_t *)&qword_1EAD69930, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v134 = swift_allocObject();
    *(_OWORD *)(v134 + 16) = xmmword_1E0F06EB0;
    *(void *)(v134 + 32) = v124;
    v166 = (char *)v134;
    sub_1E0ECD340();
    uint64_t v125 = (uint64_t)v166;
    sub_1E0E9CE5C((uint64_t)v36);
  }
  else
  {
    sub_1E0ECBFD0();
    id v85 = a1;
    id v86 = v3;
    id v87 = v85;
    uint64_t v88 = (char *)v86;
    CGRect v89 = sub_1E0ECBFF0();
    os_log_type_t v90 = sub_1E0ECD540();
    int v91 = v90;
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v92 = swift_slowAlloc();
      v161 = (char *)swift_slowAlloc();
      v166 = v161;
      *(_DWORD *)uint64_t v92 = 136447234;
      LODWORD(v159) = v91;
      uint64_t v93 = sub_1E0ECDBC0();
      uint64_t v165 = sub_1E0DED7E4(v93, v94, (uint64_t *)&v166);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2080;
      os_log_t v158 = v89;
      uint64_t v96 = *(void *)&v88[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      unint64_t v95 = *(void *)&v88[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v165 = sub_1E0DED7E4(v96, v95, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 22) = 2082;
      id v97 = objc_msgSend(v87, sel_statisticsInterval);
      uint64_t v98 = v148;
      sub_1E0ECB410();

      sub_1E0E9CF78((unint64_t *)&unk_1EAD6F980, MEMORY[0x1E4F26F90]);
      uint64_t v99 = v163;
      uint64_t v100 = sub_1E0ECD9B0();
      unint64_t v102 = v101;
      (*(void (**)(char *, uint64_t))(v162 + 8))(v98, v99);
      uint64_t v165 = sub_1E0DED7E4(v100, v102, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 32) = 2082;
      uint64_t v163 = v92 + 34;
      id v103 = objc_msgSend(v87, sel_startDate);
      sub_1E0ECB940();

      sub_1E0E9CF78((unint64_t *)&unk_1EAD6EB50, MEMORY[0x1E4F27928]);
      uint64_t v104 = sub_1E0ECD9B0();
      unint64_t v106 = v105;
      long long v107 = v150;
      v150(v45, v37);
      uint64_t v165 = sub_1E0DED7E4(v104, v106, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 42) = 2082;
      id v108 = objc_msgSend(v87, sel_endDate);
      sub_1E0ECB940();

      uint64_t v109 = sub_1E0ECD9B0();
      unint64_t v111 = v110;
      v107(v45, v37);
      uint64_t v165 = sub_1E0DED7E4(v109, v111, (uint64_t *)&v166);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      os_log_t v112 = v158;
      _os_log_impl(&dword_1E0B26000, v158, (os_log_type_t)v159, "[%{public}s.%s] Skipping query: %{public}s dates: %{public}s to %{public}s", (uint8_t *)v92, 0x34u);
      uint64_t v113 = v161;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v113, -1, -1);
      MEMORY[0x1E4E41080](v92, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v164 + 8))(v160, v157);
    return MEMORY[0x1E4FBC860];
  }
  return v125;
}

uint64_t sub_1E0E9B5F8(uint64_t a1, void *a2, char a3, void *a4, void (*a5)(void, void), const char *a6, uint64_t a7, const char *a8, unint64_t *a9, uint64_t (*a10)(uint64_t))
{
  uint64_t v16 = sub_1E0ECC010();
  uint64_t v69 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16, v17);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v23 = (char *)&v61 - v22;
  if (a3)
  {
    uint64_t v40 = a2;
    sub_1E0ECBFD0();
    sub_1E0E9D25C(a2, 1);
    id v41 = a4;
    sub_1E0E9D25C(a2, 1);
    unint64_t v42 = (char *)v41;
    uint64_t v43 = sub_1E0ECBFF0();
    os_log_type_t v44 = sub_1E0ECD520();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v46 = MEMORY[0x1E4FBC840];
    if (v45)
    {
      uint64_t v47 = swift_slowAlloc();
      unint64_t v66 = a6;
      uint64_t v48 = v47;
      uint64_t v64 = (void *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(void *)&long long v71 = v65;
      *(_DWORD *)uint64_t v48 = 136446722;
      id v67 = a5;
      uint64_t v49 = sub_1E0ECDBC0();
      uint64_t v70 = sub_1E0DED7E4(v49, v50, (uint64_t *)&v71);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v68 = v16;
      uint64_t v51 = *(void *)&v42[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      unint64_t v52 = *(void *)&v42[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1E0DED7E4(v51, v52, (uint64_t *)&v71);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 2114;
      os_log_type_t v53 = a2;
      uint64_t v54 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v70 = v54;
      uint64_t v46 = MEMORY[0x1E4FBC840];
      sub_1E0ECD6D0();
      uint64_t v55 = v64;
      *uint64_t v64 = v54;
      a5 = v67;
      sub_1E0E9D268(a2, 1);
      sub_1E0E9D268(a2, 1);
      _os_log_impl(&dword_1E0B26000, v43, v44, "[%{public}s.%s] Query failed with error: %{public}@", (uint8_t *)v48, 0x20u);
      sub_1E0DFABA4();
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v55, -1, -1);
      uint64_t v56 = v65;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v56, -1, -1);
      MEMORY[0x1E4E41080](v48, -1, -1);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v68);
    }
    else
    {

      sub_1E0E9D268(a2, 1);
      sub_1E0E9D268(a2, 1);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v16);
    }
    long long v71 = 0u;
    long long v72 = 0u;
    uint64_t v59 = a2;
    a5(&v71, a2);
    sub_1E0E9D268(a2, 1);
    sub_1E0E9D268(a2, 1);
    uint64_t v58 = v46 + 8;
  }
  else
  {
    unint64_t v66 = a8;
    uint64_t v68 = v16;
    uint64_t v25 = a9;
    uint64_t v24 = a10;
    swift_bridgeObjectRetain();
    sub_1E0ECBFD0();
    sub_1E0E9D25C(a2, 0);
    id v26 = a4;
    sub_1E0E9D25C(a2, 0);
    uint64_t v27 = (char *)v26;
    uint64_t v28 = sub_1E0ECBFF0();
    os_log_type_t v29 = sub_1E0ECD500();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      int v63 = v30;
      uint64_t v32 = v31;
      uint64_t v64 = (void *)swift_slowAlloc();
      *(void *)&long long v71 = v64;
      *(_DWORD *)uint64_t v32 = 136446722;
      os_log_t v62 = v28;
      uint64_t v33 = sub_1E0ECDBC0();
      uint64_t v70 = sub_1E0DED7E4(v33, v34, (uint64_t *)&v71);
      id v67 = a5;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v65 = (uint64_t)a9;
      uint64_t v35 = *(void *)&v27[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier];
      unint64_t v36 = *(void *)&v27[OBJC_IVAR___HKBalanceChartDataSource_debugIdentifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1E0DED7E4(v35, v36, (uint64_t *)&v71);
      sub_1E0ECD6D0();

      uint64_t v24 = a10;
      uint64_t v25 = (unint64_t *)v65;
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      uint64_t v70 = a2[2];
      uint64_t v37 = sub_1E0ECD9B0();
      uint64_t v70 = sub_1E0DED7E4(v37, v38, (uint64_t *)&v71);
      a5 = v67;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      sub_1E0E9D268(a2, 0);
      sub_1E0E9D268(a2, 0);
      uint64_t v28 = v62;
      _os_log_impl(&dword_1E0B26000, v62, (os_log_type_t)v63, v66, (uint8_t *)v32, 0x20u);
      uint64_t v39 = v64;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v39, -1, -1);
      MEMORY[0x1E4E41080](v32, -1, -1);
    }
    else
    {

      sub_1E0E9D268(a2, 0);
      sub_1E0E9D268(a2, 0);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v23, v68);
    sub_1E0E9D1F8(0, v25, v24, MEMORY[0x1E4FBB320]);
    *((void *)&v72 + 1) = v57;
    *(void *)&long long v71 = a2;
    a5(&v71, 0);
    uint64_t v58 = MEMORY[0x1E4FBC840] + 8;
  }
  return sub_1E0E9D12C((uint64_t)&v71, (uint64_t)qword_1EB584EC0, v58, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0B32FF4);
}

id sub_1E0E9BD94(uint64_t a1)
{
  sub_1E0B32F68(a1, (uint64_t)v4);
  if (!v5)
  {
    sub_1E0E9D12C((uint64_t)v4, (uint64_t)qword_1EB584EC0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0B32FF4);
    return 0;
  }
  sub_1E0E9D1F8(0, (unint64_t *)&unk_1EAD6F9B0, (uint64_t (*)(uint64_t))sub_1E0E0CDD0, MEMORY[0x1E4FBB320]);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v1 = sub_1E0E9C498(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1E0E9BF94@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v58 = a2;
  sub_1E0E07828();
  uint64_t v56 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v55 = (char *)&v54 - v10;
  uint64_t v63 = sub_1E0ECBB60();
  uint64_t v11 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63, v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1E0ECB980();
  MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v17 = sub_1E0ECCF30();
  os_log_t v62 = *(void **)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17, v18);
  uint64_t v61 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  uint64_t v24 = (char *)&v54 - v23;
  uint64_t v26 = MEMORY[0x1F4188790](v22, v25);
  unint64_t v60 = (char *)&v54 - v27;
  MEMORY[0x1F4188790](v26, v28);
  int v30 = (char *)&v54 - v29;
  id v31 = objc_msgSend(a1, sel_startDate);
  sub_1E0ECB940();

  uint64_t v32 = v3 + OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v59 = v11 + 16;
  uint64_t v34 = v3 + OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar;
  uint64_t v35 = v63;
  v33(v14, v34, v63);
  sub_1E0ECCEF0();
  id v36 = objc_msgSend(a1, sel_endDate);
  sub_1E0ECB940();

  uint64_t v37 = v60;
  unint64_t v38 = v62;
  v33(v14, v32, v35);
  sub_1E0ECCEF0();
  uint64_t v39 = v61;
  sub_1E0ECCEB0();
  sub_1E0ECCED0();
  uint64_t v40 = (void (*)(char *, uint64_t))v38[1];
  v40(v39, v17);
  v40(v24, v17);
  sub_1E0E9CF78(&qword_1EAD6F320, MEMORY[0x1E4F295A0]);
  uint64_t result = sub_1E0ECD0E0();
  if (result)
  {
    uint64_t v42 = v56;
    uint64_t v43 = *(int *)(v56 + 48);
    uint64_t v61 = (char *)v40;
    os_log_type_t v44 = v55;
    uint64_t v63 = (uint64_t)(v38 + 1);
    BOOL v45 = &v55[v43];
    uint64_t v46 = (void (*)(char *, char *, uint64_t))v38[4];
    v46(v55, v30, v17);
    v46(v45, v37, v17);
    uint64_t v47 = v57;
    uint64_t v48 = &v57[*(int *)(v42 + 48)];
    uint64_t v49 = (void (*)(char *, char *, uint64_t))v38[2];
    v49(v57, v44, v17);
    v49(v48, v45, v17);
    unint64_t v50 = v58;
    v46(v58, v47, v17);
    uint64_t v51 = (uint64_t (*)(char *, uint64_t))v61;
    ((void (*)(char *, uint64_t))v61)(v48, v17);
    unint64_t v52 = &v47[*(int *)(v42 + 48)];
    v46(v47, v44, v17);
    v46(v52, v45, v17);
    sub_1E0E251B4();
    v46(&v50[*(int *)(v53 + 36)], v52, v17);
    return v51(v47, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1E0E9C498(uint64_t a1)
{
  sub_1E0E9D1F8(0, (unint64_t *)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)v22 - v5;
  uint64_t v7 = sub_1E0ECB980();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)v22 - v14;
  v22[0] = objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesDataBlock), sel_init);
  sub_1E0ECB950();
  sub_1E0ECBAF0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v12, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1E0ECB950();
    uint64_t v17 = sub_1E0E9D12C((uint64_t)v6, (uint64_t)&qword_1EAD6DB60, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1E0E9D1F8);
  }
  else
  {
    uint64_t v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
  }
  MEMORY[0x1F4188790](v17, v18);
  v22[-2] = v1;
  v22[-1] = v15;
  if ((unint64_t)sub_1E0E998DC((void *(*)(uint64_t *__return_ptr, uint64_t))sub_1E0E9D18C, (uint64_t)&v22[-4], a1) >> 62)
  {
    sub_1E0DFAB14();
    sub_1E0ECD900();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1E0ECD9F0();
    sub_1E0DFAB14();
  }
  swift_bridgeObjectRelease();
  sub_1E0DFAB14();
  uint64_t v19 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v20 = v22[0];
  objc_msgSend(v22[0], sel_setChartPoints_, v19);

  v16(v15, v7);
  return v20;
}

uint64_t sub_1E0E9C7E0@<X0>(void *a1@<X0>, char *a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v61 = a3;
  uint64_t v58 = a4;
  uint64_t v5 = sub_1E0ECCF30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E251B4();
  uint64_t v53 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1E0ECB980();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  uint64_t v16 = MEMORY[0x1F4188790](v14, v15);
  unint64_t v50 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v51 = (char *)&v49 - v20;
  MEMORY[0x1F4188790](v19, v21);
  os_log_t v62 = (char *)&v49 - v22;
  uint64_t v23 = (char *)self;
  uint64_t v24 = a1[3];
  uint64_t v54 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v24);
  sub_1E0ECBF40();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v25(v9, v13, v5);
  sub_1E0E9CE5C((uint64_t)v13);
  uint64_t v26 = sub_1E0ECCF10();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v55 = v5;
  unint64_t v60 = v27;
  uint64_t v52 = v6 + 8;
  v27(v9, v5);
  uint64_t v28 = &v59[OBJC_IVAR___HKBalanceChartDataSource_gregorianCalendar];
  uint64_t v29 = (void *)sub_1E0ECBB00();
  uint64_t v59 = v23;
  id v30 = objc_msgSend(v23, sel_hk_dateOnDayIndex_atHour_calendar_, v26, 0, v29);

  id v31 = v62;
  sub_1E0ECB940();

  if ((sub_1E0ECB930() & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v31, v57);
    id v47 = 0;
    goto LABEL_8;
  }
  uint64_t v61 = v28;
  uint64_t v32 = v54;
  uint64_t v49 = v25;
  __swift_project_boxed_opaque_existential_0(v54, v54[3]);
  sub_1E0ECBF40();
  uint64_t v33 = v55;
  v25(v9, v13, v55);
  sub_1E0E9CE5C((uint64_t)v13);
  uint64_t v34 = sub_1E0ECCF10();
  v60(v9, v33);
  double v35 = (double)v34;
  __swift_project_boxed_opaque_existential_0(v32, v32[3]);
  sub_1E0ECBF40();
  v49(v9, &v13[*(int *)(v53 + 36)], v33);
  sub_1E0E9CE5C((uint64_t)v13);
  uint64_t v36 = sub_1E0ECCF10();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v60)(v9, v33);
  if (v35 > (double)v36)
  {
    __break(1u);
    goto LABEL_10;
  }
  double v38 = ceil(((double)v36 - v35) * 0.5 + v35);
  if ((~*(void *)&v38 & 0x7FF0000000000000) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v38 < 9.22337204e18)
  {
    uint64_t v39 = (uint64_t)v38;
    uint64_t v40 = (void *)sub_1E0ECBB00();
    id v41 = objc_msgSend(v59, sel_hk_noonWithDayIndex_calendar_, v39, v40);

    uint64_t v42 = v51;
    sub_1E0ECB940();

    sub_1E0E13A18((uint64_t)v32, (uint64_t)v63);
    uint64_t v44 = v56;
    uint64_t v43 = v57;
    uint64_t v45 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v50, v42, v57);
    id v46 = objc_allocWithZone((Class)type metadata accessor for BalanceChartPoint());
    id v47 = sub_1E0E15A50((uint64_t)v63, v45);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
    v48(v42, v43);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v48)(v62, v43);
LABEL_8:
    *uint64_t v58 = v47;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

id BalanceChartDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BalanceChartDataSource.init()()
{
}

id BalanceChartDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E9CE5C(uint64_t a1)
{
  sub_1E0E251B4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E0E9CEBC(uint64_t a1, void *a2, char a3)
{
  return sub_1E0E9D02C(a1, a2, a3, "[%{public}s.%s] Query found %s summarie(s).", &qword_1EAD6F9C8, MEMORY[0x1E4F65928]);
}

void sub_1E0E9CEE4()
{
  if (!qword_1EAD6F990)
  {
    sub_1E0ECBE20();
    sub_1E0E9CF78(&qword_1EAD6F998, MEMORY[0x1E4F65928]);
    unint64_t v0 = sub_1E0ECBE40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F990);
    }
  }
}

uint64_t sub_1E0E9CF78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1E0E9D004(uint64_t a1, void *a2, char a3)
{
  return sub_1E0E9D02C(a1, a2, a3, "[%{public}s.%s] Query found %s collections.", &qword_1EAD6F9C0, MEMORY[0x1E4F65970]);
}

uint64_t sub_1E0E9D02C(uint64_t a1, void *a2, char a3, const char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  return sub_1E0E9B5F8(a1, a2, a3 & 1, *(void **)(v6 + 16), *(void (**)(void, void))(v6 + 24), *(const char **)(v6 + 32), *(void *)(v6 + 40), a4, a5, a6);
}

id sub_1E0E9D068(uint64_t a1)
{
  return sub_1E0E9BD94(a1);
}

uint64_t sub_1E0E9D070()
{
  return type metadata accessor for BalanceChartDataSource();
}

uint64_t sub_1E0E9D078()
{
  uint64_t result = sub_1E0ECBB60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BalanceChartDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BalanceChartDataSource);
}

uint64_t sub_1E0E9D12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1E0E9D18C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1E0E9C7E0(a1, *(char **)(v2 + 16), *(char **)(v2 + 24), a2);
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t sub_1E0E9D1C0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1E0E9D1F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1E0E9D25C(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1E0E9D268(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1E0E9D274(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_1E0ECD240();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
}

id AudiogramAnalyticsManager.__allocating_init(healthStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1E0E9DF40(a1);

  return v4;
}

uint64_t AudiogramAnalyticsManager.submitPerformanceAnalytics(metric:)(void *a1)
{
  type metadata accessor for AudiogramPerformanceAnalytics.Event();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = &protocol witness table for AudiogramPerformanceAnalytics.Metric;
  id v4 = a1;
  sub_1E0E9DC30(v3, v1);
  return swift_release();
}

id AudiogramAnalyticsManager.init(healthStore:)(void *a1)
{
  id v2 = sub_1E0E9DF40(a1);

  return v2;
}

void sub_1E0E9D4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4E41170](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR___HKAudiogramAnalyticsManager_uuid);
    uint64_t v6 = *(void *)(v4 + OBJC_IVAR___HKAudiogramAnalyticsManager_uuid + 8);
    uint64_t v8 = *(void **)(v4 + OBJC_IVAR___HKAudiogramAnalyticsManager_eventSubmissionManager);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v6;
    aBlock[4] = sub_1E0E9E45C;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1E0DFC578;
    aBlock[3] = &block_descriptor_11;
    char v10 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v11 = v8;
    swift_release();
    [v11 submitEvent:a2 completion:v10];
    _Block_release(v10);
  }
  else
  {
    if (qword_1EAD69888 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1E0ECC010();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EAD74098);
    uint64_t v11 = sub_1E0ECBFF0();
    os_log_type_t v13 = sub_1E0ECD520();
    if (os_log_type_enabled(v11, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1E0B26000, v11, v13, "[AudiogramAnalytics] self found nil when submitting analytics", v14, 2u);
      MEMORY[0x1E4E41080](v14, -1, -1);
    }
  }
}

void sub_1E0E9D6AC(char a1, void *a2, uint64_t a3, unint64_t a4)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (qword_1EAD69888 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1E0ECC010();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EAD74098);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1E0ECBFF0();
    os_log_type_t v8 = sub_1E0ECD540();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      v22[0] = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1E0DED7E4(a3, a4, v22);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1E0B26000, v7, v8, "[AudiogramAnalytics] %s Successfully submitted analytics", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v10, -1, -1);
      MEMORY[0x1E4E41080](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1EAD69888 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1E0ECC010();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EAD74098);
    swift_bridgeObjectRetain();
    id v13 = a2;
    swift_bridgeObjectRetain();
    id v14 = a2;
    oslog = sub_1E0ECBFF0();
    os_log_type_t v15 = sub_1E0ECD520();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v22[0] = v18;
      *(_DWORD *)uint64_t v16 = 136315394;
      swift_bridgeObjectRetain();
      sub_1E0DED7E4(a3, a4, v22);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2112;
      if (a2)
      {
        id v19 = a2;
        uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
        sub_1E0ECD6D0();
      }
      else
      {
        sub_1E0ECD6D0();
        uint64_t v20 = 0;
      }
      *uint64_t v17 = v20;

      _os_log_impl(&dword_1E0B26000, oslog, v15, "[AudiogramAnalytics] %s Failed to submit analytics error: %@", (uint8_t *)v16, 0x16u);
      sub_1E0DFABA4();
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v17, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v18, -1, -1);
      MEMORY[0x1E4E41080](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

id AudiogramAnalyticsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudiogramAnalyticsManager.init()()
{
}

id AudiogramAnalyticsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0E9DC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1E0ECCE70();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1E0ECCEA0();
  uint64_t v8 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR___HKAudiogramAnalyticsManager_queue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v13 = (void *)swift_allocObject();
  v13[2] = v12;
  void v13[3] = a1;
  v13[4] = &off_1F3B99890;
  aBlock[4] = sub_1E0E9E400;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1E0E67E2C;
  aBlock[3] = &block_descriptor_18;
  id v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1E0ECCE90();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  os_log_type_t v15 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1E0E9E464((unint64_t *)&qword_1EAD6F050, MEMORY[0x1E4FBCB00]);
  sub_1E0E9E4AC(0, &qword_1EAD6F058, v15);
  sub_1E0E9E500((unint64_t *)&qword_1EAD6F060, &qword_1EAD6F058, v15);
  sub_1E0ECD7A0();
  MEMORY[0x1E4E3ECB0](0, v11, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v18);
  swift_release();
  return swift_release();
}

id sub_1E0E9DF40(void *a1)
{
  objc_super v2 = v1;
  uint64_t v28 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1E0ECD5C0();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1E0ECD5A0();
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v8 = sub_1E0ECCEA0();
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v10 = sub_1E0ECB9C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  id v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v15 = (uint64_t *)&v2[OBJC_IVAR___HKAudiogramAnalyticsManager_uuid];
  uint64_t v16 = v2;
  sub_1E0ECB9B0();
  uint64_t v17 = sub_1E0ECB990();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t *v15 = v17;
  v15[1] = v19;
  uint64_t v24 = sub_1E0DF2C04(0, (unint64_t *)&qword_1EAD6FDC0);
  unint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD000000000000025;
  unint64_t v32 = 0x80000001E0F2D0C0;
  swift_bridgeObjectRetain();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECCE90();
  unint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t v20 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1E0E9E464(&qword_1EAD6FA00, MEMORY[0x1E4FBCC10]);
  sub_1E0E9E4AC(0, &qword_1EAD6FA08, v20);
  sub_1E0E9E500(&qword_1EAD6FA10, &qword_1EAD6FA08, v20);
  sub_1E0ECD7A0();
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x1E4FBCC58], v27);
  *(void *)&v16[OBJC_IVAR___HKAudiogramAnalyticsManager_queue] = sub_1E0ECD5F0();
  uint64_t v21 = v28;
  *(void *)&v16[OBJC_IVAR___HKAudiogramAnalyticsManager_healthStore] = v28;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ABE8]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x1E4F29F40], v21);
  *(void *)&v16[OBJC_IVAR___HKAudiogramAnalyticsManager_eventSubmissionManager] = v22;

  v30.receiver = v16;
  v30.super_class = ObjectType;
  return objc_msgSendSuper2(&v30, sel_init);
}

uint64_t type metadata accessor for AudiogramAnalyticsManager()
{
  return self;
}

uint64_t method lookup function for AudiogramAnalyticsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramAnalyticsManager);
}

uint64_t dispatch thunk of AudiogramAnalyticsManager.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1E0E9E388()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0E9E3C0()
{
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1E0E9E400()
{
  sub_1E0E9D4BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_1E0E9E424()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1E0E9E45C(char a1, void *a2)
{
  sub_1E0E9D6AC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1E0E9E464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0E9E4AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECD380();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E0E9E500(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0E9E4AC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for FeatureAttributeLegibilityView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FeatureAttributeLegibilityView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeatureAttributeLegibilityView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FeatureAttributeLegibilityView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeatureAttributeLegibilityView()
{
  return &type metadata for FeatureAttributeLegibilityView;
}

uint64_t sub_1E0E9E6EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E0E9E708(uint64_t a1)
{
  sub_1E0E9ED88();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = a1;
  sub_1E0ECCDF0();
  long long v11 = *(_OWORD *)(a1 + 32);
  long long v12 = v11;
  sub_1E0E2FE20((uint64_t)&v12);
  sub_1E0ECD250();
  sub_1E0E9EE94();
  sub_1E0ECCBA0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_1E0E9E85C(uint64_t a1@<X8>)
{
  sub_1E0E0F184();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1E0ECCAF0();
  uint64_t v4 = v3;
  char v6 = v5;
  id v7 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v8 = (id)PSHighLegibilityAlternateFont();

  if (v8)
  {
    sub_1E0ECCA40();
    uint64_t v9 = sub_1E0ECCAB0();
    uint64_t v11 = v10;
    char v13 = v12;
    uint64_t v15 = v14;
    swift_release();
    sub_1E0DF8F74(v2, v4, v6 & 1);
    swift_bridgeObjectRelease();
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v11;
    *(unsigned char *)(a1 + 16) = v13 & 1;
    *(void *)(a1 + 24) = v15;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1E0E9E990@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_1E0ECC7A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E9ECA0();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E9EF08();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v24 = v13;
  uint64_t v25 = v14;
  MEMORY[0x1F4188790](v13, v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = v1[1];
  v33[0] = *v1;
  v33[1] = v18;
  void v33[2] = v1[2];
  uint64_t v27 = v33;
  sub_1E0E9ED20();
  sub_1E0E9EDEC();
  sub_1E0ECCA50();
  sub_1E0ECC790();
  uint64_t v19 = sub_1E0E9EFDC(&qword_1EAD6FA48, (void (*)(uint64_t))sub_1E0E9ECA0);
  uint64_t v20 = MEMORY[0x1E4F3D8F0];
  sub_1E0ECCBF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  long long v32 = v33[0];
  uint64_t v28 = v8;
  uint64_t v29 = v2;
  uint64_t v30 = v19;
  uint64_t v31 = v20;
  swift_getOpaqueTypeConformance2();
  sub_1E0E0F184();
  uint64_t v21 = v24;
  sub_1E0ECCB60();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v21);
}

void sub_1E0E9ECA0()
{
  if (!qword_1EAD6FA18)
  {
    sub_1E0E9ED20();
    sub_1E0E9EDEC();
    unint64_t v0 = sub_1E0ECCA60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FA18);
    }
  }
}

void sub_1E0E9ED20()
{
  if (!qword_1EAD6FA20)
  {
    sub_1E0E9ED88();
    sub_1E0ECC890();
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FA20);
    }
  }
}

void sub_1E0E9ED88()
{
  if (!qword_1EAD6FA28)
  {
    unint64_t v0 = sub_1E0ECCE10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FA28);
    }
  }
}

unint64_t sub_1E0E9EDEC()
{
  unint64_t result = qword_1EAD6FA30;
  if (!qword_1EAD6FA30)
  {
    sub_1E0E9ED20();
    sub_1E0E9EE94();
    sub_1E0E9EFDC(&qword_1EAD6DB80, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FA30);
  }
  return result;
}

unint64_t sub_1E0E9EE94()
{
  unint64_t result = qword_1EAD6FA38;
  if (!qword_1EAD6FA38)
  {
    sub_1E0E9ED88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FA38);
  }
  return result;
}

void sub_1E0E9EF08()
{
  if (!qword_1EAD6FA40)
  {
    sub_1E0E9ECA0();
    sub_1E0ECC7A0();
    sub_1E0E9EFDC(&qword_1EAD6FA48, (void (*)(uint64_t))sub_1E0E9ECA0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EAD6FA40);
    }
  }
}

uint64_t sub_1E0E9EFDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0E9F024()
{
  return sub_1E0E9E708(*(void *)(v0 + 16));
}

void sub_1E0E9F02C(uint64_t a1@<X8>)
{
}

uint64_t sub_1E0E9F034()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s8SentinelCMa()
{
  return self;
}

id sub_1E0E9F144()
{
  _s8SentinelCMa();
  ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EAD740B8 = (uint64_t)result;
  return result;
}

HKQuantity_optional __swiftcall HKHearingLevelClassification.maximumQuantityForDisplay()()
{
  id v0 = (id)HKMaximumDecibelQuantityForHearingLevelClassification();
  if (v0)
  {
    uint64_t v2 = v0;
    uint64_t v3 = self;
    id v4 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
    objc_msgSend(v2, sel_doubleValueForUnit_, v4);
    double v6 = v5;

    id v7 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
    uint64_t v8 = (objc_class *)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v7, floor(v6));
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8;
  result.value.super.Class isa = v9;
  result.is_nil = v1;
  return result;
}

HKQuantity_optional __swiftcall HKHearingLevelClassification.minimumQuantityForDisplay()()
{
  id v0 = (id)HKMinimumDecibelQuantityForHearingLevelClassification();
  if (v0)
  {
    uint64_t v2 = v0;
    uint64_t v3 = self;
    id v4 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
    objc_msgSend(v2, sel_doubleValueForUnit_, v4);
    double v6 = v5;

    id v7 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
    uint64_t v8 = (objc_class *)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v7, ceil(v6));
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8;
  result.value.super.Class isa = v9;
  result.is_nil = v1;
  return result;
}

id static HKHearingLevelSummary.emptySummary.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F2B0E0]);
  return objc_msgSend(v0, sel_initWithLeftEarMetrics_rightEarMetrics_, 0, 0);
}

id sub_1E0E9F39C()
{
  if (*(uint64_t *)v0 <= 0)
  {
    id v3 = 0;
    uint64_t v2 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v1 = *(void *)v0;
    id v3 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v2, round(*(double *)(v0 + 8) / (double)v1));
  }
  double v4 = *(double *)(v0 + 16);
  double v5 = self;
  id v6 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v2, v4);
  id v7 = objc_msgSend(v5, sel_quantityWithUnit_doubleValue_, v2, *(double *)(v0 + 24));
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0D8]), sel_initWithAverageSensitivity_minimumSensitivity_maximumSensitivity_, v3, v6, v7);

  return v8;
}

unint64_t sub_1E0E9F4B0(unint64_t result)
{
  unint64_t v1 = result;
  if (result >> 62) {
    goto LABEL_31;
  }
  uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v53 = v2;
  if (!v2)
  {
LABEL_38:
    id v52 = objc_allocWithZone(MEMORY[0x1E4F2B0E0]);
    return (unint64_t)objc_msgSend(v52, sel_initWithLeftEarMetrics_rightEarMetrics_, 0, 0);
  }
  if (v2 < 2) {
    goto LABEL_33;
  }
  do
  {
    id v3 = self;
    id v4 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
    id v5 = objc_msgSend(v3, sel_decibelHearingLevelUnit);
    if (v53 < 1)
    {
      __break(1u);
      goto LABEL_42;
    }
    id v6 = v5;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    double v10 = 0.0;
    double v11 = 1.79769313e308;
    double v12 = 2.22507386e-308;
    double v13 = 2.22507386e-308;
    double v14 = 0.0;
    double v15 = 1.79769313e308;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x1E4E3EF00](v7, v1);
      }
      else {
        id v16 = *(id *)(v1 + 8 * v7 + 32);
      }
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_hearingLevelSummary);
      id v19 = objc_msgSend(v18, sel_leftEarMetrics);

      if (!v19) {
        goto LABEL_19;
      }
      id v20 = objc_msgSend(v19, sel_averageSensitivity);
      if (v20) {
        break;
      }
LABEL_15:
      id v25 = objc_msgSend(v19, sel_minimumSensitivity);
      objc_msgSend(v25, sel_doubleValueForUnit_, v4);
      double v27 = v26;

      if (v27 < v15) {
        double v15 = v27;
      }
      id v28 = objc_msgSend(v19, sel_maximumSensitivity);
      objc_msgSend(v28, sel_doubleValueForUnit_, v4);
      double v30 = v29;

      if (v13 <= v30) {
        double v13 = v30;
      }
LABEL_19:
      id v31 = objc_msgSend(v17, sel_hearingLevelSummary);
      id v32 = objc_msgSend(v31, sel_rightEarMetrics);

      if (v32)
      {
        id v33 = objc_msgSend(v32, sel_averageSensitivity);
        if (v33)
        {
          uint64_t v34 = v33;
          objc_msgSend(v33, sel_doubleValueForUnit_, v6);
          double v36 = v35;

          BOOL v24 = __OFADD__(v8++, 1);
          if (v24) {
            goto LABEL_30;
          }
          double v10 = v10 + round(v36);
        }
        id v37 = objc_msgSend(v32, sel_minimumSensitivity);
        objc_msgSend(v37, sel_doubleValueForUnit_, v6);
        double v39 = v38;

        if (v39 < v11) {
          double v11 = v39;
        }
        id v40 = objc_msgSend(v32, sel_maximumSensitivity);
        objc_msgSend(v40, sel_doubleValueForUnit_, v6);
        double v42 = v41;

        if (v12 <= v42) {
          double v12 = v42;
        }
      }
      else
      {
      }
      if (v53 == ++v7)
      {
        swift_bridgeObjectRelease();
        id v43 = v4;
        id v44 = sub_1E0E9F39C();

        id v45 = v6;
        id v46 = sub_1E0E9F39C();

        id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0E0]), sel_initWithLeftEarMetrics_rightEarMetrics_, v44, v46);
        return (unint64_t)v47;
      }
    }
    uint64_t v21 = v20;
    objc_msgSend(v20, sel_doubleValueForUnit_, v4);
    double v23 = v22;

    BOOL v24 = __OFADD__(v9++, 1);
    if (!v24)
    {
      double v14 = v14 + round(v23);
      goto LABEL_15;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
    uint64_t v53 = v48;
    if (!v48) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1E0ECD910();
    HKQuantity_optional result = swift_bridgeObjectRelease();
  }
  while (v49 >= 2);
LABEL_33:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    id v50 = (id)MEMORY[0x1E4E3EF00](0, v1);
    swift_bridgeObjectRelease();
LABEL_36:
    id v51 = objc_msgSend(v50, sel_hearingLevelSummary);

    if (v51) {
      return (unint64_t)v51;
    }
    goto LABEL_38;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v50 = *(id *)(v1 + 32);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id FeatureRegulatoryInfoProvider.featureAvailabilityStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_featureAvailabilityStore);
}

uint64_t FeatureRegulatoryInfoProvider.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_logger;
  uint64_t v4 = sub_1E0ECC010();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1E0E9FA38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E0ECC210();
  swift_release();
  return swift_release();
}

uint64_t sub_1E0E9FAB4(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for FeatureRegulatoryInfo(0);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  double v11 = (char *)&v15 - v10;
  sub_1E0EA0D48(a1, (uint64_t)&v15 - v10);
  double v12 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E0EA0D48((uint64_t)v11, (uint64_t)v8);
  id v13 = v12;
  sub_1E0ECC220();
  return sub_1E0EA0DAC((uint64_t)v11);
}

uint64_t sub_1E0E9FBAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E0ECC210();
  swift_release();
  return swift_release();
}

uint64_t sub_1E0E9FC2C()
{
  return swift_endAccess();
}

uint64_t sub_1E0E9FCAC(uint64_t a1)
{
  sub_1E0EA0E08(0, &qword_1EAD6FA90, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v2, v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  double v11 = (char *)&v14 - v10;
  double v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v12((char *)&v14 - v10, a1, v3);
  v12(v8, (uint64_t)v11, v3);
  swift_beginAccess();
  sub_1E0EA0E08(0, &qword_1EAD6FA60, MEMORY[0x1E4F1AC70]);
  sub_1E0ECC200();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v11, v3);
}

uint64_t sub_1E0E9FE50()
{
  return swift_endAccess();
}

id FeatureRegulatoryInfoProvider.__allocating_init(featureAvailabilityStore:pairedDeviceFeatureAttributesProvider:logger:infoTransform:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  id v12 = sub_1E0EA072C(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v12;
}

id FeatureRegulatoryInfoProvider.init(featureAvailabilityStore:pairedDeviceFeatureAttributesProvider:logger:infoTransform:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  id v6 = sub_1E0EA072C(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v6;
}

void sub_1E0E9FF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  uint64_t v3 = sub_1E0ECBFF0();
  os_log_type_t v4 = sub_1E0ECD540();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v11[0] = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_1E0ECDBC0();
    sub_1E0DED7E4(v7, v8, v11);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v3, v4, "[%{public}s] Observed change to paired device feature attributes provider", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v6, -1, -1);
    MEMORY[0x1E4E41080](v5, -1, -1);
  }

  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1E4E41170](v2);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_1E0EA0108();
  }
}

void sub_1E0EA0108()
{
  uint64_t v1 = v0;
  v44[1] = *(id *)MEMORY[0x1E4F143B8];
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for FeatureRegulatoryInfo(0);
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v38 - v8;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_featureAvailabilityStore];
  v44[0] = 0;
  id v11 = objc_msgSend(v10, sel_featureOnboardingRecordWithError_, v44);
  id v12 = v44[0];
  if (v11)
  {
    id v13 = v11;
  }
  else
  {
    uint64_t v14 = v12;
    uint64_t v15 = (void *)sub_1E0ECB770();

    swift_willThrow();
    id v16 = v1;
    id v17 = v15;
    id v18 = v16;
    id v19 = v15;
    id v20 = sub_1E0ECBFF0();
    os_log_type_t v21 = sub_1E0ECD520();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      int v41 = v22;
      uint64_t v24 = v23;
      double v42 = (void *)swift_slowAlloc();
      v44[0] = v42;
      *(_DWORD *)uint64_t v24 = 136446722;
      os_log_t v40 = v20;
      uint64_t v25 = sub_1E0ECDBC0();
      uint64_t v43 = sub_1E0DED7E4(v25, v26, (uint64_t *)v44);
      double v39 = v18;
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v38[1] = v24 + 14;
      id v27 = objc_msgSend(v10, sel_featureIdentifier);
      uint64_t v28 = sub_1E0ECD1D0();
      unint64_t v30 = v29;

      uint64_t v43 = sub_1E0DED7E4(v28, v30, (uint64_t *)v44);
      sub_1E0ECD6D0();
      id v31 = v39;

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      uint64_t v43 = (uint64_t)v15;
      id v32 = v15;
      sub_1E0DFCAE0();
      uint64_t v33 = sub_1E0ECD200();
      uint64_t v43 = sub_1E0DED7E4(v33, v34, (uint64_t *)v44);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();

      os_log_t v35 = v40;
      _os_log_impl(&dword_1E0B26000, v40, (os_log_type_t)v41, "[%{public}s] Error getting onboarding record for %s: %s", (uint8_t *)v24, 0x20u);
      double v36 = v42;
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v36, -1, -1);
      MEMORY[0x1E4E41080](v24, -1, -1);
    }
    else
    {
    }
    id v13 = 0;
  }
  (*(void (**)(id, void))&v1[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_infoTransform])(v13, *(void *)&v1[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_pairedDeviceFeatureAttributesProvider]);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1E0EA0D48((uint64_t)v9, (uint64_t)v6);
  id v37 = v1;
  sub_1E0ECC220();
  sub_1E0EA0DAC((uint64_t)v9);
}

id FeatureRegulatoryInfoProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FeatureRegulatoryInfoProvider.init()()
{
}

id FeatureRegulatoryInfoProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureRegulatoryInfoProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0EA06EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FeatureRegulatoryInfoProvider();
  uint64_t result = sub_1E0ECC140();
  *a1 = result;
  return result;
}

id sub_1E0EA072C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  double v38 = a4;
  uint64_t v44 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = sub_1E0ECC010();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = v40;
  uint64_t v42 = *(void *)(v40 + 64);
  MEMORY[0x1F4188790](v11, v13);
  int v41 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for FeatureRegulatoryInfo(0);
  uint64_t v16 = MEMORY[0x1F4188790](v39, v15);
  id v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19);
  os_log_type_t v21 = (char *)&v38 - v20;
  *(void *)&v6[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v6[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_featureAvailabilityStore] = a1;
  *(void *)&v6[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_pairedDeviceFeatureAttributesProvider] = a2;
  int v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v22(&v6[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_logger], a3, v11);
  uint64_t v23 = &v6[OBJC_IVAR____TtC8HealthUI29FeatureRegulatoryInfoProvider_infoTransform];
  uint64_t v24 = v38;
  *(void *)uint64_t v23 = v38;
  *((void *)v23 + 1) = a5;
  uint64_t v25 = v6;
  id v26 = a1;
  swift_retain();
  swift_retain();
  v24(0, a2);
  swift_beginAccess();
  sub_1E0EA0D48((uint64_t)v21, (uint64_t)v18);
  sub_1E0ECC1E0();
  sub_1E0EA0DAC((uint64_t)v21);
  swift_endAccess();

  id v27 = (objc_class *)type metadata accessor for FeatureRegulatoryInfoProvider();
  v45.receiver = v25;
  v45.super_class = v27;
  id v28 = objc_msgSendSuper2(&v45, sel_init);
  sub_1E0EA0108();
  type metadata accessor for PairedDeviceFeatureAttributesProvider();
  sub_1E0EA0E68();
  uint64_t v46 = sub_1E0ECC140();
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v30 = v41;
  uint64_t v31 = v11;
  v22(v41, v44, v11);
  uint64_t v32 = v40;
  unint64_t v33 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v34 = (v42 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v33, v30, v31);
  *(void *)(v35 + v34) = v29;
  *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1E0EA0FA4;
  *(void *)(v36 + 24) = v35;
  sub_1E0ECC1C0();
  sub_1E0ECC260();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1E0ECC110();
  swift_endAccess();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v44, v31);
  return v28;
}

uint64_t type metadata accessor for FeatureRegulatoryInfoProvider()
{
  uint64_t result = qword_1EAD6FA80;
  if (!qword_1EAD6FA80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0EA0B90()
{
  return type metadata accessor for FeatureRegulatoryInfoProvider();
}

void sub_1E0EA0B98()
{
  sub_1E0ECC010();
  if (v0 <= 0x3F)
  {
    sub_1E0EA0E08(319, &qword_1EAD6FA60, MEMORY[0x1E4F1AC70]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for FeatureRegulatoryInfoProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureRegulatoryInfoProvider);
}

uint64_t dispatch thunk of FeatureRegulatoryInfoProvider.featureRegulatoryInfo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FeatureRegulatoryInfoProvider.$featureRegulatoryInfo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of FeatureRegulatoryInfoProvider.__allocating_init(featureAvailabilityStore:pairedDeviceFeatureAttributesProvider:logger:infoTransform:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1E0EA0D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeatureRegulatoryInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0EA0DAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeatureRegulatoryInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1E0EA0E08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FeatureRegulatoryInfo(255);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1E0EA0E68()
{
  unint64_t result = qword_1EAD6FA98;
  if (!qword_1EAD6FA98)
  {
    type metadata accessor for PairedDeviceFeatureAttributesProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FA98);
  }
  return result;
}

uint64_t sub_1E0EA0EC0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0EA0EF8()
{
  uint64_t v1 = sub_1E0ECC010();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1E0EA0FA4()
{
  uint64_t v1 = *(void *)(sub_1E0ECC010() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1E0E9FF9C(v0 + v2, v3);
}

uint64_t sub_1E0EA103C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0EA1074(uint64_t a1)
{
  return sub_1E0EB23D8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t AccessoryCircularTimeView.init(time:symbolName:baseAccessibilityIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for AccessoryCircularTimeView();
  sub_1E0ECBA20();
  uint64_t v13 = a6 + v12[8];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  uint64_t v14 = (uint64_t *)(a6 + v12[9]);
  *uint64_t v14 = swift_getKeyPath();
  sub_1E0EA1D94(0, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = sub_1E0ECB980();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a6, a1, v15);
  uint64_t v17 = (void *)(a6 + v12[5]);
  *uint64_t v17 = a2;
  v17[1] = a3;
  id v18 = (void *)(a6 + v12[7]);
  *id v18 = a4;
  v18[1] = a5;
  return result;
}

uint64_t type metadata accessor for AccessoryCircularTimeView()
{
  uint64_t result = qword_1EAD6FB68;
  if (!qword_1EAD6FB68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0EA1208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v51 = sub_1E0ECCF80();
  uint64_t v53 = *(void *)(v51 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v51, v2);
  id v52 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3, v5);
  id v50 = (char *)&v50 - v6;
  sub_1E0E2C254();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccessoryCircularTimeView();
  uint64_t v59 = v1;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v12 = (void *)sub_1E0ECD190();
  objc_msgSend(v11, sel_setLocalizedDateFormatFromTemplate_, v12);

  uint64_t v13 = (void *)sub_1E0ECB9D0();
  objc_msgSend(v11, sel_setLocale_, v13);

  uint64_t v14 = (void *)sub_1E0ECB920();
  id v15 = objc_msgSend(v11, sel_stringFromDate_, v14);

  uint64_t v16 = sub_1E0ECD1D0();
  unint64_t v18 = v17;

  uint64_t v60 = v16;
  unint64_t v61 = v18;
  sub_1E0E0F184();
  uint64_t v19 = sub_1E0ECCAF0();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_1E0ECCA10();
  uint64_t v24 = sub_1E0ECCAB0();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v29 = (uint64_t)v50;
  swift_release();
  uint64_t v30 = v21;
  uint64_t v31 = v51;
  sub_1E0DF8F74(v19, v30, v23);
  uint64_t v32 = v53;
  swift_bridgeObjectRelease();
  uint64_t v54 = v10;
  sub_1E0E2C474(v29);
  unint64_t v33 = v52;
  sub_1E0ECCF70();
  LOBYTE(v19) = sub_1E0ECCF60();
  unint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
  v34(v33, v31);
  if (v19) {
    sub_1E0ECCC60();
  }
  else {
    sub_1E0ECCC10();
  }
  v34((char *)v29, v31);
  uint64_t v35 = sub_1E0ECCA90();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  sub_1E0DF8F74(v24, v26, v28 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v60 = v35;
  unint64_t v61 = v37;
  char v62 = v41;
  uint64_t v63 = v39;
  uint64_t v42 = MEMORY[0x1E4F3E2F8];
  unint64_t v43 = MEMORY[0x1E4F3E2E8];
  uint64_t v44 = v55;
  sub_1E0ECCB00();
  sub_1E0DF8F74(v35, v37, v41);
  swift_bridgeObjectRelease();
  objc_super v45 = (uint64_t *)(v59 + *(int *)(v54 + 28));
  uint64_t v47 = *v45;
  unint64_t v46 = v45[1];
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  uint64_t v60 = v47;
  unint64_t v61 = v46;
  swift_bridgeObjectRetain();
  sub_1E0ECD250();
  uint64_t v60 = v42;
  unint64_t v61 = v43;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = v57;
  sub_1E0ECCBA0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v44, v48);
}

uint64_t sub_1E0EA1680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_1E0ECCF80();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2, v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v30 - v9;
  sub_1E0EA1F5C();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AccessoryCircularTimeView();
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1E0ECCCA0();
  uint64_t v16 = sub_1E0ECCA10();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v1;
  sub_1E0E2C474((uint64_t)v10);
  sub_1E0ECCF70();
  char v18 = sub_1E0ECCF60();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v7, v2);
  if (v18) {
    uint64_t v20 = sub_1E0ECCC60();
  }
  else {
    uint64_t v20 = sub_1E0ECCC10();
  }
  uint64_t v21 = v20;
  v19(v10, v2);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v35 = v30;
  unint64_t v36 = KeyPath;
  uint64_t v37 = v16;
  uint64_t v38 = v22;
  uint64_t v39 = v21;
  sub_1E0EA1FE0();
  uint64_t v24 = v23;
  unint64_t v25 = sub_1E0EA20B8();
  sub_1E0ECCB00();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = (uint64_t *)(v31 + *(int *)(v15 + 28));
  unint64_t v27 = v26[1];
  uint64_t v35 = *v26;
  unint64_t v36 = v27;
  swift_bridgeObjectRetain();
  sub_1E0ECD250();
  uint64_t v35 = v24;
  unint64_t v36 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v33;
  sub_1E0ECCBA0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v28);
}

uint64_t sub_1E0EA1998()
{
  type metadata accessor for AccessoryCircularTimeView();
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v1 = (void *)sub_1E0ECD190();
  objc_msgSend(v0, sel_setLocalizedDateFormatFromTemplate_, v1);

  uint64_t v2 = (void *)sub_1E0ECB9D0();
  objc_msgSend(v0, sel_setLocale_, v2);

  uint64_t v3 = (void *)sub_1E0ECB920();
  id v4 = objc_msgSend(v0, sel_stringFromDate_, v3);

  sub_1E0ECD1D0();
  sub_1E0E0F184();
  uint64_t v5 = sub_1E0ECCAF0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1E0ECC970();
  sub_1E0ECC9A0();
  sub_1E0ECC9F0();
  swift_release();
  uint64_t v10 = sub_1E0ECCAB0();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  sub_1E0DF8F74(v5, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1E0ECD250();
  sub_1E0ECCBA0();
  swift_bridgeObjectRelease();
  sub_1E0DF8F74(v10, v12, v14 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t AccessoryCircularTimeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1E0EA1CE0();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (uint64_t *)((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1E0ECCE20();
  v7[1] = v8;
  sub_1E0EA2A8C();
  sub_1E0EA2450(v2, (uint64_t)v7 + *(int *)(v9 + 44));
  sub_1E0ECCE20();
  sub_1E0ECC320();
  sub_1E0EA4C7C((uint64_t)v7, a1, (uint64_t (*)(void))sub_1E0EA1CE0);
  sub_1E0EA2B24();
  uint64_t v11 = (_OWORD *)(a1 + *(int *)(v10 + 36));
  long long v12 = v14[1];
  *uint64_t v11 = v14[0];
  v11[1] = v12;
  v11[2] = v14[2];
  return sub_1E0EA4CE4((uint64_t)v7, (uint64_t (*)(void))sub_1E0EA1CE0);
}

void sub_1E0EA1CE0()
{
  if (!qword_1EAD6FAA0)
  {
    sub_1E0EA1D94(255, &qword_1EAD6FAA8, (uint64_t (*)(uint64_t))sub_1E0EA1DF8, MEMORY[0x1E4F3F108]);
    sub_1E0EA4F70(&qword_1EAD6FB50, &qword_1EAD6FAA8, (uint64_t (*)(uint64_t))sub_1E0EA1DF8);
    unint64_t v0 = sub_1E0ECCDA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FAA0);
    }
  }
}

void sub_1E0EA1D94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1E0EA1DF8()
{
  if (!qword_1EAD6FAB0)
  {
    sub_1E0EA1D94(255, &qword_1EB585190, MEMORY[0x1E4F46A50], MEMORY[0x1E4FBB718]);
    sub_1E0EA4868(255, &qword_1EAD6FAB8, MEMORY[0x1E4F3D750]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6FAB0);
    }
  }
}

void sub_1E0EA1EB4()
{
  if (!qword_1EAD6FAD0)
  {
    sub_1E0EA1F3C(255);
    sub_1E0E2C194();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EAD6FAD0);
    }
  }
}

void sub_1E0EA1F3C(uint64_t a1)
{
}

void sub_1E0EA1F5C()
{
  if (!qword_1EAD6FAE0)
  {
    sub_1E0EA1FE0();
    sub_1E0EA20B8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EAD6FAE0);
    }
  }
}

void sub_1E0EA1FE0()
{
  if (!qword_1EAD6FAE8)
  {
    sub_1E0DF63D0();
    sub_1E0EA2060(255, &qword_1EB5850E0, &qword_1EB585130);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FAE8);
    }
  }
}

void sub_1E0EA2060(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1E0E896C0(255, a3);
    unint64_t v4 = sub_1E0ECC880();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1E0EA20B8()
{
  unint64_t result = qword_1EAD6FAF0;
  if (!qword_1EAD6FAF0)
  {
    sub_1E0EA1FE0();
    sub_1E0DF668C();
    sub_1E0EA2150(&qword_1EB5850D8, &qword_1EB5850E0, &qword_1EB585130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FAF0);
  }
  return result;
}

uint64_t sub_1E0EA2150(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0EA2060(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0EA21A0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1E0EA1D94(255, a3, a4, MEMORY[0x1E4F3F108]);
    sub_1E0EA4F70(a5, a3, a4);
    unint64_t v9 = sub_1E0ECCD90();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1E0EA2240()
{
  if (!qword_1EAD6FB10)
  {
    sub_1E0EA4EA4(255, &qword_1EAD6FB18, MEMORY[0x1E4F3D750]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EAD6FB10);
    }
  }
}

void sub_1E0EA22C8(uint64_t a1)
{
}

void sub_1E0EA22FC(uint64_t a1)
{
}

void sub_1E0EA231C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1E0ECC890();
    unint64_t v4 = sub_1E0ECC3F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1E0EA2388(uint64_t a1)
{
}

void sub_1E0EA23BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1E0E2C194();
    a4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v7) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

uint64_t sub_1E0EA2450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  sub_1E0EA21A0(0, &qword_1EAD6FB00, &qword_1EAD6FB08, (uint64_t (*)(uint64_t))sub_1E0EA2240, &qword_1EAD6FB48);
  uint64_t v54 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)v52 - v5;
  sub_1E0EA4868(0, &qword_1EAD6FB88, MEMORY[0x1E4F3D748]);
  v52[0] = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)v52 - v9;
  sub_1E0EA21A0(0, &qword_1EAD6FAC0, &qword_1EAD6FAC8, (uint64_t (*)(uint64_t))sub_1E0EA1EB4, &qword_1EAD6FAF8);
  v52[1] = v11;
  MEMORY[0x1F4188790](v11, v12);
  char v14 = (char *)v52 - v13;
  sub_1E0EA4868(0, &qword_1EAD6FAB8, MEMORY[0x1E4F3D750]);
  uint64_t v17 = MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v55 = (uint64_t)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v53 = (char *)v52 - v20;
  sub_1E0EA1D94(0, &qword_1EB585190, MEMORY[0x1E4F46A50], MEMORY[0x1E4FBB718]);
  uint64_t v23 = MEMORY[0x1F4188790](v21 - 8, v22);
  unint64_t v25 = (char *)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v26);
  uint64_t v28 = (char *)v52 - v27;
  uint64_t v29 = a1 + *(int *)(type metadata accessor for AccessoryCircularTimeView() + 32);
  uint64_t v30 = *(void *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  sub_1E0DF7630(*(void *)v29, v31);
  char v32 = sub_1E0E2CA50(v30, v31);
  sub_1E0DF77E0(v30, v31);
  if (v32)
  {
    uint64_t v33 = sub_1E0ECCF50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v28, 1, 1, v33);
  }
  else
  {
    sub_1E0ECCF40();
    uint64_t v34 = sub_1E0ECCF50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v28, 0, 1, v34);
  }
  uint64_t v35 = (void *)sub_1E0ECB9D0();
  unsigned int v36 = objc_msgSend(v35, sel_hk_isIn24HourTime);

  uint64_t v37 = sub_1E0ECC620();
  if (v36)
  {
    *(void *)char v14 = v37;
    *((void *)v14 + 1) = 0xBFF0000000000000;
    v14[16] = 0;
    sub_1E0EA4930(0, &qword_1EAD6FBA8, &qword_1EAD6FAC8, (uint64_t (*)(uint64_t))sub_1E0EA1EB4);
    sub_1E0EA33E4((uint64_t)&v14[*(int *)(v38 + 44)]);
    sub_1E0EA4BAC((uint64_t)v14, (uint64_t)v10, &qword_1EAD6FAC0, &qword_1EAD6FAC8, (uint64_t (*)(uint64_t))sub_1E0EA1EB4, &qword_1EAD6FAF8);
    swift_storeEnumTagMultiPayload();
    sub_1E0EA49AC();
    sub_1E0EA4A30();
    uint64_t v39 = (uint64_t)v53;
    sub_1E0ECC740();
    uint64_t v40 = (uint64_t)v14;
    char v41 = &qword_1EAD6FAC0;
    uint64_t v42 = &qword_1EAD6FAC8;
    unint64_t v43 = sub_1E0EA1EB4;
    uint64_t v44 = &qword_1EAD6FAF8;
  }
  else
  {
    *(void *)uint64_t v6 = v37;
    *((void *)v6 + 1) = 0xBFF0000000000000;
    v6[16] = 0;
    sub_1E0EA4930(0, &qword_1EAD6FB90, &qword_1EAD6FB08, (uint64_t (*)(uint64_t))sub_1E0EA2240);
    sub_1E0EA2BA0(&v6[*(int *)(v45 + 44)]);
    sub_1E0EA4BAC((uint64_t)v6, (uint64_t)v10, &qword_1EAD6FB00, &qword_1EAD6FB08, (uint64_t (*)(uint64_t))sub_1E0EA2240, &qword_1EAD6FB48);
    swift_storeEnumTagMultiPayload();
    sub_1E0EA49AC();
    sub_1E0EA4A30();
    uint64_t v39 = (uint64_t)v53;
    sub_1E0ECC740();
    uint64_t v40 = (uint64_t)v6;
    char v41 = &qword_1EAD6FB00;
    uint64_t v42 = &qword_1EAD6FB08;
    unint64_t v43 = sub_1E0EA2240;
    uint64_t v44 = &qword_1EAD6FB48;
  }
  sub_1E0EA4C20(v40, v41, v42, (uint64_t (*)(uint64_t))v43, v44);
  unint64_t v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F46A50];
  uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1E0EA4FD4((uint64_t)v28, (uint64_t)v25, &qword_1EB585190, MEMORY[0x1E4F46A50], MEMORY[0x1E4FBB718]);
  uint64_t v48 = v55;
  sub_1E0EA4AB4(v39, v55, (uint64_t)&qword_1EAD6FAB8, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4868);
  uint64_t v49 = v56;
  sub_1E0EA4FD4((uint64_t)v25, v56, &qword_1EB585190, v46, v47);
  sub_1E0EA1DF8();
  sub_1E0EA4AB4(v48, v49 + *(int *)(v50 + 48), (uint64_t)&qword_1EAD6FAB8, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4868);
  sub_1E0EA4B34(v39, (uint64_t)&qword_1EAD6FAB8, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4868);
  sub_1E0EA5044((uint64_t)v28, &qword_1EB585190, v46, v47);
  sub_1E0EA4B34(v48, (uint64_t)&qword_1EAD6FAB8, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4868);
  return sub_1E0EA5044((uint64_t)v25, &qword_1EB585190, v46, v47);
}

void sub_1E0EA2A8C()
{
  if (!qword_1EAD6FB58)
  {
    sub_1E0EA1D94(255, &qword_1EAD6FAA8, (uint64_t (*)(uint64_t))sub_1E0EA1DF8, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1E0ECC380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FB58);
    }
  }
}

void sub_1E0EA2B24()
{
  if (!qword_1EAD6FB60)
  {
    sub_1E0EA1CE0();
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FB60);
    }
  }
}

uint64_t sub_1E0EA2B84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1E0EA2BA0@<X0>(void *a1@<X8>)
{
  id v67 = a1;
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3F108];
  sub_1E0EA1D94(0, &qword_1EAD6FB38, (uint64_t (*)(uint64_t))sub_1E0EA2388, MEMORY[0x1E4F3F108]);
  uint64_t v66 = v2;
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)&v59 - v4;
  sub_1E0EA4EA4(0, &qword_1EAD6FBB0, MEMORY[0x1E4F3D748]);
  uint64_t v63 = v6;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v62 = (uint64_t)&v59 - v8;
  sub_1E0EA1D94(0, &qword_1EAD6FB20, (uint64_t (*)(uint64_t))sub_1E0EA22C8, v1);
  uint64_t v65 = v9;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v59 - v11;
  sub_1E0EA1F3C(0);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v18);
  uint64_t v20 = (char *)&v59 - v19;
  sub_1E0E2C194();
  uint64_t v23 = MEMORY[0x1F4188790](v21 - 8, v22);
  unint64_t v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v26);
  uint64_t v28 = (char *)&v59 - v27;
  sub_1E0EA22FC(0);
  uint64_t v31 = MEMORY[0x1F4188790](v29 - 8, v30);
  uint64_t v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31, v34);
  unsigned int v36 = (char *)&v59 - v35;
  sub_1E0EA4EA4(0, &qword_1EAD6FB18, MEMORY[0x1E4F3D750]);
  uint64_t v39 = MEMORY[0x1F4188790](v37 - 8, v38);
  uint64_t v64 = (uint64_t)&v59 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39, v41);
  uint64_t v68 = (uint64_t)&v59 - v42;
  type metadata accessor for AccessoryCircularTimeView();
  char v43 = Locale.isAMPMSymbolBeforeTime.getter();
  uint64_t v60 = v28;
  unint64_t v61 = v36;
  if (v43)
  {
    sub_1E0EA1208((uint64_t)v36);
    sub_1E0EA1998();
    sub_1E0EA1680((uint64_t)v20);
    sub_1E0EA4C7C((uint64_t)v36, (uint64_t)v33, (uint64_t (*)(void))sub_1E0EA22FC);
    sub_1E0EA4C7C((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(void))sub_1E0E2C194);
    sub_1E0EA4C7C((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))sub_1E0EA1F3C);
    sub_1E0EA4C7C((uint64_t)v33, (uint64_t)v12, (uint64_t (*)(void))sub_1E0EA22FC);
    sub_1E0EA22C8(0);
    uint64_t v45 = v44;
    sub_1E0EA4C7C((uint64_t)v25, (uint64_t)&v12[*(int *)(v44 + 48)], (uint64_t (*)(void))sub_1E0E2C194);
    sub_1E0EA4C7C((uint64_t)v17, (uint64_t)&v12[*(int *)(v45 + 64)], (uint64_t (*)(void))sub_1E0EA1F3C);
    sub_1E0EA4CE4((uint64_t)v17, (uint64_t (*)(void))sub_1E0EA1F3C);
    sub_1E0EA4CE4((uint64_t)v25, (uint64_t (*)(void))sub_1E0E2C194);
    unint64_t v46 = sub_1E0EA22FC;
    sub_1E0EA4CE4((uint64_t)v33, (uint64_t (*)(void))sub_1E0EA22FC);
    uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3F108];
    sub_1E0EA4FD4((uint64_t)v12, v62, &qword_1EAD6FB20, (uint64_t (*)(uint64_t))sub_1E0EA22C8, MEMORY[0x1E4F3F108]);
    swift_storeEnumTagMultiPayload();
    sub_1E0EA4F70(&qword_1EAD6FBB8, &qword_1EAD6FB20, (uint64_t (*)(uint64_t))sub_1E0EA22C8);
    sub_1E0EA4F70((unint64_t *)&unk_1EAD6FBC0, &qword_1EAD6FB38, (uint64_t (*)(uint64_t))sub_1E0EA2388);
    sub_1E0ECC740();
    sub_1E0EA5044((uint64_t)v12, &qword_1EAD6FB20, (uint64_t (*)(uint64_t))sub_1E0EA22C8, v47);
    sub_1E0EA4CE4((uint64_t)v20, (uint64_t (*)(void))sub_1E0EA1F3C);
    sub_1E0EA4CE4((uint64_t)v60, (uint64_t (*)(void))sub_1E0E2C194);
    uint64_t v48 = (uint64_t)v61;
  }
  else
  {
    sub_1E0EA1680((uint64_t)v20);
    sub_1E0EA1998();
    sub_1E0EA1208((uint64_t)v36);
    sub_1E0EA4C7C((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))sub_1E0EA1F3C);
    sub_1E0EA4C7C((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(void))sub_1E0E2C194);
    sub_1E0EA4C7C((uint64_t)v36, (uint64_t)v33, (uint64_t (*)(void))sub_1E0EA22FC);
    sub_1E0EA4C7C((uint64_t)v17, (uint64_t)v5, (uint64_t (*)(void))sub_1E0EA1F3C);
    sub_1E0EA2388(0);
    uint64_t v50 = v49;
    sub_1E0EA4C7C((uint64_t)v25, (uint64_t)&v5[*(int *)(v49 + 48)], (uint64_t (*)(void))sub_1E0E2C194);
    sub_1E0EA4C7C((uint64_t)v33, (uint64_t)&v5[*(int *)(v50 + 64)], (uint64_t (*)(void))sub_1E0EA22FC);
    sub_1E0EA4CE4((uint64_t)v33, (uint64_t (*)(void))sub_1E0EA22FC);
    sub_1E0EA4CE4((uint64_t)v25, (uint64_t (*)(void))sub_1E0E2C194);
    unint64_t v46 = sub_1E0EA1F3C;
    sub_1E0EA4CE4((uint64_t)v17, (uint64_t (*)(void))sub_1E0EA1F3C);
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3F108];
    sub_1E0EA4FD4((uint64_t)v5, v62, &qword_1EAD6FB38, (uint64_t (*)(uint64_t))sub_1E0EA2388, MEMORY[0x1E4F3F108]);
    swift_storeEnumTagMultiPayload();
    sub_1E0EA4F70(&qword_1EAD6FBB8, &qword_1EAD6FB20, (uint64_t (*)(uint64_t))sub_1E0EA22C8);
    sub_1E0EA4F70((unint64_t *)&unk_1EAD6FBC0, &qword_1EAD6FB38, (uint64_t (*)(uint64_t))sub_1E0EA2388);
    sub_1E0ECC740();
    sub_1E0EA5044((uint64_t)v5, &qword_1EAD6FB38, (uint64_t (*)(uint64_t))sub_1E0EA2388, v51);
    sub_1E0EA4CE4((uint64_t)v61, (uint64_t (*)(void))sub_1E0EA22FC);
    sub_1E0EA4CE4((uint64_t)v60, (uint64_t (*)(void))sub_1E0E2C194);
    uint64_t v48 = (uint64_t)v20;
  }
  sub_1E0EA4CE4(v48, (uint64_t (*)(void))v46);
  uint64_t v52 = v68;
  uint64_t v53 = v64;
  sub_1E0EA4AB4(v68, v64, (uint64_t)&qword_1EAD6FB18, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4EA4);
  uint64_t v54 = v67;
  *id v67 = 0;
  *((unsigned char *)v54 + 8) = 1;
  sub_1E0EA2240();
  uint64_t v56 = v55;
  sub_1E0EA4AB4(v53, (uint64_t)v54 + *(int *)(v55 + 48), (uint64_t)&qword_1EAD6FB18, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4EA4);
  uint64_t v57 = (char *)v54 + *(int *)(v56 + 64);
  *(void *)uint64_t v57 = 0;
  v57[8] = 1;
  sub_1E0EA4B34(v52, (uint64_t)&qword_1EAD6FB18, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4EA4);
  return sub_1E0EA4B34(v53, (uint64_t)&qword_1EAD6FB18, (uint64_t (*)(void, uint64_t, void))sub_1E0EA4EA4);
}

uint64_t sub_1E0EA33E4@<X0>(uint64_t a1@<X8>)
{
  sub_1E0E2C194();
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v22 - v8;
  sub_1E0EA1F3C(0);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v17 = (char *)&v22 - v16;
  sub_1E0EA1680((uint64_t)&v22 - v16);
  sub_1E0EA1998();
  sub_1E0EA4C7C((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))sub_1E0EA1F3C);
  sub_1E0EA4C7C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1E0E2C194);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  sub_1E0EA1EB4();
  uint64_t v19 = v18;
  sub_1E0EA4C7C((uint64_t)v14, a1 + *(int *)(v18 + 48), (uint64_t (*)(void))sub_1E0EA1F3C);
  sub_1E0EA4C7C((uint64_t)v6, a1 + *(int *)(v19 + 64), (uint64_t (*)(void))sub_1E0E2C194);
  uint64_t v20 = a1 + *(int *)(v19 + 80);
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  sub_1E0EA4CE4((uint64_t)v9, (uint64_t (*)(void))sub_1E0E2C194);
  sub_1E0EA4CE4((uint64_t)v17, (uint64_t (*)(void))sub_1E0EA1F3C);
  sub_1E0EA4CE4((uint64_t)v6, (uint64_t (*)(void))sub_1E0E2C194);
  return sub_1E0EA4CE4((uint64_t)v14, (uint64_t (*)(void))sub_1E0EA1F3C);
}

uint64_t sub_1E0EA35F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1E0EA1CE0();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (uint64_t *)((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_1E0ECCE20();
  v7[1] = v8;
  sub_1E0EA2A8C();
  sub_1E0EA2450(v2, (uint64_t)v7 + *(int *)(v9 + 44));
  sub_1E0ECCE20();
  sub_1E0ECC320();
  sub_1E0EA4C7C((uint64_t)v7, a1, (uint64_t (*)(void))sub_1E0EA1CE0);
  sub_1E0EA2B24();
  uint64_t v11 = (_OWORD *)(a1 + *(int *)(v10 + 36));
  long long v12 = v14[1];
  *uint64_t v11 = v14[0];
  v11[1] = v12;
  v11[2] = v14[2];
  return sub_1E0EA4CE4((uint64_t)v7, (uint64_t (*)(void))sub_1E0EA1CE0);
}

void *initializeBufferWithCopyOfBuffer for AccessoryCircularTimeView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1E0ECB980();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = sub_1E0ECBA30();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (void *)((char *)a1 + v17);
    uint64_t v20 = (void *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = *(void *)((char *)a2 + v18);
    LOBYTE(v13) = *((unsigned char *)a2 + v18 + 8);
    swift_bridgeObjectRetain();
    sub_1E0DF7630(v23, (char)v13);
    *(void *)uint64_t v22 = v23;
    v22[8] = (char)v13;
    uint64_t v24 = a3[9];
    unint64_t v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    sub_1E0EA1D94(0, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1E0ECCF80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *unint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AccessoryCircularTimeView(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1E0ECB980();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_1E0ECBA30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  sub_1E0DF77E0(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v7 = a1 + a2[9];
  sub_1E0EA1D94(0, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1E0ECCF80();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E0ECB980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = sub_1E0ECBA30();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a1 + v17;
  uint64_t v22 = *(void *)(a2 + v17);
  LOBYTE(v12) = *(unsigned char *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  sub_1E0DF7630(v22, v12);
  *(void *)uint64_t v21 = v22;
  *(unsigned char *)(v21 + 8) = v12;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  unint64_t v25 = (void *)(a2 + v23);
  sub_1E0EA1D94(0, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_1E0ECCF80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *uint64_t v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E0ECB980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1E0ECBA30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v12) = *(unsigned char *)(v19 + 8);
  sub_1E0DF7630(*(void *)v19, v12);
  uint64_t v21 = *(void *)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v12;
  sub_1E0DF77E0(v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = a3[9];
    uint64_t v24 = (void *)(a1 + v23);
    unint64_t v25 = (void *)(a2 + v23);
    uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F46AE8];
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3C648];
    sub_1E0EA5044(a1 + v23, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
    sub_1E0EA1D94(0, &qword_1EB584F70, v26, v27);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_1E0ECCF80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E0ECB980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1E0ECBA30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  sub_1E0EA1D94(0, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
  uint64_t v18 = v17;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1E0ECCF80();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v15, v16, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E0ECB980();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1E0ECBA30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  uint64_t v25 = *(void *)v22;
  char v26 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = (_BYTE)v23;
  sub_1E0DF77E0(v25, v26);
  if (a1 != a2)
  {
    uint64_t v27 = a3[9];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (const void *)(a2 + v27);
    uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F46AE8];
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3C648];
    sub_1E0EA5044(a1 + v27, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
    sub_1E0EA1D94(0, &qword_1EB584F70, v30, v31);
    uint64_t v33 = v32;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_1E0ECCF80();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v28, v29, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0EA42D0);
}

uint64_t sub_1E0EA42D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E0ECB980();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_1E0ECBA30();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    sub_1E0EA1D94(0, &qword_1EAD6DB98, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C658]);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryCircularTimeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0EA4498);
}

uint64_t sub_1E0EA4498(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1E0ECB980();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1E0ECBA30();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  sub_1E0EA1D94(0, &qword_1EAD6DB98, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C658]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[9];
  return v16(v18, a2, a2, v17);
}

void sub_1E0EA464C()
{
  sub_1E0ECB980();
  if (v0 <= 0x3F)
  {
    sub_1E0ECBA30();
    if (v1 <= 0x3F)
    {
      sub_1E0EA1D94(319, &qword_1EB584F70, MEMORY[0x1E4F46AE8], MEMORY[0x1E4F3C648]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_1E0EA4798()
{
  unint64_t result = qword_1EAD6FB78;
  if (!qword_1EAD6FB78)
  {
    sub_1E0EA2B24();
    sub_1E0EA4810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FB78);
  }
  return result;
}

unint64_t sub_1E0EA4810()
{
  unint64_t result = qword_1EAD6FB80;
  if (!qword_1EAD6FB80)
  {
    sub_1E0EA1CE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FB80);
  }
  return result;
}

void sub_1E0EA4868(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1E0EA21A0(255, &qword_1EAD6FAC0, &qword_1EAD6FAC8, (uint64_t (*)(uint64_t))sub_1E0EA1EB4, &qword_1EAD6FAF8);
    uint64_t v7 = v6;
    sub_1E0EA21A0(255, &qword_1EAD6FB00, &qword_1EAD6FB08, (uint64_t (*)(uint64_t))sub_1E0EA2240, &qword_1EAD6FB48);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1E0EA4930(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1E0EA1D94(255, a3, a4, MEMORY[0x1E4F3F108]);
    unint64_t v5 = sub_1E0ECC380();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1E0EA49AC()
{
  unint64_t result = qword_1EAD6FB98;
  if (!qword_1EAD6FB98)
  {
    sub_1E0EA21A0(255, &qword_1EAD6FAC0, &qword_1EAD6FAC8, (uint64_t (*)(uint64_t))sub_1E0EA1EB4, &qword_1EAD6FAF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FB98);
  }
  return result;
}

unint64_t sub_1E0EA4A30()
{
  unint64_t result = qword_1EAD6FBA0;
  if (!qword_1EAD6FBA0)
  {
    sub_1E0EA21A0(255, &qword_1EAD6FB00, &qword_1EAD6FB08, (uint64_t (*)(uint64_t))sub_1E0EA2240, &qword_1EAD6FB48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FBA0);
  }
  return result;
}

uint64_t sub_1E0EA4AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void))
{
  uint64_t v6 = a4(0, a3, MEMORY[0x1E4F3D750]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0EA4B34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t, void))
{
  uint64_t v4 = a3(0, a2, MEMORY[0x1E4F3D750]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1E0EA4BAC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t), unint64_t *a6)
{
  sub_1E0EA21A0(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1E0EA4C20(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  sub_1E0EA21A0(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1E0EA4C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E0EA4CE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E0EA4D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E0ECC490();
  *a1 = result;
  return result;
}

uint64_t sub_1E0EA4D70()
{
  return sub_1E0ECC4A0();
}

uint64_t sub_1E0EA4D9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E0ECC510();
  *a1 = result;
  return result;
}

uint64_t sub_1E0EA4DC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E0ECC510();
  *a1 = result;
  return result;
}

uint64_t sub_1E0EA4DF4()
{
  return sub_1E0ECC520();
}

uint64_t sub_1E0EA4E20()
{
  return sub_1E0ECC520();
}

uint64_t sub_1E0EA4E4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E0ECC490();
  *a1 = result;
  return result;
}

uint64_t sub_1E0EA4E78()
{
  return sub_1E0ECC4A0();
}

void sub_1E0EA4EA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3F108];
    sub_1E0EA1D94(255, &qword_1EAD6FB20, (uint64_t (*)(uint64_t))sub_1E0EA22C8, MEMORY[0x1E4F3F108]);
    uint64_t v8 = v7;
    sub_1E0EA1D94(255, &qword_1EAD6FB38, (uint64_t (*)(uint64_t))sub_1E0EA2388, v6);
    unint64_t v10 = a3(a1, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1E0EA4F70(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0EA1D94(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0EA4FD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1E0EA1D94(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1E0EA5044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1E0EA1D94(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t static CalendarMonthHeaderView.defaultReuseIdentifier.getter()
{
  return 0xD000000000000013;
}

double static CalendarMonthHeaderView.referenceHeight.getter()
{
  if (qword_1EAD6D588 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, qword_1EAD6FBD8);
  if (qword_1EAD6D580 != -1) {
    swift_once();
  }
  objc_msgSend(v0, sel_scaledValueForValue_, *(double *)&qword_1EAD6FBD0);
  double v2 = v1;

  return v2;
}

id CalendarMonthHeaderView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *CalendarMonthHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v11 = v4;
  id v12 = objc_msgSend(v10, sel_init);
  id v13 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v12, sel_setTextColor_, v13);

  objc_msgSend(v12, sel_setTextAlignment_, 1);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v4[v9] = v12;
  *(void *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek] = 7;
  *(void *)&v11[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint] = 0;

  v50.receiver = v11;
  v50.super_class = (Class)type metadata accessor for CalendarMonthHeaderView();
  uint64_t v14 = (char *)objc_msgSendSuper2(&v50, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel;
  uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel];
  uint64_t v17 = v14;
  objc_msgSend(v17, sel_addSubview_, v16);
  id v18 = objc_msgSend(v16, sel_centerXAnchor);
  id v19 = objc_msgSend(v17, sel_leadingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 0.0);

  uint64_t v21 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint;
  uint64_t v22 = *(void **)&v17[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint];
  *(void *)&v17[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint] = v20;

  uint64_t result = *(char **)&v17[v21];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  LODWORD(v23) = 1144750080;
  objc_msgSend(result, sel_setPriority_, v23);
  sub_1E0DF2BA8();
  uint64_t result = (char *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_1E0F09980;
  uint64_t v25 = *(void **)&v17[v21];
  if (!v25)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  char v26 = result;
  uint64_t v27 = self;
  *((void *)v26 + 4) = v25;
  uint64_t v28 = *(void **)&v14[v15];
  id v29 = v25;
  id v30 = objc_msgSend(v28, sel_topAnchor);
  id v31 = objc_msgSend(v17, sel_topAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *((void *)v26 + 5) = v32;
  id v33 = objc_msgSend(*(id *)&v14[v15], sel_leadingAnchor);
  id v34 = objc_msgSend(v17, sel_layoutMarginsGuide);
  id v35 = objc_msgSend(v34, sel_leadingAnchor);

  id v36 = objc_msgSend(v33, sel_constraintGreaterThanOrEqualToAnchor_, v35);
  *((void *)v26 + 6) = v36;
  id v37 = objc_msgSend(v17, sel_layoutMarginsGuide);
  id v38 = objc_msgSend(v37, sel_trailingAnchor);

  id v39 = objc_msgSend(*(id *)&v14[v15], sel_trailingAnchor);
  id v40 = objc_msgSend(v38, sel_constraintGreaterThanOrEqualToAnchor_, v39);

  *((void *)v26 + 7) = v40;
  sub_1E0ECD340();
  sub_1E0E8CDD8();
  uint64_t v41 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v41);

  uint64_t v42 = *(void **)&v14[v15];
  char v43 = self;
  if (qword_1EAD6D588 != -1) {
    swift_once();
  }
  sub_1E0ECD1D0();
  uint64_t v44 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v45 = objc_msgSend(v43, sel_hk_preferredFontForTextStyle_symbolicTraits_, v44, 2);

  objc_msgSend(v42, sel_setFont_, v45);
  sub_1E0EA5CB8();
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1E0F07C90;
  uint64_t v47 = sub_1E0ECC0B0();
  uint64_t v48 = MEMORY[0x1E4FB1138];
  *(void *)(v46 + 32) = v47;
  *(void *)(v46 + 40) = v48;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1E0E8AC40();
  uint64_t v49 = v17;
  sub_1E0ECD670();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v49;
}

void sub_1E0EA5748(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1E4E41170](v4);
  if (v5)
  {
    uint64_t v6 = (char *)v5;
    if (a2)
    {
      id v7 = a2;
      id v8 = objc_msgSend(v6, sel_traitCollection);
      id v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

      id v10 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      uint64_t v11 = sub_1E0ECD1D0();
      uint64_t v13 = v12;
      if (v11 == sub_1E0ECD1D0() && v13 == v14)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_1E0ECD9E0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          goto LABEL_8;
        }
      }
LABEL_12:

      return;
    }
LABEL_8:
    uint64_t v17 = *(void **)&v6[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel];
    id v18 = self;
    if (qword_1EAD6D588 != -1) {
      swift_once();
    }
    sub_1E0ECD1D0();
    id v19 = (void *)sub_1E0ECD190();
    swift_bridgeObjectRelease();
    id v20 = (char *)objc_msgSend(v18, sel_hk_preferredFontForTextStyle_symbolicTraits_, v19, 2);

    objc_msgSend(v17, sel_setFont_, v20);
    uint64_t v6 = v20;
    goto LABEL_12;
  }
}

id sub_1E0EA598C(uint64_t a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for CalendarMonthHeaderView();
  objc_msgSendSuper2(&v8, sel_applyLayoutAttributes_, a1);
  type metadata accessor for CalendarViewLayoutAttributes();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void *)(v3 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset);
    swift_beginAccess();
    *(void *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset] = *v5;
    uint64_t v6 = (void *)(v4 + OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek);
    swift_beginAccess();
    *(void *)&v1[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek] = *v6;
  }
  return sub_1E0EA5A60();
}

id sub_1E0EA5A60()
{
  objc_msgSend(v0, sel_bounds);
  id result = *(id *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint];
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday];
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  double v6 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset];
  double v7 = (v1 - (v6 + v6))
     / (double)*(uint64_t *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek];
  double v8 = v7 * 0.5 + v6 + v7 * (double)v5;
  return objc_msgSend(result, sel_setConstant_, v8);
}

id CalendarMonthHeaderView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarMonthHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CalendarMonthHeaderView.setMonthText(_:alignedToWeekday:)(Swift::String_optional _, Swift::Int alignedToWeekday)
{
  BOOL v4 = *(void **)(v2 + OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel);
  if (_.value._object) {
    uint64_t v5 = (void *)sub_1E0ECD190();
  }
  else {
    uint64_t v5 = 0;
  }
  objc_msgSend(v4, sel_setText_, v5);

  *(void *)(v2 + OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday) = alignedToWeekday;
  sub_1E0EA5A60();
}

void sub_1E0EA5C6C()
{
  qword_1EAD6FBD0 = 0x403A000000000000;
}

id sub_1E0EA5C7C()
{
  qword_1EAD6FBD8 = *MEMORY[0x1E4FB2998];
  return (id)qword_1EAD6FBD8;
}

uint64_t type metadata accessor for CalendarMonthHeaderView()
{
  return self;
}

void sub_1E0EA5CB8()
{
  if (!qword_1EAD6F5F0)
  {
    sub_1E0E8AB6C();
    unint64_t v0 = sub_1E0ECD9C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6F5F0);
    }
  }
}

uint64_t sub_1E0EA5D10()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1E0EA5D48(uint64_t a1, void *a2)
{
  sub_1E0EA5748(a1, a2, v2);
}

uint64_t method lookup function for CalendarMonthHeaderView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalendarMonthHeaderView);
}

void sub_1E0EA5D68()
{
  uint64_t v1 = OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_monthLabel;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v3 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setTextAlignment_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_horizontalSectionInset] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_weekday] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_numberOfDaysPerWeek] = 7;
  *(void *)&v0[OBJC_IVAR____TtC8HealthUI23CalendarMonthHeaderView_xPositionConstraint] = 0;

  sub_1E0ECD8F0();
  __break(1u);
}

id static HKInteractiveChartOverlayPredicate.stateOfMindSampleCountOverlay(for:)(uint64_t a1)
{
  id v2 = self;
  sub_1E0DF2BA8();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1E0F06EB0;
  sub_1E0DF0BE0();
  HKStateOfMindAssociationFromDomain();
  *(void *)(v3 + 32) = sub_1E0ECD680();
  sub_1E0ECD340();
  BOOL v4 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_predicateForStatesOfMindWithAssociations_, v4);

  id v6 = HKUILocalizedStringForStateOfMindDomain(a1);
  sub_1E0ECD1D0();

  id v7 = objc_allocWithZone((Class)HKInteractiveChartOverlayPredicate);
  double v8 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithPredicate_name_, v5, v8);

  return v9;
}

id static HKInteractiveChartOverlayPredicate.stateOfMindSampleCountOverlay(for:title:)()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_predicateForStatesOfMindWithKind_, HKStateOfMindKindFromReflectiveInterval());
  id v2 = objc_allocWithZone((Class)HKInteractiveChartOverlayPredicate);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithPredicate_name_, v1, v3);

  return v4;
}

id sub_1E0EA609C(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECBDF0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2, v4);
  uint64_t v56 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v7);
  id v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_1E0ECBDD0();
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v43 = a1;
    uint64_t v58 = MEMORY[0x1E4FBC860];
    sub_1E0DEE988(0, v11, 0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v42 = v10;
    unint64_t v14 = v10 + v13;
    uint64_t v53 = *(void *)(v3 + 72);
    uint64_t v54 = v12;
    uint64_t v52 = (uint64_t (**)(char *, uint64_t))(v3 + 88);
    LODWORD(v12) = *MEMORY[0x1E4F65900];
    int v50 = *MEMORY[0x1E4F658F0];
    int v51 = (int)v12;
    LODWORD(v12) = *MEMORY[0x1E4F658E8];
    int v48 = *MEMORY[0x1E4F658F8];
    int v49 = (int)v12;
    int v45 = *MEMORY[0x1E4F658E0];
    uint64_t v55 = (void (**)(char *, uint64_t))(v3 + 8);
    unint64_t v47 = (unint64_t)"ndar:axisStyle:categoryTitles:)";
    unint64_t v44 = (unint64_t)"drop.oxygen.fill";
    do
    {
      uint64_t v15 = v54;
      v54(v9, (char *)v14, v2);
      char v16 = v56;
      v15(v56, v9, v2);
      int v17 = (*v52)(v16, v2);
      unint64_t v18 = 0x69662E7472616568;
      unint64_t v19 = 0xEA00000000006C6CLL;
      if (v17 != v51)
      {
        if (v17 == v50)
        {
          unint64_t v18 = 0x69662E73676E756CLL;
        }
        else if (v17 == v49)
        {
          unint64_t v19 = v47 | 0x8000000000000000;
          unint64_t v18 = 0xD000000000000010;
        }
        else if (v17 == v48)
        {
          unint64_t v18 = 0xD000000000000014;
          unint64_t v19 = v44 | 0x8000000000000000;
        }
        else if (v17 == v45)
        {
          unint64_t v19 = 0xEF6C6C69662E656CLL;
          unint64_t v18 = 0x62756F642E646562;
        }
        else
        {
          (*v55)(v56, v2);
        }
      }
      (*v55)(v9, v2);
      uint64_t v20 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1E0DEE988(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v58;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1E0DEE988(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v58;
      }
      *(void *)(v20 + 16) = v22 + 1;
      uint64_t v23 = v20 + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v19;
      v14 += v53;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a1 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = (void *)sub_1E0ECBB00();
  id v25 = objc_msgSend(objc_allocWithZone((Class)HKAxisStyle), sel_init);
  char v26 = self;
  id v27 = objc_msgSend(v26, sel_hk_chartAxisLabelColor);
  uint64_t v28 = self;
  id v29 = objc_msgSend(v28, sel_strokeStyleWithColor_lineWidth_, v27, 1.0);

  objc_msgSend(v25, sel_setAxisLineStyle_, v29);
  id v30 = objc_msgSend(v26, sel_hk_chartAxisLabelColor);
  id v31 = objc_msgSend(self, sel_hk_roundedSystemFontWithSize_weight_, 15.0, *MEMORY[0x1E4FB09D0]);
  id v32 = objc_msgSend(self, sel_labelStyleWithColor_font_horizontalAlignment_verticalAlignment_isSystemSymbol_, v30, v31, 1, 3, 1);

  objc_msgSend(v25, sel_setLabelStyle_, v32);
  objc_msgSend(v25, sel_setTickPositions_, 0);
  objc_msgSend(v25, sel_setAxisLabelPosition_, 1);
  objc_msgSend(v25, sel_setShowGridLines_, 1);
  objc_msgSend(v25, sel_setLocation_, 2);
  id v33 = objc_msgSend(v26, sel_hk_chartAxisMajorGridColor);
  id v34 = objc_msgSend(v28, sel_strokeStyleWithColor_lineWidth_, v33, 0.5);

  objc_msgSend(v34, sel_setDashStyle_, 1);
  objc_msgSend(v25, sel_setGridLineStyle_, v34);
  id v35 = objc_msgSend(v26, sel_hk_chartGrayGraphColor);
  id v36 = objc_msgSend(v28, sel_strokeStyleWithColor_lineWidth_, v35, 0.5);

  objc_msgSend(v36, sel_setDashStyle_, 0);
  objc_msgSend(v25, sel_setReferenceGridLineStyle_, v36);

  id v37 = (void *)sub_1E0ECD320();
  swift_bridgeObjectRelease();
  id v38 = (objc_class *)type metadata accessor for BalanceDayXAxis();
  v57.receiver = v46;
  v57.super_class = v38;
  id v39 = objc_msgSendSuper2(&v57, sel_initWithCurrentCalendar_axisStyle_categoryTitles_, v24, v25, v37);

  uint64_t v40 = sub_1E0ECBB60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(a1, v40);
  return v39;
}

id sub_1E0EA684C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceDayXAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BalanceDayXAxis()
{
  return self;
}

id static BreathingDisturbancesAxis.standardAxis(with:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for BreathingDisturbancesAxis());
  return BreathingDisturbancesAxis.init(displayType:)(a1);
}

id BreathingDisturbancesAxis.__allocating_init(displayType:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return BreathingDisturbancesAxis.init(displayType:)(a1);
}

uint64_t type metadata accessor for BreathingDisturbancesAxis()
{
  return self;
}

id BreathingDisturbancesAxis.init(displayType:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___HKBreathingDisturbancesAxis_displayType] = a1;
  id v3 = objc_allocWithZone((Class)HKNumericAxisConfiguration);
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_init);
  uint64_t v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_preferredAxisStyle);
  objc_msgSend(v7, sel_setPreferredStyle_, v8);

  objc_msgSend(v7, sel_setTopVerticalLabelPadding_, 5.0);
  objc_msgSend(v7, sel_setBottomVerticalLabelPadding_, 5.0);
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for BreathingDisturbancesAxis();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithConfiguration_, v7);

  return v9;
}

id sub_1E0EA6B34(void *a1)
{
  swift_getObjectType();
  id v2 = objc_msgSend(a1, sel_maxValue);
  if (v2 && (uint64_t v21 = (uint64_t)v2, (swift_dynamicCast() & 1) != 0))
  {
    id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
    id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v20);
    id v5 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v3, v4);

    return v5;
  }
  else
  {
    if (qword_1EAD6D4E0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1E0ECC010();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EAD74138);
    id v19 = a1;
    id v8 = sub_1E0ECBFF0();
    os_log_type_t v9 = sub_1E0ECD520();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v21 = v11;
      *(_DWORD *)uint64_t v10 = 136446466;
      uint64_t v12 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v12, v13, &v21);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      id v14 = v19;
      id v15 = objc_msgSend(v14, sel_description);
      uint64_t v16 = sub_1E0ECD1D0();
      unint64_t v18 = v17;

      sub_1E0DED7E4(v16, v18, &v21);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v8, v9, "[%{public}s] Cannot adjust values for incompatible range: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v11, -1, -1);
      MEMORY[0x1E4E41080](v10, -1, -1);
    }
    else
    {
    }
    return v19;
  }
}

id BreathingDisturbancesAxis.__allocating_init(configuration:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithConfiguration_, a1);

  return v3;
}

void BreathingDisturbancesAxis.init(configuration:)()
{
}

id BreathingDisturbancesAxis.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BreathingDisturbancesAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0EA6FB0(double a1, double a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (a5)
  {
    id v8 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
    objc_msgSend(v8, sel_setLabelType_, 1);
    id v9 = objc_msgSend(a4, (SEL)&selRef_predicateForObjectsWithMetadataKey_allowedValues_);
    objc_msgSend(v9, sel_adjustedDoubleForDaemonDouble_, a1);

    uint64_t v10 = (void *)sub_1E0ECBD90();
    objc_msgSend(v8, sel_setLocation_, v10);

    id v11 = v8;
    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1E0ECD350();
    }
    sub_1E0ECD370();
    sub_1E0ECD340();
  }
  id v12 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v12, sel_setLabelType_, 0);
  id v13 = objc_msgSend(a4, sel_presentation);
  objc_msgSend(v13, sel_adjustedDoubleForDaemonDouble_, (a2 - a1) * 0.5 + a1);

  id v14 = (void *)sub_1E0ECBD90();
  objc_msgSend(v12, sel_setLocation_, v14);

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EAD740B8;
  sub_1E0ECB680();
  swift_bridgeObjectRelease();

  uint64_t v16 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setText_, v16, 0xE000000000000000, 0, 0xE000000000000000);

  id v17 = v12;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v18 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v18, sel_setLabelType_, 1);
  id v19 = objc_msgSend(a4, sel_presentation);
  objc_msgSend(v19, sel_adjustedDoubleForDaemonDouble_, a2);

  double v20 = (void *)sub_1E0ECBD90();
  objc_msgSend(v18, sel_setLocation_, v20);

  id v21 = v18;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();

  return v23;
}

uint64_t sub_1E0EA7444(void *a1)
{
  swift_getObjectType();
  id v3 = objc_msgSend(a1, sel_minValue);
  if (v3
    && (id v31 = v3, (swift_dynamicCast() & 1) != 0)
    && (id v4 = objc_msgSend(a1, sel_maxValue)) != 0
    && (id v31 = v4, (swift_dynamicCast() & 1) != 0)
    && (~*(void *)&v29 & 0x7FF0000000000000) != 0
    && (v29 - v29 > 0.0
      ? (BOOL v5 = (COERCE_UNSIGNED_INT64(v29 - v29) & 0x7FF0000000000000) == 0x7FF0000000000000)
      : (BOOL v5 = 1),
        !v5))
  {
    id v19 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
    objc_msgSend(v19, sel__value);
    double v21 = v20;

    id v22 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
    objc_msgSend(v22, sel__value);
    double v24 = v23;

    id v25 = *(void **)(v1 + OBJC_IVAR___HKBreathingDisturbancesAxis_displayType);
    uint64_t v26 = sub_1E0EA6FB0(v21, v24, 0, v25, 1);
    unint64_t v27 = sub_1E0EA6FB0(v24, v29, 1, v25, 0);
    sub_1E0E4E95C(v27);
    return v26;
  }
  else
  {
    if (qword_1EAD6D4E0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1E0ECC010();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EAD74138);
    id v7 = a1;
    id v8 = sub_1E0ECBFF0();
    os_log_type_t v9 = sub_1E0ECD520();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      id v31 = (id)v11;
      *(_DWORD *)uint64_t v10 = 136446466;
      uint64_t v12 = sub_1E0ECDBC0();
      uint64_t v30 = sub_1E0DED7E4(v12, v13, (uint64_t *)&v31);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      id v14 = v7;
      id v15 = objc_msgSend(v14, sel_description, v30, v31);
      uint64_t v16 = sub_1E0ECD1D0();
      unint64_t v18 = v17;

      sub_1E0DED7E4(v16, v18, (uint64_t *)&v31);
      sub_1E0ECD6D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v8, v9, "[%{public}s] Asked to create axis labels for incompatible range: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v11, -1, -1);
      MEMORY[0x1E4E41080](v10, -1, -1);
    }
    else
    {
    }
    return 0;
  }
}

uint64_t method lookup function for BreathingDisturbancesAxis(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BreathingDisturbancesAxis);
}

uint64_t dispatch thunk of BreathingDisturbancesAxis.__allocating_init(displayType:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t HKStateOfMindDomain.init(preferredOverlay:)(uint64_t a1)
{
  uint64_t v2 = sub_1E0ECC010();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2, v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t result = 1;
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      sub_1E0ECBFE0();
      uint64_t v12 = sub_1E0ECBFF0();
      os_log_type_t v13 = sub_1E0ECD520();
      if (!os_log_type_enabled(v12, v13))
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        goto LABEL_5;
      }
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v20 = sub_1E0DED7E4(0xD000000000000013, 0x80000001E0F2D4B0, &v21);
      sub_1E0ECD6D0();
      *(_WORD *)(v14 + 12) = 2048;
      uint64_t v20 = a1;
      sub_1E0ECD6D0();
      _os_log_impl(&dword_1E0B26000, v12, v13, "[%{public}s] Cannot create state of mind for preferred overlay: %ld", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v15, -1, -1);
      MEMORY[0x1E4E41080](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
      uint64_t result = 0;
      break;
    case 100:
      return result;
    case 101:
      uint64_t result = 2;
      break;
    case 102:
      uint64_t result = 3;
      break;
    case 103:
      uint64_t result = 4;
      break;
    case 104:
      uint64_t result = 5;
      break;
    case 105:
      uint64_t result = 6;
      break;
    case 106:
      uint64_t result = 7;
      break;
    case 107:
      uint64_t result = 8;
      break;
    case 108:
      uint64_t result = 9;
      break;
    case 109:
      uint64_t result = 10;
      break;
    case 110:
      uint64_t result = 11;
      break;
    case 111:
      uint64_t result = 12;
      break;
    case 112:
      uint64_t result = 13;
      break;
    case 113:
      uint64_t result = 14;
      break;
    case 114:
      uint64_t result = 15;
      break;
    case 115:
      uint64_t result = 16;
      break;
    case 116:
      uint64_t result = 17;
      break;
    case 117:
      uint64_t result = 18;
      break;
    default:
      sub_1E0ECBFE0();
      uint64_t v16 = sub_1E0ECBFF0();
      os_log_type_t v17 = sub_1E0ECD520();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v21 = v19;
        *(_DWORD *)uint64_t v18 = 136446466;
        uint64_t v20 = sub_1E0DED7E4(0xD000000000000013, 0x80000001E0F2D4B0, &v21);
        sub_1E0ECD6D0();
        *(_WORD *)(v18 + 12) = 2048;
        uint64_t v20 = a1;
        sub_1E0ECD6D0();
        _os_log_impl(&dword_1E0B26000, v16, v17, "[%{public}s] Cannot create state of mind for unknown preferred overlay: %ld", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v19, -1, -1);
        MEMORY[0x1E4E41080](v18, -1, -1);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
        uint64_t result = 0;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
LABEL_5:
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1E0EA7E8C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

char *sub_1E0EA7EEC(CGFloat *a1, char a2)
{
  CGFloat v5 = a1[1];
  CGFloat v6 = a1[2];
  CGFloat v7 = a1[3];
  CGFloat v8 = a1[4];
  CGFloat v9 = a1[5];
  v37.double y = *(CGFloat *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue);
  v36.CGFloat a = *a1;
  CGFloat a = v36.a;
  v36.b = v5;
  v36.c = v6;
  v36.d = v7;
  v36.tCGFloat x = v8;
  v36.tdouble y = v9;
  v37.CGFloat x = 0.0;
  CGPoint v10 = CGPointApplyAffineTransform(v37, &v36);
  double y = v10.y;
  v38.double y = *(CGFloat *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue);
  v36.CGFloat a = a;
  v36.b = v5;
  v36.c = v6;
  v36.d = v7;
  v36.tCGFloat x = v8;
  v36.tdouble y = v9;
  v38.CGFloat x = 0.0;
  CGPoint v13 = CGPointApplyAffineTransform(v38, &v36);
  CGFloat v12 = v13.y;
  if (a2)
  {
    HKUIFloorCGPointToScreenScale(v10.x, v10.y);
    double y = v14;
    HKUIFloorCGPointToScreenScale(v13.x, v13.y);
  }
  double v34 = v12;
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates);
  int64_t v16 = *(void *)(v15 + 16);
  os_log_type_t v17 = (char *)MEMORY[0x1E4FBC860];
  if (v16)
  {
    double v33 = y;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1E0DEEC20(0, v16, 0);
    os_log_type_t v17 = (char *)v35;
    uint64_t v18 = (void **)(v15 + 64);
    do
    {
      uint64_t v20 = (uint64_t)*(v18 - 4);
      uint64_t v19 = (uint64_t)*(v18 - 3);
      CGPoint v39 = (CGPoint)*((_OWORD *)v18 - 1);
      uint64_t v21 = *v18;
      v36.CGFloat a = a;
      v36.b = v5;
      v36.c = v6;
      v36.d = v7;
      v36.tCGFloat x = v8;
      v36.tdouble y = v9;
      CGPoint v22 = CGPointApplyAffineTransform(v39, &v36);
      CGFloat x = v22.x;
      CGFloat v24 = v22.y;
      swift_bridgeObjectRetain();
      id v25 = v21;
      if (a2)
      {
        CGFloat x = HKUIFloorCGPointToScreenScale(v22.x, v22.y);
        CGFloat v24 = v26;
      }
      unint64_t v28 = *(void *)(v35 + 16);
      unint64_t v27 = *(void *)(v35 + 24);
      if (v28 >= v27 >> 1) {
        sub_1E0DEEC20(v27 > 1, v28 + 1, 1);
      }
      *(void *)(v35 + 16) = v28 + 1;
      double v29 = (CGFloat *)(v35 + 40 * v28);
      *((void *)v29 + 4) = v20;
      *((void *)v29 + 5) = v19;
      v29[6] = x;
      v29[7] = v24;
      *((void *)v29 + 8) = v21;
      v18 += 5;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    double y = v33;
  }
  uint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_userInfo);
  swift_getObjectType();
  id v31 = (objc_class *)type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  swift_unknownObjectRetain();
  return sub_1E0EAA2B4(v17, v30, (char *)objc_allocWithZone(v31), y, v34);
}

id sub_1E0EA81C8()
{
  return sub_1E0EA9A10(type metadata accessor for HKMultiLineSeriesBlockCoordinate);
}

uint64_t type metadata accessor for HKMultiLineSeriesBlockCoordinate()
{
  return self;
}

uint64_t sub_1E0EA8408(CGContext *a1, void *a2, long long *a3, void *a4)
{
  uint64_t v5 = v4;
  long long v21 = a3[1];
  long long v22 = *a3;
  CGFloat v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*((void *)a3 + 4);
  uint64_t v10 = *((void *)a3 + 5);
  CGContextSaveGState(a1);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1E0E3FC6C(MEMORY[0x1E4FBC860]);
  objc_msgSend(a4, sel_virtualMarginInsets);
  double v13 = v12;
  double v15 = v14;
  objc_msgSend(a4, sel_screenRectForSeries_, v5);
  CGFloat v16 = (CGRectGetWidth(v27) - v13 - v15) * 1.4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v11;
  *(CGFloat *)(v17 + 24) = v16;
  *(void *)(v17 + 32) = a1;
  id v25 = sub_1E0EA9CE8;
  uint64_t v26 = v17;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v24 = sub_1E0E3D108;
  *((void *)&v24 + 1) = &block_descriptor_19;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v19 = a1;
  swift_release();
  long long aBlock = v22;
  long long v24 = v21;
  id v25 = v9;
  uint64_t v26 = v10;
  objc_msgSend(a2, sel_enumerateCoordinatesWithTransform_roundToViewScale_block_, &aBlock, 1, v18);
  _Block_release(v18);
  CGContextRestoreGState(v19);
  return swift_release();
}

uint64_t sub_1E0EA85C4(uint64_t result, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, CGContext *a10)
{
  if (result)
  {
    type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v12 = *(void *)(result + OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates);
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        double v14 = (void **)(v12 + 64);
        do
        {
          double v15 = *v14;
          uint64_t v16 = (uint64_t)*(v14 - 3);
          v18[0] = (uint64_t)*(v14 - 4);
          v18[1] = v16;
          long long v19 = *((_OWORD *)v14 - 1);
          uint64_t v20 = v15;
          swift_bridgeObjectRetain();
          id v17 = v15;
          sub_1E0EA86FC(v18, (uint64_t *)(a9 + 16), a10, a2);

          swift_bridgeObjectRelease();
          v14 += 5;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1E0EA86FC(uint64_t *a1, uint64_t *a2, CGContext *a3, double a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  double v10 = *((double *)a1 + 2);
  double v9 = *((double *)a1 + 3);
  uint64_t v11 = (void *)a1[4];
  swift_beginAccess();
  uint64_t v12 = *a2;
  if (*(void *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1E0E5D80C(v8, v7);
    if (v14)
    {
      double v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
      swift_endAccess();
      id v16 = v15;
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_currentPoint);
      double v18 = vabdd_f64(v10, v17);
      if (vabdd_f64(v18, a4) < 0.01 || v18 <= a4)
      {
        objc_msgSend(v16, sel_addLineToPoint_, v10, v9);
        id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
        id v21 = objc_msgSend(v11, sel_strokeStyle);
        if (v21)
        {
          long long v22 = v21;
          objc_msgSend(v20, sel_appendPath_, v16);
          objc_msgSend(v22, sel_applyToContext_, a3);
          double v23 = (const CGPath *)objc_msgSend(v20, sel_CGPath);
          CGContextAddPath(a3, v23);

          CGContextStrokePath(a3);
        }
      }
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  id v24 = objc_allocWithZone(MEMORY[0x1E4FB14C0]);
  swift_bridgeObjectRetain();
  id v25 = objc_msgSend(v24, sel_init);
  swift_beginAccess();
  if (v25)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *a2;
    *a2 = 0x8000000000000000;
    sub_1E0E5F6A4((uint64_t)v25, v8, v7, isUniquelyReferenced_nonNull_native);
    *a2 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    CGRect v27 = (void *)sub_1E0EA9E34(v8, v7);
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v28 = *a2;
  if (*(void *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1E0E5D80C(v8, v7);
    if (v30)
    {
      id v31 = *(void **)(*(void *)(v28 + 56) + 8 * v29);
      swift_endAccess();
      id v16 = v31;
      swift_bridgeObjectRelease();
LABEL_18:
      objc_msgSend(v16, sel_moveToPoint_, v10, v9, v32);

      return;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
}

char *sub_1E0EA8A08(char *result)
{
  if (result)
  {
    type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    uint64_t result = (char *)swift_dynamicCastClass();
    if (result)
    {
      uint64_t v1 = *(void *)&result[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates];
      uint64_t v2 = *(void *)(v1 + 16);
      if (v2)
      {
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        for (uint64_t i = (void **)(v1 + 64); ; i += 5)
        {
          CGFloat v4 = *((double *)i - 2);
          CGFloat v5 = *((double *)i - 1);
          CGFloat v6 = *i;
          swift_bridgeObjectRetain();
          id v7 = v6;
          id v8 = objc_msgSend(v7, sel_pointMarkerStyle);
          if (v8)
          {
            double v9 = v8;
            uint64_t result = (char *)objc_msgSend(self, sel_chartPointWithLineSeriesPresentationStyle_, v8);
            if (!result)
            {
              __break(1u);
              return result;
            }
            double v10 = result;
            double v11 = HKChartSeriesPointMarkerBaseRect(result);
            CGFloat v13 = v12;
            CGFloat v15 = v14;
            CGFloat v17 = v16;
            id v18 = objc_msgSend(v10, sel_CGImage);
            if (v18)
            {
              long long v19 = v18;
              v20.origin.CGFloat x = v11;
              v20.origin.double y = v13;
              v20.size.CGFloat width = v15;
              v20.size.CGFloat height = v17;
              CGRectOffset(v20, v4, v5);
              sub_1E0ECD4D0();

              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
            }
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          if (!--v2)
          {
            swift_unknownObjectRelease();
            return (char *)swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
  return result;
}

void sub_1E0EA8BE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  swift_getObjectType();
  id v12 = objc_msgSend(a1, sel_chartPoints);
  if (v12
    && (CGFloat v13 = v12,
        sub_1E0E425C4(0, (unint64_t *)&qword_1EAD6DBE0),
        unint64_t v14 = sub_1E0ECD330(),
        v13,
        uint64_t v15 = sub_1E0E45F70(v14),
        swift_bridgeObjectRelease(),
        v15))
  {
    id v16 = objc_msgSend(a5, sel_transform);
    id v17 = objc_msgSend(a6, sel_transform);
    id v18 = v16;
    id v19 = v17;
    unint64_t v20 = sub_1E0EAA36C(v15, v18, v19);
    swift_bridgeObjectRelease();

    if (v20 >> 62)
    {
      sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
      swift_bridgeObjectRetain();
      sub_1E0ECD900();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1E0ECD9F0();
      sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    }
    swift_bridgeObjectRelease();
    sub_1E0E425C4(0, (unint64_t *)&unk_1EAD6EC50);
    id v21 = (void *)sub_1E0ECD320();
    swift_bridgeObjectRelease();
    v31[0] = a2;
    v31[1] = a3;
    void v31[2] = a4;
    id v22 = objc_msgSend(self, sel_coordinateListWithCoordinates_blockPath_, v21, v31);

    if (v22)
    {
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1EAD6D4D0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1E0ECC010();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EAD74120);
    id v24 = a1;
    id v25 = sub_1E0ECBFF0();
    os_log_type_t v26 = sub_1E0ECD520();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v31[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446722;
      uint64_t v29 = sub_1E0ECDBC0();
      uint64_t v32 = sub_1E0DED7E4(v29, v30, v31);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v32 = sub_1E0DED7E4(0xD000000000000027, 0x80000001E0F2D660, v31);
      sub_1E0ECD6D0();
      *(_WORD *)(v27 + 22) = 2080;

      uint64_t v32 = sub_1E0DED7E4(0xD00000000000001DLL, 0x80000001E0F2D690, v31);
      sub_1E0ECD6D0();

      _os_log_impl(&dword_1E0B26000, v25, v26, "%{public}s] %s: Unable to cast chartPoints to [HKMultiLineChartPoint], found: %s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v28, -1, -1);
      MEMORY[0x1E4E41080](v27, -1, -1);
    }
    else
    {
    }
    objc_msgSend(objc_allocWithZone((Class)HKGraphSeriesBlockCoordinateList), sel_init);
  }
}

double sub_1E0EA9218(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, double (*a6)(uint64_t, double, double))
{
  swift_unknownObjectRetain();
  id v11 = a1;
  double v12 = a6(a5, a2, a3);
  swift_unknownObjectRelease();

  return v12;
}

BOOL sub_1E0EA9290()
{
  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  uint64_t v0 = (char *)swift_dynamicCastClass();
  if (v0) {
    swift_unknownObjectRetain();
  }
  uint64_t v1 = (char *)swift_dynamicCastClass();
  if (v1 && (swift_unknownObjectRetain(), v0))
  {
    double v2 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue];

    double v3 = *(double *)&v1[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue];
    return v2 < v3;
  }
  else
  {
    if (qword_1EAD6D4D0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1E0ECC010();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EAD74120);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    CGFloat v6 = sub_1E0ECBFF0();
    os_log_type_t v7 = sub_1E0ECD520();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = v15;
      *(_DWORD *)uint64_t v8 = 136446978;
      uint64_t v9 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v9, v10, &v16);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_1E0DED7E4(0xD00000000000001CLL, 0x80000001E0F2D5E0, &v16);
      sub_1E0ECD6D0();
      *(_WORD *)(v8 + 22) = 2080;
      swift_getObjectType();
      uint64_t v11 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v11, v12, &v16);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 32) = 2080;
      swift_getObjectType();
      uint64_t v13 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v13, v14, &v16);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v6, v7, "%{public}s] %s: Unable to compare block coordinates, found type: %s and %s", (uint8_t *)v8, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v15, -1, -1);
      MEMORY[0x1E4E41080](v8, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    return 0;
  }
}

BOOL sub_1E0EA95E8()
{
  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  uint64_t v0 = (char *)swift_dynamicCastClass();
  if (v0) {
    swift_unknownObjectRetain();
  }
  uint64_t v1 = (char *)swift_dynamicCastClass();
  if (v1 && (swift_unknownObjectRetain(), v0))
  {
    double v2 = *(double *)&v0[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue];

    double v3 = *(double *)&v1[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue];
    return v3 < v2;
  }
  else
  {
    if (qword_1EAD6D4D0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1E0ECC010();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EAD74120);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    CGFloat v6 = sub_1E0ECBFF0();
    os_log_type_t v7 = sub_1E0ECD520();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = v15;
      *(_DWORD *)uint64_t v8 = 136446978;
      uint64_t v9 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v9, v10, &v16);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_1E0DED7E4(0xD00000000000001FLL, 0x80000001E0F2D5C0, &v16);
      sub_1E0ECD6D0();
      *(_WORD *)(v8 + 22) = 2080;
      swift_getObjectType();
      uint64_t v11 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v11, v12, &v16);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 32) = 2080;
      swift_getObjectType();
      uint64_t v13 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v13, v14, &v16);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v6, v7, "%{public}s] %s: Unable to compare block coordinates, found type: %s and %s", (uint8_t *)v8, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v15, -1, -1);
      MEMORY[0x1E4E41080](v8, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    return 0;
  }
}

uint64_t sub_1E0EA9940(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v9 = a1;
  LOBYTE(a5) = a5(a3, a4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return a5 & 1;
}

id sub_1E0EA99F8()
{
  return sub_1E0EA9A10(type metadata accessor for HKMultiLineSeries);
}

id sub_1E0EA9A10(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for HKMultiLineSeries()
{
  return self;
}

void destroy for HKMultiLineSeriesCoordinate(uint64_t a1)
{
  swift_bridgeObjectRelease();
  double v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for HKMultiLineSeriesCoordinate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  CGFloat v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for HKMultiLineSeriesCoordinate(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  CGFloat v4 = (void *)a2[4];
  id v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HKMultiLineSeriesCoordinate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for HKMultiLineSeriesCoordinate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HKMultiLineSeriesCoordinate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HKMultiLineSeriesCoordinate()
{
  return &type metadata for HKMultiLineSeriesCoordinate;
}

uint64_t sub_1E0EA9C64()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t sub_1E0EA9C70()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0EA9CA8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1E0EA9CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1E0EA85C4(a1, *(double *)(v7 + 24), a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(CGContext **)(v7 + 32));
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

double sub_1E0EA9D30@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1E0E5D80C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1E0E5FEEC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1E0DEDF98((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1E0EA9F04(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1E0EA9E34(uint64_t a1, uint64_t a2)
{
  long long v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1E0E5D80C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *long long v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1E0E60BFC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1E0EAA0DC(v6, v9);
  *long long v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1E0EA9F04(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1E0ECD7B0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1E0ECDA50();
        swift_bridgeObjectRetain();
        sub_1E0ECD220();
        uint64_t v10 = sub_1E0ECDA70();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          id v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    id v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *id v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1E0EAA0DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1E0ECD7B0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1E0ECDA50();
        swift_bridgeObjectRetain();
        sub_1E0ECD220();
        uint64_t v9 = sub_1E0ECDA70();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    id v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *id v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

char *sub_1E0EAA2B4(char *result, uint64_t a2, char *a3, double a4, double a5)
{
  *(void *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_coordinates] = result;
  uint64_t v5 = *((void *)result + 2);
  if (v5)
  {
    double v7 = *((double *)result + 6);
    unint64_t v6 = (double *)(result + 48);
    double v8 = v7;
    double v9 = v7;
    do
    {
      double v10 = *v6;
      v6 += 5;
      double v11 = v10;
      if (v10 < v9) {
        double v9 = v11;
      }
      if (v8 <= v11) {
        double v8 = v11;
      }
      --v5;
    }
    while (v5);
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_minYValue] = a4;
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_maxYValue] = a5;
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_startXValue] = v9;
    *(double *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_endXValue] = v8;
    *(void *)&a3[OBJC_IVAR____TtC8HealthUI32HKMultiLineSeriesBlockCoordinate_userInfo] = a2;
    v12.receiver = a3;
    v12.super_class = (Class)type metadata accessor for HKMultiLineSeriesBlockCoordinate();
    return (char *)objc_msgSendSuper2(&v12, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E0EAA36C(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    do
    {
      swift_unknownObjectRetain();
      double v9 = sub_1E0E5A208(a2, a3);
      uint64_t v10 = swift_unknownObjectRelease();
      if (v9)
      {
        MEMORY[0x1E4E3E9E0](v10);
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E0ECD350();
        }
        sub_1E0ECD370();
        sub_1E0ECD340();
      }
      v8 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

void sub_1E0EAA470()
{
  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  if (!swift_dynamicCastClass())
  {
    if (qword_1EAD6D4D0 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_1E0ECC010();
    __swift_project_value_buffer(v0, (uint64_t)qword_1EAD74120);
    swift_unknownObjectRetain_n();
    uint64_t v1 = sub_1E0ECBFF0();
    os_log_type_t v2 = sub_1E0ECD520();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v4 = swift_slowAlloc();
      uint64_t v9 = v4;
      *(_DWORD *)uint64_t v3 = 136446722;
      uint64_t v5 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v5, v6, &v9);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2080;
      sub_1E0DED7E4(0xD00000000000002ELL, 0x80000001E0F2D630, &v9);
      sub_1E0ECD6D0();
      *(_WORD *)(v3 + 22) = 2080;
      swift_getObjectType();
      uint64_t v7 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v7, v8, &v9);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v1, v2, "%{public}s] %s: Unable to calculate x axis distance, found type: %s instead of HKMultiLineSeriesBlockCoordinate", (uint8_t *)v3, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v4, -1, -1);
      MEMORY[0x1E4E41080](v3, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1E0EAA6E4()
{
  swift_getObjectType();
  type metadata accessor for HKMultiLineSeriesBlockCoordinate();
  if (!swift_dynamicCastClass())
  {
    if (qword_1EAD6D4D0 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_1E0ECC010();
    __swift_project_value_buffer(v0, (uint64_t)qword_1EAD74120);
    swift_unknownObjectRetain_n();
    uint64_t v1 = sub_1E0ECBFF0();
    os_log_type_t v2 = sub_1E0ECD520();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v4 = swift_slowAlloc();
      uint64_t v9 = v4;
      *(_DWORD *)uint64_t v3 = 136446722;
      uint64_t v5 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v5, v6, &v9);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2080;
      sub_1E0DED7E4(0xD00000000000002ELL, 0x80000001E0F2D600, &v9);
      sub_1E0ECD6D0();
      *(_WORD *)(v3 + 22) = 2080;
      swift_getObjectType();
      uint64_t v7 = sub_1E0ECDBC0();
      sub_1E0DED7E4(v7, v8, &v9);
      sub_1E0ECD6D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v1, v2, "%{public}s] %s: Unable to calculate y axis difference, found type: %s instead of HKMultiLineSeriesBlockCoordinate", (uint8_t *)v3, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v4, -1, -1);
      MEMORY[0x1E4E41080](v3, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

double _stdlib_squareRoot(double a1)
{
  return sqrt(a1);
}

uint64_t sub_1E0EAA978()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

char *sub_1E0EAA9B8(char *a1)
{
  return sub_1E0EA8A08(a1);
}

id sub_1E0EAAAA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BalanceYAxis();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BalanceYAxis()
{
  return self;
}

id sub_1E0EAAB00()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v0, sel_setLabelType_, 0);
  uint64_t v1 = (void *)sub_1E0ECBD90();
  objc_msgSend(v0, sel_setLocation_, v1);

  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  uint64_t v3 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0xE000000000000000);

  return v0;
}

id sub_1E0EAAC6C(void *a1)
{
  sub_1E0ECBEC0();
  double v3 = v2;
  double v5 = v4;
  id result = objc_msgSend(a1, sel_minValue);
  if (!result) {
    return result;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id result = objc_msgSend(a1, sel_maxValue);
  if (!result) {
    return result;
  }
  if ((swift_dynamicCast() & 1) == 0 || (~*(void *)&v25 & 0x7FF0000000000000) == 0) {
    return 0;
  }
  BOOL v7 = v25 - v25 <= 0.0 || (COERCE_UNSIGNED_INT64(v25 - v25) & 0x7FF0000000000000) == 0x7FF0000000000000;
  BOOL v8 = !v7 && v5 < v25;
  if (!v8 || v25 >= v3) {
    return 0;
  }
  uint64_t v26 = MEMORY[0x1E4FBC860];
  id v10 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v10, sel_setLabelType_, 1);
  uint64_t v11 = (void *)sub_1E0ECBD90();
  objc_msgSend(v10, sel_setLocation_, v11);

  id v12 = v10;
  MEMORY[0x1E4E3E9E0]();
  id v13 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v13 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  if (v25 > v3)
  {
    __break(1u);
  }
  else
  {
    id v13 = sub_1E0EAAB00();
    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_22;
    }
  }
  sub_1E0ECD350();
LABEL_22:
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v14 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v14, sel_setLabelType_, 1);
  uint64_t v15 = (void *)sub_1E0ECBD90();
  objc_msgSend(v14, sel_setLocation_, v15);

  id v16 = v14;
  MEMORY[0x1E4E3E9E0]();
  id v17 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v17 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  if (v3 > v5)
  {
    __break(1u);
  }
  else
  {
    id v17 = sub_1E0EAAB00();
    MEMORY[0x1E4E3E9E0]();
    if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_26;
    }
  }
  sub_1E0ECD350();
LABEL_26:
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v18 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v18, sel_setLabelType_, 1);
  uint64_t v19 = (void *)sub_1E0ECBD90();
  objc_msgSend(v18, sel_setLocation_, v19);

  id v20 = v18;
  MEMORY[0x1E4E3E9E0]();
  id v21 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v21 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();
  if (v5 > v25)
  {
    __break(1u);
    goto LABEL_38;
  }
  id v21 = sub_1E0EAAB00();
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_38:
  }
    sub_1E0ECD350();
  sub_1E0ECD370();
  sub_1E0ECD340();
  id v22 = objc_msgSend(objc_allocWithZone((Class)HKAxisLabel), sel_init);
  objc_msgSend(v22, sel_setLabelType_, 1);
  uint64_t v23 = (void *)sub_1E0ECBD90();
  objc_msgSend(v22, sel_setLocation_, v23);

  id v24 = v22;
  MEMORY[0x1E4E3E9E0]();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1E0ECD350();
  }
  sub_1E0ECD370();
  sub_1E0ECD340();

  return (id)v26;
}

uint64_t PairedDeviceFeatureAttributesProvider.hasActivePairedDevice.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1) & 1;
}

void PairedDeviceFeatureAttributesProvider.pairedDeviceAttributes.getter(uint64_t *a1@<X8>)
{
  double v3 = *(uint64_t (***)(void, void))(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  double v5 = (void *)v3[4](ObjectType, v3);
  uint64_t v6 = v3[1](ObjectType, v3);
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v5, sel_localAttributes);
  uint64_t v10 = v3[2](ObjectType, v3);
  uint64_t v12 = v11;
  if (v11)
  {
    uint64_t v13 = v10;
    id v14 = objc_msgSend(v5, sel_pairedAttributes);

    if (!v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      uint64_t v12 = 0;
    }
  }
  else
  {

    uint64_t v13 = 0;
    id v14 = 0;
  }
  if (!v14 && v9)
  {
    swift_bridgeObjectRelease();
    id v14 = 0;
    uint64_t v8 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = v8;
  a1[2] = (uint64_t)v9;
  a1[3] = v13;
  a1[4] = v12;
  a1[5] = (uint64_t)v14;
}

uint64_t PairedDeviceFeatureAttributesProvider.__allocating_init(pairedDeviceAttributesDataSource:logger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1E0EAB9C0(a1, a3, v3, ObjectType, a2);
}

uint64_t PairedDeviceFeatureAttributesProvider.init(pairedDeviceAttributesDataSource:logger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1E0EABC94(a1, a3, v3, ObjectType, a2);
}

uint64_t sub_1E0EAB648()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for PairedDeviceFeatureAttributesProvider();
    sub_1E0EA0E68();
    sub_1E0ECC140();
    swift_release();
    sub_1E0ECC1B0();
    return swift_release();
  }
  return result;
}

uint64_t PairedDeviceFeatureAttributesProvider.deinit()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  uint64_t v2 = sub_1E0ECC010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t PairedDeviceFeatureAttributesProvider.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  uint64_t v2 = sub_1E0ECC010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1E0EAB800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E0ECC140();
  *a1 = result;
  return result;
}

uint64_t static PairedDeviceFeatureAttributesProvider.makeDefaultProvider(featureIdentifier:healthStore:logger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E0ECC010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B040]), sel_initWithFeatureIdentifier_healthStore_, a1, a2);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v12(v10, a3, v6);
  id v13 = objc_allocWithZone((Class)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource());
  id v14 = sub_1E0EB32DC(v11, v10);
  v12(v10, a3, v6);
  uint64_t v15 = swift_allocObject();
  id v16 = v14;
  uint64_t v17 = sub_1E0EABA2C(v16, (uint64_t)v10, v15);

  return v17;
}

uint64_t sub_1E0EAB9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  return sub_1E0EABC94(a1, a2, v9, a4, a5);
}

uint64_t sub_1E0EABA2C(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = 0;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = &protocol witness table for DefaultPairedDeviceFeatureAttributesDataSource;
  uint64_t v6 = a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  uint64_t v7 = sub_1E0ECC010();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  uint64_t v9 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
  sub_1E0EAC044(0, (unint64_t *)&qword_1EAD6EAF0, MEMORY[0x1E4F1AB88]);
  sub_1E0EAC0AC(&qword_1EAD6FD20, (unint64_t *)&qword_1EAD6EAF0, v9);
  id v10 = a1;
  sub_1E0ECC230();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1E0EAC004;
  *(void *)(v12 + 24) = v11;
  id v13 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1E0EAC044(0, (unint64_t *)&unk_1EAD6FDD0, MEMORY[0x1E4F1AAE0]);
  sub_1E0EAC0AC(&qword_1EAD6FC90, (unint64_t *)&unk_1EAD6FDD0, v13);
  uint64_t v14 = sub_1E0ECC260();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  swift_release();
  *(void *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = v14;
  swift_release();
  return a3;
}

uint64_t sub_1E0EABC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = 0;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a5;
  uint64_t v9 = a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_logger;
  uint64_t v10 = sub_1E0ECC010();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(a5 + 40);
  swift_unknownObjectRetain();
  v12(a4, a5);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1E0EAC004;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1E0EAC044(0, (unint64_t *)&unk_1EAD6FDD0, MEMORY[0x1E4F1AAE0]);
  sub_1E0EAC0AC(&qword_1EAD6FC90, (unint64_t *)&unk_1EAD6FDD0, v15);
  uint64_t v16 = sub_1E0ECC260();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  swift_release();
  *(void *)(a3 + OBJC_IVAR____TtC8HealthUI37PairedDeviceFeatureAttributesProvider_cancellable) = v16;
  swift_release();
  return a3;
}

uint64_t sub_1E0EABEA8()
{
  return type metadata accessor for PairedDeviceFeatureAttributesProvider();
}

uint64_t type metadata accessor for PairedDeviceFeatureAttributesProvider()
{
  uint64_t result = qword_1EAD6FC80;
  if (!qword_1EAD6FC80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0EABEFC()
{
  uint64_t result = sub_1E0ECC010();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PairedDeviceFeatureAttributesProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PairedDeviceFeatureAttributesProvider);
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesProvider.__allocating_init(pairedDeviceAttributesDataSource:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1E0EABFCC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0EAC004()
{
  return sub_1E0EAB648();
}

uint64_t sub_1E0EAC00C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1E0EAC044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1E0EAC0AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0EAC044(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CalendarViewLayout.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_calendar;
  uint64_t v4 = sub_1E0ECBB60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CalendarViewLayout.numberOfDaysPerWeek.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek);
}

double sub_1E0EAC1A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1E0EAC1F0(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1E0EAC244())()
{
  return j__swift_endAccess;
}

double CalendarViewLayout.minimumSectionInsets.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets);
}

id CalendarViewLayout.__allocating_init(calendar:overlays:itemHeight:minimumSectionInsets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  id v15 = objc_allocWithZone(v7);
  id v16 = sub_1E0EADB7C(a1, a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return v16;
}

id CalendarViewLayout.init(calendar:overlays:itemHeight:minimumSectionInsets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  id v7 = sub_1E0EADB7C(a1, a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return v7;
}

id CalendarViewLayout.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CalendarViewLayout.init(coder:)()
{
}

uint64_t sub_1E0EAC47C()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_bounds);
    double v4 = v3;
  }
  else
  {
    double v4 = 1200.0;
  }
  uint64_t v5 = (double *)&v0[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight];
  swift_beginAccess();
  double v6 = *v5;
  uint64_t result = (uint64_t)objc_msgSend(v0, sel_minimumLineSpacing);
  double v9 = ceil(v4 / (v6 + v8));
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek];
  uint64_t result = v10 * (uint64_t)v9;
  if ((unsigned __int128)(v10 * (__int128)(uint64_t)v9) >> 64 != result >> 63) {
LABEL_12:
  }
    __break(1u);
  return result;
}

double sub_1E0EAC590(double a1)
{
  double result = a1 / (double)*(uint64_t *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek) * -0.5
         + 34.0;
  if (*(double *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8) > result) {
    return *(double *)(v1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8);
  }
  return result;
}

void sub_1E0EAC5D4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    double v3 = v2;
    objc_msgSend(v2, sel_bounds);
    uint64_t v5 = v4;
    uint64_t v7 = v6;
    double v9 = v8;
    double v11 = v10;
    id v12 = v3;
    id v13 = objc_msgSend(v12, sel_window);
    if (!v13
      || (uint64_t v14 = v13, v15 = objc_msgSend(v13, sel_screen), v14, !v15))
    {
      id v15 = objc_msgSend(self, sel_mainScreen);
    }
    objc_msgSend(v15, sel_scale);
    double v17 = v16;

    if (qword_1EAD6D4D0 != -1) {
      goto LABEL_25;
    }
    while (1)
    {
      uint64_t v18 = sub_1E0ECC010();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EAD74120);
      uint64_t v19 = sub_1E0ECBFF0();
      os_log_type_t v20 = sub_1E0ECD510();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v46[0] = v22;
        *(_DWORD *)uint64_t v21 = 136446466;
        uint64_t v23 = sub_1E0ECDBC0();
        sub_1E0DED7E4(v23, v24, v46);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        uint64_t v43 = v7;
        double v44 = v9;
        double v45 = v11;
        type metadata accessor for CGRect(0);
        uint64_t v25 = sub_1E0ECD200();
        uint64_t v42 = sub_1E0DED7E4(v25, v26, v46);
        sub_1E0ECD6D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1E0B26000, v19, v20, "%{public}s: prepare() for bounds: %s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E4E41080](v22, -1, -1);
        MEMORY[0x1E4E41080](v21, -1, -1);
      }

      uint64_t v27 = (double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight];
      swift_beginAccess();
      double v11 = *v27;
      uint64_t v28 = (unint64_t *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
      swift_beginAccess();
      uint64_t v29 = *(void *)(*v28 + 16);
      if (!v29) {
        break;
      }
      swift_beginAccess();
      unint64_t v30 = *v28;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v28 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v30 = sub_1E0EADB68(v30);
      }
      unint64_t v32 = 0;
      while (1)
      {
        *uint64_t v28 = v30;
        if (v32 >= *(void *)(v30 + 16)) {
          break;
        }
        uint64_t v33 = *(void *)(type metadata accessor for OverlayConfiguration() - 8);
        unint64_t v34 = v30
            + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
            + *(void *)(v33 + 72) * v32;
        *(void *)(v34 + 8) = v5;
        *(void *)(v34 + 16) = v7;
        *(double *)(v34 + 24) = v9;
        *(double *)(v34 + 32) = v11;
        unint64_t v30 = *v28;
        if (v29 == ++v32)
        {
          swift_endAccess();
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_25:
      swift_once();
    }
LABEL_15:
    double v35 = (double)*(uint64_t *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek];
    CGAffineTransform v36 = (double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets];
    if (*(double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8] > v9 / v35 * -0.5 + 34.0) {
      double v37 = *(double *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets + 8];
    }
    else {
      double v37 = v9 / v35 * -0.5 + 34.0;
    }
    objc_msgSend(v1, sel_setItemSize_, floor(v17 * ((v9 - (v37 + v37)) / v35)) / v17, v11, v42, v43, *(void *)&v44, *(void *)&v45);
    objc_msgSend(v1, sel_setSectionInset_, *v36, v37, v36[2], v37);
    if (qword_1EAD6D588 != -1) {
      swift_once();
    }
    id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, qword_1EAD6FBD8);
    if (qword_1EAD6D580 != -1) {
      swift_once();
    }
    objc_msgSend(v38, sel_scaledValueForValue_, *(double *)&qword_1EAD6FBD0);
    double v40 = v39;

    objc_msgSend(v1, sel_setHeaderReferenceSize_, v9, v40);
    id v41 = v12;
    objc_msgSend(v41, sel_bounds);
    CGRectGetHeight(v47);
    objc_msgSend(v41, sel_contentInset);
    objc_msgSend(v41, sel_setContentInset_);
  }
}

void sub_1E0EACC6C(void *a1)
{
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for CalendarViewLayout();
  objc_msgSendSuper2(&v14, sel_invalidateLayoutWithContext_, a1);
  type metadata accessor for CalendarLayoutInvalidationContext();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8HealthUI33CalendarLayoutInvalidationContext_shouldInvalidateAllDecorationViews) == 1)
    {
      uint64_t v4 = (unint64_t *)&v1[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
      swift_beginAccess();
      uint64_t v5 = *(void *)(*v4 + 16);
      if (v5)
      {
        swift_beginAccess();
        id v6 = a1;
        unint64_t v7 = 0;
        while (1)
        {
          unint64_t v8 = *v4;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v4 = v8;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v8 = sub_1E0EADB68(v8);
            *uint64_t v4 = v8;
          }
          if (v7 >= *(void *)(v8 + 16)) {
            break;
          }
          unint64_t v10 = v7 + 1;
          uint64_t v11 = *(void *)(type metadata accessor for OverlayConfiguration() - 8);
          unint64_t v12 = v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          uint64_t v13 = *(void *)(v11 + 72) * v7;

          *(void *)(v12 + v13) = 0;
          unint64_t v7 = v10;
          if (v5 == v10)
          {
            swift_endAccess();

            return;
          }
        }
        __break(1u);
      }
    }
  }
}

uint64_t sub_1E0EACE60(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  v37.receiver = v4;
  v37.super_class = (Class)type metadata accessor for CalendarViewLayout();
  id v10 = objc_msgSendSuper2(&v37, sel_layoutAttributesForElementsInRect_, a1, a2, a3, a4);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_1E0EADE84();
    unint64_t v12 = sub_1E0ECD330();
  }
  else
  {
    unint64_t v12 = MEMORY[0x1E4FBC860];
  }
  unint64_t v38 = v12;
  uint64_t v36 = *(void *)&v5[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek];
  if (v12 >> 62)
  {
    type metadata accessor for CalendarViewLayoutAttributes();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1E0ECD900();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v12 = v25;
  }
  else
  {
    uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    sub_1E0ECD9F0();
    type metadata accessor for CalendarViewLayoutAttributes();
    if (swift_dynamicCastMetatype() || (uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = v13 + 32;
      while (swift_dynamicCastClass())
      {
        v24 += 8;
        if (!--v23) {
          goto LABEL_6;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v12 = v13 | 1;
    }
  }
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1E0ECD910();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      goto LABEL_23;
    }
  }
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = 0;
  do
  {
    if ((v12 & 0xC000000000000001) != 0) {
      double v17 = (char *)MEMORY[0x1E4E3EF00](v16, v12);
    }
    else {
      double v17 = (char *)*(id *)(v12 + 8 * v16 + 32);
    }
    uint64_t v18 = v17;
    ++v16;
    objc_msgSend(v5, sel_sectionInset);
    uint64_t v20 = v19;
    uint64_t v21 = &v18[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_horizontalSectionInset];
    swift_beginAccess();
    *(void *)uint64_t v21 = v20;
    uint64_t v22 = &v18[OBJC_IVAR____TtC8HealthUI28CalendarViewLayoutAttributes_numberOfDaysPerWeek];
    swift_beginAccess();
    *(void *)uint64_t v22 = v36;
  }
  while (v15 != v16);
LABEL_23:
  swift_bridgeObjectRelease();
  unint64_t v26 = &v5[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
  swift_beginAccess();
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *(void *)(*(void *)v26 + 16);
  if (v28)
  {
    uint64_t v29 = *(void *)(type metadata accessor for OverlayConfiguration() - 8);
    uint64_t v30 = v27 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    uint64_t v31 = *(void *)(v29 + 72);
    swift_bridgeObjectRetain();
    do
    {
      (*(void (**)(void))(*(void *)(v30 + 48) + 8))();
      unint64_t v32 = (void *)sub_1E0ECD190();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)sub_1E0ECBCC0();
      id v34 = objc_msgSend(v5, sel_layoutAttributesForDecorationViewOfKind_atIndexPath_, v32, v33);

      if (v34)
      {
        id v35 = v34;
        MEMORY[0x1E4E3E9E0]();
        if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1E0ECD350();
        }
        sub_1E0ECD370();
        sub_1E0ECD340();
      }
      v30 += v31;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  return v38;
}

uint64_t sub_1E0EAD318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v56 = a3;
  uint64_t v57 = a1;
  uint64_t v55 = sub_1E0ECBD30();
  uint64_t v6 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55, v7);
  double v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for OverlayConfiguration();
  uint64_t v10 = *(void *)(v51 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v51, v11);
  objc_super v14 = (void (***)(char *, uint64_t, uint64_t))((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12, v15);
  double v17 = (char *)&v47 - v16;
  id v18 = objc_msgSend(v4, sel_collectionView);
  if (!v18) {
    goto LABEL_19;
  }
  uint64_t v19 = v18;
  uint64_t v20 = &v4[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays];
  swift_beginAccess();
  int v50 = (unint64_t *)v20;
  uint64_t v54 = *(void *)(*(void *)v20 + 16);
  if (!v54)
  {

LABEL_19:
    objc_super v37 = (void *)sub_1E0ECD190();
    unint64_t v38 = (void *)sub_1E0ECBCC0();
    double v39 = (objc_class *)type metadata accessor for CalendarViewLayout();
    v58.receiver = v4;
    v58.super_class = v39;
    uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))objc_msgSendSuper2(&v58, sel_layoutAttributesForDecorationViewOfKind_atIndexPath_, v37, v38);

    return (uint64_t)v22;
  }
  CGRect v47 = v4;
  int v48 = v14;
  id v49 = v19;
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v52 = *(void *)(v10 + 72);
  uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v23 = (void (**)(char *, double *))(v6 + 8);
  uint64_t v24 = swift_bridgeObjectRetain();
  unint64_t v25 = 0;
  uint64_t v53 = a2;
  uint64_t v26 = v24;
  while (1)
  {
    uint64_t v27 = v26;
    uint64_t v28 = v26 + v21;
    if ((*(uint64_t (**)(void))(*(void *)(v26 + v21 + 48) + 8))() == v57 && v29 == a2) {
      break;
    }
    char v31 = sub_1E0ECD9E0();
    swift_bridgeObjectRelease();
    sub_1E0EADEC4(v28, (uint64_t)v17);
    unint64_t v32 = (double *)v55;
    (*v22)(v9, v56, v55);
    if (v31) {
      goto LABEL_13;
    }
    (*v23)(v9, v32);
    sub_1E0EADF28((uint64_t)v17);
LABEL_5:
    ++v25;
    a2 = v53;
    v21 += v52;
    uint64_t v26 = v27;
    if (v54 == v25)
    {

      swift_bridgeObjectRelease();
      uint64_t v4 = v47;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  sub_1E0EADEC4(v28, (uint64_t)v17);
  unint64_t v32 = (double *)v55;
  (*v22)(v9, v56, v55);
LABEL_13:
  unint64_t v33 = sub_1E0ECBCD0();
  (*v23)(v9, v32);
  sub_1E0EADF28((uint64_t)v17);
  if ((v33 & 1) == 0) {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  id v34 = v50;
  if (v25 >= *(void *)(*v50 + 16))
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_1E0EADB68(v33);
    unint64_t v33 = result;
    *id v34 = result;
    goto LABEL_22;
  }
  id v35 = v48;
  sub_1E0EADEC4(*v50 + v21, (uint64_t)v48);
  uint64_t v22 = *v35;
  if (*v35)
  {
    uint64_t v36 = v22;
    sub_1E0EADF28((uint64_t)v35);

    return (uint64_t)v22;
  }
  type metadata accessor for CalendarViewLayoutAttributes();
  id v41 = v35[5];
  uint64_t v42 = v35[6];
  ((void (*)(void (**)(char *, uint64_t, uint64_t), void (**)(char *, uint64_t, uint64_t)))v42[1])(v41, v42);
  uint64_t v43 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  double v44 = (void *)sub_1E0ECBCC0();
  id v45 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_layoutAttributesForDecorationViewOfKind_withIndexPath_, v43, v44);

  unint64_t v32 = (double *)v48;
  uint64_t v23 = (void (**)(char *, double *))v49;
  ((void (*)(id, id, void (**)(char *, uint64_t, uint64_t), void (**)(char *, uint64_t, uint64_t), double, double, double, double))v42[2])(v45, v49, v41, v42, v32[1], v32[2], v32[3], v32[4]);
  swift_beginAccess();
  unint64_t v33 = *v34;
  uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))v45;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *id v34 = v33;
  if ((result & 1) == 0) {
    goto LABEL_25;
  }
LABEL_22:
  if (v25 >= *(void *)(v33 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v46 = *(void **)(v33 + v21);
    *(void *)(v33 + v21) = v22;
    swift_endAccess();

    sub_1E0EADF28((uint64_t)v32);
    return (uint64_t)v22;
  }
  return result;
}

id CalendarViewLayout.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CalendarViewLayout.init()()
{
}

id CalendarViewLayout.__deallocating_deinit()
{
  return sub_1E0EADB1C(0, type metadata accessor for CalendarViewLayout);
}

id sub_1E0EADB04(uint64_t a1)
{
  return sub_1E0EADB1C(a1, type metadata accessor for CalendarLayoutInvalidationContext);
}

id sub_1E0EADB1C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void *sub_1E0EADB54(void *a1)
{
  return sub_1E0E0BC04(0, a1[2], 0, a1);
}

uint64_t sub_1E0EADB68(unint64_t a1)
{
  return sub_1E0E0C75C(0, *(void *)(a1 + 16), 0, a1);
}

id sub_1E0EADB7C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v15 = &v7[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_calendar];
  uint64_t v16 = sub_1E0ECBB60();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  *(void *)&v7[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_overlays] = a2;
  id v18 = v7;
  swift_bridgeObjectRetain();
  *(void *)&v18[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_numberOfDaysPerWeek] = sub_1E0ECBAD0();
  *(double *)&v18[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight] = a3;
  uint64_t v19 = (double *)&v18[OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_minimumSectionInsets];
  double *v19 = a4;
  v19[1] = a5;
  v19[2] = a6;
  v19[3] = a7;

  v32.receiver = v18;
  v32.super_class = (Class)type metadata accessor for CalendarViewLayout();
  id v20 = objc_msgSendSuper2(&v32, sel_init);
  objc_msgSend(v20, sel_setMinimumLineSpacing_, 0.0);
  objc_msgSend(v20, sel_setMinimumInteritemSpacing_, 0.0);
  uint64_t v21 = *(void *)(a2 + 16);
  if (v21)
  {
    uint64_t v31 = a1;
    uint64_t v22 = *(void *)(type metadata accessor for OverlayConfiguration() - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = *(void *)(v22 + 72);
    swift_bridgeObjectRetain();
    unint64_t v25 = (uint64_t *)(v23 + a2 + 48);
    do
    {
      uint64_t v26 = *(v25 - 1);
      uint64_t v27 = *v25;
      ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
      uint64_t v29 = (void *)sub_1E0ECD190();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_registerClass_forDecorationViewOfKind_, ObjCClassFromMetadata, v29);

      unint64_t v25 = (uint64_t *)((char *)v25 + v24);
      --v21;
    }
    while (v21);

    swift_bridgeObjectRelease();
    a1 = v31;
  }
  else
  {
  }
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v20;
}

uint64_t type metadata accessor for CalendarLayoutInvalidationContext()
{
  return self;
}

uint64_t type metadata accessor for CalendarViewLayout()
{
  uint64_t result = qword_1EAD6FCB0;
  if (!qword_1EAD6FCB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1E0EADE84()
{
  unint64_t result = qword_1EAD6FCA8;
  if (!qword_1EAD6FCA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAD6FCA8);
  }
  return result;
}

uint64_t sub_1E0EADEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OverlayConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0EADF28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OverlayConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1E0EADF84@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_1E0EADFD8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC8HealthUI18CalendarViewLayout_itemHeight);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1E0EAE030()
{
  return type metadata accessor for CalendarViewLayout();
}

uint64_t sub_1E0EAE038()
{
  uint64_t result = sub_1E0ECBB60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CalendarViewLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalendarViewLayout);
}

uint64_t dispatch thunk of CalendarViewLayout.itemHeight.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CalendarViewLayout.itemHeight.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CalendarViewLayout.itemHeight.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CalendarViewLayout.__allocating_init(calendar:overlays:itemHeight:minimumSectionInsets:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CalendarViewLayout.estimatedNumberOfVisibleItems.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CalendarViewLayout.computeSectionHorizontalInset(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

unint64_t sub_1E0EAE220()
{
  swift_getKeyPath();
  sub_1E0EAF7D8();
  sub_1E0ECBD50();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 32);
  sub_1E0E1C0D4(v1);
  return v1;
}

unint64_t sub_1E0EAE29C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1E0EAF7D8();
  sub_1E0ECBD50();
  swift_release();
  unint64_t v4 = *(void *)(v3 + 32);
  *a2 = v4;
  return sub_1E0E1C0D4(v4);
}

uint64_t sub_1E0EAE318(unint64_t *a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1E0E1C0D4(v1);
  sub_1E0EAF7D8();
  sub_1E0ECBD40();
  sub_1E0E14BB0(v1);
  return swift_release();
}

uint64_t sub_1E0EAE3C4(double a1)
{
  *(void *)(v2 + 144) = v1;
  *(double *)(v2 + 136) = a1;
  *(void *)(v2 + 152) = *v1;
  return MEMORY[0x1F4188298](sub_1E0EAE410, 0, 0);
}

uint64_t sub_1E0EAE410()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0 + 80;
  id v2 = objc_msgSend(*(id *)(*(void *)(v0 + 144) + 24), sel_brand);
  *(void *)(v0 + 160) = v2;
  if (v2)
  {
    uint64_t v3 = v2;
    if (qword_1EAD6D4F0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1E0ECC010();
    *(void *)(v0 + 168) = __swift_project_value_buffer(v4, (uint64_t)qword_1EAD74168);
    id v5 = v3;
    uint64_t v6 = sub_1E0ECBFF0();
    os_log_type_t v7 = sub_1E0ECD510();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = v29;
      *(_DWORD *)uint64_t v8 = 136446466;
      uint64_t v9 = sub_1E0ECDBC0();
      *(void *)(v0 + 80) = sub_1E0DED7E4(v9, v10, &v30);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      id v11 = objc_msgSend(v5, sel_externalID);
      uint64_t v12 = sub_1E0ECD1D0();
      uint64_t v13 = v5;
      unint64_t v15 = v14;

      uint64_t v1 = v0 + 80;
      *(void *)(v0 + 80) = sub_1E0DED7E4(v12, v15, &v30);
      sub_1E0ECD6D0();
      id v5 = v13;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1E0B26000, v6, v7, "%{public}s starting to load logo for brand %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v29, -1, -1);
      MEMORY[0x1E4E41080](v8, -1, -1);
    }
    else
    {
    }
    double v25 = ceil(*(double *)(v0 + 136));
    if ((~*(void *)&v25 & 0x7FF0000000000000) != 0)
    {
      if (v25 > -9.22337204e18)
      {
        if (v25 < 9.22337204e18)
        {
          uint64_t v26 = *(void **)(*(void *)(v0 + 144) + 16);
          uint64_t v27 = sub_1E0ECD430();
          *(void *)(v0 + 176) = v27;
          *(void *)(v0 + 16) = v0;
          *(void *)(v0 + 56) = v0 + 120;
          *(void *)(v0 + 24) = sub_1E0EAE908;
          uint64_t v28 = swift_continuation_init();
          *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
          *(void *)(v0 + 88) = 0x40000000;
          *(void *)(v0 + 96) = sub_1E0EAF4CC;
          *(void *)(v0 + 104) = &block_descriptor_1;
          *(void *)(v0 + 112) = v28;
          objc_msgSend(v26, sel_fetchLogoForBrand_scale_completion_, v5, v27, v1);
          return MEMORY[0x1F41881E8](v0 + 16);
        }
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (qword_1EAD6D4F0 != -1) {
LABEL_22:
  }
    swift_once();
  uint64_t v16 = sub_1E0ECC010();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EAD74168);
  uint64_t v17 = sub_1E0ECBFF0();
  os_log_type_t v18 = sub_1E0ECD540();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    uint64_t v21 = sub_1E0ECDBC0();
    *(void *)(v0 + 80) = sub_1E0DED7E4(v21, v22, &v30);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v17, v18, "%{public}s cannot load a brand logo for an account without a brand, aborting", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v20, -1, -1);
    MEMORY[0x1E4E41080](v19, -1, -1);
  }

  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1E0EAE908()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    id v2 = sub_1E0EAF258;
  }
  else {
    id v2 = sub_1E0EAEA18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1E0EAEA18()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 120);
  unint64_t v3 = *(void *)(v0 + 128);
  *(void *)(v0 + 192) = v2;
  *(void *)(v0 + 200) = v3;

  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1E0EAF848(v2, v3);
  id v5 = (void *)sub_1E0ECB820();
  id v6 = objc_msgSend(v4, sel_initWithData_, v5);
  *(void *)(v0 + 208) = v6;
  sub_1E0E59098(v2, v3);

  if (v6)
  {
    id v7 = *(id *)(v0 + 160);
    uint64_t v8 = sub_1E0ECBFF0();
    os_log_type_t v9 = sub_1E0ECD510();
    BOOL v10 = os_log_type_enabled(v8, v9);
    id v11 = *(void **)(v0 + 160);
    if (v10)
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v42[0] = v40;
      *(_DWORD *)uint64_t v12 = 136446466;
      uint64_t v13 = sub_1E0ECDBC0();
      *(void *)(v0 + 80) = sub_1E0DED7E4(v13, v14, v42);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      id v15 = objc_msgSend(v11, sel_externalID);
      uint64_t v16 = sub_1E0ECD1D0();
      unint64_t v18 = v17;

      *(void *)(v0 + 80) = sub_1E0DED7E4(v16, v18, v42);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1E0B26000, v8, v9, "%{public}s received logo data for brand %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v40, -1, -1);
      MEMORY[0x1E4E41080](v12, -1, -1);
    }
    else
    {
    }
    id v32 = v6;
    *(void *)(v0 + 216) = sub_1E0ECCC90();
    sub_1E0ECD3B0();
    *(void *)(v0 + 224) = sub_1E0ECD3A0();
    uint64_t v33 = sub_1E0ECD390();
    uint64_t v35 = v34;
    uint64_t v36 = sub_1E0EAEF30;
  }
  else
  {
    uint64_t v19 = self;
    uint64_t v20 = (void *)sub_1E0ECD190();
    id v21 = objc_msgSend(v19, sel_hk_error_description_, 3, v20);

    swift_willThrow();
    sub_1E0E59098(v2, v3);
    *(void *)(v0 + 232) = v21;
    id v22 = v21;
    id v23 = v21;
    uint64_t v24 = sub_1E0ECBFF0();
    os_log_type_t v25 = sub_1E0ECD520();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v42[0] = v41;
      *(_DWORD *)uint64_t v26 = 136446466;
      uint64_t v28 = sub_1E0ECDBC0();
      *(void *)(v0 + 80) = sub_1E0DED7E4(v28, v29, v42);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      id v30 = v21;
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 80) = v31;
      sub_1E0ECD6D0();
      *uint64_t v27 = v31;

      _os_log_impl(&dword_1E0B26000, v24, v25, "%{public}s failed to load image: %@", (uint8_t *)v26, 0x16u);
      sub_1E0DFABA4();
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v27, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v41, -1, -1);
      MEMORY[0x1E4E41080](v26, -1, -1);
    }
    else
    {
    }
    sub_1E0ECD3B0();
    id v37 = v21;
    *(void *)(v0 + 240) = sub_1E0ECD3A0();
    uint64_t v33 = sub_1E0ECD390();
    uint64_t v35 = v38;
    uint64_t v36 = sub_1E0EAF0CC;
  }
  return MEMORY[0x1F4188298](v36, v33, v35);
}

uint64_t sub_1E0EAEF30()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[18];
  swift_release();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  v0[10] = v2;
  sub_1E0EAF7D8();
  swift_retain();
  sub_1E0ECBD40();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E0EAF04C, 0, 0);
}

uint64_t sub_1E0EAF04C()
{
  unint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void **)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 192);

  sub_1E0E59098(v3, v1);
  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1E0EAF0CC()
{
  unint64_t v1 = v0[29];
  uint64_t v2 = v0[18];
  swift_release();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1 | 0x4000000000000000;
  v0[10] = v2;
  id v4 = (id)v1;
  sub_1E0EAF7D8();
  sub_1E0ECBD40();

  swift_release();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1E0EAF1EC, 0, 0);
}

uint64_t sub_1E0EAF1EC()
{
  unint64_t v1 = *(void **)(v0 + 232);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1E0EAF258()
{
  uint64_t v19 = v0;
  unint64_t v1 = (void *)v0[22];
  swift_willThrow();

  uint64_t v2 = (void *)v0[23];
  v0[29] = v2;
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1E0ECBFF0();
  os_log_type_t v6 = sub_1E0ECD520();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_1E0ECDBC0();
    v0[10] = sub_1E0DED7E4(v9, v10, &v18);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    id v11 = v2;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v12;
    sub_1E0ECD6D0();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_1E0B26000, v5, v6, "%{public}s failed to load image: %@", (uint8_t *)v7, 0x16u);
    sub_1E0DFABA4();
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v17, -1, -1);
    MEMORY[0x1E4E41080](v7, -1, -1);
  }
  else
  {
  }
  sub_1E0ECD3B0();
  id v13 = v2;
  v0[30] = sub_1E0ECD3A0();
  uint64_t v15 = sub_1E0ECD390();
  return MEMORY[0x1F4188298](sub_1E0EAF0CC, v15, v14);
}

uint64_t sub_1E0EAF4CC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1E0DFCAE0();
    uint64_t v5 = swift_allocError();
    *os_log_type_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = sub_1E0ECB830();
    uint64_t v11 = v10;

    uint64_t v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v12 = v9;
    v12[1] = v11;
    return MEMORY[0x1F4188200](v3);
  }
}

uint64_t sub_1E0EAF59C()
{
  sub_1E0E14BB0(*(void *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8HealthUI25ClinicalAccountLogoLoader___observationRegistrar;
  uint64_t v2 = sub_1E0ECBD70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1E0EAF654()
{
  return type metadata accessor for ClinicalAccountLogoLoader();
}

uint64_t type metadata accessor for ClinicalAccountLogoLoader()
{
  uint64_t result = qword_1EAD6FCC8;
  if (!qword_1EAD6FCC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0EAF6A8()
{
  uint64_t result = sub_1E0ECBD70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1E0EAF754()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_1E0EAF7D8();
  sub_1E0ECBD50();
  swift_release();
  unint64_t v2 = *(void *)(v1 + 32);
  sub_1E0E1C0D4(v2);
  return v2;
}

unint64_t sub_1E0EAF7D8()
{
  unint64_t result = qword_1EAD6FCD8;
  if (!qword_1EAD6FCD8)
  {
    type metadata accessor for ClinicalAccountLogoLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAD6FCD8);
  }
  return result;
}

void sub_1E0EAF830()
{
}

uint64_t sub_1E0EAF848(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

void sub_1E0EAF8A0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = v1;
  sub_1E0E1C0D4(v1);
  sub_1E0E14BB0(v3);
}

uint64_t sub_1E0EAF8DC()
{
  uint64_t v0 = sub_1E0ECBF60();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(sub_1E0ECBEF0() - 8);
    unint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v4 = *(void *)(v2 + 72);
    while ((sub_1E0ECBED0() & 1) == 0)
    {
      v3 += v4;
      if (!--v1) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1E0EAF998()
{
  uint64_t v0 = sub_1E0ECBEF0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1E0ECBF60();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v7 = v1 + 16;
    id v8 = v9;
    unint64_t v10 = v5 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v11 = *(void *)(v7 + 56);
    while (1)
    {
      v8(v4, v10, v0);
      sub_1E0ECBE50();
      char v13 = v12;
      (*(void (**)(char *, uint64_t))(v7 - 8))(v4, v0);
      if ((v13 & 1) == 0) {
        break;
      }
      v10 += v11;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1E0EAFAF4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1E0DEEC00(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1E4E3EF00](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      uint64_t v8 = (uint64_t)v6 + OBJC_IVAR____TtC8HealthUI17BalanceChartPoint_collection;
      swift_beginAccess();
      sub_1E0E13A18(v8, (uint64_t)v11);

      uint64_t v12 = v3;
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1E0DEEC00(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v12;
      }
      ++v5;
      *(void *)(v3 + 16) = v10 + 1;
      sub_1E0E50254(v11, v3 + 40 * v10 + 32);
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1E0ECD910();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id OverlayRoomPillValueProviderBalance.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id OverlayRoomPillValueProviderBalance.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverlayRoomPillValueProviderBalance();
  return objc_msgSendSuper2(&v2, sel_init);
}

id OverlayRoomPillValueProviderBalance.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverlayRoomPillValueProviderBalance();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1E0EAFE14(unint64_t a1)
{
  uint64_t v2 = sub_1E0ECBA30();
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v4 = sub_1E0ECD180();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v6 = sub_1E0ECD160();
  MEMORY[0x1F4188790](v6 - 8, v7);
  unint64_t v8 = sub_1E0E45B04(a1);
  if (!v8)
  {
    uint64_t v20 = (void *)sub_1E0ECD190();
    id v21 = HKUILocalizedString(v20);

    if (v21)
    {
      sub_1E0ECD1D0();

      id v22 = objc_allocWithZone((Class)HKOverlayPillValue);
      id v23 = (void *)sub_1E0ECD190();
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)sub_1E0ECD190();
      objc_msgSend(v22, sel_initWithValueString_unitString_, v23, v24);

      return;
    }
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v31 = MEMORY[0x1E4FBC870];
  unint64_t v9 = sub_1E0E21DAC(v8, &v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1E0EAFAF4(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1E0E7BD8C(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(v11 + 8 * v13 + 32);
      BOOL v16 = __OFADD__(v14, v15);
      v14 += v15;
      if (v16)
      {
        __break(1u);
        goto LABEL_16;
      }
      ++v13;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
    if (v14 <= 0) {
      goto LABEL_11;
    }
    sub_1E0E3B45C();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v17 + 16) = xmmword_1E0F07C90;
    uint64_t v19 = MEMORY[0x1E4FBB5C8];
    *(void *)(v17 + 56) = v18;
    *(void *)(v17 + 64) = v19;
    *(void *)(v17 + 32) = v14;
    sub_1E0ECD1A0();
    swift_bridgeObjectRelease();
    sub_1E0ECD150();
    sub_1E0ECD140();
    uint64_t v31 = v14;
    sub_1E0ECD120();
    sub_1E0ECD140();
    sub_1E0ECD170();
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  os_log_type_t v25 = (void *)sub_1E0ECD190();
  id v26 = HKUILocalizedString(v25);

  if (!v26)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_1E0ECD1D0();

  sub_1E0ECD110();
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
LABEL_13:
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_16:
  }
    swift_once();
  id v27 = (id)qword_1EAD740B8;
  sub_1E0ECBA20();
  sub_1E0ECD1F0();
  id v28 = objc_allocWithZone((Class)HKOverlayPillValue);
  unint64_t v29 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  id v30 = (void *)sub_1E0ECD190();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_initWithValueString_unitString_, v29, v30);
}

uint64_t type metadata accessor for OverlayRoomPillValueProviderBalance()
{
  return self;
}

uint64_t method lookup function for OverlayRoomPillValueProviderBalance(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OverlayRoomPillValueProviderBalance);
}

uint64_t dispatch thunk of OverlayRoomPillValueProviderBalance.value(from:unit:displayType:timeScope:unitPreferenceController:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

id AudiogramLongitudinalChartData.aggregateSummary.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary);
}

uint64_t AudiogramLongitudinalChartData.aggregationIntervalMidpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregationIntervalMidpoint;
  uint64_t v4 = sub_1E0ECB980();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t sub_1E0EB03B8(unint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v35 = a3;
  sub_1E0DF2AF8();
  MEMORY[0x1F4188790](v6 - 8, v7);
  unint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1E0ECB980();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v13, v16);
  uint64_t v19 = (char *)&v35 - v18;
  MEMORY[0x1F4188790](v17, v20);
  id v22 = (char *)&v35 - v21;
  char v23 = *a2;
  uint64_t v24 = v3;
  unint64_t result = sub_1E0E9F4B0(a1);
  *(void *)&v24[OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregateSummary] = result;
  char v37 = v23;
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1E0ECD910();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_9;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v26 = (id)MEMORY[0x1E4E3EF00](0, a1);
LABEL_6:
    id v27 = v26;
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v27, sel_startDate);

    sub_1E0ECB940();
    unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v29(v9, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v29(v19, v9, v10);
LABEL_11:
      uint64_t v31 = v35;
      sub_1E0E86AF0((uint64_t)v19, v35, (uint64_t)v22);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v24[OBJC_IVAR____TtC8HealthUI30AudiogramLongitudinalChartData_aggregationIntervalMidpoint], v22, v10);

      unint64_t v32 = (objc_class *)type metadata accessor for AudiogramLongitudinalChartData();
      v36.receiver = v24;
      v36.super_class = v32;
      id v33 = objc_msgSendSuper2(&v36, sel_init);
      uint64_t v34 = sub_1E0ECBB60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v31, v34);
      return (unint64_t)v33;
    }
LABEL_10:
    sub_1E0ECB950();
    sub_1E0DF0AA0((uint64_t)v9);
    goto LABEL_11;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v26 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1E0EB0750@<X0>(void **a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1E0ECBB60();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_1E0DF2BA8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1E0F06EB0;
  *(void *)(inited + 32) = v13;
  unint64_t v19 = inited;
  sub_1E0ECD340();
  unint64_t v15 = v19;
  LOBYTE(v19) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  objc_allocWithZone((Class)type metadata accessor for AudiogramLongitudinalChartData());
  id v16 = v13;
  unint64_t result = sub_1E0EB03B8(v15, (char *)&v19, (uint64_t)v12);
  *a4 = result;
  return result;
}

unint64_t sub_1E0EB08A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = sub_1E0ECBB60();
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = a3;
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a4);
  id v11 = objc_allocWithZone((Class)type metadata accessor for AudiogramLongitudinalChartData());
  unint64_t v12 = swift_bridgeObjectRetain();
  return sub_1E0EB03B8(v12, &v15, (uint64_t)v9);
}

id AudiogramLongitudinalChartData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AudiogramLongitudinalChartData.init()()
{
}

id AudiogramLongitudinalChartData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiogramLongitudinalChartData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0EB0AE0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1E0E65D20();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1E0EB0B5C(v6);
  return sub_1E0ECD880();
}

void sub_1E0EB0B5C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1E0ECD9A0();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_1E0EB1288(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  uint64_t v102 = v4;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v110 = MEMORY[0x1E4FBC860];
    uint64_t v109 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v93) {
            goto LABEL_139;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_1E0EB1374((void **)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v109);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1E0E64F24((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          id v97 = &v8[16 * v94 + 32];
          *(void *)id v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1E0ECD340();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for AudiogramLongitudinalChartData();
    uint64_t v7 = sub_1E0ECD360();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v109 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v110 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = v10 - 8;
  uint64_t v101 = v10 + 16;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v107 = v12;
    if (v9 < v3)
    {
      id v103 = v8;
      uint64_t v13 = *(void **)(v10 + 8 * v9);
      uint64_t v14 = *(void **)(v10 + 8 * v12);
      id v15 = v13;
      id v16 = v14;
      int v17 = sub_1E0ECB930();

      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v18 = (id *)(v101 + 8 * v12);
        while (1)
        {
          unint64_t v19 = *(v18 - 1);
          id v20 = *v18;
          id v21 = v19;
          int v22 = sub_1E0ECB930();

          if ((v17 ^ v22)) {
            break;
          }
          ++v9;
          ++v18;
          uint64_t v3 = v106;
          if (v106 == v9)
          {
            uint64_t v9 = v106;
            goto LABEL_22;
          }
        }
        uint64_t v3 = v106;
LABEL_22:
        uint64_t v12 = v107;
      }
      uint64_t v8 = v103;
      if (v17)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          char v23 = (uint64_t *)(v100 + 8 * v9);
          uint64_t v24 = v9;
          uint64_t v25 = v12;
          id v26 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v25 != --v24)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v27 = *v26;
              *id v26 = *v23;
              uint64_t *v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v102) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1E0E64BC4(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v39 = *((void *)v8 + 2);
    unint64_t v38 = *((void *)v8 + 3);
    unint64_t v11 = v39 + 1;
    if (v39 >= v38 >> 1) {
      uint64_t v8 = sub_1E0E64BC4((char *)(v38 > 1), v39 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    uint64_t v40 = v8 + 32;
    uint64_t v41 = &v8[16 * v39 + 32];
    *(void *)uint64_t v41 = v12;
    *((void *)v41 + 1) = v9;
    if (v39)
    {
      uint64_t v108 = v9;
      while (1)
      {
        unint64_t v42 = v11 - 1;
        if (v11 >= 4)
        {
          CGRect v47 = &v40[16 * v11];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_115;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_116;
          }
          unint64_t v54 = v11 - 2;
          uint64_t v55 = &v40[16 * v11 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_118;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_121;
          }
          if (v59 >= v50)
          {
            os_log_t v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_125;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v71 = *((void *)v8 + 4);
            uint64_t v72 = *((void *)v8 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_80;
          }
          uint64_t v44 = *((void *)v8 + 4);
          uint64_t v43 = *((void *)v8 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_117;
        }
        unint64_t v54 = v11 - 2;
        uint64_t v60 = &v40[16 * v11 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_120;
        }
        uint64_t v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_123;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_124;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_86:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v65) {
          goto LABEL_119;
        }
        uint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_122;
        }
        if (v76 < v64) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v82 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        uint64_t v83 = v8;
        uint64_t v84 = v40;
        id v85 = &v40[16 * v81];
        uint64_t v86 = *(void *)v85;
        id v87 = v84;
        unint64_t v88 = v42;
        CGRect v89 = &v84[16 * v42];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = v82;
        sub_1E0EB1374((void **)(v82 + 8 * *(void *)v85), (id *)(v82 + 8 * *(void *)v89), v82 + 8 * v90, v109);
        if (v1) {
          goto LABEL_109;
        }
        if (v90 < v86) {
          goto LABEL_112;
        }
        if (v88 > *((void *)v83 + 2)) {
          goto LABEL_113;
        }
        *(void *)id v85 = v86;
        *(void *)&v87[16 * v81 + 8] = v90;
        unint64_t v92 = *((void *)v83 + 2);
        if (v88 >= v92) {
          goto LABEL_114;
        }
        uint64_t v40 = v87;
        uint64_t v8 = v83;
        unint64_t v11 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        *((void *)v83 + 2) = v92 - 1;
        uint64_t v10 = v91;
        uint64_t v9 = v108;
        if (v92 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v106;
    if (v9 >= v106) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v102)) {
    goto LABEL_134;
  }
  if (v12 + v102 >= v3) {
    uint64_t v28 = v3;
  }
  else {
    uint64_t v28 = v12 + v102;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      uint64_t v104 = v8;
      uint64_t v105 = v28;
      uint64_t v29 = v100 + 8 * v9;
      do
      {
        uint64_t v30 = *(void **)(v10 + 8 * v9);
        uint64_t v31 = v12;
        uint64_t v32 = v29;
        do
        {
          id v33 = *(void **)v32;
          id v34 = v30;
          id v35 = v33;
          char v36 = sub_1E0ECB930();

          if ((v36 & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          char v37 = *(void **)v32;
          uint64_t v30 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v37;
          v32 -= 8;
          ++v31;
        }
        while (v9 != v31);
        ++v9;
        v29 += 8;
        uint64_t v12 = v107;
      }
      while (v9 != v105);
      uint64_t v9 = v105;
      uint64_t v8 = v104;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_1E0ECD8E0();
  __break(1u);
}

void sub_1E0EB1288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v16 = v6;
    while (1)
    {
      uint64_t v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      char v12 = sub_1E0ECB930();

      if ((v12 & 1) == 0)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v16 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v13 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v13;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1E0EB1374(void **__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  id v34 = __src;
  id v33 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      unint64_t v19 = &a4[v11];
      uint64_t v32 = (char *)v19;
      id v34 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        id v20 = (id *)(a3 - 8);
        id v21 = v4;
        uint64_t v28 = v5;
        do
        {
          uint64_t v31 = v4;
          int v22 = v20 + 1;
          char v23 = *--v21;
          id v24 = *(v19 - 1);
          id v25 = v23;
          char v26 = sub_1E0ECB930();

          if (v26)
          {
            if (v22 != v31 || v20 >= v31) {
              *id v20 = *v21;
            }
            id v34 = v21;
          }
          else
          {
            uint64_t v32 = (char *)(v19 - 1);
            if (v22 < v19 || v20 >= v19 || v22 != v19) {
              *id v20 = *(v19 - 1);
            }
            id v21 = v31;
            --v19;
          }
          if (v21 <= v28) {
            break;
          }
          --v20;
          uint64_t v4 = v21;
        }
        while (v19 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    char v12 = &a4[v8];
    uint64_t v32 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      uint64_t v13 = a4;
      do
      {
        uint64_t v14 = *v13;
        id v15 = *v4;
        id v16 = v14;
        char v17 = sub_1E0ECB930();

        if (v17)
        {
          uint64_t v18 = v4 + 1;
          if (v5 < v4 || v5 >= v18 || v5 != v4) {
            *uint64_t v5 = *v4;
          }
        }
        else
        {
          if (v5 != v13) {
            *uint64_t v5 = *v13;
          }
          id v33 = ++v13;
          uint64_t v18 = v4;
        }
        ++v5;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v18;
      }
      while ((unint64_t)v18 < a3);
      id v34 = v5;
    }
LABEL_43:
    sub_1E0E64DA8(&v34, &v33, &v32);
    return 1;
  }
  uint64_t result = sub_1E0ECD960();
  __break(1u);
  return result;
}

uint64_t sub_1E0EB1678(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1E0ECD890();
    uint64_t result = sub_1E0E51538(a1);
    uint64_t v5 = result;
    int v7 = v6;
    uint64_t v8 = 0;
    uint64_t v9 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v11 = (unint64_t)v5 >> 6;
      if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_23;
      }
      uint64_t v20 = v8;
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8 * v5);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      a2(v12, v13);
      swift_bridgeObjectRelease();
      sub_1E0ECD870();
      sub_1E0ECD8A0();
      sub_1E0ECD8B0();
      uint64_t result = sub_1E0ECD880();
      int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
      if (v5 >= v10) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(v9 + 8 * v11);
      if ((v14 & (1 << v5)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_26;
      }
      unint64_t v15 = v14 & (-2 << (v5 & 0x3F));
      if (v15)
      {
        int64_t v10 = __clz(__rbit64(v15)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v16 = v11 + 1;
        unint64_t v17 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v9 + 8 * v16);
          if (v18)
          {
LABEL_18:
            int64_t v10 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v11)
            {
              unint64_t v18 = *(void *)(a1 + 80 + 8 * v11++);
              if (v18)
              {
                unint64_t v16 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v8 = v20 + 1;
      uint64_t v5 = v10;
      if (v20 + 1 == v3) {
        return v21;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t _s8HealthUI30AudiogramLongitudinalChartDataC013makeAggregateeF010audiograms19aggregationStrategy8calendarSayACGSaySo17HKAudiogramSampleCG_AA011AggregationK0O10Foundation8CalendarVtFZ_0(int64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v86 = a3;
  uint64_t v85 = sub_1E0ECBB60();
  uint64_t v5 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85, v6);
  uint64_t v84 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1E0ECCF30();
  uint64_t v8 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83, v9);
  uint64_t v82 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1E0ECB980();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  uint64_t v78 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14, v16);
  id v87 = (char *)&v77 - v18;
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v21 = *a2;
  switch(*a2)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t v93 = (char *)&v77 - v20;
      char v24 = sub_1E0ECD9E0();
      uint64_t v22 = swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_4;
      }
      uint64_t v29 = (void *)sub_1E0E40210(MEMORY[0x1E4FBC860]);
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0) {
          uint64_t v25 = a1;
        }
        else {
          uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1E0ECD910();
        uint64_t v31 = v93;
        if (v30)
        {
LABEL_11:
          if (v30 >= 1)
          {
            unint64_t v91 = a1 & 0xC000000000000001;
            unint64_t v81 = (void (**)(char *, char *, uint64_t))(v12 + 16);
            uint64_t v80 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
            uint64_t v32 = 0;
            uint64_t v79 = (void (**)(char *, uint64_t))(v8 + 8);
            unint64_t v92 = (void (**)(char *, uint64_t))(v12 + 8);
            uint64_t v89 = v21;
            uint64_t v90 = v21;
            uint64_t v88 = v30;
            while (1)
            {
              if (v91) {
                id v34 = (id)MEMORY[0x1E4E3EF00](v32, a1);
              }
              else {
                id v34 = *(id *)(a1 + 8 * v32 + 32);
              }
              id v35 = v34;
              uint64_t v94 = v32 + 1;
              id v36 = objc_msgSend(v34, sel_startDate);
              sub_1E0ECB940();

              uint64_t v37 = v21;
              switch(v90)
              {
                case 1:
                  unint64_t v38 = (void *)sub_1E0ECB920();
                  id v39 = HKStartOfHourForDate(v38);

                  uint64_t v40 = v87;
                  sub_1E0ECB940();

                  sub_1E0ECB850();
                  double v42 = v41;
                  (*v92)(v40, v11);
                  if ((~*(void *)&v42 & 0x7FF0000000000000) == 0) {
                    goto LABEL_45;
                  }
                  if (v42 <= -9.22337204e18) {
                    goto LABEL_46;
                  }
                  if (v42 >= 9.22337204e18) {
                    goto LABEL_47;
                  }
                  uint64_t v37 = (uint64_t)v42;
LABEL_28:
                  (*v92)(v31, v11);
                  if (v29[2] && (unint64_t v52 = sub_1E0E5D884(v37), (v53 & 1) != 0))
                  {
                    v96[0] = *(void *)(v29[7] + 8 * v52);
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    v96[0] = MEMORY[0x1E4FBC860];
                  }
                  uint64_t v25 = v11;
                  int64_t v54 = a1;
                  id v55 = v35;
                  MEMORY[0x1E4E3E9E0]();
                  if (*(void *)((v96[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v96[0] & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                    sub_1E0ECD350();
                  sub_1E0ECD370();
                  sub_1E0ECD340();
                  uint64_t v56 = v96[0];
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v95 = v29;
                  unint64_t v59 = sub_1E0E5D884(v37);
                  uint64_t v60 = v29[2];
                  BOOL v61 = (v58 & 1) == 0;
                  uint64_t v62 = v60 + v61;
                  if (__OFADD__(v60, v61))
                  {
                    __break(1u);
LABEL_44:
                    __break(1u);
LABEL_45:
                    __break(1u);
LABEL_46:
                    __break(1u);
LABEL_47:
                    __break(1u);
LABEL_48:
                    unint64_t v69 = swift_bridgeObjectRetain();
                    uint64_t v27 = (uint64_t)sub_1E0E63C54(v69);
                    swift_bridgeObjectRelease();
LABEL_7:
                    v96[0] = v27;
                    sub_1E0EB0AE0(v96);
                    if (!v25)
                    {
                      swift_bridgeObjectRelease();
                      return v96[0];
                    }
LABEL_61:
                    swift_release();
                    __break(1u);
                    JUMPOUT(0x1E0EB226CLL);
                  }
                  char v63 = v58;
                  if (v29[3] >= v62)
                  {
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                      sub_1E0E600D0();
                    }
                  }
                  else
                  {
                    sub_1E0E5DE44(v62, isUniquelyReferenced_nonNull_native);
                    unint64_t v64 = sub_1E0E5D884(v37);
                    if ((v63 & 1) != (v65 & 1)) {
                      goto LABEL_60;
                    }
                    unint64_t v59 = v64;
                  }
                  uint64_t v11 = v25;
                  uint64_t v29 = v95;
                  if (v63)
                  {
                    uint64_t v33 = v95[7];
                    swift_bridgeObjectRelease();
                    *(void *)(v33 + 8 * v59) = v56;
                  }
                  else
                  {
                    v95[(v59 >> 6) + 8] |= 1 << v59;
                    *(void *)(v29[6] + 8 * v59) = v37;
                    *(void *)(v29[7] + 8 * v59) = v56;
                    uint64_t v66 = v29[2];
                    BOOL v67 = __OFADD__(v66, 1);
                    uint64_t v68 = v66 + 1;
                    if (v67) {
                      goto LABEL_44;
                    }
                    v29[2] = v68;
                  }

                  swift_bridgeObjectRelease();
                  uint64_t v31 = v93;
                  uint64_t v32 = v94;
                  a1 = v54;
                  uint64_t v21 = v89;
                  if (v88 == v94) {
                    goto LABEL_53;
                  }
                  break;
                case 2:
                  (*v81)(v87, v31, v11);
                  (*v80)(v84, v86, v85);
                  CGRect v47 = v82;
                  sub_1E0ECCEF0();
                  uint64_t v37 = sub_1E0ECCF10();
                  (*v79)(v47, v83);
                  goto LABEL_28;
                case 3:
                  uint64_t v43 = v86;
                  uint64_t v44 = (void *)sub_1E0ECBB00();
                  uint64_t v48 = sub_1E0ECBA80();
                  uint64_t v45 = (void *)sub_1E0ECB920();
                  id v46 = objc_msgSend(v44, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v48, v45, 0);
                  goto LABEL_27;
                case 4:
                  uint64_t v43 = v86;
                  uint64_t v44 = (void *)sub_1E0ECBB00();
                  uint64_t v45 = (void *)sub_1E0ECB920();
                  id v46 = objc_msgSend(v44, sel_hk_startOfMonthForDate_, v45);
                  goto LABEL_27;
                case 5:
                  uint64_t v43 = v86;
                  uint64_t v44 = (void *)sub_1E0ECBB00();
                  uint64_t v45 = (void *)sub_1E0ECB920();
                  id v46 = objc_msgSend(v44, sel_hk_startOfYearForDate_addingYears_, v45, 0);
LABEL_27:
                  id v49 = v46;

                  uint64_t v50 = v87;
                  sub_1E0ECB940();

                  uint64_t v31 = v93;
                  (*v81)(v78, v50, v11);
                  (*v80)(v84, v43, v85);
                  uint64_t v51 = v82;
                  sub_1E0ECCEF0();
                  uint64_t v37 = sub_1E0ECCF10();
                  (*v79)(v51, v83);
                  (*v92)(v50, v11);
                  goto LABEL_28;
                default:
                  goto LABEL_28;
              }
            }
          }
          __break(1u);
LABEL_60:
          sub_1E0ECDA30();
          __break(1u);
          goto LABEL_61;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v30 = v25;
        uint64_t v31 = v93;
        if (v25) {
          goto LABEL_11;
        }
      }
LABEL_53:
      uint64_t v70 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v70, v71);
      *((unsigned char *)&v77 - 16) = v21;
      *(&v77 - 1) = v86;
      uint64_t v72 = swift_bridgeObjectRetain();
      uint64_t v73 = sub_1E0EB1678(v72, (void (*)(uint64_t, uint64_t))sub_1E0EB23A8);
      swift_bridgeObjectRelease();
      if (v73 < 0 || (v73 & 0x4000000000000000) != 0)
      {
        unint64_t v76 = swift_bridgeObjectRetain();
        uint64_t v74 = (uint64_t)sub_1E0E63C54(v76);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v74 = v73 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
      v96[0] = v74;
      sub_1E0EB0AE0(v96);
      swift_bridgeObjectRelease();
      uint64_t v28 = v96[0];
      swift_bridgeObjectRelease();
      return v28;
    default:
      uint64_t v22 = swift_bridgeObjectRelease();
LABEL_4:
      MEMORY[0x1F4188790](v22, v23);
      *((unsigned char *)&v77 - 16) = v21;
      *(&v77 - 1) = v86;
      uint64_t v25 = 0;
      uint64_t v26 = sub_1E0E3A198((void (*)(uint64_t *__return_ptr, id *))sub_1E0EB23B4, (uint64_t)(&v77 - 4), a1);
      if (v26 < 0 || (v26 & 0x4000000000000000) != 0) {
        goto LABEL_48;
      }
      uint64_t v27 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      goto LABEL_7;
  }
}

uint64_t type metadata accessor for AudiogramLongitudinalChartData()
{
  uint64_t result = qword_1EAD6FD00;
  if (!qword_1EAD6FD00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0EB22E8()
{
  return type metadata accessor for AudiogramLongitudinalChartData();
}

uint64_t sub_1E0EB22F0()
{
  uint64_t result = sub_1E0ECB980();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AudiogramLongitudinalChartData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AudiogramLongitudinalChartData);
}

unint64_t sub_1E0EB23A8(uint64_t a1, uint64_t a2)
{
  return sub_1E0EB08A4(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1E0EB23B4@<X0>(void **a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1E0EB0750(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1E0EB23D8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id DefaultPairedDeviceFeatureAttributesDataSource.__allocating_init(featureAvailabilityStore:logger:)(void *a1, char *a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1E0EB32DC(a1, a2);

  return v6;
}

void PairedDeviceFeatureAttributesDataSource.localDeviceName.getter()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    unint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_currentDeviceName);

    if (v2)
    {
      sub_1E0ECD1D0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

BOOL PairedDeviceFeatureAttributesDataSource.hasActivePairedDevice.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  uint64_t v3 = v2;
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v3 != 0;
}

id DefaultPairedDeviceFeatureAttributesDataSource.init(featureAvailabilityStore:logger:)(void *a1, char *a2)
{
  id v3 = sub_1E0EB32DC(a1, a2);

  return v3;
}

uint64_t sub_1E0EB2560()
{
  id v0 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
  sub_1E0EAC044(0, (unint64_t *)&qword_1EAD6EAF0, MEMORY[0x1E4F1AB88]);
  sub_1E0EAC0AC(&qword_1EAD6FD20, (unint64_t *)&qword_1EAD6EAF0, v0);
  return sub_1E0ECC230();
}

uint64_t sub_1E0EB2604()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_activePairedDeviceProvider)
                 + OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider
                 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

id sub_1E0EB265C()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_featureAvailabilityStore);
  v6[0] = 0;
  id v2 = objc_msgSend(v1, sel_pairedFeatureAttributesWithError_, v6);
  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1E0ECB770();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1E0EB271C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_featureAvailabilityStore);
  sub_1E0E07B50();
  id v4 = (void *)sub_1E0ECD5D0();
  objc_msgSend(v3, sel_registerObserver_queue_, v0, v4);

  id v5 = objc_msgSend(v3, sel_featureIdentifier);
  id v6 = (id)HKFeaturePropertiesChangeNotificationForFeatureIdentifier();

  sub_1E0ECD1D0();
  sub_1E0ECD5D0();
  sub_1E0ECBFB0();
  swift_allocObject();
  sub_1E0ECBFA0();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = ObjectType;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = ObjectType;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1E0EB3B60;
  *(void *)(v11 + 24) = v10;
  sub_1E0EB3BBC(&qword_1EAD6FDC8, MEMORY[0x1E4F66810]);
  sub_1E0ECC240();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1E0ECC110();
  swift_endAccess();
  swift_release();
  uint64_t v12 = *(void *)(*(void *)(v1
                              + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_activePairedDeviceProvider)
                  + OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider
                  + 8);
  uint64_t v13 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v13, v12);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = ObjectType;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1E0EB3C04;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1E0EAC044(0, (unint64_t *)&unk_1EAD6FDD0, MEMORY[0x1E4F1AAE0]);
  sub_1E0EAC0AC(&qword_1EAD6FC90, (unint64_t *)&unk_1EAD6FDD0, v17);
  sub_1E0ECC260();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1E0ECC110();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1E0EB2B00(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1E0ECC010();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *a1;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E4E41170](a2 + 16);
  if (result)
  {
    uint64_t v11 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, result + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_logger, v4);

    uint64_t v12 = sub_1E0ECBFF0();
    os_log_type_t v13 = sub_1E0ECD520();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v16 = sub_1E0ECDBC0();
      uint64_t v21 = sub_1E0DED7E4(v16, v17, &v22);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      LOBYTE(v21) = v9;
      sub_1E0EB3C28();
      uint64_t v18 = sub_1E0ECD200();
      uint64_t v21 = sub_1E0DED7E4(v18, v19, &v22);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v12, v13, "[%{public}s] Error observing feature properties change notification: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v15, -1, -1);
      MEMORY[0x1E4E41080](v14, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_1E0EB2D7C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5 = sub_1E0ECC010();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  char v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + 16;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E4E41170](v10);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v11 + OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_logger, v5);

    os_log_type_t v13 = sub_1E0ECBFF0();
    os_log_type_t v14 = sub_1E0ECD540();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      char v24 = a3;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v17 = swift_slowAlloc();
      v26[0] = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      v23[1] = v16 + 4;
      uint64_t v18 = sub_1E0ECDBC0();
      uint64_t v25 = sub_1E0DED7E4(v18, v19, v26);
      sub_1E0ECD6D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1E0B26000, v13, v14, v24, v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E4E41080](v17, -1, -1);
      MEMORY[0x1E4E41080](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E4E41170](v10);
  if (result)
  {
    uint64_t v21 = (void *)result;
    swift_retain();

    uint64_t v22 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
    sub_1E0EAC044(0, (unint64_t *)&qword_1EAD6EAF0, MEMORY[0x1E4F1AB88]);
    sub_1E0EAC0AC(&qword_1EAD6FDE0, (unint64_t *)&qword_1EAD6EAF0, v22);
    sub_1E0ECC1D0();
    return swift_release();
  }
  return result;
}

id DefaultPairedDeviceFeatureAttributesDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DefaultPairedDeviceFeatureAttributesDataSource.init()()
{
}

id DefaultPairedDeviceFeatureAttributesDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1E0EB3234()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    id v1 = v0;
    id v2 = objc_msgSend(v0, sel_currentDeviceName);

    if (v2)
    {
      sub_1E0ECD1D0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1E0EB32C4()
{
  return sub_1E0EB265C();
}

id sub_1E0EB32DC(void *a1, char *a2)
{
  uint64_t v5 = sub_1E0ECC010();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v2[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_featureAvailabilityStore] = a1;
  uint64_t v38 = v6;
  id v39 = a2;
  uint64_t v12 = *(void (**)(void))(v6 + 16);
  uint64_t v40 = (char *)&v35 - v13;
  os_log_type_t v14 = v12;
  v12();
  Class active = (Class)_s26ActivePairedDeviceProviderCMa();
  id v15 = objc_allocWithZone(active);
  uint64_t v16 = self;
  uint64_t v17 = v2;
  id v18 = a1;
  id v36 = (char *)v15;
  id result = objc_msgSend(v16, sel_sharedInstance);
  if (result)
  {
    uint64_t v20 = result;
    ((void (*)(char *, char *, uint64_t))v14)(v10, v40, v5);
    uint64_t v21 = v14;
    id v35 = v14;
    uint64_t v22 = (objc_class *)_s38NanoRegistryActivePairedDeviceProviderCMa();
    uint64_t v23 = (char *)objc_allocWithZone(v22);
    *(void *)&v23[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_subscribers] = MEMORY[0x1E4FBC870];
    *(void *)&v23[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_pairedDeviceRegistry] = v20;
    ((void (*)(char *, char *, uint64_t))v21)(&v23[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_logger], v10, v5);
    sub_1E0EAC044(0, (unint64_t *)&qword_1EAD6EAF0, MEMORY[0x1E4F1AB88]);
    swift_allocObject();
    char v24 = v23;
    id v25 = v20;
    *(void *)&v24[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSourceP33_3C865D9EABCD2E889047E2D14D69B8F938NanoRegistryActivePairedDeviceProvider_updateSignalPublisher] = sub_1E0ECC160();

    v43.receiver = v24;
    v43.super_class = v22;
    id v26 = objc_msgSendSuper2(&v43, sel_init);
    sub_1E0E46D9C();

    uint64_t v27 = *(void (**)(char *, uint64_t))(v38 + 8);
    v27(v10, v5);

    uint64_t v28 = sub_1E0EB3BBC((unint64_t *)&unk_1EAD6FDF0, (void (*)(uint64_t))_s38NanoRegistryActivePairedDeviceProviderCMa);
    uint64_t v29 = v36;
    uint64_t v30 = &v36[OBJC_IVAR____TtCC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource26ActivePairedDeviceProvider_provider];
    *(void *)uint64_t v30 = v26;
    *((void *)v30 + 1) = v28;

    v42.receiver = v29;
    v42.super_class = active;
    id v31 = objc_msgSendSuper2(&v42, sel_init);
    v27(v40, v5);
    *(void *)&v17[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_activePairedDeviceProvider] = v31;
    uint64_t v32 = v39;
    ((void (*)(char *, char *, uint64_t))v35)(&v17[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_logger], v39, v5);
    swift_allocObject();
    *(void *)&v17[OBJC_IVAR____TtC8HealthUI46DefaultPairedDeviceFeatureAttributesDataSource_updateSignalPublisher] = sub_1E0ECC160();

    uint64_t v33 = (objc_class *)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource();
    v41.receiver = v17;
    v41.super_class = v33;
    id v34 = objc_msgSendSuper2(&v41, sel_init);
    sub_1E0EB271C();

    v27(v32, v5);
    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E0EB3690()
{
  swift_getObjectType();
  id v0 = sub_1E0ECBFF0();
  os_log_type_t v1 = sub_1E0ECD540();
  if (os_log_type_enabled(v0, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v8 = v3;
    *(_DWORD *)id v2 = 136446210;
    uint64_t v4 = sub_1E0ECDBC0();
    sub_1E0DED7E4(v4, v5, &v8);
    sub_1E0ECD6D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1E0B26000, v0, v1, "[%{public}s] Observed change to onboarding completion", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E4E41080](v3, -1, -1);
    MEMORY[0x1E4E41080](v2, -1, -1);
  }

  uint64_t v6 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
  sub_1E0EAC044(0, (unint64_t *)&qword_1EAD6EAF0, MEMORY[0x1E4F1AB88]);
  sub_1E0EAC0AC(&qword_1EAD6FDE0, (unint64_t *)&qword_1EAD6EAF0, v6);
  return sub_1E0ECC1D0();
}

uint64_t type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource()
{
  uint64_t result = qword_1EAD6FDB0;
  if (!qword_1EAD6FDB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.localDeviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.remoteDeviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.hasActivePairedDevice.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.pairedFeatureAttributes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PairedDeviceFeatureAttributesDataSource.objectDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1E0EB3914()
{
  return type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource();
}

uint64_t sub_1E0EB391C()
{
  uint64_t result = sub_1E0ECC010();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DefaultPairedDeviceFeatureAttributesDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultPairedDeviceFeatureAttributesDataSource);
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.__allocating_init(featureAvailabilityStore:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.objectDidChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.remoteDeviceName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.pairedFeatureAttributes()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DefaultPairedDeviceFeatureAttributesDataSource.featureAvailabilityProvidingDidUpdateOnboardingCompletion(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t sub_1E0EB3AE8()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1E0EB3B20(char *a1)
{
  return sub_1E0EB2B00(a1, *(void *)(v1 + 16));
}

uint64_t sub_1E0EB3B28()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0EB3B60()
{
  return sub_1E0EB2D7C(*(void *)(v0 + 16), *(void *)(v0 + 24), "[%{public}s] Observed change to feature properties");
}

uint64_t sub_1E0EB3B84()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1E0EB3BBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E0EB3C04()
{
  return sub_1E0EB2D7C(*(void *)(v0 + 16), *(void *)(v0 + 24), "[%{public}s] Observed change to active paired device");
}

void sub_1E0EB3C28()
{
  if (!qword_1EAD6FDE8)
  {
    unint64_t v0 = sub_1E0ECC0F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FDE8);
    }
  }
}

uint64_t FeatureRegulatoryAboutView.init(healthStore:featureIdentifier:featureRegulatoryInfoTransformProvider:reenableActionConfiguration:logger:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  id v27 = a2;
  id v28 = a1;
  uint64_t v10 = sub_1E0ECC010();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  os_log_type_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B040]), sel_initWithFeatureIdentifier_healthStore_, a2, a1);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B040]), sel_initWithFeatureIdentifier_healthStore_, a2, a1);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16(v14, a5, v10);
  id v17 = objc_allocWithZone((Class)type metadata accessor for DefaultPairedDeviceFeatureAttributesDataSource());
  id v18 = sub_1E0EB32DC(v15, v14);
  v16(v14, a5, v10);
  type metadata accessor for PairedDeviceFeatureAttributesProvider();
  uint64_t v19 = swift_allocObject();
  id v20 = v18;
  uint64_t v21 = sub_1E0EABA2C(v20, (uint64_t)v14, v19);

  uint64_t v22 = (int *)type metadata accessor for FeatureRegulatoryAboutView();
  uint64_t v23 = v30;
  sub_1E0E13A18(v30, (uint64_t)&a6[v22[8]]);
  uint64_t v24 = v31;
  sub_1E0E5B350(v31, (uint64_t)&a6[v22[6]]);
  v16(&a6[v22[7]], a5, v10);

  *(void *)a6 = v29;
  *((void *)a6 + 1) = v21;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a5, v10);
  sub_1E0E5B3D0(v24);
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t FeatureRegulatoryAboutView.init(healthStore:featureAvailabilityStore:featureRegulatoryInfoTransformProvider:pairedDeviceFeatureAttributesProvider:reenableActionConfiguration:logger:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  a7[1] = a4;
  uint64_t v13 = (int *)type metadata accessor for FeatureRegulatoryAboutView();
  os_log_type_t v14 = (char *)a7 + v13[7];
  uint64_t v15 = sub_1E0ECC010();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a6, v15);
  sub_1E0E50254(a3, (uint64_t)a7 + v13[8]);
  uint64_t result = sub_1E0EB464C(a5, (uint64_t)a7 + v13[6]);
  *a7 = a2;
  return result;
}

uint64_t FeatureRegulatoryAboutView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for FeatureRegulatoryAboutView();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v4, v8);
  uint64_t v9 = sub_1E0ECC010();
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v14 = *v2;
  uint64_t v13 = (uint64_t)v2[1];
  (*(void (**)(char *, char *))(v15 + 16))(v12, (char *)v2 + *(int *)(v5 + 36));
  sub_1E0EB46E0((uint64_t)v2, (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1E0EB4748((uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  objc_allocWithZone((Class)type metadata accessor for FeatureRegulatoryInfoProvider());
  id v18 = v14;
  swift_retain();
  sub_1E0EA072C(v18, v13, (uint64_t)v12, (void (*)(void, uint64_t))sub_1E0EB47AC, v17);

  swift_release();
  swift_release();
  *a1 = swift_getKeyPath();
  sub_1E0EB4B7C(0, &qword_1EAD6E730, MEMORY[0x1E4F3C868], MEMORY[0x1E4F3C648]);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = type metadata accessor for FeatureRegulatoryInfoView(0);
  id v20 = (uint64_t *)((char *)a1 + *(int *)(v19 + 24));
  uint64_t v26 = sub_1E0ECD1D0();
  uint64_t v27 = v21;
  sub_1E0ECD250();
  uint64_t v22 = v27;
  *id v20 = v26;
  v20[1] = v22;
  uint64_t v23 = (uint64_t *)((char *)a1 + *(int *)(v19 + 20));
  sub_1E0EB625C(&qword_1EAD6E760, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfoProvider);
  uint64_t result = sub_1E0ECC3C0();
  uint64_t *v23 = result;
  v23[1] = v25;
  return result;
}

uint64_t sub_1E0EB4280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeatureRegulatoryAboutView();
  uint64_t v7 = (void *)(a3 + *(int *)(v6 + 32));
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  __swift_project_boxed_opaque_existential_0(v7, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3 + *(int *)(v6 + 24), v8, v9);
}

uint64_t sub_1E0EB431C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v6 = a1 - 8;
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = sub_1E0ECC010();
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v14 = *v4;
  uint64_t v13 = (uint64_t)v4[1];
  (*(void (**)(char *, char *))(v15 + 16))(v12, (char *)v4 + *(int *)(v6 + 36));
  sub_1E0EB46E0((uint64_t)v4, (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1E0EB4748((uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  objc_allocWithZone((Class)type metadata accessor for FeatureRegulatoryInfoProvider());
  id v18 = v14;
  swift_retain();
  sub_1E0EA072C(v18, v13, (uint64_t)v12, (void (*)(void, uint64_t))sub_1E0EB47AC, v17);

  swift_release();
  swift_release();
  *a3 = swift_getKeyPath();
  sub_1E0EB4B7C(0, &qword_1EAD6E730, MEMORY[0x1E4F3C868], MEMORY[0x1E4F3C648]);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = type metadata accessor for FeatureRegulatoryInfoView(0);
  id v20 = (uint64_t *)((char *)a3 + *(int *)(v19 + 24));
  uint64_t v26 = sub_1E0ECD1D0();
  uint64_t v27 = v21;
  sub_1E0ECD250();
  uint64_t v22 = v27;
  *id v20 = v26;
  v20[1] = v22;
  uint64_t v23 = (uint64_t *)((char *)a3 + *(int *)(v19 + 20));
  sub_1E0EB625C(&qword_1EAD6E760, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfoProvider);
  uint64_t result = sub_1E0ECC3C0();
  uint64_t *v23 = result;
  v23[1] = v25;
  return result;
}

uint64_t type metadata accessor for FeatureRegulatoryAboutView()
{
  uint64_t result = qword_1EAD6FE00;
  if (!qword_1EAD6FE00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E0EB464C(uint64_t a1, uint64_t a2)
{
  sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0EB46E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeatureRegulatoryAboutView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0EB4748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeatureRegulatoryAboutView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0EB47B8()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for FeatureRegulatoryAboutView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char **)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    swift_retain();
    if (v12(v9, 1, v10))
    {
      sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = a3;
    }
    else
    {
      uint64_t v16 = v9[1];
      *(void *)uint64_t v8 = *v9;
      *((void *)v8 + 1) = v16;
      *((void *)v8 + 2) = v9[2];
      uint64_t v17 = v9[5];
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 3);
      *((void *)v8 + 5) = v17;
      id v18 = v9;
      uint64_t v34 = v10;
      id v35 = v8;
      uint64_t v19 = *(int *)(v10 + 28);
      id v20 = &v8[v19];
      uint64_t v33 = v18;
      uint64_t v21 = (char *)v18 + v19;
      uint64_t v22 = sub_1E0ECB810();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v32(v21, 1, v22))
      {
        sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v15 = a3;
      v35[*(int *)(v34 + 32)] = *((unsigned char *)v33 + *(int *)(v34 + 32));
      (*(void (**)(void))(v11 + 56))();
    }
    uint64_t v25 = *(int *)(v15 + 28);
    uint64_t v26 = &v6[v25];
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = sub_1E0ECC010();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = *(int *)(v15 + 32);
    long long v30 = *(_OWORD *)((char *)a2 + v29 + 24);
    *(_OWORD *)&v6[v29 + 24] = v30;
    (**(void (***)(void))(v30 - 8))();
  }
  return v6;
}

void sub_1E0EB4B7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for FeatureRegulatoryAboutView(id *a1, int *a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + a2[6];
  uint64_t v5 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v6 = &v4[*(int *)(v5 + 28)];
    uint64_t v7 = sub_1E0ECB810();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  uint64_t v9 = (char *)a1 + a2[7];
  uint64_t v10 = sub_1E0ECC010();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (uint64_t)a1 + a2[8];
  return __swift_destroy_boxed_opaque_existential_0(v11);
}

void *initializeWithCopy for FeatureRegulatoryAboutView(void *a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  swift_retain();
  if (v12(v9, 1, v10))
  {
    sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v15;
    v8[2] = v9[2];
    uint64_t v16 = v9[5];
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    v8[5] = v16;
    uint64_t v17 = *(int *)(v10 + 28);
    uint64_t v29 = (char *)v9 + v17;
    __dst = (char *)v8 + v17;
    uint64_t v18 = sub_1E0ECB810();
    uint64_t v27 = *(void *)(v18 - 8);
    uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v28(v29, 1, v18))
    {
      sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v29, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v29, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v18);
    }
    *((unsigned char *)v8 + *(int *)(v10 + 32)) = *((unsigned char *)v9 + *(int *)(v10 + 32));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1E0ECC010();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[8];
  long long v25 = *(_OWORD *)(a2 + v24 + 24);
  *(_OWORD *)((char *)a1 + v24 + 24) = v25;
  (**(void (***)(void))(v25 - 8))();
  return a1;
}

uint64_t assignWithCopy for FeatureRegulatoryAboutView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1E0E5B4B0((uint64_t)v10);
      goto LABEL_7;
    }
    id v46 = a3;
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _OWORD v10[2] = v11[2];
    v10[3] = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = v11[5];
    v10[4] = v11[4];
    v10[5] = v23;
    swift_retain();
    swift_release();
    uint64_t v24 = *(int *)(v12 + 28);
    long long v25 = (char *)v10 + v24;
    uint64_t v26 = (char *)v11 + v24;
    uint64_t v27 = sub_1E0ECB810();
    uint64_t v41 = *(void *)(v27 - 8);
    uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
    __dstCGFloat a = v25;
    LODWORD(v25) = v28(v25, 1, v27);
    int v29 = v28(v26, 1, v27);
    if (v25)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v41 + 16))(__dsta, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(__dsta, 0, 1, v27);
        goto LABEL_18;
      }
      sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v32 = __dsta;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v41 + 24))(__dsta, v26, v27);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v41 + 8))(__dsta, v27);
      sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v32 = __dsta;
    }
    memcpy(v32, v26, v31);
LABEL_18:
    a3 = v46;
    *((unsigned char *)v10 + *(int *)(v12 + 32)) = *((unsigned char *)v11 + *(int *)(v12 + 32));
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
    memcpy(v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v45 = a3;
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  _OWORD v10[2] = v11[2];
  v10[3] = v11[3];
  uint64_t v17 = v11[5];
  v10[4] = v11[4];
  v10[5] = v17;
  uint64_t v18 = *(int *)(v12 + 28);
  __src = (char *)v11 + v18;
  __dst = (char *)v10 + v18;
  uint64_t v19 = sub_1E0ECB810();
  uint64_t v39 = *(void *)(v19 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40(__src, 1, v20))
  {
    sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, __src, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, __src, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v20);
  }
  a3 = v45;
  *((unsigned char *)v10 + *(int *)(v12 + 32)) = *((unsigned char *)v11 + *(int *)(v12 + 32));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_19:
  uint64_t v34 = a3[7];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_1E0ECC010();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  return a1;
}

_OWORD *initializeWithTake for FeatureRegulatoryAboutView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  id v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    _OWORD v7[2] = v8[2];
    uint64_t v13 = *(int *)(v9 + 28);
    __dst = (char *)v7 + v13;
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = sub_1E0ECB810();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *((unsigned char *)v7 + *(int *)(v9 + 32)) = *((unsigned char *)v8 + *(int *)(v9 + 32));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1E0ECC010();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  return a1;
}

uint64_t assignWithTake for FeatureRegulatoryAboutView(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  swift_release();
  uint64_t v7 = a3[6];
  id v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  uint64_t v11 = *(void *)(v10 - 8);
  long long v12 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1E0E5B4B0((uint64_t)v8);
      goto LABEL_7;
    }
    uint64_t v22 = *((void *)v9 + 1);
    *(void *)id v8 = *(void *)v9;
    *((void *)v8 + 1) = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = *((void *)v9 + 3);
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = v23;
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_release();
    uint64_t v24 = *(int *)(v10 + 28);
    long long v25 = (char *)v8 + v24;
    __dstCGFloat a = (char *)v9 + v24;
    uint64_t v26 = sub_1E0ECB810();
    uint64_t v42 = *(void *)(v26 - 8);
    objc_super v43 = v25;
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
    LODWORD(v25) = v27(v25, 1, v26);
    int v28 = v27(__dsta, 1, v26);
    if (v25)
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v42 + 32))(v43, __dsta, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v26);
        goto LABEL_18;
      }
      sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
      size_t v31 = v43;
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v42 + 40))(v43, __dsta, v26);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v42 + 8))(v43, v26);
      sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
      size_t v31 = v43;
    }
    memcpy(v31, __dsta, v30);
LABEL_18:
    *((unsigned char *)v8 + *(int *)(v10 + 32)) = *((unsigned char *)v9 + *(int *)(v10 + 32));
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  long long v15 = v9[1];
  *id v8 = *v9;
  v8[1] = v15;
  v8[2] = v9[2];
  uint64_t v16 = *(int *)(v10 + 28);
  __dst = (char *)v8 + v16;
  uint64_t v17 = (char *)v9 + v16;
  uint64_t v18 = sub_1E0ECB810();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1E0EB4B7C(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *((unsigned char *)v8 + *(int *)(v10 + 32)) = *((unsigned char *)v9 + *(int *)(v10 + 32));
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  uint64_t v33 = a3[7];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_1E0ECC010();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  uint64_t v37 = a3[8];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  __swift_destroy_boxed_opaque_existential_0(a1 + v37);
  long long v40 = *((_OWORD *)v39 + 1);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(void *)(v38 + 32) = *((void *)v39 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureRegulatoryAboutView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0EB5E2C);
}

uint64_t sub_1E0EB5E2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1E0ECC010();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FeatureRegulatoryAboutView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0EB5F9C);
}

void *sub_1E0EB5F9C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1E0EB4B7C(0, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1E0ECC010();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1E0EB60F8()
{
  sub_1E0EB4B7C(319, &qword_1EAD6E830, type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1E0ECC010();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1E0EB6214()
{
  return sub_1E0EB625C((unint64_t *)&unk_1EAD6FE10, (void (*)(uint64_t))type metadata accessor for FeatureRegulatoryInfoView);
}

uint64_t sub_1E0EB625C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  unint64_t v1 = (int *)type metadata accessor for FeatureRegulatoryAboutView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  uint64_t v7 = type metadata accessor for FeatureRegulatoryInfo.ReenableActionConfiguration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v8 = v6 + *(int *)(v7 + 28);
    uint64_t v9 = sub_1E0ECB810();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  uint64_t v11 = v2 | 7;
  uint64_t v12 = v5 + v1[7];
  uint64_t v13 = sub_1E0ECC010();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[8]);
  return MEMORY[0x1F4186498](v0, v3 + v4, v11);
}

uint64_t sub_1E0EB64A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FeatureRegulatoryAboutView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1E0EB4280(a1, a2, v6);
}

uint64_t sub_1E0EB652C(char a1)
{
  if (a1)
  {
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v1 = (id)qword_1EAD740B8;
  uint64_t v2 = sub_1E0ECB680();

  return v2;
}

uint64_t sub_1E0EB6688()
{
  return sub_1E0ECDA70();
}

uint64_t sub_1E0EB66E4()
{
  swift_bridgeObjectRetain();
  sub_1E0ECD220();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0EB673C()
{
  return sub_1E0ECDA70();
}

uint64_t sub_1E0EB6794@<X0>(void *a1@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1E0ECD250();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 762668649;
  a1[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_1E0EB6800(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1E0ECD9E0();
  }
}

uint64_t sub_1E0EB6830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v72 = type metadata accessor for InstructionsForUseWebView(0);
  MEMORY[0x1F4188790](v72, v2);
  unint64_t v64 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v70 = (uint64_t)&v62 - v6;
  sub_1E0EC11E0(0, &qword_1EAD6FF08, MEMORY[0x1E4F3D748]);
  uint64_t v69 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v71 = (uint64_t)&v62 - v9;
  sub_1E0EBEAF0(0, &qword_1EAD6FF18, MEMORY[0x1E4F3D748]);
  uint64_t v66 = v10;
  MEMORY[0x1F4188790](v10, v11);
  char v63 = (char *)&v62 - v12;
  uint64_t v65 = type metadata accessor for InstructionsForUseWebViewError(0);
  MEMORY[0x1F4188790](v65, v13);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0E39F88(0);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v67 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v62 = *((void *)v67 - 1);
  uint64_t v21 = MEMORY[0x1F4188790](v67, v20);
  uint64_t v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21, v24);
  uint64_t v26 = (char *)&v62 - v25;
  sub_1E0EBEAF0(0, &qword_1EAD6FF10, MEMORY[0x1E4F3D750]);
  uint64_t v68 = v27;
  MEMORY[0x1F4188790](v27, v28);
  size_t v30 = (char *)&v62 - v29;
  unsigned __int8 v31 = *(unsigned char *)v1;
  uint64_t v74 = v1;
  uint64_t v32 = *(void *)(v1 + 8);
  LOBYTE(v77) = v31;
  uint64_t v78 = v32;
  sub_1E0EC1EA0(0, &qword_1EAD6FF20, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3ECC8]);
  sub_1E0ECCD00();
  int v33 = v75;
  uint64_t v34 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  uint64_t v35 = v34;
  if (v33 == 1)
  {
    uint64_t v36 = (uint64_t)v63;
    uint64_t v37 = (uint64_t)v15;
    sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
    sub_1E0ECCD00();
    int v38 = (*(uint64_t (**)(char *, uint64_t, int *))(v62 + 48))(v19, 1, v67);
    uint64_t v39 = v71;
    if (v38 == 1)
    {
      sub_1E0EBEE80((uint64_t)v19, (uint64_t (*)(void))sub_1E0E39F88);
      long long v40 = v67;
      sub_1E0ECBC80();
      uint64_t v41 = &v23[v40[7]];
      uint64_t v42 = sub_1E0ECB810();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
      objc_super v43 = (uint64_t *)(v74 + *(int *)(v35 + 24));
      uint64_t v44 = *v43;
      uint64_t v45 = v43[1];
      unsigned char *v23 = 3;
      id v46 = &v23[v40[6]];
      *(void *)id v46 = 0;
      v46[8] = 1;
      CGRect v47 = &v23[v40[8]];
      void *v47 = v44;
      v47[1] = v45;
      uint64_t v48 = v37;
      sub_1E0EBEF50((uint64_t)v23, v37, type metadata accessor for ErrorDetails);
      sub_1E0EBEF50(v37, v36, type metadata accessor for InstructionsForUseWebViewError);
      swift_storeEnumTagMultiPayload();
      sub_1E0EC1AD0(&qword_1EAD6FF30, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebViewError);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v23 = v26;
      sub_1E0EBED08((uint64_t)v19, (uint64_t)v26);
      uint64_t v61 = (uint64_t)v26;
      uint64_t v48 = (uint64_t)v15;
      sub_1E0EBEF50(v61, (uint64_t)v15, type metadata accessor for ErrorDetails);
      sub_1E0EBEF50((uint64_t)v15, v36, type metadata accessor for InstructionsForUseWebViewError);
      swift_storeEnumTagMultiPayload();
      sub_1E0EC1AD0(&qword_1EAD6FF30, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebViewError);
    }
    sub_1E0ECC740();
    sub_1E0EBEE80(v48, type metadata accessor for InstructionsForUseWebViewError);
    sub_1E0EBEE80((uint64_t)v23, type metadata accessor for ErrorDetails);
    sub_1E0EBEC10((uint64_t)v30, v39);
    swift_storeEnumTagMultiPayload();
    sub_1E0EBEB54();
    sub_1E0EC1AD0(&qword_1EAD6FF00, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
    sub_1E0ECC740();
    return sub_1E0EBEC90((uint64_t)v30);
  }
  else
  {
    uint64_t v49 = v74;
    uint64_t v50 = (uint64_t *)(v74 + *(int *)(v34 + 24));
    uint64_t v51 = v50[1];
    BOOL v67 = (int *)*v50;
    sub_1E0EB712C((uint64_t)v67, v51);
    sub_1E0ECB800();
    swift_bridgeObjectRelease();
    unsigned __int8 v75 = v31;
    uint64_t v76 = v32;
    sub_1E0ECCD20();
    uint64_t v52 = v77;
    uint64_t v53 = v78;
    char v54 = v79;
    id v55 = (int *)v72;
    uint64_t v56 = (uint64_t)v64;
    sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
    sub_1E0ECCD20();
    sub_1E0EBEF50(v49, v56 + v55[7], type metadata accessor for InstructionsForUseWebViewContainer);
    uint64_t v57 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v58 = v70;
    sub_1E0EBEE00(v70, v56 + v55[8], &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
    *(void *)uint64_t v56 = v52;
    *(void *)(v56 + 8) = v53;
    *(unsigned char *)(v56 + 16) = v54;
    unint64_t v59 = (int **)(v56 + v55[6]);
    char *v59 = v67;
    v59[1] = (int *)v51;
    sub_1E0EBEF50(v56, v71, type metadata accessor for InstructionsForUseWebView);
    swift_storeEnumTagMultiPayload();
    sub_1E0EBEB54();
    sub_1E0EC1AD0(&qword_1EAD6FF00, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
    swift_bridgeObjectRetain();
    sub_1E0ECC740();
    sub_1E0EBEE80(v56, type metadata accessor for InstructionsForUseWebView);
    return sub_1E0EBEEE0(v58, &qword_1EAD6E838, v57);
  }
}

uint64_t sub_1E0EB712C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v2 = sub_1E0ECBA00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v42 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0EBED6C();
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27A00];
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  uint64_t v14 = MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v43 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14, v16);
  uint64_t v19 = (char *)&v42 - v18;
  MEMORY[0x1F4188790](v17, v20);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v23 = sub_1E0ECBA30();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v25);
  uint64_t v27 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0ECBA20();
  sub_1E0ECBA10();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  sub_1E0ECB9F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v19, 0, 1, v2);
  uint64_t v28 = (uint64_t)&v10[*(int *)(v7 + 56)];
  sub_1E0EBEE00((uint64_t)v22, (uint64_t)v10, (unint64_t *)&unk_1EAD6FF40, v11);
  sub_1E0EBEE00((uint64_t)v19, v28, (unint64_t *)&unk_1EAD6FF40, v11);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v29((uint64_t)v10, 1, v2) == 1)
  {
    size_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27A00];
    sub_1E0EBEEE0((uint64_t)v19, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00]);
    sub_1E0EBEEE0((uint64_t)v22, (unint64_t *)&unk_1EAD6FF40, v30);
    if (v29(v28, 1, v2) == 1)
    {
      sub_1E0EBEEE0((uint64_t)v10, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00]);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1E0EBEE00((uint64_t)v10, v43, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00]);
  if (v29(v28, 1, v2) == 1)
  {
    unsigned __int8 v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27A00];
    sub_1E0EBEEE0((uint64_t)v19, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00]);
    sub_1E0EBEEE0((uint64_t)v22, (unint64_t *)&unk_1EAD6FF40, v31);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v43, v2);
LABEL_6:
    sub_1E0EBEE80((uint64_t)v10, (uint64_t (*)(void))sub_1E0EBED6C);
    goto LABEL_10;
  }
  uint64_t v32 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v42, v28, v2);
  sub_1E0EC1AD0(&qword_1EAD6FF50, MEMORY[0x1E4F27A00]);
  uint64_t v33 = v43;
  char v34 = sub_1E0ECD100();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v3 + 8);
  v35(v32, v2);
  uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27A00];
  sub_1E0EBEEE0((uint64_t)v19, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00]);
  sub_1E0EBEEE0((uint64_t)v22, (unint64_t *)&unk_1EAD6FF40, v36);
  v35((char *)v33, v2);
  sub_1E0EBEEE0((uint64_t)v10, (unint64_t *)&unk_1EAD6FF40, v36);
  if (v34)
  {
LABEL_8:
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_1E0ECD800();
    swift_bridgeObjectRelease();
    if (qword_1EAD69948 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_11:
  id v37 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  sub_1E0E3B45C();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1E0F07C90;
  *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v38 + 64) = sub_1E0E1ABC0();
  uint64_t v39 = v45;
  *(void *)(v38 + 32) = v44;
  *(void *)(v38 + 40) = v39;
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1E0ECD1E0();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t sub_1E0EB77FC(void *a1)
{
  id v25 = a1;
  uint64_t v2 = sub_1E0ECB320();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_1E0ECB810();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v24 - v18;
  uint64_t v20 = type metadata accessor for InstructionsForUseWebView(0);
  uint64_t v21 = v1 + *(int *)(v20 + 32);
  sub_1E0EBEE00(v21, (uint64_t)v10, &qword_1EAD6E838, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1E0EBEEE0((uint64_t)v10, &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
    return sub_1E0EB7B18(0, *(void *)(v1 + *(int *)(v20 + 24)), *(void *)(v1 + *(int *)(v20 + 24) + 8), v21, 0, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v19, v11);
    sub_1E0ECB310();
    uint64_t v23 = (void *)sub_1E0ECB300();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  }
}

uint64_t sub_1E0EB7B18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v61 = a3;
  int v58 = a6;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v59 = a2;
  sub_1E0E39F88(0);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v60 = (uint64_t)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)v53 - v12;
  sub_1E0EB8D58(0, &qword_1EAD6FF58, MEMORY[0x1E4F27DE0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v17 = (char *)v53 - v16;
  uint64_t v18 = sub_1E0ECBCB0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1E0ECBCA0();
  uint64_t v63 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23, v24);
  uint64_t v27 = (char *)v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v25, v28);
  unsigned __int8 v31 = (char *)v53 - v30;
  MEMORY[0x1F4188790](v29, v32);
  char v34 = (char *)v53 - v33;
  sub_1E0ECBC80();
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_6;
  }
  uint64_t v65 = a1;
  id v35 = a1;
  sub_1E0EBEFB8(0, (unint64_t *)&qword_1EAD6DF50);
  int v36 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, v36 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_6:
    sub_1E0EBEEE0((uint64_t)v17, &qword_1EAD6FF58, MEMORY[0x1E4F27DE0]);
    char v39 = 3;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
  sub_1E0EC1AD0(&qword_1EAD6FF70, MEMORY[0x1E4F27DE0]);
  sub_1E0ECB720();
  uint64_t v37 = v63;
  char v54 = v22;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v63 + 8);
  v38(v34, v23);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v31, v23);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v27, v34, v23);
  sub_1E0ECBC60();
  v53[1] = sub_1E0EC1AD0(&qword_1EAD6FF78, MEMORY[0x1E4F27DB8]);
  LOBYTE(v37) = sub_1E0ECD100();
  id v55 = v38;
  v38(v31, v23);
  if (v37)
  {
    v55(v27, v23);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v54, v18);
    char v39 = 0;
  }
  else
  {
    sub_1E0ECBC70();
    char v49 = sub_1E0ECD100();
    v55(v31, v23);
    if (v49)
    {
      v55(v27, v23);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v54, v18);
      char v39 = 1;
    }
    else
    {
      sub_1E0ECBC50();
      char v50 = sub_1E0ECD100();
      uint64_t v51 = v31;
      uint64_t v52 = v55;
      v55(v51, v23);
      v52(v27, v23);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v54, v18);
      if (v50) {
        char v39 = 2;
      }
      else {
        char v39 = 3;
      }
    }
  }
LABEL_7:
  uint64_t v40 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v41 = v63;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(&v13[v40[5]], v34, v23);
  sub_1E0EBEE00(v56, (uint64_t)&v13[v40[7]], &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
  *uint64_t v13 = v39;
  uint64_t v42 = &v13[v40[6]];
  *(void *)uint64_t v42 = v57;
  v42[8] = v58 & 1;
  uint64_t v43 = &v13[v40[8]];
  uint64_t v44 = v61;
  *(void *)uint64_t v43 = v59;
  *((void *)v43 + 1) = v44;
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v40 - 1) + 56))(v13, 0, 1, v40);
  type metadata accessor for InstructionsForUseWebView(0);
  uint64_t v45 = v62;
  sub_1E0EBEF50((uint64_t)v13, v60, (uint64_t (*)(void))sub_1E0E39F88);
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  swift_bridgeObjectRetain();
  sub_1E0ECCDB0();
  sub_1E0EBEE80((uint64_t)v13, (uint64_t (*)(void))sub_1E0E39F88);
  uint64_t v46 = *(void *)(v45 + 8);
  char v47 = *(unsigned char *)(v45 + 16);
  uint64_t v65 = *(void **)v45;
  uint64_t v66 = v46;
  char v67 = v47;
  char v64 = 1;
  sub_1E0EC1EA0(0, (unint64_t *)&unk_1EAD6FF60, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3EE18]);
  sub_1E0ECCDB0();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v34, v23);
}

id sub_1E0EB8448()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstructionsForUseWebView.Coordinator(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1E0EB84E8()
{
  return type metadata accessor for InstructionsForUseWebView.Coordinator(0);
}

uint64_t type metadata accessor for InstructionsForUseWebView.Coordinator(uint64_t a1)
{
  return sub_1E0E28200(a1, (uint64_t *)&unk_1EAD6FE98);
}

uint64_t sub_1E0EB8510()
{
  uint64_t result = type metadata accessor for InstructionsForUseWebView(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for InstructionsForUseWebViewContainer(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for InstructionsForUseWebView(uint64_t a1)
{
  return sub_1E0E28200(a1, (uint64_t *)&unk_1EAD6FED0);
}

uint64_t type metadata accessor for InstructionsForUseWebViewContainer(uint64_t a1)
{
  return sub_1E0E28200(a1, (uint64_t *)&unk_1EAD6FEF0);
}

uint64_t sub_1E0EB861C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
    uint64_t v11 = *(int *)(v10 + 32);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (unsigned char *)(v8 + v11);
    uint64_t v14 = (int *)type metadata accessor for ErrorDetails(0);
    uint64_t v79 = *((void *)v14 - 1);
    uint64_t v15 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v79 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v82 = v15;
    if (v15(v13, 1, v14))
    {
      sub_1E0E39F88(0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = a3;
    }
    else
    {
      *uint64_t v12 = *v13;
      uint64_t v18 = v14[5];
      uint64_t v19 = &v12[v18];
      uint64_t v20 = &v13[v18];
      uint64_t v21 = sub_1E0ECBCA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v22 = v14[6];
      uint64_t v23 = &v12[v22];
      uint64_t v24 = &v13[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v14[7];
      uint64_t v26 = &v12[v25];
      uint64_t v27 = &v13[v25];
      uint64_t v28 = sub_1E0ECB810();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      uint64_t v17 = a3;
      uint64_t v31 = v14[8];
      uint64_t v32 = &v12[v31];
      uint64_t v33 = &v13[v31];
      uint64_t v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      id v35 = *(void (**)(unsigned char *, void, uint64_t, int *))(v79 + 56);
      swift_bridgeObjectRetain();
      v35(v12, 0, 1, v14);
    }
    uint64_t v36 = v17[6];
    uint64_t v37 = v17[7];
    uint64_t v38 = (void *)(v5 + v36);
    char v39 = (uint64_t *)((char *)a2 + v36);
    uint64_t v40 = v39[1];
    void *v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = v5 + v37;
    uint64_t v42 = (uint64_t)a2 + v37;
    *(unsigned char *)uint64_t v41 = *((unsigned char *)a2 + v37);
    *(void *)(v41 + 8) = *(uint64_t *)((char *)a2 + v37 + 8);
    uint64_t v81 = type metadata accessor for InstructionsForUseWebViewContainer(0);
    uint64_t v43 = *(int *)(v81 + 20);
    uint64_t v44 = (unsigned char *)(v41 + v43);
    uint64_t v45 = (unsigned char *)(v42 + v43);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v82(v45, 1, v14))
    {
      sub_1E0E39F88(0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      *uint64_t v44 = *v45;
      uint64_t v47 = v14[5];
      uint64_t v48 = &v44[v47];
      char v49 = &v45[v47];
      uint64_t v50 = sub_1E0ECBCA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v14[6];
      uint64_t v52 = &v44[v51];
      uint64_t v53 = &v45[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      v52[8] = v53[8];
      uint64_t v78 = v14;
      uint64_t v54 = v14[7];
      id v55 = &v44[v54];
      uint64_t v56 = &v45[v54];
      uint64_t v57 = sub_1E0ECB810();
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      uint64_t v60 = v78[8];
      uint64_t v61 = &v44[v60];
      uint64_t v62 = &v45[v60];
      uint64_t v63 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v63;
      char v64 = *(void (**)(unsigned char *, void, uint64_t, int *))(v79 + 56);
      swift_bridgeObjectRetain();
      v64(v44, 0, 1, v78);
      uint64_t v17 = a3;
    }
    sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
    *(void *)&v44[*(int *)(v65 + 28)] = *(void *)&v45[*(int *)(v65 + 28)];
    uint64_t v66 = *(int *)(v81 + 24);
    char v67 = (void *)(v41 + v66);
    uint64_t v68 = (void *)(v42 + v66);
    uint64_t v69 = v68[1];
    *char v67 = *v68;
    v67[1] = v69;
    uint64_t v70 = v17[8];
    uint64_t v71 = (void *)(v5 + v70);
    uint64_t v72 = (char *)a2 + v70;
    uint64_t v73 = sub_1E0ECB810();
    uint64_t v74 = *(void *)(v73 - 8);
    unsigned __int8 v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v75(v72, 1, v73))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
  }
  return v5;
}

void sub_1E0EB8D58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for ErrorDetails(uint64_t a1)
{
  return sub_1E0E28200(a1, (uint64_t *)&unk_1EAD6FEE0);
}

uint64_t sub_1E0EB8DDC(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[5];
  swift_release();
  swift_release();
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = type metadata accessor for ErrorDetails(0);
  unint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    uint64_t v10 = sub_1E0ECBCA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v6 + *(int *)(v7 + 28);
    uint64_t v12 = sub_1E0ECB810();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[7];
  swift_release();
  uint64_t v15 = v14 + *(int *)(type metadata accessor for InstructionsForUseWebViewContainer(0) + 20);
  if (!v8(v15, 1, v7))
  {
    uint64_t v16 = v15 + *(int *)(v7 + 20);
    uint64_t v17 = sub_1E0ECBCA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v15 + *(int *)(v7 + 28);
    uint64_t v19 = sub_1E0ECB810();
    uint64_t v20 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    swift_bridgeObjectRelease();
  }
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[8];
  uint64_t v22 = sub_1E0ECB810();
  uint64_t v25 = *(void *)(v22 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v21, 1, v22);
  if (!result)
  {
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    return v24(v21, v22);
  }
  return result;
}

uint64_t sub_1E0EB91BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = a3[5];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *uint64_t v6 = *(void *)(a2 + v5);
  v6[1] = v8;
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = (char *)v6 + v10;
  uint64_t v12 = (unsigned char *)(v7 + v10);
  uint64_t v13 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v77 = *((void *)v13 - 1);
  uint64_t v14 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v77 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v79 = v14;
  if (v14(v12, 1, v13))
  {
    sub_1E0E39F88(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    uint64_t v16 = a1;
  }
  else
  {
    *uint64_t v11 = *v12;
    uint64_t v17 = v13[5];
    uint64_t v18 = &v11[v17];
    uint64_t v19 = &v12[v17];
    uint64_t v20 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v13[6];
    uint64_t v22 = &v11[v21];
    uint64_t v23 = &v12[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v13[7];
    uint64_t v25 = &v11[v24];
    uint64_t v26 = &v12[v24];
    uint64_t v27 = sub_1E0ECB810();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v16 = a1;
    uint64_t v30 = v13[8];
    uint64_t v31 = &v11[v30];
    uint64_t v32 = &v12[v30];
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t, int *))(v77 + 56);
    swift_bridgeObjectRetain();
    v34(v11, 0, 1, v13);
  }
  uint64_t v35 = a3[6];
  uint64_t v36 = a3[7];
  uint64_t v37 = (void *)(v16 + v35);
  uint64_t v38 = (void *)(a2 + v35);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = v16 + v36;
  uint64_t v41 = a2 + v36;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)(a2 + v36);
  *(void *)(v40 + 8) = *(void *)(a2 + v36 + 8);
  uint64_t v78 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  uint64_t v42 = *(int *)(v78 + 20);
  uint64_t v43 = (unsigned char *)(v40 + v42);
  uint64_t v44 = (unsigned char *)(v41 + v42);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v79(v44, 1, v13))
  {
    sub_1E0E39F88(0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    unsigned char *v43 = *v44;
    uint64_t v46 = v13[5];
    uint64_t v47 = &v43[v46];
    uint64_t v48 = &v44[v46];
    uint64_t v49 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    uint64_t v50 = v13[6];
    uint64_t v51 = &v43[v50];
    uint64_t v52 = &v44[v50];
    *(void *)uint64_t v51 = *(void *)v52;
    v51[8] = v52[8];
    uint64_t v53 = v13[7];
    uint64_t v54 = &v43[v53];
    id v55 = &v44[v53];
    uint64_t v56 = sub_1E0ECB810();
    uint64_t v57 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    uint64_t v59 = v13[8];
    uint64_t v60 = &v43[v59];
    uint64_t v61 = &v44[v59];
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = *(void (**)(unsigned char *, void, uint64_t, int *))(v77 + 56);
    swift_bridgeObjectRetain();
    v63(v43, 0, 1, v13);
    uint64_t v16 = a1;
  }
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v43[*(int *)(v64 + 28)] = *(void *)&v44[*(int *)(v64 + 28)];
  uint64_t v65 = *(int *)(v78 + 24);
  uint64_t v66 = (void *)(v40 + v65);
  char v67 = (void *)(v41 + v65);
  uint64_t v68 = v67[1];
  *uint64_t v66 = *v67;
  v66[1] = v68;
  uint64_t v69 = a3[8];
  uint64_t v70 = (void *)(v16 + v69);
  uint64_t v71 = (const void *)(a2 + v69);
  uint64_t v72 = sub_1E0ECB810();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v74(v71, 1, v72))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(v70, v71, v72);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  return v16;
}

void *sub_1E0EB989C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v5[1] = v4[1];
  swift_retain();
  swift_release();
  *((unsigned char *)v5 + 16) = *((unsigned char *)v4 + 16);
  uint64_t v135 = a3;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  *(void *)((char *)v5 + v6) = *(void *)((char *)v4 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v132 = *((void *)v13 - 1);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v132 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  uint64_t v134 = v4;
  if (!v15)
  {
    if (v16)
    {
      sub_1E0EBEE80((uint64_t)v11, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    uint64_t v129 = v5;
    *uint64_t v11 = *v12;
    uint64_t v33 = v13[5];
    uint64_t v34 = &v11[v33];
    uint64_t v35 = &v12[v33];
    uint64_t v36 = sub_1E0ECBCA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
    uint64_t v37 = v13[6];
    uint64_t v38 = &v11[v37];
    uint64_t v39 = &v12[v37];
    uint64_t v40 = *(void *)v39;
    v38[8] = v39[8];
    *(void *)uint64_t v38 = v40;
    uint64_t v41 = v13[7];
    uint64_t v42 = &v11[v41];
    uint64_t v43 = &v12[v41];
    uint64_t v44 = sub_1E0ECB810();
    uint64_t v125 = *(void *)(v44 - 8);
    uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
    uint64_t v128 = v42;
    LODWORD(v42) = v45(v42, 1, v44);
    int v46 = v45(v43, 1, v44);
    if (v42)
    {
      if (!v46)
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v128, v43, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v128, 0, 1, v44);
        goto LABEL_18;
      }
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v48 = *(void *)(*(void *)(v47 - 8) + 64);
      uint64_t v49 = v128;
    }
    else
    {
      if (!v46)
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 24))(v128, v43, v44);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v125 + 8))(v128, v44);
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v48 = *(void *)(*(void *)(v54 - 8) + 64);
      uint64_t v49 = v128;
    }
    memcpy(v49, v43, v48);
LABEL_18:
    uint64_t v4 = v134;
    uint64_t v55 = v13[8];
    uint64_t v56 = &v11[v55];
    uint64_t v57 = &v12[v55];
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = *((void *)v57 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v5 = v129;
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    sub_1E0E39F88(0);
    memcpy(v11, v12, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v17 = v5;
  *uint64_t v11 = *v12;
  uint64_t v18 = v13[5];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  uint64_t v21 = sub_1E0ECBCA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = v13[6];
  uint64_t v23 = &v11[v22];
  uint64_t v24 = &v12[v22];
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = v13[7];
  uint64_t v27 = &v11[v26];
  uint64_t v28 = &v12[v26];
  uint64_t v29 = sub_1E0ECB810();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v5 = v17;
  uint64_t v50 = v13[8];
  uint64_t v51 = &v11[v50];
  uint64_t v52 = &v12[v50];
  *(void *)uint64_t v51 = *(void *)v52;
  *((void *)v51 + 1) = *((void *)v52 + 1);
  uint64_t v53 = *(void (**)(char *, void, uint64_t, int *))(v132 + 56);
  swift_bridgeObjectRetain();
  v53(v11, 0, 1, v13);
  uint64_t v4 = v134;
LABEL_19:
  uint64_t v58 = v135[6];
  uint64_t v59 = (void *)((char *)v5 + v58);
  uint64_t v60 = (void *)((char *)v4 + v58);
  void *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = v135[7];
  uint64_t v62 = (char *)v5 + v61;
  uint64_t v63 = (char *)v4 + v61;
  *uint64_t v62 = *((unsigned char *)v4 + v61);
  *((void *)v62 + 1) = *(void *)((char *)v4 + v61 + 8);
  swift_retain();
  swift_release();
  uint64_t v64 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  uint64_t v65 = *(int *)(v64 + 20);
  uint64_t v66 = &v62[v65];
  char v67 = &v63[v65];
  int v68 = v14(&v62[v65], 1, v13);
  int v69 = v14(v67, 1, v13);
  if (v68)
  {
    if (!v69)
    {
      Class v130 = v5;
      *uint64_t v66 = *v67;
      uint64_t v70 = v13[5];
      uint64_t v71 = &v66[v70];
      uint64_t v72 = &v67[v70];
      uint64_t v73 = sub_1E0ECBCA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      uint64_t v74 = v13[6];
      uint64_t v75 = &v66[v74];
      uint64_t v76 = &v67[v74];
      uint64_t v77 = *(void *)v76;
      v75[8] = v76[8];
      *(void *)uint64_t v75 = v77;
      uint64_t v78 = v13[7];
      uint64_t v79 = &v66[v78];
      uint64_t v80 = &v67[v78];
      uint64_t v81 = sub_1E0ECB810();
      uint64_t v82 = *(void *)(v81 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
      {
        sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
      }
      uint64_t v102 = v13[8];
      id v103 = &v66[v102];
      uint64_t v104 = &v67[v102];
      *(void *)id v103 = *(void *)v104;
      *((void *)v103 + 1) = *((void *)v104 + 1);
      uint64_t v105 = *(void (**)(char *, void, uint64_t, int *))(v132 + 56);
      swift_bridgeObjectRetain();
      v105(v66, 0, 1, v13);
      uint64_t v5 = v130;
      goto LABEL_31;
    }
LABEL_25:
    sub_1E0E39F88(0);
    memcpy(v66, v67, *(void *)(*(void *)(v84 - 8) + 64));
LABEL_31:
    uint64_t v106 = v134;
    goto LABEL_32;
  }
  if (v69)
  {
    sub_1E0EBEE80((uint64_t)v66, type metadata accessor for ErrorDetails);
    goto LABEL_25;
  }
  __src = (void *)v64;
  id v131 = v5;
  *uint64_t v66 = *v67;
  uint64_t v85 = v13[5];
  uint64_t v86 = &v66[v85];
  id v87 = &v67[v85];
  uint64_t v88 = sub_1E0ECBCA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
  uint64_t v89 = v13[6];
  uint64_t v90 = &v66[v89];
  unint64_t v91 = &v67[v89];
  uint64_t v92 = *(void *)v91;
  v90[8] = v91[8];
  *(void *)uint64_t v90 = v92;
  uint64_t v93 = v13[7];
  uint64_t v94 = &v66[v93];
  uint64_t v95 = &v67[v93];
  uint64_t v96 = sub_1E0ECB810();
  uint64_t v126 = *(void *)(v96 - 8);
  id v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48);
  id v133 = v94;
  LODWORD(v94) = v97(v94, 1, v96);
  int v98 = v97(v95, 1, v96);
  if (v94)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v133, v95, v96);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v133, 0, 1, v96);
      goto LABEL_45;
    }
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    size_t v100 = *(void *)(*(void *)(v99 - 8) + 64);
    uint64_t v101 = v133;
  }
  else
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 24))(v133, v95, v96);
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v126 + 8))(v133, v96);
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    size_t v100 = *(void *)(*(void *)(v121 - 8) + 64);
    uint64_t v101 = v133;
  }
  memcpy(v101, v95, v100);
LABEL_45:
  uint64_t v5 = v131;
  uint64_t v106 = v134;
  uint64_t v64 = (uint64_t)__src;
  uint64_t v122 = v13[8];
  uint64_t v123 = &v66[v122];
  uint64_t v124 = &v67[v122];
  *(void *)uint64_t v123 = *(void *)v124;
  *((void *)v123 + 1) = *((void *)v124 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_32:
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v66[*(int *)(v107 + 28)] = *(void *)&v67[*(int *)(v107 + 28)];
  swift_retain();
  swift_release();
  uint64_t v108 = *(int *)(v64 + 24);
  uint64_t v109 = &v62[v108];
  uint64_t v110 = &v63[v108];
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = *((void *)v110 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = v135[8];
  os_log_t v112 = (char *)v5 + v111;
  uint64_t v113 = (char *)v106 + v111;
  uint64_t v114 = sub_1E0ECB810();
  uint64_t v115 = *(void *)(v114 - 8);
  uint64_t v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  int v117 = v116(v112, 1, v114);
  int v118 = v116(v113, 1, v114);
  if (!v117)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v112, v113, v114);
      return v5;
    }
    (*(void (**)(char *, uint64_t))(v115 + 8))(v112, v114);
    goto LABEL_37;
  }
  if (v118)
  {
LABEL_37:
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v112, v113, *(void *)(*(void *)(v119 - 8) + 64));
    return v5;
  }
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
  return v5;
}

uint64_t sub_1E0EBA5C8(uint64_t a1, uint64_t a2, int *a3)
{
  int v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = (unsigned char *)(v8 + v11);
  uint64_t v14 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v15 = *((void *)v14 - 1);
  __dst = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v15 + 48);
  if (__dst(v13, 1, v14))
  {
    sub_1E0E39F88(0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v57 = v15;
    uint64_t v59 = v3;
    *uint64_t v12 = *v13;
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    uint64_t v20 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    uint64_t v21 = v14[6];
    uint64_t v22 = &v12[v21];
    uint64_t v23 = &v13[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v14[7];
    uint64_t v25 = &v12[v24];
    uint64_t v26 = &v13[v24];
    uint64_t v27 = sub_1E0ECB810();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    *(_OWORD *)&v12[v14[8]] = *(_OWORD *)&v13[v14[8]];
    uint64_t v15 = v57;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v57 + 56))(v12, 0, 1, v14);
    int v3 = v59;
  }
  uint64_t v30 = v3[7];
  *(_OWORD *)(a1 + v3[6]) = *(_OWORD *)(a2 + v3[6]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  uint64_t v61 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  uint64_t v33 = *(int *)(v61 + 20);
  uint64_t v34 = (unsigned char *)(v31 + v33);
  uint64_t v35 = (unsigned char *)(v32 + v33);
  if (__dst((unsigned char *)(v32 + v33), 1, v14))
  {
    sub_1E0E39F88(0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v58 = v15;
    uint64_t v60 = v3;
    *uint64_t v34 = *v35;
    uint64_t v37 = v14[5];
    uint64_t v38 = &v34[v37];
    uint64_t v39 = &v35[v37];
    uint64_t v40 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
    uint64_t v41 = v14[6];
    uint64_t v42 = &v34[v41];
    uint64_t v43 = &v35[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = v14[7];
    __dstCGFloat a = &v34[v44];
    uint64_t v45 = &v35[v44];
    uint64_t v46 = sub_1E0ECB810();
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dsta, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(__dsta, v45, v46);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v46);
    }
    *(_OWORD *)&v34[v14[8]] = *(_OWORD *)&v35[v14[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v58 + 56))(v34, 0, 1, v14);
    int v3 = v60;
  }
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v34[*(int *)(v49 + 28)] = *(void *)&v35[*(int *)(v49 + 28)];
  *(_OWORD *)(v31 + *(int *)(v61 + 24)) = *(_OWORD *)(v32 + *(int *)(v61 + 24));
  uint64_t v50 = v3[8];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (const void *)(a2 + v50);
  uint64_t v53 = sub_1E0ECB810();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  return a1;
}

uint64_t sub_1E0EBAC40(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  *(void *)a1 = *a2;
  swift_release();
  *(void *)(a1 + 8) = v4[1];
  swift_release();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v4 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (char *)v4 + v6;
  *(void *)(a1 + v6) = *(void *)((char *)v4 + v6);
  swift_release();
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_release();
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = (char *)(v7 + v10);
  uint64_t v12 = &v8[v10];
  uint64_t v13 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v121 = (void *)*((void *)v13 - 1);
  uint64_t v14 = (uint64_t (*)(char *, uint64_t, int *))v121[6];
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  uint64_t v129 = a3;
  if (!v15)
  {
    if (v16)
    {
      sub_1E0EBEE80((uint64_t)v11, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    uint64_t v124 = v4;
    *uint64_t v11 = *v12;
    uint64_t v31 = v13[5];
    uint64_t v32 = &v11[v31];
    uint64_t v33 = &v12[v31];
    uint64_t v34 = sub_1E0ECBCA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
    uint64_t v35 = v13[6];
    uint64_t v36 = &v11[v35];
    uint64_t v37 = &v12[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v13[7];
    uint64_t v39 = &v11[v38];
    __src = &v12[v38];
    uint64_t v40 = sub_1E0ECB810();
    uint64_t v117 = *(void *)(v40 - 8);
    uint64_t v119 = v39;
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
    LODWORD(v39) = v41(v39, 1, v40);
    int v42 = v41(__src, 1, v40);
    if (v39)
    {
      if (!v42)
      {
        (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v119, __src, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v119, 0, 1, v40);
        goto LABEL_18;
      }
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
      uint64_t v45 = v119;
    }
    else
    {
      if (!v42)
      {
        (*(void (**)(char *, char *, uint64_t))(v117 + 40))(v119, __src, v40);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v119, v40);
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v44 = *(void *)(*(void *)(v46 - 8) + 64);
      uint64_t v45 = v119;
    }
    memcpy(v45, __src, v44);
LABEL_18:
    a3 = v129;
    uint64_t v47 = v13[8];
    uint64_t v48 = &v11[v47];
    uint64_t v49 = (uint64_t *)&v12[v47];
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    *(void *)uint64_t v48 = v51;
    *((void *)v48 + 1) = v50;
    swift_bridgeObjectRelease();
    uint64_t v4 = v124;
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    sub_1E0E39F88(0);
    memcpy(v11, v12, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v123 = v4;
  *uint64_t v11 = *v12;
  uint64_t v17 = v13[5];
  uint64_t v18 = &v11[v17];
  uint64_t v19 = &v12[v17];
  uint64_t v20 = sub_1E0ECBCA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = v13[6];
  uint64_t v22 = &v11[v21];
  uint64_t v23 = &v12[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = v13[7];
  uint64_t v25 = &v11[v24];
  uint64_t v26 = &v12[v24];
  uint64_t v27 = sub_1E0ECB810();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
  uint64_t v4 = v123;
  ((void (*)(char *, void, uint64_t, int *))v121[7])(v11, 0, 1, v13);
  a3 = v129;
LABEL_19:
  uint64_t v52 = a3[6];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)((char *)v4 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  void *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[7];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = (char *)v4 + v57;
  *(unsigned char *)uint64_t v58 = *((unsigned char *)v4 + v57);
  *(void *)(v58 + 8) = *(void *)((char *)v4 + v57 + 8);
  swift_release();
  __srcCGFloat a = (int *)type metadata accessor for InstructionsForUseWebViewContainer(0);
  uint64_t v60 = __srca[5];
  uint64_t v61 = (char *)(v58 + v60);
  uint64_t v62 = &v59[v60];
  int v63 = v14((char *)(v58 + v60), 1, v13);
  int v64 = v14(v62, 1, v13);
  if (v63)
  {
    if (!v64)
    {
      uint64_t v125 = v4;
      *uint64_t v61 = *v62;
      uint64_t v65 = v13[5];
      uint64_t v66 = &v61[v65];
      char v67 = &v62[v65];
      uint64_t v68 = sub_1E0ECBCA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
      uint64_t v69 = v13[6];
      uint64_t v70 = &v61[v69];
      uint64_t v71 = &v62[v69];
      *(void *)uint64_t v70 = *(void *)v71;
      v70[8] = v71[8];
      uint64_t v72 = v13[7];
      uint64_t v73 = &v61[v72];
      uint64_t v74 = &v62[v72];
      uint64_t v75 = sub_1E0ECB810();
      uint64_t v76 = *(void *)(v75 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
      {
        sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v74, v75);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      }
      *(_OWORD *)&v61[v13[8]] = *(_OWORD *)&v62[v13[8]];
      ((void (*)(char *, void, uint64_t, int *))v121[7])(v61, 0, 1, v13);
      uint64_t v4 = v125;
      goto LABEL_31;
    }
LABEL_25:
    sub_1E0E39F88(0);
    memcpy(v61, v62, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_31:
    uint64_t v94 = v129;
    goto LABEL_32;
  }
  if (v64)
  {
    sub_1E0EBEE80((uint64_t)v61, type metadata accessor for ErrorDetails);
    goto LABEL_25;
  }
  uint64_t v126 = v4;
  *uint64_t v61 = *v62;
  uint64_t v79 = v13[5];
  uint64_t v80 = &v61[v79];
  uint64_t v81 = &v62[v79];
  uint64_t v82 = sub_1E0ECBCA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
  uint64_t v83 = v13[6];
  uint64_t v84 = &v61[v83];
  uint64_t v85 = &v62[v83];
  *(void *)uint64_t v84 = *(void *)v85;
  v84[8] = v85[8];
  uint64_t v86 = v13[7];
  id v87 = &v61[v86];
  uint64_t v122 = &v62[v86];
  uint64_t v88 = sub_1E0ECB810();
  uint64_t v118 = *(void *)(v88 - 8);
  uint64_t v120 = v87;
  uint64_t v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
  LODWORD(v87) = v89(v87, 1, v88);
  int v90 = v89(v122, 1, v88);
  if (v87)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v120, v122, v88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v120, 0, 1, v88);
      goto LABEL_45;
    }
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    size_t v92 = *(void *)(*(void *)(v91 - 8) + 64);
    uint64_t v93 = v120;
  }
  else
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v120, v122, v88);
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v118 + 8))(v120, v88);
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    size_t v92 = *(void *)(*(void *)(v111 - 8) + 64);
    uint64_t v93 = v120;
  }
  memcpy(v93, v122, v92);
LABEL_45:
  uint64_t v4 = v126;
  uint64_t v94 = v129;
  uint64_t v112 = v13[8];
  uint64_t v113 = &v61[v112];
  uint64_t v114 = (uint64_t *)&v62[v112];
  uint64_t v116 = *v114;
  uint64_t v115 = v114[1];
  *(void *)uint64_t v113 = v116;
  *((void *)v113 + 1) = v115;
  swift_bridgeObjectRelease();
LABEL_32:
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v61[*(int *)(v95 + 28)] = *(void *)&v62[*(int *)(v95 + 28)];
  swift_release();
  uint64_t v96 = __srca[6];
  id v97 = (void *)(v58 + v96);
  int v98 = &v59[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *id v97 = v100;
  v97[1] = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v94[8];
  uint64_t v102 = (void *)(a1 + v101);
  id v103 = (char *)v4 + v101;
  uint64_t v104 = sub_1E0ECB810();
  uint64_t v105 = *(void *)(v104 - 8);
  uint64_t v106 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v105 + 48);
  int v107 = v106(v102, 1, v104);
  int v108 = v106(v103, 1, v104);
  if (!v107)
  {
    if (!v108)
    {
      (*(void (**)(void *, char *, uint64_t))(v105 + 40))(v102, v103, v104);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v105 + 8))(v102, v104);
    goto LABEL_37;
  }
  if (v108)
  {
LABEL_37:
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v102, v103, *(void *)(*(void *)(v109 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v105 + 32))(v102, v103, v104);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  return a1;
}

uint64_t sub_1E0EBB8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0EBB8BC);
}

uint64_t sub_1E0EBB8BC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];
  return v15(v17, a2, v16);
}

uint64_t sub_1E0EBBA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0EBBAA8);
}

uint64_t sub_1E0EBBAA8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_1E0EB8D58(0, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];
  return v15(v17, a2, a2, v16);
}

void sub_1E0EBBC80()
{
  sub_1E0EB8D58(319, &qword_1EAD6FEA8, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3EE18]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for InstructionsForUseWebViewContainer(319);
    if (v1 <= 0x3F)
    {
      sub_1E0EB8D58(319, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_1E0EBBDF8(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (char *)v4 + v11;
    uint64_t v14 = (char *)a2 + v11;
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    int v15 = (char *)v4 + v12;
    uint64_t v16 = (char *)a2 + v12;
    uint64_t v17 = sub_1E0ECB810();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1E0EBC010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1E0ECBCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1E0ECB810();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

unsigned char *sub_1E0EBC11C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  int v15 = &a2[v11];
  uint64_t v16 = sub_1E0ECB810();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1E0EBC2E4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  int v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_1E0ECB810();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1E0EBC528(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  int v15 = &a2[v11];
  uint64_t v16 = sub_1E0ECB810();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  return a1;
}

unsigned char *sub_1E0EBC6E4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = &a1[v11];
  int v15 = &a2[v11];
  uint64_t v16 = sub_1E0ECB810();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (uint64_t *)&a2[v22];
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1E0EBC914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0EBC928);
}

uint64_t sub_1E0EBC928(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1E0ECBCA0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1E0EBCA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0EBCA80);
}

void sub_1E0EBCA80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1E0ECBCA0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8] + 8) = (a2 - 1);
      return;
    }
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v13(a1 + v11, a2, a2, v9);
}

void sub_1E0EBCBC0()
{
  sub_1E0ECBCA0();
  if (v0 <= 0x3F)
  {
    sub_1E0EB8D58(319, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1E0EBCCD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (int *)type metadata accessor for ErrorDetails(0);
    uint64_t v11 = *((void *)v10 - 1);
    uint64_t v12 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v11 + 48);
    swift_retain();
    if (v12(v9, 1, v10))
    {
      sub_1E0E39F88(0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      *uint64_t v8 = *v9;
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_1E0ECBCA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = v10[6];
      int v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      *(void *)int v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v10[7];
      __dst = &v8[v22];
      uint64_t v23 = &v9[v22];
      uint64_t v24 = sub_1E0ECB810();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16))(__dst, v23, v24);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      uint64_t v27 = v10[8];
      uint64_t v28 = &v8[v27];
      uint64_t v29 = &v9[v27];
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      uint64_t v31 = *(void (**)(unsigned char *, void, uint64_t, int *))(v11 + 56);
      swift_bridgeObjectRetain();
      v31(v8, 0, 1, v10);
    }
    sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
    *(void *)&v8[*(int *)(v32 + 28)] = *(void *)&v9[*(int *)(v32 + 28)];
    uint64_t v33 = *(int *)(a3 + 24);
    uint64_t v34 = (uint64_t *)((char *)v4 + v33);
    uint64_t v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1E0EBD034(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ErrorDetails(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1E0ECBCA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 28);
    uint64_t v9 = sub_1E0ECB810();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    swift_bridgeObjectRelease();
  }
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0EBD1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    sub_1E0E39F88(0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v13 = v9[5];
    uint64_t v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    uint64_t v16 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v9[6];
    uint64_t v18 = &v7[v17];
    uint64_t v19 = &v8[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v9[7];
    __dst = &v7[v20];
    uint64_t v21 = &v8[v20];
    uint64_t v22 = sub_1E0ECB810();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v25 = v9[8];
    uint64_t v26 = &v7[v25];
    uint64_t v27 = &v8[v25];
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = *(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56);
    swift_bridgeObjectRetain();
    v29(v7, 0, 1, v9);
  }
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v7[*(int *)(v30 + 28)] = *(void *)&v8[*(int *)(v30 + 28)];
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1E0EBD500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1E0EBEE80((uint64_t)v7, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    uint64_t v61 = a3;
    *uint64_t v7 = *v8;
    uint64_t v28 = v9[5];
    uint64_t v29 = &v7[v28];
    uint64_t v30 = &v8[v28];
    uint64_t v31 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
    uint64_t v32 = v9[6];
    uint64_t v33 = &v7[v32];
    uint64_t v34 = &v8[v32];
    uint64_t v35 = *(void *)v34;
    v33[8] = v34[8];
    *(void *)uint64_t v33 = v35;
    uint64_t v36 = v9[7];
    uint64_t v37 = &v7[v36];
    uint64_t v38 = &v8[v36];
    uint64_t v39 = sub_1E0ECB810();
    uint64_t v58 = *(void *)(v39 - 8);
    uint64_t v40 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48);
    __dstCGFloat a = v37;
    LODWORD(v37) = v40(v37, 1, v39);
    int v41 = v40(v38, 1, v39);
    if (v37)
    {
      if (!v41)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v58 + 16))(__dsta, v38, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v39);
        goto LABEL_18;
      }
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v43 = *(void *)(*(void *)(v42 - 8) + 64);
      size_t v44 = __dsta;
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v58 + 24))(__dsta, v38, v39);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v58 + 8))(__dsta, v39);
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v43 = *(void *)(*(void *)(v49 - 8) + 64);
      size_t v44 = __dsta;
    }
    memcpy(v44, v38, v43);
LABEL_18:
    a3 = v61;
    uint64_t v50 = v9[8];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    *uint64_t v51 = *v52;
    v51[1] = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    sub_1E0E39F88(0);
    memcpy(v7, v8, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = v9[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v9[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = v9[7];
  __dst = &v7[v22];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = sub_1E0ECB810();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16))(__dst, v23, v24);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
  }
  uint64_t v45 = v9[8];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  uint64_t v48 = *(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56);
  swift_bridgeObjectRetain();
  v48(v7, 0, 1, v9);
LABEL_19:
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v7[*(int *)(v53 + 28)] = *(void *)&v8[*(int *)(v53 + 28)];
  swift_retain();
  swift_release();
  uint64_t v54 = *(int *)(a3 + 24);
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1E0EBDAF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    sub_1E0E39F88(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v12 = v9[5];
    int v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = v9[6];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = v9[7];
    __dst = &v7[v19];
    uint64_t v20 = &v8[v19];
    uint64_t v21 = sub_1E0ECB810();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(__dst, v20, v21);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v7[*(int *)(v24 + 28)] = *(void *)&v8[*(int *)(v24 + 28)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1E0EBDDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1E0EBEE80((uint64_t)v7, type metadata accessor for ErrorDetails);
      goto LABEL_7;
    }
    uint64_t v57 = a3;
    *uint64_t v7 = *v8;
    uint64_t v27 = v9[5];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    uint64_t v30 = sub_1E0ECBCA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
    uint64_t v31 = v9[6];
    uint64_t v32 = &v7[v31];
    uint64_t v33 = &v8[v31];
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = v9[7];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    uint64_t v37 = sub_1E0ECB810();
    uint64_t v56 = *(void *)(v37 - 8);
    uint64_t v38 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48);
    __dstCGFloat a = v35;
    LODWORD(v35) = v38(v35, 1, v37);
    int v39 = v38(v36, 1, v37);
    if (v35)
    {
      if (!v39)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v56 + 32))(__dsta, v36, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v37);
        goto LABEL_18;
      }
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v41 = *(void *)(*(void *)(v40 - 8) + 64);
      uint64_t v42 = __dsta;
    }
    else
    {
      if (!v39)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v56 + 40))(__dsta, v36, v37);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v56 + 8))(__dsta, v37);
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      size_t v41 = *(void *)(*(void *)(v43 - 8) + 64);
      uint64_t v42 = __dsta;
    }
    memcpy(v42, v36, v41);
LABEL_18:
    a3 = v57;
    uint64_t v44 = v9[8];
    uint64_t v45 = &v7[v44];
    uint64_t v46 = (uint64_t *)&v8[v44];
    uint64_t v48 = *v46;
    uint64_t v47 = v46[1];
    void *v45 = v48;
    v45[1] = v47;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    sub_1E0E39F88(0);
    memcpy(v7, v8, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = v9[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = v9[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = v9[7];
  __dst = &v7[v21];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = sub_1E0ECB810();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v24 + 32))(__dst, v22, v23);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_19:
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  *(void *)&v7[*(int *)(v49 + 28)] = *(void *)&v8[*(int *)(v49 + 28)];
  swift_release();
  uint64_t v50 = *(int *)(a3 + 24);
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1E0EBE378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0EBE38C);
}

uint64_t sub_1E0EBE38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1E0EBE484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0EBE498);
}

void sub_1E0EBE498(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1E0EB8D58(0, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

void sub_1E0EBE58C()
{
  sub_1E0EB8D58(319, (unint64_t *)&unk_1EAD6FEC0, (uint64_t (*)(uint64_t))sub_1E0E39F88, MEMORY[0x1E4F3ECC8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1E0EBE65C()
{
  return MEMORY[0x1E4F3F158];
}

id sub_1E0EBE668()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F466F0]), sel_init);
  objc_msgSend(v0, sel_setAllowsBackForwardNavigationGestures_, 1);
  sub_1E0EBF008();
  sub_1E0ECC860();
  objc_msgSend(v0, sel_setNavigationDelegate_, v2);

  return v0;
}

uint64_t sub_1E0EBE6F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = type metadata accessor for InstructionsForUseWebViewContainer(0);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  int v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1E0EBEF50(v4, (uint64_t)v13, type metadata accessor for InstructionsForUseWebView);
  sub_1E0EBEF50(v4 + *(int *)(a1 + 28), (uint64_t)v10, type metadata accessor for InstructionsForUseWebViewContainer);
  uint64_t v14 = (objc_class *)type metadata accessor for InstructionsForUseWebView.Coordinator(0);
  id v15 = objc_allocWithZone(v14);
  sub_1E0EBEF50((uint64_t)v13, (uint64_t)v15+ OBJC_IVAR____TtCV8HealthUIP33_9391128D22BBD0797A4FA47559946E1D25InstructionsForUseWebView11Coordinator_parent, type metadata accessor for InstructionsForUseWebView);
  sub_1E0EBEF50((uint64_t)v10, (uint64_t)v15+ OBJC_IVAR____TtCV8HealthUIP33_9391128D22BBD0797A4FA47559946E1D25InstructionsForUseWebView11Coordinator_container, type metadata accessor for InstructionsForUseWebViewContainer);
  v18.receiver = v15;
  v18.super_class = v14;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  sub_1E0EBEE80((uint64_t)v10, type metadata accessor for InstructionsForUseWebViewContainer);
  uint64_t result = sub_1E0EBEE80((uint64_t)v13, type metadata accessor for InstructionsForUseWebView);
  *a2 = v16;
  return result;
}

uint64_t sub_1E0EBE8A8()
{
  return sub_1E0ECC6A0();
}

uint64_t sub_1E0EBE8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E0EC1AD0((unint64_t *)&unk_1EAD6FF88, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
  return MEMORY[0x1F40F9EF0](a1, a2, a3, v6);
}

uint64_t sub_1E0EBE980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1E0EC1AD0((unint64_t *)&unk_1EAD6FF88, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
  return MEMORY[0x1F40F9E78](a1, a2, a3, v6);
}

void sub_1E0EBEA14()
{
}

uint64_t sub_1E0EBEA6C()
{
  return sub_1E0EC1AD0(&qword_1EAD6FF00, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
}

uint64_t sub_1E0EBEAB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for InstructionsForUseWebViewError(uint64_t a1)
{
  return sub_1E0E28200(a1, qword_1EAD6FF98);
}

void sub_1E0EBEAF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for InstructionsForUseWebViewError(255);
    unint64_t v7 = a3(a1, v6, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1E0EBEB54()
{
  unint64_t result = qword_1EAD6FF28;
  if (!qword_1EAD6FF28)
  {
    sub_1E0EBEAF0(255, &qword_1EAD6FF10, MEMORY[0x1E4F3D750]);
    sub_1E0EC1AD0(&qword_1EAD6FF30, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebViewError);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FF28);
  }
  return result;
}

uint64_t sub_1E0EBEC10(uint64_t a1, uint64_t a2)
{
  sub_1E0EBEAF0(0, &qword_1EAD6FF10, MEMORY[0x1E4F3D750]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E0EBEC90(uint64_t a1)
{
  sub_1E0EBEAF0(0, &qword_1EAD6FF10, MEMORY[0x1E4F3D750]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1E0EBED08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ErrorDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1E0EBED6C()
{
  if (!qword_1EAD6FF38)
  {
    sub_1E0EB8D58(255, (unint64_t *)&unk_1EAD6FF40, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6FF38);
    }
  }
}

uint64_t sub_1E0EBEE00(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1E0EB8D58(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1E0EBEE80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1E0EBEEE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1E0EB8D58(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1E0EBEF50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1E0EBEFB8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1E0EBF008()
{
  if (!qword_1EAD6FF80)
  {
    type metadata accessor for InstructionsForUseWebView(255);
    sub_1E0EC1AD0((unint64_t *)&unk_1EAD6FF88, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
    unint64_t v0 = sub_1E0ECC870();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FF80);
    }
  }
}

id sub_1E0EBF09C@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v23 = sub_1E0ECC620();
  sub_1E0EBF4E8(a1, (uint64_t)__src);
  long long v21 = __src[0];
  char v3 = __src[1];
  uint64_t v22 = *((void *)&__src[1] + 1);
  long long v4 = __src[2];
  char v5 = __src[3];
  uint64_t v6 = *((void *)&__src[3] + 1);
  uint64_t KeyPath = swift_getKeyPath();
  char v8 = sub_1E0ECC8F0();
  char v55 = 0;
  char v54 = v3;
  char v53 = v5;
  char v52 = 1;
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v10 = result;
    char v19 = v8;
    unsigned int v11 = objc_msgSend(result, sel_isAppleInternalInstall);

    uint64_t v12 = KeyPath;
    if (v11)
    {
      uint64_t v13 = sub_1E0ECC620();
      sub_1E0EBF808(a1, (uint64_t)v33);
      *(_OWORD *)((char *)&v36[11] + 7) = v33[11];
      *(_OWORD *)((char *)&v36[12] + 7) = v33[12];
      *(_OWORD *)((char *)&v36[13] + 7) = v33[13];
      *(_OWORD *)((char *)&v36[14] + 7) = v34;
      *(_OWORD *)((char *)&v36[7] + 7) = v33[7];
      *(_OWORD *)((char *)&v36[8] + 7) = v33[8];
      *(_OWORD *)((char *)&v36[9] + 7) = v33[9];
      *(_OWORD *)((char *)&v36[10] + 7) = v33[10];
      *(_OWORD *)((char *)&v36[3] + 7) = v33[3];
      *(_OWORD *)((char *)&v36[4] + 7) = v33[4];
      *(_OWORD *)((char *)&v36[5] + 7) = v33[5];
      *(_OWORD *)((char *)&v36[6] + 7) = v33[6];
      *(_OWORD *)((char *)v36 + 7) = v33[0];
      *(_OWORD *)((char *)&v36[1] + 7) = v33[1];
      *(_OWORD *)((char *)&v36[2] + 7) = v33[2];
      *(_OWORD *)((char *)&__src[13] + 1) = v36[12];
      *(_OWORD *)((char *)&__src[14] + 1) = v36[13];
      *(_OWORD *)((char *)&__src[15] + 1) = v36[14];
      *(_OWORD *)((char *)&__src[9] + 1) = v36[8];
      *(_OWORD *)((char *)&__src[10] + 1) = v36[9];
      *(_OWORD *)((char *)&__src[11] + 1) = v36[10];
      *(_OWORD *)((char *)&__src[12] + 1) = v36[11];
      *(_OWORD *)((char *)&__src[5] + 1) = v36[4];
      *(_OWORD *)((char *)&__src[6] + 1) = v36[5];
      *(_OWORD *)((char *)&__src[7] + 1) = v36[6];
      *(_OWORD *)((char *)&__src[8] + 1) = v36[7];
      *(_OWORD *)((char *)&__src[1] + 1) = v36[0];
      *(_OWORD *)((char *)&__src[2] + 1) = v36[1];
      *(_OWORD *)((char *)&__src[3] + 1) = v36[2];
      v24[0] = 1;
      __src[0] = (unint64_t)v13;
      LOBYTE(__src[1]) = 1;
      *(void *)&__src[16] = *((void *)&v34 + 1);
      *(_OWORD *)((char *)&__src[4] + 1) = v36[3];
      nullsub_1(__src);
    }
    else
    {
      sub_1E0EC1340((uint64_t)__src);
    }
    sub_1E0EC136C((uint64_t)__src, (uint64_t)v51);
    char v14 = v55;
    char v15 = v54;
    char v16 = v53;
    char v18 = v53;
    char v17 = v52;
    sub_1E0EC136C((uint64_t)v51, (uint64_t)v24);
    *(void *)&long long v25 = v23;
    *((void *)&v25 + 1) = 0x4024000000000000;
    v26[0] = v14;
    *(_OWORD *)&v26[8] = v21;
    v26[24] = v15;
    *(void *)uint64_t v27 = v22;
    *(_OWORD *)&v27[8] = v4;
    v27[24] = v16;
    *(void *)&long long v28 = v6;
    *((void *)&v28 + 1) = v12;
    LOBYTE(v29) = 1;
    BYTE8(v29) = v19;
    long long v30 = 0u;
    long long v31 = 0u;
    char v32 = v17;
    sub_1E0EC136C((uint64_t)v24, (uint64_t)v33);
    __src[6] = v29;
    __src[7] = v30;
    __src[8] = v31;
    LOBYTE(__src[9]) = v32;
    __src[2] = *(_OWORD *)&v26[16];
    __src[3] = *(_OWORD *)v27;
    __src[4] = *(_OWORD *)&v27[16];
    __src[5] = v28;
    __src[0] = v25;
    __src[1] = *(_OWORD *)v26;
    sub_1E0EC136C((uint64_t)v33, (uint64_t)&__src[9] + 8);
    memcpy(a2, __src, 0x1A0uLL);
    sub_1E0EC136C((uint64_t)v24, (uint64_t)v36);
    sub_1E0EC1680((uint64_t)&v25);
    sub_1E0EC1798((uint64_t)v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1E0EC1704);
    sub_1E0EC1798((uint64_t)v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1E0EC181C);
    v37[0] = v23;
    v37[1] = 0x4024000000000000;
    char v38 = v14;
    long long v39 = v21;
    char v40 = v15;
    uint64_t v41 = v22;
    long long v42 = v4;
    char v43 = v18;
    uint64_t v44 = v6;
    uint64_t v45 = v12;
    char v46 = 1;
    char v47 = v19;
    long long v48 = 0u;
    long long v49 = 0u;
    char v50 = v17;
    return (id)sub_1E0EC18B0((uint64_t)v37);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1E0EBF4E8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1E0EB652C(*a1);
  sub_1E0E0F184();
  uint64_t v3 = sub_1E0ECCAF0();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_1E0ECC9E0();
  uint64_t v8 = sub_1E0ECCAB0();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  sub_1E0DF8F74(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_1E0ECCC70();
  uint64_t v13 = sub_1E0ECCA90();
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  char v16 = v15;
  uint64_t v40 = v17;
  swift_release();
  sub_1E0DF8F74(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  sub_1E0ECD800();
  swift_bridgeObjectRelease();
  if (qword_1EAD69948 != -1) {
    swift_once();
  }
  char v37 = v16 & 1;
  id v18 = (id)qword_1EAD740B8;
  sub_1E0ECB680();

  uint64_t v19 = sub_1E0ECCAF0();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_1E0ECC940();
  uint64_t v24 = sub_1E0ECCAB0();
  uint64_t v26 = v25;
  char v28 = v27;
  swift_release();
  sub_1E0DF8F74(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_1E0ECCC70();
  uint64_t v29 = sub_1E0ECCA90();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  swift_release();
  sub_1E0DF8F74(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  *(void *)a2 = v39;
  *(void *)(a2 + 8) = v38;
  *(unsigned char *)(a2 + 16) = v37;
  *(void *)(a2 + 24) = v40;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = v31;
  *(unsigned char *)(a2 + 48) = v33 & 1;
  *(void *)(a2 + 56) = v35;
  sub_1E0E11B20(v39, v38, v37);
  swift_bridgeObjectRetain();
  sub_1E0E11B20(v29, v31, v33 & 1);
  swift_bridgeObjectRetain();
  sub_1E0DF8F74(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  sub_1E0DF8F74(v39, v38, v37);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1E0EBF808@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v41 - v7;
  *(void *)uint64_t v58 = 0;
  *(void *)&v58[8] = 0xE000000000000000;
  sub_1E0ECD800();
  uint64_t v71 = *(void *)v58;
  uint64_t v72 = *(void *)&v58[8];
  sub_1E0ECD250();
  uint64_t v9 = type metadata accessor for ErrorDetails(0);
  swift_bridgeObjectRetain();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v41 = a1;
  sub_1E0EBEE00((uint64_t)&a1[v10], (uint64_t)v8, &qword_1EAD6E838, v4);
  uint64_t v11 = sub_1E0ECB810();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    sub_1E0EBEEE0((uint64_t)v8, &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
  }
  else
  {
    sub_1E0ECB7D0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  }
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  uint64_t v13 = v41;
  v58[0] = *v41;
  sub_1E0ECD200();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  *(void *)uint64_t v58 = sub_1E0ECBC90();
  sub_1E0EC1934();
  sub_1E0ECD750();
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  sub_1E0ECD250();
  uint64_t v14 = &v13[*(int *)(v9 + 24)];
  if ((v14[8] & 1) == 0)
  {
    *(void *)uint64_t v58 = *(void *)v14;
    sub_1E0ECD750();
  }
  sub_1E0ECD250();
  swift_bridgeObjectRelease();
  uint64_t v16 = v71;
  uint64_t v15 = v72;
  uint64_t v17 = sub_1E0ECCE30();
  sub_1E0E6C088(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v42, 0.0, 1, 0.0, 1, v17, v18, v16, v15, 0, MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  LOBYTE(v15) = sub_1E0ECC8F0();
  char v51 = 1;
  uint64_t v19 = sub_1E0ECCA20();
  uint64_t KeyPath = swift_getKeyPath();
  char v21 = v51;
  uint64_t v22 = sub_1E0ECCC70();
  uint64_t v23 = swift_getKeyPath();
  long long v24 = v47;
  v54[5] = v47;
  long long v25 = v48;
  v54[6] = v48;
  long long v26 = v49;
  v54[7] = v49;
  long long v27 = v50;
  v54[8] = v50;
  long long v28 = v43;
  v54[1] = v43;
  long long v29 = v44;
  void v54[2] = v44;
  long long v30 = v45;
  v54[3] = v45;
  long long v31 = v46;
  v54[4] = v46;
  long long v32 = v42;
  v54[0] = v42;
  LOBYTE(v55[0]) = v15;
  *(_DWORD *)((char *)v55 + 1) = *(_DWORD *)v52;
  DWORD1(v55[0]) = *(_DWORD *)&v52[3];
  *(_OWORD *)((char *)v55 + 8) = 0u;
  *(_OWORD *)((char *)&v55[1] + 8) = 0u;
  BYTE8(v55[2]) = v21;
  HIDWORD(v55[2]) = *(_DWORD *)&v53[3];
  *(_DWORD *)((char *)&v55[2] + 9) = *(_DWORD *)v53;
  *(void *)&long long v56 = KeyPath;
  *((void *)&v56 + 1) = v19;
  *(void *)&long long v57 = v23;
  *((void *)&v57 + 1) = v22;
  *(_OWORD *)&v58[167] = v55[1];
  *(_OWORD *)&v58[199] = v56;
  *(_OWORD *)&v58[215] = v57;
  *(_OWORD *)&v58[103] = v48;
  *(_OWORD *)&v58[119] = v49;
  *(_OWORD *)&v58[135] = v50;
  *(_OWORD *)&v58[39] = v44;
  *(_OWORD *)&v58[55] = v45;
  *(_OWORD *)&v58[71] = v46;
  *(_OWORD *)&v58[87] = v47;
  *(_OWORD *)&v58[7] = v42;
  *(_OWORD *)&v58[23] = v43;
  *(_OWORD *)&v58[183] = v55[2];
  *(_OWORD *)&v58[151] = v55[0];
  long long v33 = *(_OWORD *)&v58[160];
  *(_OWORD *)(a2 + 185) = *(_OWORD *)&v58[176];
  long long v34 = *(_OWORD *)&v58[208];
  *(_OWORD *)(a2 + 201) = *(_OWORD *)&v58[192];
  *(_OWORD *)(a2 + 217) = v34;
  long long v35 = *(_OWORD *)&v58[96];
  *(_OWORD *)(a2 + 121) = *(_OWORD *)&v58[112];
  long long v36 = *(_OWORD *)&v58[144];
  *(_OWORD *)(a2 + 137) = *(_OWORD *)&v58[128];
  *(_OWORD *)(a2 + 153) = v36;
  *(_OWORD *)(a2 + 169) = v33;
  long long v37 = *(_OWORD *)&v58[32];
  *(_OWORD *)(a2 + 57) = *(_OWORD *)&v58[48];
  long long v38 = *(_OWORD *)&v58[80];
  *(_OWORD *)(a2 + 73) = *(_OWORD *)&v58[64];
  *(_OWORD *)(a2 + 89) = v38;
  *(_OWORD *)(a2 + 105) = v35;
  long long v39 = *(_OWORD *)&v58[16];
  *(_OWORD *)(a2 + 9) = *(_OWORD *)v58;
  *(_OWORD *)(a2 + 25) = v39;
  *(_OWORD *)(a2 + 41) = v37;
  v60[6] = v25;
  v60[7] = v26;
  v60[8] = v27;
  v60[2] = v29;
  v60[3] = v30;
  v60[4] = v31;
  v60[5] = v24;
  *(_DWORD *)uint64_t v66 = *(_DWORD *)v53;
  *(_DWORD *)&v66[3] = *(_DWORD *)&v53[3];
  char v59 = 1;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 232) = *(void *)&v58[223];
  v60[0] = v32;
  v60[1] = v28;
  char v61 = v15;
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v52;
  *(_DWORD *)&v62[3] = *(_DWORD *)&v52[3];
  long long v63 = 0u;
  long long v64 = 0u;
  char v65 = v21;
  uint64_t v67 = KeyPath;
  uint64_t v68 = v19;
  uint64_t v69 = v23;
  uint64_t v70 = v22;
  sub_1E0EC1998((uint64_t)v54);
  return sub_1E0EC1A10((uint64_t)v60);
}

void *sub_1E0EBFE04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1E0ECCE20();
  uint64_t v5 = v4;
  sub_1E0EBF09C(v1, __src);
  *a1 = v3;
  a1[1] = v5;
  return memcpy(a1 + 2, __src, 0x1A0uLL);
}

void sub_1E0EBFE60(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = type metadata accessor for InstructionsForUseWebView(0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(a2, sel_response);
  self;
  uint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (v17 && (uint64_t v18 = v17, (uint64_t)objc_msgSend(v17, sel_statusCode) >= 400))
  {
    uint64_t v20 = a3
        + OBJC_IVAR____TtCV8HealthUIP33_9391128D22BBD0797A4FA47559946E1D25InstructionsForUseWebView11Coordinator_parent;
    sub_1E0EBEF50(v20, (uint64_t)v15, type metadata accessor for InstructionsForUseWebView);
    char v21 = (uint64_t *)(v20 + *(int *)(v12 + 24));
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    id v24 = objc_msgSend(a1, sel_URL);
    if (v24)
    {
      long long v25 = v24;
      sub_1E0ECB7F0();

      uint64_t v26 = sub_1E0ECB810();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
    }
    else
    {
      uint64_t v27 = sub_1E0ECB810();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
    }
    sub_1E0EB7B18(0, v22, v23, (uint64_t)v11, (uint64_t)objc_msgSend(v18, sel_statusCode), 0);
    sub_1E0EBEEE0((uint64_t)v11, &qword_1EAD6E838, MEMORY[0x1E4F276F0]);
    sub_1E0EBEE80((uint64_t)v15, type metadata accessor for InstructionsForUseWebView);
    (*(void (**)(uint64_t, void))(a4 + 16))(a4, 0);
  }
  else
  {

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
    v19(a4, 1);
  }
}

uint64_t *sub_1E0EC0154(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ErrorDetails(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1E0ECBCA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = v6[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = v6[7];
    uint64_t v15 = (char *)a1 + v14;
    id v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1E0ECB810();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = v6[8];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1E0EC0378(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ErrorDetails(0);
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_1E0ECBCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 28);
  uint64_t v6 = sub_1E0ECB810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return swift_bridgeObjectRelease();
}

unsigned char *sub_1E0EC048C(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  uint64_t v9 = v4[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = v4[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1E0ECB810();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = v4[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1E0EC0660(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  uint64_t v9 = v4[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)v11;
  v10[8] = v11[8];
  *(void *)uint64_t v10 = v12;
  uint64_t v13 = v4[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1E0ECB810();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t v22 = v4[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  void *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1E0EC08AC(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = v4[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = v4[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1E0ECB810();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)&a1[v4[8]] = *(_OWORD *)&a2[v4[8]];
  return a1;
}

unsigned char *sub_1E0EC0A74(unsigned char *a1, unsigned char *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for ErrorDetails(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = sub_1E0ECBCA0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  uint64_t v9 = v4[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = v4[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1E0ECB810();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1E0EB8D58(0, &qword_1EAD6E838, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = v4[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1E0EC0CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1E0EC0CC4);
}

uint64_t sub_1E0EC0CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ErrorDetails(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1E0EC0D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1E0EC0D44);
}

uint64_t sub_1E0EC0D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ErrorDetails(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1E0EC0DB4()
{
  uint64_t result = type metadata accessor for ErrorDetails(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for InstructionsForUseWebViewContainer.Configuration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for InstructionsForUseWebViewContainer.Configuration()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for InstructionsForUseWebViewContainer.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InstructionsForUseWebViewContainer.Configuration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstructionsForUseWebViewContainer.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstructionsForUseWebViewContainer.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstructionsForUseWebViewContainer.Configuration()
{
  return &type metadata for InstructionsForUseWebViewContainer.Configuration;
}

uint64_t getEnumTagSinglePayload for ErrorReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ErrorReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E0EC10E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorReason()
{
  return &type metadata for ErrorReason;
}

unint64_t sub_1E0EC111C()
{
  unint64_t result = qword_1EAD6FFB0;
  if (!qword_1EAD6FFB0)
  {
    sub_1E0EC11E0(255, &qword_1EAD6FFB8, MEMORY[0x1E4F3D750]);
    sub_1E0EBEB54();
    sub_1E0EC1AD0(&qword_1EAD6FF00, (void (*)(uint64_t))type metadata accessor for InstructionsForUseWebView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FFB0);
  }
  return result;
}

void sub_1E0EC11E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1E0EBEAF0(255, &qword_1EAD6FF10, MEMORY[0x1E4F3D750]);
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for InstructionsForUseWebView(255);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1E0EC1270()
{
  unint64_t result = qword_1EAD6FFC0;
  if (!qword_1EAD6FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FFC0);
  }
  return result;
}

unint64_t sub_1E0EC12C8()
{
  unint64_t result = qword_1EAD6FFC8;
  if (!qword_1EAD6FFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD6FFC8);
  }
  return result;
}

uint64_t sub_1E0EC131C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1E0EC1340(uint64_t a1)
{
  *(void *)(a1 + 256) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1E0EC136C(uint64_t a1, uint64_t a2)
{
  sub_1E0EB8D58(0, &qword_1EAD6FFD0, (uint64_t (*)(uint64_t))sub_1E0EC1400, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1E0EC1400(uint64_t a1)
{
}

void sub_1E0EC1430()
{
  if (!qword_1EAD6FFE8)
  {
    sub_1E0EC1498();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD6FFE8);
    }
  }
}

void sub_1E0EC1498()
{
  if (!qword_1EAD6FFF0)
  {
    sub_1E0EC1518();
    sub_1E0EC1614(255, &qword_1EB5850E0, &qword_1EB585130, MEMORY[0x1E4F3EB98]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FFF0);
    }
  }
}

void sub_1E0EC1518()
{
  if (!qword_1EAD6FFF8)
  {
    sub_1E0EC1C88(255, (unint64_t *)&unk_1EAD70000, (void (*)(uint64_t))sub_1E0EC15B4);
    sub_1E0EC1614(255, &qword_1EB5850D0, &qword_1EB585108, MEMORY[0x1E4F3E1B0]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6FFF8);
    }
  }
}

void sub_1E0EC15B4()
{
  if (!qword_1EAD6E0E8)
  {
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD6E0E8);
    }
  }
}

void sub_1E0EC1614(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1E0EC1EA0(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1E0ECC880();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1E0EC1680(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_1E0E11B20(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1E0E11B20(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1E0EC1704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (a9)
  {
    sub_1E0E11B20(a6, a7, a8 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1E0EC1798(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    *(void *)(a1 + 256));
  return a1;
}

uint64_t sub_1E0EC181C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (a9)
  {
    sub_1E0DF8F74(a6, a7, a8 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E0EC18B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_1E0DF8F74(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1E0DF8F74(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1E0EC1934()
{
  unint64_t result = qword_1EAD70018;
  if (!qword_1EAD70018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAD70018);
  }
  return result;
}

uint64_t sub_1E0EC1998(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0EC1A10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1E0EC1A88()
{
  return sub_1E0EC1AD0(&qword_1EAD70028, (void (*)(uint64_t))sub_1E0EC1B18);
}

uint64_t sub_1E0EC1AD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1E0EC1B18()
{
  if (!qword_1EAD70030)
  {
    sub_1E0EB8D58(255, &qword_1EAD70038, (uint64_t (*)(uint64_t))sub_1E0EC1BCC, MEMORY[0x1E4F3F108]);
    sub_1E0EC1EEC((unint64_t *)&unk_1EAD70080, &qword_1EAD70038, (uint64_t (*)(uint64_t))sub_1E0EC1BCC);
    unint64_t v0 = sub_1E0ECCDA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD70030);
    }
  }
}

void sub_1E0EC1BCC()
{
  if (!qword_1EAD70040)
  {
    sub_1E0EC1C88(255, &qword_1EAD70048, (void (*)(uint64_t))sub_1E0EC1CE4);
    sub_1E0EB8D58(255, &qword_1EAD6FFD0, (uint64_t (*)(uint64_t))sub_1E0EC1400, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD70040);
    }
  }
}

void sub_1E0EC1C88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1E0ECC3F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1E0EC1CE4()
{
  if (!qword_1EAD70050)
  {
    sub_1E0EC1D9C(255, &qword_1EAD70058, &qword_1EAD70060, (uint64_t (*)(uint64_t))sub_1E0EC1E3C, (unint64_t *)&unk_1EAD70070);
    sub_1E0EC1EA0(255, &qword_1EB5850B8, MEMORY[0x1E4F3C870], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1E0ECC3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAD70050);
    }
  }
}

void sub_1E0EC1D9C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1E0EB8D58(255, a3, a4, MEMORY[0x1E4F3F108]);
    sub_1E0EC1EEC(a5, a3, a4);
    unint64_t v9 = sub_1E0ECCD90();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1E0EC1E3C()
{
  if (!qword_1EAD70068)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EAD70068);
    }
  }
}

void sub_1E0EC1EA0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1E0EC1EEC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1E0EB8D58(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void _createPrivateSecKeyRefFromP12_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void _createPrivateSecKeyRefFromP12_cold_2(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void __getTUCallProviderManagerClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getTUCallProviderManagerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDTelephoneUtilities.m", 17, @"Unable to find class %s", "TUCallProviderManager");

  __break(1u);
}

void TelephonyUtilitiesLibrary_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *TelephonyUtilitiesLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKMedicalIDTelephoneUtilities.m", 16, @"%s", *a1);

  __break(1u);
}

void __getTUDialRequestClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getTUDialRequestClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDTelephoneUtilities.m", 19, @"Unable to find class %s", "TUDialRequest");

  __break(1u);
}

void __getTUHandleClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getTUHandleClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDTelephoneUtilities.m", 20, @"Unable to find class %s", "TUHandle");

  __break(1u);
}

void __getSOSUtilitiesClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getSOSUtilitiesClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDData+SOSContactManager.m", 19, @"Unable to find class %s", "SOSUtilities");

  __break(1u);
}

void SOSLibrary_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *SOSLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKMedicalIDData+SOSContactManager.m", 17, @"%s", *a1);

  __break(1u);
}

void __getSOSContactsManagerClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getSOSContactsManagerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDData+SOSContactManager.m", 18, @"Unable to find class %s", "SOSContactsManager");

  __break(1u);
}

void ClampedWeightLoggingOutOfBoundsValues_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_1E0B26000, a2, OS_LOG_TYPE_FAULT, "invalid low value in HKSimpleDataEntryWeightItem %@", (uint8_t *)&v2, 0xCu);
}

void ClampedWeightLoggingOutOfBoundsValues_cold_2(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_1E0B26000, a2, OS_LOG_TYPE_FAULT, "invalid high value in HKSimpleDataEntryWeightItem %@", (uint8_t *)&v2, 0xCu);
}

void __getSOSUtilitiesClass_block_invoke_cold_1_0()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getSOSUtilitiesClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKEmergencyCardContactsTableItem.m", 47, @"Unable to find class %s", "SOSUtilities");

  __break(1u);
}

void SOSLibrary_cold_1_0(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *SOSLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKEmergencyCardContactsTableItem.m", 46, @"%s", *a1);

  __break(1u);
}

void __getSOSManagerClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getSOSManagerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKEmergencyCardContactsTableItem.m", 48, @"Unable to find class %s", "SOSManager");

  __break(1u);
}

void CoreTelephonyLibrary_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *CoreTelephonyLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKCoreTelephonyUtilities.m", 15, @"%s", *a1);

  __break(1u);
}

void __getSTStorageAppHeaderCellClass_block_invoke_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *StorageSettingsLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKHealthManageStorageViewController.m", 23, @"%s", *a1);

  __break(1u);
}

void __getSTStorageAppHeaderCellClass_block_invoke_cold_2()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getSTStorageAppHeaderCellClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKHealthManageStorageViewController.m", 24, @"Unable to find class %s", "STStorageAppHeaderCell");

  __break(1u);
}

void __getCNAvatarImageRendererClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCNAvatarImageRendererClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKTitledContactBuddyHeaderView.m", 29, @"Unable to find class %s", "CNAvatarImageRenderer");

  __break(1u);
}

void ContactsUILibrary_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *ContactsUILibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKTitledContactBuddyHeaderView.m", 27, @"%s", *a1);

  __break(1u);
}

void __getCNAvatarImageRenderingScopeClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCNAvatarImageRenderingScopeClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKTitledContactBuddyHeaderView.m", 30, @"Unable to find class %s", "CNAvatarImageRenderingScope");

  __break(1u);
}

void __getMKBGetDeviceLockStateSymbolLoc_block_invoke_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *MobileKeyBagLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKMedicalIDViewController.m", 95, @"%s", *a1);

  __break(1u);
}

void __getBKDeviceClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getBKDeviceClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDViewController.m", 90, @"Unable to find class %s", "BKDevice");

  __break(1u);
}

void BiometricKitLibrary_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *BiometricKitLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKMedicalIDViewController.m", 89, @"%s", *a1);

  __break(1u);
}

void __getBKDeviceManagerClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getBKDeviceManagerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKMedicalIDViewController.m", 91, @"Unable to find class %s", "BKDeviceManager");

  __break(1u);
}

void HKInteractiveChartDataSourceChartStyle_cold_1(void *a1, void *a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = a1;
  uint64_t v6 = [a2 displayTypeIdentifierString];
  uint64_t v7 = [a2 chartingRules];
  int v8 = 138412802;
  unint64_t v9 = v6;
  __int16 v10 = 2048;
  uint64_t v11 = a3;
  __int16 v12 = 2048;
  uint64_t v13 = [v7 chartStyleForTimeScope:a3];
  _os_log_error_impl(&dword_1E0B26000, v5, OS_LOG_TYPE_ERROR, "No generic data source for display type: %@, timescope %ld, style %ld", (uint8_t *)&v8, 0x20u);
}

void __getCNContactPickerViewControllerClass_block_invoke_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *ContactsUILibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKEmergencyContactPicker.m", 17, @"%s", *a1);

  __break(1u);
}

void __getCNContactPickerViewControllerClass_block_invoke_cold_2()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCNContactPickerViewControllerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKEmergencyContactPicker.m", 18, @"Unable to find class %s", "CNContactPickerViewController");

  __break(1u);
}

void __getWKWebViewConfigurationClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWKWebViewConfigurationClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKCDADocumentReportViewController.m", 21, @"Unable to find class %s", "WKWebViewConfiguration");

  __break(1u);
}

void WebKitLibrary_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *WebKitLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKCDADocumentReportViewController.m", 20, @"%s", *a1);

  __break(1u);
}

void __getWKWebViewClass_block_invoke_cold_1()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWKWebViewClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKCDADocumentReportViewController.m", 22, @"Unable to find class %s", "WKWebView");

  __break(1u);
}

void __getCNLabeledValueClass_block_invoke_cold_1(void *a1)
{
  int v2 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *ContactsUILibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"HKEmergencyContactRelationshipPicker.m", 19, @"%s", *a1);

  __break(1u);
}

void __getCNLabeledValueClass_block_invoke_cold_2()
{
  unint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCNLabeledValueClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"HKEmergencyContactRelationshipPicker.m", 20, @"Unable to find class %s", "CNLabeledValue");

  __break(1u);
}

uint64_t sub_1E0ECB300()
{
  return MEMORY[0x1F40E2EA8]();
}

uint64_t sub_1E0ECB310()
{
  return MEMORY[0x1F40E2EE8]();
}

uint64_t sub_1E0ECB320()
{
  return MEMORY[0x1F40E2F60]();
}

uint64_t sub_1E0ECB330()
{
  return MEMORY[0x1F40E33D0]();
}

uint64_t sub_1E0ECB340()
{
  return MEMORY[0x1F40E33F0]();
}

uint64_t sub_1E0ECB350()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1E0ECB360()
{
  return MEMORY[0x1F40E34A0]();
}

uint64_t sub_1E0ECB370()
{
  return MEMORY[0x1F40E34C0]();
}

uint64_t sub_1E0ECB380()
{
  return MEMORY[0x1F40E34D0]();
}

uint64_t sub_1E0ECB390()
{
  return MEMORY[0x1F40E34E8]();
}

uint64_t sub_1E0ECB3A0()
{
  return MEMORY[0x1F40E34F8]();
}

uint64_t sub_1E0ECB3B0()
{
  return MEMORY[0x1F40E3518]();
}

uint64_t sub_1E0ECB3C0()
{
  return MEMORY[0x1F40E3530]();
}

uint64_t sub_1E0ECB3D0()
{
  return MEMORY[0x1F40E3568]();
}

uint64_t sub_1E0ECB3E0()
{
  return MEMORY[0x1F40E35A8]();
}

uint64_t sub_1E0ECB3F0()
{
  return MEMORY[0x1F40E3868]();
}

uint64_t sub_1E0ECB400()
{
  return MEMORY[0x1F40E38D0]();
}

uint64_t sub_1E0ECB410()
{
  return MEMORY[0x1F40E38E8]();
}

uint64_t sub_1E0ECB420()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1E0ECB430()
{
  return MEMORY[0x1F40E3948]();
}

uint64_t sub_1E0ECB440()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_1E0ECB450()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_1E0ECB460()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1E0ECB470()
{
  return MEMORY[0x1F40E3AF8]();
}

uint64_t sub_1E0ECB480()
{
  return MEMORY[0x1F40E3B00]();
}

uint64_t sub_1E0ECB490()
{
  return MEMORY[0x1F40E3B18]();
}

uint64_t sub_1E0ECB4A0()
{
  return MEMORY[0x1F40E3B20]();
}

uint64_t sub_1E0ECB4B0()
{
  return MEMORY[0x1F40E3B28]();
}

uint64_t sub_1E0ECB4C0()
{
  return MEMORY[0x1F40E3B30]();
}

uint64_t sub_1E0ECB4D0()
{
  return MEMORY[0x1F40E3B38]();
}

uint64_t sub_1E0ECB4E0()
{
  return MEMORY[0x1F40E3B48]();
}

uint64_t sub_1E0ECB4F0()
{
  return MEMORY[0x1F40E3B58]();
}

uint64_t sub_1E0ECB500()
{
  return MEMORY[0x1F40E3B60]();
}

uint64_t sub_1E0ECB510()
{
  return MEMORY[0x1F40E3B68]();
}

uint64_t sub_1E0ECB520()
{
  return MEMORY[0x1F4165698]();
}

uint64_t sub_1E0ECB530()
{
  return MEMORY[0x1F41656C0]();
}

uint64_t sub_1E0ECB540()
{
  return MEMORY[0x1F41656D8]();
}

uint64_t sub_1E0ECB550()
{
  return MEMORY[0x1F40F7D38]();
}

uint64_t sub_1E0ECB560()
{
  return MEMORY[0x1F40F7D40]();
}

uint64_t sub_1E0ECB570()
{
  return MEMORY[0x1F40E3BC8]();
}

uint64_t sub_1E0ECB580()
{
  return MEMORY[0x1F40E3C10]();
}

uint64_t sub_1E0ECB590()
{
  return MEMORY[0x1F40E3C60]();
}

uint64_t sub_1E0ECB5A0()
{
  return MEMORY[0x1F40E3C80]();
}

uint64_t sub_1E0ECB5B0()
{
  return MEMORY[0x1F40E3D70]();
}

uint64_t sub_1E0ECB5C0()
{
  return MEMORY[0x1F40E3D80]();
}

uint64_t sub_1E0ECB5D0()
{
  return MEMORY[0x1F40E3D90]();
}

uint64_t sub_1E0ECB5E0()
{
  return MEMORY[0x1F40E3DA8]();
}

uint64_t sub_1E0ECB5F0()
{
  return MEMORY[0x1F40E3DC0]();
}

uint64_t sub_1E0ECB600()
{
  return MEMORY[0x1F40E3DC8]();
}

uint64_t sub_1E0ECB610()
{
  return MEMORY[0x1F40E3DF8]();
}

uint64_t sub_1E0ECB620()
{
  return MEMORY[0x1F40E3E08]();
}

uint64_t sub_1E0ECB630()
{
  return MEMORY[0x1F40E3E38]();
}

uint64_t sub_1E0ECB640()
{
  return MEMORY[0x1F40E3EA0]();
}

uint64_t sub_1E0ECB650()
{
  return MEMORY[0x1F40E3EB0]();
}

uint64_t sub_1E0ECB660()
{
  return MEMORY[0x1F40E3EF8]();
}

uint64_t sub_1E0ECB670()
{
  return MEMORY[0x1F40E3F00]();
}

uint64_t sub_1E0ECB680()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1E0ECB690()
{
  return MEMORY[0x1F40E4028]();
}

uint64_t sub_1E0ECB6A0()
{
  return MEMORY[0x1F40E4038]();
}

uint64_t sub_1E0ECB6B0()
{
  return MEMORY[0x1F40E4050]();
}

uint64_t sub_1E0ECB6C0()
{
  return MEMORY[0x1F40E4070]();
}

uint64_t sub_1E0ECB6D0()
{
  return MEMORY[0x1F40E4078]();
}

uint64_t sub_1E0ECB6E0()
{
  return MEMORY[0x1F40E4090]();
}

uint64_t sub_1E0ECB6F0()
{
  return MEMORY[0x1F40E40A0]();
}

uint64_t sub_1E0ECB700()
{
  return MEMORY[0x1F40E4178]();
}

uint64_t sub_1E0ECB710()
{
  return MEMORY[0x1F40E41B8]();
}

uint64_t sub_1E0ECB720()
{
  return MEMORY[0x1F40E44C8]();
}

uint64_t sub_1E0ECB730()
{
  return MEMORY[0x1F40E4518]();
}

uint64_t sub_1E0ECB740()
{
  return MEMORY[0x1F41656F0]();
}

uint64_t sub_1E0ECB750()
{
  return MEMORY[0x1F40F7D50]();
}

uint64_t sub_1E0ECB760()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1E0ECB770()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1E0ECB780()
{
  return MEMORY[0x1F40E4600]();
}

uint64_t sub_1E0ECB790()
{
  return MEMORY[0x1F40E4698]();
}

uint64_t sub_1E0ECB7A0()
{
  return MEMORY[0x1F40E46A8]();
}

uint64_t sub_1E0ECB7B0()
{
  return MEMORY[0x1F40E4838]();
}

uint64_t sub_1E0ECB7C0()
{
  return MEMORY[0x1F40E4840]();
}

uint64_t sub_1E0ECB7D0()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1E0ECB7E0()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1E0ECB7F0()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1E0ECB800()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1E0ECB810()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1E0ECB820()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1E0ECB830()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1E0ECB840()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1E0ECB850()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1E0ECB860()
{
  return MEMORY[0x1F40E4F10]();
}

uint64_t sub_1E0ECB870()
{
  return MEMORY[0x1F40E4F18]();
}

uint64_t sub_1E0ECB880()
{
  return MEMORY[0x1F40E4F20]();
}

uint64_t sub_1E0ECB890()
{
  return MEMORY[0x1F40E4F30]();
}

uint64_t sub_1E0ECB8A0()
{
  return MEMORY[0x1F40E4F38]();
}

uint64_t sub_1E0ECB8B0()
{
  return MEMORY[0x1F40E4F40]();
}

uint64_t sub_1E0ECB8C0()
{
  return MEMORY[0x1F40E4F58]();
}

uint64_t sub_1E0ECB8D0()
{
  return MEMORY[0x1F40E5058]();
}

uint64_t sub_1E0ECB8E0()
{
  return MEMORY[0x1F40E5098]();
}

uint64_t sub_1E0ECB8F0()
{
  return MEMORY[0x1F40E50B8]();
}

uint64_t sub_1E0ECB900()
{
  return MEMORY[0x1F40E50C0]();
}

uint64_t sub_1E0ECB910()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1E0ECB920()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1E0ECB930()
{
  return MEMORY[0x1F40E51A8]();
}

uint64_t sub_1E0ECB940()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1E0ECB950()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1E0ECB960()
{
  return MEMORY[0x1F40E5348]();
}

uint64_t sub_1E0ECB970()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1E0ECB980()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1E0ECB990()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1E0ECB9A0()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1E0ECB9B0()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1E0ECB9C0()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1E0ECB9D0()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1E0ECB9E0()
{
  return MEMORY[0x1F40E5658]();
}

uint64_t sub_1E0ECB9F0()
{
  return MEMORY[0x1F40E56C0]();
}

uint64_t sub_1E0ECBA00()
{
  return MEMORY[0x1F40E56C8]();
}

uint64_t sub_1E0ECBA10()
{
  return MEMORY[0x1F40E5718]();
}

uint64_t sub_1E0ECBA20()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1E0ECBA30()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1E0ECBA40()
{
  return MEMORY[0x1F40E58A8]();
}

uint64_t sub_1E0ECBA50()
{
  return MEMORY[0x1F40E58B0]();
}

uint64_t sub_1E0ECBA60()
{
  return MEMORY[0x1F40E58C8]();
}

uint64_t sub_1E0ECBA70()
{
  return MEMORY[0x1F40E58D0]();
}

uint64_t sub_1E0ECBA80()
{
  return MEMORY[0x1F40E5910]();
}

uint64_t sub_1E0ECBA90()
{
  return MEMORY[0x1F40E5958]();
}

uint64_t sub_1E0ECBAA0()
{
  return MEMORY[0x1F40E5960]();
}

uint64_t sub_1E0ECBAB0()
{
  return MEMORY[0x1F40E5978]();
}

uint64_t sub_1E0ECBAC0()
{
  return MEMORY[0x1F411EF80]();
}

uint64_t sub_1E0ECBAD0()
{
  return MEMORY[0x1F411EF88]();
}

uint64_t sub_1E0ECBAE0()
{
  return MEMORY[0x1F411EFA0]();
}

uint64_t sub_1E0ECBAF0()
{
  return MEMORY[0x1F411EFA8]();
}

uint64_t sub_1E0ECBB00()
{
  return MEMORY[0x1F40E59E0]();
}

uint64_t sub_1E0ECBB10()
{
  return MEMORY[0x1F40E59F8]();
}

uint64_t sub_1E0ECBB20()
{
  return MEMORY[0x1F40E5A18]();
}

uint64_t sub_1E0ECBB30()
{
  return MEMORY[0x1F40E5A58]();
}

uint64_t sub_1E0ECBB40()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1E0ECBB50()
{
  return MEMORY[0x1F40E5B00]();
}

uint64_t sub_1E0ECBB60()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1E0ECBB70()
{
  return MEMORY[0x1F40E5B48]();
}

uint64_t sub_1E0ECBB80()
{
  return MEMORY[0x1F40E5B68]();
}

uint64_t sub_1E0ECBB90()
{
  return MEMORY[0x1F40E5BF8]();
}

uint64_t sub_1E0ECBBA0()
{
  return MEMORY[0x1F40E5C20]();
}

uint64_t sub_1E0ECBBB0()
{
  return MEMORY[0x1F40E5C40]();
}

uint64_t sub_1E0ECBBC0()
{
  return MEMORY[0x1F40E5C68]();
}

uint64_t sub_1E0ECBBD0()
{
  return MEMORY[0x1F40E5C70]();
}

uint64_t sub_1E0ECBBE0()
{
  return MEMORY[0x1F40E5C78]();
}

uint64_t sub_1E0ECBBF0()
{
  return MEMORY[0x1F40E5C88]();
}

uint64_t sub_1E0ECBC00()
{
  return MEMORY[0x1F40E5C90]();
}

uint64_t sub_1E0ECBC10()
{
  return MEMORY[0x1F40E5C98]();
}

uint64_t sub_1E0ECBC20()
{
  return MEMORY[0x1F40E5CA8]();
}

uint64_t sub_1E0ECBC30()
{
  return MEMORY[0x1F40E5D38]();
}

uint64_t sub_1E0ECBC40()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_1E0ECBC50()
{
  return MEMORY[0x1F40E5DA0]();
}

uint64_t sub_1E0ECBC60()
{
  return MEMORY[0x1F40E5DE8]();
}

uint64_t sub_1E0ECBC70()
{
  return MEMORY[0x1F40E5DF8]();
}

uint64_t sub_1E0ECBC80()
{
  return MEMORY[0x1F40E5E00]();
}

uint64_t sub_1E0ECBC90()
{
  return MEMORY[0x1F40E5E10]();
}

uint64_t sub_1E0ECBCA0()
{
  return MEMORY[0x1F40E5E28]();
}

uint64_t sub_1E0ECBCB0()
{
  return MEMORY[0x1F40E5E48]();
}

uint64_t sub_1E0ECBCC0()
{
  return MEMORY[0x1F40E5E68]();
}

uint64_t sub_1E0ECBCD0()
{
  return MEMORY[0x1F40E5E90]();
}

uint64_t sub_1E0ECBCE0()
{
  return MEMORY[0x1F40E5EA0]();
}

uint64_t sub_1E0ECBCF0()
{
  return MEMORY[0x1F4165718]();
}

uint64_t sub_1E0ECBD00()
{
  return MEMORY[0x1F4165730]();
}

uint64_t sub_1E0ECBD10()
{
  return MEMORY[0x1F4165748]();
}

uint64_t sub_1E0ECBD20()
{
  return MEMORY[0x1F4165760]();
}

uint64_t sub_1E0ECBD30()
{
  return MEMORY[0x1F40E5EF0]();
}

uint64_t sub_1E0ECBD40()
{
  return MEMORY[0x1F4187538]();
}

uint64_t sub_1E0ECBD50()
{
  return MEMORY[0x1F4187540]();
}

uint64_t sub_1E0ECBD60()
{
  return MEMORY[0x1F4187578]();
}

uint64_t sub_1E0ECBD70()
{
  return MEMORY[0x1F4187588]();
}

uint64_t sub_1E0ECBD80()
{
  return MEMORY[0x1F40E5F40]();
}

uint64_t sub_1E0ECBD90()
{
  return MEMORY[0x1F40E5F50]();
}

uint64_t sub_1E0ECBDA0()
{
  return MEMORY[0x1F411D190]();
}

uint64_t sub_1E0ECBDB0()
{
  return MEMORY[0x1F411D198]();
}

uint64_t sub_1E0ECBDC0()
{
  return MEMORY[0x1F411D1A8]();
}

uint64_t sub_1E0ECBDD0()
{
  return MEMORY[0x1F411D1B0]();
}

uint64_t sub_1E0ECBDE0()
{
  return MEMORY[0x1F411D1B8]();
}

uint64_t sub_1E0ECBDF0()
{
  return MEMORY[0x1F411D1C0]();
}

uint64_t sub_1E0ECBE00()
{
  return MEMORY[0x1F411D1C8]();
}

uint64_t sub_1E0ECBE10()
{
  return MEMORY[0x1F411D1D0]();
}

uint64_t sub_1E0ECBE20()
{
  return MEMORY[0x1F411D1E0]();
}

uint64_t sub_1E0ECBE30()
{
  return MEMORY[0x1F411D1F8]();
}

uint64_t sub_1E0ECBE40()
{
  return MEMORY[0x1F411D200]();
}

uint64_t sub_1E0ECBE50()
{
  return MEMORY[0x1F411D208]();
}

uint64_t sub_1E0ECBE60()
{
  return MEMORY[0x1F411D210]();
}

uint64_t sub_1E0ECBE70()
{
  return MEMORY[0x1F411D218]();
}

uint64_t sub_1E0ECBE80()
{
  return MEMORY[0x1F411D220]();
}

uint64_t sub_1E0ECBE90()
{
  return MEMORY[0x1F411D228]();
}

uint64_t sub_1E0ECBEA0()
{
  return MEMORY[0x1F411D230]();
}

uint64_t sub_1E0ECBEB0()
{
  return MEMORY[0x1F411D238]();
}

uint64_t sub_1E0ECBEC0()
{
  return MEMORY[0x1F411D240]();
}

uint64_t sub_1E0ECBED0()
{
  return MEMORY[0x1F411D248]();
}

uint64_t sub_1E0ECBEE0()
{
  return MEMORY[0x1F411D250]();
}

uint64_t sub_1E0ECBEF0()
{
  return MEMORY[0x1F411D258]();
}

uint64_t sub_1E0ECBF00()
{
  return MEMORY[0x1F411D298]();
}

uint64_t sub_1E0ECBF10()
{
  return MEMORY[0x1F411D2A0]();
}

uint64_t sub_1E0ECBF20()
{
  return MEMORY[0x1F411D2A8]();
}

uint64_t sub_1E0ECBF30()
{
  return MEMORY[0x1F411D2B0]();
}

uint64_t sub_1E0ECBF40()
{
  return MEMORY[0x1F411D2D0]();
}

uint64_t sub_1E0ECBF50()
{
  return MEMORY[0x1F411D2D8]();
}

uint64_t sub_1E0ECBF60()
{
  return MEMORY[0x1F411D2E0]();
}

uint64_t sub_1E0ECBF70()
{
  return MEMORY[0x1F411D2E8]();
}

uint64_t sub_1E0ECBF80()
{
  return MEMORY[0x1F411D2F0]();
}

uint64_t sub_1E0ECBF90()
{
  return MEMORY[0x1F411D2F8]();
}

uint64_t sub_1E0ECBFA0()
{
  return MEMORY[0x1F411F0A8]();
}

uint64_t sub_1E0ECBFB0()
{
  return MEMORY[0x1F411F0B0]();
}

uint64_t sub_1E0ECBFC0()
{
  return MEMORY[0x1F4188500]();
}

uint64_t sub_1E0ECBFD0()
{
  return MEMORY[0x1F411D320]();
}

uint64_t sub_1E0ECBFE0()
{
  return MEMORY[0x1F411F158]();
}

uint64_t sub_1E0ECBFF0()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1E0ECC000()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1E0ECC010()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1E0ECC020()
{
  return MEMORY[0x1F4165A98]();
}

uint64_t sub_1E0ECC030()
{
  return MEMORY[0x1F4165AA0]();
}

uint64_t sub_1E0ECC040()
{
  return MEMORY[0x1F4165AE8]();
}

uint64_t sub_1E0ECC050()
{
  return MEMORY[0x1F4165AF8]();
}

uint64_t sub_1E0ECC060()
{
  return MEMORY[0x1F4165B00]();
}

uint64_t sub_1E0ECC070()
{
  return MEMORY[0x1F4165DF0]();
}

uint64_t sub_1E0ECC080()
{
  return MEMORY[0x1F4165E28]();
}

uint64_t sub_1E0ECC090()
{
  return MEMORY[0x1F4165F30]();
}

uint64_t sub_1E0ECC0A0()
{
  return MEMORY[0x1F4165F68]();
}

uint64_t sub_1E0ECC0B0()
{
  return MEMORY[0x1F41663F0]();
}

uint64_t sub_1E0ECC0C0()
{
  return MEMORY[0x1F40D6878]();
}

uint64_t sub_1E0ECC0D0()
{
  return MEMORY[0x1F40D6880]();
}

uint64_t sub_1E0ECC0E0()
{
  return MEMORY[0x1F40D68A0]();
}

uint64_t sub_1E0ECC0F0()
{
  return MEMORY[0x1F40D68E0]();
}

uint64_t sub_1E0ECC100()
{
  return MEMORY[0x1F40D6918]();
}

uint64_t sub_1E0ECC110()
{
  return MEMORY[0x1F40D6940]();
}

uint64_t sub_1E0ECC120()
{
  return MEMORY[0x1F40D6948]();
}

uint64_t sub_1E0ECC130()
{
  return MEMORY[0x1F40D6950]();
}

uint64_t sub_1E0ECC140()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1E0ECC150()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t sub_1E0ECC160()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t sub_1E0ECC170()
{
  return MEMORY[0x1F40D6A28]();
}

uint64_t sub_1E0ECC180()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t sub_1E0ECC190()
{
  return MEMORY[0x1F40D6A50]();
}

uint64_t sub_1E0ECC1A0()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t sub_1E0ECC1B0()
{
  return MEMORY[0x1F40D6AB0]();
}

uint64_t sub_1E0ECC1C0()
{
  return MEMORY[0x1F40D6AC0]();
}

uint64_t sub_1E0ECC1D0()
{
  return MEMORY[0x1F40D6B68]();
}

uint64_t sub_1E0ECC1E0()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1E0ECC1F0()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1E0ECC200()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1E0ECC210()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1E0ECC220()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1E0ECC230()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_1E0ECC240()
{
  return MEMORY[0x1F40D6C98]();
}

uint64_t sub_1E0ECC250()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1E0ECC260()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1E0ECC270()
{
  return MEMORY[0x1F40F7E80]();
}

uint64_t sub_1E0ECC280()
{
  return MEMORY[0x1F40F7F50]();
}

uint64_t sub_1E0ECC290()
{
  return MEMORY[0x1F40F7F60]();
}

uint64_t sub_1E0ECC2A0()
{
  return MEMORY[0x1F40F8000]();
}

uint64_t sub_1E0ECC2B0()
{
  return MEMORY[0x1F40F8118]();
}

uint64_t sub_1E0ECC2C0()
{
  return MEMORY[0x1F40F8148]();
}

uint64_t sub_1E0ECC2D0()
{
  return MEMORY[0x1F40F8150]();
}

uint64_t sub_1E0ECC2E0()
{
  return MEMORY[0x1F40F82B8]();
}

uint64_t sub_1E0ECC2F0()
{
  return MEMORY[0x1F40F82C8]();
}

uint64_t sub_1E0ECC300()
{
  return MEMORY[0x1F40F82D8]();
}

uint64_t sub_1E0ECC310()
{
  return MEMORY[0x1F40F8390]();
}

uint64_t sub_1E0ECC320()
{
  return MEMORY[0x1F40F83E0]();
}

uint64_t sub_1E0ECC330()
{
  return MEMORY[0x1F40F84B8]();
}

uint64_t sub_1E0ECC340()
{
  return MEMORY[0x1F40F8588]();
}

uint64_t sub_1E0ECC350()
{
  return MEMORY[0x1F40F85B8]();
}

uint64_t sub_1E0ECC360()
{
  return MEMORY[0x1F40F8610]();
}

uint64_t sub_1E0ECC370()
{
  return MEMORY[0x1F40F8618]();
}

uint64_t sub_1E0ECC380()
{
  return MEMORY[0x1F40F8630]();
}

uint64_t sub_1E0ECC3A0()
{
  return MEMORY[0x1F40F8788]();
}

uint64_t sub_1E0ECC3B0()
{
  return MEMORY[0x1F40F87A8]();
}

uint64_t sub_1E0ECC3C0()
{
  return MEMORY[0x1F40F87F0]();
}

uint64_t sub_1E0ECC3D0()
{
  return MEMORY[0x1F40F8A08]();
}

uint64_t sub_1E0ECC3E0()
{
  return MEMORY[0x1F40F8A28]();
}

uint64_t sub_1E0ECC3F0()
{
  return MEMORY[0x1F40F8C00]();
}

uint64_t sub_1E0ECC400()
{
  return MEMORY[0x1F40F8CB0]();
}

uint64_t sub_1E0ECC410()
{
  return MEMORY[0x1F40F8EA0]();
}

uint64_t sub_1E0ECC420()
{
  return MEMORY[0x1F40F8F50]();
}

uint64_t sub_1E0ECC430()
{
  return MEMORY[0x1F40F8F68]();
}

uint64_t sub_1E0ECC440()
{
  return MEMORY[0x1F40F9100]();
}

uint64_t sub_1E0ECC450()
{
  return MEMORY[0x1F40F91E0]();
}

uint64_t sub_1E0ECC460()
{
  return MEMORY[0x1F40F91F8]();
}

uint64_t sub_1E0ECC470()
{
  return MEMORY[0x1F40F9268]();
}

uint64_t sub_1E0ECC480()
{
  return MEMORY[0x1F40F9278]();
}

uint64_t sub_1E0ECC490()
{
  return MEMORY[0x1F40F9280]();
}

uint64_t sub_1E0ECC4A0()
{
  return MEMORY[0x1F40F9298]();
}

uint64_t sub_1E0ECC4B0()
{
  return MEMORY[0x1F40F92D0]();
}

uint64_t sub_1E0ECC4C0()
{
  return MEMORY[0x1F40F92E8]();
}

uint64_t sub_1E0ECC4D0()
{
  return MEMORY[0x1F40F93C0]();
}

uint64_t sub_1E0ECC4E0()
{
  return MEMORY[0x1F40F93D0]();
}

uint64_t sub_1E0ECC4F0()
{
  return MEMORY[0x1F40F9470]();
}

uint64_t sub_1E0ECC500()
{
  return MEMORY[0x1F40F9480]();
}

uint64_t sub_1E0ECC510()
{
  return MEMORY[0x1F40F9550]();
}

uint64_t sub_1E0ECC520()
{
  return MEMORY[0x1F40F9568]();
}

uint64_t sub_1E0ECC530()
{
  return MEMORY[0x1F40F95C0]();
}

uint64_t sub_1E0ECC540()
{
  return MEMORY[0x1F40F95C8]();
}

uint64_t sub_1E0ECC550()
{
  return MEMORY[0x1F4103EE8]();
}

uint64_t sub_1E0ECC560()
{
  return MEMORY[0x1F4103F30]();
}

uint64_t sub_1E0ECC570()
{
  return MEMORY[0x1F4103FB0]();
}

uint64_t sub_1E0ECC580()
{
  return MEMORY[0x1F40F9660]();
}

uint64_t sub_1E0ECC590()
{
  return MEMORY[0x1F40F9670]();
}

uint64_t sub_1E0ECC5A0()
{
  return MEMORY[0x1F40F96C8]();
}

uint64_t sub_1E0ECC5B0()
{
  return MEMORY[0x1F40F96D8]();
}

uint64_t sub_1E0ECC5C0()
{
  return MEMORY[0x1F40F96E0]();
}

uint64_t sub_1E0ECC5D0()
{
  return MEMORY[0x1F40F96E8]();
}

uint64_t sub_1E0ECC5E0()
{
  return MEMORY[0x1F40F96F8]();
}

uint64_t sub_1E0ECC5F0()
{
  return MEMORY[0x1F40F98A0]();
}

uint64_t sub_1E0ECC600()
{
  return MEMORY[0x1F40F98C0]();
}

uint64_t sub_1E0ECC610()
{
  return MEMORY[0x1F40F9B68]();
}

uint64_t sub_1E0ECC620()
{
  return MEMORY[0x1F40F9CD8]();
}

uint64_t sub_1E0ECC630()
{
  return MEMORY[0x1F40F9CE8]();
}

uint64_t sub_1E0ECC640()
{
  return MEMORY[0x1F40F9E08]();
}

uint64_t sub_1E0ECC650()
{
  return MEMORY[0x1F40F9E10]();
}

uint64_t sub_1E0ECC660()
{
  return MEMORY[0x1F40F9E30]();
}

uint64_t sub_1E0ECC670()
{
  return MEMORY[0x1F40F9E40]();
}

uint64_t sub_1E0ECC680()
{
  return MEMORY[0x1F40F9E50]();
}

uint64_t sub_1E0ECC690()
{
  return MEMORY[0x1F40F9E60]();
}

uint64_t sub_1E0ECC6A0()
{
  return MEMORY[0x1F40F9E70]();
}

uint64_t sub_1E0ECC6C0()
{
  return MEMORY[0x1F40F9E90]();
}

uint64_t sub_1E0ECC6D0()
{
  return MEMORY[0x1F40F9E98]();
}

uint64_t sub_1E0ECC6E0()
{
  return MEMORY[0x1F40F9EB0]();
}

uint64_t sub_1E0ECC6F0()
{
  return MEMORY[0x1F40F9EC0]();
}

uint64_t sub_1E0ECC700()
{
  return MEMORY[0x1F40F9ED0]();
}

uint64_t sub_1E0ECC710()
{
  return MEMORY[0x1F40F9EE0]();
}

uint64_t sub_1E0ECC730()
{
  return MEMORY[0x1F40F9F88]();
}

uint64_t sub_1E0ECC740()
{
  return MEMORY[0x1F40F9FA8]();
}

uint64_t sub_1E0ECC750()
{
  return MEMORY[0x1F40FA0B0]();
}

uint64_t sub_1E0ECC760()
{
  return MEMORY[0x1F40FA0C0]();
}

uint64_t sub_1E0ECC770()
{
  return MEMORY[0x1F40FA140]();
}

uint64_t sub_1E0ECC780()
{
  return MEMORY[0x1F40FA1A8]();
}

uint64_t sub_1E0ECC790()
{
  return MEMORY[0x1F40FA288]();
}

uint64_t sub_1E0ECC7A0()
{
  return MEMORY[0x1F40FA298]();
}

uint64_t sub_1E0ECC7B0()
{
  return MEMORY[0x1F40FA2E0]();
}

uint64_t sub_1E0ECC7C0()
{
  return MEMORY[0x1F40FA390]();
}

uint64_t sub_1E0ECC7D0()
{
  return MEMORY[0x1F40FA3A0]();
}

uint64_t sub_1E0ECC7E0()
{
  return MEMORY[0x1F40FA3B8]();
}

uint64_t sub_1E0ECC7F0()
{
  return MEMORY[0x1F40FA3F8]();
}

uint64_t sub_1E0ECC800()
{
  return MEMORY[0x1F40FA400]();
}

uint64_t sub_1E0ECC810()
{
  return MEMORY[0x1F40FA688]();
}

uint64_t sub_1E0ECC820()
{
  return MEMORY[0x1F40FA860]();
}

uint64_t sub_1E0ECC830()
{
  return MEMORY[0x1F40FA868]();
}

uint64_t sub_1E0ECC840()
{
  return MEMORY[0x1F40FA878]();
}

uint64_t sub_1E0ECC850()
{
  return MEMORY[0x1F40FA880]();
}

uint64_t sub_1E0ECC860()
{
  return MEMORY[0x1F40FA8C0]();
}

uint64_t sub_1E0ECC870()
{
  return MEMORY[0x1F40FA8D8]();
}

uint64_t sub_1E0ECC880()
{
  return MEMORY[0x1F40FABE0]();
}

uint64_t sub_1E0ECC890()
{
  return MEMORY[0x1F40FABE8]();
}

uint64_t sub_1E0ECC8A0()
{
  return MEMORY[0x1F40FAD68]();
}

uint64_t sub_1E0ECC8B0()
{
  return MEMORY[0x1F40FAD78]();
}

uint64_t sub_1E0ECC8C0()
{
  return MEMORY[0x1F40FAD88]();
}

uint64_t sub_1E0ECC8D0()
{
  return MEMORY[0x1F40FAD98]();
}

uint64_t sub_1E0ECC8E0()
{
  return MEMORY[0x1F40FADB8]();
}

uint64_t sub_1E0ECC8F0()
{
  return MEMORY[0x1F40FADC0]();
}

uint64_t sub_1E0ECC900()
{
  return MEMORY[0x1F40FADF8]();
}

uint64_t sub_1E0ECC910()
{
  return MEMORY[0x1F40FAE00]();
}

uint64_t sub_1E0ECC920()
{
  return MEMORY[0x1F40FAE18]();
}

uint64_t sub_1E0ECC930()
{
  return MEMORY[0x1F40FAE28]();
}

uint64_t sub_1E0ECC940()
{
  return MEMORY[0x1F40FAE68]();
}

uint64_t sub_1E0ECC950()
{
  return MEMORY[0x1F40FAEB8]();
}

uint64_t sub_1E0ECC960()
{
  return MEMORY[0x1F40FAEC0]();
}

uint64_t sub_1E0ECC970()
{
  return MEMORY[0x1F40FAF00]();
}

uint64_t sub_1E0ECC980()
{
  return MEMORY[0x1F40FAF48]();
}

uint64_t sub_1E0ECC990()
{
  return MEMORY[0x1F40FAF60]();
}

uint64_t sub_1E0ECC9A0()
{
  return MEMORY[0x1F40FAFE0]();
}

uint64_t sub_1E0ECC9B0()
{
  return MEMORY[0x1F40FB000]();
}

uint64_t sub_1E0ECC9C0()
{
  return MEMORY[0x1F40FB038]();
}

uint64_t sub_1E0ECC9D0()
{
  return MEMORY[0x1F40FB040]();
}

uint64_t sub_1E0ECC9E0()
{
  return MEMORY[0x1F40FB078]();
}

uint64_t sub_1E0ECC9F0()
{
  return MEMORY[0x1F40FB088]();
}

uint64_t sub_1E0ECCA10()
{
  return MEMORY[0x1F40FB0E8]();
}

uint64_t sub_1E0ECCA20()
{
  return MEMORY[0x1F40FB108]();
}

uint64_t sub_1E0ECCA30()
{
  return MEMORY[0x1F40FB120]();
}

uint64_t sub_1E0ECCA40()
{
  return MEMORY[0x1F40FB180]();
}

uint64_t sub_1E0ECCA50()
{
  return MEMORY[0x1F40FB1E0]();
}

uint64_t sub_1E0ECCA60()
{
  return MEMORY[0x1F40FB1F0]();
}

uint64_t sub_1E0ECCA70()
{
  return MEMORY[0x1F40FB308]();
}

uint64_t sub_1E0ECCA80()
{
  return MEMORY[0x1F40FB310]();
}

uint64_t sub_1E0ECCA90()
{
  return MEMORY[0x1F40FB3B0]();
}

uint64_t sub_1E0ECCAA0()
{
  return MEMORY[0x1F40FB3C0]();
}

uint64_t sub_1E0ECCAB0()
{
  return MEMORY[0x1F40FB460]();
}

uint64_t sub_1E0ECCAC0()
{
  return MEMORY[0x1F40FB470]();
}

uint64_t sub_1E0ECCAD0()
{
  return MEMORY[0x1F40FB478]();
}

uint64_t sub_1E0ECCAE0()
{
  return MEMORY[0x1F40FB568]();
}

uint64_t sub_1E0ECCAF0()
{
  return MEMORY[0x1F40FB580]();
}

uint64_t sub_1E0ECCB00()
{
  return MEMORY[0x1F41040E8]();
}

uint64_t sub_1E0ECCB10()
{
  return MEMORY[0x1F40FB5D0]();
}

uint64_t sub_1E0ECCB20()
{
  return MEMORY[0x1F40FB5D8]();
}

uint64_t sub_1E0ECCB30()
{
  return MEMORY[0x1F40FB6A0]();
}

uint64_t sub_1E0ECCB40()
{
  return MEMORY[0x1F40FB8A0]();
}

uint64_t sub_1E0ECCB50()
{
  return MEMORY[0x1F40FB920]();
}

uint64_t sub_1E0ECCB60()
{
  return MEMORY[0x1F40FBA60]();
}

uint64_t sub_1E0ECCB70()
{
  return MEMORY[0x1F40FBAC8]();
}

uint64_t sub_1E0ECCB80()
{
  return MEMORY[0x1F40FBD60]();
}

uint64_t sub_1E0ECCB90()
{
  return MEMORY[0x1F40FBD88]();
}

uint64_t sub_1E0ECCBA0()
{
  return MEMORY[0x1F40FBE68]();
}

uint64_t sub_1E0ECCBB0()
{
  return MEMORY[0x1F40FBF28]();
}

uint64_t sub_1E0ECCBC0()
{
  return MEMORY[0x1F40FBFA0]();
}

uint64_t sub_1E0ECCBD0()
{
  return MEMORY[0x1F40FC010]();
}

uint64_t sub_1E0ECCBE0()
{
  return MEMORY[0x1F40FC108]();
}

uint64_t sub_1E0ECCBF0()
{
  return MEMORY[0x1F40FC240]();
}

uint64_t sub_1E0ECCC00()
{
  return MEMORY[0x1F40FC2E0]();
}

uint64_t sub_1E0ECCC10()
{
  return MEMORY[0x1F40FC2F0]();
}

uint64_t sub_1E0ECCC20()
{
  return MEMORY[0x1F40FC310]();
}

uint64_t sub_1E0ECCC30()
{
  return MEMORY[0x1F40FC350]();
}

uint64_t sub_1E0ECCC40()
{
  return MEMORY[0x1F40FC380]();
}

uint64_t sub_1E0ECCC50()
{
  return MEMORY[0x1F40FC3E8]();
}

uint64_t sub_1E0ECCC60()
{
  return MEMORY[0x1F40FC450]();
}

uint64_t sub_1E0ECCC70()
{
  return MEMORY[0x1F40FC498]();
}

uint64_t sub_1E0ECCC80()
{
  return MEMORY[0x1F40FC4A8]();
}

uint64_t sub_1E0ECCC90()
{
  return MEMORY[0x1F40FC530]();
}

uint64_t sub_1E0ECCCA0()
{
  return MEMORY[0x1F40FC550]();
}

uint64_t sub_1E0ECCCB0()
{
  return MEMORY[0x1F40FC568]();
}

uint64_t sub_1E0ECCCC0()
{
  return MEMORY[0x1F40FC5D0]();
}

uint64_t sub_1E0ECCCD0()
{
  return MEMORY[0x1F40FC5E8]();
}

uint64_t sub_1E0ECCCE0()
{
  return MEMORY[0x1F40FC600]();
}

uint64_t sub_1E0ECCCF0()
{
  return MEMORY[0x1F40FC6F0]();
}

uint64_t sub_1E0ECCD00()
{
  return MEMORY[0x1F40FC700]();
}

uint64_t sub_1E0ECCD10()
{
  return MEMORY[0x1F40FC708]();
}

uint64_t sub_1E0ECCD20()
{
  return MEMORY[0x1F40FC718]();
}

uint64_t sub_1E0ECCD30()
{
  return MEMORY[0x1F40FC728]();
}

uint64_t sub_1E0ECCD40()
{
  return MEMORY[0x1F40FC760]();
}

uint64_t sub_1E0ECCD50()
{
  return MEMORY[0x1F40FC790]();
}

uint64_t sub_1E0ECCD60()
{
  return MEMORY[0x1F40FC7A0]();
}

uint64_t sub_1E0ECCD70()
{
  return MEMORY[0x1F40FC7D0]();
}

uint64_t sub_1E0ECCD80()
{
  return MEMORY[0x1F40FC8B8]();
}

uint64_t sub_1E0ECCD90()
{
  return MEMORY[0x1F40FC8C8]();
}

uint64_t sub_1E0ECCDA0()
{
  return MEMORY[0x1F40FC8E8]();
}

uint64_t sub_1E0ECCDB0()
{
  return MEMORY[0x1F40FC920]();
}

uint64_t sub_1E0ECCDC0()
{
  return MEMORY[0x1F40FC9B8]();
}

uint64_t sub_1E0ECCDD0()
{
  return MEMORY[0x1F40FC9E0]();
}

uint64_t sub_1E0ECCDE0()
{
  return MEMORY[0x1F40FCA20]();
}

uint64_t sub_1E0ECCDF0()
{
  return MEMORY[0x1F40FCA38]();
}

uint64_t sub_1E0ECCE00()
{
  return MEMORY[0x1F40FCA48]();
}

uint64_t sub_1E0ECCE10()
{
  return MEMORY[0x1F40FCA58]();
}

uint64_t sub_1E0ECCE20()
{
  return MEMORY[0x1F40FCC30]();
}

uint64_t sub_1E0ECCE30()
{
  return MEMORY[0x1F40FCC40]();
}

uint64_t sub_1E0ECCE40()
{
  return MEMORY[0x1F40FCE58]();
}

uint64_t sub_1E0ECCE50()
{
  return MEMORY[0x1F40FCE60]();
}

uint64_t sub_1E0ECCE60()
{
  return MEMORY[0x1F40FCED8]();
}

uint64_t sub_1E0ECCE70()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1E0ECCE80()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1E0ECCE90()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1E0ECCEA0()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1E0ECCEB0()
{
  return MEMORY[0x1F40E78F0]();
}

uint64_t sub_1E0ECCEC0()
{
  return MEMORY[0x1F40E78F8]();
}

uint64_t sub_1E0ECCED0()
{
  return MEMORY[0x1F40E7900]();
}

uint64_t sub_1E0ECCEE0()
{
  return MEMORY[0x1F40E7908]();
}

uint64_t sub_1E0ECCEF0()
{
  return MEMORY[0x1F40E7910]();
}

uint64_t sub_1E0ECCF00()
{
  return MEMORY[0x1F40E7918]();
}

uint64_t sub_1E0ECCF10()
{
  return MEMORY[0x1F40E7920]();
}

uint64_t sub_1E0ECCF20()
{
  return MEMORY[0x1F40E7928]();
}

uint64_t sub_1E0ECCF30()
{
  return MEMORY[0x1F40E7930]();
}

uint64_t sub_1E0ECCF40()
{
  return MEMORY[0x1F4104140]();
}

uint64_t sub_1E0ECCF50()
{
  return MEMORY[0x1F4104148]();
}

uint64_t sub_1E0ECCF60()
{
  return MEMORY[0x1F4104270]();
}

uint64_t sub_1E0ECCF70()
{
  return MEMORY[0x1F4104280]();
}

uint64_t sub_1E0ECCF80()
{
  return MEMORY[0x1F41042B0]();
}

uint64_t sub_1E0ECCF90()
{
  return MEMORY[0x1F41043D8]();
}

uint64_t sub_1E0ECCFA0()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_1E0ECCFB0()
{
  return MEMORY[0x1F4183288]();
}

uint64_t sub_1E0ECCFC0()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1E0ECCFD0()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1E0ECCFE0()
{
  return MEMORY[0x1F4183320]();
}

uint64_t sub_1E0ECCFF0()
{
  return MEMORY[0x1F4183398]();
}

uint64_t sub_1E0ECD000()
{
  return MEMORY[0x1F41833D0]();
}

uint64_t sub_1E0ECD010()
{
  return MEMORY[0x1F41833E8]();
}

uint64_t sub_1E0ECD020()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1E0ECD030()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1E0ECD040()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1E0ECD050()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1E0ECD060()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1E0ECD070()
{
  return MEMORY[0x1F41835D0]();
}

uint64_t sub_1E0ECD080()
{
  return MEMORY[0x1F4183690]();
}

uint64_t sub_1E0ECD090()
{
  return MEMORY[0x1F4183710]();
}

uint64_t sub_1E0ECD0A0()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1E0ECD0B0()
{
  return MEMORY[0x1F411F180]();
}

uint64_t sub_1E0ECD0C0()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1E0ECD0D0()
{
  return MEMORY[0x1F4183748]();
}

uint64_t sub_1E0ECD0E0()
{
  return MEMORY[0x1F4183750]();
}

uint64_t sub_1E0ECD0F0()
{
  return MEMORY[0x1F4183808]();
}

uint64_t sub_1E0ECD100()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1E0ECD110()
{
  return MEMORY[0x1F40E60A8]();
}

uint64_t sub_1E0ECD120()
{
  return MEMORY[0x1F40E60D8]();
}

uint64_t sub_1E0ECD130()
{
  return MEMORY[0x1F40E60F0]();
}

uint64_t sub_1E0ECD140()
{
  return MEMORY[0x1F40E6110]();
}

uint64_t sub_1E0ECD150()
{
  return MEMORY[0x1F40E6128]();
}

uint64_t sub_1E0ECD160()
{
  return MEMORY[0x1F40E6130]();
}

uint64_t sub_1E0ECD170()
{
  return MEMORY[0x1F40E6148]();
}

uint64_t sub_1E0ECD180()
{
  return MEMORY[0x1F40E6158]();
}

uint64_t sub_1E0ECD190()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1E0ECD1A0()
{
  return MEMORY[0x1F40E61A0]();
}

uint64_t sub_1E0ECD1B0()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1E0ECD1C0()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1E0ECD1D0()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1E0ECD1E0()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1E0ECD1F0()
{
  return MEMORY[0x1F40E62C8]();
}

uint64_t sub_1E0ECD200()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1E0ECD210()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1E0ECD220()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1E0ECD230()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1E0ECD240()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_1E0ECD250()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1E0ECD260()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_1E0ECD270()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1E0ECD280()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1E0ECD2A0()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1E0ECD2B0()
{
  return MEMORY[0x1F4183C48]();
}

uint64_t sub_1E0ECD2C0()
{
  return MEMORY[0x1F4183CC8]();
}

uint64_t sub_1E0ECD2D0()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1E0ECD2E0()
{
  return MEMORY[0x1F4183D78]();
}

uint64_t sub_1E0ECD2F0()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1E0ECD300()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1E0ECD310()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1E0ECD320()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1E0ECD330()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1E0ECD340()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1E0ECD350()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1E0ECD360()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1E0ECD370()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1E0ECD380()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1E0ECD390()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1E0ECD3A0()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_1E0ECD3B0()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_1E0ECD3C0()
{
  return MEMORY[0x1F4187CB0]();
}

uint64_t sub_1E0ECD3D0()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1E0ECD3E0()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1E0ECD3F0()
{
  return MEMORY[0x1F40E63C8]();
}

uint64_t sub_1E0ECD400()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1E0ECD410()
{
  return MEMORY[0x1F41841A8]();
}

uint64_t sub_1E0ECD420()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_1E0ECD430()
{
  return MEMORY[0x1F40E6478]();
}

uint64_t sub_1E0ECD440()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1E0ECD450()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1E0ECD460()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1E0ECD470()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1E0ECD480()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1E0ECD490()
{
  return MEMORY[0x1F411F188]();
}

uint64_t sub_1E0ECD4A0()
{
  return MEMORY[0x1F40E7938]();
}

uint64_t sub_1E0ECD4B0()
{
  return MEMORY[0x1F40E7940]();
}

uint64_t sub_1E0ECD4C0()
{
  return MEMORY[0x1F41845B0]();
}

uint64_t sub_1E0ECD4D0()
{
  return MEMORY[0x1F40D9688]();
}

uint64_t sub_1E0ECD4E0()
{
  return MEMORY[0x1F40E6520]();
}

uint64_t sub_1E0ECD4F0()
{
  return MEMORY[0x1F40E6538]();
}

uint64_t sub_1E0ECD500()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1E0ECD510()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1E0ECD520()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1E0ECD530()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1E0ECD540()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1E0ECD550()
{
  return MEMORY[0x1F41664B8]();
}

uint64_t sub_1E0ECD560()
{
  return MEMORY[0x1F41664E8]();
}

uint64_t sub_1E0ECD570()
{
  return MEMORY[0x1F4166508]();
}

uint64_t sub_1E0ECD580()
{
  return MEMORY[0x1F40D96E8]();
}

uint64_t sub_1E0ECD590()
{
  return MEMORY[0x1F40D96F0]();
}

uint64_t sub_1E0ECD5A0()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1E0ECD5B0()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_1E0ECD5C0()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1E0ECD5D0()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1E0ECD5E0()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1E0ECD5F0()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1E0ECD600()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1E0ECD610()
{
  return MEMORY[0x1F41665F0]();
}

uint64_t sub_1E0ECD620()
{
  return MEMORY[0x1F40E6740]();
}

uint64_t sub_1E0ECD630()
{
  return MEMORY[0x1F40E6798]();
}

uint64_t sub_1E0ECD640()
{
  return MEMORY[0x1F40E67A0]();
}

uint64_t sub_1E0ECD650()
{
  return MEMORY[0x1F40E79E8]();
}

uint64_t sub_1E0ECD660()
{
  return MEMORY[0x1F40E79F0]();
}

uint64_t sub_1E0ECD670()
{
  return MEMORY[0x1F41667E8]();
}

uint64_t sub_1E0ECD680()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1E0ECD690()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1E0ECD6A0()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1E0ECD6B0()
{
  return MEMORY[0x1F4166838]();
}

uint64_t sub_1E0ECD6C0()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1E0ECD6D0()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1E0ECD6E0()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1E0ECD6F0()
{
  return MEMORY[0x1F4184830]();
}

uint64_t sub_1E0ECD700()
{
  return MEMORY[0x1F4184838]();
}

uint64_t sub_1E0ECD710()
{
  return MEMORY[0x1F40E6BA8]();
}

uint64_t sub_1E0ECD720()
{
  return MEMORY[0x1F40E6BF0]();
}

uint64_t sub_1E0ECD730()
{
  return MEMORY[0x1F40E6C50]();
}

uint64_t sub_1E0ECD740()
{
  return MEMORY[0x1F40E6CE8]();
}

uint64_t sub_1E0ECD750()
{
  return MEMORY[0x1F4184958]();
}

uint64_t sub_1E0ECD760()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1E0ECD770()
{
  return MEMORY[0x1F4184A80]();
}

uint64_t sub_1E0ECD780()
{
  return MEMORY[0x1F4184A90]();
}

uint64_t sub_1E0ECD7A0()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1E0ECD7B0()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1E0ECD7C0()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1E0ECD7D0()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1E0ECD7E0()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1E0ECD7F0()
{
  return MEMORY[0x1F4184CB0]();
}

uint64_t sub_1E0ECD800()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1E0ECD810()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1E0ECD820()
{
  return MEMORY[0x1F4184D10]();
}

uint64_t sub_1E0ECD830()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1E0ECD840()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1E0ECD850()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t sub_1E0ECD860()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1E0ECD870()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1E0ECD880()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1E0ECD890()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1E0ECD8A0()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1E0ECD8B0()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1E0ECD8C0()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1E0ECD8D0()
{
  return MEMORY[0x1F4185068]();
}

uint64_t sub_1E0ECD8E0()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1E0ECD8F0()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1E0ECD900()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1E0ECD910()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1E0ECD920()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1E0ECD930()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1E0ECD940()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1E0ECD950()
{
  return MEMORY[0x1F4185388]();
}

uint64_t sub_1E0ECD960()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1E0ECD980()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1E0ECD990()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1E0ECD9A0()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1E0ECD9B0()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1E0ECD9C0()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_1E0ECD9D0()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1E0ECD9E0()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1E0ECD9F0()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1E0ECDA00()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_1E0ECDA10()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_1E0ECDA20()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1E0ECDA30()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1E0ECDA40()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1E0ECDA50()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1E0ECDA60()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1E0ECDA70()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1E0ECDA80()
{
  return MEMORY[0x1F4186008]();
}

uint64_t sub_1E0ECDA90()
{
  return MEMORY[0x1F40E6F28]();
}

uint64_t sub_1E0ECDAA0()
{
  return MEMORY[0x1F40E6F30]();
}

uint64_t sub_1E0ECDAB0()
{
  return MEMORY[0x1F40E6F38]();
}

uint64_t sub_1E0ECDAC0()
{
  return MEMORY[0x1F40E6F40]();
}

uint64_t sub_1E0ECDAD0()
{
  return MEMORY[0x1F40E6F48]();
}

uint64_t sub_1E0ECDAE0()
{
  return MEMORY[0x1F40E6F50]();
}

uint64_t sub_1E0ECDAF0()
{
  return MEMORY[0x1F40E6F60]();
}

uint64_t sub_1E0ECDB00()
{
  return MEMORY[0x1F40E6F68]();
}

uint64_t sub_1E0ECDB10()
{
  return MEMORY[0x1F40E6F78]();
}

uint64_t sub_1E0ECDB20()
{
  return MEMORY[0x1F40E6F88]();
}

uint64_t sub_1E0ECDB30()
{
  return MEMORY[0x1F40E6F98]();
}

uint64_t sub_1E0ECDB40()
{
  return MEMORY[0x1F40E6FA8]();
}

uint64_t sub_1E0ECDB50()
{
  return MEMORY[0x1F40E6FB0]();
}

uint64_t sub_1E0ECDB60()
{
  return MEMORY[0x1F40E6FB8]();
}

uint64_t sub_1E0ECDB70()
{
  return MEMORY[0x1F40E6FC0]();
}

uint64_t sub_1E0ECDB80()
{
  return MEMORY[0x1F40E6FC8]();
}

uint64_t sub_1E0ECDB90()
{
  return MEMORY[0x1F40E6FD0]();
}

uint64_t sub_1E0ECDBA0()
{
  return MEMORY[0x1F4186188]();
}

uint64_t sub_1E0ECDBB0()
{
  return MEMORY[0x1F41861A8]();
}

uint64_t sub_1E0ECDBC0()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1F41138A0]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  MEMORY[0x1F40F4A90]();
  return result;
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D30](retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D58](retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1F40F4D68](retstr, t, tx, ty, tz);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9730](data, *(void *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9770](data, *(void *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7190](allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1F40D71B8](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1F40D71F0](theArray, idx);
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D20]();
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1F40D8048](cf);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1F40D8388](theString1, theString2, compareOptions);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x1F40D9790](retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97A8](retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x1F40D97B0](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97C8](retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D0](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D8](retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97E8](retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97F0](retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97F8](retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1F40D9808](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1F40D9A00](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

CGColorSpaceRef CGColorSpaceCreatePattern(CGColorSpaceRef baseSpace)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B38](baseSpace);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B60](name);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextAddArc(CGContextRef c, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
{
}

void CGContextAddLineToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClipToRect(CGContextRef c, CGRect rect)
{
}

void CGContextClosePath(CGContextRef c)
{
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillPath(CGContextRef c)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextFlush(CGContextRef c)
{
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextReplacePathWithStrokedPath(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetAlpha(CGContextRef c, CGFloat alpha)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineDash(CGContextRef c, CGFloat phase, const CGFloat *lengths, size_t count)
{
}

void CGContextSetLineJoin(CGContextRef c, CGLineJoin join)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetRGBStrokeColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetStrokeColorSpace(CGContextRef c, CGColorSpaceRef space)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetStrokePattern(CGContextRef c, CGPatternRef pattern, const CGFloat *components)
{
}

void CGContextSetTextDrawingMode(CGContextRef c, CGTextDrawingMode mode)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x1F40DA310](info, data, size, releaseData);
}

void CGDataProviderRelease(CGDataProviderRef provider)
{
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1F40DA778](space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

CGImageRef CGImageCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef space, CGBitmapInfo bitmapInfo, CGDataProviderRef provider, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1F40DA868](width, height, bitsPerComponent, bitsPerPixel, bytesPerRow, space, *(void *)&bitmapInfo, provider);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1F40DA890](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGImageRelease(CGImageRef image)
{
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathAddLines(CGMutablePathRef path, const CGAffineTransform *m, const CGPoint *points, size_t count)
{
}

void CGPathApply(CGPathRef path, void *info, CGPathApplierFunction function)
{
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
}

CGPathRef CGPathCreateCopyByDashingPath(CGPathRef path, const CGAffineTransform *transform, CGFloat phase, const CGFloat *lengths, size_t count)
{
  return (CGPathRef)MEMORY[0x1F40DB018](path, transform, lengths, count, phase);
}

CGPathRef CGPathCreateCopyByStrokingPath(CGPathRef path, const CGAffineTransform *transform, CGFloat lineWidth, CGLineCap lineCap, CGLineJoin lineJoin, CGFloat miterLimit)
{
  return (CGPathRef)MEMORY[0x1F40DB038](path, transform, *(void *)&lineCap, *(void *)&lineJoin, lineWidth, miterLimit);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1F40DB068]();
}

CGRect CGPathGetBoundingBox(CGPathRef path)
{
  MEMORY[0x1F40DB0D0](path);
  result.size.CGFloat height = v4;
  result.size.CGFloat width = v3;
  result.origin.double y = v2;
  result.origin.CGFloat x = v1;
  return result;
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathRelease(CGPathRef path)
{
}

CGPatternRef CGPatternCreate(void *info, CGRect bounds, CGAffineTransform *matrix, CGFloat xStep, CGFloat yStep, CGPatternTiling tiling, BOOL isColored, const CGPatternCallbacks *callbacks)
{
  return (CGPatternRef)MEMORY[0x1F40DB180](info, matrix, *(void *)&tiling, isColored, callbacks, (__n128)bounds.origin, *(__n128 *)&bounds.origin.y, (__n128)bounds.size, *(__n128 *)&bounds.size.height, xStep, yStep);
}

CGPoint CGPointApplyAffineTransform(CGPoint point, CGAffineTransform *t)
{
  MEMORY[0x1F40DB1F8](t, (__n128)point, *(__n128 *)&point.y);
  result.double y = v3;
  result.CGFloat x = v2;
  return result;
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  MEMORY[0x1F40DB220](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v5;
  result.size.CGFloat width = v4;
  result.origin.double y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1F40DB228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB230]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x1F40DB280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x1F40DB288]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x1F40DB2A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2B8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.CGFloat width = v5;
  result.origin.double y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  MEMORY[0x1F40DB2C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v4;
  result.size.CGFloat width = v3;
  result.origin.double y = v2;
  result.origin.CGFloat x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  MEMORY[0x1F40DB2C8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.CGFloat height = v5;
  result.size.CGFloat width = v4;
  result.origin.double y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB2D0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1F40DB2D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1F40DB2E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.CGFloat width = v5;
  result.origin.double y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

CGRect CGRectStandardize(CGRect rect)
{
  MEMORY[0x1F40DB300]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v4;
  result.size.CGFloat width = v3;
  result.origin.double y = v2;
  result.origin.CGFloat x = v1;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  MEMORY[0x1F40DB310]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.CGFloat height = v5;
  result.size.CGFloat width = v4;
  result.origin.double y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

uint64_t CPDateFormatStringForFormatType()
{
  return MEMORY[0x1F41092E0]();
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return MEMORY[0x1F40DF300]();
}

uint64_t CTFontDescriptorCreateWithTextStyleAndAttributes()
{
  return MEMORY[0x1F40DF428]();
}

uint64_t CUIKCurrentLocaleRequiresUnabbrevatedMonthNames()
{
  return MEMORY[0x1F410F730]();
}

uint64_t HKAnalyticsDecadeBucketedAgeForAge()
{
  return MEMORY[0x1F40E7A30]();
}

uint64_t HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge()
{
  return MEMORY[0x1F40E7A40]();
}

uint64_t HKAnalyticsErrorCategoryForFeatureAvailabilityOnboardingEligibility()
{
  return MEMORY[0x1F40E7A50]();
}

uint64_t HKAnalyticsErrorCategoryForFeatureAvailabilityOnboardingIneligibilityReasons()
{
  return MEMORY[0x1F40E7A58]();
}

uint64_t HKAnalyticsErrorDetailsForFeatureAvailabilityOnboardingEligibility()
{
  return MEMORY[0x1F40E7A60]();
}

uint64_t HKAnalyticsErrorDetailsForFeatureAvailabilityOnboardingIneligibilityReasons()
{
  return MEMORY[0x1F40E7A68]();
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x1F40E7A70]();
}

uint64_t HKAppleSleepingBreathingDisturbancesClassificationForQuantity()
{
  return MEMORY[0x1F40E7A80]();
}

uint64_t HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification()
{
  return MEMORY[0x1F40E7A88]();
}

BOOL HKAppleWalkingSteadinessClassificationForQuantity(HKQuantity *value, HKAppleWalkingSteadinessClassification *classificationOut, NSError **errorOut)
{
  return MEMORY[0x1F40E7A90](value, classificationOut, errorOut);
}

uint64_t HKAuthorizationStatusAllowsReading()
{
  return MEMORY[0x1F40E7AB0]();
}

uint64_t HKAuthorizationStatusAllowsSharing()
{
  return MEMORY[0x1F40E7AB8]();
}

uint64_t HKCalendarDateTransformNone()
{
  return MEMORY[0x1F40E7AF8]();
}

uint64_t HKCalendarDateTransformPreceding6PM()
{
  return MEMORY[0x1F40E7B00]();
}

NSSet *HKCategoryValueSleepAnalysisAsleepValues(void)
{
  return (NSSet *)MEMORY[0x1F40E7B08]();
}

uint64_t HKCompareDoubles()
{
  return MEMORY[0x1F40E7B38]();
}

uint64_t HKConditionallyRedactedHeartRhythmString()
{
  return MEMORY[0x1F40E7B50]();
}

uint64_t HKCreateSerialDispatchQueue()
{
  return MEMORY[0x1F40E7BA0]();
}

uint64_t HKCreateSerialDispatchQueueWithQOSClass()
{
  return MEMORY[0x1F40E7BA8]();
}

uint64_t HKCurrentLocaleCountryCodeIfUnknown()
{
  return MEMORY[0x1F40E7BB8]();
}

uint64_t HKDateMax()
{
  return MEMORY[0x1F40E7BF0]();
}

uint64_t HKDateMid()
{
  return MEMORY[0x1F40E7BF8]();
}

uint64_t HKDateMin()
{
  return MEMORY[0x1F40E7C00]();
}

uint64_t HKDispatchAsyncOnGlobalConcurrentQueue()
{
  return MEMORY[0x1F40E7C78]();
}

uint64_t HKFeatureFlagBloodOxygenSaturationEnabled()
{
  return MEMORY[0x1F40E7CE0]();
}

uint64_t HKFeaturePropertiesChangeNotificationForFeatureIdentifier()
{
  return MEMORY[0x1F40E7CF8]();
}

uint64_t HKHealthKitFrameworkBundle()
{
  return MEMORY[0x1F40E7D10]();
}

uint64_t HKHearingLevelClassificationForSensitivity()
{
  return MEMORY[0x1F40E7D30]();
}

uint64_t HKHearingLevelClassificationPureToneAverageFrequencies()
{
  return MEMORY[0x1F40E7D38]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x1F40E7D50]();
}

uint64_t HKIsUnitTesting()
{
  return MEMORY[0x1F40E7D88]();
}

uint64_t HKLocalizedStringForHearingLevelClassification()
{
  return MEMORY[0x1F40E7DA0]();
}

uint64_t HKLogAnalytics()
{
  return MEMORY[0x1F40E7DA8]();
}

uint64_t HKLogCameraAccess()
{
  return MEMORY[0x1F40E7DB8]();
}

uint64_t HKLogInfrastructure()
{
  return MEMORY[0x1F40E7DD0]();
}

uint64_t HKLogPhotoAccess()
{
  return MEMORY[0x1F40E7DE0]();
}

uint64_t HKMaximumDecibelQuantityForHearingLevelClassification()
{
  return MEMORY[0x1F40E7DF8]();
}

uint64_t HKMinimumDecibelQuantityForHearingLevelClassification()
{
  return MEMORY[0x1F40E7E20]();
}

uint64_t HKOxygenSaturationLowBarometricPressureThresholdQuantity()
{
  return MEMORY[0x1F40E7EA0]();
}

uint64_t HKSafeObject()
{
  return MEMORY[0x1F40E7EE8]();
}

uint64_t HKSemanticVersionFromString()
{
  return MEMORY[0x1F40E7EF8]();
}

uint64_t HKSensitiveLogItem()
{
  return MEMORY[0x1F40E7F00]();
}

uint64_t HKSeparateTimeIntervalComponents()
{
  return MEMORY[0x1F40E7F08]();
}

uint64_t HKSeparateTimeIntervalComponentsWithDays()
{
  return MEMORY[0x1F40E7F10]();
}

uint64_t HKSeparateTimeIntervalComponentsWithWeeks()
{
  return MEMORY[0x1F40E7F18]();
}

uint64_t HKSleepScheduleWeekdayFromWeekdayComponent()
{
  return MEMORY[0x1F40E7F50]();
}

uint64_t HKSleepScheduleWeekdaysIsSingleDay()
{
  return MEMORY[0x1F40E7F58]();
}

uint64_t HKStateOfMindAssociationFromDomain()
{
  return MEMORY[0x1F40E7F80]();
}

uint64_t HKStateOfMindKindFromReflectiveInterval()
{
  return MEMORY[0x1F40E7F88]();
}

uint64_t HKStateOfMindValenceClassificationForValence()
{
  return MEMORY[0x1F40E7F90]();
}

uint64_t HKStringFromBool()
{
  return MEMORY[0x1F40E7FD0]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x1F417CE38]();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  MEMORY[0x1F40ECE10]((__n128)mapPoint, *(__n128 *)&mapPoint.y);
  result.longitude = v2;
  result.latitude = v1;
  return result;
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MEMORY[0x1F40ECE48]((__n128)coordinate, *(__n128 *)&coordinate.longitude);
  result.double y = v2;
  result.CGFloat x = v1;
  return result;
}

MKMapRect MKMapRectInset(MKMapRect rect, double dx, double dy)
{
  MEMORY[0x1F40ECE70]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.CGFloat width = v5;
  result.origin.double y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return MEMORY[0x1F40ECE80]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  MEMORY[0x1F40ECEC0](zoomScale);
  return result;
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void NSDecimalRound(NSDecimal *result, const NSDecimal *number, NSInteger scale, NSRoundingMode roundingMode)
{
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1F40E7228]();
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return (NSString *)MEMORY[0x1F4166AA0]((__n128)point, *(__n128 *)&point.y);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

uint64_t NSWeekdayComponentFromHKSleepScheduleWeekday()
{
  return MEMORY[0x1F40E8118]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1F4147190]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1F41471B0]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1F41471C0]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1F41471E0]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1F41471F0]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1F4147220]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1F4147230]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1F4147268]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1F4147278]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1F4147280]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1F41472A0]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1F41472A8]();
}

uint64_t PBRepeatedDoubleAdd()
{
  return MEMORY[0x1F41472F0]();
}

uint64_t PBRepeatedDoubleClear()
{
  return MEMORY[0x1F41472F8]();
}

uint64_t PBRepeatedDoubleCopy()
{
  return MEMORY[0x1F4147300]();
}

uint64_t PBRepeatedDoubleHash()
{
  return MEMORY[0x1F4147308]();
}

uint64_t PBRepeatedDoubleIsEqual()
{
  return MEMORY[0x1F4147310]();
}

uint64_t PBRepeatedDoubleNSArray()
{
  return MEMORY[0x1F4147318]();
}

uint64_t PBRepeatedInt64Add()
{
  return MEMORY[0x1F4147398]();
}

uint64_t PBRepeatedInt64Clear()
{
  return MEMORY[0x1F41473A0]();
}

uint64_t PBRepeatedInt64Copy()
{
  return MEMORY[0x1F41473A8]();
}

uint64_t PBRepeatedInt64Hash()
{
  return MEMORY[0x1F41473B0]();
}

uint64_t PBRepeatedInt64IsEqual()
{
  return MEMORY[0x1F41473B8]();
}

uint64_t PBRepeatedInt64NSArray()
{
  return MEMORY[0x1F41473C0]();
}

uint64_t PSHighLegibilityAlternateFont()
{
  return MEMORY[0x1F4145E78]();
}

OSStatus SecIdentityCopyPrivateKey(SecIdentityRef identityRef, SecKeyRef *privateKeyRef)
{
  return MEMORY[0x1F40F6DC0](identityRef, privateKeyRef);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1F40F6DD8](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1F40F6DE0](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1F40F6DE8](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1F40F6E20](query, attributesToUpdate);
}

size_t SecKeyGetBlockSize(SecKeyRef key)
{
  return MEMORY[0x1F40F6F40](key);
}

OSStatus SecKeyRawSign(SecKeyRef key, SecPadding padding, const uint8_t *dataToSign, size_t dataToSignLen, uint8_t *sig, size_t *sigLen)
{
  return MEMORY[0x1F40F6F68](key, *(void *)&padding, dataToSign, dataToSignLen, sig, sigLen);
}

OSStatus SecPKCS12Import(CFDataRef pkcs12_data, CFDictionaryRef options, CFArrayRef *items)
{
  return MEMORY[0x1F40F6F90](pkcs12_data, options, items);
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return MEMORY[0x1F4166AF0]();
}

uint64_t UICeilToViewScale()
{
  return MEMORY[0x1F4166B90]();
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return MEMORY[0x1F4166B98](lhs, rhs);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return MEMORY[0x1F4166BA0](category);
}

uint64_t UIDistanceBetweenPoints()
{
  return MEMORY[0x1F4166BB8]();
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1F4166C48]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1F4166C50]();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return (NSData *)MEMORY[0x1F4166CB8](image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1F4166CC0](image);
}

uint64_t UIPointRoundToViewScale()
{
  return MEMORY[0x1F4166E00]();
}

uint64_t UIRectCenteredXInRect()
{
  return MEMORY[0x1F4166E30]();
}

uint64_t UIRectCenteredYInRect()
{
  return MEMORY[0x1F4166E40]();
}

uint64_t UIRectInset()
{
  return MEMORY[0x1F4166E88]();
}

uint64_t UIRoundToScale()
{
  return MEMORY[0x1F4166EB8]();
}

uint64_t UIRoundToViewScale()
{
  return MEMORY[0x1F4166EC8]();
}

uint64_t UISizeRoundToViewScale()
{
  return MEMORY[0x1F4166EF0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CPTimeFormatIs24HourMode()
{
  return MEMORY[0x1F4109958]();
}

uint64_t _CTServerConnectionCopyCellularUsagePolicy()
{
  return MEMORY[0x1F40DF020]();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return MEMORY[0x1F40DF0C8]();
}

uint64_t _CTServerConnectionSetCellularUsagePolicy()
{
  return MEMORY[0x1F40DF208]();
}

uint64_t _HKAllQuantityTypes()
{
  return MEMORY[0x1F40E8130]();
}

uint64_t _HKBarometricPressureUnit()
{
  return MEMORY[0x1F40E8140]();
}

uint64_t _HKBloodGlucoseMillimolesPerLiterUnit()
{
  return MEMORY[0x1F40E8148]();
}

uint64_t _HKCategoryValueSleepAnalysisAsleepValues()
{
  return MEMORY[0x1F40E8170]();
}

uint64_t _HKCategoryValueSleepAnalysisDefaultAsleepValue()
{
  return MEMORY[0x1F40E8178]();
}

uint64_t _HKGenerateDefaultUnitForQuantityType()
{
  return MEMORY[0x1F40E81A8]();
}

uint64_t _HKInitializeLogging()
{
  return MEMORY[0x1F40E81B8]();
}

uint64_t _HKLogDroppedError()
{
  return MEMORY[0x1F40E81C0]();
}

uint64_t _HKLogSignpostIDGenerate()
{
  return MEMORY[0x1F40E81D8]();
}

uint64_t _HKMetadataKeyIsPrivate()
{
  return MEMORY[0x1F40E81E8]();
}

uint64_t _HKStatisticsOptionAttenuateSamples()
{
  return MEMORY[0x1F40E8200]();
}

uint64_t _HKStatisticsOptionBaselineRelativeQuantities()
{
  return MEMORY[0x1F40E8208]();
}

uint64_t _HKWeatherTemperatureUnit()
{
  return MEMORY[0x1F40E8238]();
}

uint64_t _HKWorkoutActivityNameForActivityType()
{
  return MEMORY[0x1F40E8240]();
}

uint64_t _HKWorkoutActivityTypeIsValid()
{
  return MEMORY[0x1F40E8258]();
}

uint64_t _HKWorkoutDistanceTypeForActivityType()
{
  return MEMORY[0x1F40E82A8]();
}

uint64_t _HKWorkoutEventTypeName()
{
  return MEMORY[0x1F40E82B0]();
}

uint64_t _HKWorkoutFlooredValueForQuantity()
{
  return MEMORY[0x1F40E82B8]();
}

uint64_t _HKWorkoutSwimmingLocationTypeName()
{
  return MEMORY[0x1F40E82E0]();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return (NSDictionary *)MEMORY[0x1F40E7328](commaSeparatedKeysString, firstValue);
}

uint64_t _UIApplicationIsExtension()
{
  return MEMORY[0x1F4166FA8]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

double __exp10(double a1)
{
  MEMORY[0x1F40C9B90](a1);
  return result;
}

float __exp10f(float a1)
{
  MEMORY[0x1F40C9B98](a1);
  return result;
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1F40C9FB0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1F40CA3A8]();
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBAC0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1F40CBDB0]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

long double exp2(long double __x)
{
  MEMORY[0x1F40CBFE8](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x1F40CC1A0](__x, __y);
  return result;
}

void free(void *a1)
{
}

uint64_t hk_maxWalkingSteadinessValueForClassification()
{
  return MEMORY[0x1F40E82E8]();
}

uint64_t hk_minWalkingSteadinessValueForClassification()
{
  return MEMORY[0x1F40E82F0]();
}

long double hypot(long double __x, long double __y)
{
  MEMORY[0x1F40CC630](__x, __y);
  return result;
}

long double log(long double __x)
{
  MEMORY[0x1F40CC878](__x);
  return result;
}

long double log10(long double __x)
{
  MEMORY[0x1F40CC880](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

char *__cdecl mkdtemp(char *a1)
{
  return (char *)MEMORY[0x1F40CCDE0](a1);
}

int mkstemps(char *a1, int a2)
{
  return MEMORY[0x1F40CCE18](a1, *(void *)&a2);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t random(void)
{
  return MEMORY[0x1F40CDC18]();
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1F40CE1F8](__dst, __src, __n);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1F41864C8]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1F41864F0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1F4186588]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1F4186590]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1F4186620]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}