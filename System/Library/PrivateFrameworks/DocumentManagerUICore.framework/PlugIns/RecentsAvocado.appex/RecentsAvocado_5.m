uint64_t sub_10031A03C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100319738(a1, a2, a3, (void (*)(void))type metadata accessor for DOCSearchSuggestion, (unint64_t *)&unk_100633BB0, &qword_100633BA8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DDCC);
}

uint64_t sub_10031A078(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C(&qword_100633C78, &qword_100633C70);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_100633C70);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, (unint64_t *)&qword_1006322C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031A2AC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C(&qword_100633C08, &qword_10062FA50);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_10062FA50);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, (unint64_t *)&qword_10062F0F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031A4E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C((unint64_t *)&unk_100633C60, &qword_100633C58);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_100633C58);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031A714(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C((unint64_t *)&unk_100633D00, &qword_100633CF8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_100633CF8);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, (unint64_t *)&unk_10062F800);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031A948(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100319738(a1, a2, a3, (void (*)(void))type metadata accessor for DOCItemCollectionViewController, &qword_100633BD8, &qword_100633BD0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DDCC);
}

uint64_t sub_10031A984(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100319738(a1, a2, a3, (void (*)(void))type metadata accessor for RecentItemCell, &qword_100633CA0, &qword_100633C98, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DEA0);
}

uint64_t sub_10031A9C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100319738(a1, a2, a3, (void (*)(void))type metadata accessor for DOCUIImageMenuItem, (unint64_t *)&unk_100633C88, &qword_100633C80, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DDCC);
}

uint64_t sub_10031A9FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C((unint64_t *)&unk_100633BE8, &qword_100633BE0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_100633BE0);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031AC30(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C((unint64_t *)&unk_100633CE8, &qword_100633CE0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_100633CE0);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, &qword_10062F160);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031AE64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10006102C((unint64_t *)&unk_100633C18, &qword_100633C10);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100031648(&qword_100633C10);
          v12 = sub_10010DDCC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000333C8(0, &qword_100633238);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031B098(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100319738(a1, a2, a3, (void (*)(void))type metadata accessor for DOCGoToRecentLocation, &qword_100633CB0, &qword_100633CA8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DDCC);
}

uint64_t sub_10031B0D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10031B104(a1, a2, a3, (uint64_t *)&unk_10062AEA0, &qword_100633CD8, &qword_100633CD0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DF08);
}

uint64_t sub_10031B104(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10006102C(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_100031648(a6);
          v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_100031648(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_10031B338(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100319738(a1, a2, a3, (void (*)(void))type metadata accessor for DOCFileProviderSource, (unint64_t *)&unk_100633CC0, &qword_100633CB8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010DDCC);
}

uint64_t *sub_10031B374(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    uint64_t v11 = a4;
LABEL_7:
    *uint64_t v10 = a4;
    v10[1] = a5;
    v10[2] = a6;
    v10[3] = v11;
    return (uint64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_24;
  }
  if (a4 == a5)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  uint64_t v14 = a4 - a5;
  uint64_t v15 = a3;
  if (a4 <= a5)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t v11 = a4 + v6 - 1;
    a3 = v15;
    goto LABEL_7;
  }
  v12 = a2;
  uint64_t v6 = 0;
  uint64_t v16 = a6 + 8 * a4 + 24;
  uint64_t v17 = a6 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    uint64_t v13 = a4 + v6 - 1;
    if ((a6 & 0xC000000000000001) != 0)
    {
      uint64_t result = (uint64_t *)sub_1004CF500();
      goto LABEL_15;
    }
    if (a4 + v6 < 1) {
      break;
    }
    if ((unint64_t)v13 >= *(void *)(v17 + 16)) {
      goto LABEL_23;
    }
    uint64_t result = (uint64_t *)*(id *)(v16 + 8 * v6);
LABEL_15:
    *v12 = result;
    if (!(v15 - 1 + v6)) {
      goto LABEL_20;
    }
    if (!(v14 - 1 + v6))
    {
      uint64_t v11 = a5;
      a3 = v14;
      goto LABEL_7;
    }
    if (v13 <= a4)
    {
      ++v12;
      --v6;
      if (v13 > a5) {
        continue;
      }
    }
    goto LABEL_19;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10031B4BC(uint64_t a1, char *a2)
{
  uint64_t v72 = sub_1004CE5F0();
  __chkstk_darwin(v72);
  v73 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CD8C0();
  __chkstk_darwin(v5 - 8);
  v71 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1004CE620();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  v70 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1004CAC10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v74 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v79 = (uint64_t)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v66 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v84 = type metadata accessor for DOCDSCopyEngineXPCConnection();
  v85 = &off_1005D9AA0;
  uint64_t v83 = a1;
  swift_retain();
  uint64_t v19 = (void *)sub_1004CC620();
  sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1004E12A0;
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = sub_1000334C4();
  *(void *)(v20 + 32) = 0xD000000000000018;
  *(void *)(v20 + 40) = 0x800000010052F980;
  sub_1004CC640();

  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)&a2[OBJC_IVAR____TtC14RecentsAvocado16DOCCopyOperation_destinationFolderItem];
  v22 = *(NSObject **)&a2[OBJC_IVAR____TtC14RecentsAvocado16DOCCopyOperation_sourceURLs];
  uint64_t v23 = swift_allocObject();
  uint64_t v80 = v23;
  *(void *)(v23 + 16) = 0;
  v76 = (uint64_t *)(v23 + 16);
  v78 = v22;
  swift_bridgeObjectRetain();
  id v24 = [v21 fileURL];
  v77 = a2;
  if (v24)
  {
    v25 = v24;
    sub_1004CABC0();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v18, 1, 1, v8);
  }
  v26 = (char *)v8;
  uint64_t v27 = swift_allocBox();
  uint64_t v29 = v28;
  sub_100031790((uint64_t)v18, v28, (uint64_t *)&unk_10062B3B0);
  sub_100037C48(v29, (uint64_t)v16);
  uint64_t v75 = v9;
  v30 = *(uint64_t (**)(char *, uint64_t, char *))(v9 + 48);
  int v31 = v30(v16, 1, v26);
  sub_100049B74((uint64_t)v16, (uint64_t *)&unk_10062B3B0);
  if (v31 == 1)
  {
    dispatch_semaphore_t v32 = dispatch_semaphore_create(0);
    id v67 = [self defaultManager];
    v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = v21;
    v33[4] = v80;
    v33[5] = v27;
    aBlock[4] = sub_10031C23C;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100124F1C;
    aBlock[3] = &unk_1005CD268;
    v34 = _Block_copy(aBlock);
    v35 = v32;
    id v36 = v21;
    swift_retain();
    swift_retain();
    swift_release();
    id v37 = v67;
    [v67 fetchURLForItem:v36 completionHandler:v34];
    _Block_release(v34);

    sub_1004CE880();
  }
  swift_beginAccess();
  uint64_t v38 = v79;
  sub_100037C48(v29, v79);
  if (v30((char *)v38, 1, v26) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100049B74(v38, (uint64_t *)&unk_10062B3B0);
    v39 = v76;
    swift_beginAccess();
    uint64_t v40 = *v39;
    v41 = v77;
    if (v40)
    {
      swift_errorRetain();
      v42 = (void *)sub_1004CAA50();
      swift_errorRelease();
    }
    else
    {
      v42 = 0;
    }
    [v41 completedWithResult:0 error:v42];
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v43 = v75;
    v44 = v74;
    (*(void (**)(char *, uint64_t, char *))(v75 + 32))(v74, v38, v26);
    unint64_t v45 = sub_1000219BC((uint64_t)_swiftEmptyArrayStorage);
    v46 = (unsigned __int8 *)v77;
    v47 = (unint64_t *)&v77[OBJC_IVAR____TtC14RecentsAvocado16DOCCopyOperation_dsSourceItemToURL];
    swift_beginAccess();
    unint64_t *v47 = v45;
    swift_bridgeObjectRelease();
    unint64_t v48 = sub_100021BB4((uint64_t)_swiftEmptyArrayStorage);
    v49 = (unint64_t *)&v46[OBJC_IVAR____TtC14RecentsAvocado16DOCCopyOperation_dsSourceURLToItem];
    swift_beginAccess();
    unint64_t *v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t v50 = swift_allocObject();
    uint64_t v79 = v50;
    v51 = v78;
    *(void *)(v50 + 16) = v78;
    id v52 = (id)(v50 + 16);
    if (!v51[2].isa)
    {
      id v67 = (id)(v50 + 16);
      v78 = dispatch_group_create();
      sub_1000333C8(0, (unint64_t *)&qword_100626B70);
      (*(void (**)(char *, void, uint64_t))(v68 + 104))(v70, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v69);
      sub_1004CD880();
      v81 = _swiftEmptyArrayStorage;
      sub_10031C298((unint64_t *)&qword_10062CDB0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_100031648((uint64_t *)&unk_100626B80);
      sub_10006102C((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
      sub_1004CF330();
      v53 = (void *)sub_1004CE670();
      unint64_t v54 = *(void *)&v46[OBJC_IVAR____TtC14RecentsAvocado16DOCCopyOperation_sourceItems];
      uint64_t v66 = v27;
      if (v54 >> 62) {
        goto LABEL_32;
      }
      uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      while (1)
      {
        v73 = v26;
        v56 = v46;
        if (!v55) {
          break;
        }
        v46 = (unsigned __int8 *)(v54 & 0xC000000000000001);
        uint64_t v57 = 4;
        while (1)
        {
          v58 = v46 ? (char *)sub_1004CF500() : (char *)*(id *)(v54 + 8 * v57);
          v26 = v58;
          uint64_t v59 = v57 - 3;
          if (__OFADD__(v57 - 4, 1)) {
            break;
          }
          sub_10048B32C(v26, v79, v56, v78, v80, v53);

          ++v57;
          if (v59 == v55) {
            goto LABEL_22;
          }
        }
        __break(1u);
LABEL_32:
        swift_bridgeObjectRetain_n();
        uint64_t v55 = sub_1004CF6D0();
        swift_bridgeObjectRelease();
      }
LABEL_22:
      swift_bridgeObjectRelease();
      v61 = v78;
      sub_1004CE5D0();

      v46 = v56;
      v26 = v73;
      uint64_t v43 = v75;
      v44 = v74;
      id v52 = v67;
    }
    swift_beginAccess();
    if (*(void *)(*(void *)v52 + 16))
    {
      sub_100032FD8(&v83, v84);
      int v62 = swift_bridgeObjectRetain();
      sub_10048C020(v62, (int)v44, v46);
      swift_bridgeObjectRelease();
    }
    else
    {
      v63 = v76;
      swift_beginAccess();
      if (*v63)
      {
        swift_errorRetain();
        v64 = (void *)sub_1004CAA50();
        swift_errorRelease();
      }
      else
      {
        v64 = 0;
      }
      objc_msgSend(v46, "completedWithResult:error:", 0, v64, v66);
    }
    (*(void (**)(char *, char *))(v43 + 8))(v44, v26);
    swift_release();
    swift_release();
    swift_release();
  }
  return sub_100039184((uint64_t)&v83);
}

unsigned char *storeEnumTagSinglePayload for DOCCopyOperation.EngineType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10031C0B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCCopyOperation.EngineType()
{
  return &type metadata for DOCCopyOperation.EngineType;
}

unint64_t sub_10031C0F0()
{
  unint64_t result = qword_100633B78;
  if (!qword_100633B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100633B78);
  }
  return result;
}

uint64_t sub_10031C144()
{
  return swift_release();
}

unint64_t sub_10031C14C()
{
  unint64_t result = qword_100633C38;
  if (!qword_100633C38)
  {
    sub_1000333C8(255, (unint64_t *)&unk_1006273A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100633C38);
  }
  return result;
}

uint64_t sub_10031C1B4()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031C1EC()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

Swift::Int sub_10031C23C(uint64_t a1, uint64_t a2)
{
  return sub_10048AF50(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10031C248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10031C258()
{
  return swift_release();
}

uint64_t sub_10031C260()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031C298(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10031C2E0(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v8 = sub_1004CE5F0();
  __chkstk_darwin(v8);
  uint64_t v2 = sub_1004CD8C0();
  __chkstk_darwin(v2 - 8);
  uint64_t v11 = sub_1004CE620();
  uint64_t v3 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  unsigned int v10 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v9 = *(void (**)(char *))(v3 + 104);
  v9(v5);
  sub_1004CD880();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_100060C40((unint64_t *)&qword_10062CDB0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v7[1] = sub_100031648((uint64_t *)&unk_100626B80);
  sub_10005B6A0((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
  sub_1004CF330();
  *(void *)(v1 + 24) = sub_1004CE670();
  *(void *)(v1 + 32) = [self hashTableWithOptions:517];
  *(unsigned char *)(v1 + 40) = 0;
  ((void (*)(char *, void, uint64_t))v9)(v5, v10, v11);
  sub_1004CD880();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_1004CF330();
  *(void *)(v1 + 48) = sub_1004CE670();
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(void *)(v1 + 16) = v12;
  return v1;
}

id *sub_10031C62C()
{
  sub_10031CFCC();

  sub_100049B74((uint64_t)(v0 + 7), &qword_10062BA60);
  sub_100049B74((uint64_t)(v0 + 11), &qword_10062BA60);

  return v0;
}

uint64_t sub_10031C6B0()
{
  sub_10031C62C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCFileProviderSyncStateObserver()
{
  return self;
}

uint64_t sub_10031C708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = [*(id *)(v1 + 16) storageURLs];
  uint64_t v5 = sub_1004CAC10();
  sub_1004CDE30();

  swift_bridgeObjectRelease();
  if (sub_1004CB950())
  {
    id v6 = [*(id *)(v2 + 16) storageURLs];
    uint64_t v7 = sub_1004CDE30();

    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t v9 = v8;
    if (*(void *)(v7 + 16))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(a1, v7 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v5);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v10(a1, 1, 1, v5);
  }
}

uint64_t sub_10031C8D8(uint64_t a1)
{
  sub_1004CF4D0(61);
  v7._object = (void *)0x800000010052FBE0;
  v7._countAndFlagsBits = 0xD000000000000011;
  sub_1004CDCD0(v7);
  id v2 = [*(id *)(a1 + 16) description];
  uint64_t v3 = sub_1004CDB50();
  uint64_t v5 = v4;

  v8._countAndFlagsBits = v3;
  v8._object = v5;
  sub_1004CDCD0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD00000000000002ALL;
  v9._object = (void *)0x800000010052FC00;
  sub_1004CDCD0(v9);
  return 0;
}

uint64_t sub_10031C9B8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [*(id *)(a2 + 32) addObject:result];
    if ((*(unsigned char *)(a2 + 40) & 1) == 0)
    {
      *(unsigned char *)(a2 + 40) = 1;
      sub_10031CFAC();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10031CA38(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [*(id *)(a2 + 32) removeObject:result];
    if (*(unsigned char *)(a2 + 40) == 1 && ![*(id *)(a2 + 32) count])
    {
      sub_10031CFCC();
      uint64_t result = swift_unknownObjectRelease();
      *(unsigned char *)(a2 + 40) = 0;
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10031CAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1004CD860();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1004CD8C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 24);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_10031F5FC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  aBlock[3] = &unk_1005CD3F8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1004CD880();
  v17[1] = _swiftEmptyArrayStorage;
  sub_100060C40((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_10031CD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [*(id *)(a1 + 32) allObjects];
  sub_100031648(&qword_100633F78);
  unint64_t v6 = sub_1004CDE30();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      if (v7 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v8 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            uint64_t v9 = sub_1004CF500();
          }
          else
          {
            uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
            swift_unknownObjectRetain();
          }
          ++v8;
          uint64_t v10 = (void *)swift_allocObject();
          v10[2] = a2;
          v10[3] = a3;
          v10[4] = v9;
          v12[4] = sub_10009DB3C;
          v12[5] = v10;
          v12[0] = _NSConcreteStackBlock;
          v12[1] = 1107296256;
          v12[2] = sub_1003A422C;
          v12[3] = &unk_1005CD448;
          uint64_t v11 = _Block_copy(v12);
          swift_retain();
          swift_unknownObjectRetain();
          swift_release();
          DOCRunInMainThread();
          _Block_release(v11);
          swift_unknownObjectRelease();
        }
        while (v7 != v8);
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_10031CFAC()
{
  return sub_10031CFEC((uint64_t)sub_10031F578, (uint64_t)&unk_1005CD3A8);
}

uint64_t sub_10031CFCC()
{
  return sub_10031CFEC((uint64_t)sub_10031F534, (uint64_t)&unk_1005CD380);
}

uint64_t sub_10031CFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1004CD860();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = sub_1004CD8C0();
  uint64_t v9 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v2 + 48);
  aBlock[4] = a1;
  uint64_t v18 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v12;
  swift_retain();
  sub_1004CD880();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100060C40((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v16[0]);
  return swift_release();
}

void sub_10031D274(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  if ([*(id *)(a1 + 16) isMainiCloudDriveDomain]) {
    a2();
  }
  id v6 = *(id *)(a1 + 16);
  if ([v6 isiCloudDriveProvider])
  {
  }
  else
  {
    unsigned __int8 v7 = [v6 isUsingFPFS];

    if ((v7 & 1) == 0) {
      return;
    }
  }
  a3();
}

uint64_t sub_10031D308(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 isDownloadingOperation])
  {
    uint64_t v5 = (void **)(v1 + 120);
    id v4 = *(void **)(v1 + 120);
    if (v4)
    {
      sub_1000333C8(0, (unint64_t *)&unk_10062AC50);
      id v6 = a1;
      id v7 = v4;
      char v8 = sub_1004CEF10();

      if (v8)
      {
        char v9 = 1;
LABEL_8:
        sub_10031F020(a1, v9, 0);
        uint64_t v15 = *v5;
        *uint64_t v5 = 0;

        return 1;
      }
    }
  }
  uint64_t result = (uint64_t)[a1 isUploadingOperation];
  if (!result) {
    return result;
  }
  uint64_t v5 = (void **)(v2 + 128);
  uint64_t v11 = *(void **)(v2 + 128);
  if (v11)
  {
    sub_1000333C8(0, (unint64_t *)&unk_10062AC50);
    id v12 = a1;
    id v13 = v11;
    char v14 = sub_1004CEF10();

    char v9 = 0;
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_10031D440()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CAC10();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CC770();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC700();
  swift_retain_n();
  id v13 = sub_1004CC760();
  os_log_type_t v14 = sub_1004CE340();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v38 = v4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    v35[2] = v17;
    uint64_t v39 = v6;
    *(_DWORD *)uint64_t v16 = 136315138;
    aBlock[0] = v17;
    v35[1] = v16 + 4;
    id v18 = [*(id *)(v1 + 16) domainFullDisplayName];
    uint64_t v19 = sub_1004CDB50();
    uint64_t v36 = v10;
    uint64_t v37 = v9;
    uint64_t v20 = v8;
    uint64_t v21 = v1;
    uint64_t v22 = v19;
    unint64_t v24 = v23;

    id v4 = v38;
    uint64_t v25 = v22;
    uint64_t v1 = v21;
    char v8 = v20;
    v41[0] = sub_100187CC4(v25, v24, aBlock);
    uint64_t v6 = v39;
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Starting observation of %s progress updates.", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v40;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_10031C708((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_100049B74((uint64_t)v4, (uint64_t *)&unk_10062B3B0);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v27 = self;
  sub_1004CAB60(v28);
  v30 = v29;
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_10031F4AC;
  *(void *)(v32 + 24) = v31;
  aBlock[4] = (uint64_t)sub_1000EE978;
  void aBlock[5] = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10036C9E4;
  aBlock[3] = (uint64_t)&unk_1005CD330;
  v33 = _Block_copy(aBlock);
  swift_release();
  id v34 = [v27 addSubscriberForFileURL:v30 withPublishingHandler:v33];
  _Block_release(v33);

  sub_1004CF2A0();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100035EF8((uint64_t)aBlock, (uint64_t)v41);
  swift_beginAccess();
  sub_1000B7FFC((uint64_t)v41, v1 + 88);
  return swift_endAccess();
}

uint64_t (*sub_10031D944(void *a1))()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v3 = DOCSplitBrowserViewController.didCommitPreview(of:);
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (sub_10031DE10(a1))
    {
      if ([a1 isDownloadingOperation])
      {
        sub_10031F020(a1, 1, 1);
        uint64_t v5 = *(void **)(v4 + 120);
        *(void *)(v4 + 120) = a1;
      }
      else
      {
        if (![a1 isUploadingOperation])
        {
LABEL_11:
          uint64_t v7 = swift_allocObject();
          *(void *)(v7 + 16) = v4;
          *(void *)(v7 + 24) = a1;
          id v8 = a1;
          return sub_10031F52C;
        }
        sub_10031F020(a1, 0, 1);
        uint64_t v5 = *(void **)(v4 + 128);
        *(void *)(v4 + 128) = a1;
      }
      id v6 = a1;

      if (*(unsigned char *)(v4 + 40) == 1) {
        sub_10031CAD8((uint64_t)sub_10031DAA4, 0);
      }
      goto LABEL_11;
    }
    swift_release();
    return (uint64_t (*)())DOCSplitBrowserViewController.didCommitPreview(of:);
  }
  return (uint64_t (*)())v3;
}

id sub_10031DAA4(void *a1)
{
  return [a1 didUpdateSyncProgress];
}

uint64_t sub_10031DAB0(uint64_t a1, void *a2)
{
  uint64_t result = sub_10031D308(a2);
  if ((result & 1) != 0 && *(unsigned char *)(a1 + 40) == 1) {
    return sub_10031CAD8((uint64_t)sub_10031F650, 0);
  }
  return result;
}

uint64_t sub_10031DB04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC700();
  swift_retain_n();
  id v6 = sub_1004CC760();
  os_log_type_t v7 = sub_1004CE340();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v2;
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    void v17[2] = v9;
    *(_DWORD *)id v8 = 136315138;
    v21[0] = v9;
    v17[1] = v8 + 4;
    id v10 = [*(id *)(v1 + 16) domainFullDisplayName];
    uint64_t v11 = sub_1004CDB50();
    unint64_t v13 = v12;

    *(void *)&long long v19 = sub_100187CC4(v11, v13, v21);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Stopping observation of %s progress updates.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v14 = v1 + 88;
  swift_beginAccess();
  sub_10010E21C(v14, (uint64_t)&v19);
  if (!*((void *)&v20 + 1)) {
    return sub_100049B74((uint64_t)&v19, &qword_10062BA60);
  }
  sub_100032FC8(&v19, v21);
  uint64_t v15 = self;
  sub_100032FD8(v21, v22);
  [v15 removeSubscriber:sub_1004CF870()];
  swift_unknownObjectRelease();
  long long v19 = 0u;
  long long v20 = 0u;
  swift_beginAccess();
  sub_1000B7FFC((uint64_t)&v19, v14);
  swift_endAccess();
  return sub_100039184((uint64_t)v21);
}

uint64_t sub_10031DE10(void *a1)
{
  uint64_t v3 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v22 - v11;
  sub_10031C708((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100049B74((uint64_t)v5, (uint64_t *)&unk_10062B3B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    id v13 = *(id *)(v1 + 16);
    char v14 = sub_1004CE450();

    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    if (v14)
    {
      sub_1004CAB60(v15);
      uint64_t v17 = v16;
      unsigned __int8 v18 = objc_msgSend(a1, "fp_isGlobalProgressForDomainAt:", v16);

      long long v19 = *(void (**)(char *, uint64_t))(v7 + 8);
      v19(v10, v6);
      v19(v12, v6);
      if ((v18 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v10, v6);
      v21(v12, v6);
    }
  }
  return 1;
}

id sub_10031E05C()
{
  uint64_t v1 = *(void **)(v0 + 144);
  if (v1)
  {
    id v2 = *(id *)(v0 + 144);
  }
  else
  {
    id v3 = [self shared];
    uint64_t v4 = *(void **)(v0 + 144);
    *(void *)(v0 + 144) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_10031E0D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC700();
  swift_retain_n();
  uint64_t v6 = sub_1004CC760();
  os_log_type_t v7 = sub_1004CE340();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v24 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    aBlock[0] = v9;
    uint64_t v22 = v8 + 4;
    id v10 = objc_msgSend(*(id *)(v1 + 16), "domainFullDisplayName", v8 + 4, v23);
    uint64_t v11 = sub_1004CDB50();
    unint64_t v13 = v12;

    v25[0] = sub_100187CC4(v11, v13, aBlock);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting observation of %s quota updates.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v14 = sub_10031E05C();
  [v14 startObservingUpdates];

  id v15 = [self defaultCenter];
  NSString v16 = [self currentInAppMessageChangedNotification];
  if (!v16)
  {
    sub_1004CDB50();
    NSString v16 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  id v17 = [self mainQueue];
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = sub_10031F48C;
  uint64_t v29 = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000EC9C8;
  ObjectType = &unk_1005CD2E0;
  long long v19 = _Block_copy(aBlock);
  swift_release();
  id v20 = [v15 addObserverForName:v16 object:0 queue:v17 usingBlock:v19];
  _Block_release(v19);

  ObjectType = (void *)swift_getObjectType();
  aBlock[0] = (uint64_t)v20;
  sub_100035EF8((uint64_t)aBlock, (uint64_t)v25);
  swift_beginAccess();
  sub_1000B7FFC((uint64_t)v25, v1 + 56);
  return swift_endAccess();
}

void sub_10031E4CC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = sub_10031E05C();
    Class isa = sub_1004CA6A0().super.isa;
    id v4 = [v2 fetchMessageFromNotification:isa];

    sub_10031E8D8(v4);
    id v5 = *(void **)(v1 + 136);
    *(void *)(v1 + 136) = v4;
    id v6 = v4;

    if (*(unsigned char *)(v1 + 40) == 1) {
      sub_10031CAD8((uint64_t)sub_10031E5BC, 0);
    }
    swift_release();
  }
}

id sub_10031E5BC(void *a1)
{
  return [a1 didUpdateSyncInAppMessage];
}

uint64_t sub_10031E5C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC700();
  swift_retain_n();
  id v6 = sub_1004CC760();
  os_log_type_t v7 = sub_1004CE340();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v19 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    v22[0] = v9;
    id v17 = v8 + 4;
    id v10 = objc_msgSend(*(id *)(v1 + 16), "domainFullDisplayName", v8 + 4, v18);
    uint64_t v11 = sub_1004CDB50();
    unint64_t v13 = v12;

    *(void *)&long long v20 = sub_100187CC4(v11, v13, v22);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Stopping observation of %s quota updates.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v14 = sub_10031E05C();
  [v14 stopObservingUpdates];

  swift_beginAccess();
  sub_10010E21C(v1 + 56, (uint64_t)&v20);
  if (!v21) {
    return sub_100049B74((uint64_t)&v20, &qword_10062BA60);
  }
  sub_100032FC8(&v20, v22);
  id v15 = [self defaultCenter];
  sub_100032FD8(v22, v23);
  [v15 removeObserver:sub_1004CF870()];

  swift_unknownObjectRelease();
  return sub_100039184((uint64_t)v22);
}

void sub_10031E8D8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v63 = sub_1004CC770();
  uint64_t v4 = *(void *)(v63 - 8);
  uint64_t v5 = __chkstk_darwin(v63);
  os_log_type_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - v8;
  if (a1)
  {
    id v10 = a1;
    id v11 = [v10 contentTypeDescription];
    uint64_t v60 = sub_1004CDB50();
    unint64_t v13 = v12;

    id v14 = [v10 title];
    if (v14)
    {
      id v15 = v14;
      uint64_t v59 = sub_1004CDB50();
      unint64_t v17 = v16;
    }
    else
    {
      unint64_t v17 = 0xE300000000000000;
      uint64_t v59 = 4271950;
    }
    id v26 = [v10 subTitle];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v58 = sub_1004CDB50();
      unint64_t v29 = v28;
    }
    else
    {
      unint64_t v29 = 0xE300000000000000;
      uint64_t v58 = 4271950;
    }
    id v30 = [v10 actions];
    sub_1000333C8(0, &qword_10062C248);
    unint64_t v31 = sub_1004CDE30();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1004CF6D0();
      swift_bridgeObjectRelease();
      id v62 = v10;
      if (v38) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v62 = v10;
      if (v32)
      {
LABEL_12:
        if ((v31 & 0xC000000000000001) != 0)
        {
          id v33 = (id)sub_1004CF500();
        }
        else
        {
          if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v33 = *(id *)(v31 + 32);
        }
        id v34 = v33;
        swift_bridgeObjectRelease();
        id v35 = [v34 title];

        uint64_t v57 = sub_1004CDB50();
        unint64_t v37 = v36;

        goto LABEL_19;
      }
    }
    uint64_t v57 = 4271950;
    swift_bridgeObjectRelease();
    unint64_t v37 = 0xE300000000000000;
LABEL_19:
    sub_1004CC700();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v39 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1004CC760();
    os_log_type_t v41 = sub_1004CE340();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      int v54 = v42;
      uint64_t v44 = v43;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v65 = v55;
      *(_DWORD *)uint64_t v44 = 136316162;
      uint64_t v61 = v4;
      id v45 = [*(id *)(v2 + 16) domainFullDisplayName];
      uint64_t v46 = sub_1004CDB50();
      v56 = v9;
      os_log_t v53 = v40;
      unint64_t v47 = v17;
      uint64_t v48 = v46;
      unint64_t v50 = v49;

      uint64_t v64 = sub_100187CC4(v48, v50, &v65);
      sub_1004CF1F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_100187CC4(v60, v13, &v65);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_100187CC4(v59, v47, &v65);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_100187CC4(v58, v39, &v65);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 42) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_100187CC4(v57, v37, &v65);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      os_log_t v51 = v53;
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v54, "Publishing %s quota message: content type = %s, title = %s, subtitle = %s, action = %s.", (uint8_t *)v44, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v63);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v63);
    }
    return;
  }
  sub_1004CC700();
  swift_retain_n();
  uint64_t v18 = sub_1004CC760();
  os_log_type_t v19 = sub_1004CE340();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v61 = v4;
    long long v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)long long v20 = 136315138;
    uint64_t v65 = v21;
    id v62 = v20 + 4;
    id v22 = [*(id *)(v2 + 16) domainFullDisplayName];
    uint64_t v23 = sub_1004CDB50();
    unint64_t v25 = v24;

    uint64_t v64 = sub_100187CC4(v23, v25, &v65);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unpublishing %s quota message", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v63);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v63);
  }
}

uint64_t sub_10031F020(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1004CC770();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (a3 & 1) == 0;
  if (a3) {
    uint64_t v13 = 0x696873696C627550;
  }
  else {
    uint64_t v13 = 0x73696C6275706E55;
  }
  if (v12) {
    unint64_t v14 = 0xEC000000676E6968;
  }
  else {
    unint64_t v14 = 0xEA0000000000676ELL;
  }
  if (a2) {
    uint64_t v15 = 0x64616F6C6E776F64;
  }
  else {
    uint64_t v15 = 0x6E6964616F6C7075;
  }
  if (a2) {
    unint64_t v16 = 0xEB00000000676E69;
  }
  else {
    unint64_t v16 = 0xE900000000000067;
  }
  id v17 = [a1 localizedDescription];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v37 = sub_1004CDB50();
    unint64_t v20 = v19;
  }
  else
  {
    unint64_t v20 = 0xE300000000000000;
    uint64_t v37 = 4271950;
  }
  sub_1004CC700();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1004CC760();
  os_log_type_t v22 = sub_1004CE340();
  int v36 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v35 = v11;
    uint64_t v31 = v15;
    uint64_t v24 = v23;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v24 = 136315906;
    uint64_t v34 = v9;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100187CC4(v13, v14, &v39);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    id v25 = [*(id *)(v4 + 16) domainFullDisplayName];
    uint64_t v26 = sub_1004CDB50();
    uint64_t v32 = v8;
    unint64_t v28 = v27;

    uint64_t v38 = sub_100187CC4(v26, v28, &v39);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100187CC4(v31, v16, &v39);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100187CC4(v37, v20, &v39);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v36, "%s %s %s progress: %s", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_10031F454()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10031F48C()
{
}

uint64_t sub_10031F494(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10031F4A4()
{
  return swift_release();
}

uint64_t (*sub_10031F4AC(void *a1))()
{
  return sub_10031D944(a1);
}

uint64_t sub_10031F4B4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10031F4EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10031F52C()
{
  return sub_10031DAB0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10031F534()
{
  sub_10031D274(v0, (void (*)(void))sub_10031E5C8, (void (*)(void))sub_10031DB04);
}

void sub_10031F578()
{
  sub_10031D274(v0, (void (*)(void))sub_10031E0D0, (void (*)(void))sub_10031D440);
}

uint64_t sub_10031F5BC()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10031F5FC()
{
  sub_10031CD98(v0[2], v0[3], v0[4]);
}

uint64_t sub_10031F608()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10031F648()
{
  return sub_10031C8D8(v0);
}

id sub_10031F67C(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC14RecentsAvocadoP33_B4D39C791E12CDBD36EEF658A2C9873117FilenameTextField_prefersInitallySelectedText] = 1;
  v4[OBJC_IVAR____TtC14RecentsAvocadoP33_B4D39C791E12CDBD36EEF658A2C9873117FilenameTextField_hasEverBeenFirstResponder] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for FilenameTextField();
  id v9 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 preferredFontForTextStyle:UIFontTextStyleBody];
  [v11 setFont:v12];

  [v11 setAdjustsFontForContentSizeCategory:1];
  sub_10031F8F4();

  return v11;
}

void sub_10031F8F4()
{
  id v1 = (id)DOCFrameworkBundle();
  id v2 = [v0 traitCollection];
  NSString v3 = sub_1004CDB10();
  uint64_t v4 = self;
  id v10 = [v4 colorNamed:v3 inBundle:v1 compatibleWithTraitCollection:v2];

  if ([v0 isEnabled])
  {
    id v5 = [v4 labelColor];
    [v0 setTextColor:v5];

    [v0 setBackgroundColor:v10];
  }
  else
  {
    id v6 = [v4 secondaryLabelColor];
    [v0 setTextColor:v6];

    if (v10) {
      id v7 = [v10 colorWithAlphaComponent:0.5];
    }
    else {
      id v7 = 0;
    }
    [v0 setBackgroundColor:v7];
  }
  id v8 = [v0 layer];
  [v8 setCornerRadius:6.0];

  id v9 = [v0 layer];
  [v9 setCornerCurve:kCACornerCurveContinuous];
}

id sub_10031FB0C()
{
  uint64_t v1 = sub_1004CD860();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CD8C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for FilenameTextField();
  v20.receiver = v0;
  v20.super_class = v9;
  id v10 = objc_msgSendSuper2(&v20, "becomeFirstResponder");
  if (v10)
  {
    if (v0[OBJC_IVAR____TtC14RecentsAvocadoP33_B4D39C791E12CDBD36EEF658A2C9873117FilenameTextField_hasEverBeenFirstResponder])
    {
      v0[OBJC_IVAR____TtC14RecentsAvocadoP33_B4D39C791E12CDBD36EEF658A2C9873117FilenameTextField_hasEverBeenFirstResponder] = 1;
    }
    else
    {
      int v11 = v0[OBJC_IVAR____TtC14RecentsAvocadoP33_B4D39C791E12CDBD36EEF658A2C9873117FilenameTextField_prefersInitallySelectedText];
      v0[OBJC_IVAR____TtC14RecentsAvocadoP33_B4D39C791E12CDBD36EEF658A2C9873117FilenameTextField_hasEverBeenFirstResponder] = 1;
      if (v11 == 1)
      {
        sub_1000333C8(0, (unint64_t *)&qword_100626B70);
        uint64_t v18 = sub_1004CE630();
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v0;
        aBlock[4] = sub_1003248D4;
        void aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1003A422C;
        uint64_t aBlock[3] = &unk_1005CD530;
        uint64_t v13 = _Block_copy(aBlock);
        objc_super v14 = v0;
        swift_release();
        sub_1004CD880();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_1003248E8((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100031648((uint64_t *)&unk_100628370);
        sub_10003A79C();
        sub_1004CF330();
        uint64_t v15 = (void *)v18;
        sub_1004CE650();
        _Block_release(v13);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  return v10;
}

void sub_10031FE74(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v25.receiver = a1;
  v25.super_class = (Class)type metadata accessor for FilenameTextField();
  uint64_t v12 = *a7;
  id v13 = v25.receiver;
  objc_msgSendSuper2(&v25, v12, a2, a3, a4, a5);
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  id v22 = objc_msgSend(v13, "leftView", v25.receiver, v25.super_class);

  if (v22) {
    double v23 = 0.0;
  }
  else {
    double v23 = 10.0;
  }
  id v24 = [v13 rightView];

  sub_10006BCE0(v15, v17, v19, v21, 10.0, v23);
}

id sub_1003200B4()
{
  return sub_1003230E8((uint64_t (*)(void))type metadata accessor for FilenameTextField);
}

uint64_t type metadata accessor for FilenameTextField()
{
  return self;
}

id sub_1003202B8()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setAxis:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics)];
    [v4 setAlignment:3];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100320384()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackedThumbnailView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackedThumbnailView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackedThumbnailView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)DOCStackedThumbnailView), "initWithTopThumbnailSize:", *(double *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 56), *(double *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 64));
    LODWORD(v5) = 1148846080;
    [v4 setContentCompressionResistancePriority:0 forAxis:v5];
    LODWORD(v6) = 1148846080;
    [v4 setContentCompressionResistancePriority:1 forAxis:v6];
    LODWORD(v7) = 1148846080;
    [v4 setContentHuggingPriority:0 forAxis:v7];
    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

char *sub_100320464()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameButton);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameButton);
  }
  else
  {
    uint64_t v4 = v0;
    double v5 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_textStyle);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v7 = objc_allocWithZone((Class)type metadata accessor for DOCRenameButton());
    id v8 = sub_10043B130(v5, (uint64_t)sub_100324838, v6);
    [v8 setContentHorizontalAlignment:4];
    *(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado15DOCRenameButton_delegate + 8] = &off_1005CD470;
    swift_unknownObjectWeakAssign();
    id v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

void sub_100320568()
{
  uint64_t v0 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1004CAC10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v29 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  int v11 = (char *)Strong;
  uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v12)
  {

    return;
  }
  uint64_t v13 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_pickerContext;
  uint64_t v14 = *(void *)(*(void *)&v11[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_pickerContext]
                  + OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave);
  uint64_t v31 = v12;
  if (!v14 || !*(void *)(v14 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_11;
  }
  double v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v15(v2, v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_11:
    sub_100049B74((uint64_t)v2, (uint64_t *)&unk_10062B3B0);
    objc_super v25 = (void *)sub_1004CC620();
    sub_1004CE360();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1004E12A0;
    *(void *)(v26 + 56) = &type metadata for String;
    *(void *)(v26 + 64) = sub_1000334C4();
    strcpy((char *)(v26 + 32), "filenameButton");
    *(unsigned char *)(v26 + 47) = -18;
    sub_1004CC640();

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v30 = (void (*)(char *, char *, uint64_t))v15;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
  uint64_t v16 = *(void *)(*(void *)&v11[v13] + OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave);
  if (v16
    && *(void *)(v16 + 16) == 1
    && (id v17 = sub_100320A2C(),
        id v18 = [v17 text],
        v17,
        v18))
  {
    uint64_t v19 = sub_1004CDB50();
    uint64_t v21 = v20;

    v30(v7, v9, v3);
    id v22 = objc_allocWithZone((Class)type metadata accessor for DOCRenameViewController());
    double v23 = sub_1004109E4((uint64_t)v7, v19, v21, 0);
    *(void *)&v23[OBJC_IVAR____TtC14RecentsAvocado23DOCRenameViewController_delegate + 8] = &off_1005CD480;
    swift_unknownObjectWeakAssign();
    id v24 = v31;
    sub_10040EFE0(v31, 1);
  }
  else
  {
    unint64_t v27 = (void *)sub_1004CC620();
    sub_1004CE360();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1004E12A0;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_1000334C4();
    strcpy((char *)(v28 + 32), "filenameButton");
    *(unsigned char *)(v28 + 47) = -18;
    sub_1004CC640();

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

id sub_100320A2C()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameTextField;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameTextField);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameTextField);
  }
  else
  {
    type metadata accessor for FilenameTextField();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v4 setRightViewMode:3];
    [v4 addTarget:v0 action:"textFieldDidEndEditing:" forControlEvents:0x80000];
    [v4 addTarget:v0 action:"textFieldDidChange:" forControlEvents:0x20000];
    [v4 setEnablesReturnKeyAutomatically:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100320B08(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    id v6 = [a1 text];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = sub_1004CDB50();
      uint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v8, v10, ObjectType, v5);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100320C60(void *a1)
{
  sub_100320DBC();
  uint64_t v3 = v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    id v6 = [a1 text];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = sub_1004CDB50();
      uint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, v8, v10, ObjectType, v5);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100320DBC()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tagButtonDisplaysTitle;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tagButtonDisplaysTitle) == 1)
  {
    id v2 = sub_100320A2C();
    id v39 = [v2 text];

    if (v39)
    {
      id v3 = sub_100320A2C();
      id v4 = [v3 font];

      if (v4)
      {
        id v5 = sub_100320A2C();
        [v5 bounds];
        CGFloat v7 = v6;
        CGFloat v9 = v8;
        CGFloat v11 = v10;
        CGFloat v13 = v12;

        v43.origin.x = 0.0;
        v43.origin.y = 0.0;
        v43.size.width = 0.0;
        v43.size.height = 0.0;
        v41.origin.x = v7;
        v41.origin.y = v9;
        v41.size.width = v11;
        v41.size.height = v13;
        if (!CGRectEqualToRect(v41, v43))
        {
          id v14 = sub_100320A2C();
          id v15 = sub_100320A2C();
          [v15 bounds];
          double v17 = v16;
          double v19 = v18;
          double v21 = v20;
          double v23 = v22;

          objc_msgSend(v14, "editingRectForBounds:", v17, v19, v21, v23);
          CGFloat v25 = v24;
          CGFloat v27 = v26;
          double v29 = v28;
          CGFloat v31 = v30;

          if (v29 > 0.0)
          {
            sub_100031648((uint64_t *)&unk_10062DD40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1004E12A0;
            *(void *)(inited + 32) = NSFontAttributeName;
            *(void *)(inited + 64) = sub_1000333C8(0, &qword_10062BA20);
            *(void *)(inited + 40) = v4;
            uint64_t v33 = NSFontAttributeName;
            id v34 = v4;
            sub_10001F0EC(inited);
            type metadata accessor for Key(0);
            sub_1003248E8((unint64_t *)&qword_10062DD50, type metadata accessor for Key);
            Class isa = sub_1004CD990().super.isa;
            swift_bridgeObjectRelease();
            [v39 sizeWithAttributes:isa];
            double v37 = v36;

            v42.origin.x = v25;
            v42.origin.y = v27;
            v42.size.width = v29;
            v42.size.height = v31;
            if (CGRectGetWidth(v42) <= v37)
            {
              *(unsigned char *)(v0 + v1) = 0;
              id v38 = sub_1003210E4();
              [v38 setNeedsUpdateConfiguration];
            }
            else
            {
            }
            return;
          }
        }
      }
    }
  }
}

id sub_1003210E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CF0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  double v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v8 = (char *)aBlock - v7;
  uint64_t v9 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___tagButton;
  double v10 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___tagButton];
  if (v10)
  {
    id v11 = *(id *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___tagButton];
  }
  else
  {
    sub_1000333C8(0, (unint64_t *)&unk_10062BA30);
    double v12 = self;

    sub_1004CEF80();
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_1000333C8(0, (unint64_t *)&qword_100628760);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_10032470C;
    *(void *)(v14 + 24) = v13;
    swift_retain_n();
    sub_1004CEF50();
    id v15 = (void *)sub_1004CF0F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    swift_release();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10032474C;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100182B48;
    uint64_t aBlock[3] = &unk_1005CD4E0;
    double v17 = _Block_copy(aBlock);
    swift_release();
    [v15 setConfigurationUpdateHandler:v17];
    _Block_release(v17);
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    LODWORD(v18) = 1148846080;
    [v15 setContentHuggingPriority:0 forAxis:v18];
    [v1 updateTagButtonAccessibility:v15];
    double v19 = *(void **)&v1[v9];
    *(void *)&v1[v9] = v15;
    id v11 = v15;

    double v10 = 0;
  }
  id v20 = v10;
  return v11;
}

void sub_1003214B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100322E64();
  }
}

objc_class *sub_100321504(uint64_t a1)
{
  uint64_t v2 = sub_100031648(&qword_1006340C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DOCPickerFilenameView.Metrics(0);
  __chkstk_darwin(v59);
  uint64_t v56 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CF080();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v55 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v54 = (char *)&v52 - v9;
  uint64_t v10 = sub_100031648(&qword_100628758);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v52 - v14;
  uint64_t v16 = sub_1004CF0E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  double v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = (objc_class *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  double v21 = result;
  sub_1004CF100();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {

    return (objc_class *)sub_100049B74((uint64_t)v15, &qword_100628758);
  }
  uint64_t v53 = a1;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  double v22 = self;
  id v23 = [v22 defaultMetrics];
  uint64_t v24 = *(int *)(v59 + 44);
  uint64_t v52 = (char *)v21 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics;
  double v25 = *(double *)((char *)v21 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + v24);
  id v26 = [(objc_class *)v21 traitCollection];
  [v23 scaledValueForValue:v26 compatibleWithTraitCollection:v25];
  double v28 = v27;

  double v29 = (char *)v21 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tags;
  swift_beginAccess();
  if (*(void *)v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v38) {
      goto LABEL_11;
    }
  }
  else if (!*(void *)((*(void *)v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_11;
  }
  sub_1000333C8(0, (unint64_t *)&unk_100628880);
  swift_bridgeObjectRetain();
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  id v31 = [self requestForChainedTags:isa tagDimension:v28];

  if (v31)
  {
    id v32 = v31;
    id v33 = [v22 defaultMetrics];
    id v34 = [(objc_class *)v21 traitCollection];
    [v33 scaledValueForValue:v34 compatibleWithTraitCollection:4.0];

    [v32 setSpacingType:1];
    id v35 = [self shared];
    id v36 = [v35 renderImageWithRequest:v32];

    sub_1004CF0A0();
    sub_1004CEFC0();
    if ((*((unsigned char *)v21 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tagButtonDisplaysTitle) & 1) == 0) {
      sub_1004CE8D0();
    }

    uint64_t v37 = v53;
    goto LABEL_12;
  }
LABEL_11:
  id v39 = [self configurationWithScale:-1];
  NSString v40 = sub_1004CDB10();
  id v41 = [self systemImageNamed:v40 withConfiguration:v39];

  sub_1004CF0A0();
  id v42 = [v22 defaultMetrics];
  id v43 = [(objc_class *)v21 traitCollection];
  [v42 scaledValueForValue:v43 compatibleWithTraitCollection:2.0];

  sub_1004CEFC0();
  uint64_t v37 = v53;
LABEL_12:
  if (*((unsigned char *)v21 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tagButtonDisplaysTitle) == 1)
  {
    uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v44 = result;
    v51._countAndFlagsBits = 0x800000010052FED0;
    v60._object = (void *)0x800000010052FEB0;
    v60._countAndFlagsBits = 0xD000000000000011;
    v61._countAndFlagsBits = 0x617A696C61636F4CLL;
    v61._object = (void *)0xEB00000000656C62;
    v45.super.Class isa = v44;
    v62._countAndFlagsBits = 1936154964;
    v62._object = (void *)0xE400000000000000;
    sub_1004CBEE0(v60, v61, v45, v62, v51);

    sub_1004CF0C0();
    uint64_t v37 = v53;
  }
  else
  {
    sub_1004CF0C0();
  }
  [(objc_class *)v21 updateTagButtonAccessibility:v37];
  uint64_t v46 = v56;
  sub_10032476C((uint64_t)v52, v56);
  sub_1003247D0(v46 + *(int *)(v59 + 40), (uint64_t)v4);
  uint64_t v47 = v57;
  uint64_t v48 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v4, 1, v58) == 1)
  {
    sub_100049B74((uint64_t)v4, &qword_1006340C8);
  }
  else
  {
    unint64_t v49 = v54;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v54, v4, v48);
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v55, v49, v48);
    sub_1004CEF90();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
  }
  sub_1004CEFF0();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  sub_1004CF110();
  unint64_t v50 = sub_100320464();
  [v50 setNeedsUpdateConfiguration];

  return (objc_class *)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

char *sub_100321E34(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tags] = _swiftEmptyArrayStorage;
  uint64_t v4 = &v2[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics];
  __asm { FMOV            V0.2D, #12.0 }
  *(_OWORD *)uint64_t v4 = _Q0;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((void *)v4 + 6) = 0;
  *(int64x2_t *)(v4 + 56) = vdupq_n_s64(0x4049000000000000uLL);
  v4[72] = 1;
  uint64_t v10 = type metadata accessor for DOCPickerFilenameView.Metrics(0);
  uint64_t v11 = &v4[*(int *)(v10 + 40)];
  uint64_t v12 = sub_1004CF080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v4[*(int *)(v10 + 44)] = 0x4028000000000000;
  uint64_t v13 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_containerView;
  id v14 = objc_allocWithZone((Class)UIView);
  id v15 = v2;
  id v16 = [v14 init];
  id v17 = [self clearColor];
  [v16 setBackgroundColor:v17];

  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v2[v13] = v16;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackView] = 0;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackedThumbnailView] = 0;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameButton] = 0;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameLabel] = 0;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameTextField] = 0;
  v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tagButtonDisplaysTitle] = 1;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___tagButton] = 0;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_activeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_textStyle] = UIFontTextStyleBody;
  swift_unknownObjectWeakInit();
  *(void *)&v15[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_pickerContext] = a1;
  swift_unknownObjectWeakAssign();
  uint64_t v18 = UIFontTextStyleBody;
  id v68 = a1;

  v70.receiver = v15;
  v70.super_class = (Class)type metadata accessor for DOCPickerFilenameView(0);
  double v19 = (char *)objc_msgSendSuper2(&v70, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v19 setPreservesSuperviewLayoutMargins:1];
  sub_100322C04();
  uint64_t v20 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_containerView;
  [v19 addSubview:*(void *)&v19[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_containerView]];
  id v21 = *(id *)&v19[v20];
  id v22 = sub_1003202B8();
  [v21 addSubview:v22];

  id v23 = sub_1003202B8();
  id v24 = sub_100320384();
  [v23 addArrangedSubview:v24];

  double v25 = *(double *)&v19[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 8];
  double v26 = *(double *)&v19[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 16];
  double v27 = *(double *)&v19[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 24];
  double v28 = *(double *)&v19[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 32];
  id v67 = self;
  sub_100031648(&qword_100628240);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1004E6480;
  id v30 = [*(id *)&v19[v20] leadingAnchor];
  id v31 = [v19 layoutMarginsGuide];
  id v32 = [v31 leadingAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32 constant:v26];
  *(void *)(v29 + 32) = v33;
  id v34 = [*(id *)&v19[v20] trailingAnchor];
  id v35 = [v19 layoutMarginsGuide];
  id v36 = [v35 trailingAnchor];

  id v37 = [v34 constraintEqualToAnchor:v36 constant:-v28];
  *(void *)(v29 + 40) = v37;
  id v38 = [*(id *)&v19[v20] topAnchor];
  id v39 = [v19 topAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39 constant:v25];

  *(void *)(v29 + 48) = v40;
  id v41 = sub_1003202B8();
  id v42 = [v41 leadingAnchor];

  id v43 = [*(id *)&v19[v20] leadingAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  *(void *)(v29 + 56) = v44;
  id v45 = sub_1003202B8();
  id v46 = [v45 trailingAnchor];

  id v47 = [*(id *)&v19[v20] trailingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v29 + 64) = v48;
  sub_1004CDE50();
  sub_1000333C8(0, (unint64_t *)&unk_100628430);
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v67 activateConstraints:isa];

  id v50 = sub_1003202B8();
  id v51 = sub_100320A2C();
  [v50 addArrangedSubview:v51];

  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1004E5B40;
  id v53 = [v19 keyboardLayoutGuide];
  id v54 = [v53 topAnchor];

  id v55 = [*(id *)&v19[v20] bottomAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55 constant:12.0];

  *(void *)(v52 + 32) = v56;
  id v57 = [*(id *)&v19[v20] bottomAnchor];
  id v58 = sub_100320A2C();
  id v59 = [v58 bottomAnchor];

  id v60 = [v57 constraintEqualToAnchor:v59 constant:v27];
  *(void *)(v52 + 40) = v60;
  id v61 = sub_100320A2C();
  id v62 = [v61 topAnchor];

  id v63 = [*(id *)&v19[v20] topAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v52 + 48) = v64;
  sub_1004CDE50();
  Class v65 = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v67 activateConstraints:v65];

  sub_100322630();
  return v19;
}

void sub_100322630()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_pickerContext;
  uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_pickerContext);
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave];
  if (v4)
  {
    if (*(void *)(v4 + 16) != 1) {
      goto LABEL_8;
    }
LABEL_7:
    id v6 = *(id *)(v1 + v2);
    DOCPickerContext.firstDisplayName.getter();
    uint64_t v8 = v7;

    if (v8) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  unint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_itemsToMove];
  if (v5)
  {
    if (v5 >> 62)
    {
      id v30 = v3;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1004CF6D0();

      swift_bridgeObjectRelease();
      if (v31 != 1) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_7;
    }
  }
LABEL_8:
  v37._countAndFlagsBits = 0x6D65744920756C25;
  v37._object = (void *)0xE900000000000073;
  v38._countAndFlagsBits = 0x6F207265626D754ELL;
  v38._object = (void *)0xEF736D6574692066;
  sub_1004CC430(v37, v38);
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1004E12A0;
  uint64_t v10 = *(char **)(v1 + v2);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave];
  if (v11)
  {
    uint64_t v12 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_itemsToMove];
    if (v13)
    {
      if (v13 >> 62)
      {
        id v35 = (id)v2;
        id v32 = v10;
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1004CF6D0();

        swift_bridgeObjectRelease();
        uint64_t v12 = v33;
        uint64_t v2 = (uint64_t)v35;
      }
      else
      {
        uint64_t v12 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
  }
  *(void *)(v9 + 56) = &type metadata for Int;
  *(void *)(v9 + 64) = &protocol witness table for Int;
  *(void *)(v9 + 32) = v12;
  sub_1004CDB20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v14 = *(void *)(*(void *)(v1 + v2) + OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave);
  if (v14) {
    BOOL v15 = *(void *)(v14 + 16) == 1;
  }
  else {
    BOOL v15 = 0;
  }
  id v16 = sub_100320A2C();
  NSString v17 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v16 setText:v17];

  id v18 = sub_100320A2C();
  [v18 setEnabled:v15];

  id v19 = sub_1003202B8();
  [v19 setSpacing:*(double *)(v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics)];

  if (*(void *)(*(void *)(v1 + v2) + OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave))
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics + 72) == 1)
    {
      id v20 = sub_100320A2C();
      id v21 = sub_1003210E4();
      [v20 setRightView:v21];
    }
    else
    {
      id v20 = sub_1003202B8();
      id v21 = sub_1003210E4();
      [v20 addArrangedSubview:v21];
    }
  }
  else
  {
    id v22 = sub_1003202B8();
    id v23 = sub_1003210E4();
    [v22 removeArrangedSubview:v23];

    id v21 = sub_100320A2C();
    [v21 setRightView:0];
  }

  uint64_t v24 = *(void *)(v1 + v2);
  uint64_t v25 = *(void *)(v24 + OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_urlsToSave);
  if (v25 && *(void *)(v25 + 16))
  {
    swift_bridgeObjectRetain();
    id v26 = sub_100320384();
    sub_1004CAC10();
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v26 setURLs:isa];
LABEL_32:

    return;
  }
  unint64_t v27 = *(void *)(v24 + OBJC_IVAR____TtC14RecentsAvocado16DOCPickerContext_itemsToMove);
  if (!v27) {
    return;
  }
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v29 >= 1)
    {
      id v26 = sub_100320384();
      swift_bridgeObjectRetain();
      sub_100031648(&qword_1006274C0);
      sub_1004CF6C0();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v28)
    {
      id v26 = sub_100320384();
      swift_bridgeObjectRetain();
      sub_1004CF8A0();
LABEL_31:
      swift_bridgeObjectRelease();
      sub_100031648(&qword_1006274C0);
      Class isa = sub_1004CDE10().super.isa;
      swift_bridgeObjectRelease();
      [v26 setNodes:isa];
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_100322C04()
{
  id v1 = [self clearColor];
  [v0 setBackgroundColor:v1];

  id v2 = [self effectWithStyle:5];
  id v3 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v2];

  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v3];
  Class isa = (Class)(id)DOCConstraintsToResizeWithSuperview();
  if (!isa)
  {
    sub_1000333C8(0, (unint64_t *)&unk_100628430);
    sub_1004CDE30();
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
  }
  unint64_t v5 = self;
  [v5 activateConstraints:isa];

  id v6 = [objc_allocWithZone((Class)DOCSeparatorView) init];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v6];
  Class v7 = (Class)(id)DOCConstraintsToResizeWithSuperview();
  if (!v7)
  {
    sub_1000333C8(0, (unint64_t *)&unk_100628430);
    sub_1004CDE30();
    Class v8 = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    Class v7 = v8;
  }
  Class v9 = v7;
  objc_msgSend(v5, "activateConstraints:");
}

void sub_100322E64()
{
  id v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    id v4 = [objc_allocWithZone((Class)DOCTagEditorViewController) init];
    [v4 setDelegate:v0];
    swift_beginAccess();
    sub_1000333C8(0, (unint64_t *)&unk_100628880);
    swift_bridgeObjectRetain();
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v4 setSelectedTags:isa];

    id v6 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v4];
    sub_1004CE540(UIModalPresentationPopover);
    id v7 = [v6 popoverPresentationController];
    if (v7)
    {
      Class v8 = v7;
      [v7 setSourceView:v1];
    }
    id v9 = [v6 popoverPresentationController];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = (void *)sub_1003210E4();
      [v11 bounds];
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;
      double v19 = v18;

      id v20 = (void *)sub_1003210E4();
      objc_msgSend(v1, "convertRect:fromCoordinateSpace:", v20, v13, v15, v17, v19);
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;
      double v28 = v27;

      objc_msgSend(v10, "setSourceRect:", v22, v24, v26, v28);
    }
    [v3 presentViewController:v6 animated:1 completion:0];
  }
}

id sub_1003230D0()
{
  return sub_1003230E8(type metadata accessor for DOCPickerFilenameView);
}

id sub_1003230E8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_100323234()
{
  return type metadata accessor for DOCPickerFilenameView(0);
}

uint64_t type metadata accessor for DOCPickerFilenameView(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_100634058);
}

uint64_t sub_10032325C()
{
  uint64_t result = type metadata accessor for DOCPickerFilenameView.Metrics(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for DOCPickerFilenameView.Metrics(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_100634128);
}

void *sub_100323584(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  id v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    long long v7 = *(_OWORD *)(a2 + 7);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v8 = *(int *)(a3 + 40);
    id v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)(a1 + 56) = v7;
    uint64_t v11 = sub_1004CF080();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100031648(&qword_1006340C8);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
  }
  return v4;
}

uint64_t sub_10032372C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = sub_1004CF080();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_100323800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v10 = sub_1004CF080();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100031648(&qword_1006340C8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_100323958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1004CF080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100031648(&qword_1006340C8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_100323B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v10 = sub_1004CF080();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100031648(&qword_1006340C8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_100323C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + 64) = v8;
  uint64_t v12 = sub_1004CF080();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100031648(&qword_1006340C8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_100323E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100323E4C);
}

uint64_t sub_100323E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_100031648(&qword_1006340C8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 40);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100323F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100323F14);
}

uint64_t sub_100323F14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 72) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_100031648(&qword_1006340C8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100323FBC()
{
  sub_100324078();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100324078()
{
  if (!qword_100634138)
  {
    sub_1004CF080();
    unint64_t v0 = sub_1004CF1C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100634138);
    }
  }
}

void sub_1003240D0()
{
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tags] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_metrics];
  __asm { FMOV            V0.2D, #12.0 }
  *(_OWORD *)uint64_t v1 = _Q0;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((void *)v1 + 6) = 0;
  *(int64x2_t *)(v1 + 56) = vdupq_n_s64(0x4049000000000000uLL);
  v1[72] = 1;
  uint64_t v7 = type metadata accessor for DOCPickerFilenameView.Metrics(0);
  uint64_t v8 = &v1[*(int *)(v7 + 40)];
  uint64_t v9 = sub_1004CF080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)&v1[*(int *)(v7 + 44)] = 0x4028000000000000;
  uint64_t v10 = OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_containerView;
  id v11 = [objc_allocWithZone((Class)UIView) init];
  id v12 = [self clearColor];
  [v11 setBackgroundColor:v12];

  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v10] = v11;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___stackedThumbnailView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___filenameTextField] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_tagButtonDisplaysTitle] = 1;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView____lazy_storage___tagButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_activeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCPickerFilenameView_textStyle] = UIFontTextStyleBody;
  swift_unknownObjectWeakInit();
  uint64_t v13 = UIFontTextStyleBody;

  sub_1004CF6B0();
  __break(1u);
}

uint64_t sub_100324304(uint64_t *a1)
{
  unint64_t v2 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_62;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
    unint64_t v4 = 0;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)sub_1004CF500() : *(id *)(v2 + 8 * v4 + 32);
      int v6 = v5;
      char v7 = sub_1004CEF10();

      if (v7) {
        break;
      }
      unint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1004CF6D0();
        if (!v3) {
          goto LABEL_10;
        }
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!((unint64_t)*a1 >> 62))
    {
      if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        for (unint64_t i = v4 + 5; ; ++i)
        {
          unint64_t v2 = i - 4;
          uint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)sub_1004CF500();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v2 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          uint64_t v14 = v13;
          char v15 = sub_1004CEF10();

          if (v15) {
            goto LABEL_42;
          }
          if (v2 != v4) {
            break;
          }
LABEL_41:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_55;
          }
LABEL_42:
          unint64_t v26 = i - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_54;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v26 == v27) {
            return v4;
          }
        }
        uint64_t v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v17 = (id)sub_1004CF500();
          uint64_t v16 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_58;
            }
            if (v2 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            id v18 = *(id *)(v16 + 8 * i);
            goto LABEL_30;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v4 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v17 = *(id *)(v16 + 8 * v4 + 32);
          if ((v16 & 0xC000000000000001) == 0) {
            goto LABEL_27;
          }
        }
        id v18 = (id)sub_1004CF500();
        uint64_t v16 = *a1;
LABEL_30:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v16;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v16 < 0 || (v16 & 0x4000000000000000) != 0)
        {
          uint64_t v16 = sub_10038478C(v16);
          *a1 = v16;
        }
        id v20 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
        *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v18;

        sub_1004CDE50();
        uint64_t v21 = *a1;
        int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || v21 < 0 || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v21 = sub_10038478C(v21);
          *a1 = v21;
        }
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        uint64_t v23 = v21 & 0xFFFFFFFFFFFFFF8;
        if (v2 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_61;
        }
        double v24 = *(void **)(v23 + 8 * i);
        *(void *)(v23 + 8 * i) = v17;

        sub_1004CDE50();
        goto LABEL_41;
      }
      return v4;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10 != v29) {
      goto LABEL_16;
    }
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1003246D4()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10032470C()
{
}

uint64_t sub_100324714()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

objc_class *sub_10032474C(uint64_t a1)
{
  return sub_100321504(a1);
}

uint64_t sub_100324754(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100324764()
{
  return swift_release();
}

uint64_t sub_10032476C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCPickerFilenameView.Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003247D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648(&qword_1006340C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100324838()
{
}

uint64_t sub_100324840(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCPickerFilenameView.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10032489C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003248D4()
{
  return [*(id *)(v0 + 16) selectAll:0];
}

uint64_t sub_1003248E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

SEL *NSProgress.totalUnitMb.setter(double a1)
{
  return sub_1003249FC((SEL *)&selRef_setTotalUnitCount_, a1);
}

double NSProgress.totalUnitMb.getter()
{
  return (double)(uint64_t)[v0 totalUnitCount] / 1000000.0;
}

id *(*NSProgress.totalUnitMb.modify(uint64_t a1))(id *a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = (double)(uint64_t)[v1 totalUnitCount] / 1000000.0;
  return sub_1003249E4;
}

id *sub_1003249E4(id *a1, char a2)
{
  return sub_100324B08(a1, a2, (SEL *)&selRef_setTotalUnitCount_);
}

SEL *NSProgress.completedUnitMb.setter(double a1)
{
  return sub_1003249FC((SEL *)&selRef_setCompletedUnitCount_, a1);
}

SEL *sub_1003249FC(SEL *result, double a2)
{
  double v3 = a2 * 1000000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18) {
    return (SEL *)objc_msgSend(v2, *result, (uint64_t)v3);
  }
LABEL_7:
  __break(1u);
  return result;
}

double NSProgress.completedUnitMb.getter()
{
  return (double)(uint64_t)[v0 completedUnitCount] / 1000000.0;
}

id *(*NSProgress.completedUnitMb.modify(uint64_t a1))(id *a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = (double)(uint64_t)[v1 completedUnitCount] / 1000000.0;
  return sub_100324AFC;
}

id *sub_100324AFC(id *a1, char a2)
{
  return sub_100324B08(a1, a2, (SEL *)&selRef_setCompletedUnitCount_);
}

id *sub_100324B08(id *result, char a2, SEL *a3)
{
  double v3 = *(double *)result * 1000000.0;
  BOOL v4 = (*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000;
  if ((a2 & 1) == 0) {
    goto LABEL_6;
  }
  if ((*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  BOOL v4 = v3 == 9.22337204e18;
  if (v3 < 9.22337204e18) {
    return (id *)objc_msgSend(result[1], *a3, (uint64_t)v3);
  }
  __break(1u);
LABEL_6:
  if (v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 9.22337204e18) {
    return (id *)objc_msgSend(result[1], *a3, (uint64_t)v3);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCProgressUI()
{
  return self;
}

objc_class *sub_100324BD0(uint64_t a1)
{
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v1 = sub_1004CDB50();
  uint64_t v3 = v2;
  if (v1 == sub_1004CDB50() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
LABEL_7:
      uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        unint64_t v8 = result;
        v14._countAndFlagsBits = 0x8000000100530030;
        v9._countAndFlagsBits = 0x6E69726170657250;
        v9._object = (void *)0xAC000000A680E267;
        v10._countAndFlagsBits = 0x617A696C61636F4CLL;
        v10._object = (void *)0xEB00000000656C62;
        v11.super.Class isa = v8;
        v12._countAndFlagsBits = 0x6E69726170657250;
        v12._object = (void *)0xAC000000A680E267;
LABEL_12:
        uint64_t v13 = sub_1004CBEE0(v9, v10, v11, v12, v14);

        return (objc_class *)v13;
      }
      __break(1u);
      goto LABEL_14;
    }
  }
  uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    unint64_t v8 = result;
    v14._countAndFlagsBits = 0x80000001005300B0;
    v9._object = (void *)0x8000000100530090;
    v9._countAndFlagsBits = 0x1000000000000014;
    v10._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10._object = (void *)0xEB00000000656C62;
    v11.super.Class isa = v8;
    v12._countAndFlagsBits = 0x1000000000000014;
    v12._object = (void *)0x8000000100530090;
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
  return result;
}

id sub_100324D90(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_metrics];
  __asm { FMOV            V1.2D, #4.0 }
  *(_OWORD *)uint64_t v3 = xmmword_1004ED400;
  *((_OWORD *)v3 + 1) = _Q1;
  *((void *)v3 + 4) = 0x4010000000000000;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar] = 1;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButtonContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel] = a1;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateFooterView();
  swift_retain();
  id v9 = objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100324FF4();

  swift_release();
  return v9;
}

void sub_100324EC0(uint64_t a1, void *a2, uint64_t a3)
{
}

uint64_t sub_100324EF0(uint64_t a1, void *a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  sub_100328200(a2, a3, a4, a5);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    v9[4] = sub_100328884;
    v9[5] = v7;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1003A422C;
    v9[3] = &unk_1005CD628;
    unint64_t v8 = _Block_copy(v9);
    swift_unknownObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100324FF4()
{
  id v1 = sub_100325ED8();
  [v0 addSubview:v1];

  uint64_t v2 = self;
  sub_100031648(&qword_100628240);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1004E5E40;
  id v4 = sub_100325ED8();
  id v5 = [v4 leadingAnchor];

  id v6 = [v0 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = sub_100325ED8();
  id v9 = [v8 trailingAnchor];

  id v10 = [v0 trailingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v3 + 40) = v11;
  id v12 = sub_100325ED8();
  id v13 = [v12 topAnchor];

  id v14 = [v0 topAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v3 + 48) = v15;
  id v16 = sub_100325ED8();
  id v17 = [v16 bottomAnchor];

  id v18 = [v0 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v3 + 56) = v19;
  sub_1004CDE50();
  sub_1000333C8(0, (unint64_t *)&unk_100628430);
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

char *sub_100325284()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar;
  uint64_t v2 = *(char **)(v0 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar);
  uint64_t v3 = v2;
  if (v2 == (char *)1)
  {
    uint64_t v3 = sub_1003252F4(v0);
    id v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_10005AC04(v4);
  }
  sub_10005AC14(v2);
  return v3;
}

char *sub_1003252F4(uint64_t a1)
{
  swift_retain();
  uint64_t v2 = sub_1003C0180();
  swift_release();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorView());
  swift_retain();
  id v4 = sub_100407FE4(0, v2, v3, 0.3);
  id v5 = self;
  sub_100031648(&qword_100628240);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1004E5E30;
  id v7 = [v4 heightAnchor];
  uint64_t v8 = a1 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_metrics;
  id v9 = [v7 constraintEqualToConstant:*(double *)(a1 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_metrics)];

  *(void *)(v6 + 32) = v9;
  id v10 = [v4 widthAnchor];
  id v11 = [v10 constraintEqualToConstant:*(double *)(v8 + 8)];

  LODWORD(v12.rawValue) = (__C::UILayoutPriority)1144750080;
  Class isa = sub_1004CE720(v12).super.isa;

  *(void *)(v6 + 40) = isa;
  sub_1004CDE50();
  sub_1000333C8(0, (unint64_t *)&unk_100628430);
  Class v14 = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:v14];
  swift_release();

  return v4;
}

id sub_1003254E4()
{
  return sub_1003257F8(&OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_100325504);
}

id sub_100325504(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  LODWORD(v6) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v6];
  LODWORD(v7) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v7];
  return v2;
}

id sub_100325640()
{
  return sub_1003257F8(&OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_100325660);
}

id sub_100325660(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  id v6 = [self secondaryLabelColor];
  [v2 setTextColor:v6];

  LODWORD(v7) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v7];
  LODWORD(v8) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v8];
  return v2;
}

id sub_1003257D8()
{
  return sub_1003257F8(&OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel, (uint64_t (*)(uint64_t))sub_10032585C);
}

id sub_1003257F8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    double v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_10032585C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  id v6 = [self secondaryLabelColor];
  [v2 setTextColor:v6];

  NSString v7 = sub_1004CDB10();
  [v2 setText:v7];

  LODWORD(v8) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v8];
  LODWORD(v9) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v9];
  return v2;
}

id sub_1003259EC()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton);
  }
  else
  {
    id v4 = sub_100325A4C();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100325A4C()
{
  uint64_t v0 = sub_100031648(&qword_100628758);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1004CF000();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1004CF0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)UIButton) init];
  sub_1004CF0B0();

  sub_1004CEFF0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v3);
  sub_1004CF020();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  sub_1004CF110();
  [v11 setDeliversTouchesForGesturesToSuperview:0];
  LODWORD(v12) = 1148846080;
  [v11 setContentCompressionResistancePriority:0 forAxis:v12];
  LODWORD(v13) = 1148846080;
  [v11 setContentHuggingPriority:0 forAxis:v13];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

id sub_100325D10()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:0];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_metrics + 16)];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100325DF4()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:0];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_metrics + 24)];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100325ED8()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:1];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_metrics + 32)];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100325FBC(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      id v6 = a1;
      id v7 = sub_1003254E4();
      id v8 = [v6 title];
      [v7 setText:v8];

      sub_1003288A4(a1, 1);
      return;
    }
    switch((unint64_t)a1)
    {
      case 1uLL:
        uint64_t v21 = (objc_class *)(id)_DocumentManagerBundle();
        if (!v21) {
          goto LABEL_36;
        }
        int v22 = v21;
        v47._countAndFlagsBits = 0x8000000100530440;
        v51._countAndFlagsBits = 0x77206465636E7953;
        v51._object = (void *)0xEE00402520687469;
        v55._countAndFlagsBits = 0x617A696C61636F4CLL;
        v55._object = (void *)0xEB00000000656C62;
        v23.super.Class isa = v22;
        v59._countAndFlagsBits = 0;
        v59._object = (void *)0xE000000000000000;
        sub_1004CBEE0(v51, v55, v23, v59, v47);

        sub_100031648((uint64_t *)&unk_100627480);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1004E12A0;
        double v25 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel)
                       + 32);
        swift_retain();
        id v26 = v25;
        if (![v26 isiCloudDriveProvider]) {
          goto LABEL_29;
        }
        goto LABEL_19;
      case 2uLL:
        uint64_t v27 = (objc_class *)(id)_DocumentManagerBundle();
        if (!v27) {
          goto LABEL_37;
        }
        uint64_t v28 = v27;
        v47._countAndFlagsBits = 0x80000001005303A0;
        v52._countAndFlagsBits = 0x20676E69636E7953;
        v52._object = (void *)0xEF40252068746977;
        v56._countAndFlagsBits = 0x617A696C61636F4CLL;
        v56._object = (void *)0xEB00000000656C62;
        v29.super.Class isa = v28;
        v60._countAndFlagsBits = 0;
        v60._object = (void *)0xE000000000000000;
        sub_1004CBEE0(v52, v56, v29, v60, v47);

        sub_100031648((uint64_t *)&unk_100627480);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1004E12A0;
        id v30 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel)
                       + 32);
        swift_retain();
        id v26 = v30;
        if ([v26 isiCloudDriveProvider])
        {
LABEL_19:
          uint64_t v31 = 0x64756F6C4369;
          swift_release();

          unint64_t v32 = 0xE600000000000000;
        }
        else
        {
LABEL_29:
          id v45 = [v26 providerDisplayName];
          uint64_t v31 = sub_1004CDB50();
          unint64_t v32 = v46;
          swift_release();
        }
        *(void *)(v24 + 56) = &type metadata for String;
        *(void *)(v24 + 64) = sub_1000334C4();
        *(void *)(v24 + 32) = v31;
        *(void *)(v24 + 40) = v32;
        sub_1004CDB20();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v33 = sub_1003254E4();
        id v48 = sub_1004CDB10();
        goto LABEL_31;
      case 4uLL:
        id v33 = sub_1003254E4();
        id v34 = (objc_class *)(id)_DocumentManagerBundle();
        if (!v34) {
          goto LABEL_38;
        }
        id v35 = v34;
        v47._countAndFlagsBits = 0x80000001005302C0;
        v53._countAndFlagsBits = 0x676E697461647055;
        v53._object = (void *)0xAB00000000A680E2;
        v57._countAndFlagsBits = 0x617A696C61636F4CLL;
        v57._object = (void *)0xEB00000000656C62;
        v36.super.Class isa = v35;
        v61._countAndFlagsBits = 0;
        v61._object = (void *)0xE000000000000000;
        sub_1004CBEE0(v53, v57, v36, v61, v47);

        goto LABEL_28;
      default:
        Class v14 = (objc_class *)(id)_DocumentManagerBundle();
        uint64_t v15 = v14;
        if (a4)
        {
          if (v14)
          {
            v47._countAndFlagsBits = 0x8000000100530540;
            v16._object = (void *)0x8000000100530520;
            v16._countAndFlagsBits = 0xD000000000000011;
            goto LABEL_24;
          }
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
        }
        else if (v14)
        {
          v16._countAndFlagsBits = 0xD000000000000016;
          v47._countAndFlagsBits = 0x80000001005304A0;
          v16._object = (void *)0x8000000100530480;
LABEL_24:
          v58._countAndFlagsBits = 0x617A696C61636F4CLL;
          v58._object = (void *)0xEB00000000656C62;
          v37.super.Class isa = v15;
          v62._countAndFlagsBits = 0;
          v62._object = (void *)0xE000000000000000;
          sub_1004CBEE0(v16, v58, v37, v62, v47);

          id v33 = sub_1003254E4();
          sub_100031648((uint64_t *)&unk_100627480);
          uint64_t v38 = swift_allocObject();
          *(_OWORD *)(v38 + 16) = xmmword_1004E12A0;
          id v39 = *(void **)(*(void *)(v4
                                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel)
                         + 32);
          swift_retain();
          id v40 = v39;
          if ([v40 isiCloudDriveProvider])
          {
            uint64_t v41 = 0x64756F6C4369;
            swift_release();

            unint64_t v42 = 0xE600000000000000;
          }
          else
          {
            id v43 = [v40 providerDisplayName];
            uint64_t v41 = sub_1004CDB50();
            unint64_t v42 = v44;
            swift_release();
          }
          *(void *)(v38 + 56) = &type metadata for String;
          *(void *)(v38 + 64) = sub_1000334C4();
          *(void *)(v38 + 32) = v41;
          *(void *)(v38 + 40) = v42;
          sub_1004CDB20();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          id v48 = sub_1004CDB10();
LABEL_31:
          swift_bridgeObjectRelease();
          [v33 setText:v48];

          goto LABEL_32;
        }
        __break(1u);
        JUMPOUT(0x100326780);
    }
  }
  uint64_t v9 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel) + 32);
  swift_retain();
  id v10 = v9;
  if ([v10 isiCloudDriveProvider])
  {
    uint64_t v11 = 0x64756F6C4369;
    swift_release();

    unint64_t v12 = 0xE600000000000000;
  }
  else
  {
    id v17 = [v10 providerDisplayName];
    uint64_t v11 = sub_1004CDB50();
    unint64_t v12 = v18;
    swift_release();
  }
  v50._countAndFlagsBits = 0xD000000000000017;
  v54._countAndFlagsBits = 0xD00000000000006CLL;
  v50._object = (void *)0x8000000100530310;
  v54._object = (void *)0x8000000100530330;
  sub_1004CC430(v50, v54);
  id v19 = sub_1003254E4();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1004E5790;
  *(void *)(v20 + 56) = &type metadata for Int;
  *(void *)(v20 + 64) = &protocol witness table for Int;
  *(void *)(v20 + 32) = a1;
  *(void *)(v20 + 96) = &type metadata for String;
  *(void *)(v20 + 104) = sub_1000334C4();
  *(void *)(v20 + 72) = v11;
  *(void *)(v20 + 80) = v12;
  sub_1004CDB20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v48 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v19 setText:v48];

LABEL_32:
}

void sub_100326794(void *a1, char a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1004CA900();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100031648(&qword_10063AF80);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v60 - v11;
  uint64_t v13 = sub_100031648(&qword_100628758);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  Swift::String v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  id v19 = (char *)&v60 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  int v22 = (char *)&v60 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v60 - v23;
  if (!a2)
  {
LABEL_9:
    id v30 = (objc_class *)(id)_DocumentManagerBundle();
    if (v30)
    {
      uint64_t v31 = v30;
      v59._countAndFlagsBits = 0x8000000100530200;
      v63._countAndFlagsBits = 0x6573756150;
      v63._object = (void *)0xE500000000000000;
      v65._countAndFlagsBits = 0x617A696C61636F4CLL;
      v65._object = (void *)0xEB00000000656C62;
      v32.super.Class isa = v31;
      v67._countAndFlagsBits = 0;
      v67._object = (void *)0xE000000000000000;
      sub_1004CBEE0(v63, v65, v32, v67, v59);

      id v28 = sub_1003259EC();
      sub_1004CF100();
      uint64_t v33 = sub_1004CF0E0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v24, 1, v33))
      {
        swift_bridgeObjectRelease();
        sub_1000FFD88((uint64_t)v24, (uint64_t)v22);
        sub_1004CF110();

        sub_1000C9690((uint64_t)v24);
        goto LABEL_26;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      unint64_t v49 = UIFontTextStyleFootnote;
      id v50 = [v3 traitCollection];
      sub_1004CA8F0();
      sub_1004CA890();
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      swift_getKeyPath();
      id v61 = [self preferredFontForTextStyle:v49 compatibleWithTraitCollection:v50];
      sub_1000C8374();
      sub_1004CA7F0();
      swift_bridgeObjectRelease();

      uint64_t v52 = sub_1004CA880();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v12, 0, 1, v52);
      sub_1004CF040();
      sub_1004CF110();

      goto LABEL_26;
    }
    goto LABEL_32;
  }
  if (a2 != 1)
  {
    if (a2 != 2) {
      return;
    }
    if (a1 != (void *)2)
    {
      if (a1 != (void *)3) {
        return;
      }
      double v25 = (objc_class *)(id)_DocumentManagerBundle();
      if (v25)
      {
        id v26 = v25;
        v59._countAndFlagsBits = 0x80000001005301C0;
        v62._countAndFlagsBits = 0x656D75736552;
        v62._object = (void *)0xE600000000000000;
        v64._countAndFlagsBits = 0x617A696C61636F4CLL;
        v64._object = (void *)0xEB00000000656C62;
        v27.super.Class isa = v26;
        v66._countAndFlagsBits = 0;
        v66._object = (void *)0xE000000000000000;
        sub_1004CBEE0(v62, v64, v27, v66, v59);

        id v28 = sub_1003259EC();
        sub_1004CF100();
        uint64_t v29 = sub_1004CF0E0();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v19, 1, v29))
        {
          swift_bridgeObjectRelease();
          sub_1000FFD88((uint64_t)v19, (uint64_t)v22);
          sub_1004CF110();

          sub_1000C9690((uint64_t)v19);
LABEL_26:
          id v53 = sub_1003259EC();
          [v53 setUserInteractionEnabled:1];

          id v54 = sub_1003259EC();
          sub_1000333C8(0, (unint64_t *)&qword_100628760);
          uint64_t v55 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = v55;
          *(void *)(v56 + 24) = v3;
          id v57 = v3;
          Swift::String v58 = (void *)sub_1004CEF50();
          objc_msgSend(v54, "setDoc_primaryAction:", v58);

          return;
        }
        goto LABEL_25;
      }
LABEL_33:
      __break(1u);
      return;
    }
    goto LABEL_9;
  }
  id v34 = [a1 actions];
  sub_1000333C8(0, &qword_10062C248);
  unint64_t v35 = sub_1004CDE30();

  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    NSBundle v36 = (void *)sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v36) {
      goto LABEL_18;
    }
  }
  else
  {
    NSBundle v36 = *(void **)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v36) {
      goto LABEL_18;
    }
  }
  if ((v35 & 0xC000000000000001) != 0)
  {
    id v37 = (id)sub_1004CF500();
  }
  else
  {
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    id v37 = *(id *)(v35 + 32);
  }
  NSBundle v36 = v37;
LABEL_18:
  swift_bridgeObjectRelease();
  id v38 = sub_1003259EC();
  sub_1004CF100();
  uint64_t v39 = sub_1004CF0E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v16, 1, v39))
  {
    sub_1000FFD88((uint64_t)v16, (uint64_t)v22);
    sub_1004CF110();

    sub_1000C9690((uint64_t)v16);
  }
  else
  {
    if (v36)
    {
      id v40 = [v36 title];
      sub_1004CDB50();
    }
    swift_bridgeObjectRetain();
    Swift::String v60 = UIFontTextStyleFootnote;
    id v41 = [v3 traitCollection];
    sub_1004CA8F0();
    sub_1004CA890();
    uint64_t v42 = swift_getKeyPath();
    __chkstk_darwin(v42);
    swift_getKeyPath();
    id v43 = self;
    unint64_t v44 = v60;
    id v61 = [v43 preferredFontForTextStyle:v60 compatibleWithTraitCollection:v41];
    sub_1000C8374();
    sub_1004CA7F0();
    swift_bridgeObjectRelease();

    uint64_t v45 = sub_1004CA880();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v10, 0, 1, v45);
    sub_1004CF040();
    sub_1004CF110();
  }
  id v46 = sub_1003259EC();
  sub_1000333C8(0, (unint64_t *)&qword_100628760);
  *(void *)(swift_allocObject() + 16) = v36;
  id v47 = v36;
  id v48 = (void *)sub_1004CEF50();
  objc_msgSend(v46, "setDoc_primaryAction:", v48);

  sub_1003288A4(a1, 1);
}

id sub_10032733C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1004CA900();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100031648(&qword_10063AF80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100031648(&qword_100628758);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      Swift::String v16 = (objc_class *)result;
      v25._countAndFlagsBits = 0x8000000100530280;
      v27._countAndFlagsBits = 0x676E696D75736552;
      v27._object = (void *)0xAB00000000A680E2;
      v28._countAndFlagsBits = 0x617A696C61636F4CLL;
      v28._object = (void *)0xEB00000000656C62;
      v17.super.Class isa = v16;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      sub_1004CBEE0(v27, v28, v17, v29, v25);

      id v18 = sub_1003259EC();
      sub_1004CF100();
      uint64_t v19 = sub_1004CF0E0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v13, 1, v19))
      {
        swift_bridgeObjectRelease();
        sub_1000FFD88((uint64_t)v13, (uint64_t)v11);
        sub_1004CF110();

        sub_1000C9690((uint64_t)v13);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = UIFontTextStyleFootnote;
        id v21 = [a3 traitCollection];
        sub_1004CA8F0();
        sub_1004CA890();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        id v26 = [self preferredFontForTextStyle:v20 compatibleWithTraitCollection:v21];
        sub_1000C8374();
        sub_1004CA7F0();
        swift_bridgeObjectRelease();

        uint64_t v23 = sub_1004CA880();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 0, 1, v23);
        sub_1004CF040();
        sub_1004CF110();
      }
      id v24 = sub_1003259EC();
      [v24 setUserInteractionEnabled:0];

      swift_retain();
      sub_1003BFC1C();

      return (id)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_100327748(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1004CA900();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100031648(&qword_10063AF80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100031648(&qword_100628758);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      Swift::String v16 = (objc_class *)result;
      v25._countAndFlagsBits = 0x8000000100530240;
      v27._countAndFlagsBits = 0xE2676E6973756150;
      v27._object = (void *)0xAA0000000000A680;
      v28._countAndFlagsBits = 0x617A696C61636F4CLL;
      v28._object = (void *)0xEB00000000656C62;
      v17.super.Class isa = v16;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      sub_1004CBEE0(v27, v28, v17, v29, v25);

      id v18 = sub_1003259EC();
      sub_1004CF100();
      uint64_t v19 = sub_1004CF0E0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v13, 1, v19))
      {
        swift_bridgeObjectRelease();
        sub_1000FFD88((uint64_t)v13, (uint64_t)v11);
        sub_1004CF110();

        sub_1000C9690((uint64_t)v13);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = UIFontTextStyleFootnote;
        id v21 = [a3 traitCollection];
        sub_1004CA8F0();
        sub_1004CA890();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        id v26 = [self preferredFontForTextStyle:v20 compatibleWithTraitCollection:v21];
        sub_1000C8374();
        sub_1004CA7F0();
        swift_bridgeObjectRelease();

        uint64_t v23 = sub_1004CA880();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 0, 1, v23);
        sub_1004CF040();
        sub_1004CF110();
      }
      id v24 = sub_1003259EC();
      [v24 setUserInteractionEnabled:0];

      swift_retain();
      sub_1003BFBF4();

      return (id)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100327B50(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a4;
  id v7 = sub_100325D10();
  id v8 = [v7 arrangedSubviews];

  sub_1000333C8(0, (unint64_t *)&qword_10062BA40);
  unint64_t v9 = sub_1004CDE30();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)sub_1004CF500();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    ++v11;
    id v14 = sub_100325D10();
    objc_msgSend(v14, "removeArrangedSubview:", v13, v28);

    [v13 removeFromSuperview];
  }
  while (v10 != v11);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v15 = *(void *)(v5 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel);
  Swift::String v16 = *(void **)(v15 + 160);
  swift_retain();
  if (v16) {
    BOOL v17 = [v16 contentType] == 0;
  }
  else {
    BOOL v17 = 0;
  }
  unsigned int v18 = objc_msgSend(*(id *)(v15 + 32), "isSyncStateMessagingSupported", v28);
  swift_release();
  if (v18 && !v17)
  {
    id v19 = sub_100325D10();
    id v20 = sub_1003254E4();
    [v19 addArrangedSubview:v20];
  }
  swift_retain();
  if (sub_1003C1E30())
  {
    sub_1003C1CCC();
    uint64_t v22 = v21;
    swift_release();
    if (v22 > 0)
    {
      id v24 = sub_100325D10();
      id v25 = sub_1003257D8();
      [v24 addArrangedSubview:v25];

      id v26 = sub_100325D10();
      id v27 = sub_1003259EC();
      [v26 addArrangedSubview:v27];
    }
  }
  else
  {
    swift_release();
  }
  sub_100325FBC(a1, a2, v23, v29);
  sub_100326794(a1, a2);
}

void sub_100327E18(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  id v9 = sub_100325DF4();
  id v10 = [v9 arrangedSubviews];

  sub_1000333C8(0, (unint64_t *)&qword_10062BA40);
  unint64_t v11 = sub_1004CDE30();

  id v38 = a1;
  id v12 = a2;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1004CF6D0();
    if (!v13) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_10;
    }
  }
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v14 = 0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v15 = (id)sub_1004CF500();
    }
    else {
      id v15 = *(id *)(v11 + 8 * v14 + 32);
    }
    Swift::String v16 = v15;
    ++v14;
    id v17 = sub_100325DF4();
    [v17 removeArrangedSubview:v16];

    [v16 removeFromSuperview];
  }
  while (v13 != v14);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v18 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel;
  swift_retain();
  char v19 = sub_1003C07B4();
  swift_release();
  if (v19)
  {
    id v20 = sub_100325DF4();
    id v21 = sub_100325640();
    [v20 addArrangedSubview:v21];
  }
  uint64_t v22 = *(void *)(v6 + v18);
  uint64_t v23 = *(void **)(v22 + 160);
  char v5 = (char)v12;
  id v12 = v38;
  if (v23)
  {
    swift_retain();
    if ([v23 contentType] != (id)2 || (id v24 = *(void **)(v22 + 160)) == 0)
    {
      swift_release();
      goto LABEL_20;
    }
    id v25 = [v24 actions];
    sub_1000333C8(0, &qword_10062C248);
    unint64_t v26 = sub_1004CDE30();

    if (!(v26 >> 62))
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
      goto LABEL_17;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1004CF6D0();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    if (v27 > 0)
    {
      id v28 = sub_100325DF4();
      id v29 = sub_1003257D8();
      [v28 addArrangedSubview:v29];

      id v30 = sub_100325DF4();
      id v31 = sub_1003259EC();
      [v30 addArrangedSubview:v31];
    }
  }
LABEL_20:
  if (v5 == 1)
  {
    id v34 = v12;
    id v35 = sub_100325640();
    id v36 = [v34 subTitle];
    [v35 setText:v36];

    sub_1003288A4(v12, 1);
  }
  else if (v5 == 2 && !v12)
  {
    id v32 = sub_100325640();
    if (a4) {
      NSString v33 = sub_1004CDB10();
    }
    else {
      NSString v33 = 0;
    }
    [v32 setText:v33];
  }
  sub_100326794(v12, v5);
}

void sub_100328200(void *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v7 = sub_100325ED8();
  id v8 = [v7 arrangedSubviews];

  sub_1000333C8(0, (unint64_t *)&qword_10062BA40);
  unint64_t v9 = sub_1004CDE30();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)sub_1004CF500();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    ++v11;
    id v14 = sub_100325ED8();
    [v14 removeArrangedSubview:v13];

    [v13 removeFromSuperview];
  }
  while (v10 != v11);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v15 = OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_viewModel;
  swift_retain();
  sub_1003C04D4();
  char v17 = v16;
  swift_release();
  if (v17)
  {
    uint64_t v18 = sub_100325284();
    if (v18)
    {
      char v19 = v18;
      id v20 = sub_100325ED8();
      [v20 addArrangedSubview:v19];

      id v38 = self;
      sub_100031648(&qword_100628240);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1004E5710;
      id v22 = [v19 widthAnchor];
      id v23 = sub_100325ED8();
      id v24 = [v23 widthAnchor];

      id v25 = [v22 constraintLessThanOrEqualToAnchor:v24];
      *(void *)(v21 + 32) = v25;
      sub_1004CDE50();
      sub_1000333C8(0, (unint64_t *)&unk_100628430);
      Class isa = sub_1004CDE10().super.isa;
      swift_bridgeObjectRelease();
      [v38 activateConstraints:isa];
    }
  }
  uint64_t v27 = *(void *)(v5 + v15);
  id v28 = *(void **)(v27 + 160);
  swift_retain();
  if (v28) {
    BOOL v29 = [v28 contentType] == 0;
  }
  else {
    BOOL v29 = 0;
  }
  if ([*(id *)(v27 + 32) isSyncStateMessagingSupported] && !v29)
  {
    swift_release();
LABEL_21:
    id v32 = sub_100325ED8();
    id v33 = sub_100325D10();
    [v32 addArrangedSubview:v33];

    goto LABEL_23;
  }
  if ((sub_1003C1E30() & 1) == 0)
  {
    swift_release();
    goto LABEL_23;
  }
  sub_1003C1CCC();
  uint64_t v31 = v30;
  swift_release();
  if (v31 > 0) {
    goto LABEL_21;
  }
LABEL_23:
  swift_retain();
  char v34 = sub_1003C066C();
  swift_release();
  if (v34)
  {
    id v36 = sub_100325ED8();
    id v37 = sub_100325DF4();
    [v36 addArrangedSubview:v37];
  }
  sub_100327B50(a1, a2, v35, a4);
  sub_100327E18(a1, (void *)a2, a3, a4);
}

void sub_100328638()
{
  sub_1000391D4(v0 + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView_delegate);
  swift_release();
  sub_10005AC04(*(id *)(v0
                      + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleLabel));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___actionButtonContainerView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC14RecentsAvocado34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer);
}

id sub_100328708()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateFooterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCFileProviderSyncStateFooterView()
{
  return self;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateFooterView.Metrics()
{
  return &type metadata for DOCFileProviderSyncStateFooterView.Metrics;
}

uint64_t sub_10032884C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100328884()
{
}

uint64_t sub_10032888C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10032889C()
{
  return swift_release();
}

void sub_1003288A4(id a1, char a2)
{
  if (a2 == 1) {
}
  }

uint64_t sub_1003288C4()
{
  return 8;
}

uint64_t sub_1003288D0()
{
  return swift_release();
}

uint64_t sub_1003288D8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1003288EC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003288F8()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100328934(uint64_t a1)
{
  return sub_10032733C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_100328940(uint64_t a1)
{
  return sub_100327748(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void *sub_100328950(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    unint64_t v26 = _swiftEmptyArrayStorage;
    sub_1004CF590();
    id result = (void *)sub_10038C5F8(a1);
    uint64_t v4 = (uint64_t)result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v19 = v7;
      sub_100033138(*(void *)(a1 + 48) + 40 * v4, (uint64_t)v24);
      id v25 = *(void **)(*(void *)(a1 + 56) + 8 * v4);
      uint64_t v11 = v25;
      sub_100033138((uint64_t)v24, (uint64_t)v22);
      *((void *)&v23 + 1) = v11;
      v20[0] = v22[0];
      v20[1] = v22[1];
      long long v21 = v23;
      id v12 = v11;
      sub_100049B74((uint64_t)v24, (uint64_t *)&unk_100634438);
      id v13 = *((id *)&v21 + 1);
      sub_100049B74((uint64_t)v20, (uint64_t *)&unk_100634438);
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      id result = (void *)sub_1004CF570();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(v8 + 8 * v10);
      if ((v14 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        int64_t v9 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v16 = v10 + 1;
        unint64_t v17 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v8 + 8 * v16);
          if (v18)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v10)
            {
              unint64_t v18 = *(void *)(a1 + 80 + 8 * v10++);
              if (v18)
              {
                unint64_t v16 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v19 + 1;
      uint64_t v4 = v9;
      if (v19 + 1 == v2) {
        return v26;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void *sub_100328B8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v55 = a2;
  uint64_t v4 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v4 - 8);
  Swift::String v63 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCOperationItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1004CAC10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v62 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v67 = (char *)v44 - v14;
  uint64_t v48 = sub_100031648(&qword_10062F8F0);
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v15 = __chkstk_darwin(v48);
  uint64_t v49 = (uint64_t)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  id v46 = (char *)v44 - v18;
  __chkstk_darwin(v17);
  uint64_t v45 = (uint64_t)v44 - v19;
  uint64_t v56 = *(void *)(a1 + 16);
  if (!v56) {
    return _swiftEmptyArrayStorage;
  }
  v44[1] = v2;
  uint64_t v61 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  objc_super v70 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v20 = v11 + 56;
  Swift::String v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v65 = v11 + 16;
  uint64_t v50 = v11;
  id v68 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v60 = *(void *)(v7 + 72);
  v44[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  Swift::String v51 = _swiftEmptyArrayStorage;
  id v22 = v63;
  long long v23 = v67;
  uint64_t v24 = v56;
  id v53 = v9;
  uint64_t v54 = v6;
  do
  {
    sub_100293A60(v61 + v60 * v21, (uint64_t)v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100293AD0((uint64_t)v9);
    }
    else
    {
      id v25 = &v9[*(int *)(sub_100031648(&qword_100634430) + 48)];
      uint64_t v26 = *((void *)v25 + 1);
      uint64_t v57 = *(void *)v25;
      uint64_t v69 = *v70;
      v69(v23, v9, v10);
      uint64_t v59 = v26;
      if (v26)
      {
        uint64_t v27 = *v55;
        uint64_t v28 = *(void *)(*v55 + 16);
        uint64_t v58 = *v55;
        if (v28)
        {
          unint64_t v52 = v20 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          uint64_t v29 = v27 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
          uint64_t v66 = *(void *)(v50 + 72);
          uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
          swift_bridgeObjectRetain();
          while (1)
          {
            v30(v22, v29, v10);
            uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v20;
            (*(void (**)(char *, void, uint64_t, uint64_t))v20)(v22, 0, 1, v10);
            if ((*v64)(v22, 1, v10) == 1) {
              break;
            }
            uint64_t v32 = v20;
            id v33 = v62;
            v69(v62, v22, v10);
            sub_10033B51C((unint64_t *)&unk_10062DAA8, (void (*)(uint64_t))&type metadata accessor for URL);
            char v34 = sub_1004CDAA0();
            (*v68)(v33, v10);
            if (v34)
            {
              swift_bridgeObjectRelease();
              uint64_t v35 = (uint64_t)v46;
              id v36 = &v46[*(int *)(v48 + 48)];
              long long v23 = v67;
              v69(v46, v67, v10);
              uint64_t v37 = v59;
              *(void *)id v36 = v57;
              *((void *)v36 + 1) = v37;
              uint64_t v38 = v45;
              sub_100031790(v35, v45, &qword_10062F8F0);
              sub_100031790(v38, v49, &qword_10062F8F0);
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                int64_t v9 = v53;
                uint64_t v20 = v32;
                unint64_t v39 = (unint64_t)v51;
              }
              else
              {
                unint64_t v39 = sub_100237D78(0, v51[2] + 1, 1, (unint64_t)v51);
                int64_t v9 = v53;
                uint64_t v20 = v32;
              }
              unint64_t v41 = *(void *)(v39 + 16);
              unint64_t v40 = *(void *)(v39 + 24);
              if (v41 >= v40 >> 1) {
                unint64_t v39 = sub_100237D78(v40 > 1, v41 + 1, 1, v39);
              }
              *(void *)(v39 + 16) = v41 + 1;
              unint64_t v42 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
              Swift::String v51 = (void *)v39;
              sub_100031790(v49, v39 + v42 + *(void *)(v47 + 72) * v41, &qword_10062F8F0);
              id v22 = v63;
              goto LABEL_22;
            }
            v29 += v66;
            --v28;
            id v22 = v63;
            uint64_t v20 = v32;
            if (!v28) {
              goto LABEL_15;
            }
          }
        }
        else
        {
          uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v20;
          swift_bridgeObjectRetain();
LABEL_15:
          v31(v22, 1, 1, v10);
        }
        swift_bridgeObjectRelease();
        long long v23 = v67;
        (*v68)(v67, v10);
        swift_bridgeObjectRelease();
        int64_t v9 = v53;
LABEL_22:
        uint64_t v24 = v56;
      }
      else
      {
        (*v68)(v23, v10);
      }
    }
    ++v21;
  }
  while (v21 != v24);
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_100329248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1004CF9E0();
    sub_1004CDC80();
    Swift::Int v6 = sub_1004CFA30();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1004CF890() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1004CF890() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100329380(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1004CDB50();
    sub_1004CF9E0();
    sub_1004CDC80();
    Swift::Int v3 = sub_1004CFA30();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_1004CDB50();
      uint64_t v9 = v8;
      if (v7 == sub_1004CDB50() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_1004CF890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_1004CDB50();
          uint64_t v17 = v16;
          if (v15 == sub_1004CDB50() && v17 == v18) {
            break;
          }
          char v20 = sub_1004CF890();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100329548(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1004CF9E0();
    sub_1004CDC80();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_1004CFA30();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 7368564;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            uint64_t v10 = 0x796C746E65636572;
            unint64_t v9 = 0xEC00000064657355;
            break;
          case 2:
            uint64_t v10 = 0x6E6F697461636F6CLL;
            goto LABEL_8;
          case 3:
            uint64_t v10 = 0x657469726F766166;
LABEL_8:
            unint64_t v9 = 0xE900000000000073;
            break;
          case 4:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x73726576726573;
            break;
          case 5:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1936154996;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7368564;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xEC00000064657355;
            if (v10 == 0x796C746E65636572) {
              goto LABEL_20;
            }
            goto LABEL_21;
          case 2:
            uint64_t v13 = 0x6E6F697461636F6CLL;
            goto LABEL_16;
          case 3:
            uint64_t v13 = 0x657469726F766166;
LABEL_16:
            unint64_t v11 = 0xE900000000000073;
            if (v10 != v13) {
              goto LABEL_21;
            }
            goto LABEL_20;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x73726576726573;
            goto LABEL_19;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1936154996) {
              goto LABEL_21;
            }
            goto LABEL_20;
          default:
LABEL_19:
            if (v10 != v12) {
              goto LABEL_21;
            }
LABEL_20:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v14 = 1;
              return v14 & 1;
            }
LABEL_21:
            char v14 = sub_1004CF890();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v14) {
              return v14 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v14 & 1;
            }
            break;
        }
      }
    }
  }
  char v14 = 0;
  return v14 & 1;
}

BOOL sub_1003298B4(Swift::UInt a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1004CF9E0();
  sub_1004CF9F0(a1);
  Swift::Int v4 = sub_1004CFA30();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_1003299A4(Swift::UInt32 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1004CF9E0();
  sub_1004CFA10(a1);
  Swift::Int v4 = sub_1004CFA30();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100329A94(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  Swift::UInt v3 = a1 & 1;
  sub_1004CF9E0();
  sub_1004CF9F0(v3);
  Swift::Int v4 = sub_1004CFA30();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (((v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)))
  {
    char v9 = 1;
    return v9 & 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    char v9 = 0;
    return v9 & 1;
  }
  do
  {
    char v9 = (v3 == 0) ^ *(unsigned char *)(v8 + v11);
    if (v9) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

uint64_t sub_100329BA0(uint64_t a1, uint64_t a2, id a3, int a4, uint64_t a5, int a6, void *a7, void (*a8)(void), uint64_t a9)
{
  id v184 = a7;
  int v185 = a6;
  uint64_t v183 = a5;
  int v180 = a4;
  uint64_t v188 = a2;
  uint64_t v186 = a9;
  uint64_t v201 = sub_1004CAC10();
  uint64_t v193 = *(void *)(v201 - 8);
  uint64_t v12 = __chkstk_darwin(v201);
  v196 = &v179[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  v191 = &v179[-v15];
  __chkstk_darwin(v14);
  v200 = &v179[-v16];
  uint64_t v199 = type metadata accessor for DOCOperationItem();
  uint64_t v17 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v19 = (id *)&v179[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v20 = 1;
  uint64_t v189 = a1;
  v181 = a8;
  switch((char)a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      char v21 = sub_1004CF890();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        switch((char)v189)
        {
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
            char v22 = sub_1004CF890();
            swift_bridgeObjectRelease();
            if (v22) {
              goto LABEL_8;
            }
            switch((char)v189)
            {
              case 2:
                goto LABEL_7;
              default:
                char v20 = sub_1004CF890();
                break;
            }
            break;
          default:
            goto LABEL_7;
        }
        goto LABEL_7;
      }
      break;
    default:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
  }
LABEL_8:
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  v210 = _swiftEmptyArrayStorage;
  uint64_t v24 = swift_allocObject();
  uint64_t v182 = v24;
  *(void *)(v24 + 16) = _swiftEmptyArrayStorage;
  id v25 = (uint64_t *)(v24 + 16);
  uint64_t v26 = *(void *)(v188 + 16);
  id v190 = a3;
  if (v26)
  {
    uint64_t v27 = v188 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v198 = *(void *)(v17 + 72);
    v195 = v19 + 1;
    uint64_t v28 = (void (**)(unsigned char *, id *, uint64_t))(v193 + 32);
    int v197 = v20 & (a3 != 0);
    v192 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v193 + 16);
    v194 = (void (**)(unsigned char *, uint64_t))(v193 + 8);
    swift_bridgeObjectRetain();
    uint64_t v29 = v200;
    uint64_t v30 = v201;
    do
    {
      sub_100293A60(v27, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        id v31 = *v19;
        if (v197)
        {
          uint64_t v32 = self;
          id v33 = a3;
          id v34 = [v32 defaultPermission];
          unsigned int v35 = [v34 canItem:v31 performAction:1 item:v33];

          if (v35)
          {
            id v31 = v31;
            sub_1004CDE00();
            if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1004CDE60();
            }
            sub_1004CDF40();
            sub_1004CDE50();
          }
        }
        else
        {
          id v50 = v31;
          sub_1004CDE00();
          if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1004CDE60();
          }
          sub_1004CDF40();
          sub_1004CDE50();
        }
        uint64_t v29 = v200;
        uint64_t v30 = v201;
      }
      else
      {
        uint64_t v36 = sub_100031648(&qword_100634430);
        swift_bridgeObjectRelease();
        int v37 = *((unsigned __int8 *)v19 + *(int *)(v36 + 64));
        uint64_t v38 = (void (*)(unint64_t, unsigned char *, uint64_t))*v28;
        (*v28)(v29, v19, v30);
        if (v197)
        {
          if (v37) {
            uint64_t v39 = 1;
          }
          else {
            uint64_t v39 = 2;
          }
          unint64_t v40 = self;
          id v41 = a3;
          id v42 = [v40 defaultPermission];
          unsigned int v43 = [v42 canAppWithDataOwnerState:v39 performAction:1 node:v41];

          if (v43)
          {
            (*v192)(v191, v200, v201);
            unint64_t v44 = (unint64_t)v210;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v44 = sub_1002377AC(0, *(void *)(v44 + 16) + 1, 1, v44);
            }
            unint64_t v46 = *(void *)(v44 + 16);
            unint64_t v45 = *(void *)(v44 + 24);
            if (v46 >= v45 >> 1) {
              unint64_t v44 = sub_1002377AC(v45 > 1, v46 + 1, 1, v44);
            }
            *(void *)(v44 + 16) = v46 + 1;
            uint64_t v47 = v193;
            unint64_t v48 = v44
                + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))
                + *(void *)(v193 + 72) * v46;
            uint64_t v49 = v201;
            v38(v48, v191, v201);

            v210 = (void *)v44;
            uint64_t v30 = v49;
            uint64_t v29 = v200;
            (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v200, v49);
            a3 = v190;
          }
          else
          {
            uint64_t v56 = v200;
            uint64_t v30 = v201;
            (*v194)(v200, v201);

            uint64_t v29 = v56;
          }
        }
        else
        {
          (*v192)(v196, v29, v30);
          unint64_t v51 = (unint64_t)v210;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v51 = sub_1002377AC(0, *(void *)(v51 + 16) + 1, 1, v51);
          }
          unint64_t v53 = *(void *)(v51 + 16);
          unint64_t v52 = *(void *)(v51 + 24);
          if (v53 >= v52 >> 1) {
            unint64_t v51 = sub_1002377AC(v52 > 1, v53 + 1, 1, v51);
          }
          *(void *)(v51 + 16) = v53 + 1;
          uint64_t v54 = v193;
          unint64_t v55 = v51
              + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))
              + *(void *)(v193 + 72) * v53;
          uint64_t v30 = v201;
          v38(v55, v196, v201);
          v210 = (void *)v51;
          uint64_t v29 = v200;
          (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v200, v30);
        }
      }
      v27 += v198;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v57 = v210;
    unint64_t v23 = *v25;
  }
  else
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
  }
  if (v57[2])
  {
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v172 = sub_1004CF6D0();
      swift_bridgeObjectRelease();
      if (v172) {
        goto LABEL_127;
      }
    }
    else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_127;
    }
    if (v57[2])
    {
      if ((_BYTE)v189)
      {
        if (v189 != 1)
        {
LABEL_126:
          aBlock = 0;
          unint64_t v204 = 0xE000000000000000;
          sub_1004CF4D0(42);
          v211._countAndFlagsBits = 0x7020746F6E6E6143;
          v211._object = (void *)0xEF206D726F667265;
          sub_1004CDCD0(v211);
          char v209 = v189;
          sub_1004CF600();
          v212._countAndFlagsBits = 0xD000000000000019;
          v212._object = (void *)0x8000000100530AF0;
          sub_1004CDCD0(v212);
LABEL_127:
          sub_1004CF6B0();
          __break(1u);
          JUMPOUT(0x10032B848);
        }
        if (a3)
        {
          Swift::String v67 = self;
          id v68 = a3;
          swift_bridgeObjectRetain();
          id v69 = [v67 shared];
          id v70 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
          uint64_t v61 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)((uint64_t)v57, v68, v69);
LABEL_56:
          self;
          uint64_t v71 = swift_dynamicCastObjCClass();
          if (v71)
          {
            uint64_t v72 = (void *)v71;
            uint64_t v61 = v61;
            if (sub_100328B8C(v188, (uint64_t *)&v210)[2])
            {
              sub_100031648(&qword_1006271D0);
              v73 = (void **)sub_1004CF720();
            }
            else
            {
              v73 = (void **)&_swiftEmptyDictionarySingleton;
            }
            aBlock = v73;
            uint64_t v74 = swift_bridgeObjectRetain();
            sub_100336D0C(v74, 1, &aBlock);
            swift_bridgeObjectRelease();
            sub_10033B51C((unint64_t *)&unk_10063C5A0, (void (*)(uint64_t))&type metadata accessor for URL);
            Class isa = sub_1004CD990().super.isa;
            swift_release();
            [v72 setTargetFilenamesByURL:isa];
          }
          goto LABEL_61;
        }
        goto LABEL_120;
      }
      if (a3)
      {
        id v58 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
        id v59 = a3;
        swift_bridgeObjectRetain();
        Class v60 = sub_1004CDE10().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v61 = (char *)[v58 initWithURLs:v60 destinationFolder:v59];

        goto LABEL_56;
      }
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      goto LABEL_126;
    }
    unint64_t v23 = *v25;
  }
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v173 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v173) {
      goto LABEL_50;
    }
  }
  else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    switch((char)v189)
    {
      case 1:
        if (!a3) {
          goto LABEL_123;
        }
        uint64_t v133 = *v25;
        v134 = self;
        id v135 = a3;
        swift_bridgeObjectRetain();
        id v136 = [v134 shared];
        id v137 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
        uint64_t v61 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(v133, v135, 0, v136);
        goto LABEL_61;
      case 2:
        if (!a3) {
          goto LABEL_122;
        }
        uint64_t v120 = *v25;
        v121 = self;
        id v122 = a3;
        swift_bridgeObjectRetain();
        id v123 = [v121 shared];
        id v124 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
        uint64_t v61 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(v120, v122, 1, v123);
        [v61 setShouldBounceOnCollision:1];
        goto LABEL_61;
      case 3:
        v125 = self;
        swift_bridgeObjectRetain();
        id v126 = [v125 shared];
        v127 = (objc_class *)type metadata accessor for DOCTrashOperation();
        v128 = (char *)objc_allocWithZone(v127);
        *(void *)&v128[OBJC_IVAR____TtC14RecentsAvocado17DOCTrashOperation_sourceParentFolderItem] = 0;
        *(void *)&v128[OBJC_IVAR____TtC14RecentsAvocado17DOCTrashOperation_undoManager] = v126;
        sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
        id v129 = v126;
        Class v130 = sub_1004CDE10().super.isa;
        swift_bridgeObjectRelease();
        v202.receiver = v128;
        v202.super_class = v127;
        v131 = (char *)objc_msgSendSuper2(&v202, "initWithItems:", v130);

        v132 = *(void **)&v131[OBJC_IVAR____TtC14RecentsAvocado17DOCTrashOperation_undoManager];
        uint64_t v61 = v131;
        [v132 registerUndoOperationForSender:v61];

        goto LABEL_61;
      case 4:
        uint64_t v117 = *v25;
        v118 = self;
        id v119 = a3;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_100030BA8(v117, a3, [v118 shared]);
        goto LABEL_61;
      case 5:
        v151 = self;
        swift_bridgeObjectRetain();
        id v152 = [v151 shared];
        id v153 = objc_allocWithZone((Class)sub_1004CBED0());
        uint64_t v61 = (char *)sub_1004CBEC0();
        goto LABEL_61;
      case 6:
        if (!a3) {
          goto LABEL_124;
        }
        uint64_t v154 = *v25;
        v155 = self;
        id v156 = a3;
        swift_bridgeObjectRetain();
        id v157 = [v155 shared];
        id v158 = objc_allocWithZone((Class)type metadata accessor for DOCArchiveOperation());
        uint64_t v61 = sub_100063D3C(v154, v156, v157);
        goto LABEL_61;
      case 7:
        uint64_t v138 = *v25;
        if ((unint64_t)*v25 >> 62)
        {
          swift_bridgeObjectRetain();
          if (sub_1004CF6D0())
          {
LABEL_81:
            if ((v138 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_119;
              }
              id v140 = *(id *)(v138 + 32);
LABEL_84:
              v141 = v140;
              swift_bridgeObjectRelease();
              if (a3)
              {
                v142 = self;
                id v143 = a3;
                id v144 = [v142 shared];
                id v145 = objc_allocWithZone((Class)type metadata accessor for DOCUnarchiveOperation());
                v146 = sub_10026CF80(v141, v143, v144);
                uint64_t v147 = swift_allocObject();
                id v148 = v184;
                *(void *)(v147 + 16) = v184;
                v207 = (uint64_t (*)())sub_10033B59C;
                v208 = (void *)v147;
                aBlock = _NSConcreteStackBlock;
                unint64_t v204 = 1107296256;
                v205 = sub_10032D8EC;
                v206 = &unk_1005CDDF0;
                v149 = _Block_copy(&aBlock);
                uint64_t v61 = v146;
                id v150 = v148;
                swift_release();
                [v61 setPassphraseRequestBlock:v149];
                _Block_release(v149);

LABEL_61:
                self;
                uint64_t v76 = swift_dynamicCastObjCClass();
                uint64_t v77 = v182;
                id v78 = v184;
                if (v76)
                {
                  uint64_t v79 = (void *)v76;
                  uint64_t v80 = v61;
                  if (v180) {
                    [v79 setShouldBounceOnCollision:1];
                  }
                  if ((v185 & 1) == 0) {
                    [v79 setLastUsageUpdatePolicy:v183];
                  }
                }
                uint64_t v81 = swift_allocObject();
                id v82 = v187;
                swift_unknownObjectWeakInit();
                uint64_t v83 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v84 = swift_allocObject();
                *(void *)(v84 + 16) = v81;
                *(void *)(v84 + 24) = v83;
                v207 = sub_10033C8DC;
                v208 = (void *)v84;
                aBlock = _NSConcreteStackBlock;
                unint64_t v204 = 1107296256;
                v205 = sub_10032C4DC;
                v206 = &unk_1005CDC38;
                v85 = _Block_copy(&aBlock);
                swift_release();
                [v61 setErrorRecoveryHandler:v85];
                _Block_release(v85);
                uint64_t v86 = swift_allocObject();
                uint64_t v87 = (uint64_t)v181;
                uint64_t v88 = v186;
                *(void *)(v86 + 16) = v181;
                *(void *)(v86 + 24) = v88;
                id v89 = v190;
                *(void *)(v86 + 32) = v61;
                *(void *)(v86 + 40) = v89;
                *(unsigned char *)(v86 + 48) = v189;
                *(void *)(v86 + 56) = v82;
                *(void *)(v86 + 64) = v78;
                *(void *)(v86 + 72) = v77;
                uint64_t v90 = v183;
                *(void *)(v86 + 80) = v188;
                *(void *)(v86 + 88) = v90;
                *(unsigned char *)(v86 + 96) = v185 & 1;
                type metadata accessor for DOCArchiveOperation();
                uint64_t v91 = swift_dynamicCastClass();
                if (v91)
                {
                  v92 = (void *)v91;
                  v93 = (void *)swift_allocObject();
                  v93[2] = v92;
                  v93[3] = sub_10033B374;
                  v93[4] = v86;
                  v207 = (uint64_t (*)())sub_10033B4F4;
                  v208 = v93;
                  aBlock = _NSConcreteStackBlock;
                  unint64_t v204 = 1107296256;
                  v205 = sub_100051F74;
                  v206 = &unk_1005CDDA0;
                  v94 = _Block_copy(&aBlock);
                  uint64_t v201 = (uint64_t)v208;
                  id v95 = v89;
                  id v96 = v78;
                  v97 = v61;
                  swift_bridgeObjectRetain();
                  sub_100039174(v87);
                  id v98 = v187;
                  id v99 = v187;
                  swift_retain();
                  swift_retain();
                  swift_release();
                  [v92 setArchiveCompletionBlock:v94];
                  _Block_release(v94);
                }
                else
                {
                  type metadata accessor for DOCUnarchiveOperation();
                  uint64_t v100 = swift_dynamicCastClass();
                  if (v100)
                  {
                    v101 = (void *)v100;
                    v102 = (void *)swift_allocObject();
                    v102[2] = v101;
                    v102[3] = sub_10033B374;
                    v102[4] = v86;
                    v207 = (uint64_t (*)())sub_10033B4B0;
                    v208 = v102;
                    aBlock = _NSConcreteStackBlock;
                    unint64_t v204 = 1107296256;
                    v205 = sub_100051F74;
                    v206 = &unk_1005CDD50;
                    v103 = _Block_copy(&aBlock);
                    id v104 = v190;
                    id v105 = v184;
                    v106 = v61;
                    swift_bridgeObjectRetain();
                    sub_100039174(v87);
                    id v98 = v187;
                    id v107 = v187;
                    swift_retain();
                    swift_retain();
                    swift_release();
                    [v101 setUnarchiveCompletionBlock:v103];
                    _Block_release(v103);
                  }
                  else
                  {
                    type metadata accessor for DOCCopyOperation();
                    uint64_t v108 = swift_dynamicCastClass();
                    id v109 = v184;
                    id v98 = v187;
                    if (v108)
                    {
                      v110 = (void *)v108;
                      v111 = (void *)swift_allocObject();
                      v111[2] = v110;
                      v111[3] = sub_10033B374;
                      v111[4] = v86;
                      v207 = (uint64_t (*)())sub_10033B450;
                      v208 = v111;
                      aBlock = _NSConcreteStackBlock;
                      unint64_t v204 = 1107296256;
                      v205 = sub_100060248;
                      v206 = &unk_1005CDD00;
                      v112 = _Block_copy(&aBlock);
                      id v113 = v190;
                      id v114 = v109;
                      v115 = v61;
                      swift_bridgeObjectRetain();
                      sub_100039174(v87);
                      id v116 = v98;
                      swift_retain();
                      swift_retain();
                      swift_release();
                      [v110 setActionCompletionBlock:v112];
                      _Block_release(v112);
                    }
                    else
                    {
                      uint64_t v159 = swift_allocObject();
                      *(void *)(v159 + 16) = sub_10033B374;
                      *(void *)(v159 + 24) = v86;
                      v207 = (uint64_t (*)())sub_10033B3BC;
                      v208 = (void *)v159;
                      aBlock = _NSConcreteStackBlock;
                      unint64_t v204 = 1107296256;
                      v205 = sub_100060248;
                      v206 = &unk_1005CDCB0;
                      v160 = _Block_copy(&aBlock);
                      id v161 = v190;
                      id v162 = v109;
                      v163 = v61;
                      swift_bridgeObjectRetain();
                      sub_100039174(v87);
                      id v164 = v98;
                      swift_retain();
                      swift_retain();
                      swift_release();
                      [v163 setActionCompletionBlock:v160];
                      _Block_release(v160);
                    }
                  }
                }
                [v61 setQualityOfService:25];
                v165 = (void *)sub_1004CC620();
                sub_1004CE350();
                sub_100031648((uint64_t *)&unk_100627480);
                uint64_t v166 = swift_allocObject();
                *(_OWORD *)(v166 + 16) = xmmword_1004E59C0;
                *(void *)(v166 + 56) = &type metadata for String;
                unint64_t v167 = sub_1000334C4();
                *(void *)(v166 + 64) = v167;
                *(void *)(v166 + 32) = 0xD000000000000076;
                *(void *)(v166 + 40) = 0x8000000100530B10;
                unint64_t v168 = 0xE400000000000000;
                uint64_t v169 = 1702260557;
                switch((char)v189)
                {
                  case 1:
                    uint64_t v169 = 2037411651;
                    break;
                  case 2:
                    uint64_t v169 = 0x746163696C707544;
                    goto LABEL_96;
                  case 3:
                    unint64_t v168 = 0xE500000000000000;
                    uint64_t v169 = 0x6873617254;
                    break;
                  case 4:
                    unint64_t v168 = 0xE700000000000000;
                    uint64_t v169 = 0x68736172746E55;
                    break;
                  case 5:
                    unint64_t v168 = 0xE600000000000000;
                    uint64_t v169 = 0x6574656C6544;
                    break;
                  case 6:
                    unint64_t v168 = 0xE700000000000000;
                    uint64_t v169 = 0x65766968637241;
                    break;
                  case 7:
                    uint64_t v169 = 0x7669686372616E55;
LABEL_96:
                    unint64_t v168 = 0xE900000000000065;
                    break;
                  default:
                    break;
                }
                *(void *)(v166 + 96) = &type metadata for String;
                *(void *)(v166 + 104) = v167;
                *(void *)(v166 + 72) = v169;
                *(void *)(v166 + 80) = v168;
                *(void *)(v166 + 136) = sub_1000333C8(0, &qword_100634420);
                *(void *)(v166 + 144) = sub_10033B3F0(&qword_100634428, &qword_100634420);
                *(void *)(v166 + 112) = v61;
                v170 = v61;
                sub_1004CC640();

                swift_bridgeObjectRelease();
                [v98 scheduleAction:v170];
                swift_release();

                swift_release();
                return swift_bridgeObjectRelease();
              }
              goto LABEL_125;
            }
LABEL_117:
            id v140 = (id)sub_1004CF500();
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v139 = *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v139) {
            goto LABEL_81;
          }
        }
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_117;
      default:
        if (!a3) {
          goto LABEL_121;
        }
        uint64_t v62 = *v25;
        Swift::String v63 = self;
        id v64 = a3;
        swift_bridgeObjectRetain();
        id v65 = [v63 shared];
        id v66 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
        uint64_t v61 = sub_1004467C4(v62, v64, v65);
        goto LABEL_61;
    }
  }
  v174 = (void *)sub_1004CC620();
  sub_1004CE360();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = xmmword_1004E5790;
  *(void *)(v175 + 56) = &type metadata for String;
  unint64_t v176 = sub_1000334C4();
  *(void *)(v175 + 64) = v176;
  *(void *)(v175 + 32) = 0xD000000000000076;
  *(void *)(v175 + 40) = 0x8000000100530B10;
  unint64_t v177 = 0xE400000000000000;
  uint64_t v178 = 1702260557;
  switch((char)v189)
  {
    case 1:
      uint64_t v178 = 2037411651;
      break;
    case 2:
      uint64_t v178 = 0x746163696C707544;
      goto LABEL_109;
    case 3:
      unint64_t v177 = 0xE500000000000000;
      uint64_t v178 = 0x6873617254;
      break;
    case 4:
      unint64_t v177 = 0xE700000000000000;
      uint64_t v178 = 0x68736172746E55;
      break;
    case 5:
      unint64_t v177 = 0xE600000000000000;
      uint64_t v178 = 0x6574656C6544;
      break;
    case 6:
      unint64_t v177 = 0xE700000000000000;
      uint64_t v178 = 0x65766968637241;
      break;
    case 7:
      uint64_t v178 = 0x7669686372616E55;
LABEL_109:
      unint64_t v177 = 0xE900000000000065;
      break;
    default:
      break;
  }
  *(void *)(v175 + 96) = &type metadata for String;
  *(void *)(v175 + 104) = v176;
  *(void *)(v175 + 72) = v178;
  *(void *)(v175 + 80) = v177;
  sub_1004CC640();

  swift_bridgeObjectRelease();
  if (v181) {
    v181(0);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10032B904(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DOCOperationItem();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_3;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_20:
      swift_bridgeObjectRetain();
      sub_100329BA0(3, (uint64_t)v14, 0, 0, 0, 1, a2, 0, 0);
      swift_bridgeObjectRelease();
    }
LABEL_21:
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1004CF6D0();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_24;
      }
    }
    else if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_24:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_10032C82C(v31, a2, a3, a4);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_3:
  if (v11 >= 1)
  {
    id v33 = a2;
    uint64_t v34 = a3;
    uint64_t v35 = a4;
    uint64_t v13 = 0;
    id v40 = (id)FPActionTrash;
    unint64_t v41 = a1 & 0xC000000000000001;
    uint64_t v14 = _swiftEmptyArrayStorage;
    id v36 = (id)FPActionDelete;
    long long v39 = xmmword_1004E5710;
    do
    {
      if (v41) {
        id v15 = (id)sub_1004CF500();
      }
      else {
        id v15 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v16 = v15;
      sub_100031648(&qword_100628240);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = v39;
      *(void *)(v18 + 32) = v16;
      uint64_t v43 = v18;
      sub_1004CDE50();
      sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
      id v19 = v16;
      Class isa = sub_1004CDE10().super.isa;
      swift_bridgeObjectRelease();
      id v21 = [v42 eligibleActionsForItems:isa];

      type metadata accessor for FPAction(0);
      sub_10033B51C((unint64_t *)&qword_1006342E0, type metadata accessor for FPAction);
      uint64_t v22 = sub_1004CE120();

      id v23 = v40;
      char v24 = sub_100329380((uint64_t)v23, v22);

      if (v24)
      {
        swift_bridgeObjectRelease();
        *uint64_t v10 = v19;
        swift_storeEnumTagMultiPayload();
        id v25 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = (void *)sub_100237EE4(0, v14[2] + 1, 1, (unint64_t)v14);
        }
        unint64_t v27 = v14[2];
        unint64_t v26 = v14[3];
        if (v27 >= v26 >> 1) {
          uint64_t v14 = (void *)sub_100237EE4(v26 > 1, v27 + 1, 1, (unint64_t)v14);
        }
        v14[2] = v27 + 1;
        sub_1000D27D0((uint64_t)v10, (uint64_t)v14+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v27);
      }
      else
      {
        id v28 = v36;
        char v29 = sub_100329380((uint64_t)v28, v22);

        swift_bridgeObjectRelease();
        if (v29)
        {
          id v30 = v19;
          sub_1004CDE00();
          if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1004CDE60();
          }
          sub_1004CDF40();
          sub_1004CDE50();
        }
      }
      ++v13;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    a3 = v34;
    a4 = v35;
    a2 = v33;
    if (v14[2]) {
      goto LABEL_20;
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_10032BDD0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)sub_1004CC620();
  sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1004E5790;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_1000334C4();
  *(void *)(v10 + 32) = 0xD000000000000032;
  *(void *)(v10 + 40) = 0x8000000100530EB0;
  *(void *)(v10 + 96) = sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  *(void *)(v10 + 104) = sub_10033B3F0((unint64_t *)&qword_100630930, (unint64_t *)&qword_100627EE0);
  *(void *)(v10 + 72) = a1;
  id v11 = a1;
  sub_1004CC640();

  swift_bridgeObjectRelease();
  id v12 = [v11 itemID];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = v11;
  v13[5] = v4;
  v13[6] = a2;
  v18[4] = sub_10033BF48;
  v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1004575EC;
  v18[3] = &unk_1005CE660;
  uint64_t v14 = _Block_copy(v18);
  id v15 = v11;
  swift_retain();
  id v16 = v4;
  id v17 = a2;
  swift_release();
  [v16 fetchParentsForItemID:v12 recursively:0 completionHandler:v14];
  _Block_release(v14);
}

uint64_t sub_10032C008(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CD860();
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CD8C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v32 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  dispatch_group_t v13 = dispatch_group_create();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1004CF6D0();
    uint64_t v14 = result;
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v34 = v8;
  uint64_t v35 = v9;
  uint64_t v33 = v10;
  if (!v14)
  {
    uint64_t v23 = v36;
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1000333C8(0, (unint64_t *)&qword_100626B70);
    id v37 = (id)sub_1004CE630();
    char v24 = (void *)swift_allocObject();
    v24[2] = a2;
    v24[3] = a3;
    v24[4] = v12;
    uint64_t v43 = sub_1001154B0;
    unint64_t v44 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v40 = 1107296256;
    unint64_t v41 = sub_1003A422C;
    id v42 = &unk_1005CE048;
    id v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    unint64_t v26 = v32;
    sub_1004CD880();
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_10033B51C((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    unint64_t v27 = v34;
    sub_1004CF330();
    id v28 = v37;
    sub_1004CE5E0();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v6);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v35);
    swift_release();
    return swift_release();
  }
  if (v14 >= 1)
  {
    uint64_t v29 = a2;
    uint64_t v30 = a3;
    uint64_t v31 = v6;
    uint64_t v16 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v17 = (id)sub_1004CF500();
      }
      else {
        id v17 = *(id *)(a1 + 8 * v16 + 32);
      }
      uint64_t v18 = v17;
      ++v16;
      dispatch_group_enter(v13);
      id v19 = (void *)swift_allocObject();
      v19[2] = v13;
      v19[3] = v18;
      v19[4] = v12;
      uint64_t v43 = sub_10033B798;
      unint64_t v44 = v19;
      aBlock = _NSConcreteStackBlock;
      uint64_t v40 = 1107296256;
      unint64_t v41 = sub_100124F1C;
      id v42 = &unk_1005CDFF8;
      char v20 = _Block_copy(&aBlock);
      id v21 = v13;
      id v22 = v18;
      swift_retain();
      swift_release();
      [v37 fetchURLForItem:v22 completionHandler:v20];
      _Block_release(v20);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    a3 = v30;
    uint64_t v6 = v31;
    uint64_t v23 = v36;
    a2 = v29;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_10032C4DC(uint64_t a1, void *a2)
{
  Swift::UInt v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_10032C544(void *a1)
{
  Swift::UInt v3 = (void *)sub_1004CC620();
  sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1004E12A0;
  *(void *)(v4 + 56) = sub_1000333C8(0, &qword_1006287A0);
  *(void *)(v4 + 64) = sub_10033B3F0(&qword_1006287A8, &qword_1006287A0);
  *(void *)(v4 + 32) = a1;
  id v5 = a1;
  sub_1004CC640();

  swift_bridgeObjectRelease();
  id v6 = [objc_allocWithZone((Class)FPDisconnectDomainOperation) initWithDomain:v5];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  char v20 = sub_10033B97C;
  uint64_t v21 = v9;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_10032C4DC;
  id v19 = &unk_1005CE3B8;
  uint64_t v10 = _Block_copy(&v16);
  id v11 = v6;
  swift_release();
  [v11 setErrorRecoveryHandler:v10];
  _Block_release(v10);

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  char v20 = sub_10033B998;
  uint64_t v21 = v12;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100060248;
  id v19 = &unk_1005CE408;
  dispatch_group_t v13 = _Block_copy(&v16);
  id v14 = v5;
  id v15 = v11;
  swift_release();
  [v15 setActionCompletionBlock:v13];
  _Block_release(v13);

  [v1 scheduleAction:v15];
}

void sub_10032C82C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v41 = a3;
  uint64_t v7 = sub_1004CBD20();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = a1;
  id v11 = (objc_class *)sub_1004CBD10();
  id v12 = objc_allocWithZone(v11);
  swift_bridgeObjectRetain();
  dispatch_group_t v13 = (void *)sub_1004CBD00();
  id v14 = objc_allocWithZone((Class)sub_1004CC470());
  swift_bridgeObjectRetain();
  id v15 = a2;
  uint64_t v16 = (void *)sub_1004CC460();
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a1;
  void v17[3] = v4;
  v17[4] = v15;
  id v18 = objc_allocWithZone(v11);
  swift_bridgeObjectRetain();
  id v19 = v15;
  id v20 = v4;
  uint64_t v21 = (void *)sub_1004CBD00();
  sub_100031648(&qword_100628240);
  uint64_t v22 = swift_allocObject();
  long long v38 = xmmword_1004E5E30;
  *(_OWORD *)(v22 + 16) = xmmword_1004E5E30;
  *(void *)(v22 + 32) = v13;
  *(void *)(v22 + 40) = v16;
  uint64_t v42 = v22;
  sub_1004CDE50();
  uint64_t v23 = (objc_class *)sub_1004CBD50();
  id v24 = objc_allocWithZone(v23);
  id v40 = v13;
  id v39 = v16;
  id v25 = (void *)sub_1004CBD30();
  unint64_t v26 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v26(v10, enum case for DOCChainOperation.DOCChainOperationMode.cancelSubsequentOperationsOnSuccess(_:), v7);
  sub_1004CBD40();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v38;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v21;
  uint64_t v42 = v27;
  sub_1004CDE50();
  objc_allocWithZone(v23);
  id v28 = v25;
  id v29 = v21;
  uint64_t v30 = (void *)sub_1004CBD30();
  v26(v10, enum case for DOCChainOperation.DOCChainOperationMode.cancelSubsequentOperationsOnFailure(_:), v7);
  sub_1004CBD40();
  uint64_t v31 = v41;
  if (v41)
  {
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v37;
    *(void *)(v32 + 16) = v31;
    *(void *)(v32 + 24) = v33;
    sub_100039174(v31);
    id v34 = v30;
    sub_1004CB8E0();
  }
  id v35 = [self mainQueue];
  [v35 addOperation:v30];
}

void sub_10032CBB8(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, void **a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v47 = a8;
  uint64_t v18 = sub_1004CC770();
  uint64_t v48 = *(void *)(v18 - 8);
  uint64_t v49 = v18;
  __chkstk_darwin(v18);
  id v50 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CBF10();
  id v20 = self;
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v22 = [v20 shared];
  uint64_t v23 = (void *)sub_1004CBF00();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v10;
  *(void *)(v24 + 24) = a2;
  *(void *)(v24 + 32) = a3;
  *(void *)(v24 + 40) = a4;
  *(unsigned char *)(v24 + 48) = a5;
  *(void *)(v24 + 56) = a6;
  *(void *)(v24 + 64) = a7;
  uint64_t v56 = sub_100339CA0;
  uint64_t v57 = v24;
  aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  uint64_t v54 = sub_100060248;
  unint64_t v55 = &unk_1005CD738;
  id v25 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v26 = v23;
  id v27 = v10;
  id v28 = a4;
  uint64_t v29 = (uint64_t)v47;
  swift_retain();
  swift_release();
  [v26 setActionCompletionBlock:v25];
  _Block_release(v25);

  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v30;
  *(void *)(v32 + 24) = v31;
  uint64_t v56 = (void (*)(uint64_t))sub_10033C8DC;
  uint64_t v57 = v32;
  aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  uint64_t v54 = sub_10032C4DC;
  unint64_t v55 = &unk_1005CD7D8;
  uint64_t v33 = _Block_copy(&aBlock);
  id v34 = v26;
  swift_release();
  [v34 setErrorRecoveryHandler:v33];
  _Block_release(v33);

  if (v29)
  {
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v29;
    *(void *)(v35 + 24) = a9;
    uint64_t v56 = (void (*)(uint64_t))sub_10033C8D8;
    uint64_t v57 = v35;
    aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = sub_10032D174;
    unint64_t v55 = &unk_1005CD828;
    uint64_t v36 = _Block_copy(&aBlock);
    sub_100039174(v29);
    id v37 = v34;
    sub_100039174(v29);
    swift_release();
    [v37 setFinishedBlock:v36];
    _Block_release(v36);

    sub_1000388F0(v29);
  }
  long long v38 = v50;
  sub_1004CC730();
  id v39 = v34;
  id v40 = sub_1004CC760();
  os_log_type_t v41 = sub_1004CE350();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v47 = (void **)swift_slowAlloc();
    aBlock = v47;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v51 = sub_100187CC4(0xD000000000000066, 0x8000000100530790, (uint64_t *)&aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v42 + 12) = 2112;
    uint64_t v51 = (uint64_t)v39;
    id v44 = v27;
    id v45 = v39;
    sub_1004CF1F0();
    *uint64_t v43 = v39;

    id v27 = v44;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s: Adding Rename Operation %@", (uint8_t *)v42, 0x16u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v49);
  }
  [v27 scheduleAction:v39];
}

uint64_t sub_10032D174(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_100049B74((uint64_t)&v8, &qword_10062BA60);
}

uint64_t sub_10032D210(unsigned __int8 *a1, char *a2)
{
  return sub_1004B8E18(*a1, *a2);
}

Swift::Int sub_10032D21C()
{
  return sub_10010584C();
}

uint64_t sub_10032D228()
{
  return sub_1002AE0CC();
}

Swift::Int sub_10032D230()
{
  return sub_10010584C();
}

uint64_t sub_10032D238@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100339F88(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10032D268(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702260557;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 2037411651;
      goto LABEL_3;
    case 2:
      uint64_t v3 = 0x746163696C707544;
      goto LABEL_10;
    case 3:
      *a1 = 0x6873617254;
      a1[1] = 0xE500000000000000;
      return;
    case 4:
      *a1 = 0x68736172746E55;
      a1[1] = 0xE700000000000000;
      return;
    case 5:
      *a1 = 0x6574656C6544;
      a1[1] = 0xE600000000000000;
      return;
    case 6:
      *a1 = 0x65766968637241;
      a1[1] = 0xE700000000000000;
      return;
    case 7:
      uint64_t v3 = 0x7669686372616E55;
LABEL_10:
      *a1 = v3;
      a1[1] = 0xE900000000000065;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

void sub_10032D364(int a1, id a2, uint64_t a3)
{
  if ([a2 recoveryAttempter])
  {
    sub_1004CF2A0();
    swift_unknownObjectRelease();
    sub_100032FC8(&v6, &v7);
    sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
    swift_dynamicCast();
    uint64_t v4 = (void *)sub_1004CAA50();
    [v5 attemptRecoveryFromError:v4 optionIndex:a3];
  }
  else
  {
    __break(1u);
  }
}

void sub_10032D440(uint64_t a1, void (*a2)(uint64_t))
{
  if (a2)
  {
    uint64_t v3 = swift_retain();
    a2(v3);
    sub_1000388F0((uint64_t)a2);
  }
}

void sub_10032D494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id a5, void *a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v9 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  if (a4)
  {
    NSString v10 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v21 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:1];

  if ((unint64_t)a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1004CF6D0();
    if (!v11) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v11 = *(void *)(((unint64_t)a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_13;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if (((unint64_t)a5 & 0xC000000000000001) != 0) {
      id v13 = (id)sub_1004CF500();
    }
    else {
      id v13 = *((id *)a5 + i + 4);
    }
    id v14 = v13;
    [v21 addAction:v13];
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (!((unint64_t)a5 >> 62))
  {
    if (*(void *)(((unint64_t)a5 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
      goto LABEL_25;
    }
LABEL_17:
    a5 = v21;
    id v16 = [a5 actions];
    sub_1000333C8(0, (unint64_t *)&unk_100634410);
    uint64_t v11 = sub_1004CDE30();

    if (!((unint64_t)v11 >> 62))
    {
      uint64_t v17 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_19:
      unint64_t v18 = v17 - 1;
      if (!__OFSUB__(v17, 1))
      {
        if ((v11 & 0xC000000000000001) == 0)
        {
          if ((v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v18 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v19 = *(id *)(v11 + 8 * v18 + 32);
LABEL_24:
            id v20 = v19;
            swift_bridgeObjectRelease();
            [a5 setPreferredAction:v20];

            goto LABEL_25;
          }
          __break(1u);
          return;
        }
LABEL_32:
        id v19 = (id)sub_1004CF500();
        goto LABEL_24;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  if (v15 == 1) {
    goto LABEL_17;
  }
LABEL_25:
  [a6 presentViewController:v21 animated:1 completion:0];
}

void sub_10032D794()
{
  uint64_t v0 = (void *)sub_1004CAA50();
  id v1 = [v0 localizedRecoverySuggestion];

  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1004CDB50();

  uint64_t v2 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v2)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  sub_1000333C8(0, (unint64_t *)&unk_100632270);
  v5._countAndFlagsBits = 0xE200000000000000;
  v7._countAndFlagsBits = 19279;
  v7._object = (void *)0xE200000000000000;
  v8._countAndFlagsBits = 0x617A696C61636F4CLL;
  v8._object = (void *)0xEB00000000656C62;
  v4.super.Class isa = v3;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  sub_1004CBEE0(v7, v8, v4, v9, v5);

  sub_1004CE690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_10032D8EC(uint64_t a1, void *a2, void *aBlock)
{
  NSBundle v4 = *(void (**)(void))(a1 + 32);
  Swift::String v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();

  return swift_release();
}

void sub_10032D998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    NSString v6 = sub_1004CDB10();
    if (a3)
    {
LABEL_3:
      uint64_t v7 = sub_1004CAA50();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v6 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);
}

void sub_10032DA28(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a2)
  {
    id v20 = (void *)sub_1004CAA50();
    if (sub_1004CEE70())
    {
      id v21 = (void *)sub_1004CC620();
      sub_1004CE360();
      sub_100031648((uint64_t *)&unk_100627480);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1004E59C0;
      *(void *)(v22 + 56) = &type metadata for String;
      unint64_t v23 = sub_1000334C4();
      *(void *)(v22 + 64) = v23;
      *(void *)(v22 + 32) = 0xD000000000000076;
      *(void *)(v22 + 40) = 0x8000000100530B10;
      unint64_t v24 = 0xE400000000000000;
      uint64_t v25 = 1702260557;
      switch((char)a8)
      {
        case 1:
          uint64_t v25 = 2037411651;
          break;
        case 2:
          uint64_t v25 = 0x746163696C707544;
          goto LABEL_33;
        case 3:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x6873617254;
          break;
        case 4:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x68736172746E55;
          break;
        case 5:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x6574656C6544;
          break;
        case 6:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x65766968637241;
          break;
        case 7:
          uint64_t v25 = 0x7669686372616E55;
LABEL_33:
          unint64_t v24 = 0xE900000000000065;
          break;
        default:
          break;
      }
      *(void *)(v22 + 96) = &type metadata for String;
      *(void *)(v22 + 104) = v23;
      *(void *)(v22 + 72) = v25;
      *(void *)(v22 + 80) = v24;
      *(void *)(v22 + 136) = sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
      *(void *)(v22 + 144) = sub_10033B3F0((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
      *(void *)(v22 + 112) = v20;
      id v63 = v20;
      sub_1004CC640();

      swift_bridgeObjectRelease();
      sub_10032E688(a4, a5, a1, a6, a7);

      return;
    }
    uint64_t v62 = a7;
    if (sub_1004CEE80())
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        if (a3 != 1)
        {
LABEL_40:
          uint64_t v46 = (void *)sub_1004CC620();
          sub_1004CE360();
          sub_100031648((uint64_t *)&unk_100627480);
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = xmmword_1004E59C0;
          *(void *)(v47 + 56) = &type metadata for String;
          unint64_t v48 = sub_1000334C4();
          *(void *)(v47 + 64) = v48;
          *(void *)(v47 + 32) = 0xD000000000000076;
          *(void *)(v47 + 40) = 0x8000000100530B10;
          unint64_t v49 = 0xE400000000000000;
          uint64_t v50 = 1702260557;
          switch((char)a8)
          {
            case 1:
              uint64_t v50 = 2037411651;
              break;
            case 2:
              uint64_t v50 = 0x746163696C707544;
              goto LABEL_56;
            case 3:
              unint64_t v49 = 0xE500000000000000;
              uint64_t v50 = 0x6873617254;
              break;
            case 4:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x68736172746E55;
              break;
            case 5:
              unint64_t v49 = 0xE600000000000000;
              uint64_t v50 = 0x6574656C6544;
              break;
            case 6:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x65766968637241;
              break;
            case 7:
              uint64_t v50 = 0x7669686372616E55;
LABEL_56:
              unint64_t v49 = 0xE900000000000065;
              break;
            default:
              break;
          }
          *(void *)(v47 + 96) = &type metadata for String;
          *(void *)(v47 + 104) = v48;
          *(void *)(v47 + 72) = v50;
          *(void *)(v47 + 80) = v49;
          *(void *)(v47 + 136) = sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
          *(void *)(v47 + 144) = sub_10033B3F0((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
          *(void *)(v47 + 112) = v20;
          id v56 = v20;
          sub_1004CC640();

          swift_bridgeObjectRelease();
          id v57 = v56;
          sub_10033A4E4((uint64_t)v57, a10, 0, 0);

          sub_10032E688(a4, a5, a1, a6, v62);
          return;
        }
        id v31 = [v20 userInfo];
        uint64_t v32 = sub_1004CD9A0();

        uint64_t v33 = sub_1004CDB50();
        if (*(void *)(v32 + 16) && (uint64_t v35 = sub_1001DB86C(v33, v34), (v36 & 1) != 0))
        {
          sub_10005AF14(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&v66);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)&v67 + 1))
          {
            sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
            if (swift_dynamicCast())
            {
              self;
              if (swift_dynamicCastObjCClass())
              {
                swift_beginAccess();
                unint64_t v37 = *(void *)(a11 + 16);
                swift_bridgeObjectRetain();
                char v38 = sub_100109C80((uint64_t)v65, v37);
                swift_bridgeObjectRelease();
                if (v38)
                {
                  id v39 = (void *)sub_1004CC620();
                  sub_1004CE350();
                  sub_100031648((uint64_t *)&unk_100627480);
                  uint64_t v40 = swift_allocObject();
                  *(_OWORD *)(v40 + 16) = xmmword_1004E12A0;
                  *(void *)(v40 + 56) = &type metadata for String;
                  *(void *)(v40 + 64) = sub_1000334C4();
                  *(void *)(v40 + 32) = 0xD000000000000076;
                  *(void *)(v40 + 40) = 0x8000000100530B10;
                  sub_1004CC640();

                  swift_bridgeObjectRelease();
                  sub_100329BA0(a8, a12, v62, 1, a13, a14 & 1, a10, a4, a5);

                  return;
                }
              }

              goto LABEL_40;
            }
LABEL_63:
            *(void *)&long long v66 = 0;
            *((void *)&v66 + 1) = 0xE000000000000000;
            sub_1004CF4D0(63);
            v69._countAndFlagsBits = 0xD00000000000003DLL;
            v69._object = (void *)0x8000000100530CC0;
            sub_1004CDCD0(v69);
            id v58 = [v20 description];
            uint64_t v59 = sub_1004CDB50();
            uint64_t v61 = v60;

            v70._countAndFlagsBits = v59;
            v70._object = v61;
            sub_1004CDCD0(v70);
            swift_bridgeObjectRelease();
            sub_1004CF6B0();
            __break(1u);
            JUMPOUT(0x10032E608);
          }
        }
        else
        {
          long long v66 = 0u;
          long long v67 = 0u;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_100049B74((uint64_t)&v66, &qword_10062BA60);
        goto LABEL_63;
      }
    }
    os_log_type_t v41 = (void *)sub_1004CC620();
    sub_1004CE360();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1004E59C0;
    *(void *)(v42 + 56) = &type metadata for String;
    unint64_t v43 = sub_1000334C4();
    *(void *)(v42 + 64) = v43;
    *(void *)(v42 + 32) = 0xD000000000000076;
    *(void *)(v42 + 40) = 0x8000000100530B10;
    unint64_t v44 = 0xE400000000000000;
    uint64_t v45 = 1702260557;
    switch((char)a8)
    {
      case 1:
        uint64_t v45 = 2037411651;
        break;
      case 2:
        uint64_t v45 = 0x746163696C707544;
        goto LABEL_46;
      case 3:
        unint64_t v44 = 0xE500000000000000;
        uint64_t v45 = 0x6873617254;
        break;
      case 4:
        unint64_t v44 = 0xE700000000000000;
        uint64_t v45 = 0x68736172746E55;
        break;
      case 5:
        unint64_t v44 = 0xE600000000000000;
        uint64_t v45 = 0x6574656C6544;
        break;
      case 6:
        unint64_t v44 = 0xE700000000000000;
        uint64_t v45 = 0x65766968637241;
        break;
      case 7:
        uint64_t v45 = 0x7669686372616E55;
LABEL_46:
        unint64_t v44 = 0xE900000000000065;
        break;
      default:
        break;
    }
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v43;
    *(void *)(v42 + 72) = v45;
    *(void *)(v42 + 80) = v44;
    *(void *)(v42 + 136) = sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
    *(void *)(v42 + 144) = sub_10033B3F0((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
    *(void *)(v42 + 112) = v20;
    id v51 = v20;
    sub_1004CC640();

    swift_bridgeObjectRelease();
    unint64_t v52 = (void *)swift_allocObject();
    v52[2] = a4;
    v52[3] = a5;
    v52[4] = a1;
    v52[5] = a6;
    v52[6] = v62;
    id v53 = v51;
    sub_100039174(a4);
    id v54 = v62;
    id v55 = a6;
    swift_bridgeObjectRetain();
    sub_10033A4E4((uint64_t)v53, a10, (uint64_t)sub_10033B63C, (uint64_t)v52);

    swift_release();
  }
  else
  {
    sub_10032E688(a4, a5, a1, a6, a7);
    id v26 = (void *)sub_1004CC620();
    sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1004E5790;
    *(void *)(v27 + 56) = &type metadata for String;
    unint64_t v28 = sub_1000334C4();
    *(void *)(v27 + 64) = v28;
    *(void *)(v27 + 32) = 0xD000000000000076;
    *(void *)(v27 + 40) = 0x8000000100530B10;
    unint64_t v29 = 0xE400000000000000;
    uint64_t v30 = 1702260557;
    switch((char)a8)
    {
      case 1:
        uint64_t v30 = 2037411651;
        break;
      case 2:
        uint64_t v30 = 0x746163696C707544;
        goto LABEL_23;
      case 3:
        unint64_t v29 = 0xE500000000000000;
        uint64_t v30 = 0x6873617254;
        break;
      case 4:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x68736172746E55;
        break;
      case 5:
        unint64_t v29 = 0xE600000000000000;
        uint64_t v30 = 0x6574656C6544;
        break;
      case 6:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x65766968637241;
        break;
      case 7:
        uint64_t v30 = 0x7669686372616E55;
LABEL_23:
        unint64_t v29 = 0xE900000000000065;
        break;
      default:
        break;
    }
    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v28;
    *(void *)(v27 + 72) = v30;
    *(void *)(v27 + 80) = v29;
    sub_1004CC640();

    swift_bridgeObjectRelease();
  }
}

void sub_10032E688(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (a1)
  {
    if (a3)
    {
      swift_retain();
      id v8 = a3;
    }
    else
    {
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        id v14 = (void *)v13;
        sub_100039174(a1);
        id v15 = a4;
        id v16 = [v14 transferResults];
        if (v16)
        {
          uint64_t v17 = v16;
          sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
          uint64_t v18 = sub_1004CD9A0();

          id v8 = sub_100328950(v18);
          swift_bridgeObjectRelease();
        }
        else
        {

          id v8 = 0;
        }
      }
      else
      {
        if (a5)
        {
          sub_100031648(&qword_100628240);
          uint64_t v19 = swift_allocObject();
          *(_OWORD *)(v19 + 16) = xmmword_1004E5710;
          *(void *)(v19 + 32) = a5;
          aBlock[0] = v19;
          swift_retain();
          sub_1004CDE50();
          id v8 = (void *)aBlock[0];
        }
        else
        {
          swift_retain();
          id v8 = 0;
        }
        id v20 = a5;
      }
    }
    Swift::String v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = v8;
    aBlock[4] = sub_10033B664;
    void aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A422C;
    uint64_t aBlock[3] = &unk_1005CDE90;
    NSString v10 = _Block_copy(aBlock);
    sub_100039174(a1);
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    sub_1000388F0(a1);
    _Block_release(v10);
  }
}

uint64_t sub_10032E8C8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  Swift::String v9 = *(void **)(a3 + *a6);
  *(void *)(a3 + *a6) = a1;
  id v10 = a1;

  if (!a1) {
    return a4(0, a2, 1);
  }
  sub_100031648(&qword_100628240);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1004E5710;
  *(void *)(v11 + 32) = v10;
  uint64_t v14 = v11;
  sub_1004CDE50();
  id v12 = v10;
  a4(v14, a2, 1);

  return swift_bridgeObjectRelease();
}

void sub_10032E9CC(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, void **a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = v9;
  os_log_type_t v41 = a6;
  uint64_t v18 = sub_1004CC770();
  uint64_t v42 = *(void *)(v18 - 8);
  uint64_t v43 = v18;
  __chkstk_darwin(v18);
  unint64_t v44 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CBF10();
  id v20 = self;
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v22 = [v20 shared];
  unint64_t v23 = (void *)sub_1004CBEF0();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  *(void *)(v24 + 32) = v10;
  *(void *)(v24 + 40) = a4;
  *(unsigned char *)(v24 + 48) = a5;
  *(void *)(v24 + 56) = v41;
  *(void *)(v24 + 64) = a7;
  uint64_t v50 = sub_10033B214;
  uint64_t v51 = v24;
  aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  unint64_t v48 = sub_100060248;
  unint64_t v49 = &unk_1005CDB70;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v26 = v23;
  id v27 = v10;
  id v28 = a4;
  swift_retain();
  swift_release();
  [v26 setActionCompletionBlock:v25];
  _Block_release(v25);

  if (a8)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a8;
    *(void *)(v29 + 24) = a9;
    uint64_t v50 = sub_10033B260;
    uint64_t v51 = v29;
    aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256;
    unint64_t v48 = sub_10032D174;
    unint64_t v49 = &unk_1005CDBC0;
    uint64_t v30 = _Block_copy(&aBlock);
    sub_100039174(a8);
    id v31 = v26;
    sub_100039174(a8);
    swift_release();
    [v31 setFinishedBlock:v30];
    _Block_release(v30);

    sub_1000388F0(a8);
  }
  uint64_t v32 = v44;
  sub_1004CC730();
  id v33 = v26;
  uint64_t v34 = sub_1004CC760();
  os_log_type_t v35 = sub_1004CE350();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    unint64_t v37 = (void *)swift_slowAlloc();
    os_log_type_t v41 = (void **)swift_slowAlloc();
    aBlock = v41;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v45 = sub_100187CC4(0xD000000000000063, 0x80000001005309F0, (uint64_t *)&aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v36 + 12) = 2112;
    uint64_t v45 = (uint64_t)v33;
    id v38 = v27;
    id v39 = v33;
    sub_1004CF1F0();
    *unint64_t v37 = v33;

    id v27 = v38;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: Adding Rename Operation %@", (uint8_t *)v36, 0x16u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
  }
  [v27 scheduleAction:v33];
}

uint64_t sub_10032EE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  NSString v13 = sub_1004CDB10();
  id v14 = [v13 pathExtension];

  uint64_t v15 = sub_1004CDB50();
  unint64_t v17 = v16;

  NSString v18 = sub_1004CDB10();
  id v19 = [v18 stringByDeletingPathExtension];

  id v20 = (void **)sub_1004CDB50();
  id v22 = v21;

  sub_10033A8BC(a1, v20, v22, v15, v17, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10032EFC0(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  sub_1000335A8(a1, (uint64_t)v7, &qword_10062BA60);
  if (v8)
  {
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    if (swift_dynamicCast()) {
      Swift::String v5 = v6;
    }
    else {
      Swift::String v5 = 0;
    }
  }
  else
  {
    sub_100049B74((uint64_t)v7, &qword_10062BA60);
    Swift::String v5 = 0;
  }
  a3(v5, a2);
}

void sub_10032F080(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v9[4] = sub_10033B0E0;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1003A422C;
  v9[3] = &unk_1005CDB20;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  id v8 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
}

objc_class *sub_10032F160(uint64_t a1, unint64_t a2, char a3, void (*a4)(id), uint64_t a5, void *a6, void *a7)
{
  id v30 = a7;
  id v33 = a4;
  uint64_t v12 = sub_1004CC770();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v29 = a1;
  NSString v15 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v16 = [self alertControllerWithTitle:0 message:v15 preferredStyle:1];

  uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    NSString v18 = result;
    v28._countAndFlagsBits = 0xE200000000000000;
    v36._countAndFlagsBits = 19279;
    v36._object = (void *)0xE200000000000000;
    v37._countAndFlagsBits = 0x617A696C61636F4CLL;
    v37._object = (void *)0xEB00000000656C62;
    v19.super.Class isa = v18;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    sub_1004CBEE0(v36, v37, v19, v38, v28);

    uint64_t v20 = swift_allocObject();
    *(unsigned char *)(v20 + 16) = a3 & 1;
    *(void *)(v20 + 24) = v33;
    *(void *)(v20 + 32) = a5;
    *(void *)(v20 + 40) = a6;
    swift_retain();
    id v21 = a6;
    NSString v22 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    aBlock[4] = (uint64_t)sub_10033B0CC;
    void aBlock[5] = v20;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100182B48;
    uint64_t aBlock[3] = (uint64_t)&unk_1005CD9E0;
    unint64_t v23 = _Block_copy(aBlock);
    swift_release();
    id v24 = [self actionWithTitle:v22 style:0 handler:v23];
    _Block_release(v23);

    [v16 addAction:v24];
    [v16 setPreferredAction:v24];
    if ((a3 & 1) == 0) {
      v33(v21);
    }
    [v30 presentViewController:v16 animated:1 completion:0];
    sub_1004CC730();
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_1004CC760();
    os_log_type_t v26 = sub_1004CE350();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v34 = sub_100187CC4(0xD000000000000075, 0x8000000100530800, aBlock);
      sub_1004CF1F0();
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_100187CC4(v29, a2, aBlock);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: prompting user with message: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (objc_class *)(*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10032F5D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    id v8 = (void *)swift_allocObject();
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = a5;
    v11[4] = sub_10033B0E0;
    v11[5] = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1003A422C;
    v11[3] = &unk_1005CDA30;
    Swift::String v9 = _Block_copy(v11);
    swift_retain();
    id v10 = a5;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v9);
  }
}

uint64_t sub_10032F6C0(unint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  if (!result)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    id v24 = (void *)sub_1004CC620();
    sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1004E5790;
    *(void *)(v25 + 56) = &type metadata for String;
    unint64_t v26 = sub_1000334C4();
    *(void *)(v25 + 64) = v26;
    *(void *)(v25 + 32) = 0xD000000000000032;
    *(void *)(v25 + 40) = 0x8000000100530EB0;
    swift_errorRetain();
    sub_100031648((uint64_t *)&unk_1006287B0);
    uint64_t v27 = sub_1004CDBA0();
    *(void *)(v25 + 96) = &type metadata for String;
    *(void *)(v25 + 104) = v26;
    *(void *)(v25 + 72) = v27;
    *(void *)(v25 + 80) = v28;
    sub_1004CC640();

    swift_bridgeObjectRelease();
    return a3(0, a2);
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v16 = (id)sub_1004CF500();
  }
  else
  {
    if (!*(void *)(v13 + 16))
    {
      __break(1u);
      return result;
    }
    id v16 = *(id *)(a1 + 32);
  }
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_100031648(&qword_10062DA90);
  uint64_t v18 = *(void *)(type metadata accessor for DOCOperationItem() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1004E12A0;
  *(void *)(v20 + v19) = a5;
  swift_storeEnumTagMultiPayload();
  id v21 = (void *)swift_allocObject();
  v21[2] = a3;
  uint64_t v21[3] = a4;
  v21[4] = a2;
  id v22 = a5;
  id v23 = v17;
  swift_retain();
  swift_errorRetain();
  sub_100329BA0(7, v20, v17, 1, 1, 0, a7, sub_10033BFC0, (uint64_t)v21);
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_10032F9D8(unint64_t a1, void (*a2)(void))
{
  if (!a1) {
    goto LABEL_10;
  }
  unint64_t v3 = a1;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1004CF6D0()) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    a1 = 0;
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)sub_1004CF500();
  }
  else
  {
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v3 + 32);
  }
  id v7 = v6;
  swift_bridgeObjectRelease();
  a1 = (unint64_t)v7;
LABEL_10:
  id v8 = (id)a1;
  a2();
}

uint64_t FPItemManager.createNewFolder(parentItem:folderName:shouldBounceOnCollision:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 88) = a4;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  return _swift_task_switch(sub_10032FAF4, 0, 0);
}

uint64_t sub_10032FAF4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 48);
  unint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = self;
  id v5 = v3;
  swift_bridgeObjectRetain();
  id v6 = [v4 shared];
  id v7 = objc_allocWithZone((Class)sub_1004CC1E0());
  id v8 = (void *)sub_1004CC1D0();
  *(void *)(v0 + 56) = v8;
  [v8 setShouldBounceOnCollision:v1];
  [v2 scheduleAction:v8];
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  *(void *)(v9 + 16) = v8;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = sub_100031648(&qword_100629A80);
  *id v10 = v0;
  v10[1] = sub_10032FCA4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003FLL, 0x80000001005305D0, sub_100339BF4, v9, v11);
}

uint64_t sub_10032FCA4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10032FE28;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10032FDC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032FDC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10032FE28()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10032FE94(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100031648(&qword_100634488);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_10033BE48;
  void aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100051F74;
  uint64_t aBlock[3] = &unk_1005CE610;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = a2;
  swift_release();
  [v10 setCreateFolderCompletionBlock:v9];
  _Block_release(v9);
}

uint64_t sub_100330058(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100031648(&qword_100634488);
    return sub_1004CDF80();
  }
  else
  {
    id v3 = a1;
    sub_1004CC1C0();
    id v4 = v3;
    sub_100031648(&qword_100634488);
    return sub_1004CDF90();
  }
}

void sub_1003300F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  id v10 = self;
  id v11 = a3;
  swift_bridgeObjectRetain();
  id v12 = [v10 shared];
  id v13 = objc_allocWithZone((Class)sub_1004CC1E0());
  uint64_t v14 = (void *)sub_1004CC1D0();
  [v14 setShouldBounceOnCollision:a6 & 1];
  NSString v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v19[4] = sub_10033B744;
  v19[5] = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100051F74;
  v19[3] = &unk_1005CDF80;
  id v16 = _Block_copy(v19);
  id v17 = v14;
  swift_retain();
  swift_release();
  [v17 setCreateFolderCompletionBlock:v16];
  _Block_release(v16);

  id v18 = [self defaultManager];
  [v18 scheduleAction:v17];
}

uint64_t sub_1003302BC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, uint64_t))
{
  id v7 = a1;
  sub_1004CC1C0();
  if (a1)
  {
    *((void *)&v11 + 1) = sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    *(void *)&long long v10 = v7;
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  id v8 = v7;
  a4(&v10, a2);
  return sub_100049B74((uint64_t)&v10, &qword_10062BA60);
}

void sub_10033036C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000335A8(a1, (uint64_t)&aBlock, &qword_10062BA60);
  if (v14)
  {
    sub_100032FC8(&aBlock, v11);
    sub_10005AF14((uint64_t)v11, (uint64_t)v10);
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    swift_dynamicCast();
    sub_100039184((uint64_t)v11);
    uint64_t v6 = v17;
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = (void *)swift_allocObject();
  void v7[2] = a3;
  v7[3] = a4;
  v7[4] = v6;
  NSString v15 = sub_10009DB3C;
  id v16 = v7;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v13 = sub_1003A422C;
  uint64_t v14 = &unk_1005CDF30;
  id v8 = _Block_copy(&aBlock);
  id v9 = v6;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v8);
}

void sub_1003304CC(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)FPDeleteOperation);
  sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  swift_bridgeObjectRetain();
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithItems:isa];

  [v6 setFinishAfterPreflight:1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  id v17 = sub_10033B970;
  uint64_t v18 = v7;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  NSString v15 = sub_100060248;
  id v16 = &unk_1005CE340;
  id v8 = _Block_copy(&v13);
  id v9 = v6;
  swift_retain();
  swift_release();
  [v9 setActionCompletionBlock:v8];
  _Block_release(v8);

  id v17 = sub_1003307E4;
  uint64_t v18 = 0;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  NSString v15 = sub_10032C4DC;
  id v16 = &unk_1005CE368;
  long long v10 = _Block_copy(&v13);
  id v11 = v9;
  [v11 setErrorRecoveryHandler:v10];
  _Block_release(v10);

  id v12 = [self defaultManager];
  [v12 scheduleAction:v11];
}

uint64_t sub_1003306F8(uint64_t a1, void (*a2)(void *, id))
{
  if (!a1) {
    goto LABEL_5;
  }
  swift_errorRetain();
  id v3 = (void *)sub_1004CAA50();
  char v4 = sub_1004CEE70();

  if ((v4 & 1) == 0)
  {
    swift_errorRelease();
LABEL_5:
    id v5 = objc_msgSend(objc_allocWithZone((Class)NSError), "init", (unsigned __int128)0, 0, 0);
    a2(v7, v5);

    return sub_100049B74((uint64_t)v7, &qword_10062BA60);
  }
  v7[3] = &type metadata for String;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  a2(v7, 0);
  swift_errorRelease();
  return sub_100049B74((uint64_t)v7, &qword_10062BA60);
}

void sub_1003307E4()
{
  uint64_t v0 = (void *)sub_1004CAA50();
  id v1 = [v0 recoveryAttempter];

  if (v1)
  {
    sub_1004CF2A0();
    swift_unknownObjectRelease();
    sub_100032FC8(&v4, &v5);
    sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
    swift_dynamicCast();
    uint64_t v2 = (void *)sub_1004CAA50();
    [v3 attemptRecoveryFromError:v2 optionIndex:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003308C8(void (*a1)(void *, void), uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v29 = a5;
  uint64_t v9 = type metadata accessor for DOCOperationItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (void **)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  NSString v15 = (void *)((char *)v27 - v14);
  unint64_t v30 = a3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v17 = _swiftEmptyArrayStorage;
  if (!v16)
  {
LABEL_16:
    sub_100329BA0(5, (uint64_t)v17, 0, 0, 0, 1, v29, 0, 0);
    swift_bridgeObjectRelease();
    v31[3] = sub_100031648(&qword_100633BE0);
    v31[0] = v30;
    swift_bridgeObjectRetain();
    a1(v31, 0);
    return sub_100049B74((uint64_t)v31, &qword_10062BA60);
  }
  v31[0] = _swiftEmptyArrayStorage;
  uint64_t result = sub_10018881C(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v27[1] = a4;
    v27[2] = a2;
    uint64_t v28 = a1;
    id v17 = (void *)v31[0];
    if ((v30 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        *NSString v15 = sub_1004CF500();
        swift_storeEnumTagMultiPayload();
        v31[0] = v17;
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (v21 >= v20 >> 1)
        {
          sub_10018881C(v20 > 1, v21 + 1, 1);
          id v17 = (void *)v31[0];
        }
        void v17[2] = v21 + 1;
        sub_1000D27D0((uint64_t)v15, (uint64_t)v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v21);
      }
    }
    else
    {
      id v22 = (void **)(v30 + 32);
      do
      {
        id v23 = *v22;
        void *v13 = *v22;
        swift_storeEnumTagMultiPayload();
        v31[0] = v17;
        unint64_t v25 = v17[2];
        unint64_t v24 = v17[3];
        id v26 = v23;
        if (v25 >= v24 >> 1)
        {
          sub_10018881C(v24 > 1, v25 + 1, 1);
          id v17 = (void *)v31[0];
        }
        void v17[2] = v25 + 1;
        sub_1000D27D0((uint64_t)v13, (uint64_t)v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v25);
        ++v22;
        --v16;
      }
      while (v16);
    }
    a1 = v28;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_100330BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v8 = (id)sub_1004CAA50();
    if (sub_1004CEE70())
    {
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a3;
      *(void *)(v6 + 24) = a4;
      aBlock[4] = sub_100049C64;
      void aBlock[5] = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1003A422C;
      uint64_t aBlock[3] = &unk_1005CE2F0;
      uint64_t v7 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v7);
    }
    else
    {
    }
  }
}

uint64_t FPItemManager.rename(item:name:overwriteExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 80) = a4;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  return _swift_task_switch(sub_100330D18, 0, 0);
}

uint64_t sub_100330D18()
{
  uint64_t v1 = *(void *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 80);
  long long v8 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = v8;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  *uint64_t v5 = v0;
  v5[1] = sub_100330E50;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000025, 0x8000000100530610, sub_100339BFC, v4, v6);
}

uint64_t sub_100330E50()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_100330F88;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_100330F6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100330F6C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_100330F88()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100330FEC(uint64_t a1, void **a2, uint64_t a3, void *a4, int a5, void *a6)
{
  uint64_t v43 = a6;
  HIDWORD(v38) = a5;
  uint64_t v40 = a1;
  uint64_t v42 = sub_100031648(&qword_100634480);
  uint64_t v9 = *(void *)(v42 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v42);
  os_log_type_t v41 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = a4;
  id v11 = [a4 filename];
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 pathExtension];

    uint64_t v14 = sub_1004CDB50();
    uint64_t v16 = v15;

    BOOL v17 = sub_1004CDC10();
    NSString v18 = sub_1004CDB10();
    id v19 = [v18 pathExtension];

    sub_1004CDB50();
    BOOL v20 = sub_1004CDC10();
    swift_bridgeObjectRelease();
    if (v17)
    {
      unint64_t v21 = v43;
      if (v20)
      {
        if ((v38 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
LABEL_10:
          uint64_t v27 = v39;
          sub_1004CBF10();
          uint64_t v28 = self;
          id v29 = v27;
          id v30 = [v28 shared];
          uint64_t v31 = (void *)sub_1004CBEF0();
          uint64_t v32 = v41;
          uint64_t v33 = v42;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v41, v40, v42);
          unint64_t v34 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
          uint64_t v35 = swift_allocObject();
          (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v35 + v34, v32, v33);
          unint64_t v48 = sub_10033BD18;
          uint64_t v49 = v35;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v45 = 1107296256;
          uint64_t v46 = sub_10032D174;
          uint64_t v47 = &unk_1005CE5C0;
          Swift::String v36 = _Block_copy(&aBlock);
          id v37 = v31;
          swift_release();
          [v37 setFinishedBlock:v36];
          _Block_release(v36);

          [v21 scheduleAction:v37];
          return;
        }
        NSString v22 = sub_1004CDB10();
        id v23 = [v22 stringByDeletingPathExtension];

        uint64_t v24 = sub_1004CDB50();
        uint64_t v26 = v25;

        long long aBlock = (void **)v24;
        uint64_t v45 = v26;
      }
      else
      {
        long long aBlock = a2;
        uint64_t v45 = a3;
        swift_bridgeObjectRetain();
      }
      v50._countAndFlagsBits = 46;
      v50._object = (void *)0xE100000000000000;
      sub_1004CDCD0(v50);
      v51._countAndFlagsBits = v14;
      v51._object = v16;
      sub_1004CDCD0(v51);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = v43;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1003313B0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    v4[0] = a2;
    swift_errorRetain();
  }
  else
  {
    sub_1000335A8(a1, (uint64_t)v4, &qword_10062BA60);
    if (v4[3])
    {
      sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
      if (swift_dynamicCast())
      {
        v4[0] = v3;
        sub_100031648(&qword_100634480);
        return sub_1004CDF90();
      }
    }
    else
    {
      sub_100049B74((uint64_t)v4, &qword_10062BA60);
    }
    v4[0] = [objc_allocWithZone((Class)NSError) init];
  }
  sub_100031648(&qword_100634480);
  return sub_1004CDF80();
}

uint64_t FPItemManager.duplicateItems(_:desiredFileNames:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_1003314CC, 0, 0);
}

uint64_t sub_1003314CC()
{
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = v0[5];
    long long v9 = *(_OWORD *)(v0 + 3);
    uint64_t v3 = swift_task_alloc();
    v0[6] = v3;
    *(_OWORD *)(v3 + 16) = v9;
    *(void *)(v3 + 32) = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    uint64_t v5 = sub_100031648(&qword_100633BE0);
    *uint64_t v4 = v0;
    v4[1] = sub_100331684;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000023, 0x8000000100530640, sub_100339C10, v3, v5);
  }
  sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
  sub_1004CEE50();
  swift_willThrow();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100331684()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003317A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100330F6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003317A0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100331804(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v19 = a3;
  BOOL v20 = a4;
  uint64_t v6 = sub_100031648(&qword_100634478);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  if (a2 >> 62)
  {
    sub_100031648(&qword_1006274C0);
    unint64_t v10 = sub_1004CF6C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1004CF8A0();
    unint64_t v10 = a2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v11, v9, v6);
  *(void *)(v15 + v12) = a2;
  *(void *)(v15 + v13) = v19;
  uint64_t v16 = v20;
  *(void *)(v15 + v14) = v20;
  swift_bridgeObjectRetain();
  id v17 = v16;
  swift_bridgeObjectRetain();
  sub_1002CA03C(v10, (void (*)(void *))sub_10033BB1C, v15);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1003319F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v10 = sub_100031648(&qword_100634478);
  unint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || (swift_getObjectType(), (uint64_t v14 = sub_1004CED30()) == 0))
  {
    sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
    uint64_t aBlock = sub_1004CEE50();
    sub_1004CDF80();
    return;
  }
  uint64_t v15 = (void *)v14;
  id v68 = a5;
  uint64_t v16 = self;
  unint64_t v72 = a3;
  id v17 = (void *)v16;
  swift_bridgeObjectRetain();
  unint64_t v18 = v15;
  uint64_t v19 = v17;
  unint64_t isUniquelyReferenced_nonNull_native = v72;
  id v21 = [v19 shared];
  id v22 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
  id v23 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(isUniquelyReferenced_nonNull_native, (void *)v18, 1, v21);
  [v23 setLastUsageUpdatePolicy:2];
  [v23 setShouldBounceOnCollision:1];
  if (!a4) {
    goto LABEL_38;
  }
  uint64_t v71 = v23;
  uint64_t v62 = v12;
  uint64_t v24 = (void *)sub_100021DA8((uint64_t)_swiftEmptyArrayStorage);
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_1004CF6D0();
  }
  else
  {
    uint64_t v25 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  uint64_t v63 = v13;
  unint64_t v64 = v11;
  uint64_t v65 = a2;
  unint64_t v66 = v18;
  uint64_t v67 = v10;
  if (!v25)
  {
    unint64_t v18 = (unint64_t)v71;
LABEL_37:
    swift_bridgeObjectRelease_n();
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    sub_10033B3F0(&qword_100632B88, (unint64_t *)&qword_100627EE0);
    id v56 = (id)v18;
    swift_bridgeObjectRetain();
    Class isa = sub_1004CD990().super.isa;
    swift_bridgeObjectRelease();
    [v56 setTargetFilenamesByItem:isa];
    swift_bridgeObjectRelease();

    id v23 = (char *)v18;
    unint64_t v18 = v66;
    uint64_t v10 = v67;
    unint64_t v11 = v64;
    a2 = v65;
    uint64_t v12 = v62;
    uint64_t v13 = v63;
LABEL_38:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
    unint64_t v58 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v59 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v59 + v58, v13, v10);
    *(void *)(v59 + ((v12 + v58 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
    uint64_t v79 = sub_10033BBE0;
    uint64_t v80 = v59;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_100060248;
    id v78 = &unk_1005CE570;
    Class v60 = _Block_copy(&aBlock);
    uint64_t v61 = v23;
    swift_release();
    [v61 setActionCompletionBlock:v60];
    _Block_release(v60);

    [v68 scheduleAction:v61];
    return;
  }
  a2 = v25;
  unint64_t v11 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v26 = a4 + 5;
  unint64_t v73 = a4[2];
  uint64_t v13 = 4;
  unint64_t v18 = (unint64_t)v71;
  unint64_t v69 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v70 = v25;
  while (1)
  {
    unint64_t v27 = v13 - 4;
    if (v11) {
      uint64_t v28 = (uint64_t *)sub_1004CF500();
    }
    else {
      uint64_t v28 = (uint64_t *)*(id *)(isUniquelyReferenced_nonNull_native + 8 * v13);
    }
    a4 = v28;
    uint64_t v10 = v13 - 3;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v27 >= v73)
    {

      goto LABEL_9;
    }
    id v29 = [v28 filename];
    if (!v29) {
      break;
    }
    id v30 = v29;
    id v31 = [v29 pathExtension];

    uint64_t v32 = sub_1004CDB50();
    unint64_t v11 = v33;

    swift_bridgeObjectRetain();
    NSString v34 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    id v35 = [v34 pathExtension];

    uint64_t v36 = sub_1004CDB50();
    unint64_t v38 = v37;

    uint64_t v39 = *(v26 - 1);
    uint64_t v74 = *v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0) {
      uint64_t v40 = v36 & 0xFFFFFFFFFFFFLL;
    }
    if (v40) {
      goto LABEL_19;
    }
    uint64_t v41 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v41 = v32 & 0xFFFFFFFFFFFFLL;
    }
    if (!v41)
    {
LABEL_19:
      a2 = v39;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t aBlock = v39;
      uint64_t v76 = v74;
      v81._countAndFlagsBits = 46;
      v81._object = (void *)0xE100000000000000;
      sub_1004CDCD0(v81);
      v82._countAndFlagsBits = v32;
      v82._object = (void *)v11;
      sub_1004CDCD0(v82);
      swift_bridgeObjectRelease();
      a2 = aBlock;
      uint64_t v74 = v76;
    }
    a4 = a4;
    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t aBlock = (uint64_t)v24;
    unint64_t v18 = sub_1001DC14C((uint64_t)a4);
    uint64_t v43 = v24[2];
    BOOL v44 = (v42 & 1) == 0;
    uint64_t v45 = v43 + v44;
    if (__OFADD__(v43, v44)) {
      goto LABEL_40;
    }
    unint64_t v11 = v42;
    if (v24[3] >= v45)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_10049F158();
      }
    }
    else
    {
      sub_100495E94(v45, isUniquelyReferenced_nonNull_native);
      unint64_t v46 = sub_1001DC14C((uint64_t)a4);
      if ((v11 & 1) != (v47 & 1)) {
        goto LABEL_44;
      }
      unint64_t v18 = v46;
    }
    unint64_t isUniquelyReferenced_nonNull_native = v72;
    uint64_t v24 = (void *)aBlock;
    if (v11)
    {
      unint64_t v48 = (uint64_t *)(*(void *)(aBlock + 56) + 16 * v18);
      swift_bridgeObjectRelease();
      uint64_t v49 = v74;
      *unint64_t v48 = a2;
      v48[1] = v49;
    }
    else
    {
      *(void *)(aBlock + 8 * (v18 >> 6) + 64) |= 1 << v18;
      *(void *)(v24[6] + 8 * v18) = a4;
      Swift::String v50 = (uint64_t *)(v24[7] + 16 * v18);
      uint64_t v51 = v74;
      *Swift::String v50 = a2;
      v50[1] = v51;
      uint64_t v52 = v24[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_41;
      }
      v24[2] = v54;
      id v55 = a4;
    }

    swift_bridgeObjectRelease();
    a2 = v70;
    unint64_t v18 = (unint64_t)v71;
    unint64_t v11 = v69;
LABEL_9:
    v26 += 2;
    ++v13;
    if (v10 == a2) {
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_44:
  sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  sub_1004CF910();
  __break(1u);
}

uint64_t sub_1003320EC(uint64_t a1, int a2, id a3)
{
  if (a1)
  {
    swift_errorRetain();
LABEL_3:
    sub_100031648(&qword_100634478);
    return sub_1004CDF80();
  }
  id v4 = [a3 transferResults];
  if (!v4)
  {
    sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
    sub_1004CEE50();
    goto LABEL_3;
  }
  uint64_t v5 = v4;
  sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  sub_1004CD9A0();

  uint64_t v6 = swift_bridgeObjectRetain();
  sub_100317D54(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100031648(&qword_100634478);
  sub_1004CDF90();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_100332218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  id v8 = [v7 shared];
  id v9 = objc_allocWithZone((Class)sub_1004CBED0());
  uint64_t v10 = (void *)sub_1004CBEC0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  v13[4] = sub_10033C758;
  v13[5] = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100060248;
  v13[3] = &unk_1005CE480;
  uint64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  [v10 setActionCompletionBlock:v12];
  _Block_release(v12);
  [v4 scheduleAction:v10];
}

uint64_t sub_10033237C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100031648(&qword_100634470);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_100332218(a3, (uint64_t)sub_10033B9AC, v9);
  return swift_release();
}

void sub_1003324C4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100031648(&qword_100634470);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v9 = self;
  swift_bridgeObjectRetain();
  id v10 = [v9 shared];
  uint64_t v11 = (objc_class *)type metadata accessor for DOCTrashOperation();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC14RecentsAvocado17DOCTrashOperation_sourceParentFolderItem] = 0;
  *(void *)&v12[OBJC_IVAR____TtC14RecentsAvocado17DOCTrashOperation_undoManager] = v10;
  sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  id v13 = v10;
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  v21.receiver = v12;
  v21.super_class = v11;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v21, "initWithItems:", isa);

  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC14RecentsAvocado17DOCTrashOperation_undoManager];
  id v17 = v15;
  [v16 registerUndoOperationForSender:v17];

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10033B9AC;
  *(void *)(v18 + 24) = v8;
  aBlock[4] = sub_10033BA24;
  void aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100060248;
  uint64_t aBlock[3] = &unk_1005CE4F8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v17 setActionCompletionBlock:v19];
  _Block_release(v19);
  [a2 scheduleAction:v17];
  swift_release();
}

uint64_t sub_1003327B4(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_100031648(&qword_100634470);
    return sub_1004CDF80();
  }
  else
  {
    sub_100031648(&qword_100634470);
    return sub_1004CDF90();
  }
}

uint64_t FPItemManager.trashOrDeleteItems(_:confirmationHandler:forceConfirmation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 160) = a4;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return _swift_task_switch(sub_100332840, 0, 0);
}

uint64_t sub_100332840()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_39;
    }
  }
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
  if (v2 < 1)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v29) {
      goto LABEL_32;
    }
LABEL_24:
    uint64_t v21 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_task_alloc();
    *(void *)(v0 + 88) = v22;
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v1;
    id v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v23;
    void *v23 = v0;
    v23[1] = sub_100333390;
    uint64_t v24 = (char *)&type metadata for () + 8;
    unint64_t v25 = 0x8000000100530670;
    uint64_t v26 = sub_100339C1C;
    unint64_t v27 = 0xD000000000000022;
    uint64_t v28 = v22;
    goto LABEL_25;
  }
  unint64_t v38 = v1 & 0xC000000000000001;
  uint64_t v36 = *(void *)(v0 + 32) + 32;
  uint64_t v3 = (void *)FPActionTrash;
  unint64_t v37 = (void *)FPActionDelete;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (v38) {
      id v5 = (id)sub_1004CF500();
    }
    else {
      id v5 = *(id *)(v36 + 8 * i);
    }
    uint64_t v6 = v5;
    unint64_t v7 = *(void **)(v0 + 56);
    sub_100031648(&qword_100628240);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1004E5710;
    *(void *)(v9 + 32) = v6;
    sub_1004CDE50();
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    id v10 = v6;
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v7 eligibleActionsForItems:isa];

    type metadata accessor for FPAction(0);
    sub_10033B51C((unint64_t *)&qword_1006342E0, type metadata accessor for FPAction);
    uint64_t v13 = sub_1004CE120();

    id v14 = v3;
    LOBYTE(isa) = sub_100329380((uint64_t)v14, v13);

    if (isa)
    {
      swift_bridgeObjectRelease();
      v10;
      sub_1004CDE00();
      if (*(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1004CDE60();
      goto LABEL_7;
    }
    id v15 = v37;
    char v16 = sub_100329380((uint64_t)v15, v13);
    swift_bridgeObjectRelease();

    if (v16)
    {
      v10;
      sub_1004CDE00();
      if (*(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1004CDE60();
LABEL_7:
      sub_1004CDF40();
      sub_1004CDE50();
    }
  }
  int v17 = *(unsigned __int8 *)(v0 + 160);
  swift_bridgeObjectRelease();
  if (v17 == 1)
  {
    uint64_t v39 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v18;
    *uint64_t v18 = v0;
    uint64_t v19 = sub_100332F24;
    goto LABEL_19;
  }
  unint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 80) = v1;
  if (v1 >> 62) {
    goto LABEL_31;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_24;
  }
LABEL_32:
  unint64_t v30 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v30;
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_38;
    }
LABEL_34:
    if ((*(unsigned char *)(v0 + 160) & 1) == 0)
    {
      uint64_t v39 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v18;
      *uint64_t v18 = v0;
      uint64_t v19 = sub_10033378C;
LABEL_19:
      v18[1] = v19;
      return v39();
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v0 + 112);
    uint64_t v32 = *(void *)(v0 + 56);
    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 136) = v33;
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    id v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v23;
    void *v23 = v0;
    v23[1] = sub_100333A18;
    unint64_t v27 = 0xD000000000000023;
    uint64_t v24 = (char *)&type metadata for () + 8;
    unint64_t v25 = 0x80000001005306A0;
    uint64_t v26 = sub_100339C24;
    uint64_t v28 = v33;
LABEL_25:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v23, 0, 0, v27, v25, v26, v28, v24);
  }
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_34;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_39:
  id v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_100332F24()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100333C24;
  }
  else {
    uint64_t v2 = sub_100333038;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100333038()
{
  unint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 80) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 88) = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100333390;
    id v5 = (char *)&type metadata for () + 8;
    unint64_t v6 = 0x8000000100530670;
    unint64_t v7 = sub_100339C1C;
    unint64_t v8 = 0xD000000000000022;
    uint64_t v9 = v3;
LABEL_4:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, v8, v6, v7, v9, v5);
  }
  unint64_t v11 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v11;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_10;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_10:
  if (*(unsigned char *)(v0 + 160))
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 136) = v14;
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v12;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100333A18;
    unint64_t v8 = 0xD000000000000023;
    id v5 = (char *)&type metadata for () + 8;
    unint64_t v6 = 0x80000001005306A0;
    unint64_t v7 = sub_100339C24;
    uint64_t v9 = v14;
    goto LABEL_4;
  }
  uint64_t v19 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  id v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v15;
  *id v15 = v0;
  v15[1] = sub_10033378C;
  return v19();
}

uint64_t sub_100333390()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100333710;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1003334AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003334AC()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      if (*(unsigned char *)(v0 + 160))
      {
        swift_bridgeObjectRetain();
        uint64_t v2 = *(void *)(v0 + 112);
        uint64_t v3 = *(void *)(v0 + 56);
        uint64_t v4 = swift_task_alloc();
        *(void *)(v0 + 136) = v4;
        *(void *)(v4 + 16) = v3;
        *(void *)(v4 + 24) = v2;
        id v5 = (void *)swift_task_alloc();
        *(void *)(v0 + 144) = v5;
        *id v5 = v0;
        v5[1] = sub_100333A18;
        return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000023, 0x80000001005306A0, sub_100339C24, v4, (char *)&type metadata for () + 8);
      }
      else
      {
        uint64_t v10 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v6 = (void *)swift_task_alloc();
        *(void *)(v0 + 120) = v6;
        *unint64_t v6 = v0;
        v6[1] = sub_10033378C;
        return v10();
      }
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100333710()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10033378C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003339A0;
  }
  else {
    uint64_t v2 = sub_1003338A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003338A0()
{
  swift_release();
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_task_alloc();
  v0[17] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100333A18;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000023, 0x80000001005306A0, sub_100339C24, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1003339A0()
{
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100333A18()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100333BAC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100333B34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100333B34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100333BAC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100333C24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100333C90()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = (void *)sub_1004CAA50();
      sub_100339FD4(v4, v3);

      uint64_t v1 = v4;
    }
  }
}

uint64_t sub_100333D38(uint64_t a1, void *a2)
{
  if (a1)
  {
    uint64_t v3 = (void *)sub_1004CAA50();
    uint64_t v4 = (void *)sub_1004CC620();
    sub_1004CE360();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1004E5790;
    *(void *)(v5 + 56) = sub_1000333C8(0, &qword_1006287A0);
    *(void *)(v5 + 64) = sub_10033B3F0(&qword_1006287A8, &qword_1006287A0);
    *(void *)(v5 + 32) = a2;
    *(void *)(v5 + 96) = sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
    *(void *)(v5 + 104) = sub_10033B3F0((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
    *(void *)(v5 + 72) = v3;
    id v6 = a2;
    id v7 = v3;
    sub_1004CC640();
  }
  else
  {
    uint64_t v4 = (void *)sub_1004CC620();
    sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1004E12A0;
    *(void *)(v8 + 56) = sub_1000333C8(0, &qword_1006287A0);
    *(void *)(v8 + 64) = sub_10033B3F0(&qword_1006287A8, &qword_1006287A0);
    *(void *)(v8 + 32) = a2;
    id v9 = a2;
    sub_1004CC640();
  }

  return swift_bridgeObjectRelease();
}

void sub_100333F5C(NSObject *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5)
{
  uint64_t v54 = a5;
  os_log_t v55 = a1;
  unint64_t v58 = a3;
  uint64_t v7 = sub_100031648((uint64_t *)&unk_10062F900);
  uint64_t v53 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1004CC770();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v52 - v14;
  uint64_t v16 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1004CAC10();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    sub_1004CC710();
    swift_errorRetain();
    id v23 = a4;
    swift_errorRetain();
    uint64_t v24 = v23;
    unint64_t v25 = sub_1004CC760();
    os_log_type_t v26 = sub_1004CE360();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      os_log_t v55 = v25;
      uint64_t v28 = v27;
      uint64_t v29 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 138412546;
      uint64_t v59 = v24;
      unint64_t v30 = v24;
      sub_1004CF1F0();
      *uint64_t v29 = v24;

      *(_WORD *)(v28 + 12) = 2112;
      swift_errorRetain();
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v59 = v31;
      sub_1004CF1F0();
      v29[1] = v31;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v32 = v55;
      _os_log_impl((void *)&_mh_execute_header, v55, v26, "Error fetching the url for item %@: %@", (uint8_t *)v28, 0x16u);
      sub_100031648((uint64_t *)&unk_100628890);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v57);
    uint64_t v43 = v58;
  }
  else
  {
    uint64_t v33 = v9;
    uint64_t v35 = v53;
    uint64_t v34 = v54;
    sub_1000335A8((uint64_t)v55, (uint64_t)v18, (uint64_t *)&unk_10062B3B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_100049B74((uint64_t)v18, (uint64_t *)&unk_10062B3B0);
      uint64_t v36 = v13;
      sub_1004CC710();
      unint64_t v37 = a4;
      unint64_t v38 = sub_1004CC760();
      os_log_type_t v39 = sub_1004CE360();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 138412290;
        uint64_t v59 = v37;
        unint64_t v42 = v37;
        sub_1004CF1F0();
        void *v41 = v37;

        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Error fetching the url for item: %@ but also did not get an error", v40, 0xCu);
        sub_100031648((uint64_t *)&unk_100628890);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        unint64_t v38 = v37;
      }
      uint64_t v43 = v58;

      (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
    }
    else
    {
      BOOL v44 = (unint64_t *)(v34 + 16);
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
      uint64_t v45 = *(int *)(v7 + 48);
      uint64_t v46 = (uint64_t)v33;
      *(void *)uint64_t v33 = a4;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(&v33[v45], v22, v19);
      swift_beginAccess();
      unint64_t v47 = *v44;
      id v48 = a4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v44 = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v47 = sub_100238660(0, *(void *)(v47 + 16) + 1, 1, v47);
        unint64_t *v44 = v47;
      }
      unint64_t v51 = *(void *)(v47 + 16);
      unint64_t v50 = *(void *)(v47 + 24);
      if (v51 >= v50 >> 1)
      {
        unint64_t v47 = sub_100238660(v50 > 1, v51 + 1, 1, v47);
        unint64_t *v44 = v47;
      }
      uint64_t v43 = v58;
      *(void *)(v47 + 16) = v51 + 1;
      sub_100031790(v46, v47+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v51, (uint64_t *)&unk_10062F900);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  dispatch_group_leave(v43);
}

uint64_t sub_100334600(uint64_t a1, void (*a2)(void, __n128), uint64_t a3)
{
  uint64_t v34 = sub_100031648((uint64_t *)&unk_10062F900);
  uint64_t v6 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v28 - v9;
  uint64_t v11 = sub_1004CAC10();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v35 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (v15)
  {
    v28[1] = a3;
    uint64_t v29 = a2;
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_1001882FC(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v18 = *(void *)(v6 + 72);
    unint64_t v30 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v31 = v18;
    uint64_t v32 = v12;
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v20 = v35;
    do
    {
      sub_1000335A8(v17, (uint64_t)v10, (uint64_t *)&unk_10062F900);
      uint64_t v21 = *(int *)(v34 + 48);
      uint64_t v22 = &v33[v21];
      (*v30)(&v33[v21], &v10[v21], v11);
      id v23 = *v19;
      (*v19)(v20, v22, v11);
      sub_100049B74((uint64_t)v10, (uint64_t *)&unk_10062F900);
      uint64_t v16 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001882FC(0, v16[2] + 1, 1);
        uint64_t v16 = v36;
      }
      unint64_t v25 = v16[2];
      unint64_t v24 = v16[3];
      if (v25 >= v24 >> 1)
      {
        sub_1001882FC(v24 > 1, v25 + 1, 1);
        uint64_t v16 = v36;
      }
      void v16[2] = v25 + 1;
      unint64_t v26 = (unint64_t)v16
          + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))
          + *(void *)(v32 + 72) * v25;
      uint64_t v20 = v35;
      v23((char *)v26, v35, v11);
      uint64_t v36 = v16;
      v17 += v31;
      --v15;
    }
    while (v15);
    a2 = v29;
  }
  a2(v16, v13);
  return swift_bridgeObjectRelease();
}

void sub_1003348F0()
{
  uint64_t v1 = sub_1004CC770();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self protectedAppsEnabled])
  {
    sub_1004CC710();
    id v5 = v0;
    uint64_t v6 = sub_1004CC760();
    os_log_type_t v7 = sub_1004CE350();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v17 = v15;
      *(_DWORD *)uint64_t v8 = 136315650;
      os_log_t v13 = v6;
      uint64_t v16 = sub_100187CC4(0xD000000000000023, 0x8000000100521DF0, &v17);
      sub_1004CF1F0();
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v16 = sub_100187CC4(0xD000000000000023, 0x8000000100521DF0, &v17);
      sub_1004CF1F0();
      *(_WORD *)(v8 + 22) = 2112;
      uint64_t v16 = (uint64_t)v5;
      id v9 = v5;
      sub_1004CF1F0();
      *uint64_t v14 = v5;

      os_log_t v10 = v13;
      _os_log_impl((void *)&_mh_execute_header, v13, v7, "%s [PROTECTED APPS] %s %@", (uint8_t *)v8, 0x20u);
      sub_100031648((uint64_t *)&unk_100628890);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    id v11 = [self defaultCenter];
    [v11 addObserver:v5 selector:"updateQueryFiltersForNewApps" name:DOCAppProtectionStatusDidChangeNotification object:0];
  }
}

BOOL sub_100334C18(void *a1, void *a2)
{
  id v3 = [a1 topLevelBundleIdentifier];
  uint64_t v4 = sub_1004CDB50();
  uint64_t v6 = v5;

  LOBYTE(a2) = sub_100109BB4(v4, v6, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t sub_100334C8C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_100334CD0()
{
  type metadata accessor for QueryCollectionDelayedLoadingSimulator();
  swift_allocObject();
  uint64_t result = sub_100335688();
  qword_1006342A0 = result;
  return result;
}

uint64_t sub_100334D10(uint64_t result, void *a2)
{
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    char v4 = (void *)result;
    uint64_t v5 = *(void **)(v2 + 16);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = a2;
    v6[3] = v2;
    v6[4] = v4;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_10033B888;
    *(void *)(v7 + 24) = v6;
    v13[4] = sub_1000674E0;
    v13[5] = v7;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100125C48;
    v13[3] = &unk_1005CE188;
    uint64_t v8 = _Block_copy(v13);
    id v9 = v5;
    id v10 = a2;
    swift_retain();
    id v11 = v4;
    swift_retain();
    swift_release();
    dispatch_sync(v9, v8);

    _Block_release(v8);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100334E94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v37 = sub_1004CD860();
  uint64_t v40 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1004CD8C0();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1004CD900();
  uint64_t v10 = *(void *)(v36 - 8);
  uint64_t v11 = __chkstk_darwin(v36);
  os_log_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_1004CDB50();
  uint64_t v18 = v17;
  if (v16 == sub_1004CDB50() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    unint64_t v22 = 0;
  }
  else
  {
    char v21 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
      unint64_t v22 = 0;
    }
    else
    {
      swift_beginAccess();
      unint64_t v22 = *(void *)(*(void *)(a2 + 40) + 16);
    }
  }
  id v23 = [a3 allowedProviderIdentifiers];
  if (v23)
  {
    unint64_t v24 = v23;
    uint64_t v25 = sub_1004CDE30();
  }
  else
  {
    uint64_t v25 = 0;
  }
  Class isa = sub_1004CDE10().super.isa;
  [a3 setAllowedProviderIdentifiers:isa];

  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a3;
  *(void *)(v27 + 24) = v25;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a2 + 40) + 16) < v22)
  {
    __break(1u);
  }
  else
  {
    id v29 = a3;
    sub_1002D2BF0(v22, v22, (uint64_t)sub_10033B8E4, v27);
    uint64_t result = swift_endAccess();
    if (*(void *)(*(void *)(a2 + 40) + 16) == 1)
    {
      sub_1000333C8(0, (unint64_t *)&qword_100626B70);
      unint64_t v30 = (void *)sub_1004CE630();
      sub_1004CD8E0();
      sub_1004CD970();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v31 = v36;
      v35(v13, v36);
      aBlock[4] = sub_10033B8EC;
      void aBlock[5] = a2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1003A422C;
      uint64_t aBlock[3] = &unk_1005CE1D8;
      uint64_t v32 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_1004CD880();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10033B51C((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100031648((uint64_t *)&unk_100628370);
      sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
      uint64_t v33 = v37;
      sub_1004CF330();
      sub_1004CE600();
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v33);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      return ((uint64_t (*)(char *, uint64_t))v35)(v15, v31);
    }
  }
  return result;
}

id sub_1003353D4(void *a1, Class isa)
{
  [a1 stopObserving];
  if (isa) {
    Class isa = sub_1004CDE10().super.isa;
  }
  [a1 setAllowedProviderIdentifiers:isa];

  return [a1 startObserving];
}

uint64_t sub_100335450(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10033B8F4;
  *(void *)(v3 + 24) = a1;
  void v7[4] = sub_1000BF250;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_100125C48;
  v7[3] = &unk_1005CE228;
  char v4 = _Block_copy(v7);
  uint64_t v5 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v4);

  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100335594(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v2 = (void *)(a1 + 40);
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  *uint64_t v2 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100335648()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_100335688()
{
  uint64_t v1 = v0;
  v10[0] = sub_1004CE620();
  uint64_t v2 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CE5F0();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1004CD8C0();
  __chkstk_darwin(v6 - 8);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  sub_1004CD880();
  v10[1] = _swiftEmptyArrayStorage;
  sub_10033B51C((unint64_t *)&qword_10062CDB0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100031648((uint64_t *)&unk_100626B80);
  sub_10005B6A0((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
  sub_1004CF330();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10[0]);
  *(void *)(v0 + 16) = sub_1004CE670();
  id v7 = [self standardUserDefaults];
  NSString v8 = sub_1004CDB10();
  LOBYTE(v4) = [v7 BOOLForKey:v8];

  *(unsigned char *)(v1 + 24) = (_BYTE)v4;
  *(void *)(v1 + 32) = 0x4000000000000000;
  *(void *)(v1 + 40) = _swiftEmptyArrayStorage;
  return v1;
}

id sub_10033595C()
{
  uint64_t v1 = sub_1004CD860();
  uint64_t v113 = *(void *)(v1 - 8);
  uint64_t v114 = v1;
  __chkstk_darwin(v1);
  v111 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1004CD8C0();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  id v109 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1004CC770();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v115 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v102 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  os_log_t v13 = (char *)&v102 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v102 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v102 - v17;
  id result = [self protectedAppsEnabled];
  if (!result) {
    return result;
  }
  uint64_t v107 = (uint64_t)v16;
  sub_1004CC710();
  uint64_t v20 = v0;
  char v21 = sub_1004CC760();
  os_log_type_t v22 = sub_1004CE350();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v116 = v4;
  uint64_t v117 = v5;
  uint64_t v108 = v10;
  id v105 = v13;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    v106 = (void (*)(char *, uint64_t))swift_slowAlloc();
    aBlock[0] = (uint64_t)v106;
    *(_DWORD *)uint64_t v24 = 136315650;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v24 + 12) = 2080;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v24 + 22) = 2112;
    v118 = v20;
    unint64_t v26 = v20;
    uint64_t v4 = v116;
    sub_1004CF1F0();
    void *v25 = v20;

    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s [PROTECTED APPS] %s %@", (uint8_t *)v24, 0x20u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    uint64_t v5 = v117;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v18, v4);
  uint64_t v28 = self;
  id v29 = [v28 sharedManager];
  sub_100337F44((SEL *)&selRef_protectedApplications, 0xD00000000000001DLL, 0x8000000100530DC0, "%s [PROTECTED APPS] getting OIDs from protectedApplications %s", (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  uint64_t v31 = v30;

  id v32 = [v20 excludedParentOIDs];
  uint64_t v33 = v107;
  v106 = v27;
  id v104 = v20;
  if (v32)
  {
    uint64_t v34 = v32;
    uint64_t v35 = (void *)sub_1004CDE30();

    if (v31)
    {
      char v36 = sub_100282DA4(v35, v31);
      swift_bridgeObjectRelease();
      if (v36)
      {
        swift_bridgeObjectRelease();
LABEL_10:
        int v37 = 0;
        uint64_t v38 = &selRef_setHiddenSourcesIdentifiers_;
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else if (!v31)
  {
    goto LABEL_10;
  }
  v103 = v28;
  sub_1004CC710();
  swift_bridgeObjectRetain_n();
  uint64_t v39 = v20;
  uint64_t v40 = sub_1004CC760();
  os_log_type_t v41 = sub_1004CE350();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    aBlock[0] = v102;
    *(_DWORD *)uint64_t v42 = 136315906;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v42 + 12) = 2080;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v42 + 22) = 2080;
    v118 = v31;
    swift_bridgeObjectRetain();
    sub_100031648(&qword_100634448);
    uint64_t v44 = sub_1004CDBA0();
    v118 = (void *)sub_100187CC4(v44, v45, aBlock);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 32) = 2112;
    v118 = v39;
    uint64_t v46 = v39;
    uint64_t v4 = v116;
    sub_1004CF1F0();
    *uint64_t v43 = v39;

    uint64_t v27 = v106;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s [PROTECTED APPS] %s setting excluded parent OIDs to: %s for collection: %@", (uint8_t *)v42, 0x2Au);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v47 = v107;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v47 = v33;
  }
  v27((char *)v47, v4);
  uint64_t v20 = v104;
  uint64_t v38 = &selRef_setHiddenSourcesIdentifiers_;
  if (v31)
  {
    v48.super.Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v48.super.Class isa = 0;
  }
  [v39 setExcludedParentOIDs:v48.super.isa];

  int v37 = 1;
  uint64_t v28 = v103;
LABEL_19:
  id v49 = [v28 v38[117]];
  id v50 = [v49 hostIdentifier];

  uint64_t v51 = sub_1004CDB50();
  uint64_t v53 = v52;

  uint64_t v54 = (void *)sub_100337530(v51, v53);
  swift_bridgeObjectRelease();
  id result = [v20 allowedProviderIdentifiers];
  if (result)
  {
    os_log_t v55 = result;
    uint64_t v56 = (void *)sub_1004CDE30();

    if (v54)
    {
      char v57 = sub_100282DA4(v56, v54);
      swift_bridgeObjectRelease();
      if (v57)
      {
        id result = (id)swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else if (!v54)
  {
LABEL_24:
    unint64_t v58 = v108;
    if (!v37) {
      return result;
    }
    goto LABEL_34;
  }
  uint64_t v59 = v105;
  sub_1004CC710();
  swift_bridgeObjectRetain_n();
  Class v60 = v20;
  uint64_t v61 = sub_1004CC760();
  os_log_type_t v62 = sub_1004CE350();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = swift_slowAlloc();
    unint64_t v64 = (void *)swift_slowAlloc();
    uint64_t v107 = swift_slowAlloc();
    aBlock[0] = v107;
    *(_DWORD *)uint64_t v63 = 136315906;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v63 + 12) = 2080;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v63 + 22) = 2080;
    v118 = v54;
    swift_bridgeObjectRetain();
    sub_100031648(&qword_100634448);
    uint64_t v65 = sub_1004CDBA0();
    v118 = (void *)sub_100187CC4(v65, v66, aBlock);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 32) = 2112;
    v118 = v60;
    uint64_t v67 = v60;
    uint64_t v4 = v116;
    uint64_t v20 = v104;
    sub_1004CF1F0();
    void *v64 = v60;

    uint64_t v27 = v106;
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s [PROTECTED APPS] %s setting allowedProviderIdentifiers to: %s for collection: %@", (uint8_t *)v63, 0x2Au);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v68 = v105;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    id v68 = v59;
  }
  v27(v68, v4);
  unint64_t v58 = v108;
  if (v54)
  {
    v69.super.Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v69.super.Class isa = 0;
  }
  [v60 setAllowedProviderIdentifiers:v69.super.isa];

LABEL_34:
  sub_1004CC710();
  uint64_t v70 = v20;
  uint64_t v71 = sub_1004CC760();
  os_log_type_t v72 = sub_1004CE350();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    uint64_t v74 = (void *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    aBlock[0] = v75;
    *(_DWORD *)uint64_t v73 = 136316162;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v73 + 12) = 2080;
    v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v73 + 22) = 2080;
    id v76 = [v70 allowedProviderIdentifiers];
    uint64_t v107 = v75;
    if (v76)
    {
      uint64_t v77 = v76;
      uint64_t v78 = sub_1004CDE30();
    }
    else
    {
      uint64_t v78 = 0;
    }
    v118 = (void *)v78;
    sub_100031648(&qword_100634448);
    uint64_t v81 = sub_1004CDBA0();
    v118 = (void *)sub_100187CC4(v81, v82, aBlock);
    sub_1004CF1F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 32) = 2080;
    id v83 = [v70 excludedParentOIDs];
    if (v83)
    {
      uint64_t v84 = v83;
      uint64_t v85 = sub_1004CDE30();
    }
    else
    {
      uint64_t v85 = 0;
    }
    v118 = (void *)v85;
    uint64_t v86 = sub_1004CDBA0();
    v118 = (void *)sub_100187CC4(v86, v87, aBlock);
    sub_1004CF1F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 42) = 2112;
    v118 = v70;
    uint64_t v88 = v70;
    sub_1004CF1F0();
    void *v74 = v70;

    _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s [PROTECTED APPS] %s restarting observation with allowedProviderIdentifiers: %s excludedParentOIDs: %s on collection: %@", (uint8_t *)v73, 0x34u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v116;
    uint64_t v79 = v108;
    uint64_t v80 = v116;
    uint64_t v27 = v106;
  }
  else
  {

    uint64_t v79 = v58;
    uint64_t v80 = v4;
  }
  v27(v79, v80);
  id result = objc_msgSend(v70, "doc_isObserving");
  if (result)
  {
    id v89 = v115;
    sub_1004CC710();
    uint64_t v90 = v70;
    uint64_t v91 = sub_1004CC760();
    os_log_type_t v92 = sub_1004CE350();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      v94 = (void *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315650;
      v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
      sub_1004CF1F0();
      *(_WORD *)(v93 + 12) = 2080;
      v118 = (void *)sub_100187CC4(0xD00000000000001ELL, 0x8000000100521BD0, aBlock);
      sub_1004CF1F0();
      *(_WORD *)(v93 + 22) = 2112;
      v118 = v90;
      id v95 = v90;
      sub_1004CF1F0();
      void *v94 = v90;

      _os_log_impl((void *)&_mh_execute_header, v91, v92, "%s [PROTECTED APPS] %s restarting observation for %@", (uint8_t *)v93, 0x20u);
      sub_100031648((uint64_t *)&unk_100628890);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v106(v115, v116);
    }
    else
    {

      v27(v89, v4);
    }
    id v96 = [v90 workingQueue];
    uint64_t v97 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = (uint64_t)sub_10033B7F4;
    void aBlock[5] = v97;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1003A422C;
    uint64_t aBlock[3] = (uint64_t)&unk_1005CE098;
    id v98 = _Block_copy(aBlock);
    swift_retain();
    id v99 = v109;
    sub_1004CD880();
    v118 = _swiftEmptyArrayStorage;
    sub_10033B51C((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    uint64_t v100 = v111;
    uint64_t v101 = v114;
    sub_1004CF330();
    sub_1004CE650();
    _Block_release(v98);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v100, v101);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v99, v112);
    swift_release();
    return (id)swift_release();
  }
  return result;
}

void sub_100336C68()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    objc_msgSend(Strong, "doc_restartObservation");
  }
}

uint64_t sub_100336D0C(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_1004CAC10();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100031648(&qword_10062F8F0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v65) = a2;
  uint64_t v62 = v3;
  uint64_t v17 = &v15[*(int *)(v12 + 48)];
  unint64_t v61 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v61;
  uint64_t v67 = *(void *)(v13 + 72);
  uint64_t v64 = a1;
  swift_bridgeObjectRetain();
  sub_1000335A8(v18, (uint64_t)v15, &qword_10062F8F0);
  uint64_t v63 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v68 = v7;
  NSArray v69 = v19;
  uint64_t v70 = v8 + 32;
  v19((unint64_t)v10, v15, v7);
  uint64_t v20 = *(void *)v17;
  uint64_t v21 = *((void *)v17 + 1);
  unint64_t v66 = v17;
  uint64_t v71 = a3;
  uint64_t v22 = *a3;
  unint64_t v24 = sub_1001DBBF4((uint64_t)v10);
  uint64_t v25 = *(void *)(v22 + 16);
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_24;
  }
  char v28 = v23;
  if (*(void *)(v22 + 24) >= v27)
  {
    if (v65)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_10049D1CC();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v35 = (void *)*v71;
    *(void *)(*v71 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v36 = v35[6];
    uint64_t v65 = *(void *)(v63 + 72);
    uint64_t v37 = v68;
    v69(v36 + v65 * v24, v10, v68);
    uint64_t v38 = (void *)(v35[7] + 16 * v24);
    *uint64_t v38 = v20;
    v38[1] = v21;
    uint64_t v39 = v35[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v35[2] = v41;
    uint64_t v42 = v16 - 1;
    if (v16 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v43 = v37;
    uint64_t v44 = v64 + v67 + v61;
    while (1)
    {
      sub_1000335A8(v44, (uint64_t)v15, &qword_10062F8F0);
      v69((unint64_t)v10, v15, v43);
      uint64_t v45 = *(void *)v66;
      uint64_t v46 = *((void *)v66 + 1);
      uint64_t v47 = (void *)*v71;
      unint64_t v49 = sub_1001DBBF4((uint64_t)v10);
      uint64_t v50 = v47[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        break;
      }
      char v53 = v48;
      if (v47[3] < v52)
      {
        sub_1004923A0(v52, 1);
        unint64_t v54 = sub_1001DBBF4((uint64_t)v10);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_26;
        }
        unint64_t v49 = v54;
      }
      if (v53) {
        goto LABEL_10;
      }
      uint64_t v56 = (void *)*v71;
      *(void *)(*v71 + 8 * (v49 >> 6) + 64) |= 1 << v49;
      uint64_t v43 = v68;
      v69(v56[6] + v65 * v49, v10, v68);
      char v57 = (void *)(v56[7] + 16 * v49);
      *char v57 = v45;
      v57[1] = v46;
      uint64_t v58 = v56[2];
      BOOL v40 = __OFADD__(v58, 1);
      uint64_t v59 = v58 + 1;
      if (v40) {
        goto LABEL_25;
      }
      v56[2] = v59;
      v44 += v67;
      if (!--v42) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1004923A0(v27, v65 & 1);
  unint64_t v29 = sub_1001DBBF4((uint64_t)v10);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v32 = swift_allocError();
    swift_willThrow();
    uint64_t v74 = v32;
    swift_errorRetain();
    sub_100031648(&qword_1006301E0);
    char v33 = swift_dynamicCast();
    uint64_t v34 = v68;
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v34);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1004CF910();
  __break(1u);
LABEL_27:
  uint64_t v72 = 0;
  unint64_t v73 = 0xE000000000000000;
  sub_1004CF4D0(30);
  v75._object = (void *)0x8000000100530C60;
  v75._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1004CDCD0(v75);
  sub_1004CF600();
  v76._countAndFlagsBits = 39;
  v76._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v76);
  uint64_t result = sub_1004CF6B0();
  __break(1u);
  return result;
}

int64_t sub_100337284(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100337368(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v22 = result + 32;
    uint64_t v20 = a2 + 7;
    uint64_t v21 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v5 = v2;
      }
      else {
        unint64_t v5 = v4;
      }
      unint64_t v23 = v5;
      while (1)
      {
        if (v4 == v23) {
          goto LABEL_34;
        }
        uint64_t v6 = v4++;
        uint64_t v7 = a2[2];
        if (!v7) {
          goto LABEL_7;
        }
        unint64_t v8 = (uint64_t *)(v22 + 16 * v6);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        if (a2[4] == *v8 && a2[5] == v10) {
          break;
        }
        uint64_t result = sub_1004CF890();
        if (result) {
          break;
        }
        if (v7 != 1)
        {
          uint64_t v12 = v20;
          uint64_t v13 = 1;
          while (1)
          {
            uint64_t v14 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              break;
            }
            if (*(v12 - 1) == v9 && *v12 == v10) {
              goto LABEL_25;
            }
            uint64_t result = sub_1004CF890();
            if (result) {
              goto LABEL_25;
            }
            v12 += 2;
            ++v13;
            if (v14 == v7) {
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_7:
        if (v4 == v2) {
          return (uint64_t)v21;
        }
      }
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v16 = v21;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1001882DC(0, v21[2] + 1, 1);
        uint64_t v16 = v21;
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1)
      {
        uint64_t result = sub_1001882DC(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v21;
      }
      void v16[2] = v18 + 1;
      uint64_t v21 = v16;
      uint64_t v19 = &v16[2 * v18];
      v19[4] = v9;
      v19[5] = v10;
      if (v4 == v2) {
        return (uint64_t)v21;
      }
    }
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100337530(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1004CC770();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v58 - v8;
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v58 - v10;
  uint64_t v65 = 0;
  if (a2)
  {
    id v12 = [self defaultPermission];
    NSString v13 = sub_1004CDB10();
    id v14 = [v12 allowedFileProviderBundleIdentifiersForHostBundleIdentifier:v13];

    if (v14)
    {
      a2 = sub_1004CDE30();

      uint64_t v65 = a2;
    }
    else
    {
      a2 = 0;
    }
  }
  uint64_t v15 = self;
  uint64_t v16 = &selRef_setHiddenSourcesIdentifiers_;
  id v17 = [v15 sharedManager];
  unsigned int v18 = [v17 hasAnyProtectedApps];

  if (!v18) {
    goto LABEL_17;
  }
  if (a2)
  {
    sub_1004CC710();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1004CC760();
    os_log_type_t v20 = sub_1004CE360();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      aBlock[0] = v60;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v63 = sub_100187CC4(0xD000000000000020, 0x8000000100530D90, aBlock);
      sub_1004CF1F0();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v59 = v21 + 14;
      swift_bridgeObjectRetain();
      uint64_t v22 = v9;
      uint64_t v23 = sub_1004CDE40();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      uint64_t v26 = v23;
      uint64_t v9 = v22;
      uint64_t v63 = sub_100187CC4(v26, v25, aBlock);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      uint64_t v16 = &selRef_setHiddenSourcesIdentifiers_;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s [PROTECTED APPS] existing allow list from MDM, filtering that list %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v37 = *(void (**)(char *, uint64_t))(v61 + 8);
    v37(v11, v62);
    id v38 = [v15 v16[117]];
    id v39 = [v38 protectedApplicationBundleIDs];

    BOOL v40 = (void *)sub_1004CDE30();
    uint64_t v41 = sub_100337368(a2, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = v41;
    swift_bridgeObjectRetain();
    sub_1004CC710();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1004CC760();
    os_log_type_t v43 = sub_1004CE360();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315394;
      uint64_t v63 = sub_100187CC4(0xD000000000000020, 0x8000000100530D90, aBlock);
      sub_1004CF1F0();
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v63 = v41;
      swift_bridgeObjectRetain();
      sub_100031648(&qword_100634448);
      uint64_t v45 = sub_1004CDBA0();
      uint64_t v63 = sub_100187CC4(v45, v46, aBlock);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s [PROTECTED APPS] final filtered allow list from MDM and Protected Aps: %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v37(v9, v62);
LABEL_17:
    uint64_t v47 = 0;
LABEL_18:
    swift_beginAccess();
    uint64_t v48 = v65;
    sub_1000388F0((uint64_t)v47);
    return v48;
  }
  id v27 = [v15 sharedManager];
  id v28 = [v27 protectedApplicationBundleIDs];

  uint64_t v29 = sub_1004CDE30();
  char v30 = self;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v29;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_10033B7FC;
  *(void *)(v32 + 24) = v31;
  aBlock[4] = (uint64_t)sub_10033B814;
  void aBlock[5] = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100334C8C;
  uint64_t aBlock[3] = (uint64_t)&unk_1005CE110;
  char v33 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v34 = [v30 allowedFileProviderBundleIdentifiersFiltered:v33];
  _Block_release(v33);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v33 & 1) == 0)
  {
    if (v34)
    {
      uint64_t v36 = sub_1004CDE30();
    }
    else
    {
      uint64_t v36 = 0;
    }
    uint64_t v65 = v36;
    swift_bridgeObjectRetain();
    sub_1004CC710();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_1004CC760();
    os_log_type_t v50 = sub_1004CE360();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      aBlock[0] = v60;
      *(_DWORD *)uint64_t v52 = 136315650;
      LODWORD(v59) = v51;
      uint64_t v63 = sub_100187CC4(0xD000000000000020, 0x8000000100530D90, aBlock);
      sub_1004CF1F0();
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1004CDE40();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v63 = sub_100187CC4(v53, v55, aBlock);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2080;
      uint64_t v63 = v36;
      swift_bridgeObjectRetain();
      sub_100031648(&qword_100634448);
      uint64_t v56 = sub_1004CDBA0();
      uint64_t v63 = sub_100187CC4(v56, v57, aBlock);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v59, "%s [PROTECTED APPS] no existing allow list. Filtered out: %s result: %s", (uint8_t *)v52, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v6, v62);
    uint64_t v47 = sub_10033B7FC;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void sub_100337F04()
{
}

void sub_100337F44(SEL *a1, uint64_t a2, unint64_t a3, const char *a4, uint64_t (*a5)(void))
{
  uint64_t v77 = a5;
  id v89 = a4;
  unint64_t v79 = a3;
  uint64_t v78 = a2;
  uint64_t v6 = sub_1004CC770();
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v75 - v10;
  id v90 = self;
  id v12 = [v90 sharedManager];
  id v13 = [v12 *a1];

  uint64_t v88 = sub_1000333C8(0, (unint64_t *)&unk_100634450);
  unint64_t v14 = sub_1004CDE30();

  v91[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    uint64_t v86 = v9;
    if (v15) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v86 = v9;
  if (!v15) {
    goto LABEL_19;
  }
LABEL_3:
  if (v15 < 1)
  {
    __break(1u);
LABEL_65:
    __break(1u);
    return;
  }
  unint64_t v87 = v11;
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v17 = (id)sub_1004CF500();
    }
    else {
      id v17 = *(id *)(v14 + 8 * i + 32);
    }
    unsigned int v18 = v17;
    id v19 = [v17 appContainerBundleID];
    uint64_t v20 = sub_1004CDB50();
    uint64_t v22 = v21;

    id v23 = [v90 sharedManager];
    id v24 = [v23 hostIdentifier];

    uint64_t v25 = sub_1004CDB50();
    uint64_t v27 = v26;

    if (v20 == v25 && v22 == v27)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = sub_1004CF890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29)
      {
      }
      else
      {
        sub_1004CF560();
        sub_1004CF5A0();
        sub_1004CF5B0();
        sub_1004CF570();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = v91[0];
  uint64_t v9 = v86;
  unint64_t v11 = v87;
LABEL_20:
  sub_1004CC710();
  swift_retain_n();
  uint64_t v31 = sub_1004CC760();
  os_log_type_t v32 = sub_1004CE350();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v92 = sub_100187CC4(v78, v79, v91);
    sub_1004CF1F0();
    *(_WORD *)(v33 + 12) = 2080;
    swift_retain();
    uint64_t v34 = sub_1004CDE40();
    unint64_t v36 = v35;
    swift_release();
    uint64_t v92 = sub_100187CC4(v34, v36, v91);
    uint64_t v9 = v86;
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, v89, (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  Swift::String v76 = *(void (**)(char *, uint64_t))(v80 + 8);
  v76(v11, v81);
  id v96 = _swiftEmptyArrayStorage;
  uint64_t v83 = v30;
  if (v30 < 0 || (v30 & 0x4000000000000000) != 0) {
    goto LABEL_59;
  }
  uint64_t v37 = *(void *)(v30 + 16);
  swift_retain();
  for (; v37; uint64_t v37 = sub_1004CF6D0())
  {
    uint64_t v38 = 0;
    uint64_t v84 = v37;
    unint64_t v85 = v83 & 0xC000000000000001;
    uint64_t v82 = v83 + 32;
    while (v85)
    {
      BOOL v40 = (char *)sub_1004CF500();
      BOOL v41 = __OFADD__(v38, 1);
      uint64_t v42 = v38 + 1;
      if (v41) {
        goto LABEL_57;
      }
LABEL_34:
      unint64_t v87 = v40;
      uint64_t v88 = v42;
      id v43 = [v40 oids];
      sub_1000333C8(0, (unint64_t *)&unk_100628330);
      sub_10033B3F0(&qword_100634460, (unint64_t *)&unk_100628330);
      uint64_t v44 = sub_1004CE120();

      id v90 = (id)(v44 & 0xC000000000000001);
      if ((v44 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = sub_1004CF3C0();
        if (!v9) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v9 = *(void *)(v44 + 16);
        if (!v9)
        {
LABEL_39:

          swift_bridgeObjectRelease();
          id v39 = _swiftEmptyArrayStorage;
          goto LABEL_28;
        }
      }
      id v95 = _swiftEmptyArrayStorage;
      sub_1001882DC(0, v9 & ~(v9 >> 63), 0);
      if (v90)
      {
        uint64_t v45 = sub_1004CF360();
        char v47 = 1;
      }
      else
      {
        uint64_t v45 = sub_10004789C(v44);
        char v47 = v48 & 1;
      }
      uint64_t v92 = v45;
      uint64_t v93 = v46;
      char v94 = v47;
      if (v9 < 0) {
        goto LABEL_58;
      }
      unint64_t v49 = (const char *)(v44 & 0xFFFFFFFFFFFFFF8);
      if (v44 < 0) {
        unint64_t v49 = (const char *)v44;
      }
      id v89 = v49;
      do
      {
        while (1)
        {
          int64_t v55 = v92;
          uint64_t v56 = v93;
          char v57 = v94;
          sub_1000479C8(v92, v93, v94, v44);
          uint64_t v59 = v58;
          id v60 = [v58 stringValue];
          uint64_t v61 = sub_1004CDB50();
          uint64_t v63 = v62;

          uint64_t v64 = v95;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001882DC(0, v64[2] + 1, 1);
            uint64_t v64 = v95;
          }
          unint64_t v66 = v64[2];
          unint64_t v65 = v64[3];
          if (v66 >= v65 >> 1)
          {
            sub_1001882DC(v65 > 1, v66 + 1, 1);
            uint64_t v64 = v95;
          }
          v64[2] = v66 + 1;
          uint64_t v67 = &v64[2 * v66];
          v67[4] = v61;
          v67[5] = v63;
          if (v90) {
            break;
          }
          int64_t v50 = sub_100337284(v55, v56, v57, v44);
          uint64_t v52 = v51;
          char v54 = v53;
          sub_1000499AC(v55, v56, v57);
          uint64_t v92 = v50;
          uint64_t v93 = v52;
          char v94 = v54 & 1;
          if (!--v9) {
            goto LABEL_27;
          }
        }
        if ((v57 & 1) == 0) {
          goto LABEL_65;
        }
        if (sub_1004CF380()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100031648(&qword_100634468);
        uint64_t v68 = (void (*)(uint64_t *, void))sub_1004CE140();
        sub_1004CF420();
        v68(v91, 0);
        --v9;
      }
      while (v9);
LABEL_27:
      sub_1000499AC(v92, v93, v94);

      swift_bridgeObjectRelease();
      id v39 = v95;
LABEL_28:
      sub_1001083FC((uint64_t)v39);
      uint64_t v38 = v88;
      uint64_t v9 = v86;
      if (v88 == v84) {
        goto LABEL_60;
      }
    }
    BOOL v40 = (char *)*(id *)(v82 + 8 * v38);
    BOOL v41 = __OFADD__(v38, 1);
    uint64_t v42 = v38 + 1;
    if (!v41) {
      goto LABEL_34;
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_retain();
  }
LABEL_60:
  swift_release_n();
  sub_1004CC710();
  swift_bridgeObjectRetain_n();
  NSArray v69 = sub_1004CC760();
  os_log_type_t v70 = v77();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 136315394;
    uint64_t v92 = sub_100187CC4(v78, v79, v91);
    sub_1004CF1F0();
    *(_WORD *)(v71 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1004CDE40();
    unint64_t v74 = v73;
    swift_bridgeObjectRelease();
    uint64_t v92 = sub_100187CC4(v72, v74, v91);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s [PROTECTED APPS] returning OIDs: %s", (uint8_t *)v71, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v76((char *)v9, v81);
}

uint64_t sub_100338970()
{
  uint64_t v0 = sub_1004CC770();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  self;
  if (swift_dynamicCastObjCClass())
  {
    sub_1004CC710();
    uint64_t v7 = sub_1004CC760();
    os_log_type_t v8 = sub_1004CE350();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v22 = sub_100187CC4(0xD000000000000023, 0x8000000100530FE0, &v23);
      sub_1004CF1F0();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v22 = sub_100187CC4(0xD000000000000023, 0x8000000100530FE0, &v23);
      sub_1004CF1F0();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s [PROTECTED APPS] %s getting OIDs for a user search collection", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    id v10 = [self sharedManager];
    uint64_t v11 = 0xD000000000000020;
    unint64_t v12 = 0x8000000100530DE0;
    id v13 = &selRef_applicationsWithContentHiddenFromSearch;
    unint64_t v14 = "%s [PROTECTED APPS] getting OIDs from applicationsWithContentHiddenFromSearch %s";
    uint64_t v15 = &static os_log_type_t.error.getter;
  }
  else
  {
    sub_1004CC710();
    uint64_t v16 = sub_1004CC760();
    os_log_type_t v17 = sub_1004CE350();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v22 = sub_100187CC4(0xD000000000000023, 0x8000000100530FE0, &v23);
      sub_1004CF1F0();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v22 = sub_100187CC4(0xD000000000000023, 0x8000000100530FE0, &v23);
      sub_1004CF1F0();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s [PROTECTED APPS] %s getting OIDs for a named search location", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    id v10 = [self sharedManager];
    uint64_t v11 = 0xD00000000000001DLL;
    unint64_t v12 = 0x8000000100530DC0;
    id v13 = &selRef_protectedApplications;
    unint64_t v14 = "%s [PROTECTED APPS] getting OIDs from protectedApplications %s";
    uint64_t v15 = &static os_log_type_t.debug.getter;
  }
  sub_100337F44((SEL *)v13, v11, v12, v14, (uint64_t (*)(void))v15);
  uint64_t v20 = v19;

  return v20;
}

id _sSo13FPItemManagerC14RecentsAvocadoE15queryCollection13forIdentifier10properties29supportRemovableFileProvidersSo07FPQueryF0CSo026DOCSpotlightEnumeratedItemH0a_So24DOCEnumerationPropertiesCSbtF_0(void *a1, void *a2, int a3)
{
  int v109 = a3;
  uint64_t v5 = sub_1004CC770();
  uint64_t v107 = *(void *)(v5 - 8);
  uint64_t v108 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1004CB5C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v102 - v14;
  __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)v102 - v16;
  id v18 = [self defaultManager];
  id v110 = a2;
  id v111 = v18;
  id v19 = [a2 allowedContentTypes];
  v106 = v7;
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = (void *)sub_1004CDE30();
  }
  else
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = sub_1004CDB50();
  uint64_t v24 = v23;
  if (v22 == sub_1004CDB50() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    id v27 = [v111 newRecentsCollection];
LABEL_9:
    id v28 = v27;
LABEL_10:
    id v29 = v110;
    goto LABEL_11;
  }
  char v26 = sub_1004CF890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_8;
  }
  uint64_t v52 = sub_1004CDB50();
  uint64_t v54 = v53;
  if (v52 == sub_1004CDB50() && v54 == v55)
  {
    swift_bridgeObjectRelease_n();
LABEL_44:
    id v28 = [v111 newSharedItemsCollection];
    sub_1004CB500();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v21 = (void *)sub_100237710(0, v21[2] + 1, 1, (unint64_t)v21);
    }
    id v29 = v110;
    unint64_t v73 = v21[2];
    unint64_t v72 = v21[3];
    if (v73 >= v72 >> 1) {
      uint64_t v21 = (void *)sub_100237710(v72 > 1, v73 + 1, 1, (unint64_t)v21);
    }
    v21[2] = v73 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v73, v17, v8);
    goto LABEL_11;
  }
  char v71 = sub_1004CF890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v71) {
    goto LABEL_44;
  }
  uint64_t v74 = sub_1004CDB50();
  uint64_t v76 = v75;
  if (v74 == sub_1004CDB50() && v76 == v77)
  {
    swift_bridgeObjectRelease_n();
LABEL_53:
    id v27 = [v111 newFavoritesCollection];
    goto LABEL_9;
  }
  char v78 = sub_1004CF890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v78) {
    goto LABEL_53;
  }
  uint64_t v79 = sub_1004CDB50();
  uint64_t v81 = v80;
  if (v79 == sub_1004CDB50() && v81 == v82)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_81;
  }
  char v83 = sub_1004CF890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v83) {
    goto LABEL_81;
  }
  uint64_t v84 = sub_1004CDB50();
  uint64_t v86 = v85;
  if (v84 != sub_1004CDB50() || v86 != v87)
  {
    char v88 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v88) {
      goto LABEL_61;
    }
    uint64_t v91 = sub_1004CDB50();
    uint64_t v93 = v92;
    if (v91 == sub_1004CDB50() && v93 == v94)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v95 = sub_1004CF890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v95 & 1) == 0)
      {
        while (1)
        {
          v113[0] = 0;
          v113[1] = 0xE000000000000000;
          sub_1004CF4D0(49);
          v114._object = (void *)0x8000000100530F20;
          v114._countAndFlagsBits = 0xD00000000000002ELL;
          sub_1004CDCD0(v114);
          uint64_t v112 = (uint64_t)a1;
          type metadata accessor for DOCSpotlightEnumeratedItemIdentifier(0);
          sub_1004CF600();
          v115._countAndFlagsBits = 39;
          v115._object = (void *)0xE100000000000000;
          sub_1004CDCD0(v115);
LABEL_81:
          sub_1004CF6B0();
          __break(1u);
        }
      }
    }
    id v96 = [v110 tagIdentifiers];
    if (v96)
    {
      uint64_t v97 = v96;
      uint64_t v98 = sub_1004CDE30();

      if (*(void *)(v98 + 16) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v99 = sub_1004CDB10();
        swift_bridgeObjectRelease();
        id v28 = [v111 newCollectionForTag:v99];

LABEL_75:
        sub_1004CB500();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = (void *)sub_100237710(0, v21[2] + 1, 1, (unint64_t)v21);
        }
        unint64_t v101 = v21[2];
        unint64_t v100 = v21[3];
        if (v101 >= v100 >> 1) {
          uint64_t v21 = (void *)sub_100237710(v100 > 1, v101 + 1, 1, (unint64_t)v21);
        }
        v21[2] = v101 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v101, v12, v8);
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    id v28 = [v111 newTagCollection];
    goto LABEL_75;
  }
  swift_bridgeObjectRelease_n();
LABEL_61:
  id v28 = [v111 newSearchCollection];
  sub_1004CB500();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v21 = (void *)sub_100237710(0, v21[2] + 1, 1, (unint64_t)v21);
  }
  id v29 = v110;
  unint64_t v90 = v21[2];
  unint64_t v89 = v21[3];
  if (v90 >= v89 >> 1) {
    uint64_t v21 = (void *)sub_100237710(v89 > 1, v90 + 1, 1, (unint64_t)v21);
  }
  v21[2] = v90 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v90, v15, v8);
LABEL_11:
  swift_bridgeObjectRetain();
  sub_1004CB260();
  swift_bridgeObjectRelease();
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v28 setAllowedFileTypes:isa];

  id v31 = [v29 excludedContentTypes];
  if (v31)
  {
    os_log_type_t v32 = v31;
    sub_1004CDE30();
  }
  sub_1004CB260();
  swift_bridgeObjectRelease();
  Class v33 = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v28 setExcludedFileTypes:v33];

  id v34 = [v29 hostIdentifier];
  if (v34)
  {
    unint64_t v35 = v34;
    uint64_t v36 = sub_1004CDB50();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = 0;
  }
  uint64_t v39 = sub_100337530(v36, v38);
  swift_bridgeObjectRelease();
  if (v39)
  {
    Class v40 = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v28 setAllowedProviderIdentifiers:v40];
  }
  if ([self protectedAppsEnabled])
  {
    id v41 = [self sharedManager];
    id v42 = v28;
    uint64_t v43 = sub_100338970();

    if (v43)
    {
      uint64_t v44 = v106;
      sub_1004CC710();
      swift_bridgeObjectRetain_n();
      uint64_t v45 = sub_1004CC760();
      os_log_type_t v46 = sub_1004CE360();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v104 = swift_slowAlloc();
        v113[0] = v104;
        *(_DWORD *)uint64_t v48 = 136315394;
        v102[1] = v21;
        int v103 = v47;
        uint64_t v112 = sub_100187CC4(0xD000000000000048, 0x8000000100530F50, v113);
        id v105 = a1;
        sub_1004CF1F0();
        *(_WORD *)(v48 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_1004CDE40();
        unint64_t v51 = v50;
        swift_bridgeObjectRelease();
        uint64_t v112 = sub_100187CC4(v49, v51, v113);
        a1 = v105;
        sub_1004CF1F0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v103, "%s [PROTECTED APPS] setting excluded parent OIDs to %s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v29 = v110;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v108);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v108);
        swift_bridgeObjectRelease();
      }
      Class v56 = sub_1004CDE10().super.isa;
      swift_bridgeObjectRelease();
      [v42 setExcludedParentOIDs:v56];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1003348F0();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v57 = sub_1004CDB50();
  uint64_t v59 = v58;
  if (v57 == sub_1004CDB50() && v59 == v60)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v61 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v61 & 1) == 0)
    {
      id v62 = [v29 maximumNumberOfItems];
      [v28 setDesiredNumberOfItems:v62];
    }
  }
  if ((v109 & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v63 = self;
  id v64 = [v63 defaultPermission];
  unsigned int v65 = [v64 isUSBAccessAllowed];

  if (!v65) {
    goto LABEL_39;
  }
  id v66 = [v63 defaultPermission];
  sub_1004CDB50();
  NSString v67 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  unsigned __int8 v68 = [v66 canHostAppPerformAction:2 bundleIdentifier:v67];

  if (v68) {
    NSArray v69 = &selRef_enableMountPointQueries;
  }
  else {
LABEL_39:
  }
    NSArray v69 = &selRef_disableMountPointQueries;
  [self *v69];
  if (qword_100626978 != -1) {
    swift_once();
  }
  sub_100334D10((uint64_t)v28, a1);

  return v28;
}

void sub_100339BF4(uint64_t a1)
{
  sub_10032FE94(a1, *(void **)(v1 + 16));
}

void sub_100339BFC(uint64_t a1)
{
  sub_100330FEC(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_100339C10(uint64_t a1)
{
  return sub_100331804(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_100339C1C(uint64_t a1)
{
  sub_1003324C4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100339C24(uint64_t a1)
{
  return sub_10033237C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for QueryCollectionDelayedLoadingSimulator()
{
  return self;
}

uint64_t sub_100339C50()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

void sub_100339CA0(uint64_t a1)
{
  sub_10033A8BC(a1, *(void ***)(v1 + 24), *(void **)(v1 + 32), 0, 0xE000000000000000, *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_100339CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100339CEC()
{
  return swift_release();
}

void sub_100339CF8(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  v31[0] = a6;
  uint64_t v13 = sub_1004CBD20();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(unsigned char *)(v17 + 40) = a4;
  id v18 = objc_allocWithZone((Class)sub_1004CBD10());
  id v19 = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)sub_1004CBD00();
  id v21 = objc_allocWithZone((Class)sub_1004CC5E0());
  swift_bridgeObjectRetain();
  id v22 = a5;
  uint64_t v23 = (void *)sub_1004CC5D0();
  sub_100031648(&qword_100628240);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1004E5E30;
  *(void *)(v24 + 32) = v20;
  *(void *)(v24 + 40) = v23;
  v31[1] = v24;
  sub_1004CDE50();
  objc_allocWithZone((Class)sub_1004CBD50());
  id v25 = v20;
  id v26 = v23;
  id v27 = (void *)sub_1004CBD30();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v31[0];
  *(void *)(v28 + 24) = a7;
  id v29 = v27;
  swift_retain();
  sub_1004CB8E0();

  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DOCChainOperation.DOCChainOperationMode.cancelSubsequentOperationsOnSuccess(_:), v13);
  sub_1004CBD40();
  id v30 = [self mainQueue];
  [v30 addOperation:v29];
}

uint64_t sub_100339F88(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1005B5428;
  v6._object = a2;
  unint64_t v4 = sub_1004CF760(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

void sub_100339FD4(void *a1, void *a2)
{
  unint64_t v4 = self;
  uint64_t v5 = (void *)sub_1004CAA50();
  id v6 = [v4 augmentedErrorForError:v5];

  if (!v6) {
    id v6 = a1;
  }
  uint64_t v7 = _swiftEmptyArrayStorage;
  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  id v8 = [v6 localizedRecoveryOptions];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v7 = (void *)sub_1004CDE30();
  }
  uint64_t v10 = v7[2];
  if (v10)
  {
    Class v40 = a2;
    uint64_t v11 = self;
    uint64_t v12 = 0;
    uint64_t v13 = v7 + 5;
    while (1)
    {
      if (v12)
      {
        swift_bridgeObjectRetain();
        id v14 = [v6 userInfo];
        uint64_t v15 = sub_1004CD9A0();

        uint64_t v16 = sub_1004CDB50();
        if (*(void *)(v15 + 16) && (uint64_t v18 = sub_1001DB86C(v16, v17), (v19 & 1) != 0))
        {
          sub_10005AF14(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&aBlock);
        }
        else
        {
          long long aBlock = 0u;
          long long v43 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*((void *)&v43 + 1))
        {
          sub_100049B74((uint64_t)&aBlock, &qword_10062BA60);
LABEL_18:
          uint64_t v20 = 0;
          goto LABEL_19;
        }
        if (!swift_dynamicCast() || (v41 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v20 = 2;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = 1;
      }
LABEL_19:
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v6;
      *(void *)(v21 + 24) = v12;
      id v22 = v6;
      NSString v23 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_10033A4D4;
      uint64_t v45 = (void *)v21;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v43 = sub_100182B48;
      *((void *)&v43 + 1) = &unk_1005CD878;
      uint64_t v24 = _Block_copy(&aBlock);
      swift_release();
      id v25 = [v11 actionWithTitle:v23 style:v20 handler:v24];
      _Block_release(v24);

      id v26 = v25;
      sub_1004CDE00();
      if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1004CDE60();
      }
      v13 += 2;
      ++v12;
      sub_1004CDF40();
      sub_1004CDE50();

      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        a2 = v40;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  id v27 = [v6 localizedDescription];
  uint64_t v28 = sub_1004CDB50();
  uint64_t v30 = v29;

  id v31 = [v6 localizedRecoverySuggestion];
  if (v31)
  {
    os_log_type_t v32 = v31;
    uint64_t v33 = sub_1004CDB50();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  unint64_t v36 = v46;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v28;
  v37[3] = v30;
  v37[4] = v33;
  v37[5] = v35;
  v37[6] = v36;
  v37[7] = a2;
  uint64_t v44 = (void (*)(int))sub_10033A4E0;
  uint64_t v45 = v37;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v43 = sub_1003A422C;
  *((void *)&v43 + 1) = &unk_1005CD8C8;
  uint64_t v38 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v39 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_10033A49C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10033A4D4(int a1)
{
  sub_10032D364(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

objc_class *sub_10033A4E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_1004CAA50();
  id v8 = [v7 localizedFailureReason];
  v32._object = a2;
  if (v8)
  {

    uint64_t v9 = (objc_class *)[v7 localizedDescription];
    uint64_t v10 = sub_1004CDB50();
  }
  else
  {
    uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
    if (!result) {
      goto LABEL_10;
    }
    uint64_t v9 = result;
    v32._countAndFlagsBits = 0x80000001005309D0;
    v40._object = (void *)0x80000001005309A0;
    v40._countAndFlagsBits = 0x1000000000000023;
    v42._countAndFlagsBits = 0x617A696C61636F4CLL;
    v42._object = (void *)0xEB00000000656C62;
    v13.super.Class isa = v9;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    uint64_t v10 = sub_1004CBEE0(v40, v42, v13, v44, v32);
  }
  uint64_t v14 = v10;
  uint64_t v15 = v11;

  id v16 = [v7 localizedFailureReason];
  if (!v16) {
    id v16 = [v7 localizedDescription];
  }
  uint64_t v17 = sub_1004CDB50();
  uint64_t v19 = v18;

  uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v20 = result;
    v32._countAndFlagsBits = 0xE200000000000000;
    v41._countAndFlagsBits = 19279;
    v41._object = (void *)0xE200000000000000;
    v43._countAndFlagsBits = 0x617A696C61636F4CLL;
    v43._object = (void *)0xEB00000000656C62;
    v21.super.Class isa = v20;
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    sub_1004CBEE0(v41, v43, v21, v45, v32);

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a3;
    *(void *)(v22 + 24) = a4;
    sub_100039174(a3);
    NSString v23 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_10033B124;
    id v39 = (void *)v22;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    unint64_t v36 = sub_100182B48;
    uint64_t v37 = &unk_1005CDA80;
    uint64_t v24 = _Block_copy(&aBlock);
    swift_release();
    id v25 = [self actionWithTitle:v23 style:0 handler:v24];
    _Block_release(v24);

    sub_100031648(&qword_100628240);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1004E5710;
    *(void *)(v26 + 32) = v25;
    long long aBlock = (void **)v26;
    sub_1004CDE50();
    id v27 = aBlock;
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = v14;
    v28[3] = v15;
    v28[4] = v17;
    v28[5] = v19;
    v28[6] = v27;
    v28[7] = v33;
    uint64_t v38 = (void (*)(uint64_t))sub_10033A4E0;
    id v39 = v28;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    unint64_t v36 = sub_1003A422C;
    uint64_t v37 = &unk_1005CDAD0;
    uint64_t v29 = _Block_copy(&aBlock);
    id v30 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v33;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v29);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (objc_class *)swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_10033A8BC(uint64_t a1, void **a2, void *a3, uint64_t a4, unint64_t a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  unsigned int v65 = a2;
  uint64_t v16 = sub_1004CC770();
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a8;
    *(void *)(v29 + 24) = a9;
    uint64_t v74 = sub_10033AFEC;
    uint64_t v75 = v29;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    unint64_t v72 = sub_1003A422C;
    unint64_t v73 = &unk_1005CD918;
    id v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    id v31 = v30;
LABEL_24:
    _Block_release(v31);
    return;
  }
  uint64_t v63 = a3;
  uint64_t v64 = v17;
  char v20 = a7;
  uint64_t v66 = a8;
  NSString v67 = a6;
  uint64_t v68 = a9;
  NSBundle v21 = (void *)sub_1004CAA50();
  id v22 = [v21 domain];
  uint64_t v23 = sub_1004CDB50();
  uint64_t v25 = v24;

  if (v23 == sub_1004CDB50() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v28 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_17;
    }
  }
  if ([v21 code] == (id)-1001)
  {
    if ((a5 & 0x2000000000000000) != 0) {
      uint64_t v32 = HIBYTE(a5) & 0xF;
    }
    else {
      uint64_t v32 = a4 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v33 = (objc_class *)(id)_DocumentManagerBundle();
    uint64_t v34 = v33;
    if (v32)
    {
      if (v33)
      {
        v76._countAndFlagsBits = 0x100000000000005CLL;
        v61._countAndFlagsBits = 0x80000001005308E0;
        v76._object = (void *)0x8000000100530880;
        v78._countAndFlagsBits = 0x617A696C61636F4CLL;
        v78._object = (void *)0xEB00000000656C62;
        v35.super.Class isa = v34;
        v80._countAndFlagsBits = 0;
        v80._object = (void *)0xE000000000000000;
        sub_1004CBEE0(v76, v78, v35, v80, v61);

        sub_100031648((uint64_t *)&unk_100627480);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1004E5790;
        *(void *)(v36 + 56) = &type metadata for String;
        unint64_t v37 = sub_1000334C4();
        uint64_t v38 = v63;
        *(void *)(v36 + 32) = v65;
        *(void *)(v36 + 40) = v38;
        *(void *)(v36 + 96) = &type metadata for String;
        *(void *)(v36 + 104) = v37;
        *(void *)(v36 + 64) = v37;
        *(void *)(v36 + 72) = a4;
        *(void *)(v36 + 80) = a5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_23:
        uint64_t v52 = sub_1004CDB60();
        uint64_t v54 = v53;
        Class v56 = v67;
        uint64_t v55 = v68;
        swift_bridgeObjectRelease();
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v52;
        *(void *)(v57 + 24) = v54;
        *(unsigned char *)(v57 + 32) = v20 & 1;
        *(void *)(v57 + 40) = v66;
        *(void *)(v57 + 48) = v55;
        *(void *)(v57 + 56) = v21;
        *(void *)(v57 + 64) = v56;
        uint64_t v74 = sub_10033B078;
        uint64_t v75 = v57;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v71 = 1107296256;
        unint64_t v72 = sub_1003A422C;
        unint64_t v73 = &unk_1005CD990;
        uint64_t v58 = _Block_copy(&aBlock);
        swift_retain();
        id v59 = v21;
        id v60 = v56;
        swift_release();
        DOCRunInMainThread();

        id v31 = v58;
        goto LABEL_24;
      }
      __break(1u);
    }
    else if (v33)
    {
      v61._countAndFlagsBits = 0x8000000100530970;
      v77._object = (void *)0x8000000100530920;
      v77._countAndFlagsBits = 0x1000000000000043;
      v79._countAndFlagsBits = 0x617A696C61636F4CLL;
      v79._object = (void *)0xEB00000000656C62;
      v49.super.Class isa = v34;
      v81._countAndFlagsBits = 0;
      v81._object = (void *)0xE000000000000000;
      sub_1004CBEE0(v77, v79, v49, v81, v61);

      sub_100031648((uint64_t *)&unk_100627480);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1004E12A0;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = sub_1000334C4();
      unint64_t v51 = v63;
      *(void *)(v50 + 32) = v65;
      *(void *)(v50 + 40) = v51;
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
    __break(1u);
    return;
  }
LABEL_17:
  sub_1004CC730();
  id v39 = v21;
  Swift::String v40 = sub_1004CC760();
  os_log_type_t v41 = sub_1004CE360();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v63 = (void *)swift_slowAlloc();
    unsigned int v65 = (void **)swift_slowAlloc();
    long long aBlock = v65;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v69 = sub_100187CC4(0xD000000000000075, 0x8000000100530800, (uint64_t *)&aBlock);
    sub_1004CF1F0();
    *(_WORD *)(v42 + 12) = 2112;
    uint64_t v69 = (uint64_t)v39;
    id v43 = v39;
    sub_1004CF1F0();
    void *v63 = v39;

    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s: Rename Operation failed: %@", (uint8_t *)v42, 0x16u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v16);
  uint64_t v44 = v66;
  Swift::String v45 = (void *)swift_allocObject();
  uint64_t v46 = v68;
  v45[2] = v44;
  v45[3] = v46;
  v45[4] = v39;
  id v47 = v39;
  swift_retain();
  id v48 = v47;
  sub_10033A4E4((uint64_t)v48, v67, (uint64_t)sub_10033B01C, (uint64_t)v45);

  swift_release();
}

uint64_t sub_10033AFEC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

void sub_10033B01C()
{
  sub_10032F080(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10033B028()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

objc_class *sub_10033B078()
{
  return sub_10032F160(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void (**)(id))(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_10033B08C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10033B0CC(uint64_t a1)
{
  sub_10032F5D8(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10033B0E4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10033B124(uint64_t a1)
{
  sub_10032D440(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10033B130()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10033B180()
{
  sub_10032D494(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(id *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_10033B194()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_10033B1C4()
{
  swift_bridgeObjectRelease();

  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10033B214(uint64_t a1)
{
  return sub_10032EE9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_10033B228()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10033B260(uint64_t a1, uint64_t a2)
{
  sub_10032EFC0(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t type metadata accessor for DOCOperationItem()
{
  uint64_t result = qword_100634500;
  if (!qword_100634500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10033B2C8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033B304()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 97, 7);
}

void sub_10033B374(void *a1, uint64_t a2, char a3)
{
  sub_10032DA28(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(unsigned __int8 *)(v3 + 48), *(void *)(v3 + 56), *(void **)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(unsigned char *)(v3 + 96));
}

uint64_t sub_10033B3BC(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v1 + 16))(0, a1, 1);
}

uint64_t sub_10033B3F0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000333C8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10033B434()
{
  return sub_10033B6E8((void (*)(void))&_swift_release, 40);
}

uint64_t sub_10033B450(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, void))(v1 + 24))(0, a1, *(unsigned __int8 *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC14RecentsAvocado16DOCCopyOperation_engineTypeUsed));
}

uint64_t sub_10033B494()
{
  return sub_10033B6E8((void (*)(void))&_swift_release, 40);
}

uint64_t sub_10033B4B0(void *a1, uint64_t a2)
{
  return sub_10032E8C8(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), &OBJC_IVAR____TtC14RecentsAvocado21DOCUnarchiveOperation_unarchivedItem);
}

uint64_t sub_10033B4D8()
{
  return sub_10033B6E8((void (*)(void))&_swift_release, 40);
}

uint64_t sub_10033B4F4(void *a1, uint64_t a2)
{
  return sub_10032E8C8(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), &OBJC_IVAR____TtC14RecentsAvocado19DOCArchiveOperation_archivedItem);
}

uint64_t sub_10033B51C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10033B564()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10033B59C()
{
}

uint64_t sub_10033B5A4()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10033B5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10032D998(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10033B5E4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10033B63C()
{
  sub_10032E688(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_10033B64C()
{
  return sub_10033BF70((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10033B664()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_10033B694()
{
  return sub_10033B6E8((void (*)(void))&_swift_bridgeObjectRelease, 41);
}

void sub_10033B6B0(uint64_t a1, uint64_t a2)
{
  sub_1003300F4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

void sub_10033B6C0(uint64_t a1, uint64_t a2)
{
  sub_10033036C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10033B6CC()
{
  return sub_10033B6E8((void (*)(void))&_swift_release, 40);
}

uint64_t sub_10033B6E8(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 32));
  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10033B744(void *a1, uint64_t a2)
{
  return sub_1003302BC(a1, a2, *(void *)(v2 + 16), *(void (**)(long long *, uint64_t))(v2 + 24));
}

uint64_t sub_10033B750()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10033B798(NSObject *a1, uint64_t a2)
{
  sub_100333F5C(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10033B7A4()
{
  return sub_10033BF70((void (*)(void))&_swift_release);
}

uint64_t sub_10033B7BC()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10033B7F4()
{
}

BOOL sub_10033B7FC(void *a1)
{
  return sub_100334C18(a1, *(void **)(v1 + 16));
}

uint64_t sub_10033B804()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033B814()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_10033B840()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10033B888()
{
  return sub_100334E94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10033B894()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033B8A4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10033B8E4()
{
  return sub_1003353D4(*(void **)(v0 + 16), *(Class *)(v0 + 24));
}

uint64_t sub_10033B8EC()
{
  return sub_100335450(v0);
}

uint64_t sub_10033B8F4()
{
  return sub_100335594(v0);
}

uint64_t sub_10033B8FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10033B90C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10033B914()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10033B95C(void (*a1)(void *, void), uint64_t a2)
{
  return sub_1003308C8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_10033B968(uint64_t a1, uint64_t a2)
{
  sub_100330BD0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10033B970(uint64_t a1)
{
  return sub_1003306F8(a1, *(void (**)(void *, id))(v1 + 16));
}

void sub_10033B97C()
{
}

uint64_t sub_10033B998(uint64_t a1)
{
  return sub_100333D38(a1, *(void **)(v1 + 16));
}

uint64_t sub_10033B9A0()
{
  return sub_10033BC8C(&qword_100634470);
}

uint64_t sub_10033B9B0()
{
  return sub_10033BC8C(&qword_100634470);
}

uint64_t sub_10033B9BC(uint64_t a1)
{
  return sub_1003327B4(a1);
}

uint64_t sub_10033BA24()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10033BA4C()
{
  uint64_t v1 = sub_100031648(&qword_100634478);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10033BB1C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100031648(&qword_100634478) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v1 + v5);
  id v8 = *(uint64_t **)(v1 + v6);
  uint64_t v9 = *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_1003319F8(a1, v1 + v4, v7, v8, v9);
}

uint64_t sub_10033BBD4()
{
  return sub_10033BDA8(&qword_100634478);
}

uint64_t sub_10033BBE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100031648(&qword_100634478) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1003320EC(a1, (int)v1 + (int)v4, v5);
}

uint64_t sub_10033BC80()
{
  return sub_10033BC8C(&qword_100634480);
}

uint64_t sub_10033BC8C(uint64_t *a1)
{
  uint64_t v2 = sub_100031648(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10033BD18(uint64_t a1, uint64_t a2)
{
  sub_100031648(&qword_100634480);
  return sub_1003313B0(a1, a2);
}

uint64_t sub_10033BD9C()
{
  return sub_10033BDA8(&qword_100634488);
}

uint64_t sub_10033BDA8(uint64_t *a1)
{
  uint64_t v2 = sub_100031648(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_10033BE48(void *a1, uint64_t a2)
{
  sub_100031648(&qword_100634488);
  return sub_100330058(a1, a2);
}

uint64_t sub_10033BEF8()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10033BF48(unint64_t a1, uint64_t a2)
{
  return sub_10032F6C0(a1, a2, *(uint64_t (**)(void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_10033BF58()
{
  return sub_10033BF70((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10033BF70(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return _swift_deallocObject(v1, 40, 7);
}

void sub_10033BFC0(unint64_t a1)
{
  sub_10032F9D8(a1, *(void (**)(void))(v1 + 16));
}

unsigned char *storeEnumTagSinglePayload for DOCActionOperationKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10033C098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCActionOperationKind()
{
  return &type metadata for DOCActionOperationKind;
}

char *sub_10033C0D0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v6 = *a2;
      *(void *)a1 = *a2;
      unint64_t v7 = v6;
    }
    else
    {
      uint64_t v9 = sub_1004CAC10();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_100031648(&qword_100634430);
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = &a1[v11];
      NSBundle v13 = (uint64_t *)((char *)a2 + v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      *(void *)uint64_t v12 = v15;
      *((void *)v12 + 1) = v14;
      a1[*(int *)(v10 + 64)] = *((unsigned char *)a2 + *(int *)(v10 + 64));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10033C204(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = *a1;
  }
  else
  {
    uint64_t v3 = sub_1004CAC10();
    (*(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_100031648(&qword_100634430);
    swift_bridgeObjectRelease();
  }
}

void **sub_10033C2B0(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unsigned int v4 = *a2;
    *a1 = *a2;
    id v5 = v4;
  }
  else
  {
    uint64_t v6 = sub_1004CAC10();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = sub_100031648(&qword_100634430);
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (void **)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    *uint64_t v9 = v12;
    v9[1] = v11;
    *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_10033C394(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_100293AD0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v4 = *a2;
      *a1 = *a2;
      id v5 = v4;
    }
    else
    {
      uint64_t v6 = sub_1004CAC10();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_100031648(&qword_100634430);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (void **)((char *)a1 + v8);
      uint64_t v10 = (void **)((char *)a2 + v8);
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10033C490(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1004CAC10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_100031648(&qword_100634430);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    a1[*(int *)(v7 + 64)] = a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10033C568(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100293AD0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1004CAC10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_100031648(&qword_100634430);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      a1[*(int *)(v7 + 64)] = a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10033C650()
{
  uint64_t result = sub_1004CAC10();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_10033C704()
{
  unint64_t result = qword_100634538;
  if (!qword_100634538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100634538);
  }
  return result;
}

BOOL static DOCBrowserHistoryShiftDirection.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void DOCBrowserHistoryShiftDirection.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int DOCBrowserHistoryShiftDirection.hashValue.getter(char a1)
{
  return sub_1004CFA30();
}

unint64_t sub_10033C968()
{
  unint64_t result = qword_100634540;
  if (!qword_100634540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100634540);
  }
  return result;
}

unint64_t sub_10033C9C0()
{
  unint64_t result = qword_100634548;
  if (!qword_100634548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100634548);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCHorizontalEdge()
{
  return &type metadata for DOCHorizontalEdge;
}

unsigned char *_s14RecentsAvocado17DOCHorizontalEdgeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10033CAF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVerticalEdge()
{
  return &type metadata for DOCVerticalEdge;
}

uint64_t sub_10033CB34()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = v0;
    sub_100031648(&qword_100634A90);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = sub_1004CE3D0();
    *(void *)(v2 + 48) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10033CBB8()
{
  uint64_t v0 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = sub_100031648(&qword_10062C980);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    sub_10033D0E8(0, (uint64_t)v2);
    swift_release();
    return sub_1003420EC((uint64_t)v2, type metadata accessor for DOCBrowserHistoryShiftAmount);
  }
  return result;
}

uint64_t sub_10033CCC0()
{
  uint64_t v0 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = sub_100031648(&qword_10062C980);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    sub_10033D0E8(1, (uint64_t)v2);
    swift_release();
    return sub_1003420EC((uint64_t)v2, type metadata accessor for DOCBrowserHistoryShiftAmount);
  }
  return result;
}

uint64_t sub_10033CDC8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v3 = Strong;
  if (!swift_unknownObjectWeakLoadStrong())
  {
    swift_release();
LABEL_5:
    char v6 = 1;
    return v6 & 1;
  }
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
  swift_release();
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_10033CE80(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a1 & 1;
  uint64_t v8 = sub_100031648((uint64_t *)&unk_10063BA00);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  NSBundle v13 = &v24[-v12];
  char v14 = sub_1003A7594(v7, a2);
  char v15 = a3 & v14;
  if (a3 & 1) == 0 && (v14)
  {
    uint64_t v16 = *(void *)(v3 + 32);
    uint64_t v17 = v16 + OBJC_IVAR____TtC14RecentsAvocado22DOCHierarchyController_loadingDisabledOperation;
    swift_beginAccess();
    sub_1000335A8(v17, (uint64_t)v11, (uint64_t *)&unk_10063BA00);
    uint64_t v18 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    uint64_t v19 = *(void *)(v18 - 8);
    char v20 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
    if (v20(v11, 1, v18) == 1)
    {
      uint64_t v21 = v16 + OBJC_IVAR____TtC14RecentsAvocado22DOCHierarchyController_localOperation;
      swift_beginAccess();
      sub_1000335A8(v21, (uint64_t)v13, (uint64_t *)&unk_10063BA00);
      sub_100049B74((uint64_t)v11, (uint64_t *)&unk_10063BA00);
    }
    else
    {
      sub_100342084((uint64_t)v11, (uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    if (v20(v13, 1, v18) == 1)
    {
      sub_100049B74((uint64_t)v13, (uint64_t *)&unk_10063BA00);
      char v15 = 1;
    }
    else
    {
      char v22 = v13[*(int *)(v18 + 24)];
      sub_1003420EC((uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      char v15 = (v22 & 1) != 0 || *(void *)(v4 + 80) != 0;
    }
  }
  return v15 & 1;
}

uint64_t sub_10033D0E8(char a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v43 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v9 = &v38[-v8];
  uint64_t v10 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v13);
  char v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100031648(&qword_100632BA0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v17);
  Swift::String v45 = &v38[-v21];
  __chkstk_darwin(v20);
  id v48 = &v38[-v22];
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1004CF4D0(58);
  v51._countAndFlagsBits = 0xD00000000000002ALL;
  v51._object = (void *)0x8000000100531440;
  sub_1004CDCD0(v51);
  int v23 = a1 & 1;
  if (v23) {
    v24._countAndFlagsBits = 0x64726177726F66;
  }
  else {
    v24._countAndFlagsBits = 0x647261776B636162;
  }
  if (v23) {
    uint64_t v25 = (void *)0xE700000000000000;
  }
  else {
    uint64_t v25 = (void *)0xE800000000000000;
  }
  v24._object = v25;
  sub_1004CDCD0(v24);
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = 0x746E756F6D61202CLL;
  v52._object = (void *)0xEB00000000203D20;
  sub_1004CDCD0(v52);
  type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  sub_1004CF600();
  v53._countAndFlagsBits = 41;
  v53._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v53);
  sub_100342154(v49, v50);
  swift_bridgeObjectRelease();
  uint64_t v44 = a2;
  if ((sub_10033CE80(v23, a2, 0) & 1) == 0) {
    return sub_100342154(0xD00000000000002CLL, 0x8000000100531470);
  }
  Swift::String v40 = v19;
  os_log_type_t v41 = v9;
  uint64_t v42 = v2;
  sub_1004CBF20();
  sub_1003430CC((uint64_t)v15, (uint64_t)v12, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1003420EC((uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  sub_1000335A8((uint64_t)v12, (uint64_t)v48, &qword_100632BA0);
  sub_1003420EC((uint64_t)v12, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  int v39 = v23;
  sub_1003A7920(v23, v44);
  sub_1004CBF20();
  sub_1003430CC((uint64_t)v15, (uint64_t)v12, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1003420EC((uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  uint64_t v26 = v45;
  sub_1000335A8((uint64_t)v12, (uint64_t)v45, &qword_100632BA0);
  sub_1003420EC((uint64_t)v12, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v46 + 48))(v26, 1, v47) == 1)
  {
    sub_100049B74((uint64_t)v26, &qword_100632BA0);
    sub_100342154(0xD000000000000029, 0x80000001005314A0);
    id v27 = v48;
  }
  else
  {
    uint64_t v29 = (uint64_t)v41;
    sub_100342084((uint64_t)v26, (uint64_t)v41, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v30 = v42;
    id v31 = *(void **)(v42 + 32);
    uint64_t v32 = v48;
    uint64_t v33 = (uint64_t)v40;
    sub_1000335A8((uint64_t)v48, (uint64_t)v40, &qword_100632BA0);
    uint64_t v34 = v43;
    sub_1003430CC(v29, (uint64_t)v43, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for DOCBrowserHistoryShiftRequest(0);
    swift_allocObject();
    id v36 = v31;
    uint64_t v37 = sub_10033F648((uint64_t)v36, v33, (uint64_t)v34, v39, (uint64_t)sub_100343218, v35);
    swift_unknownObjectWeakLoadStrong();
    *(void *)(v37 + 56) = *(void *)(v30 + 24);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    if (*(void *)(v30 + 80)) {
      sub_10033D8F8();
    }
    else {
      sub_10033DE44(v37);
    }
    swift_release();
    sub_1003420EC(v29, type metadata accessor for DOCBrowserHistoryItem);
    id v27 = v32;
  }
  return sub_100049B74((uint64_t)v27, &qword_100632BA0);
}

uint64_t sub_10033D6F8()
{
  sub_1004CF4D0(39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100342154(0xD000000000000025, 0x80000001005314D0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10033D9E4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10033D7F0()
{
  sub_1004CF4D0(33);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80))
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1004CDBC0();
    uint64_t v3 = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (void *)0xE300000000000000;
    uint64_t v1 = 7104878;
  }
  v5._countAndFlagsBits = v1;
  v5._object = v3;
  sub_1004CDCD0(v5);
  swift_bridgeObjectRelease();
  sub_100342154(0xD00000000000001FLL, 0x8000000100531350);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_ignoreExternalUpdates) = *(void *)(v0 + 80) != 0;
  return result;
}

uint64_t sub_10033D8F8()
{
  sub_1004CF4D0(47);
  v1._object = (void *)0x8000000100531410;
  v1._countAndFlagsBits = 0xD00000000000002DLL;
  sub_1004CDCD0(v1);
  type metadata accessor for DOCBrowserHistoryShiftRequest(0);
  sub_1004CF600();
  sub_100342154(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_100031648(&qword_100634A88);
  sub_1004CDEC0();
  return swift_endAccess();
}

uint64_t sub_10033D9E4()
{
  uint64_t v1 = sub_1004CC770();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v5 = (void *)(v0 + 72);
  swift_beginAccess();
  sub_100031648(&qword_100634A88);
  sub_1004CDEB0();
  swift_endAccess();
  uint64_t v7 = v24;
  if (v24)
  {
    v16[0] = v0;
    uint64_t v20 = (void *)0x80000001005313B0;
    uint64_t v21 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v19 = (void *)0x80000001005313F0;
    *(void *)&long long v6 = 136315138;
    long long v17 = v6;
    v16[1] = (char *)&type metadata for Any + 8;
    uint64_t v18 = v1;
    while (1)
    {
      if (*v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1004CF6D0();
        swift_bridgeObjectRelease();
        if (v15 < 1)
        {
LABEL_11:
          uint64_t v22 = 0;
          unint64_t v23 = 0xE000000000000000;
          sub_1004CF4D0(54);
          v28._countAndFlagsBits = 0xD000000000000034;
          v28._object = (void *)0x8000000100531370;
          sub_1004CDCD0(v28);
          swift_bridgeObjectRetain();
          v29._countAndFlagsBits = sub_1004CDBC0();
          sub_1004CDCD0(v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100342154(v22, v23);
          swift_bridgeObjectRelease();
          sub_10033DE44(v7);
          return swift_release();
        }
      }
      else if (*(uint64_t *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
      {
        goto LABEL_11;
      }
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1004CF4D0(78);
      v25._countAndFlagsBits = 0xD000000000000035;
      v25._object = v20;
      sub_1004CDCD0(v25);
      swift_bridgeObjectRetain();
      v26._countAndFlagsBits = sub_1004CDBC0();
      sub_1004CDCD0(v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27._countAndFlagsBits = 0xD000000000000017;
      v27._object = v19;
      sub_1004CDCD0(v27);
      uint64_t v9 = v22;
      unint64_t v8 = v23;
      sub_1004CC6F0();
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_1004CC760();
      os_log_type_t v11 = sub_1004CE350();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = v17;
        swift_bridgeObjectRetain();
        *(void *)(v12 + 4) = sub_100187CC4(v9, v8, &v22);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "[History] %s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v1 = v18;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*v21)(v4, v1);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1004CDEB0();
      uint64_t result = swift_endAccess();
      uint64_t v14 = v24;
      if (!v24) {
        break;
      }
      swift_release();
      uint64_t v7 = v14;
    }
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 80) = 0;
    swift_release();
    return sub_10033D7F0();
  }
  return result;
}

uint64_t sub_10033DE44(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v3 - 8);
  Swift::String v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1004CF4D0(47);
  v12._object = (void *)0x8000000100531320;
  v12._countAndFlagsBits = 0xD00000000000002DLL;
  sub_1004CDCD0(v12);
  uint64_t v11 = a1;
  type metadata accessor for DOCBrowserHistoryShiftRequest(0);
  sub_1004CF600();
  sub_100342154(v9, v10);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  swift_retain_n();
  swift_release();
  sub_10033D7F0();
  swift_release();
  uint64_t v6 = a1
     + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess();
  sub_1003430CC(v6, (uint64_t)v5, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v1;
  swift_retain();
  swift_retain();
  sub_1003AC50C((uint64_t)v5, (uint64_t)sub_100343174, v7);
  swift_release();
  return sub_1003420EC((uint64_t)v5, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_10033E01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2
     + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess();
  sub_10034317C(a1, v6);
  uint64_t result = swift_endAccess();
  uint64_t v8 = *(void *)(a3 + 80);
  if (v8) {
    BOOL v9 = v8 == a2;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9) {
    return sub_10033F81C(*(void **)(a2 + 64));
  }
  return result;
}

uint64_t sub_10033E0A0()
{
  sub_10033CB34();
  if (qword_1006269F8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 40);
  v6[3] = type metadata accessor for DOCBrowserHistoryDataSource();
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(v2, "mainQueue", v1);
  sub_1004CE3B0();

  swift_release();
  swift_bridgeObjectRelease();
  return sub_100049B74((uint64_t)v6, &qword_10062BA60);
}

void sub_10033E1A4()
{
}

void sub_10033E1C8()
{
  uint64_t v1 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = *(void **)(v0 + 56);
  if (v4)
  {
    uint64_t v5 = sub_100031648(&qword_10062C980);
    uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v3, 1, 1, v5);
    uint64_t v7 = v4;
    char v8 = sub_1003A7594(0, (uint64_t)v3);
    sub_1003420EC((uint64_t)v3, type metadata accessor for DOCBrowserHistoryShiftAmount);
    int v9 = v8 & 1;
    v7[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canPerformShiftAction] = v8 & 1;
    unsigned int v10 = v7[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canEnable];
    uint64_t v11 = (objc_class *)type metadata accessor for DOCHistoryNavigationButtonItem();
    v17.receiver = v7;
    v17.super_class = v11;
    objc_msgSendSuper2(&v17, "setEnabled:", v9 & v10);

    Swift::String v12 = *(void **)(v0 + 64);
    if (v12)
    {
      v6(v3, 1, 1, v5);
      uint64_t v13 = v12;
      char v14 = sub_1003A7594(1, (uint64_t)v3);
      sub_1003420EC((uint64_t)v3, type metadata accessor for DOCBrowserHistoryShiftAmount);
      v13[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canPerformShiftAction] = v14 & 1;
      unsigned __int8 v15 = v13[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canEnable];
      v16.receiver = v13;
      v16.super_class = v11;
      objc_msgSendSuper2(&v16, "setEnabled:", v14 & 1u & v15);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10033E3BC(char a1)
{
  uint64_t v2 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v2);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CBF20();
  sub_1003430CC((uint64_t)v7, (uint64_t)v4, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1003420EC((uint64_t)v7, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  if (a1)
  {
    uint64_t v9 = *(void *)&v4[*(int *)(v2 + 24)];
    swift_bridgeObjectRetain();
    sub_1003420EC((uint64_t)v4, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  }
  else
  {
    unint64_t v8 = *(void *)&v4[*(int *)(v2 + 20)];
    swift_bridgeObjectRetain();
    sub_1003420EC((uint64_t)v4, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    return sub_100459E34(v8);
  }
  return v9;
}

uint64_t sub_10033E564(void (*a1)(void *), uint64_t a2, uint64_t a3, int a4)
{
  int v42 = a4;
  uint64_t v38 = sub_1004CD860();
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1004CD8C0();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1004CD900();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unsigned __int8 v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  objc_super v17 = (char *)&v33 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return ((uint64_t (*)(void *))a1)(_swiftEmptyArrayStorage);
  }
  uint64_t v19 = Strong;
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  if ((*(unsigned char *)(Strong + 88) & 1) == 0) {
    goto LABEL_4;
  }
  sub_10033CB34();
  sub_1004CE3A0();
  swift_release();
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  uint64_t v33 = sub_1004CE630();
  sub_1004CD8E0();
  sub_1004CD970();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v34 = v11;
  uint64_t v35 = v20;
  v20(v15, v11);
  aBlock[4] = sub_1003432AC;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  uint64_t aBlock[3] = &unk_1005CEB60;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1004CD880();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003A744();
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10003A79C();
  uint64_t v22 = v38;
  sub_1004CF330();
  unint64_t v23 = (void *)v33;
  sub_1004CE600();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  v35(v17, v34);
  id v24 = *(id *)(v19 + 40);
  LOBYTE(v22) = sub_1003ABE68();

  if ((v22 & 1) == 0)
  {
    v37(_swiftEmptyArrayStorage);
    return swift_release();
  }
  else
  {
LABEL_4:
    char v25 = v42 & 1;
    uint64_t v26 = sub_10033E3BC(v42 & 1);
    aBlock[0] = _swiftEmptyArrayStorage;
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v28 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
      uint64_t v29 = v26 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      uint64_t v30 = *(void *)(v28 + 72);
      do
      {
        sub_10033EA90(v29, v19, v25);
        sub_1004CDE00();
        if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_1004CDE60();
        sub_1004CDF40();
        sub_1004CDE50();
        v29 += v30;
        --v27;
      }
      while (v27);
    }
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_bridgeObjectRetain();
    v37((void *)v32);
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
}

id sub_10033EA90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v49 + 64);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v10 = *(void **)(a1 + *(int *)(v8 + 40));
  id v11 = *(id *)(a1 + *(int *)(v8 + 28));
  id v12 = v10;
  id v13 = sub_10033EE94(v11, (uint64_t)v12);

  id v14 = v11;
  id v15 = v12;
  id v16 = sub_10033F3C8();
  uint64_t v50 = v7;
  if (v17 == 255) {
    goto LABEL_5;
  }
  uint64_t v18 = v16;
  if (v17 != 2)
  {
    sub_100343450(v16, v17);
LABEL_5:
    id v28 = [v14 displayName];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v25 = sub_1004CDB50();
      uint64_t v27 = v30;
    }
    else
    {

      uint64_t v25 = 0;
      uint64_t v27 = (void *)0xE000000000000000;
    }
    goto LABEL_8;
  }
  id v19 = [v15 displayName];
  v48[1] = a2;
  uint64_t v20 = a1;
  uint64_t v21 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = v13;
  char v23 = a3;
  id v24 = v19;
  uint64_t v25 = sub_1004CDB50();
  uint64_t v27 = v26;

  a3 = v23;
  id v13 = v22;
  uint64_t v9 = v21;
  a1 = v20;
  sub_100343450(v18, 2u);

LABEL_8:
  uint64_t v31 = v49;
  sub_1000333C8(0, (unint64_t *)&qword_100628760);
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  sub_1003430CC(a1, (uint64_t)v9, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v32;
  *(unsigned char *)(v34 + 24) = a3 & 1;
  uint64_t v35 = v34 + v33;
  if (a3) {
    uint64_t v36 = 0x64726177726F66;
  }
  else {
    uint64_t v36 = 0x647261776B636162;
  }
  if (a3) {
    uint64_t v37 = (void *)0xE700000000000000;
  }
  else {
    uint64_t v37 = (void *)0xE800000000000000;
  }
  sub_100342084((uint64_t)v9, v35, type metadata accessor for DOCBrowserHistoryItem);
  id v38 = v13;
  swift_bridgeObjectRetain();
  uint64_t v39 = (void *)sub_1004CEF50();
  uint64_t v40 = self;
  id v41 = v39;
  [v40 navBarButton];
  swift_getObjCClassMetadata();
  id v42 = [(id)swift_getObjCClassFromMetadata() historyMenuPrefix];
  uint64_t v43 = sub_1004CDB50();
  uint64_t v45 = v44;

  uint64_t v51 = v43;
  uint64_t v52 = v45;
  v53._countAndFlagsBits = 46;
  v53._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v53);
  v54._countAndFlagsBits = v36;
  v54._object = v37;
  sub_1004CDCD0(v54);
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = 46;
  v55._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v55);
  v56._countAndFlagsBits = v25;
  v56._object = v27;
  sub_1004CDCD0(v56);
  swift_bridgeObjectRelease();
  NSString v46 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v41 setAccessibilityIdentifier:v46];

  return v41;
}

id sub_10033EE94(void *a1, uint64_t a2)
{
  id v4 = [a1 representedTag];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [self shared];
    id v7 = [v6 tintedSystemImageForTag:v5];
  }
  else if ([a1 isRoot])
  {

    type metadata accessor for DOCSourceListInterface_Default();
    return [(id)swift_initStaticObject() iconForSource:a2];
  }
  else
  {
    id v8 = [a1 fileProviderItem];
    if (v8)
    {
      uint64_t v9 = v8;
      type metadata accessor for DOCSourceListInterface_Default();
      id v7 = [(id)swift_initStaticObject() nonThumbnailedIconForItem:v9];
    }
    else
    {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_10033EFEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    *(unsigned char *)(result + 88) = 0;
    sub_1003430CC(a4, (uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v11 = sub_100031648(&qword_10062C980);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
    sub_10033D0E8(a3 & 1, (uint64_t)v8);
    sub_1003420EC((uint64_t)v8, type metadata accessor for DOCBrowserHistoryShiftAmount);
    *(unsigned char *)(v10 + 88) = 1;
    return swift_release();
  }
  return result;
}

id *sub_10033F134()
{
  sub_1000391D4((uint64_t)(v0 + 2));

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_10033F18C()
{
  sub_10033F134();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCBrowserHistoryController()
{
  return self;
}

id sub_10033F370()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCHistoryNavigationButtonItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCHistoryNavigationButtonItem()
{
  return self;
}

id sub_10033F3C8()
{
  id result = [v0 representedTag];
  if (!result)
  {
    if ([v0 isRoot]) {
      return [v0 sourceIdentifier];
    }
    else {
      return [v0 fileProviderItem];
    }
  }
  return result;
}

uint64_t sub_10033F460(uint64_t a1)
{
  sub_1004CF4D0(41);
  swift_bridgeObjectRelease();
  strcpy((char *)v7, "Shift request ");
  HIBYTE(v7[1]) = -18;
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10._object = (void *)0x80000001005312C0;
  v10._countAndFlagsBits = 0xD000000000000016;
  sub_1004CDCD0(v10);
  if (a1) {
    v3._countAndFlagsBits = 1702195828;
  }
  else {
    v3._countAndFlagsBits = 0x65736C6166;
  }
  if (a1) {
    id v4 = (void *)0xE400000000000000;
  }
  else {
    id v4 = (void *)0xE500000000000000;
  }
  v3._object = v4;
  sub_1004CDCD0(v3);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 41;
  v11._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v11);
  sub_100342154(v7[0], v7[1]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 88) = 1;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v1 + 72);
  swift_retain();
  v5(v1, a1);
  return swift_release();
}

uint64_t sub_10033F5D4()
{
  swift_bridgeObjectRelease();
  sub_1000391D4(v0 + 48);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCBrowserHierarchyChangeRequest()
{
  return self;
}

uint64_t sub_10033F648(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  char v11 = a4 & 1;
  uint64_t v12 = sub_1004CADE0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000335A8(a2, v7+ OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_previousItem, &qword_100632BA0);
  sub_1003430CC(a3, v7 + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem, type metadata accessor for DOCBrowserHistoryItem);
  *(unsigned char *)(v7
           + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_shiftDirection) = v11;
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v16 = sub_100030CB4(6);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = v16;
  *(void *)(v7 + 24) = v18;
  *(void *)(v7 + 32) = v20;
  *(void *)(v7 + 40) = v22;
  *(void *)(v7 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v7 + 88) = 0;
  uint64_t v23 = v25;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = v23;
  *(void *)(v7 + 80) = v26;
  sub_1003420EC(a3, type metadata accessor for DOCBrowserHistoryItem);
  sub_100049B74(a2, &qword_100632BA0);
  return v7;
}

uint64_t sub_10033F81C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = sub_100031648(&qword_100632BA0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v41 - v7;
  uint64_t v9 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v43 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v42 = (uint64_t)&v41 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v41 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = v2
      + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess();
  sub_1003430CC(v20, (uint64_t)v19, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v21 = v2
      + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_previousItem;
  sub_1000335A8(v2+ OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_previousItem, (uint64_t)v8, &qword_100632BA0);
  uint64_t v41 = v10;
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v22(v8, 1, v9) == 1)
  {
    sub_100049B74((uint64_t)v8, &qword_100632BA0);
  }
  else
  {
    sub_1000335A8((uint64_t)&v8[*(int *)(v9 + 36)], (uint64_t)aBlock, &qword_10062BA60);
    if (v46)
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_1003420EC((uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
        int v23 = 1;
        goto LABEL_9;
      }
    }
    else
    {
      sub_100049B74((uint64_t)aBlock, &qword_10062BA60);
    }
    sub_1003420EC((uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
  }
  int v23 = 0;
LABEL_9:
  sub_1000335A8((uint64_t)&v19[*(int *)(v9 + 36)], (uint64_t)aBlock, &qword_10062BA60);
  if (v46)
  {
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
LABEL_16:
      sub_1003430CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
      goto LABEL_17;
    }
    if ((v23 & 1) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    sub_100049B74((uint64_t)aBlock, &qword_10062BA60);
    if (!v23) {
      goto LABEL_16;
    }
  }
  sub_1003430CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000335A8(v21, (uint64_t)v6, &qword_100632BA0);
  if (v22(v6, 1, v9) == 1)
  {
    sub_100049B74((uint64_t)v6, &qword_100632BA0);
LABEL_17:
    id v24 = v44;
    sub_1003420EC((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
LABEL_18:
    sub_10033FEEC((uint64_t)v19, (uint64_t)v24);
    return sub_1003420EC((uint64_t)v19, type metadata accessor for DOCBrowserHistoryItem);
  }
  id v26 = *(id *)&v6[*(int *)(v9 + 20)];
  sub_1003420EC((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v27 = *(void **)&v17[*(int *)(v9 + 20)];
  sub_1000333C8(0, &qword_100628830);
  id v28 = v26;
  id v29 = v27;
  char v30 = sub_1004CEF10();
  sub_1003420EC((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);

  id v24 = v44;
  if ((v30 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v31 = v42;
  sub_1003430CC((uint64_t)v19, v42, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v32 = v43;
  sub_1003430CC(v31, v43, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v33 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v2;
  sub_100342084(v31, v34 + v33, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(v34 + ((v11 + v33 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v36 = (void *)Strong;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_100341FBC;
    *(void *)(v37 + 24) = v34;
    uint64_t v47 = sub_1000674E0;
    uint64_t v48 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A422C;
    NSString v46 = &unk_1005CE930;
    id v38 = _Block_copy(aBlock);
    swift_retain_n();
    id v39 = v24;
    swift_retain();
    swift_release();
    [v36 hierarchyController:v39 prepareByDismissingSearchWithCompletion:v38];
    _Block_release(v38);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    sub_1003420EC(v32, type metadata accessor for DOCBrowserHistoryItem);
  }
  else
  {
    swift_retain_n();
    id v40 = v24;
    sub_10033FEEC(v32, (uint64_t)v40);
    swift_release();
    swift_release();
    sub_1003420EC(v32, type metadata accessor for DOCBrowserHistoryItem);
  }
  return sub_1003420EC((uint64_t)v19, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_10033FEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (unsigned __int8 *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100341280(a2, (uint64_t)v8);
  int v9 = *v8;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v10 = *(void *)(v2 + 56),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v12 = *(uint64_t (**)(uint64_t, BOOL, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 16),
        swift_retain(),
        LOBYTE(v10) = v12(a1, v9 != 2, sub_100344250, v2, ObjectType, v10),
        swift_unknownObjectRelease(),
        swift_release(),
        (v10 & 1) == 0))
  {
    int v13 = *v8;
    if (v13 == 2)
    {
      swift_retain();
      sub_100340968((uint64_t)v8, 1, a2, (uint64_t)sub_100344250, v2);
    }
    else if (v13)
    {
      uint64_t v14 = *(void *)(a1 + *(int *)(type metadata accessor for DOCBrowserHistoryItem(0) + 20));
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_100344250;
      *(void *)(v15 + 24) = v3;
      swift_retain_n();
      sub_10007D630(v14, 1, (uint64_t)sub_100049C64, v15);
      swift_release();
    }
    else
    {
      swift_retain();
      sub_100342F48((uint64_t)v8, 1, a2, (uint64_t)sub_10034214C, v2);
    }
    swift_release();
  }
  return sub_1003420EC((uint64_t)v8, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
}

void *sub_100340128(void *a1)
{
  uint64_t v3 = type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  uint64_t v4 = *(id **)(v1 + *(int *)(v3 + 28));
  unint64_t v5 = *(void *)(v1 + *(int *)(v3 + 24));
  unint64_t v45 = v5;
  unint64_t v46 = (unint64_t)v4;
  if (a1)
  {
    if ((unint64_t)v4 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v43 = a1;
      Swift::Int v6 = sub_1004CF6D0();
      if (v6)
      {
LABEL_4:
        sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
        Swift::Int v8 = 0;
        while (1)
        {
          id v9 = ((unint64_t)v4 & 0xC000000000000001) != 0 ? (id)sub_1004CF500() : v4[v8 + 4];
          uint64_t v10 = v9;
          char v11 = sub_1004CEF10();

          if (v11) {
            break;
          }
          Swift::Int v12 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            swift_bridgeObjectRetain();
            uint64_t v42 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
            if (!v42)
            {
LABEL_99:
              swift_bridgeObjectRelease();
              return _swiftEmptyArrayStorage;
            }
            goto LABEL_29;
          }
          ++v8;
          if (v12 == v6) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        sub_100031648(&qword_100633BC0);
        sub_1004CDEA0(v8);
        if (!(v5 >> 62)) {
          goto LABEL_12;
        }
        goto LABEL_23;
      }
    }
    else
    {
      Swift::Int v6 = *(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v7 = a1;
      if (v6) {
        goto LABEL_4;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease();
    if (!(v5 >> 62))
    {
LABEL_12:
      uint64_t v13 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = a1;
      if (!v13)
      {
LABEL_20:
        swift_bridgeObjectRelease();

LABEL_26:
        goto LABEL_27;
      }
LABEL_13:
      sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
      Swift::Int v6 = 0;
      while (1)
      {
        id v15 = (v5 & 0xC000000000000001) != 0 ? (id)sub_1004CF500() : *(id *)(v5 + 8 * v6 + 32);
        uint64_t v16 = v15;
        char v17 = sub_1004CEF10();

        if (v17) {
          break;
        }
        Swift::Int v18 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_101;
        }
        ++v6;
        if (v18 == v13) {
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();

      sub_100031648(&qword_100633BC0);
      sub_1004CDEA0(v6);
      goto LABEL_26;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    id v19 = a1;
    uint64_t v13 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_27:
  unint64_t v5 = v46;
  Swift::Int v6 = v46 >> 62;
  if (v46 >> 62) {
    goto LABEL_112;
  }
  if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_99;
  }
LABEL_29:
  unint64_t v20 = v45;
  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v44) {
      goto LABEL_99;
    }
  }
  else if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_99;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1004CF6D0();
  }
  else
  {
    uint64_t v21 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v21)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v22 = (id)sub_1004CF500();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_120;
      }
      id v22 = *(id *)(v5 + 32);
    }
    Swift::Int v6 = (Swift::Int)v22;
    swift_bridgeObjectRelease();
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1004CF6D0();
    }
    else
    {
      uint64_t v23 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (!v23) {
      goto LABEL_123;
    }
    if ((v45 & 0xC000000000000001) == 0)
    {
      if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v24 = *(id *)(v45 + 32);
LABEL_45:
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        sub_1000333C8(0, &qword_100628830);
        while (1)
        {
          if ((sub_1004CEF10() & 1) == 0)
          {

            goto LABEL_99;
          }
          unint64_t v26 = v5 >> 62;
          if (v5 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_1004CF6D0();
            id result = (void *)swift_bridgeObjectRelease();
            if (!v29) {
              goto LABEL_124;
            }
            swift_bridgeObjectRetain();
            uint64_t v31 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
            if (!v31) {
              goto LABEL_103;
            }
          }
          else if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_102;
          }
          if ((v5 & 0xC000000000000001) != 0)
          {
            id v27 = (id)sub_1004CF500();
            if (!v26) {
              goto LABEL_52;
            }
          }
          else
          {
            if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_104;
            }
            id v27 = *(id *)(v5 + 32);
            if (!v26)
            {
LABEL_52:
              uint64_t v28 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_58;
            }
          }
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_1004CF6D0();
          swift_bridgeObjectRelease();
LABEL_58:
          if (!v28) {
            goto LABEL_110;
          }
          sub_1002D52A4(0, 1);

          unint64_t v32 = v20 >> 62;
          if (v20 >> 62)
          {
            swift_bridgeObjectRetain();
            unint64_t v5 = sub_1004CF6D0();
            id result = (void *)swift_bridgeObjectRelease();
            if (!v5) {
              goto LABEL_125;
            }
            swift_bridgeObjectRetain();
            uint64_t v34 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
            if (!v34) {
              goto LABEL_106;
            }
          }
          else if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_105;
          }
          if ((v20 & 0xC000000000000001) != 0)
          {
            unint64_t v5 = sub_1004CF500();
            if (!v32) {
              goto LABEL_64;
            }
          }
          else
          {
            if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_107;
            }
            unint64_t v5 = (unint64_t)*(id *)(v20 + 32);
            if (!v32)
            {
LABEL_64:
              uint64_t v33 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_70;
            }
          }
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_1004CF6D0();
          swift_bridgeObjectRelease();
LABEL_70:
          if (!v33) {
            goto LABEL_111;
          }
          sub_1002D52A4(0, 1);

          id v35 = (id)v6;
          sub_1004CDE00();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1004CDE60();
          }
          sub_1004CDF40();
          sub_1004CDE50();

          unint64_t v5 = v46;
          Swift::Int v6 = v46 >> 62;
          if (v46 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v40 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
            if (!v40) {
              goto LABEL_99;
            }
          }
          else if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_99;
          }
          unint64_t v20 = v45;
          if (v45 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v41 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
            if (!v41) {
              goto LABEL_99;
            }
          }
          else if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_99;
          }
          if (v6)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v36 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v36 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          if (!v36) {
            goto LABEL_122;
          }
          if ((v46 & 0xC000000000000001) != 0)
          {
            id v37 = (id)sub_1004CF500();
          }
          else
          {
            if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_108;
            }
            id v37 = *(id *)(v46 + 32);
          }
          Swift::Int v6 = (Swift::Int)v37;
          swift_bridgeObjectRelease();
          if (v45 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v38 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v38 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          if (!v38) {
            goto LABEL_123;
          }
          if ((v45 & 0xC000000000000001) != 0)
          {
            id v39 = (id)sub_1004CF500();
          }
          else
          {
            if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_109;
            }
            id v39 = *(id *)(v45 + 32);
          }
          uint64_t v25 = v39;
          swift_bridgeObjectRelease();
        }
      }
      __break(1u);
      goto LABEL_122;
    }
LABEL_120:
    id v24 = (id)sub_1004CF500();
    goto LABEL_45;
  }
LABEL_122:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_123:
  id result = (void *)swift_bridgeObjectRelease();
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
  return result;
}

unint64_t sub_100340968(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v77 = a3;
  int v72 = a2;
  uint64_t v6 = sub_1004CC770();
  unint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v66 - v14;
  os_log_type_t v70 = (int *)type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  sub_1003430CC(a1 + v70[5], (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v76 = v10;
  uint64_t v16 = *(int *)(v10 + 28);
  char v17 = *(void **)&v15[v16];
  id v18 = v17;
  uint64_t v71 = a1;
  unint64_t v19 = (unint64_t)sub_100340128(v17);
  unint64_t v75 = v20;

  uint64_t v21 = (void *)v19;
  unint64_t v68 = v19 >> 62;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_6;
    }
  }
  uint64_t v67 = v16;
  sub_1004CC6F0();
  uint64_t v23 = sub_1004CC760();
  os_log_type_t v24 = sub_1004CE370();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = v22;
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "No common suffix transitions implies this should have been handled as a pop", v25, 2u);
    uint64_t v22 = v66;
    swift_slowDealloc();
  }

  unint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v7 += 8;
  v26(v9, v6);
  uint64_t v16 = v67;
LABEL_6:
  id v27 = (void *)sub_10006D14C();
  if (v27) {
    goto LABEL_14;
  }
  uint64_t v28 = (unint64_t *)(v77 + OBJC_IVAR____TtC14RecentsAvocado22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v29 = *v28;
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    id v27 = (void *)sub_1004CF6D0();
    if (v27) {
      goto LABEL_9;
    }
  }
  else
  {
    id v27 = *(void **)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27)
    {
LABEL_9:
      if ((v29 & 0xC000000000000001) != 0)
      {
        id v30 = (id)sub_1004CF500();
      }
      else
      {
        if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_80;
        }
        id v30 = *(id *)(v29 + 32);
      }
      id v27 = v30;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  unint64_t v7 = *(void *)&v15[v16];
  sub_1003430CC((uint64_t)v15, (uint64_t)v13, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v31 = (void *)v7;
  if (v7) {
    goto LABEL_27;
  }
  a1 = v16;
  unint64_t v32 = *(void *)&v13[*(int *)(v76 + 24)];
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1004CF6D0();
    if (v33)
    {
LABEL_17:
      if ((v32 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_82;
        }
        id v34 = *(id *)(v32 + 32);
        goto LABEL_20;
      }
LABEL_80:
      id v34 = (id)sub_1004CF500();
LABEL_20:
      uint64_t v31 = v34;
      uint64_t v16 = a1;
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  else
  {
    unint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v33) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = 0;
  uint64_t v16 = a1;
LABEL_27:
  id v35 = (id)v7;
  sub_1003420EC((uint64_t)v13, type metadata accessor for DOCBrowserHistoryItem);
  if (!v27)
  {
    unint64_t v7 = v75;
    if (!v31)
    {
      if (v22 < 2 || (v72 & 1) == 0) {
        goto LABEL_68;
      }
      char v39 = 1;
      if ((v75 & 0x8000000000000000) != 0) {
        goto LABEL_67;
      }
      goto LABEL_41;
    }
    goto LABEL_34;
  }
  unint64_t v7 = v75;
  if (!v31)
  {
LABEL_34:
    if (v22 < 2 || (v72 & 1) == 0) {
      goto LABEL_68;
    }
    char v39 = 0;
    if ((v7 & 0x8000000000000000) != 0) {
      goto LABEL_67;
    }
    goto LABEL_41;
  }
  sub_1000333C8(0, &qword_100628830);
  id v36 = v31;
  uint64_t v37 = v16;
  id v38 = v27;
  char v39 = sub_1004CEF10();

  uint64_t v16 = v37;
  if (v22 < 2 || (v72 & 1) == 0) {
    goto LABEL_68;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_67:
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v52 < 1) {
      goto LABEL_68;
    }
    goto LABEL_43;
  }
LABEL_41:
  if ((v7 & 0x4000000000000000) != 0) {
    goto LABEL_67;
  }
  if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v53 = *(void **)&v15[*(int *)(v76 + 20)];
    unint64_t v78 = *(void *)&v15[*(int *)(v76 + 24)];
    swift_bridgeObjectRetain_n();
    id v54 = v53;
    sub_1004CDE00();
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1004CDE60();
    }
    sub_1004CDF40();
    sub_1004CDE50();
    unint64_t v55 = v78;
    swift_bridgeObjectRelease();

    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_1004CF6D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v57 = v73;
    if (v56 > 7)
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = *(void **)&v15[v16];
      uint64_t v63 = swift_allocObject();
      uint64_t v64 = v74;
      *(void *)(v63 + 16) = v57;
      *(void *)(v63 + 24) = v64;
      id v61 = v62;
      swift_retain();
      unsigned int v65 = v54;
      sub_1000733D8(v65, v62, 0, 1, 0, (void (*)(void))sub_100049D34, v63);
    }
    else
    {
      uint64_t v58 = *(void **)&v15[v16];
      uint64_t v59 = swift_allocObject();
      uint64_t v60 = v74;
      *(void *)(v59 + 16) = v57;
      *(void *)(v59 + 24) = v60;
      id v61 = v58;
      swift_retain();
      sub_10007AAE0(v55, v58, 1, 0, 0, (uint64_t (*)(uint64_t))sub_100049D34, (unsigned char *)v59);
      swift_bridgeObjectRelease();
    }

    swift_release();
    goto LABEL_76;
  }
LABEL_43:
  if ((v39 & 1) == 0) {
    goto LABEL_68;
  }
  unint64_t v40 = *(void *)(v71 + v70[6]);
  unint64_t v33 = (unint64_t)v21;
  if (!(v40 >> 62))
  {
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_46;
  }
LABEL_82:
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
LABEL_46:
  uint64_t v42 = v69;
  unint64_t v43 = *(void *)(v71 + v70[7]);
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v45 = 1;
  if (v41 < v44) {
    uint64_t v45 = 2;
  }
  char v46 = *(unsigned char *)(v42
                 + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_shiftDirection);
  if (v46) {
    uint64_t v47 = v45;
  }
  else {
    uint64_t v47 = 2;
  }
  if ((v46 & 1) == 0 && v41 >= v44) {
    uint64_t v47 = ((unint64_t)sub_100283410(v33, v43) & 1) == 0;
  }
  if (v68)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = (void *)sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (!v48)
    {
LABEL_66:
      swift_bridgeObjectRelease();
      uint64_t v51 = (void *)swift_allocObject();
      v51[2] = v73;
      v51[3] = v74;
      swift_retain();
      sub_100076870(v7, v48, 0, 1, v47, v47 != 0, (uint64_t (*)(uint64_t))sub_100049D34, v51);
      swift_bridgeObjectRelease();
      swift_release();

LABEL_76:
      return sub_1003420EC((uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
    }
  }
  else
  {
    uint64_t v48 = *(void **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v48) {
      goto LABEL_66;
    }
  }
  unint64_t result = (unint64_t)v48 - 1;
  if (__OFSUB__(v48, 1))
  {
    __break(1u);
    goto LABEL_85;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_85:
    id v50 = (id)sub_1004CF500();
    goto LABEL_65;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v50 = *(id *)(v33 + 8 * result + 32);
LABEL_65:
    uint64_t v48 = v50;
    goto LABEL_66;
  }
  __break(1u);
  return result;
}

unint64_t sub_100341280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v77 = a2;
  uint64_t v78 = type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  __chkstk_darwin(v78);
  Swift::String v79 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = _swiftEmptyArrayStorage;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v10 = *(void *)(v2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    id v76 = self;
    id v12 = [v76 browseStartingPointsLocation];
    id v13 = [objc_allocWithZone((Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource()) init];
    uint64_t v14 = &v8[v6[9]];
    *(_OWORD *)uint64_t v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
    *(void *)&v8[v6[5]] = v12;
    *(void *)&v8[v6[6]] = _swiftEmptyArrayStorage;
    *(void *)&v8[v6[7]] = 0;
    *(void *)&v8[v6[8]] = v13;
    LOBYTE(v10) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 8))(v8, ObjectType, v10);
    swift_unknownObjectRelease();
    sub_1003420EC((uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
    if (v10)
    {
      sub_100031648(&qword_100628240);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1004E5710;
      *(void *)(v15 + 32) = [v76 browseStartingPointsLocation];
      uint64_t v82 = (void *)v15;
      sub_1004CDE50();
      id v9 = v82;
    }
  }
  uint64_t v16 = (unint64_t *)(a1 + OBJC_IVAR____TtC14RecentsAvocado22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v17 = *v16;
  Swift::String v81 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001080E4(v17);
  unint64_t v18 = (unint64_t)v81;
  uint64_t v19 = v2
      + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess();
  unint64_t v80 = (unint64_t)v9;
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_1001080E4(v20);
  id v21 = *(id *)(v19 + v6[5]);
  swift_bridgeObjectRetain();
  sub_1004CDE00();
  if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();
  unint64_t v22 = v80;
  swift_bridgeObjectRelease();

  unint64_t v23 = v18 >> 62;
  if (!(v18 >> 62))
  {
    uint64_t v24 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_8;
    }
LABEL_15:
    uint64_t v28 = v2;
    swift_bridgeObjectRelease();
    id v27 = 0;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1004CF6D0();
  if (!v24) {
    goto LABEL_15;
  }
LABEL_8:
  unint64_t result = v24 - 1;
  if (__OFSUB__(v24, 1)) {
    goto LABEL_72;
  }
  if ((v18 & 0xC000000000000001) != 0) {
    goto LABEL_73;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_75;
  }
  if (result >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  for (id i = *(id *)(v18 + 8 * result + 32); ; id i = (id)sub_1004CF500())
  {
    id v27 = i;
    uint64_t v28 = v3;
    swift_bridgeObjectRelease();
LABEL_16:
    unint64_t v29 = v22 >> 62;
    if (v22 >> 62) {
      break;
    }
    uint64_t v30 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v30) {
      goto LABEL_67;
    }
LABEL_18:
    unint64_t v31 = v30 - 1;
    if (__OFSUB__(v30, 1)) {
      goto LABEL_68;
    }
    unint64_t v75 = v22 & 0xC000000000000001;
    if ((v22 & 0xC000000000000001) != 0) {
      goto LABEL_69;
    }
    if ((v31 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v31 < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v32 = *(id *)(v22 + 8 * v31 + 32);
      goto LABEL_23;
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    ;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1004CF6D0();
  if (v30) {
    goto LABEL_18;
  }
LABEL_67:
  swift_bridgeObjectRelease();

  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  id v32 = (id)sub_1004CF500();
LABEL_23:
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v35 = v78;
  id v34 = v79;
  sub_1003430CC(v19, (uint64_t)&v79[*(int *)(v78 + 20)], type metadata accessor for DOCBrowserHistoryItem);
  char *v34 = 2;
  *(void *)&v34[*(int *)(v35 + 24)] = v22;
  uint64_t v36 = *(int *)(v35 + 28);
  uint64_t v37 = v34;
  *(void *)&v34[v36] = v18;
  id v38 = v27;
  id v76 = v33;
  if (v27)
  {
    sub_1000333C8(0, &qword_100628830);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v39 = v33;
    id v40 = v27;
    char v41 = sub_1004CEF10();

    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      char v42 = 2;
      goto LABEL_64;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if ((*(unsigned char *)(v28
                 + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_shiftDirection) & 1) == 0)
  {
    unint64_t result = swift_bridgeObjectRelease();
    id v44 = v76;
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1004CF6D0();
      swift_bridgeObjectRelease();
      if (v45 >= 2)
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_1004CF6D0();
        unint64_t result = swift_bridgeObjectRelease();
        if (v62 < 0) {
          goto LABEL_81;
        }
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_1004CF6D0();
        unint64_t result = swift_bridgeObjectRelease();
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v45 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v46 = v45;
      if ((unint64_t)v45 >= 2)
      {
LABEL_55:
        uint64_t v63 = v45 - 1;
        if (v46 < v63) {
          goto LABEL_79;
        }
        if ((v18 & 0xC000000000000001) != 0)
        {
          sub_1000333C8(0, &qword_100628830);
          Swift::Int v64 = 0;
          do
          {
            Swift::Int v65 = v64 + 1;
            sub_1004CF4F0(v64);
            Swift::Int v64 = v65;
          }
          while (v63 != v65);
        }
        if (v23)
        {
          swift_bridgeObjectRetain();
          uint64_t v67 = sub_1004CF6E0();
          uint64_t v68 = v70;
          uint64_t v66 = v71;
          unint64_t v69 = v72;
          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v66 = 0;
          uint64_t v67 = v18 & 0xFFFFFFFFFFFFFF8;
          uint64_t v68 = (v18 & 0xFFFFFFFFFFFFFF8) + 32;
          unint64_t v69 = (2 * v63) | 1;
        }
        sub_100109ED0((uint64_t)v44, v67, v68, v66, v69);
        char v74 = v73;

        swift_unknownObjectRelease();
        if (v74)
        {
          char v42 = 1;
LABEL_64:
          *uint64_t v37 = v42;
        }
        return sub_100342084((uint64_t)v37, v77, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
      }
    }
    swift_bridgeObjectRelease();

    return sub_100342084((uint64_t)v37, v77, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
  }
  unint64_t result = swift_bridgeObjectRelease();
  if (v29)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1004CF6D0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v47 = v43 - 1;
  if (__OFSUB__(v43, 1)) {
    goto LABEL_76;
  }
  if (v47 < 0)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (!v29)
  {
    uint64_t v48 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1004CF6D0();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v49 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1004CF6D0();
    unint64_t result = swift_bridgeObjectRelease();
LABEL_42:
    if (v48 >= v47)
    {
      if (v75 && v47)
      {
        sub_1000333C8(0, &qword_100628830);
        Swift::Int v50 = 0;
        do
        {
          Swift::Int v51 = v50 + 1;
          sub_1004CF4F0(v50);
          Swift::Int v50 = v51;
        }
        while (v47 != v51);
      }
      if (v29)
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_1004CF6E0();
        uint64_t v54 = v59;
        uint64_t v52 = v60;
        unint64_t v55 = v61;
        swift_bridgeObjectRelease_n();
        if (v38) {
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v52 = 0;
        uint64_t v53 = v22 & 0xFFFFFFFFFFFFFF8;
        uint64_t v54 = (v22 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v55 = (2 * v47) | 1;
        if (v38)
        {
LABEL_49:
          id v56 = v38;
          sub_100109ED0((uint64_t)v56, v53, v54, v52, v55);
          char v58 = v57;
          swift_unknownObjectRelease();

          if (v58) {
            *uint64_t v37 = 0;
          }
          return sub_100342084((uint64_t)v37, v77, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
        }
      }
      swift_unknownObjectRelease();

      return sub_100342084((uint64_t)v37, v77, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
    }
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
  }
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_100341B38()
{
  sub_100049B74(v0+ OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_previousItem, &qword_100632BA0);
  return sub_1003420EC(v0+ OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_100341B88()
{
  swift_bridgeObjectRelease();
  sub_1000391D4(v0 + 48);

  swift_release();
  sub_100049B74(v0+ OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_previousItem, &qword_100632BA0);
  sub_1003420EC(v0 + OBJC_IVAR____TtC14RecentsAvocadoP33_1B323938C587BAF3D330E628522E1ECF29DOCBrowserHistoryShiftRequest_targetItem, type metadata accessor for DOCBrowserHistoryItem);
  return swift_deallocClassInstance();
}

uint64_t sub_100341C38()
{
  return type metadata accessor for DOCBrowserHistoryShiftRequest(0);
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftRequest(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_1006348F8);
}

void sub_100341C60()
{
  sub_100341D34();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DOCBrowserHistoryItem(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100341D34()
{
  if (!qword_100634908)
  {
    type metadata accessor for DOCBrowserHistoryItem(255);
    unint64_t v0 = sub_1004CF1C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100634908);
    }
  }
}

uint64_t destroy for LogID()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LogID(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LogID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LogID(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LogID()
{
  return &type metadata for LogID;
}

uint64_t sub_100341E6C()
{
  return sub_1004CDBC0();
}

uint64_t sub_100341E78()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_100039184(v6);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_100341FBC()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10033FEEC(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10034204C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10034205C()
{
  return swift_release();
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(uint64_t a1)
{
  return sub_100069444(a1, qword_100634AF0);
}

uint64_t sub_100342084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003420EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10034214C()
{
  return sub_10033F460(1);
}

uint64_t sub_100342154(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1004CC770();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC6F0();
  swift_bridgeObjectRetain_n();
  unint64_t v8 = sub_1004CC760();
  os_log_type_t v9 = sub_1004CE350();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v4;
    uint64_t v11 = a1;
    id v12 = (uint8_t *)v10;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)id v12 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_100187CC4(v11, a2, &v17);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[History] %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_100342368(void *a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = _swiftEmptyArrayStorage;
  *(void *)(v3 + 80) = 0;
  *(unsigned char *)(v3 + 88) = 1;
  *(void *)(v3 + 32) = a2;
  *(void *)(v3 + 40) = a1;
  uint64_t v6 = self;
  id v7 = a1;
  id v8 = a2;
  NSString v9 = sub_1004CDB10();
  id v10 = objc_msgSend(v6, "__systemImageNamedSwift:", v9);

  if (!v10)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for DOCHistoryNavigationButtonItem();
  sub_1000333C8(0, (unint64_t *)&qword_100628760);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100343220;
  *(void *)(v12 + 24) = v11;
  swift_retain_n();
  v87._object = 0;
  LOBYTE(v12) = sub_1004CEF50();
  id v13 = v10;
  v107.value._countAndFlagsBits = 0;
  v107.value._object = 0;
  v99.value.super.Class isa = (Class)v10;
  v99.is_nil = v12;
  v101.value.super.super.Class isa = 0;
  Class isa = sub_1004CE420(v107, v99, v101, v105).super.super.isa;
  *((unsigned char *)isa + OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_direction) = 0;

  swift_release_n();
  uint64_t v15 = *(void **)(v3 + 56);
  *(void *)(v3 + 56) = isa;

  uint64_t v16 = *(void **)(v3 + 56);
  if (!v16)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v17 = v16;
  unint64_t v18 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v19 = v18;
  v108._countAndFlagsBits = 0xD000000000000013;
  v87._countAndFlagsBits = 0x8000000100531540;
  v108._object = (void *)0x8000000100531520;
  v117._countAndFlagsBits = 0x617A696C61636F4CLL;
  v117._object = (void *)0xEB00000000656C62;
  v20.super.Class isa = v19;
  v123._countAndFlagsBits = 1801675074;
  v123._object = (void *)0xE400000000000000;
  sub_1004CBEE0(v108, v117, v20, v123, v87);

  NSString v21 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v17 setTitle:v21];

  unint64_t v22 = *(void **)(v3 + 56);
  if (!v22)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v23 = self;
  id v24 = v22;
  [v23 navBarButton];
  swift_getObjCClassMetadata();
  NSString v25 = [(id)swift_getObjCClassFromMetadata() backInHistory];
  if (!v25)
  {
    sub_1004CDB50();
    NSString v25 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  [v24 setAccessibilityIdentifier:v25];

  unint64_t v26 = *(void **)(v3 + 56);
  if (!v26) {
    goto LABEL_32;
  }
  id v27 = v26;
  uint64_t v28 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v28)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v29 = v28;
  v109._countAndFlagsBits = 0xD00000000000001CLL;
  v124._countAndFlagsBits = 0xD000000000000021;
  v88._countAndFlagsBits = 0x80000001005315C0;
  v109._object = (void *)0x8000000100531570;
  v124._object = (void *)0x8000000100531590;
  v118._countAndFlagsBits = 0x617A696C61636F4CLL;
  v118._object = (void *)0xEB00000000656C62;
  v30.super.Class isa = v29;
  sub_1004CBEE0(v109, v118, v30, v124, v88);

  NSString v31 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v27 setAccessibilityHint:v31];

  id v32 = *(void **)(v3 + 56);
  if (!v32)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  [v32 setSpringLoaded:1];
  NSString v33 = sub_1004CDB10();
  id v34 = objc_msgSend(v6, "__systemImageNamedSwift:", v33);

  if (!v34)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_100343260;
  *(void *)(v36 + 24) = v35;
  swift_retain_n();
  v89._object = 0;
  LOBYTE(v36) = sub_1004CEF50();
  id v37 = v34;
  v110.value._countAndFlagsBits = 0;
  v110.value._object = 0;
  v100.value.super.Class isa = (Class)v34;
  v100.is_nil = v36;
  v102.value.super.super.Class isa = 0;
  Class v38 = sub_1004CE420(v110, v100, v102, v106).super.super.isa;
  *((unsigned char *)v38 + OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_direction) = 1;

  swift_release_n();
  id v39 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v38;

  id v40 = *(void **)(v3 + 64);
  if (!v40)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v41 = v40;
  char v42 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v42)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v43 = v42;
  v111._countAndFlagsBits = 0xD000000000000016;
  v89._countAndFlagsBits = 0x8000000100531610;
  v111._object = (void *)0x80000001005315F0;
  v119._countAndFlagsBits = 0x617A696C61636F4CLL;
  v119._object = (void *)0xEB00000000656C62;
  v44.super.Class isa = v43;
  v125._countAndFlagsBits = 0x64726177726F46;
  v125._object = (void *)0xE700000000000000;
  sub_1004CBEE0(v111, v119, v44, v125, v89);

  NSString v45 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v41 setTitle:v45];

  uint64_t v46 = *(void **)(v3 + 64);
  if (!v46)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id v47 = v46;
  [v23 navBarButton];
  swift_getObjCClassMetadata();
  NSString v48 = [(id)swift_getObjCClassFromMetadata() forwardInHistory];
  if (!v48)
  {
    sub_1004CDB50();
    NSString v48 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  [v47 setAccessibilityIdentifier:v48];

  uint64_t v49 = *(void **)(v3 + 64);
  if (!v49) {
    goto LABEL_39;
  }
  id v50 = v49;
  Swift::Int v51 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v51)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v52 = v51;
  v112._countAndFlagsBits = 0xD00000000000001FLL;
  v126._countAndFlagsBits = 0xD000000000000021;
  v90._countAndFlagsBits = 0x8000000100531660;
  v112._object = (void *)0x8000000100531640;
  v126._object = (void *)0x8000000100531590;
  v120._countAndFlagsBits = 0x617A696C61636F4CLL;
  v120._object = (void *)0xEB00000000656C62;
  v53.super.Class isa = v52;
  sub_1004CBEE0(v112, v120, v53, v126, v90);

  NSString v54 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v50 setAccessibilityHint:v54];

  unint64_t v55 = *(void **)(v3 + 64);
  if (!v55)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  [v55 setSpringLoaded:1];
  id v56 = *(void **)(v3 + 56);
  if (!v56)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    return;
  }
  id v57 = v56;
  id v58 = [v57 accessibilityIdentifier];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = sub_1004CDB50();
    uint64_t v62 = v61;

    long long aBlock = (void **)v60;
    uint64_t v94 = v62;
    swift_bridgeObjectRetain();
    v113._countAndFlagsBits = 0x756E656D2ELL;
    v113._object = (void *)0xE500000000000000;
    sub_1004CDCD0(v113);
    swift_bridgeObjectRelease();
    unsigned __int8 v63 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int8 v63 = 0;
  }
  sub_1000333C8(0, (unint64_t *)&qword_1006288E0);
  sub_100031648(&qword_100628240);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1004E5710;
  Swift::Int v65 = self;
  uint64_t v66 = swift_allocObject();
  swift_weakInit();
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v66;
  *(unsigned char *)(v67 + 24) = 0;
  uint64_t v97 = sub_1003432A0;
  uint64_t v98 = v67;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v94 = 1107296256;
  char v95 = sub_1002D0EF4;
  id v96 = &unk_1005CEAE8;
  uint64_t v68 = _Block_copy(&aBlock);
  swift_release();
  id v69 = [v65 elementWithUncachedProvider:v68];
  _Block_release(v68);
  *(void *)(v64 + 32) = v69;
  long long aBlock = (void **)v64;
  sub_1004CDE50();
  v114._countAndFlagsBits = 0;
  v114._object = (void *)0xE000000000000000;
  v121.value._countAndFlagsBits = 0;
  v121.value._object = 0;
  v103.value.super.Class isa = 0;
  v103.is_nil = v63;
  v70.value = 0;
  Class v71 = sub_1004CEB60(v114, v121, v103, v70, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock, v91).super.super.isa;

  [v57 setMenu:v71];
  unint64_t v72 = *(void **)(v3 + 64);
  if (!v72) {
    goto LABEL_43;
  }
  id v73 = v72;
  id v74 = [v73 accessibilityIdentifier];
  if (v74)
  {
    unint64_t v75 = v74;
    uint64_t v76 = sub_1004CDB50();
    uint64_t v78 = v77;

    long long aBlock = (void **)v76;
    uint64_t v94 = v78;
    swift_bridgeObjectRetain();
    v115._countAndFlagsBits = 0x756E656D2ELL;
    v115._object = (void *)0xE500000000000000;
    sub_1004CDCD0(v115);
    swift_bridgeObjectRelease();
    unsigned __int8 v79 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int8 v79 = 0;
  }
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_1004E5710;
  uint64_t v81 = swift_allocObject();
  swift_weakInit();
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = v81;
  *(unsigned char *)(v82 + 24) = 1;
  uint64_t v97 = sub_100344234;
  uint64_t v98 = v82;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v94 = 1107296256;
  char v95 = sub_1002D0EF4;
  id v96 = &unk_1005CEB38;
  char v83 = _Block_copy(&aBlock);
  swift_release();
  id v84 = [v65 elementWithUncachedProvider:v83];
  _Block_release(v83);
  *(void *)(v80 + 32) = v84;
  long long aBlock = (void **)v80;
  sub_1004CDE50();
  v116._countAndFlagsBits = 0;
  v116._object = (void *)0xE000000000000000;
  v122.value._countAndFlagsBits = 0;
  v122.value._object = 0;
  v104.value.super.Class isa = 0;
  v104.is_nil = v79;
  v85.value = 0;
  Class v86 = sub_1004CEB60(v116, v122, v104, v85, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock, (Swift::OpaquePointer)v92.super.super.isa).super.super.isa;

  [v73 setMenu:v86];
  sub_10033E1C8();
  sub_10033E0A0();
}

void sub_100342F48(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = (unint64_t)sub_100340128(0);
  unint64_t v9 = v8;
  unint64_t v11 = v10;
  if (!(v8 >> 62))
  {
    uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v16 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v14 = (id)sub_1004CF500();
    goto LABEL_8;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v13 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    __break(1u);
    return;
  }
  id v14 = *(id *)(v9 + 8 * v13 + 32);
LABEL_8:
  id v16 = v14;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  swift_retain();
  sub_100076870(v11, v16, 1, 1, 1, a2 & 1, (uint64_t (*)(uint64_t))sub_100049D34, v15);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1003430CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100343134()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100343174(uint64_t a1)
{
  return sub_10033E01C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10034317C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003431E0()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100343218()
{
  return sub_10033D6F8();
}

uint64_t sub_100343220()
{
  return sub_10033CBB8();
}

uint64_t sub_100343228()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100343260()
{
  return sub_10033CCC0();
}

uint64_t sub_100343268()
{
  swift_release();
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1003432A0(void (*a1)(void *), uint64_t a2)
{
  return sub_10033E564(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1003432B0()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 25) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_100039184(v6);
  }
  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1003433D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_10033EFEC(a1, v4, v5, v6);
}

void sub_100343450(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    sub_100343464(a1, a2);
  }
}

void sub_100343464(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t *sub_100343478(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    unint64_t v8 = (char *)a1 + v7;
    unint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1004CADE0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    unint64_t v11 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v12 = v11[5];
    unint64_t v13 = *(void **)&v9[v12];
    *(void *)&v8[v12] = v13;
    *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
    uint64_t v14 = v11[7];
    uint64_t v15 = *(void **)&v9[v14];
    *(void *)&v8[v14] = v15;
    uint64_t v16 = v11[8];
    id v17 = *(void **)&v9[v16];
    *(void *)&v8[v16] = v17;
    uint64_t v18 = v11[9];
    uint64_t v19 = &v8[v18];
    NSBundle v20 = &v9[v18];
    uint64_t v21 = *((void *)v20 + 3);
    id v22 = v13;
    swift_bridgeObjectRetain();
    id v23 = v15;
    id v24 = v17;
    if (v21)
    {
      *((void *)v19 + 3) = v21;
      (**(void (***)(unsigned char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
    }
    else
    {
      long long v26 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v26;
    }
    uint64_t v27 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v27) = *(uint64_t *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100343628(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);

  swift_bridgeObjectRelease();
  uint64_t v5 = v2 + v4[9];
  if (*(void *)(v5 + 24)) {
    sub_100039184(v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unsigned char *sub_100343708(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1004CADE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)&v8[v11];
  *(void *)&v7[v11] = v12;
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  uint64_t v13 = v10[7];
  uint64_t v14 = *(void **)&v8[v13];
  *(void *)&v7[v13] = v14;
  uint64_t v15 = v10[8];
  uint64_t v16 = *(void **)&v8[v15];
  *(void *)&v7[v15] = v16;
  uint64_t v17 = v10[9];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = *((void *)v19 + 3);
  id v21 = v12;
  swift_bridgeObjectRetain();
  id v22 = v14;
  id v23 = v16;
  if (v20)
  {
    *((void *)v18 + 3) = v20;
    (**(void (***)(unsigned char *, unsigned char *, uint64_t))(v20 - 8))(v18, v19, v20);
  }
  else
  {
    long long v24 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v24;
  }
  uint64_t v25 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_100343868(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1004CADE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)&v8[v11];
  uint64_t v13 = *(void **)&v7[v11];
  *(void *)&v7[v11] = v12;
  id v14 = v12;

  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v10[7];
  uint64_t v16 = *(void **)&v7[v15];
  uint64_t v17 = *(void **)&v8[v15];
  *(void *)&v7[v15] = v17;
  id v18 = v17;

  uint64_t v19 = v10[8];
  uint64_t v20 = *(void **)&v8[v19];
  id v21 = *(void **)&v7[v19];
  *(void *)&v7[v19] = v20;
  id v22 = v20;

  uint64_t v23 = v10[9];
  uint64_t v24 = (uint64_t)&v7[v23];
  uint64_t v25 = &v8[v23];
  uint64_t v26 = *((void *)v25 + 3);
  if (!*(void *)(v24 + 24))
  {
    if (v26)
    {
      *(void *)(v24 + 24) = v26;
      (**(void (***)(uint64_t, unsigned char *))(v26 - 8))(v24, v25);
      goto LABEL_8;
    }
LABEL_7:
    long long v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v27;
    goto LABEL_8;
  }
  if (!v26)
  {
    sub_100039184(v24);
    goto LABEL_7;
  }
  sub_100343A1C((uint64_t *)v24, (uint64_t *)v25);
LABEL_8:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_100343A1C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

unsigned char *sub_100343C44(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1004CADE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  *(void *)&v7[v10[8]] = *(void *)&v8[v10[8]];
  uint64_t v11 = v10[9];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  return a1;
}

unsigned char *sub_100343D30(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1004CADE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)&v7[v11];
  *(void *)&v7[v11] = *(void *)&v8[v11];

  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_bridgeObjectRelease();
  uint64_t v13 = v10[7];
  long long v14 = *(void **)&v7[v13];
  *(void *)&v7[v13] = *(void *)&v8[v13];

  uint64_t v15 = v10[8];
  uint64_t v16 = *(void **)&v7[v15];
  *(void *)&v7[v15] = *(void *)&v8[v15];

  uint64_t v17 = v10[9];
  uint64_t v18 = (uint64_t)&v7[v17];
  if (*(void *)(v18 + 24)) {
    sub_100039184(v18);
  }
  long long v19 = *(_OWORD *)&v8[v17 + 16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)&v8[v17];
  *(_OWORD *)(v18 + 16) = v19;
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100343E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100343E78);
}

uint64_t sub_100343E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100343F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100343F50);
}

uint64_t sub_100343F50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100344010()
{
  uint64_t result = type metadata accessor for DOCBrowserHistoryItem(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCBrowserHistoryShiftRequest.TransitionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100344184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryShiftRequest.TransitionType()
{
  return &type metadata for DOCBrowserHistoryShiftRequest.TransitionType;
}

unint64_t sub_1003441C0()
{
  unint64_t result = qword_100634B30;
  if (!qword_100634B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100634B30);
  }
  return result;
}

void sub_100344254()
{
  unint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_bbiStorage];
  swift_beginAccess();
  int v3 = *(objc_class **)(v2 + 184);
  if (v3)
  {
    unsigned int v4 = v0;
    swift_retain();
    uint64_t v5 = v3;
  }
  else
  {
    sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
    sub_1000333C8(0, (unint64_t *)&qword_100628760);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    unsigned int v6 = v0;
    swift_retain();
    v37._object = 0;
    v38.is_nil = sub_1004CEF50();
    v41.value._countAndFlagsBits = 0;
    v41.value._object = 0;
    v38.value.super.Class isa = 0;
    v39.value.super.super.Class isa = 0;
    Class isa = sub_1004CE420(v41, v38, v39, v40).super.super.isa;
    -[objc_class setStyle:](isa, "setStyle:", 2, 0);
    *(void *)(v2 + 184) = isa;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_100031648(&qword_100628240);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1004E5710;
    *(void *)(v8 + 32) = isa;
    sub_1004CDE50();
    uint64_t v5 = isa;
    uint64_t v9 = sub_1004CE810();
    swift_bridgeObjectRelease();

    int v3 = 0;
    *(void *)(v2 + 176) = v9;
  }
  uint64_t v10 = v3;
  swift_endAccess();
  swift_release();

  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_configuration];
  if ([v11 interactionMode] == (id)2)
  {
    unint64_t v12 = (objc_class *)(id)_DocumentManagerBundle();
    if (!v12)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v13 = v12;
    v37._countAndFlagsBits = 0x8000000100531720;
    v14._countAndFlagsBits = 1702256979;
    goto LABEL_22;
  }
  uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection];
  if (!v15)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v16 = v15 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type;
  if (*(unsigned char *)(v16 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v17 = *(void *)(v16 + 8);
    swift_unknownObjectRetain();
    if (!v17)
    {
LABEL_17:
      unsigned int v23 = [v11 forPickingFolders];
      uint64_t v24 = (objc_class *)(id)_DocumentManagerBundle();
      uint64_t v13 = v24;
      if (v23)
      {
        if (!v24)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v37._countAndFlagsBits = 0x80000001005316B0;
        v14._countAndFlagsBits = 1852141647;
        v14._object = (void *)0xE400000000000000;
        v25._countAndFlagsBits = 0x617A696C61636F4CLL;
        v25._object = (void *)0xEB00000000656C62;
        v26.super.Class isa = v13;
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        goto LABEL_23;
      }
      if (!v24)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v14._countAndFlagsBits = 1702260557;
      v37._countAndFlagsBits = 0x8000000100531690;
LABEL_22:
      v14._object = (void *)0xE400000000000000;
      v25._countAndFlagsBits = 0x617A696C61636F4CLL;
      v25._object = (void *)0xEB00000000656C62;
      v26.super.Class isa = v13;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
LABEL_23:
      sub_1004CBEE0(v14, v25, v26, v27, v37);
      goto LABEL_24;
    }
  }
  swift_getObjectType();
  uint64_t v13 = (objc_class *)sub_1004CED30();
  swift_unknownObjectRelease();
  if (!v13) {
    goto LABEL_17;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong || (id v19 = [Strong pickerOperationFor:v13], swift_unknownObjectRelease(), v19 != (id)1))
  {

    goto LABEL_17;
  }
  uint64_t v20 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v20)
  {
LABEL_39:
    __break(1u);
    return;
  }
  id v21 = v20;
  v42._countAndFlagsBits = 0xD00000000000001BLL;
  v37._countAndFlagsBits = 0x8000000100531700;
  v42._object = (void *)0x80000001005316E0;
  v43._countAndFlagsBits = 0x617A696C61636F4CLL;
  v43._object = (void *)0xEB00000000656C62;
  v22.super.Class isa = v21;
  v44._countAndFlagsBits = 2037411651;
  v44._object = (void *)0xE400000000000000;
  sub_1004CBEE0(v42, v43, v22, v44, v37);

LABEL_24:
  uint64_t v28 = v5;
  NSString v29 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [(objc_class *)v28 setTitle:v29];

  uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection];
  if (!v30)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v31 = v30 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type;
  if (*(unsigned char *)(v31 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v32 = *(void *)(v31 + 8);
    swift_unknownObjectRetain();
    if (!v32)
    {
LABEL_31:
      [(objc_class *)v28 setEnabled:0];
      return;
    }
  }
  swift_getObjectType();
  NSString v33 = (void *)sub_1004CED30();
  swift_unknownObjectRelease();
  if (!v33) {
    goto LABEL_31;
  }
  id v34 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v34)
  {
    id v35 = [v34 pickerOperationFor:v33];
    swift_unknownObjectRelease();
    BOOL v36 = v35 != 0;
  }
  else
  {
    BOOL v36 = 1;
  }
  [(objc_class *)v28 setEnabled:v36];
}

uint64_t sub_10034480C()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100344844()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_10022FC28();
  }
}

void sub_100344898()
{
}

uint64_t sub_1003448A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  swift_retain();
  sub_1002B32F4(1);

  return swift_release();
}

uint64_t sub_1003448F0()
{
  id v1 = *(id *)(v0 + 48);
  uint64_t v2 = DOCFileOperationsManager.unorderedFileOperations.getter();

  return v2;
}

void sub_100344928()
{
}

uint64_t DOCFilterableOperationProgressCollectionSource.deinit()
{
  swift_bridgeObjectRelease();
  sub_1000388F0(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100344960()
{
  swift_bridgeObjectRelease();
  sub_1000388F0(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t DOCFilterableOperationProgressCollectionSource.setItemDidUpdateHandler(forClient:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_retain();
    sub_100344C04(a1, a2, a3);
    return sub_1000388F0(a2);
  }
  else
  {
    return sub_100344D24(a1);
  }
}

uint64_t DOCFilterableOperationProgressCollectionSource.unorderedItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCFilterableOperationProgressCollectionSource.unorderedItems.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DOCFilterableOperationProgressCollectionSource.unorderedItems.modify())()
{
  return j__swift_endAccess;
}

uint64_t DOCFilterableOperationProgressCollectionSource.filteringPredicate.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_100039174(v1);
  return v1;
}

uint64_t DOCFilterableOperationProgressCollectionSource.filteringPredicate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return sub_1000388F0(v5);
}

uint64_t (*DOCFilterableOperationProgressCollectionSource.filteringPredicate.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100344C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100344D24(a1);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = (void *)(v3 + 40);
  swift_beginAccess();
  uint64_t v9 = *(void **)(v3 + 40);
  swift_unknownObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 40) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_100236784(0, v9[2] + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v12 = v9[2];
  unint64_t v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_100236784((void *)(v11 > 1), v12 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  v9[2] = v12 + 1;
  uint64_t v13 = &v9[3 * v12];
  v13[4] = a1;
  v13[5] = sub_100344F4C;
  void v13[6] = v7;
  return swift_endAccess();
}

uint64_t sub_100344D24(uint64_t a1)
{
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v3 = sub_100344F54(v1 + 40, a1);
  uint64_t result = swift_unknownObjectRelease();
  int64_t v5 = *(void *)(*(void *)(v1 + 40) + 16);
  if (v5 < v3)
  {
    __break(1u);
  }
  else
  {
    sub_1002D3000(v3, v5);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_100344DC0()
{
  return sub_1004CDE70();
}

uint64_t DOCFilterableOperationProgressCollectionSource.__deallocating_deinit()
{
  DOCFilterableOperationProgressCollectionSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCFileOperationCollectionSource()
{
  uint64_t result = qword_100634B60;
  if (!qword_100634B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100344E60()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100344EA8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DOCFilterableOperationProgressCollectionSource()
{
  return sub_10005DE5C();
}

uint64_t sub_100344F14()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100344F4C(void *a1)
{
  return sub_100392658(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_100344F54(uint64_t result, uint64_t a2)
{
  uint64_t v15 = (void *)result;
  uint64_t v2 = *(void **)result;
  unint64_t v3 = *(void *)(*(void *)result + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  while (v2[v5 + 4] != a2)
  {
    ++v6;
    v5 += 3;
    if (v3 == v6) {
      return *(void *)(*(void *)result + 16);
    }
  }
  unint64_t v7 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v7 == v3) {
      return v6;
    }
    while (v7 < v3)
    {
      uint64_t v9 = v2[v5 + 7];
      if (v9 != a2)
      {
        if (v7 != v6)
        {
          if (v6 >= v3) {
            goto LABEL_24;
          }
          uint64_t v10 = (uint64_t)&v2[3 * v6 + 4];
          uint64_t v11 = *(void *)(v10 + 16);
          uint64_t v12 = v2[v5 + 9];
          uint64_t v17 = v2[v5 + 8];
          long long v16 = *(_OWORD *)v10;
          swift_unknownObjectRetain();
          swift_retain();
          swift_unknownObjectRetain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_100384778(v2);
          }
          uint64_t v13 = &v2[3 * v6];
          v13[4] = v9;
          v13[5] = v17;
          void v13[6] = v12;
          swift_release();
          uint64_t result = swift_unknownObjectRelease();
          if (v7 >= v2[2]) {
            goto LABEL_25;
          }
          Swift::String v14 = &v2[v5];
          *(_OWORD *)(v14 + 7) = v16;
          v14[9] = v11;
          swift_release();
          uint64_t result = swift_unknownObjectRelease();
          *uint64_t v15 = v2;
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_23;
        }
        unint64_t v3 = v2[2];
      }
      ++v7;
      v5 += 3;
      if (v7 == v3) {
        return v6;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DOCFakeStaticContentProgress.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100033138(v1, a1);
}

uint64_t DOCFakeStaticContentProgress.identifier.setter(uint64_t a1)
{
  return sub_100345130(a1, v1);
}

uint64_t sub_100345130(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*DOCFakeStaticContentProgress.identifier.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

id DOCFileOperation.progress.getter()
{
  return *(id *)(v0 + 40);
}

void DOCFileOperation.progress.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

uint64_t (*DOCFileOperation.progress.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFileOperation.dateStarted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 24);
  uint64_t v4 = sub_1004CAD80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DOCFileOperation()
{
  uint64_t result = qword_100634D90;
  if (!qword_100634D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DOCFileOperation.dateStarted.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 24);
  uint64_t v4 = sub_1004CAD80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*DOCFileOperation.dateStarted.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFileOperation.iconType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 28);
  return sub_1000C9920(v3, a1);
}

uint64_t DOCFileOperation.iconType.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 28);
  return sub_10034540C(a1, v3);
}

uint64_t sub_10034540C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressProvidingOperationIconType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DOCFileOperation.iconType.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

unint64_t DOCFileOperation.description.getter()
{
  sub_1004CF4D0(24);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = sub_1004CF430();
  sub_1004CDCD0(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v2);
  return 0xD000000000000015;
}

Swift::Int DOCDiffableIdentifier.hashValue.getter()
{
  return sub_1004CFA30();
}

uint64_t sub_100345590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1004CAD80();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_100345600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000C9920(v2 + *(int *)(a1 + 28), a2);
}

Swift::Int sub_100345610()
{
  return sub_1004CFA30();
}

unint64_t sub_100345650()
{
  unint64_t result = qword_100634D30;
  if (!qword_100634D30)
  {
    type metadata accessor for DOCFileOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100634D30);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DOCFileOperation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = (void *)a2[5];
    v4[5] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1004CAD80();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    id v14 = v8;
    v13(v10, v11, v12);
    uint64_t v15 = *(int *)(a3 + 28);
    long long v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = v17[1];
      *long long v16 = *v17;
      v16[1] = v22;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1004CB5C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t destroy for DOCFileOperation(uint64_t a1, uint64_t a2)
{
  sub_100039184(a1);

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  type metadata accessor for DOCProgressProvidingOperationIconType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v8 = sub_1004CB5C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v6, v8);
  }
  return result;
}

uint64_t initializeWithCopy for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1004CAD80();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)(a1 + v14);
  long long v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v20;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_1004CB5C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for DOCFileOperation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000ABA90(a1, a2);
  long long v6 = (void *)a2[5];
  long long v7 = (void *)a1[5];
  a1[5] = (uint64_t)v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1004CAD80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_1000CA12C((uint64_t)a1 + v13);
    uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_1004CB5C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v14, v15, v18);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t initializeWithTake for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for DOCProgressProvidingOperationIconType();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1004CB5C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100039184(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_1000CA12C(a1 + v13);
    uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1004CB5C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100345F48);
}

uint64_t sub_100345F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1004CAD80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100346088);
}

uint64_t sub_100346088(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1004CAD80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1003461B4()
{
  uint64_t result = sub_1004CAD80();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void DOCSplitBrowserViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  id v13 = [v4 fullDocumentManagerViewController];
  uint64_t v8 = (char *)[v13 effectiveBrowserViewController];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = (void **)&v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v11 = *v10;
    if (v11 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v12 = v11;

      id v9 = v12;
      DOCItemCollectionViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(a1, a2, a3);
    }
    else
    {
    }
  }
  else
  {
  }
}

void sub_1003464DC(void *a1)
{
  unint64_t v2 = v1;
  id v4 = [v1 fullDocumentManagerViewController];
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100347410;
  *(void *)(v7 + 24) = v6;
  uint64_t v20 = (uint64_t (*)(void))sub_1000674E0;
  uint64_t v21 = v7;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100125C48;
  uint64_t v19 = &unk_1005CEE00;
  uint64_t v8 = _Block_copy(&v16);
  id v9 = v4;
  id v10 = v2;
  swift_retain();
  swift_release();
  [(id)v5 performWithoutAnimation:v8];
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = DOCSplitBrowserViewController.didCommitPreview(of:);
    uint64_t v21 = 0;
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_100125C70;
    uint64_t v19 = &unk_1005CEE28;
    uint64_t v11 = _Block_copy(&v16);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v20 = (uint64_t (*)(void))sub_100347410;
    uint64_t v21 = v12;
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_100125C70;
    uint64_t v19 = &unk_1005CEE78;
    id v13 = _Block_copy(&v16);
    id v14 = v9;
    id v15 = v10;
    swift_release();
    [a1 animateAlongsideTransition:v11 completion:v13];
    _Block_release(v13);
    _Block_release(v11);
    swift_release();
  }
}

void sub_100346788(void *a1)
{
  uint64_t v2 = sub_1004CCA00();
  __chkstk_darwin(v2);
  [a1 enclosingUIPHorizontalInset];
  double v4 = v3;
  if (sub_1003468D4()) {
    double v5 = 160.0;
  }
  else {
    double v5 = 0.0;
  }
  if (v5 != v4)
  {
    sub_1004CE560();
    sub_1004CC990();
    sub_1004CE570();
    objc_msgSend(a1, "setAdditionalSafeAreaInsets:", 0.0, v5, 0.0, v5);
    objc_msgSend(a1, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
    id v6 = [a1 view];
    if (v6)
    {
      uint64_t v7 = v6;
      [v6 layoutBelowIfNeeded];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1003468D4()
{
  id v1 = [v0 fullDocumentManagerViewController];
  uint64_t v2 = (char *)[v1 dataSource];
  uint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado30DOCBrowserNavigationDataSource_viewStyle];

  if (v3 != 2)
  {
    id v4 = objc_msgSend(v0, "doc_splitViewState");
    unsigned __int8 v5 = [v4 isSidebarShownInOverlay];

    id v6 = [v0 enclosingTabSwitcherStyle];
    if ([v0 enclosedInUIPDocumentLanding])
    {
      id v7 = objc_msgSend(v0, "doc_splitViewState");
      unsigned __int8 v8 = [v7 isSidebarShownInline];

      if ((v8 & 1) != 0 || (id v9 = [v0 preferredSplitBehavior], v9 == (id)1))
      {
        if (v6 == (id)2) {
          char v13 = 1;
        }
        else {
          char v13 = v5;
        }
        if (v13) {
          return 1;
        }
      }
      else if (!v9)
      {
        unsigned int v10 = [v0 _canTileSidebarColumn:0];
        char v11 = v6 == (id)2 ? 1 : v5;
        if (v10 && (v11 & 1) != 0) {
          return 1;
        }
      }
    }
  }
  return 0;
}

id DOCSplitBrowserViewController.target(forAction:withSender:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = [v3 fullDocumentManagerViewController];
  DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(a1, a2);
  char v9 = v8;

  if (v9)
  {
    id v16 = [v28 fullDocumentManagerViewController];
    sub_10010E21C(a2, (uint64_t)&v29);
    uint64_t v17 = *((void *)&v30 + 1);
    if (*((void *)&v30 + 1))
    {
      uint64_t v18 = sub_100032FD8(&v29, *((uint64_t *)&v30 + 1));
      uint64_t v19 = *(void *)(v17 - 8);
      __chkstk_darwin(v18);
      uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v21);
      uint64_t v22 = sub_1004CF870();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v17);
      sub_100039184((uint64_t)&v29);
    }
    else
    {
      uint64_t v22 = 0;
    }
    id v26 = [v16 targetForAction:a1 withSender:v22];

    swift_unknownObjectRelease();
    if (v26)
    {
      sub_1004CF2A0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v29 = 0u;
      long long v30 = 0u;
    }
    return (id)sub_100035EF8((uint64_t)&v29, a3);
  }
  else
  {
    sub_10010E21C(a2, (uint64_t)&v29);
    uint64_t v10 = *((void *)&v30 + 1);
    if (*((void *)&v30 + 1))
    {
      char v11 = sub_100032FD8(&v29, *((uint64_t *)&v30 + 1));
      uint64_t v12 = *(void *)(v10 - 8);
      __chkstk_darwin(v11);
      id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v14);
      uint64_t v15 = sub_1004CF870();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
      sub_100039184((uint64_t)&v29);
    }
    else
    {
      uint64_t v15 = 0;
    }
    unsigned int v23 = [v28 canPerformAction:a1 withSender:v15];
    id result = (id)swift_unknownObjectRelease();
    if (v23)
    {
      *(void *)(a3 + 24) = sub_10034736C();
      id v25 = v28;
      *(void *)a3 = v28;
      return v25;
    }
    else
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
  }
  return result;
}

BOOL DOCSplitBrowserViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  if (sub_1004CAF80())
  {
    return sub_10034710C(a1, a2);
  }
  else
  {
    sub_10010E21C(a2, (uint64_t)v14);
    uint64_t v6 = v15;
    if (v15)
    {
      id v7 = sub_100032FD8(v14, v15);
      uint64_t v8 = *(void *)(v6 - 8);
      __chkstk_darwin(v7);
      uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v10);
      uint64_t v11 = sub_1004CF870();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
      sub_100039184((uint64_t)v14);
    }
    else
    {
      uint64_t v11 = 0;
    }
    v13.receiver = v2;
    v13.super_class = (Class)DOCSplitBrowserViewController;
    id v12 = objc_msgSendSuper2(&v13, "canPerformAction:withSender:", a1, v11);
    swift_unknownObjectRelease();
    return (BOOL)v12;
  }
}

BOOL sub_10034710C(uint64_t a1, uint64_t a2)
{
  if ([self enclosingTabSwitcherCanBeFloating])
  {
    id v5 = objc_msgSend(v2, "doc_splitViewState");
    unsigned __int8 v6 = [v5 isSidebarShown];

    return (v6 & 1) != 0 || [v2 enclosingTabSwitcherStyle] == (id)2;
  }
  else
  {
    sub_10010E21C(a2, (uint64_t)v16);
    uint64_t v8 = v17;
    if (v17)
    {
      uint64_t v9 = sub_100032FD8(v16, v17);
      uint64_t v10 = *(void *)(v8 - 8);
      __chkstk_darwin(v9);
      id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v10 + 16))(v12);
      uint64_t v13 = sub_1004CF870();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
      sub_100039184((uint64_t)v16);
    }
    else
    {
      uint64_t v13 = 0;
    }
    v15.receiver = v2;
    v15.super_class = (Class)DOCSplitBrowserViewController;
    id v7 = objc_msgSendSuper2(&v15, "canPerformAction:withSender:", a1, v13);
    swift_unknownObjectRelease();
  }
  return (BOOL)v7;
}

unint64_t sub_10034736C()
{
  unint64_t result = qword_100634DD0;
  if (!qword_100634DD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100634DD0);
  }
  return result;
}

uint64_t type metadata accessor for UIPDocumentLandingSettings()
{
  return self;
}

uint64_t sub_1003473D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100347410()
{
  sub_100346788(*(void **)(v0 + 16));
}

uint64_t sub_100347418()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100347428(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100347438()
{
  return swift_release();
}

uint64_t type metadata accessor for AppBadgeManager()
{
  return self;
}

uint64_t type metadata accessor for ImageCache()
{
  return self;
}

uint64_t sub_10034749C(uint64_t a1)
{
  uint64_t v3 = sub_1004CC170();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned __int8 v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  sub_1004CD550();
  uint64_t v7 = v1 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_forwardingDelegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 8))(v1, v6, ObjectType, v8);
  swift_unknownObjectRelease();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
}

uint64_t sub_10034768C(uint64_t a1)
{
  uint64_t v3 = sub_1004CBA70();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned __int8 v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  sub_1004CD550();
  uint64_t v7 = v1 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_forwardingDelegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 16))(v1, v6, ObjectType, v8);
  swift_unknownObjectRelease();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
}

uint64_t sub_10034787C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1004CD550();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_forwardingDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1004CD540();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 24))(v0, v5, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100347990()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1004CD550();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_forwardingDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100347A44()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100347AB8()
{
  return sub_100347AE0();
}

uint64_t sub_100347ACC()
{
  return sub_100347AE0();
}

uint64_t sub_100347AE0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  return swift_release();
}

uint64_t sub_100347B50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  return swift_release();
}

uint64_t sub_100347BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100347C9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100347D10@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100347D8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel__showFilenameExtensions;
  uint64_t v2 = sub_100031648(&qword_100635120);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel__selectedGroupingBehavior;
  uint64_t v4 = sub_100031648(&qword_100635128);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel__selectedSortMode;
  uint64_t v6 = sub_100031648(&qword_100635130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel__selectedSizeSetting;
  uint64_t v8 = sub_100031648(&qword_100635138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_1000391D4(v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_forwardingDelegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100347F44()
{
  sub_100347D8C();
  return swift_deallocClassInstance();
}

uint64_t sub_100347F9C()
{
  return type metadata accessor for DOCViewOptionsViewModel();
}

uint64_t type metadata accessor for DOCViewOptionsViewModel()
{
  uint64_t result = qword_100635000;
  if (!qword_100635000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100347FF0()
{
  sub_100348218(319, &qword_100635010);
  if (v0 <= 0x3F)
  {
    sub_1003481C4(319, &qword_100635018, (void (*)(uint64_t))&type metadata accessor for DOCItemGroupingBehavior);
    if (v1 <= 0x3F)
    {
      sub_1003481C4(319, &qword_100635020, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
      if (v2 <= 0x3F)
      {
        sub_100348218(319, (unint64_t *)&unk_100635028);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1003481C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1004CD560();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100348218(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1004CD560();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void *sub_100348260()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10034826C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10034829C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003482CC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003482FC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10034832C()
{
  uint64_t v0 = self;
  sub_1004CC160();
  NSString v1 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v2 = [v0 groupByMenuItemForGrouping:v1];

  uint64_t v3 = sub_1004CDB50();
  return v3;
}

uint64_t sub_1003483BC(uint64_t a1, uint64_t a2)
{
  return sub_1003484A0(a1, a2, (SEL *)&selRef_groupByMenuButton);
}

uint64_t sub_1003483C8(uint64_t a1, uint64_t a2)
{
  return sub_1003484A0(a1, a2, (SEL *)&selRef_sortByMenuButton);
}

uint64_t sub_1003483D4()
{
  uint64_t v0 = self;
  NSString v1 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v2 = [v0 sizeSettingMenuItemForSize:v1];

  uint64_t v3 = sub_1004CDB50();
  return v3;
}

uint64_t sub_100348488(uint64_t a1, uint64_t a2)
{
  return sub_1003484A0(a1, a2, (SEL *)&selRef_sizeSettingMenuButton);
}

uint64_t sub_100348494(uint64_t a1, uint64_t a2)
{
  return sub_1003484A0(a1, a2, (SEL *)&selRef_showFilenameExtensions);
}

uint64_t sub_1003484A0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];
  uint64_t v4 = sub_1004CDB50();

  return v4;
}

uint64_t sub_100348504()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100348514()
{
  return sub_100348550();
}

uint64_t sub_10034852C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10034853C()
{
  return sub_100348550();
}

uint64_t sub_100348550()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1004CD540();
  swift_release();
  return swift_release();
}

uint64_t sub_1003485C8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_selectedSortOrderAscending);
}

uint64_t sub_1003485D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003485E8()
{
  return sub_10034787C();
}

uint64_t sub_1003485F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100348600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004CD500();
  *a1 = result;
  return result;
}

unint64_t sub_100348650(uint64_t a1)
{
  unint64_t result = sub_100348678();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100348678()
{
  unint64_t result = qword_100635118;
  if (!qword_100635118)
  {
    type metadata accessor for DOCViewOptionsViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635118);
  }
  return result;
}

uint64_t sub_1003486D0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100347D10(a1);
}

uint64_t sub_1003486F8()
{
  return sub_10034787C();
}

uint64_t sub_100348720()
{
  return sub_100347B50();
}

uint64_t sub_100348748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100347BC8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DOCItemSortMode, (uint64_t (*)(char *))sub_10034768C);
}

uint64_t sub_100348788()
{
  return sub_100347B50();
}

uint64_t sub_1003487B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100347BC8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DOCItemGroupingBehavior, (uint64_t (*)(char *))sub_10034749C);
}

uint64_t sub_1003487F0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100347D10(a1);
}

uint64_t sub_100348818()
{
  return sub_100347990();
}

objc_class *sub_100348840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(uint64_t, uint64_t), int a7, int a8, uint64_t a9)
{
  uint64_t v10 = v9;
  int v74 = a5;
  int v75 = a8;
  int v69 = a7;
  uint64_t v71 = a3;
  unint64_t v72 = a6;
  uint64_t v82 = a4;
  uint64_t v83 = a2;
  uint64_t v70 = a1;
  uint64_t v11 = sub_100031648(&qword_100635140);
  uint64_t v81 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  unsigned __int8 v79 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v80 = (char *)&v66 - v14;
  uint64_t v15 = sub_1004CBA70();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  id v73 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v76 = sub_1004CC170();
  uint64_t v20 = *(void *)(v76 - 8);
  uint64_t v21 = __chkstk_darwin(v76);
  unsigned int v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v25 = (char *)&v66 - v24;
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v27 = result;
  v61._countAndFlagsBits = 0x8000000100523110;
  v85._countAndFlagsBits = 0x74704F2077656956;
  v85._object = (void *)0xEC000000736E6F69;
  v90._countAndFlagsBits = 0x617A696C61636F4CLL;
  v90._object = (void *)0xEB00000000656C62;
  v28.super.Class isa = v27;
  v95._countAndFlagsBits = 0x74704F2077656956;
  v95._object = (void *)0xEC000000736E6F69;
  uint64_t v29 = sub_1004CBEE0(v85, v90, v28, v95, v61);
  uint64_t v31 = v30;

  void v10[2] = v29;
  v10[3] = v31;
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v32 = result;
  v62._countAndFlagsBits = 0x8000000100523630;
  v86._countAndFlagsBits = 0x79422070756F7247;
  v86._object = (void *)0xE800000000000000;
  v91._countAndFlagsBits = 0x617A696C61636F4CLL;
  v91._object = (void *)0xEB00000000656C62;
  v33.super.Class isa = v32;
  v96._countAndFlagsBits = 0x79422070756F7247;
  v96._object = (void *)0xE800000000000000;
  uint64_t v34 = sub_1004CBEE0(v86, v91, v33, v96, v62);
  uint64_t v36 = v35;

  v10[4] = v34;
  v10[5] = v36;
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  Swift::String v37 = result;
  v63._countAndFlagsBits = 0x8000000100531AB0;
  v87._countAndFlagsBits = 0x79422074726F53;
  v87._object = (void *)0xE700000000000000;
  v92._countAndFlagsBits = 0x617A696C61636F4CLL;
  v92._object = (void *)0xEB00000000656C62;
  v38.super.Class isa = v37;
  v97._countAndFlagsBits = 0x79422074726F53;
  v97._object = (void *)0xE700000000000000;
  uint64_t v39 = sub_1004CBEE0(v87, v92, v38, v97, v63);
  uint64_t v41 = v40;

  v10[6] = v39;
  v10[7] = v41;
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  Swift::String v42 = result;
  uint64_t v68 = v11;
  v64._countAndFlagsBits = 0x8000000100531B10;
  v88._object = (void *)0x8000000100531AF0;
  v88._countAndFlagsBits = 0xD000000000000012;
  v93._countAndFlagsBits = 0x617A696C61636F4CLL;
  v93._object = (void *)0xEB00000000656C62;
  v43.super.Class isa = v42;
  v98._countAndFlagsBits = 0xD000000000000012;
  v98._object = (void *)0x8000000100531AF0;
  uint64_t v44 = sub_1004CBEE0(v88, v93, v43, v98, v64);
  uint64_t v46 = v45;

  v10[8] = v44;
  v10[9] = v46;
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    id v47 = result;
    uint64_t v67 = a9;
    v69 &= 1u;
    v89._countAndFlagsBits = 0xD00000000000001CLL;
    v65._countAndFlagsBits = 0x8000000100531B80;
    v89._object = (void *)0x8000000100531B60;
    v94._countAndFlagsBits = 0x617A696C61636F4CLL;
    v94._object = (void *)0xEB00000000656C62;
    v48.super.Class isa = v47;
    v99._countAndFlagsBits = 0xD00000000000001CLL;
    v99._object = (void *)0x8000000100531B60;
    uint64_t v49 = sub_1004CBEE0(v89, v94, v48, v99, v65);
    uint64_t v51 = v50;

    v10[10] = v49;
    v10[11] = v51;
    *(void *)((char *)v10 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_forwardingDelegate + 8) = 0;
    swift_unknownObjectWeakInit();
    *(void *)((char *)v10 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_groupingBehaviors) = v70;
    *(void *)((char *)v10 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_sortModes) = v71;
    *(void *)((char *)v10 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_sizeSettings) = v72;
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v53 = v76;
    v52(v25, v83, v76);
    swift_beginAccess();
    v52(v23, (uint64_t)v25, v53);
    sub_1004CD510();
    NSString v54 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    uint64_t v71 = v20 + 8;
    unint64_t v72 = v54;
    v54((uint64_t)v25, v53);
    swift_endAccess();
    uint64_t v56 = v77;
    uint64_t v55 = v78;
    id v57 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
    v57(v19, v82, v78);
    swift_beginAccess();
    v57(v73, (uint64_t)v19, v55);
    sub_1004CD510();
    uint64_t v77 = *(void *)(v56 + 8);
    ((void (*)(char *, uint64_t))v77)(v19, v55);
    swift_endAccess();
    *((unsigned char *)v10 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_selectedSortOrderAscending) = v74 & 1;
    swift_beginAccess();
    LOBYTE(v84) = v69;
    sub_1004CD510();
    swift_endAccess();
    swift_beginAccess();
    LOBYTE(v84) = v75 & 1;
    sub_1004CD510();
    *(void *)((char *)v10 + OBJC_IVAR____TtC14RecentsAvocado23DOCViewOptionsViewModel_availableSections) = &off_1005B42E8;
    uint64_t v84 = v67;
    sub_100031648(&qword_100635120);
    id v58 = v80;
    sub_1004CD520();
    swift_endAccess();
    sub_100031648(&qword_10062DF60);
    sub_100349078();
    sub_1004CD590();
    uint64_t v59 = v81;
    uint64_t v60 = v68;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v79, v58, v68);
    swift_beginAccess();
    sub_1004CD530();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
    ((void (*)(uint64_t, uint64_t))v77)(v82, v55);
    v72(v83, v53);
    return (objc_class *)v10;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100349078()
{
  unint64_t result = qword_10062DF68;
  if (!qword_10062DF68)
  {
    sub_1000316E8(&qword_10062DF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10062DF68);
  }
  return result;
}

id static ISImageDescriptorName.doc_notification.getter()
{
  return kISImageDescriptorNotification;
}

void sub_1003490E4(double a1)
{
  id v3 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:a1];
  id v4 = [v3 CGColor];

  [v1 size];
  [v1 scale];
  uint64_t v5 = swift_allocObject();
  *(double *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 32) = v1;
  v10[4] = sub_100349610;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_1003A422C;
  v10[3] = &unk_1005CEFE8;
  uint64_t v6 = _Block_copy(v10);
  id v7 = v4;
  id v8 = v1;
  swift_release();
  id v9 = (id)_UIGraphicsDrawIntoImageContextWithOptions();
  _Block_release(v6);
  if (v9) {

  }
  else {
    __break(1u);
  }
}

CGContext *sub_100349264(CGColor *a1, id a2, double a3)
{
  if (a3 > 0.0)
  {
    unint64_t result = UIGraphicsGetCurrentContext();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = result;
    v8.width = 0.0;
    v8.height = 0.5;
    CGContextSetShadowWithColor(result, v8, 1.0, a1);
  }
  return (CGContext *)objc_msgSend(a2, "drawAtPoint:", 0.0, 0.0);
}

Swift::Int sub_1003492EC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v21 > 0)
    {
      swift_bridgeObjectRetain();
      Swift::Int result = sub_1004CF6D0();
      uint64_t v3 = result;
      if (result)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v5 = (id)sub_1004CF500();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_35;
          }
          id v5 = *(id *)(a1 + 32);
        }
        id v6 = v5;
        Swift::Int result = swift_bridgeObjectRelease();
        if (v3 < 0)
        {
LABEL_38:
          __break(1u);
          return result;
        }
        if (!v2)
        {
          uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          Swift::Int result = swift_bridgeObjectRetain();
          if (!v7) {
            goto LABEL_35;
          }
LABEL_13:
          if (v7 < v3)
          {
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
          if ((a1 & 0xC000000000000001) != 0 && v3 != 1)
          {
            sub_100349590();
            Swift::Int result = 1;
            do
            {
              Swift::Int v8 = result + 1;
              sub_1004CF4F0(result);
              Swift::Int result = v8;
            }
            while (v3 != v8);
          }
          if (v2)
          {
            swift_bridgeObjectRetain();
            sub_1004CF6E0();
            uint64_t v9 = v17;
            uint64_t v10 = v18;
            unint64_t v20 = v19;
            Swift::Int result = swift_bridgeObjectRelease_n();
            v20 >>= 1;
            uint64_t v12 = v20 - v10;
            BOOL v11 = (uint64_t)v20 <= v10;
            if (v20 != v10) {
              goto LABEL_20;
            }
          }
          else
          {
            uint64_t v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
            uint64_t v10 = 1;
            uint64_t v12 = v3 - 1;
            BOOL v11 = v3 <= 1;
            if (v3 != 1)
            {
LABEL_20:
              if (v11)
              {
LABEL_37:
                __break(1u);
                goto LABEL_38;
              }
              swift_unknownObjectRetain();
              uint64_t v13 = (void **)(v9 + 8 * v10);
              do
              {
                uint64_t v14 = v6;
                uint64_t v15 = *v13++;
                id v16 = v15;
                id v6 = [v6 configurationByApplyingConfiguration:v16];

                --v12;
              }
              while (v12);
              swift_unknownObjectRelease_n();
              return (Swift::Int)v6;
            }
          }
          swift_unknownObjectRelease();
          return (Swift::Int)v6;
        }
        swift_bridgeObjectRetain();
        Swift::Int result = sub_1004CF6D0();
        if (result >= 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = sub_1004CF6D0();
          Swift::Int result = swift_bridgeObjectRelease();
          goto LABEL_13;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
      Swift::Int result = swift_bridgeObjectRetain();
      goto LABEL_4;
    }
  }
  id v22 = [self configurationWithScale:-1];
  return (Swift::Int)v22;
}

unint64_t sub_100349590()
{
  unint64_t result = qword_100635148;
  if (!qword_100635148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100635148);
  }
  return result;
}

uint64_t sub_1003495D0()
{
  return _swift_deallocObject(v0, 40, 7);
}

CGContext *sub_100349610()
{
  return sub_100349264(*(CGColor **)(v0 + 24), *(id *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t sub_10034961C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10034962C()
{
  return swift_release();
}

void sub_100349634(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_enabled);
  if (v2 == (a1 & 1)) {
    return;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_longPressGesture);
  id v8 = Strong;
  if (!v2)
  {
    if (v4)
    {
      objc_msgSend(Strong, "removeGestureRecognizer:");
      id v5 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_editMenuInteraction);
      if (v5)
      {
        id v6 = &selRef_removeInteraction_;
        goto LABEL_11;
      }
LABEL_17:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(Strong, "addGestureRecognizer:");
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_editMenuInteraction);
  if (!v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v6 = &selRef_addInteraction_;
LABEL_11:
  id v7 = v5;
  objc_msgSend(v8, *v6, v7);
}

void sub_10034973C(void *a1)
{
  if ([a1 state] == (id)1)
  {
    sub_10034991C();
    if (*(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_activePresentationContext + 16))
    {
      sub_1000333C8(0, &qword_100635208);
      uint64_t v2 = sub_1004CE8F0();
      uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_editMenuInteraction);
      if (v3)
      {
        id v4 = (id)v2;
        objc_msgSend(v3, "presentEditMenuWithConfiguration:");
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10034991C()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = (void *)Strong;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_longPressGesture);
  if (!v4)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v16 = v3;
  objc_msgSend(v4, "locationInView:");
  uint64_t v6 = v5;
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v7 = (objc_class *)(id)_DocumentManagerBundle();
    if (v7)
    {
      id v8 = v7;
      v15._countAndFlagsBits = 0x8000000100531CA0;
      v19._object = (void *)0x8000000100531C80;
      v19._countAndFlagsBits = 0xD000000000000012;
      v20._countAndFlagsBits = 0x617A696C61636F4CLL;
      v20._object = (void *)0xEB00000000656C62;
      v9.super.Class isa = v8;
      v21._countAndFlagsBits = 2037411651;
      v21._object = (void *)0xE400000000000000;
      sub_1004CBEE0(v19, v20, v9, v21, v15);

      sub_1000333C8(0, (unint64_t *)&qword_100628760);
      NSString v10 = sub_1004CDB10();
      id v11 = [self systemImageNamed:v10];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = sub_1004CEF50();
      sub_100031648(&qword_100628240);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1004E5710;
      *(void *)(v13 + 32) = v12;
      uint64_t v17 = v13;
      sub_1004CDE50();
      swift_unknownObjectRelease();
      uint64_t v14 = v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_activePresentationContext;
      *(void *)uint64_t v14 = v6;
      *(void *)(v14 + 8) = 0;
      *(void *)(v14 + 16) = v17;
      *(unsigned char *)(v14 + 24) = 0;

      swift_bridgeObjectRelease();
      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
}

void sub_100349BE8()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = (void *)Strong;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_editMenuInteraction);
  if (!v4)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v16 = v3;
  objc_msgSend(v4, "locationInView:");
  uint64_t v6 = v5;
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v7 = (objc_class *)(id)_DocumentManagerBundle();
    if (v7)
    {
      id v8 = v7;
      v15._countAndFlagsBits = 0x8000000100531CA0;
      v19._object = (void *)0x8000000100531C80;
      v19._countAndFlagsBits = 0xD000000000000012;
      v20._countAndFlagsBits = 0x617A696C61636F4CLL;
      v20._object = (void *)0xEB00000000656C62;
      v9.super.Class isa = v8;
      v21._countAndFlagsBits = 2037411651;
      v21._object = (void *)0xE400000000000000;
      sub_1004CBEE0(v19, v20, v9, v21, v15);

      sub_1000333C8(0, (unint64_t *)&qword_100628760);
      NSString v10 = sub_1004CDB10();
      id v11 = [self systemImageNamed:v10];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = sub_1004CEF50();
      sub_100031648(&qword_100628240);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1004E5710;
      *(void *)(v13 + 32) = v12;
      uint64_t v17 = v13;
      sub_1004CDE50();
      swift_unknownObjectRelease();
      uint64_t v14 = v1 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_activePresentationContext;
      *(void *)uint64_t v14 = v6;
      *(void *)(v14 + 8) = 0;
      *(void *)(v14 + 16) = v17;
      *(unsigned char *)(v14 + 24) = 1;

      swift_bridgeObjectRelease();
      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
}

id sub_100349EE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCViewEditMenuInteraction();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCViewEditMenuInteraction()
{
  return self;
}

uint64_t initializeWithCopy for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.PresentationContext()
{
  return &type metadata for DOCViewEditMenuInteraction.PresentationContext;
}

uint64_t sub_10034A144()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10034A17C()
{
}

Class sub_10034A184()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_activePresentationContext;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado26DOCViewEditMenuInteraction_activePresentationContext + 16);
  if (!v2)
  {
    sub_100349BE8();
    unint64_t v2 = *(void *)(v1 + 16);
    if (!v2) {
      return 0;
    }
  }
  char v3 = *(unsigned char *)(v1 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1004CF6D0();
    if (v4) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_20;
    }
LABEL_14:
    swift_bridgeObjectRetain();
    sub_1004CF8A0();
    sub_1000333C8(0, (unint64_t *)&qword_10062F0F0);
    NSBundle v9 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1000333C8(0, (unint64_t *)&qword_1006288E0);
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v15.value._countAndFlagsBits = 0;
    v15.value._object = 0;
    v13.value.super.Class isa = 0;
    v13.is_nil = 0;
    v10.value = 0;
    return sub_1004CEB60(v14, v15, v13, v10, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v9, v11).super.super.isa;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_19;
  }
LABEL_5:
  Class result = (Class)sub_1004CF590();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        id v7 = (id)sub_1004CF500();
        if ((v3 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        id v7 = *(id *)(v2 + 8 * v6 + 32);
        if ((v3 & 1) == 0)
        {
LABEL_12:
          id v8 = v7;
          [v8 copy];
          sub_1004CF2A0();

          swift_unknownObjectRelease();
          sub_1000333C8(0, (unint64_t *)&qword_100628760);
          swift_dynamicCast();
          [v12 setImage:0];
        }
      }
      ++v6;
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      sub_1004CF570();
      if (v4 == v6)
      {
        swift_bridgeObjectRelease();
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
          goto LABEL_14;
        }
LABEL_20:
        sub_1000333C8(0, (unint64_t *)&qword_10062F0F0);
        swift_bridgeObjectRetain();
        NSBundle v9 = (void *)sub_1004CF6C0();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *Class result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10034A510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *Class result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.PresentationStyle()
{
  return &type metadata for DOCViewEditMenuInteraction.PresentationStyle;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCViewEditMenuInteraction.Presentatable(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DOCViewEditMenuInteraction.Presentatable()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DOCViewEditMenuInteraction.Presentatable(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCViewEditMenuInteraction.Presentatable(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCViewEditMenuInteraction.Presentatable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCViewEditMenuInteraction.Presentatable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)Class result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.Presentatable()
{
  return &type metadata for DOCViewEditMenuInteraction.Presentatable;
}

unint64_t sub_10034A6AC()
{
  unint64_t result = qword_100635210;
  if (!qword_100635210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635210);
  }
  return result;
}

void sub_10034A708()
{
  id v19 = *(id *)v0;
  sub_1004CDB50();
  id v1 = v19;
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  sub_1001D8984(&v19);
  sub_1004CF9F0(*(void *)(v0 + 8));
  id v18 = *(id *)(v0 + 16);
  sub_1004CDB50();
  id v2 = v18;
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  sub_1001D8984(&v18);
  sub_1004CF9F0(*(void *)(v0 + 24));
  sub_1004CF9F0(*(void *)(v0 + 32));
  sub_1004CFA00(*(unsigned char *)(v0 + 40) & 1);
  sub_1004CFA00(*(unsigned char *)(v0 + 41) & 1);
  sub_1004CFA00(*(unsigned char *)(v0 + 42) & 1);
  Swift::UInt64 v3 = *(void *)(v0 + 56);
  Swift::UInt64 v4 = *(void *)(v0 + 64);
  Swift::UInt64 v5 = *(void *)(v0 + 72);
  Swift::UInt64 v6 = *(void *)(v0 + 80);
  Swift::UInt64 v7 = *(void *)(v0 + 88);
  Swift::UInt64 v9 = *(void *)(v0 + 96);
  Swift::UInt64 v8 = *(void *)(v0 + 104);
  if ((*(void *)(v0 + 48) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = *(void *)(v0 + 48);
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  sub_1004CFA20(v10);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v3;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  sub_1004CFA20(v11);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v12 = v4;
  }
  else {
    Swift::UInt64 v12 = 0;
  }
  sub_1004CFA20(v12);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v13 = v5;
  }
  else {
    Swift::UInt64 v13 = 0;
  }
  sub_1004CFA20(v13);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v14 = v6;
  }
  else {
    Swift::UInt64 v14 = 0;
  }
  sub_1004CFA20(v14);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v15 = v7;
  }
  else {
    Swift::UInt64 v15 = 0;
  }
  sub_1004CFA20(v15);
  if ((v9 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v16 = v9;
  }
  else {
    Swift::UInt64 v16 = 0;
  }
  sub_1004CFA20(v16);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v17 = v8;
  }
  else {
    Swift::UInt64 v17 = 0;
  }
  sub_1004CFA20(v17);
}

BOOL sub_10034A870(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[6];
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  void v13[6] = v3;
  v14[0] = v6;
  long long v8 = a2[2];
  long long v9 = a2[3];
  long long v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  long long v11 = a2[4];
  void v14[3] = v9;
  v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return sub_10034B03C((uint64_t)v13, (uint64_t)v14);
}

Swift::Int sub_10034A8D8()
{
  return sub_1004CFA30();
}

Swift::Int sub_10034A91C()
{
  return sub_1004CFA30();
}

void sub_10034A958()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_1004CFA20(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1004CFA20(v2);
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v0[2];
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1004CFA20(v3);
  Swift::UInt64 v4 = v0[4];
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v0[3];
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_1004CFA20(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_1004CFA20(v6);
  Swift::UInt64 v7 = v0[6];
  Swift::UInt64 v8 = v0[7];
  if ((v0[5] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v0[5];
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  sub_1004CFA20(v9);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v7;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  sub_1004CFA20(v10);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v8;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  sub_1004CFA20(v11);
}

Swift::Int sub_10034A9FC()
{
  sub_1004CF9E0();
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_1004CFA20(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1004CFA20(v2);
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v0[2];
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1004CFA20(v3);
  Swift::UInt64 v4 = v0[4];
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v0[3];
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_1004CFA20(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_1004CFA20(v6);
  Swift::UInt64 v7 = v0[6];
  Swift::UInt64 v8 = v0[7];
  if ((v0[5] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v0[5];
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  sub_1004CFA20(v9);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v7;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  sub_1004CFA20(v10);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v8;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  sub_1004CFA20(v11);
  return sub_1004CFA30();
}

BOOL sub_10034AAD8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  uint64_t v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_10034AFB8((double *)v7, (double *)v8);
}

Swift::Int sub_10034AB2C()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt64 v3 = v0[2];
  Swift::UInt64 v4 = v0[3];
  Swift::UInt64 v5 = v0[4];
  Swift::UInt64 v6 = v0[5];
  Swift::UInt64 v7 = v0[6];
  Swift::UInt64 v8 = v0[7];
  sub_1004CF9E0();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v1;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  sub_1004CFA20(v9);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v2;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  sub_1004CFA20(v10);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v3;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  sub_1004CFA20(v11);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v12 = v4;
  }
  else {
    Swift::UInt64 v12 = 0;
  }
  sub_1004CFA20(v12);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v13 = v5;
  }
  else {
    Swift::UInt64 v13 = 0;
  }
  sub_1004CFA20(v13);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v14 = v6;
  }
  else {
    Swift::UInt64 v14 = 0;
  }
  sub_1004CFA20(v14);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v15 = v7;
  }
  else {
    Swift::UInt64 v15 = 0;
  }
  sub_1004CFA20(v15);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v16 = v8;
  }
  else {
    Swift::UInt64 v16 = 0;
  }
  sub_1004CFA20(v16);
  return sub_1004CFA30();
}

BOOL static DOCUniformHorizontalEdgeInsets.__derived_struct_equals(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  BOOL v6 = a1 == a4;
  if (a2 != a5) {
    BOOL v6 = 0;
  }
  return a3 == a6 && v6;
}

void DOCUniformHorizontalEdgeInsets.hash(into:)(double a1, double a2, double a3)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_1004CFA20(v5);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_1004CFA20(v6);
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = *(void *)&a3;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  sub_1004CFA20(v7);
}

Swift::Int DOCUniformHorizontalEdgeInsets.hashValue.getter(double a1, double a2, double a3)
{
  return sub_1004CFA30();
}

BOOL sub_10034ACF4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

Swift::Int sub_10034AD24()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  sub_1004CF9E0();
  DOCUniformHorizontalEdgeInsets.hash(into:)(v1, v2, v3);
  return sub_1004CFA30();
}

void sub_10034AD88()
{
  DOCUniformHorizontalEdgeInsets.hash(into:)(*v0, v0[1], v0[2]);
}

Swift::Int sub_10034AD94()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  sub_1004CF9E0();
  DOCUniformHorizontalEdgeInsets.hash(into:)(v1, v2, v3);
  return sub_1004CFA30();
}

unint64_t sub_10034AE08()
{
  unint64_t result = qword_100635220;
  if (!qword_100635220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635220);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUniformHorizontalEdgeInsets()
{
  return &type metadata for DOCUniformHorizontalEdgeInsets;
}

Swift::Int sub_10034AE6C(double a1, double a2)
{
  sub_1004CF9E0();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_1004CFA20(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_1004CFA20(v5);
  return sub_1004CFA30();
}

BOOL sub_10034AEDC(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::Int sub_10034AF08()
{
  return sub_10034AE6C(*v0, v0[1]);
}

void sub_10034AF10()
{
  Swift::UInt64 v1 = v0[1];
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *v0;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1004CFA20(v2);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1004CFA20(v3);
}

Swift::Int sub_10034AF58()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1004CF9E0();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1004CFA20(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_1004CFA20(v4);
  return sub_1004CFA30();
}

BOOL sub_10034AFB8(double *a1, double *a2)
{
  BOOL result = 0;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6]
    && a1[7] == a2[7])
  {
    return 1;
  }
  return result;
}

BOOL sub_10034B03C(uint64_t a1, uint64_t a2)
{
  Swift::UInt64 v4 = *(void **)a1;
  id v20 = *(id *)a2;
  id v21 = v4;
  uint64_t v5 = sub_1004CDB50();
  uint64_t v7 = v6;
  if (v5 == sub_1004CDB50() && v7 == v8)
  {
    sub_100033350(&v21);
    sub_100033350(&v20);
    swift_bridgeObjectRelease_n();
    sub_1001D8984(&v20);
    sub_1001D8984(&v21);
  }
  else
  {
    char v10 = sub_1004CF890();
    sub_100033350(&v21);
    sub_100033350(&v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001D8984(&v20);
    sub_1001D8984(&v21);
    BOOL result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  Swift::UInt64 v12 = *(void **)(a1 + 16);
  id v18 = *(id *)(a2 + 16);
  id v19 = v12;
  uint64_t v13 = sub_1004CDB50();
  uint64_t v15 = v14;
  if (v13 == sub_1004CDB50() && v15 == v16)
  {
    sub_100033350(&v19);
    sub_100033350(&v18);
    swift_bridgeObjectRelease_n();
    sub_1001D8984(&v18);
    sub_1001D8984(&v19);
  }
  else
  {
    char v17 = sub_1004CF890();
    sub_100033350(&v19);
    sub_100033350(&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001D8984(&v18);
    sub_1001D8984(&v19);
    BOOL result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 24) != *(void *)(a2 + 24)
    || *(void *)(a1 + 32) != *(void *)(a2 + 32)
    || ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 42) ^ *(unsigned __int8 *)(a2 + 42)) & 1) != 0)
  {
    return 0;
  }
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 64), *(float64x2_t *)(a2 + 64)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 80) == *(double *)(a2 + 80))
  {
    return *(double *)(a1 + 88) == *(double *)(a2 + 88)
        && *(double *)(a1 + 96) == *(double *)(a2 + 96)
        && *(double *)(a1 + 104) == *(double *)(a2 + 104);
  }
  return result;
}

ValueMetadata *_s4SpecV13LayoutMetricsVMa()
{
  return &_s4SpecV13LayoutMetricsVN;
}

ValueMetadata *type metadata accessor for DOCGridItemSpacing()
{
  return &type metadata for DOCGridItemSpacing;
}

void _s4SpecVwxx(uint64_t a1)
{
  Swift::UInt64 v2 = *(void **)(a1 + 16);
}

uint64_t _s4SpecVwcp(uint64_t a1, uint64_t a2)
{
  Swift::UInt64 v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  id v8 = v3;
  id v9 = v5;
  return a1;
}

uint64_t _s4SpecVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

__n128 _s4SpecVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t _s4SpecVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  long long v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  return a1;
}

uint64_t _s4SpecVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4SpecVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4SpecVMa()
{
  return &_s4SpecVN;
}

unint64_t sub_10034B59C()
{
  unint64_t result = qword_100635228;
  if (!qword_100635228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635228);
  }
  return result;
}

unint64_t sub_10034B5F4()
{
  unint64_t result = qword_100635230;
  if (!qword_100635230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635230);
  }
  return result;
}

unint64_t sub_10034B64C()
{
  unint64_t result = qword_100635238;
  if (!qword_100635238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635238);
  }
  return result;
}

void sub_10034B6A0(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  long long v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  long long v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_100352860, v8);
  swift_release();
  swift_release();
}

Swift::Int sub_10034B774(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_100220970(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_100350000(v5);
  *a1 = v2;
  return result;
}

objc_class *sub_10034B7E0(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  long long v7 = &v3[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState];
  uint64_t v8 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v9 = sub_1004CC840();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_dismissButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_additionalTopInset] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController____lazy_storage___collectionView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_collectionViewTopConstraint;
  id v11 = objc_allocWithZone((Class)NSLayoutConstraint);
  Swift::UInt64 v12 = v3;
  *(void *)&v3[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_reloadGuardian;
  type metadata accessor for DOCUpdateGuardian();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v14 + 24) = 0;
  *(void *)&v12[v13] = v14;
  *(void *)&v12[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable] = 0;
  v12[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_isDisplayingProgress] = 0;
  uint64_t v15 = &v12[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_source];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  v12[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_style] = v6;
  swift_unknownObjectRetain();

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  id v16 = objc_msgSendSuper2(&v22, "init");
  Swift::Int result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    id v18 = result;
    v21._countAndFlagsBits = 0x8000000100514180;
    v23._object = (void *)0x8000000100514160;
    v23._countAndFlagsBits = 0xD00000000000001CLL;
    v24._countAndFlagsBits = 0x617A696C61636F4CLL;
    v24._object = (void *)0xEB00000000656C62;
    v19.super.Class isa = v18;
    v25._countAndFlagsBits = 0x73736572676F7250;
    v25._object = (void *)0xE800000000000000;
    sub_1004CBEE0(v23, v24, v19, v25, v21);

    NSString v20 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    [v16 setTitle:v20];

    swift_unknownObjectRelease();
    return (objc_class *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10034BA40()
{
  qword_100650768 = 0x4046000000000000;
}

void sub_10034BAC0()
{
  uint64_t v1 = OBJC_IVAR____TtCC14RecentsAvocado39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC14RecentsAvocado39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount];
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v0[OBJC_IVAR____TtCC14RecentsAvocado39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount] = v4;
    v8.receiver = v0;
    v8.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView();
    objc_msgSendSuper2(&v8, "layoutSubviews");
    uint64_t v5 = *(void *)&v0[v1];
    if (v5 == 1)
    {
      [v0 contentSize];
      [v0 setFittingHeight:v6];
      uint64_t v5 = *(void *)&v0[v1];
    }
    BOOL v3 = __OFSUB__(v5, 1);
    uint64_t v7 = v5 - 1;
    if (!v3)
    {
      *(void *)&v0[v1] = v7;
      return;
    }
  }
  __break(1u);
}

id sub_10034BC90(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtCC14RecentsAvocado39DOCProgressCollectionListViewController19ProgressListingView_fittingHeight;
  uint64_t v4 = qword_100626980;
  uint64_t v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  *(void *)&v5[v3] = qword_100650768;
  *(void *)&v5[OBJC_IVAR____TtCC14RecentsAvocado39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView();
  id v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_10034BD6C(uint64_t a1)
{
  return sub_10034FACC(a1, type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView);
}

id sub_10034BD84()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController____lazy_storage___collectionView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController____lazy_storage___collectionView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController____lazy_storage___collectionView];
LABEL_5:
    id v17 = v2;
    return v3;
  }
  id result = [v0 view];
  if (result)
  {
    uint64_t v5 = result;
    [result bounds];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;

    id v14 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
    id v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView()), "initWithFrame:collectionViewLayout:", v14, v7, v9, v11, v13);

    id v16 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v15;
    id v3 = v15;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10034BE88()
{
  uint64_t v1 = v0;
  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  objc_msgSendSuper2(&v39, "viewDidLoad");
  id v2 = sub_10034BD84();
  NSString v3 = sub_1004CDB10();
  [v2 setAccessibilityIdentifier:v3];

  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  id v6 = sub_10034BD84();
  [v5 addSubview:v6];

  id v7 = sub_10034BD84();
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v8 = sub_10034BD84();
  id v9 = [v8 topAnchor];

  id v10 = [v1 view];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  double v11 = v10;
  id v12 = [v10 topAnchor];

  id v13 = [v9 constraintEqualToAnchor:v12 constant:*(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_additionalTopInset]];
  uint64_t v14 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_collectionViewTopConstraint;
  id v15 = *(void **)&v1[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_collectionViewTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_collectionViewTopConstraint] = v13;

  sub_100031648(&qword_100628240);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1004E5E40;
  id v17 = sub_10034BD84();
  id v18 = [v17 leadingAnchor];

  id v19 = [v1 view];
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  NSString v20 = v19;
  id v21 = [v19 leadingAnchor];

  id v22 = [v18 constraintEqualToAnchor:v21];
  *(void *)(v16 + 32) = v22;
  id v23 = sub_10034BD84();
  id v24 = [v23 trailingAnchor];

  id v25 = [v1 view];
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v26 = v25;
  id v27 = [v25 trailingAnchor];

  id v28 = [v24 constraintEqualToAnchor:v27];
  uint64_t v29 = *(void **)&v1[v14];
  *(void *)(v16 + 40) = v28;
  *(void *)(v16 + 48) = v29;
  id v30 = v29;
  id v31 = sub_10034BD84();
  id v32 = [v31 bottomAnchor];

  id v33 = [v1 view];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = self;
    id v36 = [v34 bottomAnchor];

    id v37 = [v32 constraintEqualToAnchor:v36];
    *(void *)(v16 + 56) = v37;
    sub_1004CDE50();
    sub_1000333C8(0, (unint64_t *)&unk_100628430);
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v35 activateConstraints:isa];

    sub_10034CE50();
    sub_10034D9CC();
    sub_10034CA38();
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_10034C2CC()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100352DCC;
  *(void *)(v3 + 24) = v2;
  void v6[4] = sub_1000674E0;
  v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100125C48;
  v6[3] = &unk_1005CF688;
  id v4 = _Block_copy(v6);
  v0;
  swift_retain();
  swift_release();
  [(id)v1 performWithoutAnimation:v4];
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_10002E1C8();
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10034C470(void *a1)
{
  sub_10034E148((uint64_t)_swiftEmptyArrayStorage, 0);
  id v2 = [a1 view];
  if (v2)
  {
    id v3 = v2;
    [v2 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10034C4EC(char a1)
{
  id v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1 & 1);
  sub_10034E148((uint64_t)_swiftEmptyArrayStorage, 0);
  swift_beginAccess();
  swift_retain();
  sub_10002E1C8();
  swift_endAccess();
  swift_release();
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_source + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = *(void (**)(char *, void (*)(), uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v7(v2, sub_100352DE4, v6, ObjectType, v4);
  return swift_release_n();
}

void sub_10034C630()
{
  if (qword_100626888 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1006505F8;
  os_log_type_t v1 = sub_1004CE380();
  if (os_log_type_enabled(v0, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "Progress listing received 'didUpdate' from source", v2, 2u);
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10034E148((uint64_t)_swiftEmptyArrayStorage, 1);
  }
}

uint64_t sub_10034C784(char a1)
{
  id v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_reloadGuardian];
  swift_beginAccess();
  swift_retain();
  sub_1003B836C();
  swift_endAccess();
  if (!*(void *)(*(void *)(v4 + 16) + 16) && *(unsigned char *)(v4 + 24) == 1)
  {
    if (qword_100626888 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_1006505F8;
    os_log_type_t v6 = sub_1004CE380();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Progress listing received 'didUpdate' while appearing.  Performing now!", v7, 2u);
      swift_slowDealloc();
    }
    sub_10034E148((uint64_t)_swiftEmptyArrayStorage, 1);
  }
  return swift_release();
}

void sub_10034CA38()
{
  os_log_type_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_dismissButton;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_dismissButton];
  if (v3)
  {
    if ([v3 systemItem] == (id)24)
    {
      id v4 = [v1 editButtonItem];
      uint64_t v5 = *(void **)&v1[v2];
      id v6 = v5;
      goto LABEL_7;
    }
    id v4 = *(id *)&v1[v2];
  }
  else
  {
    id v4 = 0;
  }
  id v7 = v4;
  id v6 = [v1 editButtonItem];
  uint64_t v5 = v6;
LABEL_7:
  id v22 = v6;
  id v8 = [v1 navigationItem];
  id v9 = [v8 leftBarButtonItem];

  if (!v5)
  {
    id v10 = v9;
    if (!v9) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  id v10 = v22;
  if (!v9)
  {
LABEL_12:

    goto LABEL_13;
  }
  sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
  id v11 = v22;
  char v12 = sub_1004CEF10();

  if ((v12 & 1) == 0)
  {
LABEL_13:
    id v13 = [v1 navigationItem];
    [v13 setLeftBarButtonItem:v22];
  }
LABEL_14:
  id v14 = v4;
  id v15 = [v1 navigationItem];
  id v16 = [v15 rightBarButtonItem];

  if (v4)
  {
    id v17 = v14;
    if (v16)
    {
      sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
      id v18 = v14;
      char v19 = sub_1004CEF10();

      if (v19) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_19:

LABEL_20:
    id v20 = [v1 navigationItem];
    [v20 setRightBarButtonItem:v14];

    id v18 = v14;
LABEL_21:

    id v21 = v18;
    goto LABEL_22;
  }
  id v17 = v16;
  if (v16) {
    goto LABEL_19;
  }
  id v21 = v22;
LABEL_22:
}

uint64_t sub_10034CE50()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CD1B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CD270();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_style);
  id v11 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
  if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_style)) {
    id v11 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *v11, v2);
  sub_1004CD1D0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1004CD1A0();
  if (v10 == 1)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1004CD220();
  }
  char v12 = self;
  id v13 = [v12 clearColor];
  sub_1004CD1F0();
  id v14 = sub_10034BD84();
  id v15 = [v12 clearColor];
  [v14 setBackgroundColor:v15];

  id v16 = sub_10034BD84();
  id v17 = [self effectWithStyle:9];
  id v18 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v17];

  [v16 setBackgroundView:v18];
  sub_1000333C8(0, &qword_100635478);
  char v19 = (void *)sub_1004CEA00();
  id v20 = sub_10034BD84();
  [v20 setCollectionViewLayout:v19];

  id v21 = sub_10034BD84();
  [v21 setDelegate:v1];

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10034D1BC()
{
  sub_1000333C8(0, (unint64_t *)&unk_10062DE60);
  Class isa = sub_1004CDE10().super.isa;
  uint64_t v1 = self;
  id v2 = [v1 configurationWithActions:isa];

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable);
    id v6 = v5;

    if (!v5)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      return;
    }
    sub_1004CD040();
    if (v29)
    {
      sub_100049660((uint64_t)v31, (uint64_t)v32);
      sub_100049B74((uint64_t)aBlock, &qword_100635420);
      sub_100033120(v32, (uint64_t)v33);
      uint64_t v7 = v34;
      uint64_t v8 = v35;
      sub_100032FD8(v33, v34);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(aBlock, v7, v8);
      if (qword_100626988 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
      sub_10010F698(v9, (uint64_t)qword_100635240);
      char v10 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_100033194((uint64_t)aBlock);
      if ((v10 & 1) != 0
        || (uint64_t v11 = v34,
            uint64_t v12 = v35,
            sub_100032FD8(v33, v34),
            id v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12),
            LODWORD(v11) = [v13 isCancellable],
            v13,
            !v11))
      {

        sub_100039184((uint64_t)v33);
        return;
      }
      id v14 = (objc_class *)(id)_DocumentManagerBundle();
      if (v14)
      {
        id v15 = v14;
        v27._countAndFlagsBits = 0x800000010052D7C0;
        v36._countAndFlagsBits = 0x6C65636E6143;
        v36._object = (void *)0xE600000000000000;
        v37._countAndFlagsBits = 0x617A696C61636F4CLL;
        v37._object = (void *)0xEB00000000656C62;
        v16.super.Class isa = v15;
        v38._countAndFlagsBits = 0;
        v38._object = (void *)0xE000000000000000;
        sub_1004CBEE0(v36, v37, v16, v38, v27);

        uint64_t v17 = swift_allocObject();
        swift_beginAccess();
        id v18 = (void *)swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectWeakInit();

        sub_100049660((uint64_t)v33, (uint64_t)v32);
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v17;
        sub_100033120(v32, v19 + 24);
        swift_retain();
        NSString v20 = sub_1004CDB10();
        swift_bridgeObjectRelease();
        id v30 = sub_10035281C;
        v31[0] = v19;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10034B6A0;
        uint64_t v29 = &unk_1005CF5E8;
        id v21 = _Block_copy(aBlock);
        id v22 = [self contextualActionWithStyle:1 title:v20 handler:v21];

        _Block_release(v21);
        swift_release();
        swift_release();
        sub_100031648(&qword_100628240);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1004E5710;
        *(void *)(v23 + 32) = v22;
        aBlock[0] = v23;
        sub_1004CDE50();
        id v24 = v22;
        Class v25 = sub_1004CDE10().super.isa;
        swift_bridgeObjectRelease();
        id v26 = [v1 configurationWithActions:v25];

        [v26 setPerformsFirstActionWithFullSwipe:0];
        sub_100039184((uint64_t)v33);
        return;
      }
      goto LABEL_14;
    }
    sub_100049B74((uint64_t)aBlock, (uint64_t *)&unk_100628860);
  }
}

uint64_t sub_10034D670(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a3();
  }
  char v10 = (void *)Strong;
  swift_retain();
  sub_100352878(a6, (uint64_t)v10, (void (*)(uint64_t))a3, a4);

  return swift_release();
}

void sub_10034D704(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1004CCFD0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v27 = (char *)&v24 - v8;
  uint64_t v9 = sub_1004CCFE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (void *)Strong;
    id v26 = v7;
    id v15 = sub_10034BD84();
    NSBundle v16 = (char *)[v15 numberOfItemsInSection:sub_1004CAF40()];

    if (__OFSUB__(v16, 1))
    {
      __break(1u);
    }
    else
    {
      id v24 = v16 - 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
      uint64_t v17 = sub_1004CAF10();
      id v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
      unsigned int v19 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      uint64_t v25 = v9;
      uint64_t v20 = v3;
      unsigned int v21 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      if (v17) {
        uint64_t v22 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      }
      else {
        uint64_t v22 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      }
      v18(v27, v22, v20);
      sub_1004CCF60();
      if ((char *)sub_1004CAF10() == v24) {
        uint64_t v23 = v19;
      }
      else {
        uint64_t v23 = v21;
      }
      v18(v26, v23, v20);
      sub_1004CCF90();

      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v28, v12, v25);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v28, a1, v9);
  }
}

id sub_10034D9CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100031648(&qword_100635460);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  id v31 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v30 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v30 - v10;
  __chkstk_darwin(v9);
  id v13 = (char *)v30 - v12;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DOCProgressCollectionListCell(0);
  sub_100031648(&qword_10062D9F0);
  sub_1004CE470();
  if (qword_100626988 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  uint64_t v15 = sub_10010F698(v14, (uint64_t)qword_100635240);
  sub_1000335A8(v15, (uint64_t)v33, (uint64_t *)&unk_100628860);
  sub_1004CE470();
  v30[1] = sub_10034BD84();
  sub_1000335A8((uint64_t)v33, (uint64_t)v32, (uint64_t *)&unk_100628860);
  NSBundle v16 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v16(v8, v11, v2);
  uint64_t v17 = v31;
  v16(v31, v13, v2);
  uint64_t v18 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = (v18 + 96) & ~v18;
  uint64_t v20 = (v4 + v18 + v19) & ~v18;
  uint64_t v21 = swift_allocObject();
  sub_1003526A8((uint64_t)v32, v21 + 16);
  v30[0] = v13;
  uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v22(v21 + v19, v8, v2);
  v22(v21 + v20, v17, v2);
  id v23 = objc_allocWithZone((Class)sub_100031648(&qword_100635468));
  uint64_t v24 = sub_1004CD010();
  uint64_t v25 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable;
  id v26 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable);
  *(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable) = v24;

  id result = sub_10034BD84();
  if (*(void *)(v1 + v25))
  {
    uint64_t v28 = result;
    objc_msgSend(result, "setDataSource:");

    uint64_t v29 = *(void (**)(char *, uint64_t))(v3 + 8);
    v29(v11, v2);
    sub_100049B74((uint64_t)v33, (uint64_t *)&unk_100628860);
    return (id)((uint64_t (*)(void, uint64_t))v29)(v30[0], v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10034DD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1004CC840();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    sub_100049660(a3, (uint64_t)v14);
    uint64_t v11 = a1 + qword_100650648;
    swift_beginAccess();
    sub_1000335A8(v11, (uint64_t)v13, &qword_100635470);
    swift_beginAccess();
    sub_10024265C((uint64_t)v14, v11);
    swift_endAccess();
    sub_10023CE30((uint64_t)v13);
    sub_100049B74((uint64_t)v14, &qword_100635470);
    sub_100049B74((uint64_t)v13, &qword_100635470);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, (uint64_t)v10+ OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState, v5);
    sub_10023CC18(v8);
  }
}

id sub_10034DF14(unsigned char *a1)
{
  a1[qword_100650650] = 1;
  return [a1 setNeedsUpdateConfiguration];
}

uint64_t sub_10034DF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000335A8(a3, (uint64_t)v17, &qword_100635420);
  sub_1000335A8((uint64_t)v17, (uint64_t)v10, (uint64_t *)&unk_100628860);
  sub_1000335A8(a4, (uint64_t)&v12, (uint64_t *)&unk_100628860);
  if (!v11)
  {
    sub_100049B74((uint64_t)v17, (uint64_t *)&unk_100628860);
    if (!*((void *)&v13 + 1))
    {
      sub_100049B74((uint64_t)v10, (uint64_t *)&unk_100628860);
      goto LABEL_8;
    }
LABEL_7:
    sub_100049B74((uint64_t)v10, &qword_100635458);
    goto LABEL_8;
  }
  sub_1000335A8((uint64_t)v10, (uint64_t)v9, (uint64_t *)&unk_100628860);
  if (!*((void *)&v13 + 1))
  {
    sub_100049B74((uint64_t)v17, (uint64_t *)&unk_100628860);
    sub_100049B74((uint64_t)v9, &qword_100635420);
    goto LABEL_7;
  }
  v8[2] = v14;
  v8[3] = v15;
  _OWORD v8[4] = v16;
  v8[0] = v12;
  v8[1] = v13;
  _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
  sub_100049B74((uint64_t)v8, &qword_100635420);
  sub_100049B74((uint64_t)v17, (uint64_t *)&unk_100628860);
  sub_100049B74((uint64_t)v9, &qword_100635420);
  sub_100049B74((uint64_t)v10, (uint64_t *)&unk_100628860);
LABEL_8:
  sub_100049660(a3 + 40, (uint64_t)v10);
  type metadata accessor for DOCProgressCollectionListCell(0);
  sub_100031648(&qword_10062D9F0);
  uint64_t v6 = sub_1004CE480();
  sub_100049B74((uint64_t)v10, &qword_100635470);
  return v6;
}

uint64_t sub_10034E148(uint64_t a1, int a2)
{
  int v121 = a2;
  *(void *)&long long v125 = a1;
  uint64_t v3 = sub_1004CD860();
  uint64_t v116 = *(void *)(v3 - 8);
  uint64_t v117 = v3;
  __chkstk_darwin(v3);
  Swift::String v114 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1004CD8C0();
  uint64_t v113 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  Swift::String v118 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CD900();
  uint64_t v122 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v101 - v10;
  uint64_t v12 = sub_100031648(&qword_100635410);
  uint64_t v123 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  long long v15 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v101 - v16;
  uint64_t v18 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_reloadGuardian;
  uint64_t v19 = v2;
  uint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_reloadGuardian];
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v20 + 16) + 16))
  {
    LOBYTE(v22) = 1;
LABEL_3:
    *(unsigned char *)(v20 + 24) = v22;
    return result;
  }
  Swift::String v111 = v17;
  Swift::String v112 = v11;
  uint64_t v124 = (uint64_t)v9;
  uint64_t v108 = v18;
  uint64_t v119 = v12;
  Swift::String v120 = v15;
  uint64_t v110 = v6;
  uint64_t v23 = *(void *)&v19[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_source + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23);
  int64_t v26 = *(void *)(v25 + 16);
  Swift::String v27 = _swiftEmptyArrayStorage;
  uint64_t v28 = v19;
  if (v26)
  {
    Swift::String v126 = _swiftEmptyArrayStorage;
    sub_100188394(0, v26, 0);
    uint64_t v29 = v25 + 32;
    Swift::String v27 = v126;
    do
    {
      sub_100049660(v29, (uint64_t)v132);
      uint64_t v30 = v133;
      uint64_t v31 = v134;
      sub_100032FD8(v132, v133);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v31 + 8))(&v127, v30, v31);
      sub_100039184((uint64_t)v132);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100188394(0, v27[2] + 1, 1);
        Swift::String v27 = v126;
      }
      unint64_t v33 = v27[2];
      unint64_t v32 = v27[3];
      if (v33 >= v32 >> 1)
      {
        sub_100188394(v32 > 1, v33 + 1, 1);
        Swift::String v27 = v126;
      }
      v27[2] = v33 + 1;
      uint64_t v34 = &v27[5 * v33];
      long long v35 = v127;
      long long v36 = v128;
      v34[8] = v129;
      *((_OWORD *)v34 + 2) = v35;
      *((_OWORD *)v34 + 3) = v36;
      v29 += 40;
      --v26;
    }
    while (v26);
    uint64_t v28 = v19;
  }
  Swift::String v37 = sub_10004B048(v125);
  sub_100031648((uint64_t *)&unk_10062DBB0);
  uint64_t inited = swift_initStackObject();
  long long v125 = xmmword_1004E12A0;
  *(_OWORD *)(inited + 16) = xmmword_1004E12A0;
  uint64_t v39 = v119;
  uint64_t v40 = v123;
  uint64_t v41 = v111;
  if (qword_100626988 != -1) {
    swift_once();
  }
  uint64_t v109 = v25;
  uint64_t v42 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  uint64_t v43 = sub_10010F698(v42, (uint64_t)qword_100635240);
  sub_1000335A8(v43, inited + 32, (uint64_t *)&unk_100628860);
  *(void *)&long long v127 = v37;
  sub_100108F8C(inited);
  uint64_t v44 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable;
  uint64_t v45 = *(void **)&v28[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable];
  if (!v45)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v102 = v43;
  uint64_t v46 = v127;
  id v47 = v45;
  sub_1004CD110();

  uint64_t v48 = sub_1004CCF00();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v49 = v40 + 8;
  UIMenu_optional v105 = v50;
  v50(v41, v39);
  uint64_t v51 = sub_100352004(v48, (uint64_t)v27, v46);
  Swift::String v111 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v107 = v44;
  if (!*(void *)&v28[v44])
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v123 = v49;
  UIMenu_optional v106 = v28;
  sub_100031648(&qword_100635418);
  sub_100031648(&qword_100635420);
  sub_10006102C(&qword_100635428, &qword_100635418);
  sub_10006102C(&qword_100635430, &qword_100635420);
  sub_1004CCF50();
  sub_100031648((uint64_t *)&unk_100635438);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = v125;
  *(void *)&long long v127 = 0x746365536E69616DLL;
  *((void *)&v127 + 1) = 0xEB000000006E6F69;
  sub_1004CF480();
  *(void *)(v52 + 72) = 0x746365536E69616DLL;
  *(void *)(v52 + 80) = 0xEB000000006E6F69;
  v53._rawValue = (void *)v52;
  sub_1004CCED0(v53);
  swift_bridgeObjectRelease();
  int64_t v54 = v51[2];
  uint64_t v55 = _swiftEmptyArrayStorage;
  int64_t v103 = v54;
  UIImage_optional v104 = v51;
  if (v54)
  {
    Swift::String v126 = _swiftEmptyArrayStorage;
    sub_1001883B4(0, v54, 0);
    uint64_t v56 = (uint64_t)(v51 + 4);
    uint64_t v55 = v126;
    do
    {
      sub_1000335A8(v56, (uint64_t)&v127, &qword_100635420);
      sub_100049660((uint64_t)&v129 + 8, (uint64_t)v132);
      sub_100049B74((uint64_t)&v127, &qword_100635420);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001883B4(0, v55[2] + 1, 1);
        uint64_t v55 = v126;
      }
      unint64_t v58 = v55[2];
      unint64_t v57 = v55[3];
      if (v58 >= v57 >> 1) {
        sub_1001883B4(v57 > 1, v58 + 1, 1);
      }
      uint64_t v59 = v133;
      uint64_t v60 = v134;
      uint64_t v61 = sub_1000C8128((uint64_t)v132, v133);
      __chkstk_darwin(v61);
      Swift::String v63 = (char *)&v101 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v64 + 16))(v63);
      sub_1000C7F38(v58, (uint64_t)v63, (uint64_t *)&v126, v59, v60);
      sub_100039184((uint64_t)v132);
      uint64_t v55 = v126;
      v56 += 80;
      --v54;
      uint64_t v65 = v124;
    }
    while (v54);
  }
  else
  {
    uint64_t v65 = v124;
  }
  *(void *)&long long v127 = v109;
  sub_100108F6C((uint64_t)v55);
  uint64_t v66 = (char *)v127;
  swift_bridgeObjectRetain();
  uint64_t v67 = v111;
  sub_10034B774((void **)&v127);
  uint64_t v68 = v122;
  int v69 = v112;
  if (v67) {
    goto LABEL_47;
  }
  uint64_t v70 = *(void *)(v127 + 16);
  if (v70)
  {
    Swift::String v111 = v66;
    uint64_t v71 = (void *)(v127 + 32);
    uint64_t v109 = v127;
    swift_retain();
    do
    {
      sub_100031648((uint64_t *)&unk_10062DBA0);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = v125;
      uint64_t v73 = v71[3];
      uint64_t v74 = v71[4];
      sub_100032FD8(v71, v73);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v74);
      sub_100049660((uint64_t)v71, v72 + 72);
      *(void *)&long long v130 = 0;
      long long v128 = 0u;
      long long v129 = 0u;
      long long v127 = 0u;
      sub_1004CCE90();
      swift_bridgeObjectRelease();
      sub_100049B74((uint64_t)&v127, (uint64_t *)&unk_100635448);
      v71 += 5;
      --v70;
    }
    while (v70);
    swift_release();
    uint64_t v68 = v122;
    uint64_t v66 = v111;
    int v69 = v112;
    uint64_t v65 = v124;
  }
  swift_release();
  uint64_t v75 = *((void *)v66 + 2);
  uint64_t v76 = v106;
  uint64_t v77 = v110;
  if (!v75)
  {
    sub_100031648((uint64_t *)&unk_10062DBA0);
    uint64_t v78 = (_OWORD *)swift_allocObject();
    v78[1] = v125;
    sub_1000335A8(v102, (uint64_t)&v127, (uint64_t *)&unk_100628860);
    if (!*((void *)&v128 + 1))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    long long v79 = v130;
    v78[4] = v129;
    v78[5] = v79;
    v78[6] = v131;
    long long v80 = v128;
    v78[2] = v127;
    v78[3] = v80;
    *(void *)&long long v130 = 0;
    long long v128 = 0u;
    long long v129 = 0u;
    long long v127 = 0u;
    sub_1004CCE90();
    swift_bridgeObjectRelease();
    sub_100049B74((uint64_t)&v127, (uint64_t *)&unk_100635448);
  }
  uint64_t v81 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_isDisplayingProgress;
  int v82 = v76[OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_isDisplayingProgress];
  swift_bridgeObjectRelease();
  int v83 = v75 != 0;
  v76[v81] = v83;
  uint64_t v84 = v118;
  if (v83 != v82)
  {
    id v85 = [v76 view];
    if (!v85)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    Swift::String v86 = v85;
    id v87 = [v85 window];

    int v121 = (v87 != 0) & v121;
  }
  Swift::String v88 = *(void **)&v76[v107];
  if (!v88)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v89 = v88;
  Swift::String v90 = v120;
  sub_1004CD0E0();

  if (v103)
  {
    sub_1000333C8(0, (unint64_t *)&qword_100626B70);
    uint64_t v124 = sub_1004CE630();
    sub_1004CD8E0();
    sub_1004CD970();
    Swift::String v91 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    uint64_t v122 = v68 + 8;
    *(void *)&long long v125 = v91;
    v91(v65, v77);
    uint64_t v92 = swift_allocObject();
    Swift::String v93 = v104;
    *(void *)(v92 + 16) = v76;
    *(void *)(v92 + 24) = v93;
    *(void *)&long long v129 = sub_1003524B4;
    *((void *)&v129 + 1) = v92;
    *(void *)&long long v127 = _NSConcreteStackBlock;
    *((void *)&v127 + 1) = 1107296256;
    *(void *)&long long v128 = sub_1003A422C;
    *((void *)&v128 + 1) = &unk_1005CF548;
    Swift::String v94 = _Block_copy(&v127);
    Swift::String v95 = v76;
    swift_release();
    sub_1004CD880();
    *(void *)&long long v127 = _swiftEmptyArrayStorage;
    sub_100353D34((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10006102C((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    uint64_t v96 = v77;
    Swift::String v97 = v114;
    uint64_t v98 = v117;
    sub_1004CF330();
    Swift::String v99 = (void *)v124;
    sub_1004CE600();
    _Block_release(v94);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v97, v98);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v84, v115);
    uint64_t v100 = v96;
    Swift::String v90 = v120;
    ((void (*)(char *, uint64_t))v125)(v69, v100);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v105(v90, v119);
  uint64_t v20 = *(void *)&v76[v108];
  uint64_t result = swift_beginAccess();
  uint64_t v22 = *(void *)(*(void *)(v20 + 16) + 16);
  if (!v22) {
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_10034EE84()
{
  uint64_t v0 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  sub_1001E1E20(v0, qword_100635240);
  uint64_t v1 = (_OWORD *)sub_10010F698(v0, (uint64_t)qword_100635240);
  return sub_10034EED0(v1);
}

uint64_t sub_10034EED0@<X0>(_OWORD *a1@<X8>)
{
  a1[4] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  strcpy((char *)v6, "NullProgress");
  BYTE5(v6[1]) = 0;
  HIWORD(v6[1]) = -5120;
  sub_1004CF480();
  uint64_t v2 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  sub_1004CACC0();
  uint64_t v3 = *(int *)(v2 + 28);
  *(void *)((char *)a1 + v3) = objc_msgSend(objc_allocWithZone((Class)NSProgress), "init", v6[0], v6[1]);
  sub_1004CB400();
  type metadata accessor for DOCProgressProvidingOperationIconType();
  swift_storeEnumTagMultiPayload();
  v7[3] = v2;
  _OWORD v7[4] = (uint64_t)&off_1005CF6B0;
  uint64_t v4 = sub_10005AE54(v7);
  sub_100353D7C((uint64_t)a1, (uint64_t)v4, type metadata accessor for DOCProgressCollectionListViewController.NullProgress);
  sub_100033138((uint64_t)(v4 + 10), (uint64_t)v6);
  return sub_1003524F8((uint64_t)v6, (uint64_t)a1);
}

Swift::Int sub_10034F000()
{
  uint64_t v1 = sub_1004CB5C0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CF9E0();
  sub_1000335A8(v0, (uint64_t)&v12, (uint64_t *)&unk_100628860);
  if (*((void *)&v13 + 1))
  {
    _OWORD v11[2] = v14;
    v11[3] = v15;
    v11[4] = v16;
    v11[1] = v13;
    v11[0] = v12;
    sub_1004CFA00(1u);
    _s14RecentsAvocado21DOCDiffableIdentifierV4hash4intoys6HasherVz_tF_0();
    sub_100049B74((uint64_t)v11, &qword_100635420);
  }
  else
  {
    sub_1004CFA00(0);
  }
  _s14RecentsAvocado21DOCDiffableIdentifierV4hash4intoys6HasherVz_tF_0();
  uint64_t v8 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  sub_1004CAD80();
  sub_100353D34(&qword_100635528, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1004CDA20();
  sub_1004CEF20();
  sub_100353D7C(v0 + *(int *)(v8 + 32), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004CF9F0(2uLL);
      sub_1004CDC80();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004CF9F0(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1004CF9F0(1uLL);
    sub_100353D34(&qword_100627310, (void (*)(uint64_t))&type metadata accessor for UTType);
    sub_1004CDA20();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1004CFA30();
}

uint64_t sub_10034F330@<X0>(uint64_t a1@<X8>)
{
  return sub_100033138(v1 + 80, a1);
}

id sub_10034F33C(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_10034F348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100353D7C(v2 + *(int *)(a1 + 32), a2, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
}

void sub_10034F384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1004CB5C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000335A8(v2, (uint64_t)&v13, (uint64_t *)&unk_100628860);
  if (*((void *)&v14 + 1))
  {
    v12[2] = v15;
    v12[3] = v16;
    v12[4] = v17;
    v12[0] = v13;
    v12[1] = v14;
    sub_1004CFA00(1u);
    _s14RecentsAvocado21DOCDiffableIdentifierV4hash4intoys6HasherVz_tF_0();
    sub_100049B74((uint64_t)v12, &qword_100635420);
  }
  else
  {
    sub_1004CFA00(0);
  }
  _s14RecentsAvocado21DOCDiffableIdentifierV4hash4intoys6HasherVz_tF_0();
  sub_1004CAD80();
  sub_100353D34(&qword_100635528, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1004CDA20();
  sub_1004CEF20();
  sub_100353D7C(v2 + *(int *)(a2 + 32), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004CF9F0(2uLL);
      sub_1004CDC80();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004CF9F0(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1004CF9F0(1uLL);
    sub_100353D34(&qword_100627310, (void (*)(uint64_t))&type metadata accessor for UTType);
    sub_1004CDA20();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int sub_10034F684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1004CB5C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CF9E0();
  sub_1000335A8(v2, (uint64_t)&v14, (uint64_t *)&unk_100628860);
  if (*((void *)&v15 + 1))
  {
    v13[2] = v16;
    v13[3] = v17;
    v13[4] = v18;
    v13[1] = v15;
    v13[0] = v14;
    sub_1004CFA00(1u);
    _s14RecentsAvocado21DOCDiffableIdentifierV4hash4intoys6HasherVz_tF_0();
    sub_100049B74((uint64_t)v13, &qword_100635420);
  }
  else
  {
    sub_1004CFA00(0);
  }
  _s14RecentsAvocado21DOCDiffableIdentifierV4hash4intoys6HasherVz_tF_0();
  sub_1004CAD80();
  sub_100353D34(&qword_100635528, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1004CDA20();
  sub_1004CEF20();
  sub_100353D7C(v2 + *(int *)(a2 + 32), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004CF9F0(2uLL);
      sub_1004CDC80();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004CF9F0(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1004CF9F0(1uLL);
    sub_100353D34(&qword_100627310, (void (*)(uint64_t))&type metadata accessor for UTType);
    sub_1004CDA20();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_1004CFA30();
}

void sub_10034F9E4()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState;
  uint64_t v2 = sub_1004CC840();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController____lazy_storage___collectionView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_collectionViewTopConstraint));
  swift_release();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable);
}

id sub_10034FAB0()
{
  return sub_10034FACC(0, (uint64_t (*)(void))type metadata accessor for DOCProgressCollectionListViewController);
}

id sub_10034FACC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_10034FBD4()
{
  return type metadata accessor for DOCProgressCollectionListViewController(0);
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_1006352B8);
}

uint64_t sub_10034FBFC()
{
  uint64_t result = sub_1004CC840();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView()
{
  return self;
}

uint64_t sub_10034FCFC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCUpdateGuardian()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCUpdateGuardian.UpdatesDisabledReason(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10034FDF4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUpdateGuardian.UpdatesDisabledReason()
{
  return &type metadata for DOCUpdateGuardian.UpdatesDisabledReason;
}

unsigned char *storeEnumTagSinglePayload for DOCProgressCollectionListViewController.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10034FEF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressCollectionListViewController.Style()
{
  return &type metadata for DOCProgressCollectionListViewController.Style;
}

unint64_t sub_10034FF34()
{
  unint64_t result = qword_100635400;
  if (!qword_100635400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635400);
  }
  return result;
}

unint64_t sub_10034FF8C()
{
  unint64_t result = qword_100635408;
  if (!qword_100635408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635408);
  }
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController.NullProgress(uint64_t a1)
{
  return sub_100069444(a1, qword_1006354D8);
}

Swift::Int sub_100350000(uint64_t *a1)
{
  uint64_t v171 = sub_1004CAD80();
  uint64_t v2 = *(void *)(v171 - 8);
  uint64_t v3 = __chkstk_darwin(v171);
  v170 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v173 = (char *)&v160 - v5;
  v191 = a1;
  Swift::Int v6 = a1[1];
  Swift::Int result = sub_1004CF830(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_149;
    }
    if (v6) {
      return sub_10035103C(0, v6, 1, v191);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_157;
  }
  Swift::Int v160 = result;
  if (v6 < 2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v166 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      long long v13 = (char *)_swiftEmptyArrayStorage;
LABEL_113:
      unint64_t v167 = v10;
      if (v15 >= 2)
      {
        uint64_t v152 = *v191;
        do
        {
          unint64_t v153 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_144;
          }
          if (!v152) {
            goto LABEL_156;
          }
          uint64_t v154 = v13;
          uint64_t v155 = *(void *)&v13[16 * v153 + 32];
          uint64_t v156 = *(void *)&v13[16 * v15 + 24];
          uint64_t v157 = v168;
          sub_1003514CC((char *)(v152 + 40 * v155), (char *)(v152 + 40 * *(void *)&v13[16 * v15 + 16]), (char *)(v152 + 40 * v156), v166);
          if (v157) {
            goto LABEL_125;
          }
          if (v156 < v155) {
            goto LABEL_145;
          }
          uint64_t v168 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v154 = sub_100220894((uint64_t)v154);
          }
          if (v153 >= *((void *)v154 + 2)) {
            goto LABEL_146;
          }
          id v158 = &v154[16 * v153 + 32];
          *(void *)id v158 = v155;
          *((void *)v158 + 1) = v156;
          unint64_t v159 = *((void *)v154 + 2);
          if (v15 > v159) {
            goto LABEL_147;
          }
          memmove(&v154[16 * v15 + 16], &v154[16 * v15 + 32], 16 * (v159 - v15));
          long long v13 = v154;
          *((void *)v154 + 2) = v159 - 1;
          unint64_t v15 = v159 - 1;
        }
        while (v159 > 2);
      }
      swift_bridgeObjectRelease();
      v167[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_100031648(&qword_10062D9F0);
    uint64_t v10 = (void *)sub_1004CDF30();
    void v10[2] = v9;
    uint64_t v166 = (char *)(v10 + 4);
  }
  unint64_t v167 = v10;
  Swift::Int v11 = 0;
  long long v12 = (void (**)(char *, uint64_t))(v2 + 8);
  long long v13 = (char *)_swiftEmptyArrayStorage;
  long long v14 = v173;
  uint64_t v169 = (void (**)(char *, uint64_t))(v2 + 8);
  while (1)
  {
    uint64_t v16 = v11++;
    v163 = v13;
    uint64_t v165 = v16;
    if (v11 >= v6) {
      goto LABEL_42;
    }
    v174 = (void *)v6;
    uint64_t v17 = *v191;
    uint64_t v18 = v16;
    sub_100049660(*v191 + 40 * v11, (uint64_t)&v188);
    uint64_t v161 = v17;
    sub_100049660(v17 + 40 * v18, (uint64_t)&v185);
    uint64_t v19 = v189;
    uint64_t v20 = v190;
    uint64_t v21 = sub_100032FD8(&v188, v189);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 16);
    v179 = (void (*)(uint64_t, void))v21;
    uint64_t v182 = v19;
    uint64_t v181 = v20;
    int v180 = v22;
    v22(v19, v20);
    uint64_t v23 = v186;
    uint64_t v24 = v187;
    uint64_t v25 = sub_100032FD8(&v185, v186);
    int64_t v26 = *(void (**)(uint64_t, void))(v24 + 16);
    Swift::String v27 = v170;
    unint64_t v176 = (void (*)(void, uint64_t))v25;
    uint64_t v178 = (void (*)(void, void))v24;
    unint64_t v177 = v26;
    v26(v23, v24);
    char v28 = sub_1004CAD00();
    uint64_t v29 = *v12;
    uint64_t v30 = v171;
    (*v12)(v27, v171);
    v29(v14, v30);
    if (v28)
    {
      BOOL v31 = 1;
LABEL_21:
      LODWORD(v164) = v31;
      goto LABEL_22;
    }
    v180(v182, v181);
    v177(v23, v178);
    char v32 = sub_1004CACF0();
    v29(v27, v30);
    v29(v14, v30);
    if ((v32 & 1) == 0)
    {
      uint64_t v33 = v189;
      uint64_t v34 = v190;
      sub_100032FD8(&v188, v189);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 8))(v184, v33, v34);
      uint64_t v35 = sub_1004CF470();
      sub_100033194((uint64_t)v184);
      uint64_t v36 = v186;
      uint64_t v37 = v187;
      sub_100032FD8(&v185, v186);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v37 + 8))(v183, v36, v37);
      uint64_t v38 = sub_1004CF470();
      sub_100033194((uint64_t)v183);
      BOOL v31 = v35 < v38;
      goto LABEL_21;
    }
    LODWORD(v164) = 0;
LABEL_22:
    Swift::Int v6 = (Swift::Int)v174;
    sub_100039184((uint64_t)&v185);
    sub_100039184((uint64_t)&v188);
    uint64_t v16 = v165;
    Swift::Int v11 = v165 + 2;
    if (v165 + 2 < v6)
    {
      id v162 = v29;
      uint64_t v39 = v161 + 40 * v165 + 40;
      while (1)
      {
        Swift::Int v172 = v11;
        sub_100049660(v39 + 40, (uint64_t)&v188);
        uint64_t v182 = v39;
        sub_100049660(v39, (uint64_t)&v185);
        uint64_t v40 = v189;
        uint64_t v41 = v190;
        uint64_t v42 = sub_100032FD8(&v188, v189);
        uint64_t v43 = *(void (**)(uint64_t, void))(v41 + 16);
        uint64_t v44 = v173;
        uint64_t v178 = (void (*)(void, void))v42;
        uint64_t v181 = v40;
        int v180 = (void (*)(uint64_t, uint64_t))v41;
        v179 = v43;
        v43(v40, v41);
        uint64_t v45 = v186;
        uint64_t v46 = v187;
        id v47 = sub_100032FD8(&v185, v186);
        uint64_t v48 = *(void (**)(void, uint64_t))(v46 + 16);
        uint64_t v49 = v170;
        uint64_t v175 = (void (*)(void, uint64_t))v47;
        unint64_t v177 = (void (*)(uint64_t, void))v45;
        unint64_t v176 = v48;
        v48(v45, v46);
        char v50 = sub_1004CAD00();
        uint64_t v51 = v171;
        uint64_t v52 = v162;
        v162(v49, v171);
        v52(v44, v51);
        if (v50)
        {
          int v53 = 1;
        }
        else
        {
          v179(v181, v180);
          v176(v177, v46);
          char v54 = sub_1004CACF0();
          v52(v49, v51);
          v52(v44, v51);
          if (v54)
          {
            int v53 = 0;
          }
          else
          {
            uint64_t v55 = v189;
            uint64_t v56 = v190;
            sub_100032FD8(&v188, v189);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v56 + 8))(v184, v55, v56);
            uint64_t v57 = sub_1004CF470();
            sub_100033194((uint64_t)v184);
            uint64_t v58 = v186;
            uint64_t v59 = v187;
            sub_100032FD8(&v185, v186);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v59 + 8))(v183, v58, v59);
            uint64_t v60 = sub_1004CF470();
            sub_100033194((uint64_t)v183);
            int v53 = v57 < v60;
          }
        }
        Swift::Int v11 = v172;
        Swift::Int v6 = (Swift::Int)v174;
        sub_100039184((uint64_t)&v185);
        sub_100039184((uint64_t)&v188);
        if (v164 != v53) {
          break;
        }
        ++v11;
        uint64_t v39 = v182 + 40;
        if (v6 == v11)
        {
          Swift::Int v11 = v6;
          break;
        }
      }
      uint64_t v16 = v165;
    }
    if (v164)
    {
      if (v11 < v16) {
        goto LABEL_150;
      }
      if (v16 < v11)
      {
        uint64_t v61 = 40 * v11 - 40;
        uint64_t v62 = 40 * v16;
        Swift::Int v63 = v11;
        Swift::Int v64 = v16;
        do
        {
          if (v64 != --v63)
          {
            if (!v161) {
              goto LABEL_155;
            }
            uint64_t v65 = v161 + v62;
            uint64_t v66 = v161 + v61;
            sub_100033120((long long *)(v161 + v62), (uint64_t)&v188);
            uint64_t v67 = *(void *)(v66 + 32);
            long long v68 = *(_OWORD *)(v66 + 16);
            *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
            *(_OWORD *)(v65 + 16) = v68;
            *(void *)(v65 + 32) = v67;
            sub_100033120(&v188, v66);
            uint64_t v16 = v165;
          }
          ++v64;
          v61 -= 40;
          v62 += 40;
        }
        while (v64 < v63);
      }
    }
LABEL_42:
    if (v11 >= v6) {
      goto LABEL_63;
    }
    if (__OFSUB__(v11, v16)) {
      goto LABEL_148;
    }
    if (v11 - v16 >= v160) {
      goto LABEL_63;
    }
    if (__OFADD__(v16, v160)) {
      goto LABEL_151;
    }
    int v69 = (void (*)(char *, uint64_t))(v16 + v160 >= v6 ? v6 : v16 + v160);
    if ((uint64_t)v69 < v16) {
      break;
    }
    if ((void (*)(char *, uint64_t))v11 == v69) {
      goto LABEL_63;
    }
    uint64_t v70 = 40 * v11 - 40;
    id v162 = v69;
    while (2)
    {
      uint64_t v164 = v70;
      uint64_t v72 = v70;
      Swift::Int v172 = v11;
      while (1)
      {
        uint64_t v182 = v16;
        uint64_t v73 = *v191;
        uint64_t v181 = v72;
        uint64_t v74 = v73 + v72;
        sub_100049660(v73 + v72 + 40, (uint64_t)&v188);
        sub_100049660(v74, (uint64_t)&v185);
        uint64_t v75 = v189;
        uint64_t v76 = v190;
        uint64_t v77 = sub_100032FD8(&v188, v189);
        uint64_t v78 = *(void (**)(void, void))(v76 + 16);
        long long v79 = v173;
        unint64_t v177 = (void (*)(uint64_t, void))v77;
        int v180 = (void (*)(uint64_t, uint64_t))v75;
        v179 = (void (*)(uint64_t, void))v76;
        uint64_t v178 = v78;
        v78(v75, v76);
        uint64_t v80 = v186;
        uint64_t v81 = v187;
        int v82 = sub_100032FD8(&v185, v186);
        int v83 = *(void (**)(void, uint64_t))(v81 + 16);
        uint64_t v84 = v170;
        v174 = v82;
        unint64_t v176 = (void (*)(void, uint64_t))v80;
        uint64_t v175 = v83;
        v83(v80, v81);
        char v85 = sub_1004CAD00();
        Swift::String v86 = *v169;
        uint64_t v87 = v171;
        (*v169)(v84, v171);
        v86(v79, v87);
        if ((v85 & 1) == 0) {
          break;
        }
        sub_100039184((uint64_t)&v185);
        sub_100039184((uint64_t)&v188);
        Swift::Int v71 = v172;
LABEL_59:
        uint64_t v95 = *v191;
        if (!*v191) {
          goto LABEL_153;
        }
        uint64_t v96 = v181;
        uint64_t v97 = v95 + v181;
        sub_100033120((long long *)(v95 + v181 + 40), (uint64_t)&v188);
        long long v98 = *(_OWORD *)(v97 + 16);
        *(_OWORD *)(v97 + 40) = *(_OWORD *)v97;
        *(_OWORD *)(v97 + 56) = v98;
        *(void *)(v97 + 72) = *(void *)(v97 + 32);
        sub_100033120(&v188, v97);
        uint64_t v72 = v96 - 40;
        uint64_t v16 = v182 + 1;
        if (v71 == v182 + 1) {
          goto LABEL_53;
        }
      }
      v178(v180, v179);
      v175(v176, v81);
      char v88 = sub_1004CACF0();
      v86(v84, v87);
      v86(v79, v87);
      if ((v88 & 1) == 0)
      {
        uint64_t v89 = v189;
        uint64_t v90 = v190;
        sub_100032FD8(&v188, v189);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v90 + 8))(v184, v89, v90);
        uint64_t v91 = sub_1004CF470();
        sub_100033194((uint64_t)v184);
        uint64_t v92 = v186;
        uint64_t v93 = v187;
        sub_100032FD8(&v185, v186);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v93 + 8))(v183, v92, v93);
        uint64_t v94 = sub_1004CF470();
        sub_100033194((uint64_t)v183);
        sub_100039184((uint64_t)&v185);
        sub_100039184((uint64_t)&v188);
        Swift::Int v71 = v172;
        if (v91 >= v94) {
          goto LABEL_53;
        }
        goto LABEL_59;
      }
      sub_100039184((uint64_t)&v185);
      sub_100039184((uint64_t)&v188);
      Swift::Int v71 = v172;
LABEL_53:
      Swift::Int v11 = v71 + 1;
      uint64_t v70 = v164 + 40;
      uint64_t v16 = v165;
      if ((void (*)(char *, uint64_t))v11 != v162) {
        continue;
      }
      break;
    }
    Swift::Int v11 = (Swift::Int)v162;
LABEL_63:
    if (v11 < v16) {
      goto LABEL_143;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      long long v13 = v163;
    }
    else {
      long long v13 = sub_10021FF80(0, *((void *)v163 + 2) + 1, 1, v163);
    }
    unint64_t v100 = *((void *)v13 + 2);
    unint64_t v99 = *((void *)v13 + 3);
    unint64_t v15 = v100 + 1;
    uint64_t v101 = v165;
    if (v100 >= v99 >> 1)
    {
      v151 = sub_10021FF80((char *)(v99 > 1), v100 + 1, 1, v13);
      uint64_t v101 = v165;
      long long v13 = v151;
    }
    *((void *)v13 + 2) = v15;
    uint64_t v102 = v13 + 32;
    int64_t v103 = &v13[16 * v100 + 32];
    *(void *)int64_t v103 = v101;
    *((void *)v103 + 1) = v11;
    if (v100)
    {
      uint64_t v10 = v167;
      long long v14 = v173;
      while (1)
      {
        unint64_t v104 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v109 = &v102[16 * v15];
          uint64_t v110 = *((void *)v109 - 8);
          uint64_t v111 = *((void *)v109 - 7);
          BOOL v115 = __OFSUB__(v111, v110);
          uint64_t v112 = v111 - v110;
          if (v115) {
            goto LABEL_132;
          }
          uint64_t v114 = *((void *)v109 - 6);
          uint64_t v113 = *((void *)v109 - 5);
          BOOL v115 = __OFSUB__(v113, v114);
          uint64_t v107 = v113 - v114;
          char v108 = v115;
          if (v115) {
            goto LABEL_133;
          }
          unint64_t v116 = v15 - 2;
          uint64_t v117 = &v102[16 * v15 - 32];
          uint64_t v119 = *(void *)v117;
          uint64_t v118 = *((void *)v117 + 1);
          BOOL v115 = __OFSUB__(v118, v119);
          uint64_t v120 = v118 - v119;
          if (v115) {
            goto LABEL_135;
          }
          BOOL v115 = __OFADD__(v107, v120);
          uint64_t v121 = v107 + v120;
          if (v115) {
            goto LABEL_138;
          }
          if (v121 >= v112)
          {
            uint64_t v139 = &v102[16 * v104];
            uint64_t v141 = *(void *)v139;
            uint64_t v140 = *((void *)v139 + 1);
            BOOL v115 = __OFSUB__(v140, v141);
            uint64_t v142 = v140 - v141;
            if (v115) {
              goto LABEL_142;
            }
            BOOL v132 = v107 < v142;
            goto LABEL_101;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v133 = *((void *)v13 + 4);
            uint64_t v134 = *((void *)v13 + 5);
            BOOL v115 = __OFSUB__(v134, v133);
            uint64_t v126 = v134 - v133;
            char v127 = v115;
            goto LABEL_95;
          }
          uint64_t v106 = *((void *)v13 + 4);
          uint64_t v105 = *((void *)v13 + 5);
          BOOL v115 = __OFSUB__(v105, v106);
          uint64_t v107 = v105 - v106;
          char v108 = v115;
        }
        if (v108) {
          goto LABEL_134;
        }
        unint64_t v116 = v15 - 2;
        uint64_t v122 = &v102[16 * v15 - 32];
        uint64_t v124 = *(void *)v122;
        uint64_t v123 = *((void *)v122 + 1);
        BOOL v125 = __OFSUB__(v123, v124);
        uint64_t v126 = v123 - v124;
        char v127 = v125;
        if (v125) {
          goto LABEL_137;
        }
        long long v128 = &v102[16 * v104];
        uint64_t v130 = *(void *)v128;
        uint64_t v129 = *((void *)v128 + 1);
        BOOL v115 = __OFSUB__(v129, v130);
        uint64_t v131 = v129 - v130;
        if (v115) {
          goto LABEL_140;
        }
        if (__OFADD__(v126, v131)) {
          goto LABEL_141;
        }
        if (v126 + v131 >= v107)
        {
          BOOL v132 = v107 < v131;
LABEL_101:
          if (v132) {
            unint64_t v104 = v116;
          }
          goto LABEL_103;
        }
LABEL_95:
        if (v127) {
          goto LABEL_136;
        }
        id v135 = &v102[16 * v104];
        uint64_t v137 = *(void *)v135;
        uint64_t v136 = *((void *)v135 + 1);
        BOOL v115 = __OFSUB__(v136, v137);
        uint64_t v138 = v136 - v137;
        if (v115) {
          goto LABEL_139;
        }
        if (v138 < v126) {
          goto LABEL_14;
        }
LABEL_103:
        unint64_t v143 = v104 - 1;
        if (v104 - 1 >= v15)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v191) {
          goto LABEL_154;
        }
        id v144 = v13;
        id v145 = &v102[16 * v143];
        uint64_t v146 = *(void *)v145;
        uint64_t v147 = &v102[16 * v104];
        uint64_t v148 = *((void *)v147 + 1);
        uint64_t v149 = v168;
        sub_1003514CC((char *)(*v191 + 40 * *(void *)v145), (char *)(*v191 + 40 * *(void *)v147), (char *)(*v191 + 40 * v148), v166);
        if (v149)
        {
LABEL_125:
          swift_bridgeObjectRelease();
          v167[2] = 0;
          return swift_bridgeObjectRelease();
        }
        if (v148 < v146) {
          goto LABEL_129;
        }
        if (v104 > *((void *)v144 + 2)) {
          goto LABEL_130;
        }
        *(void *)id v145 = v146;
        *(void *)&v102[16 * v143 + 8] = v148;
        unint64_t v150 = *((void *)v144 + 2);
        if (v104 >= v150) {
          goto LABEL_131;
        }
        uint64_t v168 = 0;
        unint64_t v15 = v150 - 1;
        memmove(&v102[16 * v104], v147 + 16, 16 * (v150 - 1 - v104));
        long long v13 = v144;
        *((void *)v144 + 2) = v150 - 1;
        uint64_t v10 = v167;
        long long v14 = v173;
        if (v150 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v15 = 1;
    uint64_t v10 = v167;
    long long v14 = v173;
LABEL_14:
    Swift::Int v6 = v191[1];
    long long v12 = v169;
    if (v11 >= v6) {
      goto LABEL_113;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  Swift::Int result = sub_1004CF6A0();
  __break(1u);
  return result;
}

uint64_t sub_10035103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v59 = a4;
  uint64_t v47 = a1;
  uint64_t v50 = sub_1004CAD80();
  uint64_t v6 = __chkstk_darwin(v50);
  uint64_t v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = __chkstk_darwin(v6);
  long long v12 = &v45[-v11];
  uint64_t v51 = a3;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v49 = (void (**)(unsigned char *, uint64_t))(v10 + 8);
    uint64_t v13 = 40 * v51 - 40;
LABEL_6:
    uint64_t v14 = v47;
    uint64_t v48 = v13;
    uint64_t v15 = v13;
    while (1)
    {
      uint64_t v69 = v14;
      uint64_t v16 = *v59;
      uint64_t v60 = v15;
      uint64_t v17 = v16 + v15;
      sub_100049660(v16 + v15 + 40, (uint64_t)&v66);
      sub_100049660(v17, (uint64_t)v63);
      uint64_t v18 = v67;
      uint64_t v19 = v68;
      uint64_t v20 = sub_100032FD8(&v66, v67);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
      uint64_t v55 = v20;
      uint64_t v58 = v18;
      uint64_t v57 = v19;
      uint64_t v56 = v21;
      v21(v18, v19);
      uint64_t v22 = v64;
      uint64_t v23 = v65;
      uint64_t v24 = sub_100032FD8(v63, v64);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
      uint64_t v52 = v24;
      uint64_t v54 = v22;
      int v53 = v25;
      v25(v22, v23);
      char v26 = sub_1004CAD00();
      Swift::String v27 = *v49;
      char v28 = v8;
      uint64_t v29 = v8;
      uint64_t v30 = v50;
      (*v49)(v28, v50);
      v27(v12, v30);
      if (v26)
      {
        sub_100039184((uint64_t)v63);
        uint64_t result = sub_100039184((uint64_t)&v66);
        uint64_t v8 = v29;
        uint64_t v31 = v69;
        uint64_t v32 = v60;
      }
      else
      {
        v56(v58, v57);
        v53(v54, v23);
        char v33 = sub_1004CACF0();
        uint64_t v34 = v29;
        v27(v29, v30);
        v27(v12, v30);
        if (v33)
        {
          sub_100039184((uint64_t)v63);
          uint64_t result = sub_100039184((uint64_t)&v66);
          uint64_t v8 = v29;
LABEL_5:
          uint64_t v13 = v48 + 40;
          if (++v51 == v46) {
            return result;
          }
          goto LABEL_6;
        }
        uint64_t v35 = v67;
        uint64_t v36 = v68;
        sub_100032FD8(&v66, v67);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v36 + 8))(v62, v35, v36);
        uint64_t v37 = sub_1004CF470();
        sub_100033194((uint64_t)v62);
        uint64_t v38 = v64;
        uint64_t v39 = v65;
        sub_100032FD8(v63, v64);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v39 + 8))(v61, v38, v39);
        uint64_t v40 = sub_1004CF470();
        sub_100033194((uint64_t)v61);
        sub_100039184((uint64_t)v63);
        uint64_t result = sub_100039184((uint64_t)&v66);
        BOOL v41 = v37 < v40;
        uint64_t v8 = v34;
        uint64_t v31 = v69;
        uint64_t v32 = v60;
        if (!v41) {
          goto LABEL_5;
        }
      }
      uint64_t v42 = *v59;
      if (!*v59) {
        break;
      }
      uint64_t v43 = v42 + v32;
      sub_100033120((long long *)(v42 + v32 + 40), (uint64_t)&v66);
      long long v44 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)(v43 + 40) = *(_OWORD *)v43;
      *(_OWORD *)(v43 + 56) = v44;
      *(void *)(v43 + 72) = *(void *)(v43 + 32);
      uint64_t result = sub_100033120(&v66, v43);
      uint64_t v15 = v32 - 40;
      uint64_t v14 = v31 + 1;
      if (v51 == v14) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003514CC(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v94 = sub_1004CAD80();
  uint64_t v8 = *(void *)(v94 - 8);
  uint64_t v9 = __chkstk_darwin(v94);
  uint64_t v93 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (char *)&v79 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 40;
  uint64_t v84 = a3;
  uint64_t v14 = a3 - a2;
  uint64_t v15 = v14 / 40;
  uint64_t v106 = a1;
  uint64_t v105 = a4;
  if (v13 >= v14 / 40)
  {
    if (v14 >= -39)
    {
      if (a4 != a2 || &a2[40 * v15] <= a4) {
        memmove(a4, a2, 40 * v15);
      }
      long long v44 = &a4[40 * v15];
      unint64_t v104 = v44;
      uint64_t v106 = a2;
      if (v14 >= 40 && a1 < a2)
      {
        uint64_t v80 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v45 = v84 - 40;
        int v82 = a4;
        uint64_t v81 = (void (**)(char *, uint64_t))a1;
        do
        {
          uint64_t v91 = (uint64_t)v45;
          sub_100049660((uint64_t)(v44 - 40), (uint64_t)&v101);
          uint64_t v95 = a2;
          uint64_t v90 = a2 - 40;
          sub_100049660((uint64_t)(a2 - 40), (uint64_t)v98);
          uint64_t v48 = v102;
          uint64_t v49 = v103;
          uint64_t v50 = sub_100032FD8(&v101, v102);
          uint64_t v51 = (void (*)(void, void *))v49[2];
          uint64_t v52 = v92;
          Swift::String v86 = (void (*)(uint64_t, void))v50;
          uint64_t v89 = (void (*)(uint64_t, char *))v48;
          char v88 = v49;
          uint64_t v87 = v51;
          v51(v48, v49);
          uint64_t v53 = v99;
          uint64_t v54 = v100;
          uint64_t v55 = sub_100032FD8(v98, v99);
          uint64_t v56 = *(char **)(v54 + 16);
          uint64_t v57 = v93;
          unint64_t v83 = (unint64_t)v55;
          char v85 = (void *)v53;
          uint64_t v84 = v56;
          ((void (*)(uint64_t, uint64_t))v56)(v53, v54);
          char v58 = sub_1004CAD00();
          uint64_t v59 = *v80;
          uint64_t v60 = v94;
          (*v80)(v57, v94);
          v59(v52, v60);
          if (v58)
          {
            BOOL v61 = 1;
          }
          else
          {
            v87(v89, v88);
            ((void (*)(void *, uint64_t))v84)(v85, v54);
            char v62 = sub_1004CACF0();
            v59(v57, v60);
            v59(v52, v60);
            if (v62)
            {
              BOOL v61 = 0;
            }
            else
            {
              uint64_t v63 = v102;
              uint64_t v64 = v103;
              sub_100032FD8(&v101, v102);
              ((void (*)(void *__return_ptr, uint64_t, void *))v64[1])(v97, v63, v64);
              uint64_t v65 = sub_1004CF470();
              sub_100033194((uint64_t)v97);
              uint64_t v66 = v99;
              uint64_t v67 = v100;
              sub_100032FD8(v98, v99);
              (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v67 + 8))(v96, v66, v67);
              uint64_t v68 = sub_1004CF470();
              sub_100033194((uint64_t)v96);
              BOOL v61 = v65 < v68;
            }
          }
          uint64_t v69 = v95;
          unint64_t v70 = (unint64_t)v82;
          Swift::Int v71 = v81;
          unint64_t v72 = v91;
          unint64_t v73 = v91 + 40;
          sub_100039184((uint64_t)v98);
          sub_100039184((uint64_t)&v101);
          if (v61)
          {
            uint64_t v74 = v90;
            if ((char *)v73 != v69 || v72 >= (unint64_t)v69)
            {
              long long v46 = *(_OWORD *)v90;
              long long v47 = *((_OWORD *)v90 + 1);
              *(void *)(v72 + 32) = *((void *)v90 + 4);
              *(_OWORD *)unint64_t v72 = v46;
              *(_OWORD *)(v72 + 16) = v47;
            }
            v106 -= 40;
            long long v44 = v104;
            if ((unint64_t)v104 <= v70) {
              break;
            }
          }
          else
          {
            uint64_t v75 = v104;
            long long v44 = v104 - 40;
            v104 -= 40;
            if (v73 < (unint64_t)v75 || v72 >= (unint64_t)v75 || (_OWORD *)v73 != v75)
            {
              long long v76 = *(_OWORD *)v44;
              long long v77 = *(_OWORD *)((char *)v75 - 24);
              *(void *)(v72 + 32) = *((void *)v75 - 1);
              *(_OWORD *)unint64_t v72 = v76;
              *(_OWORD *)(v72 + 16) = v77;
            }
            uint64_t v74 = v69;
            if ((unint64_t)v44 <= v70) {
              break;
            }
          }
          uint64_t v45 = (char *)(v72 - 40);
          a2 = v74;
        }
        while (v74 > (char *)v71);
      }
LABEL_50:
      sub_1002207C8((void **)&v106, (const void **)&v105, &v104);
      return 1;
    }
  }
  else if (v12 >= -39)
  {
    if (a4 != a1 || &a1[40 * v13] <= a4) {
      memmove(a4, a1, 40 * v13);
    }
    unint64_t v83 = (unint64_t)&a4[40 * v13];
    unint64_t v104 = (char *)v83;
    if (v12 >= 40 && a2 < v84)
    {
      uint64_t v81 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v16 = v92;
      while (1)
      {
        uint64_t v95 = a2;
        sub_100049660((uint64_t)a2, (uint64_t)&v101);
        sub_100049660((uint64_t)a4, (uint64_t)v98);
        uint64_t v17 = v102;
        uint64_t v18 = (char *)v103;
        uint64_t v19 = sub_100032FD8(&v101, v102);
        uint64_t v20 = (void (*)(uint64_t, char *))*((void *)v18 + 2);
        char v88 = v19;
        uint64_t v91 = v17;
        uint64_t v90 = v18;
        uint64_t v89 = v20;
        v20(v17, v18);
        uint64_t v22 = v99;
        uint64_t v21 = v100;
        uint64_t v23 = sub_100032FD8(v98, v99);
        uint64_t v24 = *(void (**)(uint64_t, void))(v21 + 16);
        uint64_t v25 = v93;
        char v85 = v23;
        uint64_t v87 = (void (*)(void, void *))v21;
        Swift::String v86 = v24;
        v24(v22, v21);
        char v26 = sub_1004CAD00();
        Swift::String v27 = *v81;
        uint64_t v28 = v94;
        (*v81)(v25, v94);
        v27(v16, v28);
        if (v26)
        {
          sub_100039184((uint64_t)v98);
          sub_100039184((uint64_t)&v101);
          uint64_t v29 = v95;
        }
        else
        {
          v89(v91, v90);
          v86(v22, v87);
          char v34 = sub_1004CACF0();
          v27(v25, v28);
          v27(v16, v28);
          if (v34)
          {
            sub_100039184((uint64_t)v98);
            sub_100039184((uint64_t)&v101);
            uint64_t v29 = v95;
LABEL_18:
            uint64_t v30 = v106;
            BOOL v41 = v105 + 40;
            if (v106 != v105 || v106 >= v41)
            {
              long long v42 = *(_OWORD *)v105;
              long long v43 = *((_OWORD *)v105 + 1);
              *((void *)v106 + 4) = *((void *)v105 + 4);
              _OWORD *v30 = v42;
              v30[1] = v43;
            }
            uint64_t v105 = v41;
            unint64_t v31 = (unint64_t)v29;
            goto LABEL_23;
          }
          uint64_t v35 = v102;
          uint64_t v36 = v103;
          sub_100032FD8(&v101, v102);
          ((void (*)(void *__return_ptr, uint64_t, void *))v36[1])(v97, v35, v36);
          uint64_t v37 = sub_1004CF470();
          sub_100033194((uint64_t)v97);
          uint64_t v38 = v99;
          uint64_t v39 = v100;
          sub_100032FD8(v98, v99);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v39 + 8))(v96, v38, v39);
          uint64_t v40 = sub_1004CF470();
          sub_100033194((uint64_t)v96);
          sub_100039184((uint64_t)v98);
          sub_100039184((uint64_t)&v101);
          uint64_t v29 = v95;
          if (v37 >= v40) {
            goto LABEL_18;
          }
        }
        uint64_t v30 = v106;
        unint64_t v31 = (unint64_t)(v29 + 40);
        if (v106 >= v29 && (unint64_t)v106 < v31 && v106 == v29)
        {
          uint64_t v30 = v29;
        }
        else
        {
          long long v32 = *(_OWORD *)v29;
          long long v33 = *((_OWORD *)v29 + 1);
          *((void *)v106 + 4) = *((void *)v29 + 4);
          _OWORD *v30 = v32;
          v30[1] = v33;
        }
LABEL_23:
        uint64_t v106 = (char *)v30 + 40;
        a4 = v105;
        if ((unint64_t)v105 < v83)
        {
          a2 = (char *)v31;
          if (v31 < (unint64_t)v84) {
            continue;
          }
        }
        goto LABEL_50;
      }
    }
    goto LABEL_50;
  }
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t sub_100351DE8(uint64_t a1, uint64_t a2)
{
  sub_1000335A8(a1, (uint64_t)v18, (uint64_t *)&unk_100628860);
  sub_1000335A8(a2, (uint64_t)v17, (uint64_t *)&unk_100628860);
  sub_1000335A8((uint64_t)v18, (uint64_t)v10, (uint64_t *)&unk_100628860);
  sub_1000335A8((uint64_t)v17, (uint64_t)&v12, (uint64_t *)&unk_100628860);
  if (!v11)
  {
    sub_100049B74((uint64_t)v17, (uint64_t *)&unk_100628860);
    sub_100049B74((uint64_t)v18, (uint64_t *)&unk_100628860);
    if (!*((void *)&v13 + 1))
    {
      sub_100049B74((uint64_t)v10, (uint64_t *)&unk_100628860);
      goto LABEL_7;
    }
LABEL_12:
    sub_100049B74((uint64_t)v10, &qword_100635458);
LABEL_13:
    char v6 = 0;
    return v6 & 1;
  }
  sub_1000335A8((uint64_t)v10, (uint64_t)v9, (uint64_t *)&unk_100628860);
  if (!*((void *)&v13 + 1))
  {
    sub_100049B74((uint64_t)v17, (uint64_t *)&unk_100628860);
    sub_100049B74((uint64_t)v18, (uint64_t *)&unk_100628860);
    sub_100049B74((uint64_t)v9, &qword_100635420);
    goto LABEL_12;
  }
  v8[2] = v14;
  v8[3] = v15;
  _OWORD v8[4] = v16;
  v8[0] = v12;
  v8[1] = v13;
  char v4 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
  sub_100049B74((uint64_t)v8, &qword_100635420);
  sub_100049B74((uint64_t)v17, (uint64_t *)&unk_100628860);
  sub_100049B74((uint64_t)v18, (uint64_t *)&unk_100628860);
  sub_100049B74((uint64_t)v9, &qword_100635420);
  sub_100049B74((uint64_t)v10, (uint64_t *)&unk_100628860);
  if ((v4 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((_s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v5 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  if ((sub_1004CAD30() & 1) == 0) {
    goto LABEL_13;
  }
  sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
  if ((sub_1004CEF10() & 1) == 0) {
    goto LABEL_13;
  }
  char v6 = _s14RecentsAvocado37DOCProgressProvidingOperationIconTypeO21__derived_enum_equalsySbAC_ACtFZ_0(a1 + *(int *)(v5 + 32), a2 + *(int *)(v5 + 32));
  return v6 & 1;
}

void *sub_100352004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = _swiftEmptyArrayStorage;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    uint64_t v3 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = 0;
    uint64_t v30 = a1 + 32;
    uint64_t v50 = (void *)v47 + 1;
    uint64_t v28 = a2 + 32;
    uint64_t v25 = a2 + 72;
    uint64_t v26 = a3 + 32;
    uint64_t v29 = _swiftEmptyArrayStorage;
LABEL_8:
    sub_1000335A8(v30 + 80 * v5, (uint64_t)v46, &qword_100635420);
    uint64_t v7 = *((void *)&v48 + 1);
    uint64_t v6 = v48;
    sub_100032FD8(v50, v48);
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    LOBYTE(v6) = [v8 isCancelled];

    if (v6) {
      goto LABEL_6;
    }
    long long v9 = v48;
    sub_100032FD8(v50, v48);
    (*(void (**)(long long *__return_ptr, void, void))(*((void *)&v9 + 1) + 8))(&v34, v9, *((void *)&v9 + 1));
    uint64_t v10 = *(void *)(v4 + 16);
    if (!v10) {
      goto LABEL_19;
    }
    sub_100033138(v28, (uint64_t)v45);
    swift_bridgeObjectRetain();
    char v11 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
    sub_100033194((uint64_t)v45);
    if (v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    if (v10 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v12 = v25;
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t result = (void *)sub_100033138(v12, (uint64_t)v45);
      uint64_t v15 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      char v16 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_100033194((uint64_t)v45);
      if (v16)
      {
        uint64_t v4 = a2;
        swift_bridgeObjectRelease();
        uint64_t v3 = a3;
LABEL_36:
        sub_100033194((uint64_t)&v34);
        sub_1000335A8((uint64_t)v46, (uint64_t)v45, &qword_100635420);
LABEL_5:
        sub_100049B74((uint64_t)v45, &qword_100635420);
LABEL_6:
        sub_100049B74((uint64_t)v46, &qword_100635420);
        goto LABEL_7;
      }
      ++v13;
      v12 += 40;
      if (v15 == v10)
      {
        uint64_t v4 = a2;
        swift_bridgeObjectRelease();
        uint64_t v3 = a3;
LABEL_19:
        sub_100033194((uint64_t)&v34);
        sub_1000335A8((uint64_t)v46, (uint64_t)v45, &qword_100635420);
        sub_1000335A8((uint64_t)v45, (uint64_t)v44, &qword_100635420);
        uint64_t v17 = *(void *)(v3 + 16);
        if (!v17) {
          goto LABEL_30;
        }
        swift_bridgeObjectRetain();
        uint64_t v18 = v26;
        while (2)
        {
          sub_1000335A8(v18, (uint64_t)&v34, (uint64_t *)&unk_100628860);
          sub_1000335A8((uint64_t)v44, (uint64_t)&v39, (uint64_t *)&unk_100628860);
          if (!*((void *)&v35 + 1))
          {
            if (!*((void *)&v40 + 1))
            {
              sub_100049B74((uint64_t)&v34, (uint64_t *)&unk_100628860);
LABEL_4:
              swift_bridgeObjectRelease();
              sub_100049B74((uint64_t)v44, (uint64_t *)&unk_100628860);
              goto LABEL_5;
            }
            goto LABEL_22;
          }
          sub_1000335A8((uint64_t)&v34, (uint64_t)v33, (uint64_t *)&unk_100628860);
          if (!*((void *)&v40 + 1))
          {
            sub_100049B74((uint64_t)v33, &qword_100635420);
LABEL_22:
            sub_100049B74((uint64_t)&v34, &qword_100635458);
            goto LABEL_23;
          }
          long long v32[2] = v41;
          v32[3] = v42;
          v32[4] = v43;
          v32[0] = v39;
          v32[1] = v40;
          char v19 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
          sub_100049B74((uint64_t)v32, &qword_100635420);
          sub_100049B74((uint64_t)v33, &qword_100635420);
          sub_100049B74((uint64_t)&v34, (uint64_t *)&unk_100628860);
          if (v19) {
            goto LABEL_4;
          }
LABEL_23:
          v18 += 80;
          if (--v17) {
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
LABEL_30:
        sub_100049B74((uint64_t)v44, (uint64_t *)&unk_100628860);
        sub_100049B74((uint64_t)v45, &qword_100635420);
        long long v36 = v47[0];
        long long v37 = v47[1];
        long long v38 = v48;
        long long v34 = v46[0];
        long long v35 = v46[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100188A5C(0, v29[2] + 1, 1);
        }
        uint64_t v20 = v49;
        unint64_t v22 = v49[2];
        unint64_t v21 = v49[3];
        if (v22 >= v21 >> 1)
        {
          sub_100188A5C(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v49;
        }
        _OWORD v20[2] = v22 + 1;
        uint64_t v29 = v20;
        uint64_t v23 = &v20[10 * v22];
        v23[3] = v35;
        v23[4] = v36;
        v23[5] = v37;
        v23[6] = v38;
        v23[2] = v34;
        uint64_t v4 = a2;
LABEL_7:
        if (++v5 == v31) {
          return v29;
        }
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100352474()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003524B4()
{
  return sub_10034E148(*(void *)(v0 + 24), 1);
}

uint64_t sub_1003524E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003524F0()
{
  return swift_release();
}

uint64_t sub_1003524F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648((uint64_t *)&unk_100628860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100352560()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100352598(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1003525A0()
{
  uint64_t v1 = sub_100031648(&qword_100635460);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 40))
  {
    sub_100039184(v0 + 16);
    sub_100039184(v0 + 56);
  }
  uint64_t v5 = (v3 + 96) & ~v3;
  uint64_t v6 = (v4 + v3 + v5) & ~v3;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v0 + v5, v1);
  v7(v0 + v6, v1);
  return _swift_deallocObject(v0, v6 + v4, v3 | 7);
}

uint64_t sub_1003526A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648((uint64_t *)&unk_100628860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100352710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100031648(&qword_100635460);
  return sub_10034DF34(a1, a2, a3, v3 + 16);
}

void sub_1003527CC()
{
}

void sub_1003527D4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_1003527DC()
{
  swift_release();
  sub_100039184(v0 + 24);
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10035281C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  return sub_10034D670(a1, a2, a3, a4, *(void *)(v4 + 16), (void *)(v4 + 24));
}

uint64_t sub_100352828()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100352860(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_100352878(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v50 = a3;
  uint64_t v47 = sub_1004CAD80();
  uint64_t v45 = *(void (***)(char *, uint64_t))(v47 - 8);
  __chkstk_darwin(v47);
  long long v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100031648(&qword_100635410);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  char v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_100032FD8(a1, v14);
  char v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  [v16 cancel];

  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_100032FD8(a1, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v53, v17, v18);
  sub_100049660((uint64_t)a1, (uint64_t)&v54);
  id v19 = [self mainRunLoop];
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v21 = OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable;
  uint64_t v48 = a2;
  unint64_t v22 = *(void **)(a2 + OBJC_IVAR____TtC14RecentsAvocado39DOCProgressCollectionListViewController_diffable);
  if (v22)
  {
    double v23 = Current;
    id v24 = v22;
    sub_1004CD110();

    uint64_t v25 = sub_1004CCF00();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v13, v7);
    uint64_t v27 = *(void *)(v25 + 16);
    if (!v27)
    {
LABEL_7:

      swift_bridgeObjectRelease();
LABEL_19:
      v50(1);
      return sub_100049B74((uint64_t)v53, &qword_100635420);
    }
    id v49 = v19;
    uint64_t v28 = v25 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000335A8(v28, (uint64_t)v52, &qword_100635420);
      char v29 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_100049B74((uint64_t)v52, &qword_100635420);
      if (v29) {
        break;
      }
      v28 += 80;
      if (!--v27)
      {
LABEL_6:

        swift_bridgeObjectRelease_n();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease_n();
    if (CFAbsoluteTimeGetCurrent() - v23 > 0.5)
    {
LABEL_9:

      goto LABEL_19;
    }
    long long v44 = v11;
    uint64_t v30 = v45 + 1;
    uint64_t v31 = &selRef_thumbnailForNode_descriptor_;
    id v19 = v49;
    ++v45;
    while (1)
    {
      long long v32 = v46;
      sub_1004CAD10();
      Class isa = sub_1004CACE0().super.isa;
      (*v30)(v32, v47);
      objc_msgSend(v19, v31[258], isa);

      long long v34 = *(void **)(v48 + v21);
      if (!v34) {
        break;
      }
      id v35 = v34;
      long long v36 = v44;
      sub_1004CD110();

      uint64_t v37 = sub_1004CCF00();
      v26(v36, v7);
      uint64_t v38 = *(void *)(v37 + 16);
      if (!v38) {
        goto LABEL_7;
      }
      uint64_t v39 = v37 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1000335A8(v39, (uint64_t)v52, &qword_100635420);
        char v40 = _s14RecentsAvocado21DOCDiffableIdentifierV2eeoiySbACyxG_AEtFZ_0();
        sub_100049B74((uint64_t)v52, &qword_100635420);
        if (v40) {
          break;
        }
        v39 += 80;
        if (!--v38) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease_n();
      CFAbsoluteTime v41 = CFAbsoluteTimeGetCurrent();
      id v19 = v49;
      uint64_t v30 = v45;
      uint64_t v31 = &selRef_thumbnailForNode_descriptor_;
      if (v41 - v23 > 0.5) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100352D94()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100352DCC()
{
  sub_10034C470(*(void **)(v0 + 16));
}

uint64_t sub_100352DD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100352DE4()
{
}

uint64_t sub_100352DEC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      long long v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(v4 + 64) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    }
    else
    {
      long long v11 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v11;
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      long long v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
    }
    long long v13 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    uint64_t v14 = a3[6];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_1004CAD80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)(v4 + v18) = v20;
    uint64_t v21 = (void *)(v4 + v19);
    unint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = type metadata accessor for DOCProgressProvidingOperationIconType();
    id v24 = v20;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v27 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v27;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v26 = sub_1004CB5C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t sub_100353074(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100039184(a1);
    sub_100039184(a1 + 40);
  }
  sub_100039184(a1 + 80);
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = a1 + a2[8];
  type metadata accessor for DOCProgressProvidingOperationIconType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v8 = sub_1004CB5C0();
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v6, v8);
  }
  return result;
}

uint64_t sub_1003531AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  long long v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 80, a2 + 80);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = type metadata accessor for DOCProgressProvidingOperationIconType();
  id v22 = v18;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v25 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v25;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_1004CB5C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1003533E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_1000ABA90((uint64_t *)a1, (uint64_t *)a2);
      sub_1000ABA90((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
    }
    else
    {
      sub_100049B74(a1, &qword_100635420);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v8 = *(_OWORD *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 16);
      long long v9 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v11 = *(_OWORD *)(a2 + 16);
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
  }
  sub_1000ABA90((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)(a2 + v18);
  uint64_t v20 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = v19;
  id v21 = v19;

  if (a1 != a2)
  {
    uint64_t v22 = a3[8];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_1000CA12C(a1 + v22);
    uint64_t v25 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      void *v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v27 = sub_1004CB5C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v24, v27);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10035366C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 96) = v9;
  uint64_t v13 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1004CB5C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1003537B8(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 24))
  {
    if (*(void *)(a2 + 24))
    {
      sub_100039184(a1);
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_100039184(a1 + 40);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      goto LABEL_6;
    }
    sub_100049B74(a1, &qword_100635420);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_6:
  sub_100039184(a1 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  if (a1 != a2)
  {
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (const void *)(a2 + v16);
    sub_1000CA12C(a1 + v16);
    uint64_t v19 = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1004CB5C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100353984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100353998);
}

uint64_t sub_100353998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 104);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1004CAD80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100353AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100353AD8);
}

uint64_t sub_100353AD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 104) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1004CAD80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_100353C04()
{
  uint64_t result = sub_1004CAD80();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100353CEC()
{
  return sub_100353D34(&qword_100635520, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListViewController.NullProgress);
}

uint64_t sub_100353D34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100353D7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DOCNodeStatusAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100353EC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeStatusAppearance()
{
  return &type metadata for DOCNodeStatusAppearance;
}

unint64_t sub_100353EFC()
{
  unint64_t result = qword_100635530;
  if (!qword_100635530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635530);
  }
  return result;
}

id sub_100353F50(uint64_t a1, char a2)
{
  unint64_t v2 = (void *)0xE700000000000000;
  uint64_t v3 = 0x6567617373656DLL;
  id v5 = 0;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0xD000000000000015;
      unsigned int v6 = "icloud.and.arrow.down";
      goto LABEL_7;
    case 2:
    case 7:
      return v5;
    case 3:
      long long v7 = "exclamationmark.icloud";
      goto LABEL_5;
    case 4:
      unint64_t v2 = (void *)0xEC0000006873616CLL;
      uint64_t v3 = 0x732E64756F6C6369;
      break;
    case 5:
      unint64_t v2 = (void *)0xED00006465687361;
      uint64_t v3 = 0x642E64756F6C6369;
      break;
    case 6:
      uint64_t v3 = 0xD000000000000012;
      unsigned int v6 = "arrow.down.message";
LABEL_7:
      unint64_t v2 = (void *)((unint64_t)(v6 - 32) | 0x8000000000000000);
      break;
    case 8:
      unint64_t v2 = (void *)0xE800000000000000;
      uint64_t v3 = 0x65706F6C65766E65;
      break;
    case 9:
      long long v7 = "arrow.down.circle.fill";
LABEL_5:
      unint64_t v2 = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
      uint64_t v3 = 0xD000000000000016;
      break;
    default:
      break;
  }
  id v5 = [objc_allocWithZone((Class)NSTextAttachment) init];
  swift_bridgeObjectRetain();
  NSString v8 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  uint64_t v9 = self;
  id v10 = [v9 systemImageNamed:v8];

  if (v10
    && (uint64_t v11 = a1,
        id v12 = [self secondaryLabelColor],
        id v13 = [v10 imageWithTintColor:v12 renderingMode:1],
        v10,
        v12,
        a1 = v11,
        v13))
  {
    id v14 = v13;
    swift_bridgeObjectRelease();
    id v15 = [self configurationWithFont:v11 scale:1];
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v16 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    id v17 = [v9 _systemImageNamed:v16 withConfiguration:0];

    if (!v17
      || (v17,
          id v18 = [self secondaryLabelColor],
          id v19 = [v17 imageWithTintColor:v18 renderingMode:1],
          v17,
          v18,
          !v19))
    {
      sub_1004CF4D0(30);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = v3;
      v23._object = v2;
      sub_1004CDCD0(v23);
      sub_1004CF6B0();
      __break(1u);
      JUMPOUT(0x100354340);
    }
    id v14 = v19;
    swift_bridgeObjectRelease();
    id v15 = [self configurationWithFont:a1 scale:1];
  }
  id v20 = v15;
  id v21 = [v14 imageWithConfiguration:v20];

  [v5 setImage:v21];
  return v5;
}

id sub_100354368(uint64_t a1, char a2, char a3)
{
  uint64_t v3 = (void *)0xE700000000000000;
  uint64_t v4 = 0x6567617373656DLL;
  id v5 = 0;
  switch(a3)
  {
    case 1:
      uint64_t v4 = 0xD000000000000015;
      unsigned int v6 = "icloud.and.arrow.down";
      goto LABEL_8;
    case 2:
    case 7:
      return v5;
    case 3:
      long long v7 = "exclamationmark.icloud";
      goto LABEL_5;
    case 4:
      uint64_t v3 = (void *)0xEC0000006873616CLL;
      uint64_t v4 = 0x732E64756F6C6369;
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 5:
      uint64_t v3 = (void *)0xED00006465687361;
      uint64_t v4 = 0x642E64756F6C6369;
      goto LABEL_13;
    case 6:
      uint64_t v4 = 0xD000000000000012;
      unsigned int v6 = "arrow.down.message";
LABEL_8:
      uint64_t v3 = (void *)((unint64_t)(v6 - 32) | 0x8000000000000000);
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 8:
      uint64_t v3 = (void *)0xE800000000000000;
      uint64_t v4 = 0x65706F6C65766E65;
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 9:
      long long v7 = "arrow.down.circle.fill";
LABEL_5:
      uint64_t v3 = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
      uint64_t v4 = 0xD000000000000016;
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (a2)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        NSString v15 = sub_1004CDB10();
        swift_bridgeObjectRelease();
        id v5 = [self systemImageNamed:v15];

        if (!v5)
        {
          id v17 = self;
          swift_bridgeObjectRetain();
          NSString v18 = sub_1004CDB10();
          swift_bridgeObjectRelease();
          id v5 = [v17 _systemImageNamed:v18 withConfiguration:0];

          if (v5) {
            goto LABEL_16;
          }
LABEL_22:
          sub_1004CF4D0(29);
          swift_bridgeObjectRelease();
          v19._countAndFlagsBits = v4;
          v19._object = v3;
          sub_1004CDCD0(v19);
          sub_1004CF6B0();
          __break(1u);
          JUMPOUT(0x100354704);
        }
LABEL_19:
        swift_bridgeObjectRelease();
        return v5;
      }
LABEL_14:
      id v9 = [self configurationWithPointSize:*(double *)&a1];
      swift_bridgeObjectRetain();
      NSString v10 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      id v5 = [self systemImageNamed:v10 withConfiguration:v9];

      if (v5) {
        goto LABEL_19;
      }
      id v11 = [self configurationWithPointSize:*(double *)&a1];
      id v12 = self;
      swift_bridgeObjectRetain();
      NSString v13 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      id v14 = [v12 _systemImageNamed:v13 withConfiguration:v11];

      id v5 = v14;
      if (!v5) {
        goto LABEL_22;
      }
LABEL_16:
      swift_bridgeObjectRelease();

      return v5;
  }
}

uint64_t sub_10035472C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CD950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *id v5 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = sub_1004CD980();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  NSString v8 = *(NSObject **)(v1 + 32);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100358CC0;
  *(void *)(v9 + 24) = v1;
  aBlock[4] = sub_1000BF250;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100125C48;
  void aBlock[3] = &unk_1005CFC98;
  NSString v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v10);
  _Block_release(v10);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_100354954(uint64_t a1, NSObject *a2, unsigned char *a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v33 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v8) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v34)
    {
      unint64_t v14 = *(void *)(v33 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v34) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v33 + 8 * v10);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 2;
      if (v13 + 2 >= v34) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v33 + 8 * v10);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 3;
      if (v13 + 3 >= v34) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v33 + 8 * v10);
      if (v14)
      {
LABEL_22:
        unint64_t v8 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
        {
          NSString v16 = (_OWORD *)(*(void *)(v5 + 56) + 224 * i);
          long long v17 = v16[1];
          v36[0] = *v16;
          v36[1] = v17;
          long long v18 = v16[5];
          long long v20 = v16[2];
          long long v19 = v16[3];
          v36[4] = v16[4];
          v36[5] = v18;
          v36[2] = v20;
          v36[3] = v19;
          long long v21 = v16[6];
          long long v22 = v16[7];
          long long v23 = v16[9];
          v36[8] = v16[8];
          v36[9] = v23;
          v36[6] = v21;
          v36[7] = v22;
          long long v24 = v16[10];
          long long v25 = v16[11];
          long long v26 = v16[12];
          *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)((char *)v16 + 201);
          v36[11] = v25;
          v37[0] = v26;
          v36[10] = v24;
          sub_10035807C(v36);
          dispatch_group_enter(a2);
          sub_10035807C(v36);
          swift_unknownObjectRelease();
          uint64_t v27 = (void *)*((void *)&v36[0] + 1);
          swift_unknownObjectRetain();
          sub_1001B03C0((uint64_t)v36 + 8);
          uint64_t v28 = swift_allocObject();
          *(void *)(v28 + 16) = a2;
          aBlock[4] = sub_1001B0328;
          void aBlock[5] = v28;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1003A422C;
          void aBlock[3] = &unk_1005CFC48;
          char v29 = _Block_copy(aBlock);
          uint64_t v30 = a2;
          swift_release();
          unsigned int v31 = [v27 registerGenerationCompletionHandler:v29];
          _Block_release(v29);
          swift_unknownObjectRelease();
          if (v31)
          {
            uint64_t result = sub_1003580E0((uint64_t)v36);
            *a3 = 1;
            if (!v8) {
              goto LABEL_7;
            }
          }
          else
          {
            dispatch_group_leave(v30);
            uint64_t result = sub_1003580E0((uint64_t)v36);
            if (!v8) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      int64_t v15 = v13 + 4;
      if (v15 < v34)
      {
        unint64_t v14 = *(void *)(v33 + 8 * v15);
        if (v14)
        {
          int64_t v10 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v10 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_28;
          }
          if (v10 >= v34) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v33 + 8 * v10);
          ++v15;
          if (v14) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100354C8C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_1004CC680();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if ((v8 & 1) == 0)
  {
    swift_beginAccess();
    *(unsigned char *)(a1 + 16) = 1;
    sub_1004CE7B0();
    uint64_t v9 = (void *)sub_1004CC480();
    sub_1004CC670();
    sub_1004CC660();

    uint64_t v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    a2(v10);
  }
  return v8 ^ 1u;
}

uint64_t sub_100354E1C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = sub_1004CC680();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *(unsigned char *)(a1 + 16) = 1;
    sub_1004CE7B0();
    uint64_t v9 = (void *)sub_1004CC480();
    sub_1004CC670();
    sub_1004CC660();

    uint64_t v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    return a2(v10);
  }
  return result;
}

uint64_t sub_100354FA8(uint64_t a1, void (*a2)(uint64_t))
{
  char v2 = sub_100354C8C(a1, a2);
  sub_1000333C8(0, (unint64_t *)&qword_100627D70);
  uint64_t v3 = (void *)sub_1004CF150();
  sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1004E12A0;
  unint64_t v5 = sub_1000334C4();
  uint64_t v6 = 28526;
  if (v2) {
    uint64_t v6 = 7562617;
  }
  unint64_t v7 = 0xE200000000000000;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = v5;
  if (v2) {
    unint64_t v7 = 0xE300000000000000;
  }
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v7;
  sub_1004CC640();

  return swift_bridgeObjectRelease();
}

void sub_10035509C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1004CD950();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *unint64_t v7 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = sub_1004CD980();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = _swiftEmptyArrayStorage;
  uint64_t v10 = *(NSObject **)(v2 + 32);
  unint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = v2;
  v11[3] = a1;
  v11[4] = v9 + 16;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1003581FC;
  *(void *)(v12 + 24) = v11;
  long long v32 = sub_1000BF250;
  uint64_t v33 = (void *)v12;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100125C48;
  unsigned int v31 = &unk_1005CF9C8;
  int64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v14 = *(void *)(*(void *)(v9 + 16) + 16);
  sub_1000333C8(0, (unint64_t *)&qword_100627D70);
  int64_t v15 = (void *)sub_1004CF150();
  sub_1004CE350();
  if (v14)
  {
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1004E12A0;
    uint64_t v17 = *(void *)(*(void *)(v9 + 16) + 16);
    *(void *)(v16 + 56) = &type metadata for Int;
    *(void *)(v16 + 64) = &protocol witness table for Int;
    *(void *)(v16 + 32) = v17;
    sub_1004CC640();

    swift_bridgeObjectRelease();
    int64_t v15 = (void *)swift_allocObject();
    v15[2] = &_swiftEmptyDictionarySingleton;
    id v18 = [self sharedGenerator];
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    long long v20 = (void *)swift_allocObject();
    _OWORD v20[2] = v19;
    v20[3] = v9;
    v20[4] = a1;
    v20[5] = v15;
    long long v32 = sub_100358298;
    uint64_t v33 = v20;
    dispatch_queue_t v27 = v10;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_1003A422C;
    unsigned int v31 = &unk_1005CFA40;
    long long v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v18 performInBatch:v21];
    _Block_release(v21);

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v2;
    *(void *)(v22 + 24) = v15 + 2;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_1003582A4;
    *(void *)(v23 + 24) = v22;
    long long v32 = sub_1000BF250;
    uint64_t v33 = (void *)v23;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_100125C48;
    unsigned int v31 = &unk_1005CFAB8;
    long long v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v27, v24);
    _Block_release(v24);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  sub_1004CC640();
  swift_release();
  swift_release();
}

uint64_t sub_10035565C(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v38 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  long long v36 = a3;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_22:
    uint64_t v17 = *(void **)(*(void *)(v5 + 48) + 8 * v13);
    id v18 = (long long *)(*(void *)(v5 + 56) + 224 * v13);
    long long v19 = v18[1];
    long long v52 = *v18;
    long long v53 = v19;
    long long v20 = v18[5];
    long long v22 = v18[2];
    long long v21 = v18[3];
    long long v56 = v18[4];
    long long v57 = v20;
    long long v54 = v22;
    long long v55 = v21;
    long long v23 = v18[9];
    long long v25 = v18[6];
    long long v24 = v18[7];
    long long v60 = v18[8];
    long long v61 = v23;
    long long v58 = v25;
    long long v59 = v24;
    long long v27 = v18[11];
    long long v26 = v18[12];
    long long v28 = v18[10];
    *(_OWORD *)&v64[9] = *(long long *)((char *)v18 + 201);
    long long v63 = v27;
    *(_OWORD *)uint64_t v64 = v26;
    long long v62 = v28;
    sub_10035807C(&v52);
    sub_10035807C(&v52);
    id v29 = v17;
    swift_unknownObjectRelease();
    sub_100357F38((uint64_t)&v53);
    sub_1001B03C0((uint64_t)&v52 + 8);
    if (v64[24] != 1 || (void)v53 == a2)
    {
      sub_100357EF0((uint64_t)&v53);
    }
    else
    {
      uint64_t v30 = *a3;
      sub_10035807C(&v52);
      id v31 = v29;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a3 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v30 = sub_1002388DC(0, v30[2] + 1, 1, v30);
        *a3 = v30;
      }
      unint64_t v34 = v30[2];
      unint64_t v33 = v30[3];
      if (v34 >= v33 >> 1) {
        uint64_t v30 = sub_1002388DC((void *)(v33 > 1), v34 + 1, 1, v30);
      }
      long long v43 = v56;
      long long v44 = v57;
      long long v41 = v54;
      long long v42 = v55;
      long long v47 = v60;
      long long v48 = v61;
      long long v45 = v58;
      long long v46 = v59;
      *(_OWORD *)&v51[9] = *(_OWORD *)&v64[9];
      long long v50 = v63;
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v64;
      long long v49 = v62;
      long long v39 = v52;
      long long v40 = v53;
      void v30[2] = v34 + 1;
      id v35 = &v30[29 * v34];
      v35[4] = v31;
      *(_OWORD *)(v35 + 7) = v40;
      *(_OWORD *)(v35 + 5) = v39;
      *(_OWORD *)(v35 + 15) = v44;
      *(_OWORD *)(v35 + 13) = v43;
      *(_OWORD *)(v35 + 11) = v42;
      *(_OWORD *)(v35 + 9) = v41;
      *(_OWORD *)(v35 + 23) = v48;
      *(_OWORD *)(v35 + 21) = v47;
      *(_OWORD *)(v35 + 19) = v46;
      *(_OWORD *)(v35 + 17) = v45;
      *(_OWORD *)((char *)v35 + 241) = *(_OWORD *)&v51[9];
      *(_OWORD *)(v35 + 29) = *(_OWORD *)v51;
      *(_OWORD *)(v35 + 27) = v50;
      *(_OWORD *)(v35 + 25) = v49;
      a3 = (void **)v36;
      *long long v36 = v30;

      sub_100357EF0((uint64_t)&v53);
    }
    uint64_t result = sub_1003580E0((uint64_t)&v52);
  }
  int64_t v14 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v14 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v14);
  ++v11;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v11 = v14 + 1;
  if (v14 + 1 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v11 = v14 + 2;
  if (v14 + 2 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15)
  {
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v38) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003559E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)(a4 + 16);
      id v77 = self;
      swift_bridgeObjectRetain();
      uint64_t v79 = v9 - 1;
      uint64_t v11 = 32;
      uint64_t v75 = a3;
      for (i = v8; ; uint64_t v8 = i)
      {
        uint64_t v78 = v11;
        long long v12 = *(_OWORD *)(v8 + v11);
        long long v13 = *(_OWORD *)(v8 + v11 + 32);
        long long v96 = *(_OWORD *)(v8 + v11 + 16);
        long long v97 = v13;
        long long v95 = v12;
        long long v14 = *(_OWORD *)(v8 + v11 + 48);
        long long v15 = *(_OWORD *)(v8 + v11 + 64);
        long long v16 = *(_OWORD *)(v8 + v11 + 96);
        long long v100 = *(_OWORD *)(v8 + v11 + 80);
        long long v101 = v16;
        long long v98 = v14;
        long long v99 = v15;
        long long v17 = *(_OWORD *)(v8 + v11 + 112);
        long long v18 = *(_OWORD *)(v8 + v11 + 128);
        long long v19 = *(_OWORD *)(v8 + v11 + 160);
        long long v104 = *(_OWORD *)(v8 + v11 + 144);
        long long v105 = v19;
        long long v102 = v17;
        long long v103 = v18;
        long long v20 = *(_OWORD *)(v8 + v11 + 176);
        long long v21 = *(_OWORD *)(v8 + v11 + 192);
        long long v22 = *(_OWORD *)(v8 + v11 + 208);
        char v109 = *(unsigned char *)(v8 + v11 + 224);
        long long v107 = v21;
        long long v108 = v22;
        long long v106 = v20;
        long long v23 = v95;
        sub_1003582D0((uint64_t)&v95);
        sub_10035807C((void *)&v95 + 1);
        sub_1001B03C0((uint64_t)&v96);
        long long v24 = (void *)*((void *)&v108 + 1);
        *(_OWORD *)&v110[136] = v105;
        *(_OWORD *)&v110[152] = v106;
        *(_OWORD *)&v110[168] = v107;
        *(_OWORD *)&v110[184] = v108;
        *(_OWORD *)&v110[72] = v101;
        *(_OWORD *)&v110[88] = v102;
        *(_OWORD *)&v110[104] = v103;
        *(_OWORD *)&v110[120] = v104;
        *(_OWORD *)&v110[8] = v97;
        *(_OWORD *)&v110[24] = v98;
        *(_OWORD *)&v110[40] = v99;
        *(_OWORD *)&v110[56] = v100;
        *(void *)uint64_t v110 = a3;
        v110[200] = v109;
        if (v109 == 1)
        {
          sub_1001B084C((uint64_t)&v97);
          double v25 = 0.0;
        }
        else
        {
          double v26 = *(double *)&v100;
          if (*(double *)&v102 < *(double *)&v100) {
            double v26 = *(double *)&v102;
          }
          double v27 = floor(v26);
          sub_1001B084C((uint64_t)&v97);
          double v25 = v27 / 1.41421356;
        }
        id v28 = v24;
        id v29 = (id)v23;
        swift_unknownObjectRetain();
        long long v30 = v100;
        [v28 displayScale];
        id v32 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", a3, 1, 1, objc_msgSend(*((id *)&v23 + 1), "isFolder"), v30, v25, v31);
        id v33 = [v77 sharedGenerator];
        id v34 = [v33 thumbnailForNode:*((void *)&v23 + 1) descriptor:v32];

        swift_beginAccess();
        sub_100357F38((uint64_t)v110);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v94 = (void *)*v10;
        long long v36 = v94;
        uint64_t v37 = v10;
        *uint64_t v10 = 0x8000000000000000;
        unint64_t v39 = sub_1001DC19C((uint64_t)v29);
        uint64_t v40 = v36[2];
        BOOL v41 = (v38 & 1) == 0;
        uint64_t v42 = v40 + v41;
        if (__OFADD__(v40, v41)) {
          break;
        }
        char v43 = v38;
        if (v36[3] >= v42)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10049F310();
          }
        }
        else
        {
          sub_10049617C(v42, isUniquelyReferenced_nonNull_native);
          unint64_t v44 = sub_1001DC19C((uint64_t)v29);
          if ((v43 & 1) != (v45 & 1)) {
            goto LABEL_26;
          }
          unint64_t v39 = v44;
        }
        long long v92 = *(_OWORD *)&v110[160];
        v93[0] = *(_OWORD *)&v110[176];
        *(_OWORD *)((char *)v93 + 9) = *(_OWORD *)&v110[185];
        long long v88 = *(_OWORD *)&v110[96];
        long long v89 = *(_OWORD *)&v110[112];
        long long v90 = *(_OWORD *)&v110[128];
        long long v91 = *(_OWORD *)&v110[144];
        long long v84 = *(_OWORD *)&v110[32];
        long long v85 = *(_OWORD *)&v110[48];
        long long v86 = *(_OWORD *)&v110[64];
        long long v87 = *(_OWORD *)&v110[80];
        long long v82 = *(_OWORD *)v110;
        long long v83 = *(_OWORD *)&v110[16];
        if (v43)
        {
          long long v46 = v94;
          uint64_t v47 = v94[7] + 224 * v39;
          long long v48 = *(_OWORD *)(v47 + 16);
          v80[0] = *(_OWORD *)v47;
          v80[1] = v48;
          long long v49 = *(_OWORD *)(v47 + 80);
          long long v51 = *(_OWORD *)(v47 + 32);
          long long v50 = *(_OWORD *)(v47 + 48);
          v80[4] = *(_OWORD *)(v47 + 64);
          v80[5] = v49;
          v80[2] = v51;
          v80[3] = v50;
          long long v52 = *(_OWORD *)(v47 + 144);
          long long v54 = *(_OWORD *)(v47 + 96);
          long long v53 = *(_OWORD *)(v47 + 112);
          v80[8] = *(_OWORD *)(v47 + 128);
          v80[9] = v52;
          v80[6] = v54;
          v80[7] = v53;
          long long v56 = *(_OWORD *)(v47 + 176);
          long long v55 = *(_OWORD *)(v47 + 192);
          long long v57 = *(_OWORD *)(v47 + 160);
          *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)(v47 + 201);
          v80[11] = v56;
          v81[0] = v55;
          v80[10] = v57;
          sub_1003580E0((uint64_t)v80);
          *(void *)uint64_t v47 = *((void *)&v23 + 1);
          *(void *)(v47 + 8) = v34;
          long long v58 = v93[0];
          *(_OWORD *)(v47 + 176) = v92;
          *(_OWORD *)(v47 + 192) = v58;
          *(_OWORD *)(v47 + 201) = *(_OWORD *)((char *)v93 + 9);
          long long v59 = v89;
          *(_OWORD *)(v47 + 112) = v88;
          *(_OWORD *)(v47 + 128) = v59;
          long long v60 = v91;
          *(_OWORD *)(v47 + 144) = v90;
          *(_OWORD *)(v47 + 160) = v60;
          long long v61 = v85;
          *(_OWORD *)(v47 + 48) = v84;
          *(_OWORD *)(v47 + 64) = v61;
          long long v62 = v87;
          *(_OWORD *)(v47 + 80) = v86;
          *(_OWORD *)(v47 + 96) = v62;
          long long v63 = v83;
          *(_OWORD *)(v47 + 16) = v82;
          *(_OWORD *)(v47 + 32) = v63;
        }
        else
        {
          long long v46 = v94;
          v94[(v39 >> 6) + 8] |= 1 << v39;
          *(void *)(v46[6] + 8 * v39) = v23;
          uint64_t v64 = v46[7] + 224 * v39;
          *(void *)uint64_t v64 = *((void *)&v23 + 1);
          *(void *)(v64 + 8) = v34;
          long long v65 = v85;
          *(_OWORD *)(v64 + 48) = v84;
          *(_OWORD *)(v64 + 64) = v65;
          long long v66 = v83;
          *(_OWORD *)(v64 + 16) = v82;
          *(_OWORD *)(v64 + 32) = v66;
          long long v67 = v89;
          *(_OWORD *)(v64 + 112) = v88;
          *(_OWORD *)(v64 + 128) = v67;
          long long v68 = v87;
          *(_OWORD *)(v64 + 80) = v86;
          *(_OWORD *)(v64 + 96) = v68;
          *(_OWORD *)(v64 + 201) = *(_OWORD *)((char *)v93 + 9);
          long long v69 = v93[0];
          *(_OWORD *)(v64 + 176) = v92;
          *(_OWORD *)(v64 + 192) = v69;
          long long v70 = v91;
          *(_OWORD *)(v64 + 144) = v90;
          *(_OWORD *)(v64 + 160) = v70;
          uint64_t v71 = v46[2];
          BOOL v72 = __OFADD__(v71, 1);
          uint64_t v73 = v71 + 1;
          if (v72) {
            goto LABEL_25;
          }
          _OWORD v46[2] = v73;
          id v74 = v29;
        }
        uint64_t v10 = v37;
        *uint64_t v37 = v46;

        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_100357EF0((uint64_t)v110);
        swift_unknownObjectRelease();
        sub_100358344((uint64_t)&v95);
        a3 = v75;
        if (!v79)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        --v79;
        uint64_t v11 = v78 + 232;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_1000333C8(0, (unint64_t *)&unk_100635660);
      uint64_t result = sub_1004CF910();
      __break(1u);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100355F58(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1004CD950();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *(void *)uint64_t v11 = sub_1004CE630();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  uint64_t v12 = sub_1004CD980();
  long long v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v13 = v9 + 8;
  v14(v11, v8);
  if (v12)
  {
    sub_1000333C8(0, (unint64_t *)&qword_100627D70);
    uint64_t v12 = sub_1004CF150();
    sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v11 = (char *)swift_allocObject();
    *((_OWORD *)v11 + 1) = xmmword_1004E12A0;
    unint64_t v13 = a1 >> 62;
    if (!(a1 >> 62))
    {
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
LABEL_4:
  *((void *)v11 + 7) = &type metadata for Int;
  *((void *)v11 + 8) = &protocol witness table for Int;
  *((void *)v11 + 4) = v15;
  sub_1004CC640();

  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1004CF6D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v17) {
      return result;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  unint64_t v18 = (unint64_t)[a3 userInterfaceStyle];
  long long v19 = (void **)v18;
  if (v18 >= 3)
  {
    type metadata accessor for UIUserInterfaceStyle(0);
    BOOL v41 = v21;
    long long aBlock = v19;
    sub_1004CC5F0();
    sub_100039184((uint64_t)&aBlock);
    uint64_t v20 = 1;
  }
  else
  {
    uint64_t v20 = qword_1004EE430[v18];
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = &_swiftEmptyDictionarySingleton;
  id v23 = [self sharedGenerator];
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v24 + 168) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v24 + 184) = v25;
  *(_OWORD *)(v24 + 200) = *(_OWORD *)(a2 + 160);
  long long v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v24 + 104) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v24 + 120) = v26;
  long long v27 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v24 + 136) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v24 + 152) = v27;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v24 + 40) = *(_OWORD *)a2;
  *(_OWORD *)(v24 + 56) = v28;
  long long v29 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v24 + 72) = *(_OWORD *)(a2 + 32);
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = v4;
  *(void *)(v24 + 32) = v20;
  uint64_t v30 = *(void *)(a2 + 176);
  *(_OWORD *)(v24 + 88) = v29;
  *(void *)(v24 + 216) = v30;
  *(void *)(v24 + 224) = a3;
  *(void *)(v24 + 232) = v22;
  uint64_t v42 = sub_100358020;
  uint64_t v43 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1003A422C;
  BOOL v41 = &unk_1005CF8B0;
  double v31 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001B084C(a2);
  id v32 = a3;
  swift_retain();
  swift_release();
  [v23 performInBatch:v31];
  _Block_release(v31);

  id v33 = *(NSObject **)(v4 + 32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v4;
  *(void *)(v34 + 24) = v22 + 16;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100359124;
  *(void *)(v35 + 24) = v34;
  uint64_t v42 = sub_1000BF250;
  uint64_t v43 = v35;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_100125C48;
  BOOL v41 = &unk_1005CF928;
  long long v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v33, v36);
  _Block_release(v36);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10035648C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  unint64_t v7 = a1;
  long long v8 = *(_OWORD *)(a4 + 144);
  long long v113 = *(_OWORD *)(a4 + 128);
  long long v114 = v8;
  long long v115 = *(_OWORD *)(a4 + 160);
  uint64_t v116 = *(void *)(a4 + 176);
  long long v9 = *(_OWORD *)(a4 + 80);
  long long v109 = *(_OWORD *)(a4 + 64);
  long long v110 = v9;
  long long v10 = *(_OWORD *)(a4 + 112);
  long long v111 = *(_OWORD *)(a4 + 96);
  long long v112 = v10;
  long long v11 = *(_OWORD *)(a4 + 16);
  long long v105 = *(_OWORD *)a4;
  long long v106 = v11;
  long long v12 = *(_OWORD *)(a4 + 48);
  long long v107 = *(_OWORD *)(a4 + 32);
  long long v108 = v12;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v13)
  {
    while (1)
    {
      double v14 = *(double *)(a4 + 48);
      double v15 = *(double *)(a4 + 56);
      id v69 = self;
      uint64_t v67 = v13 - 1;
      if (v13 < 1) {
        break;
      }
      uint64_t v16 = 0;
      uint64_t v17 = a6 + 2;
      unint64_t v68 = v7 & 0xC000000000000001;
      unint64_t v18 = &selRef_code;
      unint64_t v66 = v7;
      while (1)
      {
        uint64_t v73 = v16;
        if (v68)
        {
          long long v19 = (void *)sub_1004CF500();
        }
        else
        {
          long long v19 = *(void **)(v7 + 8 * v16 + 32);
          swift_unknownObjectRetain();
        }
        sub_1001B084C(a4);
        id v20 = a5;
        unsigned __int8 v21 = [v19 v18[256]];
        double v22 = 0.0;
        if ((v21 & 1) == 0)
        {
          double v23 = *(double *)(a4 + 80);
          if (v23 >= v14) {
            double v23 = v14;
          }
          double v22 = floor(v23) / 1.41421356;
        }
        objc_msgSend(v20, "displayScale", v66);
        id v25 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", a3, 1, 1, objc_msgSend(v19, v18[256]), v14, v15, v22, v24);
        id v26 = [v69 sharedGenerator];
        id v27 = [v26 thumbnailForNode:v19 descriptor:v25];

        *(void *)&long long v91 = v27;
        *((void *)&v91 + 1) = a3;
        long long v100 = v113;
        long long v101 = v114;
        long long v102 = v115;
        *(void *)&long long v103 = v116;
        long long v96 = v109;
        long long v97 = v110;
        long long v98 = v111;
        long long v99 = v112;
        long long v92 = v105;
        long long v93 = v106;
        long long v94 = v107;
        long long v95 = v108;
        *((void *)&v103 + 1) = v20;
        unsigned __int8 v104 = v21;
        id v28 = [v19 thumbnailIdentifier];
        swift_beginAccess();
        swift_unknownObjectRetain();
        sub_10035816C(&v91);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v90 = (void *)*v17;
        a6 = v90;
        *uint64_t v17 = 0x8000000000000000;
        unint64_t v7 = sub_1001DC19C((uint64_t)v28);
        uint64_t v31 = a6[2];
        BOOL v32 = (v30 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32)) {
          break;
        }
        char v34 = v30;
        if (a6[3] >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10049F310();
          }
        }
        else
        {
          sub_10049617C(v33, isUniquelyReferenced_nonNull_native);
          unint64_t v35 = sub_1001DC19C((uint64_t)v28);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_32;
          }
          unint64_t v7 = v35;
        }
        long long v86 = v101;
        long long v87 = v102;
        long long v88 = v103;
        unsigned __int8 v89 = v104;
        long long v82 = v97;
        long long v83 = v98;
        long long v84 = v99;
        long long v85 = v100;
        long long v78 = v93;
        long long v79 = v94;
        long long v80 = v95;
        long long v81 = v96;
        long long v76 = v91;
        long long v77 = v92;
        if (v34)
        {
          a6 = v90;
          uint64_t v37 = v90[7] + 224 * v7;
          long long v38 = *(_OWORD *)(v37 + 16);
          v74[0] = *(_OWORD *)v37;
          v74[1] = v38;
          long long v39 = *(_OWORD *)(v37 + 80);
          long long v41 = *(_OWORD *)(v37 + 32);
          long long v40 = *(_OWORD *)(v37 + 48);
          v74[4] = *(_OWORD *)(v37 + 64);
          v74[5] = v39;
          v74[2] = v41;
          v74[3] = v40;
          long long v42 = *(_OWORD *)(v37 + 144);
          long long v44 = *(_OWORD *)(v37 + 96);
          long long v43 = *(_OWORD *)(v37 + 112);
          v74[8] = *(_OWORD *)(v37 + 128);
          v74[9] = v42;
          v74[6] = v44;
          v74[7] = v43;
          long long v46 = *(_OWORD *)(v37 + 176);
          long long v45 = *(_OWORD *)(v37 + 192);
          long long v47 = *(_OWORD *)(v37 + 160);
          *(_OWORD *)((char *)v75 + 9) = *(_OWORD *)(v37 + 201);
          v74[11] = v46;
          v75[0] = v45;
          v74[10] = v47;
          sub_1003580E0((uint64_t)v74);
          long long v48 = v87;
          *(_OWORD *)(v37 + 168) = v86;
          *(_OWORD *)(v37 + 184) = v48;
          *(_OWORD *)(v37 + 200) = v88;
          long long v49 = v83;
          *(_OWORD *)(v37 + 104) = v82;
          *(_OWORD *)(v37 + 120) = v49;
          long long v50 = v85;
          *(_OWORD *)(v37 + 136) = v84;
          *(_OWORD *)(v37 + 152) = v50;
          long long v51 = v79;
          *(_OWORD *)(v37 + 40) = v78;
          *(_OWORD *)(v37 + 56) = v51;
          long long v52 = v81;
          *(_OWORD *)(v37 + 72) = v80;
          *(_OWORD *)(v37 + 88) = v52;
          long long v53 = v77;
          *(_OWORD *)(v37 + 8) = v76;
          *(void *)uint64_t v37 = v19;
          *(unsigned char *)(v37 + 216) = v89;
          *(_OWORD *)(v37 + 24) = v53;
        }
        else
        {
          a6 = v90;
          v90[(v7 >> 6) + 8] |= 1 << v7;
          *(void *)(a6[6] + 8 * v7) = v28;
          uint64_t v54 = a6[7] + 224 * v7;
          long long v55 = v77;
          *(_OWORD *)(v54 + 8) = v76;
          *(_OWORD *)(v54 + 24) = v55;
          long long v56 = v80;
          *(_OWORD *)(v54 + 88) = v81;
          *(_OWORD *)(v54 + 72) = v56;
          long long v57 = v78;
          *(_OWORD *)(v54 + 56) = v79;
          *(_OWORD *)(v54 + 40) = v57;
          long long v58 = v84;
          *(_OWORD *)(v54 + 152) = v85;
          *(_OWORD *)(v54 + 136) = v58;
          long long v59 = v82;
          *(_OWORD *)(v54 + 120) = v83;
          *(_OWORD *)(v54 + 104) = v59;
          *(_OWORD *)(v54 + 200) = v88;
          long long v60 = v86;
          *(_OWORD *)(v54 + 184) = v87;
          *(void *)uint64_t v54 = v19;
          *(unsigned char *)(v54 + 216) = v89;
          *(_OWORD *)(v54 + 168) = v60;
          uint64_t v61 = a6[2];
          BOOL v62 = __OFADD__(v61, 1);
          uint64_t v63 = v61 + 1;
          if (v62) {
            goto LABEL_26;
          }
          a6[2] = v63;
          id v64 = v28;
        }
        *uint64_t v17 = a6;

        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1001B03C0((uint64_t)&v91);
        swift_unknownObjectRelease();
        unint64_t v7 = v66;
        if (v67 == v73) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v16 = v73 + 1;
        unint64_t v18 = &selRef_code;
      }
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1004CF6D0();
      if (!v13) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_32:
    sub_1000333C8(0, (unint64_t *)&unk_100635660);
    uint64_t result = sub_1004CF910();
    __break(1u);
  }
  else
  {
LABEL_28:
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100356A4C(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  uint64_t v4 = *a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_100357628(v4, (uint64_t)sub_1003579A8, 0, isUniquelyReferenced_nonNull_native, &v7);
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_100356B10(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  long long v10 = *(_OWORD *)(a2 + 144);
  long long v42 = *(_OWORD *)(a2 + 128);
  long long v43 = v10;
  long long v44 = *(_OWORD *)(a2 + 160);
  uint64_t v45 = *(void *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v38 = *(_OWORD *)(a2 + 64);
  long long v39 = v11;
  long long v12 = *(_OWORD *)(a2 + 112);
  long long v40 = *(_OWORD *)(a2 + 96);
  long long v41 = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v34 = *(_OWORD *)a2;
  long long v35 = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v36 = *(_OWORD *)(a2 + 32);
  long long v37 = v14;
  uint64_t v27 = 0;
  double v15 = *(NSObject **)(v5 + 32);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v5;
  void v16[3] = a1;
  v16[4] = &v27;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1001B03A4;
  *(void *)(v17 + 24) = v16;
  char v30 = sub_1000674E0;
  uint64_t v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100125C48;
  long long v29 = &unk_1005CF838;
  unint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v27;
    if (v27)
    {
      swift_release();
    }
    else
    {
      unint64_t v21 = (unint64_t)[a3 userInterfaceStyle];
      unint64_t v22 = v21;
      if (v21 >= 3)
      {
        type metadata accessor for UIUserInterfaceStyle(0);
        long long v29 = v24;
        aBlock[0] = v22;
        sub_1004CC5F0();
        sub_100039184((uint64_t)aBlock);
        uint64_t v23 = 1;
      }
      else
      {
        uint64_t v23 = qword_1004EE430[v21];
      }
      *(void *)id v26 = v23;
      *(_OWORD *)&v26[136] = v42;
      *(_OWORD *)&v26[152] = v43;
      *(_OWORD *)&v26[168] = v44;
      *(_OWORD *)&v26[72] = v38;
      *(_OWORD *)&v26[88] = v39;
      *(_OWORD *)&v26[104] = v40;
      *(_OWORD *)&v26[120] = v41;
      *(_OWORD *)&v26[8] = v34;
      *(_OWORD *)&v26[24] = v35;
      *(_OWORD *)&v26[40] = v36;
      *(_OWORD *)&v26[56] = v37;
      *(void *)&v26[184] = v45;
      *(void *)&v26[192] = a3;
      v26[200] = a4 & 1;
      v32[10] = *(_OWORD *)&v26[160];
      v33[0] = *(_OWORD *)&v26[176];
      v32[6] = *(_OWORD *)&v26[96];
      v32[7] = *(_OWORD *)&v26[112];
      v32[8] = *(_OWORD *)&v26[128];
      v32[9] = *(_OWORD *)&v26[144];
      long long v32[2] = *(_OWORD *)&v26[32];
      v32[3] = *(_OWORD *)&v26[48];
      v32[4] = *(_OWORD *)&v26[64];
      _OWORD v32[5] = *(_OWORD *)&v26[80];
      v32[0] = *(_OWORD *)v26;
      v32[1] = *(_OWORD *)&v26[16];
      *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)&v26[185];
      sub_1001B084C(a2);
      id v25 = a3;
      sub_100357D1C(a1, v32, (uint64_t)aBlock);
      sub_100357EF0((uint64_t)v26);
      uint64_t v20 = aBlock[0];
      swift_unknownObjectRetain();
      sub_1001B03C0((uint64_t)aBlock);
      swift_release();
      swift_unknownObjectRelease();
    }
    return v20;
  }
  return result;
}

uint64_t sub_100356E14(int a1, id a2, void *a3)
{
  id v4 = [a2 thumbnailIdentifier];
  swift_beginAccess();
  sub_1003B47C8((uint64_t)v4, v7);
  swift_endAccess();

  sub_100031790((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_100637E40);
  sub_100031790((uint64_t)v8, (uint64_t)&v9, (uint64_t *)&unk_100637E40);
  uint64_t result = sub_1000EB4EC(&v9);
  if (result != 1)
  {
    swift_unknownObjectRelease();
    uint64_t v6 = v10[0];
    swift_unknownObjectRetain();
    sub_1001B03C0((uint64_t)v10);
    *a3 = v6;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for DOCThumbnailLoadingPool()
{
  return self;
}

void destroy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1)
{
  swift_unknownObjectRelease();

  uint64_t v2 = *(void **)(a1 + 200);
}

uint64_t initializeWithCopy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v11 = *(void **)(a2 + 200);
  *(void *)(a1 + 200) = v11;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  swift_unknownObjectRetain();
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v11;
  return a1;
}

uint64_t assignWithCopy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  long long v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  long long v10 = *(void **)(a2 + 40);
  long long v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v10;
  id v12 = v10;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  id v13 = *(void **)(a2 + 200);
  id v14 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v13;
  id v15 = v13;

  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

__n128 initializeWithTake for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  long long v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  id v9 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 209)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 209) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry()
{
  return &type metadata for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry;
}

uint64_t sub_10035735C()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10035739C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003573AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003573BC()
{
  return swift_release();
}

uint64_t sub_1003573C4()
{
  v5[0] = sub_1004CE620();
  uint64_t v1 = *(void *)(v5[0] - 8);
  __chkstk_darwin();
  long long v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CE5F0();
  __chkstk_darwin();
  sub_1004CD8C0();
  __chkstk_darwin();
  *(void *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  *(unsigned char *)(v0 + 24) = 0;
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  sub_1004CD880();
  v5[1] = &_swiftEmptyArrayStorage;
  sub_1002ADEA0((unint64_t *)&qword_10062CDB0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100031648((uint64_t *)&unk_100626B80);
  sub_10005B6A0((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
  sub_1004CF330();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5[0]);
  *(void *)(v0 + 32) = sub_1004CE670();
  return v0;
}

uint64_t sub_100357628(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v84 = a1;
  uint64_t v85 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v86 = v8;
  uint64_t v87 = 0;
  uint64_t v88 = v11 & v9;
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100357AA0((uint64_t)&v70);
  sub_100031790((uint64_t)&v70, (uint64_t)v68, &qword_100635658);
  sub_100031790((uint64_t)v68, (uint64_t)v69, &qword_100635658);
  if (sub_1000EB4EC(v69) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10031C144();
    return swift_release();
  }
  while (1)
  {
    uint64_t v31 = v70;
    long long v65 = v81;
    long long v66 = v82;
    v67[0] = v83[0];
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v83 + 9);
    long long v61 = v77;
    long long v62 = v78;
    long long v63 = v79;
    long long v64 = v80;
    long long v57 = v73;
    long long v58 = v74;
    long long v59 = v75;
    long long v60 = v76;
    long long v55 = v71;
    long long v56 = v72;
    BOOL v32 = (void *)*a5;
    unint64_t v34 = sub_1001DC19C((uint64_t)v70);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if (a4)
      {
        if (v33) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10049F310();
        if (v38) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10049617C(v37, a4 & 1);
      unint64_t v39 = sub_1001DC19C((uint64_t)v31);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_22;
      }
      unint64_t v34 = v39;
      if (v38)
      {
LABEL_7:
        id v13 = (void *)*a5;

        id v14 = (_OWORD *)(v13[7] + 224 * v34);
        long long v15 = v14[1];
        v53[0] = *v14;
        v53[1] = v15;
        long long v16 = v14[5];
        long long v18 = v14[2];
        long long v17 = v14[3];
        v53[4] = v14[4];
        void v53[5] = v16;
        v53[2] = v18;
        v53[3] = v17;
        long long v19 = v14[6];
        long long v20 = v14[7];
        long long v21 = v14[9];
        v53[8] = v14[8];
        v53[9] = v21;
        v53[6] = v19;
        v53[7] = v20;
        long long v22 = v14[10];
        long long v23 = v14[11];
        long long v24 = v14[12];
        *(_OWORD *)&v54[9] = *(_OWORD *)((char *)v14 + 201);
        v53[11] = v23;
        *(_OWORD *)uint64_t v54 = v24;
        v53[10] = v22;
        sub_1003580E0((uint64_t)v53);
        long long v25 = v66;
        v14[10] = v65;
        v14[11] = v25;
        v14[12] = v67[0];
        *(_OWORD *)((char *)v14 + 201) = *(_OWORD *)((char *)v67 + 9);
        long long v26 = v62;
        v14[6] = v61;
        _OWORD v14[7] = v26;
        long long v27 = v64;
        v14[8] = v63;
        v14[9] = v27;
        long long v28 = v58;
        v14[2] = v57;
        void v14[3] = v28;
        long long v29 = v60;
        v14[4] = v59;
        v14[5] = v29;
        long long v30 = v56;
        *id v14 = v55;
        v14[1] = v30;
        goto LABEL_8;
      }
    }
    long long v41 = (void *)*a5;
    *(void *)(*a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
    *(void *)(v41[6] + 8 * v34) = v31;
    long long v42 = (_OWORD *)(v41[7] + 224 * v34);
    long long v43 = v60;
    v42[4] = v59;
    v42[5] = v43;
    long long v44 = v58;
    v42[2] = v57;
    v42[3] = v44;
    long long v45 = v64;
    v42[8] = v63;
    v42[9] = v45;
    long long v46 = v62;
    v42[6] = v61;
    v42[7] = v46;
    *(_OWORD *)((char *)v42 + 201) = *(_OWORD *)((char *)v67 + 9);
    long long v47 = v67[0];
    long long v48 = v65;
    v42[11] = v66;
    v42[12] = v47;
    v42[10] = v48;
    long long v49 = v56;
    _OWORD *v42 = v55;
    v42[1] = v49;
    uint64_t v50 = v41[2];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51) {
      goto LABEL_21;
    }
    v41[2] = v52;
LABEL_8:
    sub_100357AA0((uint64_t)&v70);
    sub_100031790((uint64_t)&v70, (uint64_t)v68, &qword_100635658);
    sub_100031790((uint64_t)v68, (uint64_t)v69, &qword_100635658);
    a4 = 1;
    if (sub_1000EB4EC(v69) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_1000333C8(0, (unint64_t *)&unk_100635660);
  uint64_t result = sub_1004CF910();
  __break(1u);
  return result;
}

void *sub_1003579A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  long long v3 = *(_OWORD *)(a1 + 184);
  v11[10] = *(_OWORD *)(a1 + 168);
  v11[11] = v3;
  v12[0] = *(_OWORD *)(a1 + 200);
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(a1 + 209);
  long long v4 = *(_OWORD *)(a1 + 120);
  void v11[6] = *(_OWORD *)(a1 + 104);
  v11[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 152);
  v11[8] = *(_OWORD *)(a1 + 136);
  v11[9] = v5;
  long long v6 = *(_OWORD *)(a1 + 56);
  _OWORD v11[2] = *(_OWORD *)(a1 + 40);
  v11[3] = v6;
  long long v7 = *(_OWORD *)(a1 + 88);
  v11[4] = *(_OWORD *)(a1 + 72);
  _OWORD v11[5] = v7;
  long long v8 = *(_OWORD *)(a1 + 24);
  v11[0] = *(_OWORD *)(a1 + 8);
  v11[1] = v8;
  *(_OWORD *)(a2 + 168) = *(_OWORD *)(a1 + 168);
  *(_OWORD *)(a2 + 184) = *(_OWORD *)(a1 + 184);
  *(_OWORD *)(a2 + 200) = *(_OWORD *)(a1 + 200);
  *(_OWORD *)(a2 + 209) = *(_OWORD *)(a1 + 209);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 136) = *(_OWORD *)(a1 + 136);
  *(_OWORD *)(a2 + 152) = *(_OWORD *)(a1 + 152);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)a2 = v2;
  id v9 = v2;
  return sub_10035807C(v11);
}

uint64_t sub_100357AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = (v4 - 1) & v4;
    unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    uint64_t v9 = *(void *)(v3 + 56);
    uint64_t v10 = *(void **)(*(void *)(v3 + 48) + 8 * v8);
    uint64_t v11 = (long long *)(v9 + 224 * v8);
    long long v12 = v11[1];
    long long v33 = *v11;
    long long v34 = v12;
    long long v13 = v11[2];
    long long v14 = v11[3];
    long long v15 = v11[5];
    long long v37 = v11[4];
    long long v38 = v15;
    long long v35 = v13;
    long long v36 = v14;
    long long v16 = v11[6];
    long long v17 = v11[7];
    long long v18 = v11[9];
    long long v41 = v11[8];
    long long v42 = v18;
    long long v39 = v16;
    long long v40 = v17;
    long long v19 = v11[10];
    long long v20 = v11[11];
    long long v21 = v11[12];
    *(_OWORD *)((char *)v45 + 9) = *(long long *)((char *)v11 + 201);
    long long v44 = v20;
    v45[0] = v21;
    long long v43 = v19;
    *(void *)long long v46 = v10;
    *(_OWORD *)&v46[40] = v35;
    *(_OWORD *)&v46[56] = v36;
    *(_OWORD *)&v46[72] = v37;
    *(_OWORD *)&v46[88] = v38;
    *(_OWORD *)&v46[104] = v39;
    *(_OWORD *)&v46[120] = v40;
    *(_OWORD *)&v46[136] = v41;
    *(_OWORD *)&v46[152] = v18;
    *(_OWORD *)&v46[168] = v19;
    *(_OWORD *)&v46[184] = v20;
    *(_OWORD *)&v46[200] = v21;
    *(_OWORD *)&v46[209] = *(_OWORD *)((char *)v45 + 9);
    *(_OWORD *)&v46[24] = v34;
    *(_OWORD *)&v46[8] = v33;
    v1[3] = v6;
    v1[4] = v7;
    long long v22 = (void (*)(_OWORD *))v1[5];
    v31[12] = *(_OWORD *)&v46[192];
    v31[13] = *(_OWORD *)&v46[208];
    char v32 = v46[224];
    v31[8] = *(_OWORD *)&v46[128];
    v31[9] = *(_OWORD *)&v46[144];
    v31[10] = *(_OWORD *)&v46[160];
    v31[11] = *(_OWORD *)&v46[176];
    void v31[4] = *(_OWORD *)&v46[64];
    uint64_t v31[5] = *(_OWORD *)&v46[80];
    v31[6] = *(_OWORD *)&v46[96];
    v31[7] = *(_OWORD *)&v46[112];
    v31[0] = *(_OWORD *)v46;
    v31[1] = *(_OWORD *)&v46[16];
    void v31[2] = *(_OWORD *)&v46[32];
    v31[3] = *(_OWORD *)&v46[48];
    id v23 = v10;
    sub_10035807C(&v33);
    v22(v31);
    sub_100358344((uint64_t)v46);
    return DOCSplitBrowserViewController.didCommitPreview(of:)(a1);
  }
  int64_t v25 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v26 = (unint64_t)(v1[2] + 64) >> 6;
    if (v25 < v26)
    {
      uint64_t v27 = v1[1];
      unint64_t v28 = *(void *)(v27 + 8 * v25);
      if (v28)
      {
LABEL_7:
        uint64_t v7 = (v28 - 1) & v28;
        unint64_t v8 = __clz(__rbit64(v28)) + (v25 << 6);
        int64_t v6 = v25;
        goto LABEL_3;
      }
      int64_t v29 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v26)
      {
        unint64_t v28 = *(void *)(v27 + 8 * v29);
        if (v28)
        {
LABEL_10:
          int64_t v25 = v29;
          goto LABEL_7;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v26)
        {
          unint64_t v28 = *(void *)(v27 + 8 * (v5 + 3));
          if (v28)
          {
            int64_t v25 = v5 + 3;
            goto LABEL_7;
          }
          int64_t v29 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v26)
          {
            unint64_t v28 = *(void *)(v27 + 8 * v29);
            if (v28) {
              goto LABEL_10;
            }
            int64_t v25 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v26)
            {
              unint64_t v28 = *(void *)(v27 + 8 * v25);
              if (v28) {
                goto LABEL_7;
              }
              int64_t v6 = v26 - 1;
              int64_t v30 = v5 + 6;
              while (v26 != v30)
              {
                unint64_t v28 = *(void *)(v27 + 8 * v30++);
                if (v28)
                {
                  int64_t v25 = v30 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    sub_100358144((uint64_t)v46);
    return sub_100031790((uint64_t)v46, a1, &qword_100635658);
  }
  return result;
}

uint64_t sub_100357D1C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)int64_t v26 = *((_OWORD *)a2 + 11);
  *(_OWORD *)&v26[9] = *(_OWORD *)((char *)a2 + 185);
  double v6 = 0.0;
  double v7 = *((double *)a2 + 7);
  if ((a2[25] & 1) == 0)
  {
    double v8 = *((double *)a2 + 11);
    if (v8 >= v7) {
      double v8 = *((double *)a2 + 7);
    }
    double v6 = floor(v8) / 1.41421356;
  }
  double v9 = *((double *)a2 + 8);
  objc_msgSend((id)a2[24], "displayScale", *(_OWORD *)a2, *((_OWORD *)a2 + 1), *((_OWORD *)a2 + 2), *((_OWORD *)a2 + 3), *((_OWORD *)a2 + 4), *((_OWORD *)a2 + 5), *((_OWORD *)a2 + 6), *((_OWORD *)a2 + 7), *((_OWORD *)a2 + 8), *((_OWORD *)a2 + 9), *((_OWORD *)a2 + 10), *(void *)v26, *(void *)&v26[8], *(void *)&v26[16], *(void *)&v26[24]);
  id v11 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", *a2, 1, 1, objc_msgSend(a1, "isFolder"), v7, v9, v6, v10);
  id v12 = [self sharedGenerator];
  id v13 = [v12 thumbnailForNode:a1 descriptor:v11];

  *(_OWORD *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 168) = v25;
  *(_OWORD *)(a3 + 184) = *(_OWORD *)v27;
  *(_OWORD *)(a3 + 193) = *(_OWORD *)&v27[9];
  *(_OWORD *)(a3 + 88) = v20;
  *(_OWORD *)(a3 + 104) = v21;
  *(_OWORD *)(a3 + 120) = v22;
  *(_OWORD *)(a3 + 136) = v23;
  *(_OWORD *)(a3 + 24) = v16;
  *(_OWORD *)(a3 + 40) = v17;
  *(_OWORD *)(a3 + 56) = v18;
  *(_OWORD *)(a3 + 72) = v19;
  *(_OWORD *)(a3 + 8) = v15;
  uint64_t result = sub_100357F38((uint64_t)a2);
  *(void *)a3 = v13;
  return result;
}

uint64_t sub_100357EF0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 24);
  unint64_t v4 = *(void **)(a1 + 32);

  return a1;
}

uint64_t sub_100357F38(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 32);
  unint64_t v4 = *(void **)(a1 + 192);
  id v5 = *(id *)(a1 + 8);
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  return a1;
}

uint64_t sub_100357F80()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100357FB8()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return _swift_deallocObject(v0, 240, 7);
}

uint64_t sub_100358020()
{
  return sub_10035648C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40, *(void **)(v0 + 224), *(void **)(v0 + 232));
}

uint64_t sub_100358034()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035806C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_10035807C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  uint64_t v3 = (void *)a1[5];
  unint64_t v4 = (void *)a1[6];
  id v5 = (void *)a1[26];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  return a1;
}

uint64_t sub_1003580E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 40);
  unint64_t v4 = *(void **)(a1 + 48);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return a1;
}

double sub_100358144(uint64_t a1)
{
  *(unsigned char *)(a1 + 224) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void *sub_10035816C(void *a1)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[4];
  unint64_t v4 = (void *)a1[5];
  id v5 = (void *)a1[25];
  swift_unknownObjectRetain();
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  return a1;
}

uint64_t sub_1003581C4()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003581FC()
{
  return sub_10035565C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_100358208()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100358218()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100358250()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100358298()
{
  return sub_1003559E0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1003582A4()
{
  return sub_100356A4C(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1003582C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003582D0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 48);
  unint64_t v4 = *(void **)(a1 + 56);
  id v5 = *(void **)(a1 + 216);
  id v6 = *(id *)a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  return a1;
}

uint64_t sub_100358344(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 32);
  unint64_t v4 = *(void **)(a1 + 48);
  id v5 = *(void **)(a1 + 56);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_1003583B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v36 = sub_1004CC680();
  long long v35 = *(uint64_t (***)(uint64_t))(v36 - 8);
  __chkstk_darwin(v36);
  id v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1004CD900();
  uint64_t v42 = *(void *)(v44 - 8);
  uint64_t v7 = __chkstk_darwin(v44);
  long long v37 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v41 = (char *)v33 - v9;
  uint64_t v38 = sub_1004CD860();
  long long v40 = *(void **)(v38 - 8);
  __chkstk_darwin(v38);
  id v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1004CD8C0();
  uint64_t v39 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  id v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v54 = 0;
  uint64_t v46 = a3;
  swift_retain();
  dispatch_group_t v14 = dispatch_group_create();
  long long v15 = *(NSObject **)(a2 + 32);
  long long v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  void v16[3] = v14;
  v16[4] = &v54;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100358C3C;
  *(void *)(v17 + 24) = v16;
  uint64_t v52 = sub_1000BF250;
  long long v53 = (void *)v17;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_100125C48;
  BOOL v51 = &unk_1005CFB30;
  long long v18 = _Block_copy(&aBlock);
  swift_retain();
  long long v19 = v14;
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    if (v54 == 1)
    {
      uint64_t v21 = swift_allocObject();
      *(unsigned char *)(v21 + 16) = 0;
      long long v22 = (void *)swift_allocObject();
      uint64_t v36 = v21;
      _OWORD v22[2] = v21;
      uint64_t v22[3] = sub_100358BF4;
      v22[4] = v46;
      uint64_t v52 = sub_100358C6C;
      long long v53 = v22;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      long long v35 = &v50;
      uint64_t v50 = sub_1003A422C;
      BOOL v51 = &unk_1005CFBA8;
      long long v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      long long v24 = v13;
      sub_1004CD880();
      long long v47 = _swiftEmptyArrayStorage;
      _OWORD v33[2] = (id)sub_1002ADEA0((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      v33[1] = (id)sub_100031648((uint64_t *)&unk_100628370);
      void v33[3] = (id)sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
      uint64_t v25 = v38;
      sub_1004CF330();
      sub_1004CE5E0();
      _Block_release(v23);
      long long v34 = (void (*)(char *, uint64_t))v40[1];
      v34(v11, v25);
      long long v40 = v16;
      uint64_t v39 = *(void *)(v39 + 8);
      ((void (*)(char *, uint64_t))v39)(v13, v43);
      swift_release();
      int64_t v26 = v37;
      sub_1004CD8E0();
      uint64_t v27 = v41;
      sub_1004CD970();
      v33[0] = v19;
      uint64_t v42 = *(void *)(v42 + 8);
      ((void (*)(char *, uint64_t))v42)(v26, v44);
      unint64_t v28 = (void *)swift_allocObject();
      void v28[2] = v36;
      v28[3] = sub_100358BF4;
      v28[4] = v46;
      uint64_t v52 = sub_100358C7C;
      long long v53 = v28;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      uint64_t v50 = sub_1003A422C;
      BOOL v51 = &unk_1005CFBF8;
      int64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      sub_1004CD880();
      long long v47 = _swiftEmptyArrayStorage;
      sub_1004CF330();
      sub_1004CE600();
      _Block_release(v29);

      v34(v11, v25);
      ((void (*)(char *, uint64_t))v39)(v24, v43);
      ((void (*)(char *, uint64_t))v42)(v27, v44);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1004CE7B0();
      int64_t v30 = (void *)sub_1004CC480();
      sub_1004CC670();
      sub_1004CC660();

      ((void (*)(char *, uint64_t))v35[1])(v6, v36);
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        char v32 = Strong;
        sub_10016410C();
        swift_release();

        long long v19 = v32;
      }
      else
      {
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

void sub_100358BF4()
{
}

uint64_t sub_100358BFC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100358C3C()
{
  return sub_100354954(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), *(unsigned char **)(v0 + 32));
}

uint64_t sub_100358C48()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100358C58()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100358C6C()
{
  return sub_100354E1C(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_100358C7C()
{
  return sub_100354FA8(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_100358C88()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100358CC0()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100358D04()
{
  return _swift_deallocObject(v0, 32, 7);
}

void destroy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 192);
}

uint64_t initializeWithCopy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  uint64_t v7 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v7;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  id v11 = v7;
  return a1;
}

uint64_t assignWithCopy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 32);
  id v11 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v10;
  id v12 = v10;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  id v13 = *(void **)(a2 + 192);
  dispatch_group_t v14 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v13;
  id v15 = v13;

  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

__n128 initializeWithTake for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  long long v9 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 201)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 200) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 201) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 201) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters()
{
  return &type metadata for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters;
}

double sub_100359180()
{
  double result = 4.0;
  xmmword_100635670 = xmmword_1004EE450;
  unk_100635680 = xmmword_1004EE450;
  return result;
}

id sub_100359198()
{
  id result = [self tintColor];
  qword_100635690 = (uint64_t)result;
  return result;
}

void sub_1003591D4()
{
  qword_100635698 = 0x4040000000000000;
}

void sub_1003591E4()
{
  qword_1006356A0 = 0x406F400000000000;
}

void sub_1003591F8()
{
  qword_1006356A8 = 0x4020000000000000;
}

void sub_100359208()
{
  qword_1006356B0 = 0x404B000000000000;
}

void sub_100359218()
{
  qword_1006356B8 = 0x402A000000000000;
}

void sub_100359228()
{
  qword_1006356C0 = 0x4049000000000000;
}

id sub_10035944C()
{
  return sub_10035DB28(0, type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator);
}

id sub_100359468()
{
  if ([v0 isHighlighted])
  {
    if (qword_100626998 != -1) {
      swift_once();
    }
    id v1 = (id)qword_100635690;
  }
  else
  {
    id v1 = [self clearColor];
  }
  unint64_t v2 = v1;
  [v0 setBackgroundColor:v1];

  id v3 = [v0 layer];
  [v3 setCornerCurve:kCACornerCurveContinuous];

  id v4 = [v0 layer];
  [v4 setMasksToBounds:1];

  LODWORD(v4) = [v0 isHighlighted];
  long long v5 = self;
  long long v6 = &selRef_lightTextColor;
  if (!v4) {
    long long v6 = &selRef_labelColor;
  }
  id v7 = [v5 *v6];
  [v0 setTextColor:v7];

  id v8 = [self whiteColor];
  [v0 setHighlightedTextColor:v8];

  return [v0 setNumberOfLines:1];
}

id sub_100359898()
{
  return sub_10035DB28(0, type metadata accessor for DOCTokenChainView.DOCTextTokenView);
}

id sub_1003598B4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_showTrailingChevron] = 1;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for DOCTokenChainView();
  id v9 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  [v9 setAlignment:3];
  id v10 = [v9 heightAnchor];
  if (qword_1006269A0 != -1) {
    swift_once();
  }
  id v11 = [v10 constraintGreaterThanOrEqualToConstant:*(double *)&qword_100635698];

  [v11 setActive:1];
  id v12 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v9 action:"tap:"];
  [v9 addGestureRecognizer:v12];

  return v9;
}

id sub_100359AE4()
{
  id v1 = v0;
  uint64_t v2 = sub_1004CD950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *long long v5 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = sub_1004CD980();
  id result = (id)(*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount] = v11;
  id result = (id)sub_100359C68((uint64_t)v1);
  uint64_t v12 = *(void *)&v1[v8];
  BOOL v10 = __OFSUB__(v12, 1);
  uint64_t v13 = v12 - 1;
  if (!v10)
  {
    *(void *)&v1[v8] = v13;
    sub_10035A628();
    objc_super v14 = (objc_class *)type metadata accessor for DOCTokenChainView();
    v15.receiver = v1;
    v15.super_class = v14;
    return objc_msgSendSuper2(&v15, "becomeFirstResponder");
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100359C68(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (v3 = Strong, id v4 = [Strong text], v3, v4))
  {
    uint64_t v5 = sub_1004CDB50();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v9 = v8 != 0;
  }
  else
  {
    BOOL v9 = 0;
  }
  *(unsigned char *)(a1
           + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_showTrailingChevron) = v9;
  sub_10035A628();
  uint64_t v10 = a1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens;
  uint64_t result = swift_beginAccess();
  int v12 = *(void *)(*(void *)v10 + 16) != 0;
  int v13 = *(unsigned __int8 *)(a1
                           + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection) = v12;
  if (v13 != v12) {
    return sub_10035A628();
  }
  return result;
}

uint64_t sub_100359D9C()
{
  id v1 = v0;
  uint64_t v2 = sub_1004CD950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (objc_class *)type metadata accessor for DOCTokenChainView();
  v17.receiver = v0;
  v17.super_class = v6;
  id v7 = objc_msgSendSuper2(&v17, "resignFirstResponder");
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *uint64_t v5 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v8 = sub_1004CD980();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount;
  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount] = v13;
  int v14 = v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection];
  v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection] = 0;
  if (v14) {
    sub_10035A628();
  }
  v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_showTrailingChevron] = 1;
  uint64_t result = sub_10035A628();
  uint64_t v15 = *(void *)&v1[v10];
  BOOL v12 = __OFSUB__(v15, 1);
  uint64_t v16 = v15 - 1;
  if (!v12)
  {
    *(void *)&v1[v10] = v16;
    sub_10035A628();
    return (uint64_t)v7;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100359FA0()
{
  [v0 effectiveUserInterfaceLayoutDirection];
  sub_1004CDB50();
  NSString v1 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v2 = [self keyCommandWithInput:v1 modifierFlags:0 action:"directionKeyCommand:"];

  [v2 setWantsPriorityOverSystemBehavior:1];
  sub_100031648(&qword_100628240);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1004E5710;
  *(void *)(v3 + 32) = v2;
  uint64_t v5 = v3;
  sub_1004CDE50();
  return v5;
}

void sub_10035A098(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection) = 2;
  if (v3 != 2) {
    sub_10035A628();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_10010E21C(a1, (uint64_t)v15);
    if (v16)
    {
      sub_1000333C8(0, &qword_100635968);
      if (swift_dynamicCast())
      {
        id v6 = v14;
        if (sub_1004CEF10())
        {
        }
        else
        {
          sub_10010E21C(a1, (uint64_t)v15);
          uint64_t v7 = v16;
          if (v16)
          {
            char v8 = sub_100032FD8(v15, v16);
            uint64_t v9 = *(void *)(v7 - 8);
            __chkstk_darwin(v8);
            uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v9 + 16))(v11);
            uint64_t v12 = sub_1004CF870();
            (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
            sub_100039184((uint64_t)v15);
          }
          else
          {
            uint64_t v12 = 0;
          }
          [v5 selectAll:v12];

          swift_unknownObjectRelease();
        }
      }
      else
      {
      }
    }
    else
    {

      sub_100035F60((uint64_t)v15);
    }
  }
}

void sub_10035A318()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens);
  swift_beginAccess();
  if (!*(void *)(*v2 + 16)) {
    goto LABEL_6;
  }
  swift_beginAccess();
  int v3 = (void *)*v2;
  if (!*(void *)(*v2 + 16))
  {
    __break(1u);
LABEL_16:
    int v3 = sub_100384B20(v3);
    uint64_t v4 = v3[2];
    if (v4) {
      goto LABEL_5;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v4 = v3[2];
  if (!v4) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t v5 = v4 - 1;
  sub_100039184((uint64_t)&v3[5 * v4 - 1]);
  v3[2] = v5;
  *id v2 = (uint64_t)v3;
  swift_endAccess();
  sub_10035A628();
LABEL_6:
  sub_10035A628();
  uint64_t v6 = v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *v2;
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v10(v1, v9, ObjectType, v7);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    [Strong setText:0];
  }
  uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    id v14 = v13;
    [v13 becomeFirstResponder];
  }
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    NSString v17 = sub_1004CDB10();
    [v16 insertText:v17];
  }
}

uint64_t sub_10035A628()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100031648(&qword_100635950);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CCA80();
  uint64_t result = __chkstk_darwin(v5);
  if (*(void *)(v1
                 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount))
    return result;
  uint64_t v55 = result;
  id v7 = [(id)v1 arrangedSubviews];
  v45[1] = sub_1000333C8(0, (unint64_t *)&qword_10062BA40);
  unint64_t v8 = sub_1004CDE30();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1004CF6D0();
    uint64_t v9 = result;
    if (!result) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_11;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return result;
  }
  uint64_t v10 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v11 = (id)sub_1004CF500();
    }
    else {
      id v11 = *(id *)(v8 + 8 * v10 + 32);
    }
    uint64_t v12 = v11;
    ++v10;
    [(id)v1 removeArrangedSubview:v11];
    [v12 removeFromSuperview];
  }
  while (v9 != v10);
LABEL_11:
  swift_bridgeObjectRelease_n();
  uint64_t v54 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection))
  {
    [(id)v1 setHoverStyle:0];
  }
  else
  {
    sub_1000333C8(0, &qword_100635960);
    sub_1004CC7B0();
    sub_1004CD2E0();
    uint64_t v13 = sub_1004CD2F0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 0, 1, v13);
    id v14 = (void *)sub_1004CE2B0();
    [(id)v1 setHoverStyle:v14];
  }
  unint64_t v15 = v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens;
  swift_beginAccess();
  uint64_t v55 = v15;
  uint64_t v16 = *(void *)v15;
  unint64_t v17 = *(void *)(*(void *)v15 + 16);
  uint64_t v18 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_showTrailingChevron;
  uint64_t v53 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font;
  uint64_t v48 = v16 + 32;
  long long v47 = (long long *)&v56;
  uint64_t v46 = (uint64_t)&v57 + 8;
  uint64_t v52 = (long long *)v61;
  uint64_t v49 = v16;
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  BOOL v51 = (unsigned char *)(v1 + v18);
  for (unint64_t i = v17; ; v17 = i)
  {
    if (v19 == v17)
    {
      long long v58 = 0u;
      long long v59 = 0u;
      unint64_t v19 = v17;
      long long v57 = 0u;
    }
    else
    {
      if (v19 >= *(void *)(v49 + 16)) {
        goto LABEL_42;
      }
      long long v20 = v47;
      sub_100049660(v48 + 40 * v19, (uint64_t)v47);
      *(void *)&long long v57 = v19;
      sub_100033120(v20, v46);
      ++v19;
    }
    sub_10035E6DC((uint64_t)&v57, (uint64_t)&v60);
    if (!v61[3]) {
      break;
    }
    uint64_t v21 = v60;
    sub_100033120(v52, (uint64_t)&v57);
    type metadata accessor for DOCTokenChainView.DOCTextTokenView();
    id v22 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v22 setFont:*(void *)(v1 + v53)];
    uint64_t v24 = *((void *)&v58 + 1);
    uint64_t v23 = v59;
    sub_100032FD8(&v57, *((uint64_t *)&v58 + 1));
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    id v26 = v22;
    v25(v24, v23);
    NSString v27 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    [v26 setText:v27];

    id v28 = [v26 widthAnchor];
    if (qword_1006269A8 != -1) {
      swift_once();
    }
    id v29 = [v28 constraintLessThanOrEqualToConstant:*(double *)&qword_1006356A0];

    BOOL v30 = 1;
    [v29 setActive:1];

    [v26 setAdjustsFontForContentSizeCategory:1];
    [v26 setLineBreakMode:5];
    if (*(unsigned char *)(v1 + v54))
    {
      if (*(unsigned char *)(v1 + v54) == 1) {
        BOOL v30 = v21 == *(void *)(*(void *)v55 + 16) - 1;
      }
      [v26 setHighlighted:v30];
    }
    [(id)v1 addArrangedSubview:v26];
    uint64_t v31 = *(void *)(*(void *)v55 + 16);
    BOOL v32 = (*v51 & 1) == 0;
    BOOL v33 = __OFSUB__(v31, v32);
    uint64_t v34 = v31 - v32;
    if (v33)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v21 >= v34)
    {
      sub_100039184((uint64_t)&v57);
    }
    else
    {
      sub_10035B074();
      uint64_t v36 = v35;
      [(id)v1 addArrangedSubview:v35];

      sub_100039184((uint64_t)&v57);
    }
  }
  swift_bridgeObjectRelease();
  id v37 = [(id)v1 arrangedSubviews];
  unint64_t v1 = sub_1004CDE30();

  if (!(v1 >> 62))
  {
    uint64_t v38 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v38) {
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_33;
  }
LABEL_43:
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v38 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_33:
  if (v38 < 1) {
    goto LABEL_47;
  }
  for (uint64_t j = 0; j != v38; ++j)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v40 = (id)sub_1004CF500();
    }
    else {
      id v40 = *(id *)(v1 + 8 * j + 32);
    }
    long long v41 = v40;
    type metadata accessor for DOCTokenChainView.DOCTextTokenView();
    uint64_t v42 = (void *)swift_dynamicCastClass();
    if (v42)
    {
      uint64_t v44 = v42;
      LODWORD(v43) = 1148846080;
      [v42 setContentHuggingPriority:0 forAxis:v43];
      [v44 sizeToFit];
    }
  }
  return swift_bridgeObjectRelease_n();
}

void sub_10035AD90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CD950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens);
  swift_beginAccess();
  if (!*(void *)(*v6 + 16)) {
    return;
  }
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *uint64_t v5 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  uint64_t v7 = sub_1004CD980();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v2 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount;
  uint64_t v8 = *(void *)(v1
                 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v1
            + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount) = v10;
  uint64_t v5 = (uint64_t *)OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection;
  if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection)) {
    goto LABEL_13;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection) != 1)
  {
    *uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (!*(void *)(*v6 + 16)) {
    goto LABEL_22;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v11 = *(void *)(v7 + 16);
  if (v11)
  {
    while (1)
    {
      uint64_t v12 = v11 - 1;
      sub_100039184(v7 + 40 * (v11 - 1) + 32);
      *(void *)(v7 + 16) = v12;
      *uint64_t v6 = v7;
      swift_endAccess();
LABEL_11:
      uint64_t v7 = v1;
      sub_10035A628();
      int v13 = *((unsigned __int8 *)v5 + v1);
      *((unsigned char *)v5 + v1) = 0;
      if (v13)
      {
        uint64_t v7 = v1;
        sub_10035A628();
      }
LABEL_13:
      uint64_t v14 = *(void *)(v1 + v2);
      BOOL v9 = __OFSUB__(v14, 1);
      uint64_t v15 = v14 - 1;
      if (!v9) {
        break;
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v7 = (uint64_t)sub_100384B20((void *)v7);
      uint64_t v11 = *(void *)(v7 + 16);
      if (!v11) {
        goto LABEL_24;
      }
    }
    *(void *)(v1 + v2) = v15;
    sub_10035A628();
    uint64_t v16 = v1 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v19 = *v6;
      long long v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
      swift_bridgeObjectRetain();
      v20(v1, v19, ObjectType, v17);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v22 = Strong;
      [Strong becomeFirstResponder];
    }
  }
  else
  {
LABEL_24:
    __break(1u);
  }
}

void sub_10035B074()
{
  type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v1 setFont:*(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font)];
  id v2 = [self configurationWithScale:1];
  NSString v3 = sub_1004CDB10();
  id v4 = [self systemImageNamed:v3 withConfiguration:v2];

  if (v4)
  {
    id v5 = [self textAttachmentWithImage:v4];

    sub_1000333C8(0, (unint64_t *)&qword_100635940);
    id v6 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v5];
    [v1 setAttributedText:v6];
    uint64_t v7 = self;
    id v8 = v1;
    id v9 = [v7 tertiaryLabelColor];
    [v8 setTextColor:v9];

    uint64_t v10 = (char *)v8;
    [v10 setAdjustsFontForContentSizeCategory:1];

    uint64_t v11 = &v10[OBJC_IVAR____TtCC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView16DOCTextTokenView_padding];
    *(_OWORD *)uint64_t v11 = xmmword_1004EE460;
    *((_OWORD *)v11 + 1) = xmmword_1004EE460;
  }
  else
  {
    __break(1u);
  }
}

id sub_10035B274()
{
  return sub_10035DB28(0, type metadata accessor for DOCTokenChainView);
}

uint64_t type metadata accessor for DOCTokenChainView()
{
  return self;
}

uint64_t type metadata accessor for DOCTokenChainView.DOCTextTokenView()
{
  return self;
}

uint64_t type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator()
{
  return self;
}

char *sub_10035B368(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A34DOCTrailingVisibilityContainerView_widthConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A34DOCTrailingVisibilityContainerView_containedView] = a1;
  v28.receiver = v1;
  v28.super_class = (Class)type metadata accessor for DOCTrailingVisibilityContainerView();
  id v3 = a1;
  id v4 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v4 addSubview:v3];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v3 leadingAnchor];
  id v6 = [v4 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  LODWORD(v8) = 1132068864;
  [v7 setPriority:v8];
  id v9 = [v4 widthAnchor];
  id v10 = [v9 constraintLessThanOrEqualToConstant:200.0];

  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A34DOCTrailingVisibilityContainerView_widthConstraints];
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A34DOCTrailingVisibilityContainerView_widthConstraints] = v10;
  id v12 = v10;

  int v13 = self;
  sub_100031648(&qword_100628240);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1004E6480;
  id v15 = [v3 topAnchor];
  id v16 = [v4 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v14 + 32) = v17;
  id v18 = [v3 bottomAnchor];
  id v19 = [v4 bottomAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v14 + 40) = v20;
  id v21 = [v3 trailingAnchor];
  id v22 = [v4 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v14 + 48) = v23;
  *(void *)(v14 + 56) = v7;
  *(void *)(v14 + 64) = v12;
  sub_1004CDE50();
  sub_1000333C8(0, (unint64_t *)&unk_100628430);
  id v24 = v12;
  id v25 = v7;
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  [v13 activateConstraints:isa];

  return v4;
}

id sub_10035B774()
{
  return sub_10035DB28(0, type metadata accessor for DOCTrailingVisibilityContainerView);
}

uint64_t type metadata accessor for DOCTrailingVisibilityContainerView()
{
  return self;
}

uint64_t sub_10035BA68()
{
  id v1 = (char *)sub_10035BD34();
  id v2 = &v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  swift_bridgeObjectRetain();

  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4) {
    return 0;
  }
  id v6 = [v0 text];
  if (!v6) {
    return 1;
  }

  uint64_t result = (uint64_t)[v0 text];
  if (result)
  {
    id v7 = (void *)result;
    uint64_t v8 = sub_1004CDB50();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    return v11 == 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10035BB5C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = (char *)sub_10035BD34();
  id v5 = &v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
  swift_beginAccess();
  *(void *)id v5 = a1;
  swift_bridgeObjectRelease();
  sub_10035A628();

  id v6 = (void *)sub_10035BD34();
  objc_msgSend(v6, "systemLayoutSizeFittingSize:", 0.0, 0.0);
  double v8 = v7;
  double v10 = v9;

  uint64_t v11 = (void *)sub_10035BD34();
  objc_msgSend(v11, "setFrame:", 0.0, 0.0, v8, v10);

  id result = [v2 _placeholderLabel];
  if (result)
  {
    int v13 = result;
    uint64_t v14 = (char *)sub_10035BD34();
    id v15 = &v14[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v16 = *(void *)v15;
    swift_bridgeObjectRetain();

    uint64_t v17 = *(void *)(v16 + 16);
    swift_bridgeObjectRelease();
    [v13 setHidden:v17 != 0];

    id v18 = (char *)sub_10035BD34();
    id v19 = &v18[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v20 = *(void *)v19;
    swift_bridgeObjectRetain();

    id v21 = *(char **)(v20 + 16);
    swift_bridgeObjectRelease();
    if (v21) {
      id v21 = sub_10035C010();
    }
    [v2 setLeftView:v21];

    return [v2 setNeedsLayout];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10035BD34()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenChainView;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenChainView];
  if (v2)
  {
    uint64_t v3 = *(char **)&v0[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenChainView];
LABEL_19:
    id v20 = v2;
    return (uint64_t)v3;
  }
  type metadata accessor for DOCTokenChainView();
  uint64_t v4 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_delegate + 8] = &off_1005CFDD8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v5 = [v0 font];
  uint64_t v6 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font;
  double v7 = *(void **)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font];
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font] = v5;
  id v22 = v5;

  id v21 = v4;
  id v8 = [v21 arrangedSubviews];
  sub_1000333C8(0, (unint64_t *)&qword_10062BA40);
  unint64_t v9 = sub_1004CDE30();

  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();

    uint64_t v16 = qword_1006269C0;
    uint64_t v17 = v21;
    if (v16 != -1) {
      swift_once();
    }
    double v18 = *(double *)&qword_1006356B8;
    if (qword_100626990 != -1) {
      swift_once();
    }
    objc_msgSend(v17, "setLayoutMargins:", 0.0, v18 - *((double *)&xmmword_100635670 + 1), 0.0, 7.0);

    [v17 setLayoutMarginsRelativeArrangement:1];
    id v19 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v17;
    uint64_t v3 = v17;

    id v2 = 0;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_5:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)sub_1004CF500();
      }
      else {
        id v13 = *(id *)(v9 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      type metadata accessor for DOCTokenChainView.DOCTextTokenView();
      id v15 = (void *)swift_dynamicCastClass();
      if (v15) {
        [v15 setFont:*(void *)&v4[v6]];
      }
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

char *sub_10035C010()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenContainerContainerView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenContainerContainerView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0
                  + OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenContainerContainerView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = (void *)sub_10035BD34();
    id v6 = objc_allocWithZone((Class)type metadata accessor for DOCTrailingVisibilityContainerView());
    double v7 = sub_10035B368(v5);
    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    uint64_t v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_10035C094()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___suggestionLabel;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___suggestionLabel];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___suggestionLabel];
LABEL_5:
    id v8 = v2;
    return v3;
  }
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  [v4 setAdjustsFontForContentSizeCategory:1];
  id result = [v0 _fieldEditor];
  if (result)
  {
    id v6 = result;
    [result addSubview:v4];

    double v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_10035C214(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField_dataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenChainView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___tokenContainerContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado17DOCTokenTextField____lazy_storage___suggestionLabel] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCTokenTextField();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

void sub_10035C2C8()
{
  [v0 setDelegate:v0];
  uint64_t v1 = sub_10035C010();
  [v0 setLeftView:v1];

  [v0 setLeftViewMode:3];
  [v0 setClipsToBounds:1];
  [v0 setAutocorrectionType:1];
  [v0 addTarget:v0 action:"textDidChange:" forControlEvents:0x20000];
  NSString v2 = sub_1004CDB10();
  [v0 setPlaceholder:v2];

  id v3 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2];
  id v4 = [self fontWithDescriptor:v3 size:0.0];
  [v0 setFont:v4];

  id v5 = [self labelColor];
  id v6 = [v5 colorWithAlphaComponent:0.075];

  [v0 setBackgroundColor:v6];
  id v7 = [v0 layer];
  [v7 setCornerCurve:kCACornerCurveContinuous];

  id v8 = [v0 layer];
  if (qword_1006269B0 != -1) {
    swift_once();
  }
  [v8 setCornerRadius:*(double *)&qword_1006356A8];

  [v0 setBorderStyle:0];
  id v9 = [v0 heightAnchor];
  if (qword_1006269B8 != -1) {
    swift_once();
  }
  id v10 = [v9 constraintGreaterThanOrEqualToConstant:*(double *)&qword_1006356B0];

  [v10 setActive:1];
  uint64_t v11 = (char *)sub_10035BD34();
  id v12 = &v11[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v13 = *(void *)v12;
  swift_bridgeObjectRetain();

  uint64_t v14 = *(char **)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v14) {
    uint64_t v14 = sub_10035C010();
  }
  [v0 setLeftView:v14];

  [v0 setNeedsLayout];
  id v15 = [v0 _placeholderLabel];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = (char *)sub_10035BD34();
    double v18 = &v17[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v19 = *(void *)v18;
    swift_bridgeObjectRetain();

    uint64_t v20 = *(void *)(v19 + 16);
    swift_bridgeObjectRelease();
    [v16 setHidden:v20 != 0];
  }
  else
  {
    __break(1u);
  }
}

void sub_10035C6C0(uint64_t a1)
{
  sub_10010E21C(a1, (uint64_t)v11);
  uint64_t v2 = v12;
  if (v12)
  {
    id v3 = sub_100032FD8(v11, v12);
    uint64_t v4 = *(void *)(v2 - 8);
    __chkstk_darwin(v3);
    id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    uint64_t v7 = sub_1004CF870();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    sub_100039184((uint64_t)v11);
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = (objc_class *)type metadata accessor for DOCTokenTextField();
  v10.receiver = v1;
  v10.super_class = v8;
  objc_msgSendSuper2(&v10, "selectAll:", v7);
  swift_unknownObjectRelease();
  id v9 = (void *)sub_10035BD34();
  [v9 selectAll:v1];
}

Class sub_10035C848(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = a3();

  if (v5)
  {
    sub_1000333C8(0, (unint64_t *)&unk_10062F800);
    v6.super.Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  return v6.super.isa;
}

unint64_t sub_10035C8D0()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for DOCTokenTextField();
  id v1 = objc_msgSendSuper2(&v14, "keyCommands");
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1000333C8(0, (unint64_t *)&unk_10062F800);
    id v3 = (void *)sub_1004CDE30();
  }
  else
  {
    id v3 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)v3;
  sub_1004CDB50();
  NSString v4 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = [v5 keyCommandWithInput:v4 modifierFlags:0 action:"directionKeyCommand"];

  sub_1004CDB50();
  NSString v7 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v8 = [v5 keyCommandWithInput:v7 modifierFlags:0 action:"directionKeyCommand"];

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v13 + 2;
    if (!__OFADD__(v13, 2))
    {
LABEL_6:
      sub_100453698(v10, 1);
      sub_1004CDE50();
      id v6 = v6;
      sub_1004CDE00();
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = v9 + 2;
    if (!__OFADD__(v9, 2)) {
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_13:
  sub_1004CDE60();
LABEL_7:
  sub_1004CDF40();
  sub_1004CDE50();
  id v11 = v8;
  sub_1004CDE00();
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();

  return v15;
}

uint64_t sub_10035CB3C(uint64_t a1, uint64_t a2)
{
  if ((sub_1004CAF80() & 1) == 0)
  {
    sub_10010E21C(a2, (uint64_t)v21);
    uint64_t v13 = v22;
    if (v22)
    {
      objc_super v14 = sub_100032FD8(v21, v22);
      uint64_t v15 = *(void *)(v13 - 8);
      __chkstk_darwin(v14);
      uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v17);
      uint64_t v18 = sub_1004CF870();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      sub_100039184((uint64_t)v21);
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t v19 = (objc_class *)type metadata accessor for DOCTokenTextField();
    v20.receiver = v2;
    v20.super_class = v19;
    id v12 = objc_msgSendSuper2(&v20, "canPerformAction:withSender:", a1, v18);
    swift_unknownObjectRelease();
    return (uint64_t)v12;
  }
  id v5 = [v2 text];
  if (!v5) {
    return 1;
  }

  uint64_t result = (uint64_t)[v2 text];
  if (result)
  {
    NSString v7 = (void *)result;
    uint64_t v8 = sub_1004CDB50();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    return v11 == 0;
  }
  __break(1u);
  return result;
}

void sub_10035CDBC(SEL *a1, double a2, double a3, double a4, double a5)
{
  v24.receiver = v5;
  v24.super_class = (Class)type metadata accessor for DOCTokenTextField();
  objc_msgSendSuper2(&v24, *a1, a2, a3, a4, a5);
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  uint64_t v19 = (char *)sub_10035BD34();
  objc_super v20 = &v19[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  swift_bridgeObjectRetain();

  uint64_t v22 = *(void *)(v21 + 16);
  swift_bridgeObjectRelease();
  double v23 = 0.0;
  if (!v22)
  {
    if (qword_1006269C0 != -1) {
      swift_once();
    }
    double v23 = *(double *)&qword_1006356B8;
  }
  if (qword_1006269C8 != -1) {
    swift_once();
  }
  sub_10006BCE0(v12, v14, v16, v18, 8.0, v23);
}

double sub_10035CF28(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7)
{
  id v12 = a1;
  sub_10035CDBC(a7, a2, a3, a4, a5);
  double v14 = v13;

  return v14;
}

id sub_10035CFAC()
{
  id v1 = v0;
  id v2 = [v0 selectedTextRange];

  if (!v2) {
    goto LABEL_11;
  }
  id result = [v1 selectedTextRange];
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  NSString v4 = result;
  unsigned int v5 = [result isEmpty];

  if (!v5) {
    goto LABEL_11;
  }
  id result = [v1 selectedTextRange];
  if (!result)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v6 = result;
  sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
  id v7 = [v6 start];

  id v8 = [v1 beginningOfDocument];
  LOBYTE(v6) = sub_1004CEF10();

  if (v6)
  {
    unint64_t v9 = (char *)sub_10035BD34();
    unint64_t v10 = &v9[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v11 = *(void *)v10;
    swift_bridgeObjectRetain();

    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRelease();
    if (v12)
    {
      [v1 resignFirstResponder];
      double v13 = (unsigned __int8 *)sub_10035BD34();
      int v14 = v13[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection];

      double v15 = (void *)sub_10035BD34();
      double v16 = v15;
      if (v14 == 2) {
        sub_10035AD90();
      }
      else {
        [v15 becomeFirstResponder];
      }
    }
  }
LABEL_11:
  double v17 = (unsigned __int8 *)sub_10035BD34();
  int v18 = v17[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection];

  if (v18 != 2) {
    goto LABEL_18;
  }
  id v19 = [v1 selectedTextRange];

  if (!v19) {
    goto LABEL_18;
  }
  id result = [v1 selectedTextRange];
  if (!result) {
    goto LABEL_21;
  }
  objc_super v20 = result;
  sub_1000333C8(0, (unint64_t *)&qword_10062BA10);
  id v21 = [v20 start];

  id v22 = [v1 beginningOfDocument];
  char v23 = sub_1004CEF10();

  if ((v23 & 1) == 0)
  {
LABEL_18:
    v29.receiver = v1;
    v29.super_class = (Class)type metadata accessor for DOCTokenTextField();
    return objc_msgSendSuper2(&v29, "deleteBackward");
  }
  id result = [v1 selectedTextRange];
  if (result)
  {
    objc_super v24 = result;
    id v25 = [result end];

    id v26 = [v1 endOfDocument];
    char v27 = sub_1004CEF10();

    if (v27)
    {
      objc_super v28 = (void *)sub_10035BD34();
      sub_10035AD90();
    }
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_10035D348()
{
  id v1 = v0;
  id v2 = [v0 text];
  if (v2)
  {
    id v3 = v2;
    sub_1004CDB50();

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = sub_1003FD3AC(v1);
      unint64_t v6 = v5;
      swift_unknownObjectRelease();
      if (v6)
      {
        sub_1004CDBB0();
        v52._countAndFlagsBits = sub_1004CDBB0();
        BOOL v7 = sub_1004CDD60(v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v7)
        {
          swift_bridgeObjectRetain();
          sub_1004CDC90();
          unint64_t v8 = sub_1004CDCB0();
          swift_bridgeObjectRelease();
          sub_10035DEF8(v8, v4, v6);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_1004CDC90();
          swift_bridgeObjectRelease();
          sub_100030CB4(v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1004CDBC0();
          sub_10035E298();
          sub_1004CDCC0();
          sub_1004CF1D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v10 = sub_1004CDBC0();
          unint64_t v12 = v11;
          swift_bridgeObjectRelease();
          id v13 = sub_10035C094();
          [v1 bounds];
          objc_msgSend(v1, "textRectForBounds:");
          double v15 = v14;
          double v17 = v16;
          double v19 = v18;
          double v21 = v20;
          id v22 = [v1 _fieldEditor];
          objc_msgSend(v1, "convertRect:toView:", v22, v15, v17, v19, v21);
          double v24 = v23;
          double v26 = v25;
          double v28 = v27;
          double v30 = v29;

          objc_msgSend(v13, "setFrame:", v24, v26, v28, v30);
          id v31 = sub_10035C094();
          [v31 setHidden:0];

          id v32 = sub_10035C094();
          NSString v33 = sub_1004CDB10();
          [v32 setText:v33];

          id v34 = sub_10035C094();
          id v35 = [v1 _placeholderLabel];
          if (v35)
          {
            uint64_t v36 = v35;
            id v37 = [v35 font];

            [v34 setFont:v37];
            id v38 = sub_10035C094();
            id v39 = [v1 _placeholderLabel];
            if (v39)
            {
              id v40 = v39;
              id v41 = [v39 textColor];

              [v38 setTextColor:v41];
              id v42 = sub_10035C094();
              id v43 = [v1 _placeholderLabel];
              if (v43)
              {
                uint64_t v44 = v43;
                [v43 alpha];
                double v46 = v45;

                [v42 setAlpha:v46];
                id v47 = [v1 _placeholderLabel];
                if (v47)
                {
                  uint64_t v48 = v47;
                  swift_bridgeObjectRelease();
                  uint64_t v49 = HIBYTE(v12) & 0xF;
                  if ((v12 & 0x2000000000000000) == 0) {
                    uint64_t v49 = v10 & 0xFFFFFFFFFFFFLL;
                  }
                  [v48 setHidden:v49 != 0];

                  return;
                }
LABEL_21:
                __break(1u);
                return;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  id v50 = sub_10035C094();
  [v50 setHidden:1];
}

void sub_10035D8E0(uint64_t a1)
{
  sub_10010E21C(a1, (uint64_t)v14);
  uint64_t v2 = v15;
  if (v15)
  {
    id v3 = sub_100032FD8(v14, v15);
    uint64_t v4 = *(void *)(v2 - 8);
    __chkstk_darwin(v3);
    unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    uint64_t v7 = sub_1004CF870();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    sub_100039184((uint64_t)v14);
  }
  else
  {
    uint64_t v7 = 0;
  }
  unint64_t v8 = (objc_class *)type metadata accessor for DOCTokenTextField();
  v13.receiver = v1;
  v13.super_class = v8;
  objc_msgSendSuper2(&v13, "fieldEditorDidChangeSelection:", v7);
  swift_unknownObjectRelease();
  id v9 = [v1 selectedTextRange];
  if (v9)
  {
    uint64_t v10 = v9;
    if ([v9 isEmpty])
    {
      unint64_t v11 = (unsigned char *)sub_10035BD34();
      int v12 = v11[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection];
      v11[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection] = 0;
      if (v12) {
        sub_10035A628();
      }
    }
  }
}

uint64_t sub_10035DA90(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1004CF2A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v9);

  return sub_100035F60((uint64_t)v9);
}

id sub_10035DB10(uint64_t a1)
{
  return sub_10035DB28(a1, type metadata accessor for DOCTokenTextField);
}

id sub_10035DB28(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for DOCTokenTextField()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCTokenChainView.Selection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035DE68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTokenChainView.Selection()
{
  return &type metadata for DOCTokenChainView.Selection;
}

unint64_t sub_10035DEA4()
{
  unint64_t result = qword_100635920;
  if (!qword_100635920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635920);
  }
  return result;
}

unint64_t sub_10035DEF8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1004CDDA0();
  }
  __break(1u);
  return result;
}

uint64_t sub_10035DF44(void *a1, uint64_t a2)
{
  id v3 = [a1 arrangedSubviews];
  sub_1000333C8(0, (unint64_t *)&qword_10062BA40);
  unint64_t v4 = sub_1004CDE30();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_1004CF500();
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      type metadata accessor for DOCTokenChainView.DOCTextTokenView();
      unint64_t v11 = (void *)swift_dynamicCastClass();
      if (v11) {
        [v11 setFont:*(void *)(a2 + v8)];
      }

      ++v7;
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_10035E08C()
{
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_font] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_showTrailingChevron] = 1;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_isCoalescingRebuildsCount] = 0;

  sub_1004CF6B0();
  __break(1u);
}

id sub_10035E160()
{
  id v1 = (char *)sub_10035BD34();
  uint64_t v2 = &v1[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  swift_bridgeObjectRetain();

  unint64_t v4 = *(char **)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4) {
    unint64_t v4 = sub_10035C010();
  }
  [v0 setLeftView:v4];

  [v0 setNeedsLayout];
  id result = [v0 _placeholderLabel];
  if (result)
  {
    unsigned int v6 = result;
    uint64_t v7 = (char *)sub_10035BD34();
    uint64_t v8 = &v7[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();

    uint64_t v10 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease();
    [v6 setHidden:v10 != 0];

    return [v0 sendActionsForControlEvents:0x20000];
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10035E298()
{
  unint64_t result = qword_100635930;
  if (!qword_100635930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635930);
  }
  return result;
}

void sub_10035E2EC()
{
  int v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection) = 0;
  if (v1) {
    sub_10035A628();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [Strong becomeFirstResponder];
  }
}

void sub_10035E364()
{
  int v1 = v0;
  id v2 = [v0 text];
  if (v2)
  {
    id v3 = v2;
    sub_100031648((uint64_t *)&unk_10062DD40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1004E12A0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v5 = NSFontAttributeName;
    id v6 = [v1 font];
    if (v6)
    {
      id v7 = v6;
      *(void *)(inited + 64) = sub_1000333C8(0, &qword_10062BA20);
      *(void *)(inited + 40) = v7;
      sub_10001F0EC(inited);
      type metadata accessor for Key(0);
      sub_100245F78();
      Class isa = sub_1004CD990().super.isa;
      swift_bridgeObjectRelease();
      [v3 sizeWithAttributes:isa];
      double v10 = v9;

      [v1 frame];
      double v12 = v11;
      objc_super v13 = (char *)sub_10035BD34();
      double v14 = &v13[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
      swift_beginAccess();
      uint64_t v15 = *(void *)v14;
      swift_bridgeObjectRetain();

      uint64_t v16 = *(void *)(v15 + 16);
      swift_bridgeObjectRelease();
      double v17 = 0.0;
      if (!v16)
      {
        if (qword_1006269C0 != -1) {
          swift_once();
        }
        double v17 = *(double *)&qword_1006356B8;
      }
      if (qword_1006269C8 != -1) {
        swift_once();
      }
      double v18 = (char *)sub_10035BD34();
      double v19 = &v18[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
      swift_beginAccess();
      uint64_t v20 = *(void *)v19;
      swift_bridgeObjectRetain();

      uint64_t v21 = *(void *)(v20 + 16);
      swift_bridgeObjectRelease();
      if (!v21 && qword_1006269C0 != -1) {
        swift_once();
      }
      double v22 = v12 - v10 - v17 - *(double *)&qword_1006356C0;
      double v23 = sub_10035C010();
      [*(id *)&v23[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A34DOCTrailingVisibilityContainerView_widthConstraints] setConstant:v22];

      double v24 = (unsigned char *)sub_10035BD34();
      int v25 = v24[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection];
      v24[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_selection] = 0;
      if (v25) {
        sub_10035A628();
      }

      id v26 = [v1 _placeholderLabel];
      if (v26)
      {
        double v27 = v26;
        double v28 = (char *)sub_10035BD34();
        double v29 = &v28[OBJC_IVAR____TtC14RecentsAvocadoP33_E3F153D8993DA00CC31BF704859FD68A17DOCTokenChainView_tokens];
        swift_beginAccess();
        uint64_t v30 = *(void *)v29;
        swift_bridgeObjectRetain();

        uint64_t v31 = *(void *)(v30 + 16);
        swift_bridgeObjectRelease();
        [v27 setHidden:v31 != 0];

        sub_10035D348();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10035E6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648(&qword_100635958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static DOCDocumentSource.== infix(_:_:)(void *a1, void *a2)
{
  id v3 = [a1 identifier];
  id v4 = [a2 identifier];
  uint64_t v5 = sub_1004CDB50();
  uint64_t v7 = v6;
  if (v5 == sub_1004CDB50() && v7 == v8) {
    char v10 = 1;
  }
  else {
    char v10 = sub_1004CF890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10 & 1;
}

uint64_t sub_10035E814(void **a1, void **a2)
{
  return _sSo17DOCDocumentSourceC14RecentsAvocadoE1loiySbAB_ABtFZ_0(*a1, *a2);
}

uint64_t _sSo17DOCDocumentSourceC14RecentsAvocadoE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  id v3 = [a1 displayName];
  sub_1004CDB50();

  uint64_t v4 = sub_1004CDBB0();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = [a2 displayName];
  sub_1004CDB50();

  uint64_t v8 = sub_1004CDBB0();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v4 == v8 && v6 == v10) {
    char v12 = 0;
  }
  else {
    char v12 = sub_1004CF890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

unint64_t sub_10035E930()
{
  unint64_t result = qword_1006359D0;
  if (!qword_1006359D0)
  {
    sub_10035E988();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006359D0);
  }
  return result;
}

unint64_t sub_10035E988()
{
  unint64_t result = qword_1006322C0;
  if (!qword_1006322C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006322C0);
  }
  return result;
}

uint64_t sub_10035E9C8()
{
  id v0 = [self audiovisualTypes];
  type metadata accessor for AVFileType(0);
  uint64_t v1 = sub_1004CDE30();

  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_1001882DC(0, v2, 0);
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = sub_1004CDB50();
      uint64_t v6 = v5;
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_1001882DC(v7 > 1, v8 + 1, 1);
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v4;
      v9[5] = v6;
    }
    while (v2 != v3);
  }
  uint64_t result = swift_bridgeObjectRelease();
  qword_1006359D8 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10035EAFC(char a1)
{
  uint64_t result = 0x6F69736E656D6944;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461727544;
      break;
    case 2:
      uint64_t result = 0x736365646F43;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x726F7461657263;
      break;
    case 5:
      uint64_t result = 0x6867697279706F63;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    case 7:
      uint64_t result = 0x747369747261;
      break;
    case 8:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 9:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 10:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 11:
      uint64_t result = 0x6572617774666F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10035EC60(char a1)
{
  uint64_t result = 0x6F69736E656D6944;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461727544;
      break;
    case 2:
      uint64_t result = 0x736365646F43;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x726F7461657263;
      break;
    case 5:
      uint64_t result = 0x6867697279706F63;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    case 7:
      uint64_t result = 0x747369747261;
      break;
    case 8:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 9:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 10:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 11:
      uint64_t result = 0x6572617774666F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10035EDC4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_10035EC60(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10035EC60(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1004CF890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10035EE50()
{
  char v1 = *v0;
  sub_1004CF9E0();
  sub_10035EC60(v1);
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  return sub_1004CFA30();
}

uint64_t sub_10035EEB4()
{
  sub_10035EC60(*v0);
  sub_1004CDC80();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10035EF08()
{
  char v1 = *v0;
  sub_1004CF9E0();
  sub_10035EC60(v1);
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  return sub_1004CFA30();
}

uint64_t sub_10035EF68@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100365AD0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10035EF98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10035EC60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10035F034()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    if (v1 == 1)
    {
      return sub_10035F144();
    }
    else
    {
      sub_1004CF4D0(17);
      v4._countAndFlagsBits = 0x656C646E61686E55;
      v4._object = (void *)0xEF20657361632064;
      sub_1004CDCD0(v4);
      type metadata accessor for DOCMetadataLevelOfDetail(0);
      sub_1004CF600();
      uint64_t result = sub_1004CF6B0();
      __break(1u);
    }
  }
  else
  {
    return sub_10035F204();
  }
  return result;
}

uint64_t sub_10035F144()
{
  if (*(void *)(v0 + 32)) {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else {
    uint64_t v1 = sub_10035F314((uint64_t)&off_1005B5648);
  }
  *(void *)(v0 + 32) = v1;
  swift_retain();
  swift_retain();
  swift_release();
  id v2 = *(id *)(v1 + 16);
  sub_100031648((uint64_t *)&unk_100633210);
  sub_1004CE640();
  swift_release();

  return v4;
}

uint64_t sub_10035F204()
{
  if (*(void *)(v0 + 40)) {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else {
    uint64_t v1 = sub_10035F314((uint64_t)&off_1005B5678);
  }
  *(void *)(v0 + 40) = v1;
  swift_retain();
  swift_retain();
  swift_release();
  id v2 = *(id *)(v1 + 16);
  sub_100031648((uint64_t *)&unk_100633210);
  sub_1004CE640();
  swift_release();

  return v4;
}

uint64_t sub_10035F314(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100031648(&qword_10062DA50);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetadataValueCache();
  swift_allocObject();
  uint64_t v7 = sub_100364DE4();
  char v8 = dispatch_group_create();
  dispatch_group_enter(v8);
  uint64_t v9 = *(void *)(v2 + 16);
  sub_1004CDFE0();
  uint64_t v10 = sub_1004CE000();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
  double v11 = (void *)swift_allocObject();
  _OWORD v11[2] = 0;
  void v11[3] = 0;
  v11[4] = a1;
  _OWORD v11[5] = v9;
  void v11[6] = v7;
  v11[7] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  char v12 = v8;
  sub_1003649B4((uint64_t)v6, (uint64_t)&unk_100635C30, (uint64_t)v11);
  swift_release();
  sub_100049B74((uint64_t)v6, &qword_10062DA50);
  sub_1004CE5D0();

  return v7;
}

uint64_t sub_10035F498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[4] = a6;
  uint64_t v7[5] = a7;
  uint64_t v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_10035F4BC, 0, 0);
}

uint64_t sub_10035F4BC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10035F5A8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10035F5A8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10035F6C0, 0, 0);
}

uint64_t sub_10035F6C0()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 40));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035F720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  sub_100031648(&qword_10062DA50);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_10035F7C8, 0, 0);
}

uint64_t sub_10035F7C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    double v22 = (void *)(v0 + 16);
    uint64_t v4 = (char *)(v2 + 32);
    uint64_t v25 = sub_1004CE000();
    uint64_t v5 = *(void *)(v25 - 8);
    double v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    double v23 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v26 = v3;
      uint64_t v8 = *(void *)(v1 + 104);
      uint64_t v7 = *(void *)(v1 + 112);
      uint64_t v10 = *(void *)(v1 + 88);
      uint64_t v9 = *(void *)(v1 + 96);
      char v11 = *v4;
      v24(v7, 1, 1, v25);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      *(unsigned char *)(v12 + 32) = v11;
      *(void *)(v12 + 40) = v10;
      *(void *)(v12 + 48) = v9;
      sub_1000335A8(v7, v8, &qword_10062DA50);
      LODWORD(v8) = (*v23)(v8, 1, v25);
      swift_retain();
      swift_retain();
      uint64_t v13 = *(void *)(v1 + 104);
      if (v8 == 1)
      {
        sub_100049B74(*(void *)(v1 + 104), &qword_10062DA50);
      }
      else
      {
        sub_1004CDFF0();
        (*v21)(v13, v25);
      }
      if (*(void *)(v12 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v14 = sub_1004CDF70();
        uint64_t v16 = v15;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      ++v4;
      uint64_t v17 = **(void **)(v1 + 72);
      double v18 = (void *)(v16 | v14);
      if (v16 | v14)
      {
        double v18 = v22;
        void *v22 = 0;
        v22[1] = 0;
        *(void *)(v1 + 32) = v14;
        *(void *)(v1 + 40) = v16;
      }
      uint64_t v6 = *(void *)(v1 + 112);
      *(void *)(v1 + 48) = 1;
      *(void *)(v1 + 56) = v18;
      *(void *)(v1 + 64) = v17;
      swift_task_create();
      swift_release();
      sub_100049B74(v6, &qword_10062DA50);
      uint64_t v3 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  double v19 = *(uint64_t (**)(void))(v1 + 8);
  return v19();
}

uint64_t sub_10035FAA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 504) = a5;
  *(void *)(v6 + 512) = a6;
  *(unsigned char *)(v6 + 712) = a4;
  uint64_t v7 = sub_1004CC770();
  *(void *)(v6 + 520) = v7;
  *(void *)(v6 + 528) = *(void *)(v7 - 8);
  *(void *)(v6 + 536) = swift_task_alloc();
  return _swift_task_switch(sub_10035FB64, 0, 0);
}

uint64_t sub_10035FB64()
{
  switch(*(unsigned char *)(v0 + 712))
  {
    case 1:
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 560) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_10036030C;
      v5[9] = *(void *)(v0 + 504);
      uint64_t v4 = sub_100363B58;
      goto LABEL_18;
    case 2:
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 576) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_1003605F8;
      v6[7] = *(void *)(v0 + 504);
      uint64_t v4 = sub_100363ED4;
      goto LABEL_18;
    case 3:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierTitle;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 592) = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_1003608E4;
      goto LABEL_17;
    case 4:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierCreator;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 608) = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100360DBC;
      goto LABEL_17;
    case 5:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierCopyrights;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 624) = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100361294;
      goto LABEL_17;
    case 6:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierType;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 640) = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_10036176C;
      goto LABEL_17;
    case 7:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierArtist;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 656) = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100361C44;
      goto LABEL_17;
    case 8:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierAlbumName;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 672) = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_10036211C;
LABEL_17:
      v8[1] = v9;
      uint64_t v12 = *(void *)(v0 + 504);
      _OWORD v8[5] = v7;
      v8[6] = v12;
      uint64_t v4 = sub_1003650F4;
      goto LABEL_18;
    case 9:
    case 0xA:
      swift_task_dealloc();
      uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
      return v1();
    case 0xB:
      uint64_t v10 = *(void **)(*(void *)(v0 + 504) + 16);
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 488;
      *(void *)(v0 + 24) = sub_1003625F4;
      uint64_t v11 = swift_continuation_init();
      *(void *)(v0 + 128) = _NSConcreteStackBlock;
      *(void *)(v0 + 136) = 0x40000000;
      *(void *)(v0 + 144) = sub_100364FF8;
      *(void *)(v0 + 152) = &unk_1005CFE60;
      *(void *)(v0 + 160) = v11;
      [v10 loadTracksWithMediaType:AVMediaTypeVideo completionHandler:v0 + 128];
      return _swift_continuation_await(v0 + 16);
    default:
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_100360020;
      v3[18] = *(void *)(v0 + 504);
      uint64_t v4 = sub_1003634F8;
LABEL_18:
      return _swift_task_switch(v4, 0, 0);
  }
}

uint64_t sub_100360020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[21] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[24] = v2;
  v4[69] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100362F14;
  }
  else {
    uint64_t v5 = sub_10036013C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10036013C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_10036030C(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[25] = v3;
  v4[26] = a1;
  v4[27] = a2;
  v4[28] = v2;
  v4[71] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100363100;
  }
  else {
    uint64_t v5 = sub_100360428;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360428()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003605F8(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[29] = v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[32] = v2;
  v4[73] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003632EC;
  }
  else {
    uint64_t v5 = sub_100360714;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360714()
{
  uint64_t v1 = *(void *)(v0 + 248);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003608E4(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[33] = v3;
  v4[34] = a1;
  v4[35] = a2;
  v4[36] = v2;
  v4[75] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100360BD0;
  }
  else {
    uint64_t v5 = sub_100360A00;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360A00()
{
  uint64_t v1 = *(void *)(v0 + 280);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_100360BD0()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100360DBC(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[37] = v3;
  v4[38] = a1;
  v4[39] = a2;
  v4[40] = v2;
  v4[77] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003610A8;
  }
  else {
    uint64_t v5 = sub_100360ED8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360ED8()
{
  uint64_t v1 = *(void *)(v0 + 312);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003610A8()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100361294(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[41] = v3;
  v4[42] = a1;
  v4[43] = a2;
  v4[44] = v2;
  v4[79] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100361580;
  }
  else {
    uint64_t v5 = sub_1003613B0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003613B0()
{
  uint64_t v1 = *(void *)(v0 + 344);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_100361580()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10036176C(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[45] = v3;
  v4[46] = a1;
  v4[47] = a2;
  v4[48] = v2;
  v4[81] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100361A58;
  }
  else {
    uint64_t v5 = sub_100361888;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100361888()
{
  uint64_t v1 = *(void *)(v0 + 376);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_100361A58()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100361C44(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[49] = v3;
  v4[50] = a1;
  v4[51] = a2;
  v4[52] = v2;
  v4[83] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100361F30;
  }
  else {
    uint64_t v5 = sub_100361D60;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100361D60()
{
  uint64_t v1 = *(void *)(v0 + 408);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_100361F30()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10036211C(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[53] = v3;
  v4[54] = a1;
  v4[55] = a2;
  v4[56] = v2;
  v4[85] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100362408;
  }
  else {
    uint64_t v5 = sub_100362238;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100362238()
{
  uint64_t v1 = *(void *)(v0 + 440);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_100362408()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003625F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 688) = v1;
  if (v1) {
    os_log_type_t v2 = sub_100362848;
  }
  else {
    os_log_type_t v2 = sub_100362704;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100362704()
{
  unint64_t v1 = v0[61];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 < 1)
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[87] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100362A3C;
    uint64_t v4 = v0[63];
    v3[5] = AVMetadataCommonIdentifierSoftware;
    v3[6] = v4;
    return _swift_task_switch(sub_1003650F4, 0, 0);
  }
}

uint64_t sub_100362848()
{
  uint64_t v13 = v0;
  swift_willThrow();
  sub_1004CC710();
  unint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100362A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[57] = v3;
  v4[58] = a1;
  v4[59] = a2;
  v4[60] = v2;
  v4[88] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100362D28;
  }
  else {
    uint64_t v5 = sub_100362B58;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100362B58()
{
  uint64_t v1 = *(void *)(v0 + 472);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003660A8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000674E0;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100125C48;
  *(void *)(v0 + 104) = &unk_1005CFEC8;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_100362D28()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100362F14()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100363100()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003632EC()
{
  uint64_t v13 = v0;
  sub_1004CC710();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_100187CC4(0xD000000000000010, 0x8000000100532A30, &v12);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003634D8()
{
  *(void *)(v1 + 144) = v0;
  return _swift_task_switch(sub_1003634F8, 0, 0);
}

uint64_t sub_1003634F8()
{
  uint64_t v1 = *(void **)(v0[18] + 16);
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_100363608;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100364FF8;
  v0[13] = &unk_1005CFEF0;
  v0[14] = v2;
  [v1 loadTracksWithMediaType:AVMediaTypeVideo completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100363608()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1003638AC;
  }
  else {
    uint64_t v2 = sub_100363718;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100363718(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2[17];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004CF6D0();
    a1 = swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v4 = (id)sub_1004CF500();
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
        }
        id v4 = *(id *)(v3 + 32);
      }
      v2[20] = v4;
      swift_bridgeObjectRelease();
      sub_100031648(&qword_100635C78);
      uint64_t v5 = sub_1004CAFA0();
      v2[21] = v5;
      uint64_t v6 = (void *)swift_task_alloc();
      v2[22] = v6;
      *uint64_t v6 = v2;
      v6[1] = sub_100363918;
      a1 = (uint64_t)(v2 + 15);
      a2 = v5;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(void, void))v2[1];
  return v8(0, 0);
}

uint64_t sub_1003638AC()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100363918()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100363ACC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100363A34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100363A34()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = (id)DOCLocalizedMetadataStringForWidthByHeight();
  uint64_t v3 = sub_1004CDB50();
  uint64_t v5 = v4;

  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v6(v3, v5);
}

uint64_t sub_100363ACC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100363B38()
{
  *(void *)(v1 + 72) = v0;
  return _swift_task_switch(sub_100363B58, 0, 0);
}

uint64_t sub_100363B58()
{
  v0[10] = *(void *)(v0[9] + 16);
  v0[11] = sub_100031648(&qword_100635C80);
  uint64_t v1 = sub_1004CAFE0();
  v0[12] = v1;
  id v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *id v2 = v0;
  v2[1] = sub_100363C30;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 6, v1);
}

uint64_t sub_100363C30()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100363E50;
  }
  else
  {
    swift_release();
    id v2 = sub_100363D4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100363D4C()
{
  sub_1004CEA80();
  sub_1004CAFE0();
  sub_1004CE9F0();
  swift_release();
  id v2 = *(void **)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  int v4 = *(unsigned __int8 *)(v0 + 40);
  if (v4 == 1) {
    uint64_t v5 = (void *)DOCLocalizedMetadataStringForUnavailablePropertyValue();
  }
  else {
    uint64_t v5 = (void *)DOCLocalizedMetadataStringInMMSSForDuration();
  }
  id v6 = v5;
  uint64_t v7 = sub_1004CDB50();
  uint64_t v9 = v8;

  sub_1003660E0(v2, v1, v3, v4);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v10(v7, v9);
}

uint64_t sub_100363E50()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100363EB4()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_100363ED4, 0, 0);
}

uint64_t sub_100363ED4()
{
  sub_100031648(&qword_100635C88);
  uint64_t v1 = sub_1004CAF90();
  *(void *)(v0 + 64) = v1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *id v2 = v0;
  v2[1] = sub_100363FA4;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 32, v1);
}

uint64_t sub_100363FA4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    id v2 = sub_100364938;
  }
  else {
    id v2 = sub_1003640D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003640D4()
{
  unint64_t v1 = v0[4];
  v0[11] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    v0[12] = v8;
    if (v8)
    {
LABEL_3:
      uint64_t v3 = sub_100031648(&qword_100635C90);
      v0[13] = v3;
      v0[14] = kCMFormatDescriptionExtension_FormatName;
      v0[15] = _swiftEmptyArrayStorage;
      uint64_t v4 = v0[11];
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v5 = (id)sub_1004CF500();
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return AVAsynchronousKeyValueLoading.load<A>(_:)(v3, v4);
        }
        id v5 = *(id *)(v4 + 32);
      }
      v0[16] = v5;
      v0[17] = 1;
      uint64_t v6 = sub_1004CAFB0();
      v0[18] = v6;
      uint64_t v7 = (void *)swift_task_alloc();
      v0[19] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1003643AC;
      uint64_t v3 = (uint64_t)(v0 + 5);
      uint64_t v4 = v6;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(v3, v4);
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[12] = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = _swiftEmptyArrayStorage[2];
  if (v9)
  {
    uint64_t v11 = _swiftEmptyArrayStorage[4];
    uint64_t v10 = _swiftEmptyArrayStorage[5];
    uint64_t v12 = v9 - 1;
    if (v9 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v13 = (void **)&_swiftEmptyArrayStorage[7];
      do
      {
        uint64_t v14 = (uint64_t)*(v13 - 1);
        uint64_t v15 = *v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19._countAndFlagsBits = 8236;
        v19._object = (void *)0xE200000000000000;
        sub_1004CDCD0(v19);
        swift_bridgeObjectRetain();
        v20._countAndFlagsBits = v14;
        v20._object = v15;
        sub_1004CDCD0(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v16(v11, v10);
}

uint64_t sub_1003643AC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100364950;
  }
  else
  {
    uint64_t v2 = sub_1003644FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003644FC(id a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(v2 + 40);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1004CF6D0();
    a1 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v40 = (void *)(v2 + 40);
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 48);
    unint64_t v7 = v3 & 0xC000000000000001;
    uint64_t v44 = *(void **)(v2 + 120);
    uint64_t v8 = (char *)&type metadata for Swift.AnyObject + 8;
    uint64_t v9 = &type metadata for String;
    unint64_t v42 = v3;
    id v41 = (void *)(v2 + 48);
    do
    {
      if (v7) {
        uint64_t v10 = (const opaqueCMFormatDescription *)sub_1004CF500();
      }
      else {
        uint64_t v10 = (const opaqueCMFormatDescription *)*(id *)(v3 + 8 * v5 + 32);
      }
      uint64_t v11 = v10;
      CFPropertyListRef v12 = (id)CMFormatDescriptionGetExtension(v10, *(CFStringRef *)(v2 + 112));
      if (v12 && (*uint64_t v6 = v12, (swift_dynamicCast() & 1) != 0))
      {
        unint64_t v13 = v7;
        uint64_t v14 = v4;
        uint64_t v15 = v9;
        uint64_t v16 = v8;
        uint64_t v18 = *(void *)(v2 + 16);
        uint64_t v17 = *(void *)(v2 + 24);
        Swift::String v19 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v19 = sub_1002369E4(0, v44[2] + 1, 1, v44);
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        uint64_t v44 = v19;
        if (v21 >= v20 >> 1) {
          uint64_t v44 = sub_1002369E4((void *)(v20 > 1), v21 + 1, 1, v19);
        }
        void v44[2] = v21 + 1;
        double v22 = &v44[2 * v21];
        v22[4] = v18;
        v22[5] = v17;

        unint64_t v3 = v42;
        uint64_t v2 = v43;
        uint64_t v8 = v16;
        uint64_t v9 = v15;
        uint64_t v4 = v14;
        unint64_t v7 = v13;
        uint64_t v6 = v41;
      }
      else
      {
      }
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    uint64_t v44 = *(void **)(v2 + 120);
  }
  double v24 = *(void **)(v2 + 128);
  uint64_t v23 = *(void *)(v2 + 136);
  uint64_t v25 = *(void *)(v2 + 96);
  swift_bridgeObjectRelease();

  if (v23 != v25)
  {
    unint64_t v30 = *(void *)(v2 + 136);
    *(void *)(v2 + 120) = v44;
    a2 = *(void *)(v2 + 88);
    if ((a2 & 0xC000000000000001) != 0)
    {
      a1 = (id)sub_1004CF500();
      id v31 = a1;
      id v32 = v40;
    }
    else
    {
      id v32 = v40;
      if (v30 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_42:
        __break(1u);
        return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
      }
      a1 = *(id *)(a2 + 8 * v30 + 32);
      id v31 = a1;
    }
    *(void *)(v2 + 128) = v31;
    *(void *)(v2 + 136) = v30 + 1;
    if (!__OFADD__(v30, 1))
    {
      uint64_t v33 = sub_1004CAFB0();
      *(void *)(v2 + 144) = v33;
      id v34 = (void *)swift_task_alloc();
      *(void *)(v2 + 152) = v34;
      void *v34 = v2;
      v34[1] = sub_1003643AC;
      a1 = v32;
      a2 = v33;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v44[2];
  if (v26)
  {
    uint64_t v27 = v44[4];
    uint64_t v28 = v44[5];
    uint64_t v29 = v26 - 1;
    if (v26 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v35 = (void **)(v44 + 7);
      do
      {
        uint64_t v36 = (uint64_t)*(v35 - 1);
        id v37 = *v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46._countAndFlagsBits = 8236;
        v46._object = (void *)0xE200000000000000;
        sub_1004CDCD0(v46);
        swift_bridgeObjectRetain();
        v47._countAndFlagsBits = v36;
        v47._object = v37;
        sub_1004CDCD0(v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 += 2;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v2 = v43;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  id v38 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  return v38(v27, v28);
}

uint64_t sub_100364938()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100364950()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003649B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648(&qword_10062DA50);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000335A8(a1, (uint64_t)v8, &qword_10062DA50);
  uint64_t v9 = sub_1004CE000();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100049B74((uint64_t)v8, &qword_10062DA50);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1004CDF70();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1004CDFF0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    void v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_100364BA8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCMediaMetadataProvider()
{
  return self;
}

uint64_t sub_100364C14(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1004CF4D0(23);
  v14._object = (void *)0x8000000100532A50;
  v14._countAndFlagsBits = 0xD000000000000010;
  sub_1004CDCD0(v14);
  sub_1004CF600();
  v15._countAndFlagsBits = 2112800;
  v15._object = (void *)0xE300000000000000;
  sub_1004CDCD0(v15);
  v16._countAndFlagsBits = a2;
  v16._object = a3;
  sub_1004CDCD0(v16);
  sub_1004CADF0();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10035EAFC(a1);
  uint64_t v10 = v9;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(a4 + 24);
  *(void *)(a4 + 24) = 0x8000000000000000;
  sub_10021C808(a2, (uint64_t)a3, v8, v10, isUniquelyReferenced_nonNull_native);
  *(void *)(a4 + 24) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_100364D80()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetadataValueCache()
{
  return self;
}

uint64_t sub_100364DE4()
{
  uint64_t v1 = sub_1004CE620();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CE5F0();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1004CD8C0();
  __chkstk_darwin(v6 - 8);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  sub_1004CD880();
  v8[1] = _swiftEmptyArrayStorage;
  sub_10011CA84();
  sub_100031648((uint64_t *)&unk_100626B80);
  sub_10003168C();
  sub_1004CF330();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  *(void *)(v0 + 16) = sub_1004CE670();
  *(void *)(v0 + 24) = sub_1000207C8((uint64_t)_swiftEmptyArrayStorage);
  return v0;
}

uint64_t sub_100364FF8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100031648(&qword_1006301E0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_1000333C8(0, &qword_100635CB0);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1004CDE30();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1003650D4(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return _swift_task_switch(sub_1003650F4, 0, 0);
}

uint64_t sub_1003650F4()
{
  sub_100031648(&qword_100635C98);
  uint64_t v1 = sub_1004CAFD0();
  *(void *)(v0 + 56) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003651C4;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 32, v1);
}

uint64_t sub_1003651C4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100365684;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003652E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003652E0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = self;
  sub_1000333C8(0, &qword_100635CA0);
  Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v2 metadataItemsFromArray:isa filteredByIdentifier:v1];

  unint64_t v5 = sub_1004CDE30();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1004CF6D0();
    uint64_t v6 = swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v8 = (id)sub_1004CF500();
      }
      else
      {
        if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return AVAsynchronousKeyValueLoading.load<A>(_:)(v6, v7);
        }
        id v8 = *(id *)(v5 + 32);
      }
      v0[10] = v8;
      swift_bridgeObjectRelease();
      sub_100031648(&qword_100635CA8);
      uint64_t v9 = sub_1004CAFC0();
      v0[11] = v9;
      uint64_t v10 = (void *)swift_task_alloc();
      v0[12] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_100365500;
      uint64_t v6 = (uint64_t)(v0 + 2);
      uint64_t v7 = v9;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(v6, v7);
    }
  }
  else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t (*)(void, void))v0[1];
  return v12(0, 0);
}

uint64_t sub_100365500()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003656E8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10036561C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10036561C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_100365684()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003656E8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for DOCAssetMetadataFetcher()
{
  return self;
}

void *sub_100365778(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = sub_1004CB5C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1004CAC10();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000335A8(a3, (uint64_t)v11, (uint64_t *)&unk_10062B3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100049B74((uint64_t)v11, (uint64_t *)&unk_10062B3B0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  if (qword_1006269D0 != -1) {
    swift_once();
  }
  Swift::String v16 = (void *)qword_1006359D8;
  swift_bridgeObjectRetain();
  id v17 = [a1 contentType];
  sub_1004CB330();

  uint64_t v18 = sub_1004CB100();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v21 = sub_100109BB4(v18, v20, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  id v22 = objc_allocWithZone((Class)AVURLAsset);
  sub_1004CAB60(v23);
  uint64_t v25 = v24;
  id v26 = [v22 initWithURL:v24 options:0];

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for DOCMediaMetadataProvider();
  uint64_t v27 = (void *)swift_allocObject();
  type metadata accessor for DOCAssetMetadataFetcher();
  v27[4] = 0;
  v27[5] = 0;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v26;
  uint64_t v29 = v32;
  v27[2] = v28;
  void v27[3] = v29;
  return v27;
}

uint64_t sub_100365AD0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1005B5508;
  v6._object = a2;
  unint64_t v4 = sub_1004CF760(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xC) {
    return 12;
  }
  else {
    return v4;
  }
}

void *sub_100365B1C()
{
  sub_1001882DC(0, 12, 0);
  uint64_t v0 = 0;
  uint64_t result = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v2 = 0xEA0000000000736ELL;
    uint64_t v3 = 0x6F69736E656D6944;
    switch(*((unsigned char *)&off_1005B56A0 + v0 + 32))
    {
      case 1:
        unint64_t v2 = 0xE800000000000000;
        uint64_t v3 = 0x6E6F697461727544;
        break;
      case 2:
        unint64_t v2 = 0xE600000000000000;
        uint64_t v3 = 0x736365646F43;
        break;
      case 3:
        unint64_t v2 = 0xE500000000000000;
        uint64_t v3 = 0x656C746974;
        break;
      case 4:
        unint64_t v2 = 0xE700000000000000;
        uint64_t v3 = 0x726F7461657263;
        break;
      case 5:
        unint64_t v2 = 0xEA00000000007374;
        uint64_t v3 = 0x6867697279706F63;
        break;
      case 6:
        unint64_t v2 = 0xE400000000000000;
        uint64_t v3 = 1701869940;
        break;
      case 7:
        unint64_t v2 = 0xE600000000000000;
        uint64_t v3 = 0x747369747261;
        break;
      case 8:
        uint64_t v3 = 0x6D614E6D75626C61;
        goto LABEL_13;
      case 9:
        unint64_t v2 = 0xE800000000000000;
        uint64_t v3 = 0x656475746974616CLL;
        break;
      case 0xA:
        uint64_t v3 = 0x64757469676E6F6CLL;
LABEL_13:
        unint64_t v2 = 0xE900000000000065;
        break;
      case 0xB:
        unint64_t v2 = 0xE800000000000000;
        uint64_t v3 = 0x6572617774666F73;
        break;
      default:
        break;
    }
    uint64_t v7 = result;
    unint64_t v5 = result[2];
    unint64_t v4 = result[3];
    if (v5 >= v4 >> 1)
    {
      sub_1001882DC(v4 > 1, v5 + 1, 1);
      uint64_t result = v7;
    }
    ++v0;
    result[2] = v5 + 1;
    Swift::String v6 = &result[2 * v5];
    void v6[4] = v3;
    void v6[5] = v2;
  }
  while (v0 != 12);
  return result;
}

uint64_t sub_100365D40@<X0>(void *a1@<X8>)
{
  return sub_1003660F4(a1);
}

uint64_t sub_100365D58()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100365DB0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1001AE5D4;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return _swift_task_switch(sub_10035F4BC, 0, 0);
}

uint64_t sub_100365E5C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100365E94(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1001AE5D4;
  return sub_10035F720(a1, a2, v6, v7, v8);
}

uint64_t sub_100365F58()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100365FA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 32);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1001B38CC;
  return sub_10035FAA0(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_100366068()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003660A8()
{
  return sub_100364C14(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003660B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003660C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003660D8()
{
  return swift_release();
}

void sub_1003660E0(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
}
  }

uint64_t sub_1003660F4@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for MetadataItem(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetadataItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003662A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetadataItem()
{
  return &type metadata for MetadataItem;
}

unint64_t sub_1003662DC()
{
  unint64_t result = qword_100635CB8;
  if (!qword_100635CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635CB8);
  }
  return result;
}

double DOCImageContainerFittingView.contentOffsetFromTop.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_contentOffsetFromTop;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t DOCImageContainerFittingView.contentOffsetFromTop.setter(double a1)
{
  int v3 = (double *)(v1 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_contentOffsetFromTop);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t DOCImageContainerFittingView.isShadowHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_isShadowHidden);
  swift_beginAccess();
  return *v1;
}

void DOCImageContainerFittingView.isShadowHidden.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_isShadowHidden);
  swift_beginAccess();
  *int v3 = a1;
  _s14RecentsAvocado28DOCImageContainerFittingViewC012fittingImageF9DidLayoutyySo010DOCFittinghF0CF_0();
}

void (*DOCImageContainerFittingView.isShadowHidden.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100366568;
}

void sub_100366568(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    _s14RecentsAvocado28DOCImageContainerFittingViewC012fittingImageF9DidLayoutyySo010DOCFittinghF0CF_0();
  }
}

void sub_10036659C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_metrics] = 0x4014000000000000;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_contentOffsetFromTop] = 0;
  v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_isShadowHidden] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_thumbnails] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes] = _swiftEmptyArrayStorage;
  uint64_t v9 = 3;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_maxThumbnailCount] = 3;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_nodes] = _swiftEmptyArrayStorage;
  v36.receiver = v4;
  v36.super_class = (Class)type metadata accessor for DOCImageContainerFittingView();
  uint64_t v10 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v34 = OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_metrics;
  id v35 = &v10[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  uint64_t v33 = v10;
  uint64_t v11 = v10;
  do
  {
    double v12 = *(double *)&v33[v34];
    id v13 = [objc_allocWithZone((Class)DOCFittingImageView) init];
    id v14 = [v13 layer];
    [v14 setBorderWidth:1.0];

    id v15 = [v13 layer];
    [v15 setCornerRadius:v12];

    [v13 setContentMode:1];
    [v13 setClipsToBounds:1];
    double v16 = *(double *)&v33[v34];
    id v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v17 setClipsToBounds:0];
    id v18 = [v17 layer];
    [v18 setMasksToBounds:0];
    [v18 setBorderWidth:0.0];
    [v18 setCornerRadius:v16];
    objc_msgSend(v18, "setShadowOffset:", 0.0, 4.0);
    LODWORD(v19) = 1036831949;
    [v18 setShadowOpacity:v19];

    [v13 setDelegate:v11];
    [v13 frame];
    objc_msgSend(v17, "setFrame:");
    [v13 setClipsToBounds:1];
    swift_beginAccess();
    uint64_t v20 = *(void **)v35;
    id v21 = v13;
    id v22 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)id v35 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v20 = sub_100238A04(0, v20[2] + 1, 1, v20);
      *(void *)id v35 = v20;
    }
    unint64_t v25 = v20[2];
    unint64_t v24 = v20[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t v20 = sub_100238A04((void *)(v24 > 1), v25 + 1, 1, v20);
      *(void *)id v35 = v20;
    }
    _OWORD v20[2] = v25 + 1;
    id v26 = &v20[2 * v25];
    v26[4] = v21;
    v26[5] = v22;
    swift_endAccess();

    --v9;
  }
  while (v9);
  uint64_t v27 = *(void **)v35;
  uint64_t v28 = *(void *)(*(void *)v35 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = (void **)&v27[2 * v28 + 3];
    while (v28 <= v27[2])
    {
      --v28;
      unint64_t v30 = *v29;
      id v31 = *(v29 - 1);
      id v32 = v30;
      [v11 addSubview:v32];
      [v11 addSubview:v31];

      v29 -= 2;
      if (!v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    objc_msgSend(v11, "setClipsToBounds:", 0, v33);
    sub_100367B2C();
  }
}

double DOCImageContainerFittingView.fittingSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess();
  if (!*(void *)(*(void *)v1 + 16)) {
    return 0.0;
  }
  [*(id *)(*(void *)v1 + 32) fittingSize];
  return result;
}

id DOCImageContainerFittingView.fittingSize.setter(double a1, double a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    do
    {
      objc_msgSend(*(id *)(v6 + v8), "setFittingSize:", a1, a2);
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return [v2 invalidateIntrinsicContentSize];
}

void (*DOCImageContainerFittingView.fittingSize.modify(void *a1))(double **a1, char a2)
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16))
  {
    [*(id *)(*(void *)v5 + 32) fittingSize];
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  v3[3] = v6;
  v3[4] = v7;
  return sub_100366BE0;
}

void sub_100366BE0(double **a1, char a2)
{
  int v2 = *a1;
  int v3 = (char *)*((void *)*a1 + 5);
  uint64_t v4 = *(void *)&v3[*((void *)v2 + 6)];
  uint64_t v5 = *(void *)(v4 + 16);
  if (a2)
  {
    if (!v5) {
      goto LABEL_10;
    }
    double v7 = v2[3];
    double v6 = v2[4];
    uint64_t v8 = (void **)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = *v8;
      v8 += 2;
      objc_msgSend(v9, "setFittingSize:", v7, v6);
      --v5;
    }
    while (v5);
  }
  else
  {
    if (!v5) {
      goto LABEL_10;
    }
    double v11 = v2[3];
    double v10 = v2[4];
    double v12 = (void **)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      id v13 = *v12;
      v12 += 2;
      objc_msgSend(v13, "setFittingSize:", v11, v10);
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  int v3 = (char *)*((void *)v2 + 5);
LABEL_10:
  [v3 invalidateIntrinsicContentSize];
  free(v2);
}

void *DOCImageContainerFittingView.firstThumbnailView.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess();
  if (!*(void *)(*(void *)v1 + 16)) {
    return 0;
  }
  int v2 = *(void **)(*(void *)v1 + 32);
  id v3 = v2;
  return v2;
}

id sub_100366D24()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_nodes);
  swift_beginAccess();
  unint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  id v3 = (uint64_t *)sub_1000317F4(3, v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t i = v8;
  swift_bridgeObjectRelease();
  if (i)
  {
    sub_1004CF8B0();
    swift_unknownObjectRetain_n();
    double v11 = (void *)swift_dynamicCastClass();
    if (!v11)
    {
      swift_unknownObjectRelease();
      double v11 = _swiftEmptyArrayStorage;
    }
    uint64_t v12 = v11[2];
    swift_release();
    if (__OFSUB__(i >> 1, v7)) {
      goto LABEL_45;
    }
    if (v12 != (i >> 1) - v7) {
      goto LABEL_46;
    }
    double v10 = (void *)swift_dynamicCastClass();
    if (!v10)
    {
      swift_unknownObjectRelease();
      double v10 = _swiftEmptyArrayStorage;
    }
    goto LABEL_9;
  }
  while (1)
  {
    double v10 = sub_100317100((uint64_t)v3, v5, v7, i);
LABEL_9:
    swift_unknownObjectRelease();
    uint64_t v13 = OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes;
    *(void *)&v49[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes] = v10;
    swift_bridgeObjectRelease();
    id v3 = (uint64_t *)&v49[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_thumbnails];
    swift_beginAccess();
    uint64_t v5 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v7 = sub_1004CF6D0();
      if (!v7) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v7) {
        goto LABEL_18;
      }
    }
    if (v7 >= 1) {
      break;
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_unknownObjectRelease();
  }
  for (unint64_t i = 0; i != v7; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v14 = (void *)sub_1004CF500();
    }
    else
    {
      id v14 = *(void **)(v5 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    objc_msgSend(v14, "removeListener:", v49, v44, v45);
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  *id v3 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v15 = &v49[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v48 = v15;
  uint64_t v16 = *(void *)v15;
  uint64_t v5 = *(void *)(*(void *)v15 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    id v17 = (void **)(v16 + 40);
    do
    {
      id v18 = *v17;
      unint64_t i = *(v17 - 1);
      id v19 = v18;
      [(id)i setHidden:1];
      [v19 setHidden:1];

      v17 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  unint64_t v20 = *(void *)&v49[v13];
  if (v20 >> 62)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1004CF6D0();
      if (!v7) {
        break;
      }
LABEL_24:
      id v46 = self;
      if (v7 < 1) {
        goto LABEL_44;
      }
      uint64_t v5 = 0;
      unint64_t v21 = 0;
      unint64_t v47 = v20 & 0xC000000000000001;
      id v22 = &selRef_setHiddenSourcesIdentifiers_;
      uint64_t v44 = v7;
      uint64_t v45 = v20;
      while (1)
      {
        if (v47)
        {
          uint64_t v23 = (void *)sub_1004CF500();
        }
        else
        {
          uint64_t v23 = *(void **)(v20 + 8 * v21 + 32);
          swift_unknownObjectRetain();
        }
        if (v21 >= *(void *)(*(void *)v48 + 16)) {
          break;
        }
        uint64_t v24 = *(void *)v48 + v5;
        unint64_t v25 = *(void **)(v24 + 40);
        id v26 = *(id *)(v24 + 32);
        id v27 = v25;
        id v28 = [v49 v22[201]];
        unint64_t v29 = (unint64_t)[v28 userInterfaceStyle];

        if (v29 >= 3)
        {
          type metadata accessor for UIUserInterfaceStyle(0);
          v50[3] = v31;
          v50[0] = v29;
          sub_1004CC5F0();
          sub_100039184((uint64_t)v50);
          uint64_t v30 = 1;
        }
        else
        {
          uint64_t v30 = qword_1004EE830[v29];
        }
        if (*(void *)(*(void *)v48 + 16))
        {
          [*(id *)(*(void *)v48 + 32) fittingSize];
          double v33 = v32;
          double v35 = v34;
        }
        else
        {
          double v35 = 0.0;
          double v33 = 0.0;
        }
        id v36 = objc_msgSend(v49, v22[201], v44, v45);
        [v36 displayScale];
        double v38 = v37;

        id v39 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:scale:style:isFolded:isInteractive:isFolder:", v30, 0, 1, objc_msgSend(v23, "isFolder"), v33, v35, v38);
        id v40 = [v46 sharedGenerator];
        unint64_t i = (unint64_t)[v40 thumbnailForNode:v23 descriptor:v39 forceFetch:1];

        [(id)i addListener:v49];
        swift_beginAccess();
        swift_unknownObjectRetain();
        sub_1004CDE00();
        if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1004CDE60();
        }
        ++v21;
        sub_1004CDF40();
        sub_1004CDE50();
        swift_endAccess();
        [v26 setHidden:0];
        [v27 setHidden:0];
        id v41 = v26;
        id v42 = [(id)i thumbnail];
        [v41 setImage:v42];
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        v5 += 16;
        unint64_t v20 = v45;
        id v22 = &selRef_setHiddenSourcesIdentifiers_;
        if (v44 == v21) {
          goto LABEL_42;
        }
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_24;
    }
  }
LABEL_42:
  swift_bridgeObjectRelease();
  sub_100367B2C();
  [v49 invalidateIntrinsicContentSize];
  return [v49 setNeedsLayout];
}

uint64_t DOCImageContainerFittingView.nodes.getter()
{
  return swift_bridgeObjectRetain();
}

id DOCImageContainerFittingView.nodes.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_nodes);
  swift_beginAccess();
  *id v3 = a1;
  swift_bridgeObjectRelease();
  return sub_100366D24();
}

id (*DOCImageContainerFittingView.nodes.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100367498;
}

id sub_100367498(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_100366D24();
  }
  return result;
}

double DOCImageContainerFittingView.systemLayoutSizeFitting(_:)(double a1)
{
  id v3 = &v1[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  if (v4)
  {
    double v5 = 0.0;
    uint64_t v6 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v7 = *v6;
      id v8 = *(v6 - 1);
      id v9 = v7;
      id v10 = [v8 image];
      if (v10)
      {
        double v11 = v10;
        [v10 size];
        id v12 = [v1 window];
        if (v12)
        {
          uint64_t v13 = v12;
          id v14 = [v12 screen];

          [v14 scale];
        }
        DOCAdaptSizeToRect();
        CGFloat v16 = v15;
        CGFloat v18 = v17;
        CGFloat v20 = v19;
        CGFloat v22 = v21;
        [v8 transform];
        v26.origin.x = v16;
        v26.origin.y = v18;
        v26.size.width = v20;
        v26.size.double height = v22;
        CGRect v27 = CGRectApplyAffineTransform(v26, &v25);
        double height = v27.size.height;

        if (v5 <= height) {
          double v5 = height;
        }
      }
      else
      {
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return a1;
}

id DOCImageContainerFittingView.intrinsicContentSize.getter()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    [*(id *)(*(void *)v1 + 32) fittingSize];
  }
  else
  {
    double v3 = 0.0;
    double v2 = 0.0;
  }
  return objc_msgSend(v0, "systemLayoutSizeFittingSize:", v2, v3);
}

Swift::Void __swiftcall DOCImageContainerFittingView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCImageContainerFittingView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  DOCImageContainerFittingView.updateContentFrame()();
  [v0 setContentOffsetFromTop:0.0];
}

Swift::Void __swiftcall DOCImageContainerFittingView.updateContentFrame()()
{
  [v0 bounds];
  objc_super v1 = &v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2)
  {
    double v3 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      double v17 = *v3;
      id v18 = *(v3 - 1);
      id v19 = v17;
      id v20 = v18;
      id v21 = v19;
      [v20 intrinsicContentSize];
      id v22 = [v0 window];
      if (v22)
      {
        uint64_t v4 = v22;
        id v5 = [v22 screen];

        [v5 scale];
      }
      DOCAdaptSizeToRect();
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      id v14 = v20;
      v23.origin.x = v7;
      v23.origin.y = v9;
      v23.size.width = v11;
      v23.size.double height = v13;
      double MidX = CGRectGetMidX(v23);
      v24.origin.x = v7;
      v24.origin.y = v9;
      v24.size.width = v11;
      v24.size.double height = v13;
      objc_msgSend(v14, "setCenter:", MidX, CGRectGetMidY(v24));

      id v16 = v14;
      [v16 bounds];
      objc_msgSend(v16, "setBounds:");

      [v16 center];
      objc_msgSend(v21, "setCenter:");
      [v16 bounds];
      [v21 bounds];
      objc_msgSend(v21, "setBounds:");

      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  _s14RecentsAvocado28DOCImageContainerFittingViewC012fittingImageF9DidLayoutyySo010DOCFittinghF0CF_0();
}

void sub_100367B2C()
{
  objc_super v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_nodes);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v5 = 0;
    CGFloat b = CGAffineTransformIdentity.b;
    CGFloat tx = CGAffineTransformIdentity.tx;
    CGFloat d = CGAffineTransformIdentity.d;
    CGFloat c = CGAffineTransformIdentity.c;
    CGFloat ty = CGAffineTransformIdentity.ty;
    while (v5 < *(void *)(v2 + 16))
    {
      uint64_t v9 = v2 + 32 + 16 * v5;
      double v10 = *(void **)v9;
      CGFloat v11 = *(void **)(v9 + 8);
      if (v5)
      {
        t1.CGFloat a = 0.0;
        id v12 = v10;
        id v13 = v11;
        while (1)
        {
          swift_stdlib_random();
          if ((unint64_t)(0x20000000000001 * *(void *)&t1.a) >= 0x1FFFFFFFFFF801) {
            break;
          }
          t1.CGFloat a = 0.0;
        }
        unint64_t v14 = (*(unint64_t *)&t1.a * (unsigned __int128)0x20000000000001uLL) >> 64;
        double v15 = (double)v14 * 1.11022302e-16 * 4.0 + 3.0;
        if (v14 == 0x20000000000000) {
          double v15 = 7.0;
        }
        if ((v5 & 1) == 0) {
          double v15 = -v15;
        }
        CGAffineTransformMakeRotation(&t1, v15 * 3.14159265 / 180.0);
        CGFloat a = t1.a;
        CGFloat v17 = t1.b;
        CGFloat v18 = t1.c;
        CGFloat v19 = t1.d;
        CGFloat v20 = t1.tx;
        CGFloat v21 = t1.ty;
      }
      else
      {
        id v22 = v10;
        id v23 = v11;
        CGFloat v17 = b;
        CGFloat a = CGAffineTransformIdentity.a;
        CGFloat v19 = d;
        CGFloat v18 = c;
        CGFloat v20 = tx;
        CGFloat v21 = ty;
      }
      if (*v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_1004CF6D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      CGFloat v26 = b;
      CGFloat v25 = CGAffineTransformIdentity.a;
      CGFloat v28 = d;
      CGFloat v27 = c;
      CGFloat v29 = tx;
      CGFloat v30 = ty;
      if (v24 >= 2)
      {
        CGAffineTransformMakeScale(&t1, 0.95, 0.95);
        CGFloat v25 = t1.a;
        CGFloat v26 = t1.b;
        CGFloat v27 = t1.c;
        CGFloat v28 = t1.d;
        CGFloat v29 = t1.tx;
        CGFloat v30 = t1.ty;
      }
      ++v5;
      t1.CGFloat a = a;
      t1.CGFloat b = v17;
      t1.CGFloat c = v18;
      t1.CGFloat d = v19;
      t1.CGFloat tx = v20;
      t1.CGFloat ty = v21;
      t2.CGFloat a = v25;
      t2.CGFloat b = v26;
      t2.CGFloat c = v27;
      t2.CGFloat d = v28;
      t2.CGFloat tx = v29;
      t2.CGFloat ty = v30;
      CGAffineTransformConcat(&v34, &t1, &t2);
      CGAffineTransform t1 = v34;
      [v10 setTransform:&t1];
      [v10 transform];
      [v11 setTransform:&t1];
      id v8 = [v10 layer];
      [v8 setAllowsEdgeAntialiasing:1];

      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void _s14RecentsAvocado28DOCImageContainerFittingViewC012fittingImageF9DidLayoutyySo010DOCFittinghF0CF_0()
{
  uint64_t v35 = OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes;
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes);
  if (v1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    id v37 = self;
    uint64_t v3 = (unsigned __int8 *)(v36 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_isShadowHidden);
    uint64_t v34 = v36 + OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs;
    swift_beginAccess();
    double v33 = v3;
    swift_beginAccess();
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v32 = v2;
    while (1)
    {
      uint64_t v14 = *(void *)(v36 + v35);
      if ((v14 & 0xC000000000000001) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      double v15 = (void *)sub_1004CF500();
      swift_bridgeObjectRelease();
LABEL_12:
      swift_getObjectType();
      if (sub_1004CED90()) {
        unsigned int v16 = 2;
      }
      else {
        unsigned int v16 = [v15 isFolder];
      }
      swift_unknownObjectRelease();
      if (v5 >= *(void *)(*(void *)v34 + 16)) {
        goto LABEL_27;
      }
      uint64_t v17 = *(void *)v34 + v4;
      CGFloat v18 = *(void **)(v17 + 32);
      id v19 = *(id *)(v17 + 40);
      id v20 = v18;
      id v21 = [v20 layer];
      if (v16)
      {
        id v22 = [v37 clearColor];
        CGFloat a = COERCE_DOUBLE([v22 CGColor]);
      }
      else
      {
        type metadata accessor for CGColor(0);
        sub_1004CAFF0();
        CGFloat a = v38.a;
      }
      objc_msgSend(v21, "setBorderColor:", *(void *)&a, v32);

      [v19 setHidden:*v33];
      id v24 = [v19 layer];
      if (v16 == 1)
      {
        [v19 bounds];
        double v26 = v25;
        double v28 = v27;
        sub_10036967C();
        CGFloat v29 = (void *)sub_1004CE220();
        CGFloat v30 = v29;
        if (v26 > 0.0 && v28 > 0.0)
        {
          [v29 bounds];
          CGAffineTransformMakeScale(&v38, v26 / v31, v26 / v31);
          [v30 applyTransform:&v38];
          CGAffineTransformMakeTranslation(&v38, 0.0, 0.0);
          [v30 applyTransform:&v38];
        }
        id v6 = [v30 CGPath];
      }
      else
      {
        id v6 = 0;
      }
      ++v5;
      [v24 setShadowPath:v6];

      id v7 = [v19 layer];
      id v8 = &selRef_systemBackgroundColor;
      if (v16) {
        id v8 = &selRef_clearColor;
      }
      id v9 = [v37 *v8];
      id v10 = [v9 CGColor];

      [v7 setBackgroundColor:v10];
      id v11 = [v19 layer];
      id v12 = [v37 blackColor];
      id v13 = [v12 CGColor];

      [v11 setShadowColor:v13];
      v4 += 16;
      if (v32 == v5) {
        return;
      }
    }
    if (v5 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      double v15 = *(void **)(v14 + 8 * v5 + 32);
      swift_unknownObjectRetain();
      goto LABEL_12;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
  }
}

void DOCImageContainerFittingView.thumbnailLoaded(_:)(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_100369330(v2, a1);
  char v5 = v4;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v5 & 1) == 0) {
    sub_100368454(a1, v3);
  }
}

void sub_100368454(void *a1, unint64_t a2)
{
  id v7 = &v2[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(*(void *)v7 + 16) <= a2)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v11 > 1) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  a2 = (unint64_t)*(id *)(*(void *)v7 + 16 * a2 + 32);
  id v7 = (char *)[(id)a2 image];
  char v4 = &selRef_effectiveParentItemIdentifier;
  unint64_t v3 = (char *)[a1 thumbnail];
  unint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes];
  if (v8 >> 62) {
    goto LABEL_11;
  }
  if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
LABEL_7:

    goto LABEL_8;
  }
LABEL_5:
  if (v7)
  {
    id v7 = v7;
    [v7 size];
    [v7 size];
    [v3 size];
    [v3 size];

    unint64_t v3 = v7;
    goto LABEL_7;
  }
LABEL_8:

  id v9 = (id)a2;
  id v10 = [a1 v4[111]];
  [v9 setImage:v10];

  DOCImageContainerFittingView.updateContentFrame()();
  [v2 setNeedsLayout];
}

id DOCImageContainerFittingView.__deallocating_deinit()
{
  return sub_100369220(type metadata accessor for DOCImageContainerFittingView);
}

double DOCContainerFittingView.intrinsicContentSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_fittingSize;
  swift_beginAccess();
  return *(double *)v1;
}

id DOCContainerFittingView.fittingSize.setter(double a1, double a2)
{
  char v5 = (double *)&v2[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_fittingSize];
  swift_beginAccess();
  *char v5 = a1;
  v5[1] = a2;
  return [v2 invalidateIntrinsicContentSize];
}

id (*DOCContainerFittingView.fittingSize.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100368808;
}

id sub_100368808(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    char v5 = *(void **)(a1 + 24);
    return [v5 invalidateIntrinsicContentSize];
  }
  return result;
}

double DOCContainerFittingView.contentOffsetFromTop.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_contentOffsetFromTop;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t DOCContainerFittingView.contentOffsetFromTop.setter(double a1)
{
  unint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_contentOffsetFromTop);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = a1;
  return result;
}

char *DOCContainerFittingView.__allocating_init(containedViewController:)(void *a1)
{
  unint64_t v3 = objc_allocWithZone(v1);
  char v4 = &v3[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_fittingSize];
  *char v4 = 0;
  v4[1] = 0;
  v3[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_containedViewController] = a1;
  v11.receiver = v3;
  v11.super_class = v1;
  id v5 = a1;
  id v6 = (char *)objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t result = (char *)[v5 view];
  if (result)
  {
    unint64_t v8 = result;
    [v6 addSubview:result];

    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = sub_1004CAAC0();

    swift_release();
    swift_release();

    id v10 = *(void **)&v6[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext];
    *(void *)&v6[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext] = v9;

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *DOCContainerFittingView.init(containedViewController:)(void *a1)
{
  unint64_t v3 = &v1[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_fittingSize];
  *unint64_t v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_containedViewController] = a1;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCContainerFittingView();
  id v4 = a1;
  id v5 = (char *)objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t result = (char *)[v4 view];
  if (result)
  {
    id v7 = result;
    [v5 addSubview:result];

    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = sub_1004CAAC0();

    swift_release();
    swift_release();

    uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext];
    *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext] = v8;

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100368CB8()
{
  sub_100031648(&qword_100635DD8);
  sub_1004CAA80();
  sub_1004CAA70();
  if (v5)
  {
    if (v8) {
      return;
    }
    goto LABEL_9;
  }
  if ((v8 & 1) != 0 || (v3 == v6 ? (BOOL v0 = v4 == v7) : (BOOL v0 = 0), !v0))
  {
LABEL_9:
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v2 = Strong;
      [Strong invalidateIntrinsicContentSize];
      [v2 setNeedsLayout];
      [v2 layoutIfNeeded];
      *((unsigned char *)v2 + OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_preventContentOffsetUpdates) = 0;
    }
  }
}

Swift::Void __swiftcall DOCContainerFittingView.layoutSubviews()()
{
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for DOCContainerFittingView();
  objc_msgSendSuper2(&v31, "layoutSubviews");
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_containedViewController];
  [v9 preferredContentSize];
  id v10 = [v0 window];
  if (v10)
  {
    objc_super v11 = v10;
    id v12 = [v10 screen];

    [v12 scale];
  }
  DOCAdaptSizeToRect();
  double v14 = v13;
  CGFloat v16 = v15;
  double v18 = v17;
  double v20 = v19;
  v32.origin.x = v2;
  v32.origin.y = v4;
  v32.size.width = v6;
  v32.size.double height = v8;
  double MaxY = CGRectGetMaxY(v32);
  v33.origin.x = v14;
  v33.origin.y = v16;
  v33.size.width = v18;
  v33.size.double height = v20;
  double Height = CGRectGetHeight(v33);
  id v23 = [v9 view];
  if (!v23)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v24 = v23;
  objc_msgSend(v23, "setFrame:", v14, MaxY - Height, v18, v20);

  if (v0[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_preventContentOffsetUpdates]) {
    return;
  }
  [v0 frame];
  double v26 = v25;
  id v27 = [v9 view];
  if (!v27)
  {
LABEL_9:
    __break(1u);
    return;
  }
  double v28 = v27;
  [v27 frame];
  double v30 = v29;

  [v0 setContentOffsetFromTop:v26 - v30];
}

void DOCContainerFittingView.init(coder:)()
{
  double v1 = &v0[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_fittingSize];
  *double v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado23DOCContainerFittingView_observationContext] = 0;

  sub_1004CF6B0();
  __break(1u);
}

void DOCContainerFittingView.init(frame:)()
{
}

id DOCContainerFittingView.__deallocating_deinit()
{
  return sub_100369220(type metadata accessor for DOCContainerFittingView);
}

id sub_100369220(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

unint64_t sub_1003692A4(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    uint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100369330(unint64_t a1, void *a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
LABEL_3:
  for (uint64_t i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      CGFloat v6 = (void *)sub_1004CF500();
    }
    else
    {
      CGFloat v6 = *(void **)(a1 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    id v7 = [v6 hash];
    id v8 = [a2 hash];
    swift_unknownObjectRelease();
    if (v7 == v8) {
      break;
    }
    uint64_t v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v9 == v4) {
      return 0;
    }
  }
  return i;
}

void _s14RecentsAvocado28DOCImageContainerFittingViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_metrics] = 0x4014000000000000;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_contentOffsetFromTop] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_isShadowHidden] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_viewPairs] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_thumbnails] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_displayedNodes] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_maxThumbnailCount] = 3;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado28DOCImageContainerFittingView_nodes] = _swiftEmptyArrayStorage;

  sub_1004CF6B0();
  __break(1u);
}

uint64_t type metadata accessor for DOCImageContainerFittingView()
{
  return self;
}

const char *sub_10036954C()
{
  return "preferredContentSize";
}

id sub_100369558@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 preferredContentSize];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_10036958C(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setPreferredContentSize:", *a1, a1[1]);
}

uint64_t sub_1003695A0()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003695D8()
{
}

uint64_t type metadata accessor for DOCContainerFittingView()
{
  return self;
}

uint64_t assignWithCopy for DOCImageContainerFittingView.ViewPair(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for DOCImageContainerFittingView.ViewPair()
{
  return &type metadata for DOCImageContainerFittingView.ViewPair;
}

ValueMetadata *type metadata accessor for DOCImageContainerFittingView.Metrics()
{
  return &type metadata for DOCImageContainerFittingView.Metrics;
}

unint64_t sub_10036967C()
{
  unint64_t result = qword_10062DD10;
  if (!qword_10062DD10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10062DD10);
  }
  return result;
}

id sub_1003696D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionGridCell_Base();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCItemCollectionGridCell_Base()
{
  return self;
}

BOOL sub_100369728(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10036A58C(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_10036A58C(v10 & a2);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v11 == a2)
  {
    a3 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v4 = sub_10036A58C(v9 | a2);
    v4[1] = v16;
    v4[2] = v17;
    uint64_t v15 = a4;
  }
  BOOL result = v11 != a2;
  *a1 = a2;
  a1[1] = a3;
  a1[2] = v15;
  return result;
}

BOOL UITraitCollection.doc_isRTL.getter()
{
  return [v0 layoutDirection] == (id)1;
}

uint64_t sub_10036982C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10036A58C(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 & a1);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10036A58C(0);
  swift_bridgeObjectRelease();
  if (v5 == v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10036A58C(v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_10036A58C(v7 ^ a1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v9 = sub_10036A58C(v8 & v3);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    *unint64_t v1 = v9;
    v1[1] = v11;
    v1[2] = v13;
  }
  return v5;
}

uint64_t sub_10036996C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10036A58C(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 & a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  uint64_t v6 = sub_10036A58C(v3 | a1);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *unint64_t v1 = v6;
  v1[1] = v8;
  v1[2] = v10;
  uint64_t v11 = sub_10036A58C(0);
  swift_bridgeObjectRelease();
  if (v5 == v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

BOOL UIViewController.doc_isRTL.getter()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 layoutDirection];

  return v2 == (id)1;
}

void sub_100369AA8()
{
  qword_100635E08 = 0;
}

void *sub_100369AB4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_100369AE4(void *a1@<X8>)
{
  *a1 = &off_1005B56D0;
}

void sub_100369AF4(void *a1@<X8>)
{
  *a1 = &off_1005B5700;
}

uint64_t sub_100369B04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10036A58C(*a1);
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_100369B34()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100369B64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10036A58C(0);
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100369B98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_10036A58C(*v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10036A58C(v5 | v4);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100369C34@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_10036A58C(*v2);
  swift_bridgeObjectRelease();
  *a2 = sub_10036A58C(v5 & v4);
  a2[1] = v6;
  a2[2] = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100369C98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_10036A58C(*v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10036A58C(v5 ^ v4);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_100369D34(void *a1, uint64_t *a2)
{
  BOOL v2 = sub_100369728(a1, *a2, a2[1], a2[2]);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100369D74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10036982C(*a1);
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_100369DAC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10036996C(*a1);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  a2[1] = v5;
  a2[2] = v7;
  return result;
}

uint64_t sub_100369E0C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRelease();
  *uint64_t v1 = sub_10036A58C(v3 | v2);
  v1[1] = v4;
  v1[2] = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100369E68(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRelease();
  uint64_t result = sub_10036A58C(v3 & v2);
  *uint64_t v1 = result;
  v1[1] = v5;
  v1[2] = v6;
  return result;
}

uint64_t sub_100369EAC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRelease();
  *uint64_t v1 = sub_10036A58C(v3 ^ v2);
  v1[1] = v4;
  v1[2] = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100369F08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10036A58C(v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_10036A58C(v6 ^ v4);
  swift_bridgeObjectRelease_n();
  uint64_t v8 = sub_10036A58C(v5);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10036A58C(v8 & v7);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v13;
  return result;
}

BOOL sub_100369FE0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10036A58C(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 & v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 == v3;
}

BOOL sub_10036A054(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10036A58C(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 & v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10036A58C(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 == v6;
}

BOOL sub_10036A0E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10036A58C(v2);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 & v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 == v2;
}

BOOL sub_10036A154()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_10036A58C(0);
  swift_bridgeObjectRelease();
  return v1 == v2;
}

uint64_t sub_10036A190(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10036A58C(v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 ^ v2);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v6 = sub_10036A58C(v5 & v3);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v6;
  v1[1] = v8;
  v1[2] = v10;
  return result;
}

uint64_t sub_10036A250@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1004858D0(a1);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  a2[1] = v5;
  a2[2] = v7;
  return result;
}

ValueMetadata *type metadata accessor for DOCSourceOutlineStyle()
{
  return &type metadata for DOCSourceOutlineStyle;
}

void *_s6TraitsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s6TraitsVMa()
{
  return &_s6TraitsVN;
}

unint64_t sub_10036A3B0()
{
  unint64_t result = qword_100635E10;
  if (!qword_100635E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635E10);
  }
  return result;
}

unint64_t sub_10036A408()
{
  unint64_t result = qword_100635E18;
  if (!qword_100635E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635E18);
  }
  return result;
}

unint64_t sub_10036A460()
{
  unint64_t result = qword_100635E20;
  if (!qword_100635E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635E20);
  }
  return result;
}

unint64_t sub_10036A4B8()
{
  unint64_t result = qword_100635E28;
  if (!qword_100635E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635E28);
  }
  return result;
}

uint64_t sub_10036A50C()
{
  return sub_10036AF70(&qword_100635E30, &qword_100635E38);
}

unint64_t sub_10036A538()
{
  unint64_t result = qword_100635E40;
  if (!qword_100635E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635E40);
  }
  return result;
}

uint64_t sub_10036A58C(uint64_t a1)
{
  sub_1004CF4D0(18);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = sub_1004CF840();
  sub_1004CDCD0(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v4);
  return a1;
}

BOOL sub_10036A644(uint64_t a1)
{
  BOOL v3 = 1;
  uint64_t v4 = sub_10036A58C(1);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10036A58C(v4 & a1);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    BOOL v3 = [v1 horizontalSizeClass] != 0;
  }
  uint64_t v6 = sub_10036A58C(2);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_10036A58C(v6 & a1);
  swift_bridgeObjectRelease();
  BOOL v8 = v7 != 2 && v3;
  if (v7 == 2 && v3) {
    BOOL v8 = [v1 verticalSizeClass] != 0;
  }
  uint64_t v9 = sub_10036A58C(4);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_10036A58C(v9 & a1);
  swift_bridgeObjectRelease();
  BOOL v11 = v10 != 4 && v8;
  if (v10 == 4 && v8)
  {
    [v1 displayScale];
    double v13 = v12;
    if (qword_1006269D8 != -1) {
      swift_once();
    }
    BOOL v11 = *(double *)&qword_100635E08 < v13;
  }
  uint64_t v14 = sub_10036A58C(8);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_10036A58C(v14 & a1);
  swift_bridgeObjectRelease();
  BOOL v16 = v15 != 8 && v11;
  if (v15 == 8 && v11) {
    BOOL v16 = [v1 userInterfaceStyle] != 0;
  }
  uint64_t v17 = sub_10036A58C(16);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_10036A58C(v17 & a1);
  swift_bridgeObjectRelease();
  LOBYTE(v19) = v18 != 16 && v16;
  if (v18 == 16 && v16)
  {
    id v20 = [v1 preferredContentSizeCategory];
    uint64_t v21 = sub_1004CDB50();
    uint64_t v23 = v22;
    if (v21 == sub_1004CDB50() && v23 == v24) {
      LOBYTE(v19) = 0;
    }
    else {
      int v19 = sub_1004CF890() ^ 1;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = sub_10036A58C(32);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10036A58C(v25 & a1);
  swift_bridgeObjectRelease();
  int v27 = (v26 != 32) & v19;
  if (v26 == 32 && (v19 & 1) != 0) {
    int v27 = [v1 userInterfaceIdiom] != (id)-1;
  }
  uint64_t v28 = sub_10036A58C(64);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_10036A58C(v28 & a1);
  swift_bridgeObjectRelease();
  if (v29 == 64) {
    BOOL v30 = 0;
  }
  else {
    BOOL v30 = v27;
  }
  if (v29 == 64 && v27) {
    BOOL v30 = [v1 layoutDirection] != (id)-1;
  }
  uint64_t v31 = sub_10036A58C(256);
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_10036A58C(v31 & a1);
  swift_bridgeObjectRelease();
  BOOL result = v32 != 256 && v30;
  if (v32 == 256 && v30) {
    return [v1 legibilityWeight] != (id)-1;
  }
  return result;
}

uint64_t sub_10036A9A8(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10036A58C(1);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10036A58C(v5 & a1);
  swift_bridgeObjectRelease();
  if (v6 == 1)
  {
    if (a2) {
      id v7 = [a2 horizontalSizeClass];
    }
    else {
      id v7 = 0;
    }
    BOOL v8 = v7 != [v2 horizontalSizeClass];
  }
  else
  {
    BOOL v8 = 0;
  }
  uint64_t v9 = sub_10036A58C(2);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_10036A58C(v9 & a1);
  swift_bridgeObjectRelease();
  BOOL v11 = v10 == 2 || v8;
  if (v10 == 2 && !v8)
  {
    if (a2) {
      id v12 = [a2 verticalSizeClass];
    }
    else {
      id v12 = 0;
    }
    BOOL v11 = v12 != [v2 verticalSizeClass];
  }
  uint64_t v13 = sub_10036A58C(4);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_10036A58C(v13 & a1);
  swift_bridgeObjectRelease();
  BOOL v15 = v14 == 4 || v11;
  if (v14 == 4 && !v11)
  {
    if (a2)
    {
      [a2 displayScale];
      double v17 = v16;
    }
    else
    {
      if (qword_1006269D8 != -1) {
        swift_once();
      }
      double v17 = *(double *)&qword_100635E08;
    }
    [v2 displayScale];
    BOOL v15 = v17 != v18;
  }
  uint64_t v19 = sub_10036A58C(8);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_10036A58C(v19 & a1);
  swift_bridgeObjectRelease();
  BOOL v21 = v20 == 8 || v15;
  if (v20 == 8 && !v15)
  {
    if (a2) {
      id v22 = [a2 userInterfaceStyle];
    }
    else {
      id v22 = 0;
    }
    BOOL v21 = v22 != [v2 userInterfaceStyle];
  }
  uint64_t v23 = sub_10036A58C(16);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_10036A58C(v23 & a1);
  swift_bridgeObjectRelease();
  char v25 = v24 == 16 || v21;
  if (v24 == 16 && !v21)
  {
    if (a2) {
      uint64_t v26 = (NSString *)[a2 preferredContentSizeCategory];
    }
    else {
      uint64_t v26 = UIContentSizeCategoryUnspecified;
    }
    int v27 = v26;
    id v28 = [v2 preferredContentSizeCategory];
    uint64_t v29 = sub_1004CDB50();
    uint64_t v31 = v30;
    if (v29 == sub_1004CDB50() && v31 == v32)
    {
      swift_bridgeObjectRelease_n();
      char v25 = 0;
    }
    else
    {
      char v33 = sub_1004CF890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v25 = v33 ^ 1;
    }
  }
  uint64_t v34 = sub_10036A58C(32);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10036A58C(v34 & a1);
  swift_bridgeObjectRelease();
  char v36 = (v35 == 32) | v25;
  if (v35 == 32 && (v25 & 1) == 0)
  {
    if (a2) {
      uint64_t v37 = (uint64_t)[a2 userInterfaceIdiom];
    }
    else {
      uint64_t v37 = -1;
    }
    char v36 = v37 != (void)[v2 userInterfaceIdiom];
  }
  uint64_t v38 = sub_10036A58C(64);
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_10036A58C(v38 & a1);
  swift_bridgeObjectRelease();
  char v40 = (v39 == 64) | v36;
  if (v39 == 64 && (v36 & 1) == 0)
  {
    if (a2) {
      uint64_t v41 = (uint64_t)[a2 layoutDirection];
    }
    else {
      uint64_t v41 = -1;
    }
    char v40 = v41 != (void)[v2 layoutDirection];
  }
  uint64_t v42 = sub_10036A58C(128);
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_10036A58C(v42 & a1);
  swift_bridgeObjectRelease();
  char v44 = (v43 == 128) | v40;
  if (v43 == 128 && (v40 & 1) == 0)
  {
    id v45 = [v2 sourceOutlineStyle];
    if (a2) {
      char v44 = v45 != [a2 sourceOutlineStyle];
    }
    else {
      char v44 = 1;
    }
  }
  uint64_t v46 = sub_10036A58C(256);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_10036A58C(v46 & a1);
  swift_bridgeObjectRelease();
  char v48 = (v47 == 256) | v44;
  if (v47 == 256 && (v44 & 1) == 0)
  {
    if (a2) {
      uint64_t v49 = (uint64_t)[a2 legibilityWeight];
    }
    else {
      uint64_t v49 = -1;
    }
    char v48 = v49 != (void)[v2 legibilityWeight];
  }
  uint64_t v50 = sub_10036A58C(512);
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_10036A58C(v50 & a1);
  swift_bridgeObjectRelease();
  char v52 = (v51 == 512) | v48;
  if (v51 == 512 && (v48 & 1) == 0)
  {
    sub_1000B6DE0();
    sub_1004CE6F0();
    if (a2)
    {
      sub_1004CE6F0();
      char v52 = 0;
    }
    else
    {
      char v52 = 1;
    }
  }
  return v52 & 1;
}

ValueMetadata *type metadata accessor for DOCSourceOutlinePresentationContext()
{
  return &type metadata for DOCSourceOutlinePresentationContext;
}

uint64_t sub_10036AF48()
{
  return sub_10036AF70(&qword_100635E48, &qword_100635E50);
}

uint64_t sub_10036AF70(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000316E8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10036AFC4()
{
  unint64_t result = qword_100635E58;
  if (!qword_100635E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100635E58);
  }
  return result;
}

uint64_t sub_10036B030()
{
  type metadata accessor for DOCSourceListInterface_Default();
  uint64_t result = swift_initStaticObject();
  qword_100650788 = result;
  return result;
}

id sub_10036B0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  id v6 = sub_10036C7A4(a3, a4, 0, 1);
  swift_release();
  return v6;
}

uint64_t sub_10036B440()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_providerDomain);
  if (v1)
  {
    id v2 = [v1 identifier];
    uint64_t v3 = sub_1004CDB50();
    uint64_t v5 = v4;
  }
  else
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_type + 8) & 1) == 0)
    {
      uint64_t result = sub_1004CF6B0();
      __break(1u);
      return result;
    }
    uint64_t v3 = sub_1004CDB50();
    uint64_t v5 = v6;
  }
  if (sub_1004CDB50() == v3 && v7 == v5) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1004CF890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

id sub_10036B5B8()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_providerDomain];
  if (v2)
  {
    id v3 = [v2 identifier];
    uint64_t v4 = sub_1004CDB50();
    uint64_t v6 = v5;
  }
  else
  {
    if ((v0[OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_type + 8] & 1) == 0)
    {
      id result = (id)sub_1004CF6B0();
      __break(1u);
      return result;
    }
    uint64_t v4 = sub_1004CDB50();
    uint64_t v6 = v7;
  }
  if (sub_1004CDB50() == v4 && v8 == v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v10 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    id v16 = [self currentDevice];
    id v17 = objc_msgSend(v16, "doc_symbolName");

    uint64_t v14 = sub_1004CDB50();
    unint64_t v15 = v18;

    goto LABEL_19;
  }
  if (sub_1004CDB50() == v4 && v11 == v6) {
    goto LABEL_38;
  }
  char v13 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_15:
    uint64_t v14 = 0x6873617274;
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xE500000000000000;
    goto LABEL_19;
  }
  if (sub_1004CDB50() == v4 && v29 == v6)
  {
LABEL_38:
    uint64_t v14 = 0x6873617274;
LABEL_39:
    swift_bridgeObjectRelease_n();
    unint64_t v15 = 0xE500000000000000;
    goto LABEL_19;
  }
  char v31 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_15;
  }
  if (sub_1004CDB50() == v4 && v32 == v6) {
    goto LABEL_42;
  }
  char v34 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v34)
  {
LABEL_37:
    uint64_t v14 = 0xD000000000000018;
    swift_bridgeObjectRelease();
LABEL_43:
    unint64_t v15 = 0x80000001005122A0;
    goto LABEL_19;
  }
  if (sub_1004CDB50() == v4 && v35 == v6)
  {
LABEL_42:
    uint64_t v14 = 0xD000000000000018;
    swift_bridgeObjectRelease_n();
    goto LABEL_43;
  }
  char v36 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_37;
  }
  if (sub_1004CDB50() == v4 && v37 == v6)
  {
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    sub_10036C578();
    id v39 = (id)sub_1004CEEB0();
    if (!v39)
    {
      char v40 = (void *)sub_1004CC620();
      sub_1004CE370();
      sub_100031648((uint64_t *)&unk_100627480);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1004E12A0;
      *(void *)(v41 + 56) = &type metadata for String;
      *(void *)(v41 + 64) = sub_1000334C4();
      *(void *)(v41 + 32) = 0xD000000000000020;
      *(void *)(v41 + 40) = 0x8000000100532EE0;
      sub_1004CC640();

      swift_bridgeObjectRelease();
      id v39 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v21 = v39;
    goto LABEL_22;
  }
  char v38 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_49;
  }
  if (sub_1004CDB50() == v4 && v42 == v6) {
    goto LABEL_58;
  }
  char v43 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v43)
  {
LABEL_55:
    uint64_t v14 = 0x6B636F6C63;
    goto LABEL_16;
  }
  if (sub_1004CDB50() == v4 && v44 == v6)
  {
LABEL_58:
    uint64_t v14 = 0x6B636F6C63;
    goto LABEL_39;
  }
  char v45 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_55;
  }
  if (sub_1004CDB50() == v4 && v46 == v6)
  {
    uint64_t v14 = 0x697966696E67616DLL;
    swift_bridgeObjectRelease_n();
LABEL_68:
    unint64_t v15 = 0xEF7373616C67676ELL;
    goto LABEL_19;
  }
  char v47 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v47)
  {
    uint64_t v14 = 0x697966696E67616DLL;
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
  if (sub_1004CDB50() == v4 && v48 == v6)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v14 = 0x697966696E67616DLL;
    goto LABEL_68;
  }
  char v49 = sub_1004CF890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = 0x697966696E67616DLL;
  unint64_t v15 = 0xEF7373616C67676ELL;
  if (v49)
  {
LABEL_19:
    uint64_t v19 = self;
    swift_bridgeObjectRetain();
    NSString v20 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    id v21 = [v19 _systemImageNamed:v20 withConfiguration:0];

    if (v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      id v22 = (void *)sub_1004CC620();
      sub_1004CE370();
      sub_100031648((uint64_t *)&unk_100627480);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1004E12A0;
      *(void *)(v23 + 56) = &type metadata for String;
      *(void *)(v23 + 64) = sub_1000334C4();
      *(void *)(v23 + 32) = v14;
      *(void *)(v23 + 40) = v15;
      swift_bridgeObjectRetain();
      sub_1004CC640();

      swift_bridgeObjectRelease();
      id v21 = [objc_allocWithZone((Class)UIImage) init];
      swift_bridgeObjectRelease();
    }
LABEL_22:
    id v24 = v21;
    if ([v1 iconPreferingSymbolImagesRequiresHierarchicalColors])
    {
      id v25 = [self tintColor];
      id v26 = [self configurationWithHierarchicalColor:v25];

      id v27 = [v24 imageByApplyingSymbolConfiguration:v26];
      if (v27)
      {

        return v27;
      }
    }
    else
    {
    }
    return v24;
  }
  v51.receiver = v1;
  v51.super_class = (Class)type metadata accessor for DOCFileProviderSource(0);
  id v50 = objc_msgSendSuper2(&v51, "iconPreferingSymbolImages");
  return v50;
}

id DOCFileProviderSource.appMenuIconPreferingSymbolImages.getter()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_providerDomain];
  if (v1)
  {
    id v2 = [v1 identifier];
    uint64_t v3 = sub_1004CDB50();
    uint64_t v5 = v4;
  }
  else
  {
    if ((v0[OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_type + 8] & 1) == 0)
    {
      id result = (id)sub_1004CF6B0();
      __break(1u);
      return result;
    }
    uint64_t v3 = sub_1004CDB50();
    uint64_t v5 = v6;
  }
  if (sub_1004CDB50() == v3 && v7 == v5)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    id v15 = [self currentDevice];
    id v16 = objc_msgSend(v15, "doc_symbolName");

    uint64_t v17 = sub_1004CDB50();
    uint64_t v19 = v18;

    NSString v20 = self;
    swift_bridgeObjectRetain();
    NSString v21 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    id v22 = [v20 _systemImageNamed:v21 withConfiguration:0];

    if (v22)
    {
      swift_bridgeObjectRelease();

      return v22;
    }
    else
    {
      uint64_t v23 = (void *)sub_1004CC620();
      sub_1004CE370();
      sub_100031648((uint64_t *)&unk_100627480);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1004E12A0;
      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_1000334C4();
      *(void *)(v24 + 32) = v17;
      *(void *)(v24 + 40) = v19;
      swift_bridgeObjectRetain();
      sub_1004CC640();

      swift_bridgeObjectRelease();
      id v25 = [objc_allocWithZone((Class)UIImage) init];
      swift_bridgeObjectRelease();
      return v25;
    }
  }
  char v9 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_19;
  }
  if (sub_1004CDB50() == v3 && v10 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      id v13 = [v0 iconForSize:0];
      return v13;
    }
  }
  return (id)sub_10036C164();
}

uint64_t sub_10036C164()
{
  sub_10036C578();
  id v0 = (id)sub_1004CEEB0();
  id v21 = v0;
  if (v0
    && (uint64_t v1 = self,
        id v2 = v0,
        id v3 = [v1 configurationWithPointSize:5 weight:20.0],
        id v0 = [v2 imageByApplyingSymbolConfiguration:v3],
        v2,
        v2,
        v3,
        v0))
  {
    uint64_t v4 = self;
    id v0 = v0;
    id v5 = [v4 blackColor];
    id v6 = [v0 imageWithTintColor:v5 renderingMode:2];
  }
  else
  {
    id v6 = 0;
  }
  id v21 = v6;

  id v7 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  id v8 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v7, 20.0, 20.0);
  uint64_t v9 = swift_allocObject();
  __asm { FMOV            V0.2D, #20.0 }
  *(_OWORD *)(v9 + 16) = _Q0;
  *(void *)(v9 + 32) = &v21;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_10036C964;
  *(void *)(v15 + 24) = v9;
  aBlock[4] = sub_1000BED5C;
  void aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AE0E8;
  void aBlock[3] = &unk_1005D0178;
  id v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v17 = [v8 imageWithActions:v16];

  _Block_release(v16);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = v21;
    swift_release();

    return (uint64_t)v17;
  }
  return result;
}

id sub_10036C4D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCSourceListInterface()
{
  return self;
}

uint64_t type metadata accessor for DOCSourceListInterface_Default()
{
  return self;
}

uint64_t type metadata accessor for DOCBrowseStartingPointsDocumentSource()
{
  return self;
}

unint64_t sub_10036C578()
{
  unint64_t result = qword_10062BE78;
  if (!qword_10062BE78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10062BE78);
  }
  return result;
}

id sub_10036C5B8(void *a1)
{
  if (![a1 isFolder]) {
    return 0;
  }
  uint64_t v2 = 0x7265646C6F66;
  unint64_t v3 = sub_100031438(&off_1005B4908);
  sub_100031648(&qword_100636018);
  swift_arrayDestroy();
  id v4 = objc_msgSend(a1, "doc_folderIconType");
  if (*(void *)(v3 + 16) && (uint64_t v5 = sub_1001DB500(v4), (v6 & 1) != 0))
  {
    id v7 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v5);
    uint64_t v2 = *v7;
    unint64_t v8 = v7[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v8 = 0xE600000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = self;
  swift_bridgeObjectRetain();
  NSString v11 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v9 = [v10 _systemImageNamed:v11 withConfiguration:0];

  if (v9)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = (void *)sub_1004CC620();
    sub_1004CE370();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1004E12A0;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_1000334C4();
    *(void *)(v13 + 32) = v2;
    *(void *)(v13 + 40) = v8;
    swift_bridgeObjectRetain();
    sub_1004CC640();

    swift_bridgeObjectRelease();
    id v9 = [objc_allocWithZone((Class)UIImage) init];
    swift_bridgeObjectRelease();
  }
  return v9;
}

id sub_10036C7A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v8 = self;
  swift_bridgeObjectRetain();
  NSString v9 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v10 = [v8 _systemImageNamed:v9 withConfiguration:0];

  if (v10)
  {

    if ((a4 & 1) == 0)
    {
LABEL_3:
      id v11 = [self configurationWithScale:a3];
      id v12 = [v10 imageWithConfiguration:v11];

      return v12;
    }
  }
  else
  {
    uint64_t v14 = (void *)sub_1004CC620();
    sub_1004CE370();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1004E12A0;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000334C4();
    *(void *)(v15 + 32) = a1;
    *(void *)(v15 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1004CC640();

    swift_bridgeObjectRelease();
    id v10 = [objc_allocWithZone((Class)UIImage) init];
    if ((a4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  return v10;
}

uint64_t sub_10036C954()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_10036C964()
{
  id result = **(id **)(v0 + 32);
  if (result) {
    return objc_msgSend(result, "drawInRect:", 0.0, 0.0, *(double *)(v0 + 16), *(double *)(v0 + 24));
  }
  __break(1u);
  return result;
}

uint64_t sub_10036C98C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10036C99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10036C9AC()
{
  return swift_release();
}

uint64_t sub_10036C9B4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_10036C9E4(uint64_t a1, void *a2)
{
  unint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  uint64_t v7 = v6;
  swift_release();

  if (v5)
  {
    v9[4] = v5;
    v9[5] = v7;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    _OWORD v9[2] = sub_1003A422C;
    v9[3] = &unk_1005D06A8;
    uint64_t v5 = _Block_copy(v9);
    swift_release();
  }
  return v5;
}

uint64_t DOCGenericOperationProgress.__allocating_init(operation:observing:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = a1[3];
  uint64_t v5 = sub_100032FD8(a1, v4);
  v10[3] = v4;
  uint64_t v6 = sub_10005AE54(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v5, v4);
  sub_100049660((uint64_t)a1, (uint64_t)v9);
  uint64_t v7 = sub_10036D5D8((uint64_t)v10, v9, a2);
  sub_100039184((uint64_t)a1);
  return v7;
}

uint64_t DOCProgressState.isCancelled.getter(unsigned __int8 a1)
{
  return ((a1 & 0xFE) != 2) & a1;
}

uint64_t sub_10036CBA4@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for DOCOperationProgress.OperationWithProvider() + 28);
  return sub_100033120(a2, v6);
}

uint64_t static DOCOperationProgress._new(withOperation:progressProvider:observing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 296);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(a1);
  id v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCOperationProgress.OperationWithProvider();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - v13;
  type metadata accessor for DOCOperationProgress();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100049660(a2, (uint64_t)v18);
  sub_10036CBA4((uint64_t)v10, v18, v7, (uint64_t)v14);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100371424((uint64_t)v14, a3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

BOOL DOCProgressState.isEnded.getter(char a1)
{
  return (a1 & 0xFE) != 2;
}

uint64_t DOCProgressValue.description.getter(uint64_t a1, char a2)
{
  if (a2) {
    return 0x6D72657465646E69;
  }
  sub_1004CE0A0();
  v3._countAndFlagsBits = 0x6C706D6F63202520;
  v3._object = (void *)0xEC00000064657465;
  sub_1004CDCD0(v3);
  return 0;
}

void DOCProgressValue.hash(into:)(uint64_t a1, Swift::UInt64 a2, char a3)
{
  if (a3)
  {
    sub_1004CF9F0(0);
  }
  else
  {
    sub_1004CF9F0(1uLL);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a2;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_1004CFA20(v4);
  }
}

uint64_t static DOCProgressValue.__derived_enum_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a2 | a4)) {
    char v4 = a2 & a4;
  }
  else {
    char v4 = *(double *)&a1 == *(double *)&a3;
  }
  return v4 & 1;
}

Swift::Int DOCProgressValue.hashValue.getter(Swift::UInt64 a1, char a2)
{
  sub_1004CF9E0();
  if (a2)
  {
    sub_1004CF9F0(0);
  }
  else
  {
    sub_1004CF9F0(1uLL);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_1004CFA20(v4);
  }
  return sub_1004CFA30();
}

Swift::Int sub_10036CF78()
{
  return DOCProgressValue.hashValue.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_10036CF84()
{
  if (*(unsigned char *)(v0 + 8))
  {
    sub_1004CF9F0(0);
  }
  else
  {
    Swift::UInt64 v1 = *(void *)v0;
    sub_1004CF9F0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v2 = v1;
    }
    else {
      Swift::UInt64 v2 = 0;
    }
    sub_1004CFA20(v2);
  }
}

Swift::Int sub_10036CFD4()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1004CF9E0();
  if (v2)
  {
    sub_1004CF9F0(0);
  }
  else
  {
    sub_1004CF9F0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v1;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    sub_1004CFA20(v3);
  }
  return sub_1004CFA30();
}

uint64_t sub_10036D040(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_10036D070()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0x6D72657465646E69;
  }
  sub_1004CE0A0();
  v2._countAndFlagsBits = 0x6C706D6F63202520;
  v2._object = (void *)0xEC00000064657465;
  sub_1004CDCD0(v2);
  return 0;
}

void DOCProgressState.hash(into:)(uint64_t a1, char a2)
{
  if (a2 == 2)
  {
    Swift::UInt v2 = 0;
    goto LABEL_5;
  }
  if (a2 == 3)
  {
    Swift::UInt v2 = 1;
LABEL_5:
    sub_1004CF9F0(v2);
    return;
  }
  Swift::UInt8 v3 = a2 & 1;
  sub_1004CF9F0(2uLL);
  sub_1004CFA00(v3);
}

BOOL static DOCProgressState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 2) {
    return a2 == 2;
  }
  if (a1 == 3) {
    return a2 == 3;
  }
  if ((a2 & 0xFE) == 2) {
    return 0;
  }
  return (((a1 & 1) == 0) ^ a2) & 1;
}

Swift::Int DOCProgressState.hashValue.getter(char a1)
{
  sub_1004CF9E0();
  if (a1 == 2)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    if (a1 != 3)
    {
      sub_1004CF9F0(2uLL);
      sub_1004CFA00(a1 & 1);
      return sub_1004CFA30();
    }
    Swift::UInt v2 = 1;
  }
  sub_1004CF9F0(v2);
  return sub_1004CFA30();
}

Swift::Int sub_10036D250()
{
  int v1 = *v0;
  sub_1004CF9E0();
  if (v1 == 2)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    if (v1 != 3)
    {
      sub_1004CF9F0(2uLL);
      sub_1004CFA00(v1 & 1);
      return sub_1004CFA30();
    }
    Swift::UInt v2 = 1;
  }
  sub_1004CF9F0(v2);
  return sub_1004CFA30();
}

void sub_10036D2D4()
{
  int v1 = *v0;
  if (v1 == 2)
  {
    Swift::UInt v2 = 0;
    goto LABEL_5;
  }
  if (v1 == 3)
  {
    Swift::UInt v2 = 1;
LABEL_5:
    sub_1004CF9F0(v2);
    return;
  }
  Swift::UInt8 v3 = v1 & 1;
  sub_1004CF9F0(2uLL);
  sub_1004CFA00(v3);
}

Swift::Int sub_10036D334()
{
  int v1 = *v0;
  sub_1004CF9E0();
  if (v1 == 2)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    if (v1 != 3)
    {
      sub_1004CF9F0(2uLL);
      sub_1004CFA00(v1 & 1);
      return sub_1004CFA30();
    }
    Swift::UInt v2 = 1;
  }
  sub_1004CF9F0(v2);
  return sub_1004CFA30();
}

BOOL sub_10036D3B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t DOCFileOperationProgress.__allocating_init(operation:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCFileOperation();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = swift_allocObject();
  sub_10005ADF0(a1, (uint64_t)v9);
  sub_10005ADF0(a1, (uint64_t)v7);
  uint64_t v11 = sub_100370838((uint64_t)v9, (uint64_t)v7, a2, v10);
  sub_10005AEB8(a1);
  return v11;
}

uint64_t DOCFileOperationProgress.init(operation:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DOCFileOperation();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v13 - v9;
  sub_10005ADF0(a1, (uint64_t)&v13 - v9);
  sub_10005ADF0(a1, (uint64_t)v8);
  uint64_t v11 = sub_100370838((uint64_t)v10, (uint64_t)v8, a2, v2);
  sub_10005AEB8(a1);
  return v11;
}

uint64_t sub_10036D5D8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v6 = sub_1004CADE0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)(v4 + direct field offset for DOCOperationProgress.updateHandler);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = v4 + *(void *)(*(void *)v4 + 328);
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = *(void *)(*(void *)v4 + 336);
  *(unsigned char *)(v4 + v12) = 2;
  uint64_t v13 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 344));
  swift_retain();
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = sub_100030CB4(6);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t *v13 = v14;
  v13[1] = v16;
  v13[2] = v18;
  v13[3] = v20;
  uint64_t v21 = v4 + *(void *)(*(void *)v4 + 368);
  *(unsigned char *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0xE000000000000000;
  uint64_t v22 = v4 + *(void *)(*(void *)v4 + 376);
  *(unsigned char *)uint64_t v22 = 0;
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0xE000000000000000;
  uint64_t v23 = (_OWORD *)(v4 + *(void *)(*(void *)v4 + 384));
  _OWORD *v23 = 0u;
  v23[1] = 0u;
  *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 392)) = 0;
  *(void *)(v4 + *(void *)(*(void *)v4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)(v4 + *(void *)(*(void *)v4 + 408)) = _swiftEmptyArrayStorage;
  uint64_t v24 = v33;
  sub_10005AF14(v33, v4 + *(void *)(*(void *)v4 + 312));
  uint64_t v25 = a2[3];
  uint64_t v26 = a2[4];
  sub_100032FD8(a2, v25);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v26 + 8))(v35, v25, v26);
  uint64_t v27 = v4 + *(void *)(*(void *)v4 + 320);
  long long v28 = v35[1];
  *(_OWORD *)uint64_t v27 = v35[0];
  *(_OWORD *)(v27 + 16) = v28;
  *(void *)(v27 + 32) = v36;
  sub_100049660((uint64_t)a2, v4 + *(void *)(*(void *)v4 + 352));
  *(void *)(v4 + *(void *)(*(void *)v4 + 360)) = v34;
  *(unsigned char *)(v4 + v12) = 2;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  swift_release();
  *(_WORD *)(v4 + 24) = 256;
  *(void *)(v4 + 32) = 0;
  uint64_t v29 = v4 + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v30 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *(void *)(v4 + 16) = 0x3FE0000000000000;
  sub_1003CA12C(0);
  sub_100039184(v24);
  sub_100039184((uint64_t)a2);
  return v4;
}

void sub_10036D97C()
{
}

uint64_t _s14RecentsAvocado27DOCGenericOperationProgressCfd_0()
{
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_100049B74(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100630280);
  sub_1000388F0(*(void *)(v0 + direct field offset for DOCOperationProgress.updateHandler));
  sub_100039184(v0 + *(void *)(*(void *)v0 + 312));
  sub_100033194(v0 + *(void *)(*(void *)v0 + 320));
  swift_bridgeObjectRelease();
  sub_100039184(v0 + *(void *)(*(void *)v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100049B74(v0 + *(void *)(*(void *)v0 + 384), &qword_10062BA60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s14RecentsAvocado24DOCFileOperationProgressCfd_0()
{
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_100049B74(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100630280);
  sub_1000388F0(*(void *)(v0 + direct field offset for DOCOperationProgress.updateHandler));
  sub_10005AEB8(v0 + *(void *)(*(void *)v0 + 312));
  sub_100033194(v0 + *(void *)(*(void *)v0 + 320));
  swift_bridgeObjectRelease();
  sub_100039184(v0 + *(void *)(*(void *)v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100049B74(v0 + *(void *)(*(void *)v0 + 384), &qword_10062BA60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t *DOCOperationProgress.deinit()
{
  uint64_t v1 = *v0;
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_100049B74((uint64_t)v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100630280);
  sub_1000388F0(*(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 312));
  sub_100033194((uint64_t)v0 + *(void *)(*v0 + 320));
  swift_bridgeObjectRelease();
  sub_100039184((uint64_t)v0 + *(void *)(*v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100049B74((uint64_t)v0 + *(void *)(*v0 + 384), &qword_10062BA60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DOCFileOperationProgress.__deallocating_deinit()
{
  return sub_10036F958(_s14RecentsAvocado24DOCFileOperationProgressCfd_0);
}

uint64_t DOCOperationProgress.updateHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_100039174(*v1);
  return v2;
}

uint64_t DOCOperationProgress.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1000388F0(v6);
}

uint64_t (*DOCOperationProgress.updateHandler.modify())()
{
  return j__swift_endAccess;
}

uint64_t DOCOperationProgress.localizedOperationDescription.getter()
{
  uint64_t v0 = sub_100371528();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t DOCOperationProgress.localizedProgressDescription.getter()
{
  uint64_t v0 = sub_1003715C8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10036DFDC()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 352));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = sub_100032FD8(v1, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *))(v5 + 16))((char *)&v10 - v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v2);
  return v8;
}

uint64_t DOCOperationProgress.description.getter()
{
  return DOCOperationProgress.description(includingProgressDetails:)(1)._countAndFlagsBits;
}

Swift::String __swiftcall DOCOperationProgress.description(includingProgressDetails:)(Swift::Bool includingProgressDetails)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1004CAC10();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v31 - v12;
  uint64_t v14 = (void *)sub_10036DFDC();
  id v15 = [v14 fileURL];

  if (v15)
  {
    sub_1004CABC0();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
  }
  sub_100031790((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_10062B3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    sub_100049B74((uint64_t)v13, (uint64_t *)&unk_10062B3B0);
    uint64_t v16 = (void *)0xE500000000000000;
    uint64_t v17 = 0x273F3F3F27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
    sub_100049B74((uint64_t)v13, (uint64_t *)&unk_10062B3B0);
    uint64_t v17 = sub_1004CAB50();
    uint64_t v16 = v18;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100033138(v2 + *(void *)(*(void *)v2 + 320), (uint64_t)&v33);
  sub_1004CF430();
  sub_100033194((uint64_t)&v33);
  sub_100030CB4(6);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v31[1] = v20;
  uint64_t v32 = v17;
  if (includingProgressDetails)
  {
    uint64_t v33 = 32;
    unint64_t v34 = 0xE100000000000000;
    uint64_t v21 = (void *)sub_10036DFDC();
    id v22 = [v21 description];

    uint64_t v23 = sub_1004CDB50();
    uint64_t v25 = v24;

    v35._countAndFlagsBits = v23;
    v35._object = v25;
    sub_1004CDCD0(v35);
    swift_bridgeObjectRelease();
    v36._countAndFlagsBits = 59;
    v36._object = (void *)0xE100000000000000;
    sub_1004CDCD0(v36);
    uint64_t v27 = v33;
    uint64_t v26 = (void *)v34;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v26 = (void *)0xE000000000000000;
  }
  uint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  sub_1004CF4D0(44);
  swift_bridgeObjectRelease();
  uint64_t v33 = 60;
  unint64_t v34 = 0xE100000000000000;
  v37._countAndFlagsBits = sub_1004CFB00();
  sub_1004CDCD0(v37);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = 0x496775626564203ALL;
  v38._object = (void *)0xEC000000203D2044;
  sub_1004CDCD0(v38);
  swift_bridgeObjectRetain();
  v39._countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0x203D204449706F20;
  v40._object = (void *)0xE800000000000000;
  sub_1004CDCD0(v40);
  v41._countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = 0x3D20656C6966203BLL;
  v42._object = (void *)0xEA00000000002720;
  sub_1004CDCD0(v42);
  v43._countAndFlagsBits = v32;
  v43._object = v16;
  sub_1004CDCD0(v43);
  swift_bridgeObjectRelease();
  v44._countAndFlagsBits = 15143;
  v44._object = (void *)0xE200000000000000;
  sub_1004CDCD0(v44);
  v45._countAndFlagsBits = v27;
  v45._object = v26;
  sub_1004CDCD0(v45);
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = 62;
  v46._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v46);
  uint64_t v28 = v33;
  uint64_t v29 = (void *)v34;
  result._object = v29;
  result._countAndFlagsBits = v28;
  return result;
}

uint64_t sub_10036E5AC()
{
  uint64_t v1 = (uint64_t *)(v0 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
  return sub_1000388F0(v2);
}

uint64_t sub_10036E5FC()
{
  uint64_t v1 = (void *)sub_10036DFDC();
  int v2 = sub_100370FA8(v1);
  if (*(unsigned char *)(v0 + *(void *)(*(void *)v0 + 392))) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  uint64_t v4 = *(void *)(*(void *)v0 + 336);
  int v5 = *(unsigned __int8 *)(v0 + v4);
  if (v3 == 2)
  {
    if (v5 == 2) {
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v3 == 3)
  {
    if (v5 != 3) {
      goto LABEL_11;
    }
LABEL_9:
    int v6 = 0;
    goto LABEL_13;
  }
  if ((v5 & 0xFE) == 2)
  {
LABEL_11:
    int v6 = 1;
    goto LABEL_13;
  }
  int v6 = v3 ^ v5;
LABEL_13:
  uint64_t v7 = (void *)sub_10036DFDC();
  unsigned __int8 v8 = [v7 isIndeterminate];
  if (v8)
  {

    uint64_t v9 = v0 + *(void *)(*(void *)v0 + 328);
    int v10 = *(unsigned __int8 *)(v9 + 8) ^ 1;
    double v11 = 0.0;
  }
  else
  {
    [v7 fractionCompleted];
    double v13 = v12;

    double v11 = fmin(v13, 1.0);
    if (v11 < 0.0) {
      double v11 = 0.0;
    }
    uint64_t v9 = v0 + *(void *)(*(void *)v0 + 328);
    int v10 = (*(unsigned char *)(v9 + 8) & 1) != 0 || v11 != *(double *)v9;
  }
  *(unsigned char *)(v0 + v4) = v3;
  *(double *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = v8;
  uint64_t v14 = (unsigned char *)(v0 + *(void *)(*(void *)v0 + 368));
  swift_beginAccess();
  *uint64_t v14 = 0;
  id v15 = (unsigned char *)(v0 + *(void *)(*(void *)v0 + 376));
  swift_beginAccess();
  *id v15 = 0;
  return (v6 | v10) & 1;
}

uint64_t sub_10036E7E4()
{
  uint64_t v1 = (void *)sub_10036DFDC();
  LODWORD(result) = sub_100370FA8(v1);
  if (*(unsigned char *)(v0 + *(void *)(*(void *)v0 + 392))) {
    return 1;
  }
  else {
    return result;
  }
}

uint64_t sub_10036E820()
{
  uint64_t v1 = (void (**)(uint64_t))(v0 + direct field offset for DOCOperationProgress.updateHandler);
  uint64_t result = swift_beginAccess();
  int v3 = *v1;
  if (*v1)
  {
    swift_retain();
    v3(v0);
    return sub_1000388F0((uint64_t)v3);
  }
  return result;
}

uint64_t sub_10036E89C()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 392));
}

void sub_10036E8B8(char a1)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 392)) = a1;
  sub_10036FBC4();
}

uint64_t sub_10036E8D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v3 - 8);
  Swift::String v45 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CAC10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  __chkstk_darwin(v5);
  Swift::String v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 296);
  type metadata accessor for DOCOperationProgress();
  type metadata accessor for DOCWeakUncheckedSendable();
  uint64_t v9 = sub_100488218();
  uint64_t v10 = swift_allocObject();
  uint64_t v50 = v9;
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100372C68;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100372C68;
  *(void *)(v13 + 24) = v11;
  uint64_t v14 = *(void *)(*v1 + 360);
  aBlock[0] = *(id *)((char *)v1 + v14);
  v51[0] = 1;
  type metadata accessor for DOCOperationProgress.ObservedEvent();
  sub_1004CDF60();
  swift_retain_n();
  swift_getWitnessTable();
  swift_getWitnessTable();
  int v15 = sub_1004CDDD0();
  aBlock[0] = *(id *)((char *)v1 + v14);
  v51[0] = 0;
  char v16 = sub_1004CDDD0();
  int v49 = v15;
  if (v15)
  {
    aBlock[0] = (id)sub_10036DFDC();
    swift_getKeyPath();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_100372C70;
    *(void *)(v17 + 24) = v12;
    swift_retain();
    sub_1004CAAC0();
    swift_release();
    swift_release();

    uint64_t v18 = (void *)((char *)v1 + *(void *)(*v1 + 408));
    swift_beginAccess();
    sub_1004CDE00();
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1004CDE60();
    }
    sub_1004CDF40();
    sub_1004CDE50();
    swift_endAccess();
    aBlock[0] = (id)sub_10036DFDC();
    swift_getKeyPath();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100372C78;
    *(void *)(v19 + 24) = v13;
    swift_retain();
    uint64_t v20 = (void *)sub_1004CAAC0();
    swift_release();
    swift_release();

    uint64_t v21 = (void *)sub_1004CC620();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1004E5790;
    uint64_t v23 = sub_10036DFDC();
    *(void *)(v22 + 56) = sub_1000333C8(0, (unint64_t *)&unk_10062AC50);
    *(void *)(v22 + 64) = sub_1000BF1E8();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 96) = sub_1004CA9A0();
    *(void *)(v22 + 104) = sub_100372EFC(&qword_100636A48, (void (*)(uint64_t))&type metadata accessor for NSKeyValueObservation);
    *(void *)(v22 + 72) = v20;
    id v24 = v20;
    sub_1004CE380();
    sub_1004CC640();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    id v25 = v24;
    sub_1004CDE00();
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1004CDE60();
    }
    sub_1004CDF40();
    sub_1004CDE50();
    swift_endAccess();
  }
  if ((v16 & 1) == 0) {
    goto LABEL_19;
  }
  aBlock[0] = (id)sub_10036DFDC();
  swift_getKeyPath();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_100372C70;
  *(void *)(v26 + 24) = v12;
  swift_retain();
  sub_1004CAAC0();
  swift_release();
  swift_release();

  uint64_t v27 = (void *)((char *)v1 + *(void *)(*v1 + 400));
  swift_beginAccess();
  sub_1004CDE00();
  if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();
  swift_endAccess();
  aBlock[0] = (id)sub_10036DFDC();
  swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_100372C70;
  *(void *)(v28 + 24) = v12;
  swift_retain();
  sub_1004CAAC0();
  swift_release();
  swift_release();

  swift_beginAccess();
  sub_1004CDE00();
  if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();
  swift_endAccess();
  if ((v49 & 1) == 0)
  {
    aBlock[0] = (id)sub_10036DFDC();
    swift_getKeyPath();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_100372C70;
    *(void *)(v29 + 24) = v12;
    swift_retain();
    sub_1004CAAC0();
    swift_release();
    swift_release();

    swift_beginAccess();
    sub_1004CDE00();
    if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1004CDE60();
    }
    sub_1004CDF40();
    sub_1004CDE50();
    swift_endAccess();
  }
  uint64_t v30 = (void *)sub_10036DFDC();
  if ((sub_100370FA8(v30) & 0xFE) == 2)
  {
    char v31 = (void *)sub_10036DFDC();
    uint64_t v32 = v45;
    NSProgress.publishedFileURL.getter(v45);

    uint64_t v34 = v47;
    uint64_t v33 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v32, 1, v47) == 1)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return sub_100049B74((uint64_t)v32, (uint64_t *)&unk_10062B3B0);
    }
    else
    {
      (*(void (**)(void))(v33 + 32))();
      Swift::String v36 = self;
      sub_1004CAB60(v37);
      Swift::String v39 = v38;
      Swift::String v40 = (void *)swift_allocObject();
      uint64_t v41 = v50;
      v40[2] = sub_100372D94;
      v40[3] = v41;
      aBlock[4] = sub_100372DD4;
      void aBlock[5] = v40;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10036C9E4;
      void aBlock[3] = &unk_1005D0630;
      Swift::String v42 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v43 = [v36 addSubscriberForFileURL:v39 withPublishingHandler:v42];
      _Block_release(v42);

      sub_1004CF2A0();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v34);
      sub_100031790((uint64_t)aBlock, (uint64_t)v51, &qword_10062BA60);
      uint64_t v44 = (uint64_t)v1 + *(void *)(*v1 + 384);
      swift_beginAccess();
      sub_1000B7FFC((uint64_t)v51, v44);
      return swift_endAccess();
    }
  }
  else
  {
LABEL_19:
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10036F43C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 400));
  swift_beginAccess();
  uint64_t v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1004CF6D0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)sub_1004CF500();
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    sub_1004CA990();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  *uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(v1 + *(void *)(*(void *)v1 + 408));
  swift_beginAccess();
  uint64_t v20 = v9;
  uint64_t v10 = *v9;
  if (*v9 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1004CF6D0();
    uint64_t v11 = result;
    if (result)
    {
LABEL_12:
      if (v11 >= 1)
      {
        uint64_t v12 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v13 = (id)sub_1004CF500();
          }
          else {
            id v13 = *(id *)(v10 + 8 * v12 + 32);
          }
          uint64_t v14 = v13;
          ++v12;
          int v15 = (void *)sub_1004CC620();
          sub_100031648((uint64_t *)&unk_100627480);
          uint64_t v16 = swift_allocObject();
          *(_OWORD *)(v16 + 16) = xmmword_1004E12A0;
          *(void *)(v16 + 56) = sub_1004CA9A0();
          *(void *)(v16 + 64) = sub_100372EFC(&qword_100636A48, (void (*)(uint64_t))&type metadata accessor for NSKeyValueObservation);
          *(void *)(v16 + 32) = v14;
          id v17 = v14;
          sub_1004CE380();
          sub_1004CC640();

          swift_bridgeObjectRelease();
          sub_1004CA990();
        }
        while (v11 != v12);
        goto LABEL_19;
      }
LABEL_24:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v11) {
      goto LABEL_12;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  *uint64_t v20 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v18 = v1 + *(void *)(*(void *)v1 + 384);
  swift_beginAccess();
  sub_10010E21C(v18, (uint64_t)&v21);
  if (!*((void *)&v22 + 1)) {
    return sub_100049B74((uint64_t)&v21, &qword_10062BA60);
  }
  sub_100032FC8(&v21, &v23);
  uint64_t v19 = self;
  sub_100032FD8(&v23, v24);
  [v19 removeSubscriber:sub_1004CF870()];
  swift_unknownObjectRelease();
  long long v21 = 0u;
  long long v22 = 0u;
  swift_beginAccess();
  sub_1000B7FFC((uint64_t)&v21, v18);
  swift_endAccess();
  return sub_100039184((uint64_t)&v23);
}

uint64_t DOCGenericOperationProgress.init(operation:observing:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = sub_100032FD8(a1, v4);
  v10[3] = v4;
  uint64_t v6 = sub_10005AE54(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v5, v4);
  sub_100049660((uint64_t)a1, (uint64_t)v9);
  uint64_t v7 = sub_10036D5D8((uint64_t)v10, v9, a2);
  sub_100039184((uint64_t)a1);
  return v7;
}

uint64_t type metadata accessor for DOCOperationProgress.OperationWithProvider()
{
  return sub_10005DE5C();
}

uint64_t type metadata accessor for DOCOperationProgress()
{
  return sub_10005DE5C();
}

void sub_10036F8F4()
{
}

void sub_10036F910()
{
}

uint64_t DOCGenericOperationProgress.__deallocating_deinit()
{
  return sub_10036F958(_s14RecentsAvocado27DOCGenericOperationProgressCfd_0);
}

uint64_t sub_10036F958(uint64_t (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

BOOL sub_10036F9B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DOCBrowserHistoryShiftDirection.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10036F9BC()
{
  return DOCBrowserHistoryShiftDirection.hashValue.getter(*v0);
}

void sub_10036F9C4(uint64_t a1)
{
  DOCBrowserHistoryShiftDirection.hash(into:)(a1, *v1);
}

Swift::Int sub_10036F9CC()
{
  sub_1004CF9E0();
  DOCBrowserHistoryShiftDirection.hash(into:)((uint64_t)v2, *v0);
  return sub_1004CFA30();
}

void *sub_10036FA0C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_allocObject();
  uint64_t v8 = sub_100371044(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 296) - 8) + 8))(a1);
  return v8;
}

void sub_10036FAA0(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_10036DFDC();
  id v3 = [v2 localizedDescription];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1004CDB50();
    uint64_t v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_10036FB14(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_10036DFDC();
  [v2 fractionCompleted];
  if (v3 <= 0.0)
  {
    id v5 = [v2 fileOperationKind];
    uint64_t v6 = (uint64_t)sub_100324BD0((uint64_t)v5);
    goto LABEL_5;
  }
  id v4 = [v2 localizedAdditionalDescription];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_1004CDB50();
LABEL_5:
    uint64_t v8 = v6;
    uint64_t v9 = v7;

    *a1 = v8;
    a1[1] = v9;
    return;
  }
  __break(1u);
}

void sub_10036FBC4()
{
  if (*(uint64_t *)(v0 + 32) <= 0)
  {
    v4[0] = 0;
    v4[1] = 0xE000000000000000;
    sub_1004CF4D0(37);
    v8._object = (void *)0x8000000100525670;
    v8._countAndFlagsBits = 0xD000000000000023;
    sub_1004CDCD0(v8);
    type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    sub_1004CF600();
    swift_bridgeObjectRelease();
    uint64_t v7 = v0;
    swift_retain();
    sub_100031648(&qword_100639210);
    swift_dynamicCast();
    uint64_t v1 = v5;
    uint64_t v2 = v6;
    sub_100032FD8(v4, v5);
    int v3 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
    sub_100039184((uint64_t)v4);
    if (v3) {
      sub_1003CA428(v3 == 2);
    }
  }
}

void sub_10036FCF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a7;
  void v14[3] = a6;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a4;
  _OWORD v14[7] = a5;
  v14[8] = a3;
  v17[4] = sub_100372F94;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_1003A422C;
  void v17[3] = &unk_1005D0748;
  int v15 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v15);
}

uint64_t sub_10036FE0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      sub_1004CF4D0(37);
      v14._countAndFlagsBits = 0x73626F206469645BLL;
      v14._object = (void *)0xEE00205D65767265;
      sub_1004CDCD0(v14);
      v15._countAndFlagsBits = a2;
      v15._object = a3;
      sub_1004CDCD0(v15);
      v16._countAndFlagsBits = 543584032;
      v16._object = (void *)0xE400000000000000;
      sub_1004CDCD0(v16);
      swift_bridgeObjectRetain();
      v17._countAndFlagsBits = sub_1004CDBC0();
      sub_1004CDCD0(v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18._countAndFlagsBits = 0x6465676E61686320;
      v18._object = (void *)0xED0000203A6F7420;
      sub_1004CDCD0(v18);
      v19._countAndFlagsBits = a4;
      v19._object = a5;
      sub_1004CDCD0(v19);
      swift_bridgeObjectRelease();
      Swift::Bool v13 = (sub_100370FA8(a6) & 0xFE) != 2;
      DOCAbstractPacedPropertyUpdater.setNeedsUpdateProperties(notifyImmediately:)(v13);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10036FFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  sub_100031648(&qword_100636A58);
  sub_1004CAA80();
  uint64_t result = sub_1004CAA70();
  if (v16 == 2)
  {
    if (v15 == 2) {
      return result;
    }
  }
  else if (v15 != 2 && ((((v15 & 1) == 0) ^ v16) & 1) != 0)
  {
    return result;
  }
  sub_1004CAA70();
  uint64_t v10 = 1702195828;
  if ((v14 & 1) == 0) {
    uint64_t v10 = 0x65736C6166;
  }
  unint64_t v11 = 0xE400000000000000;
  if ((v14 & 1) == 0) {
    unint64_t v11 = 0xE500000000000000;
  }
  if (v14 == 2) {
    uint64_t v12 = 0x2A6C696E2ALL;
  }
  else {
    uint64_t v12 = v10;
  }
  if (v14 == 2) {
    unint64_t v13 = 0xE500000000000000;
  }
  else {
    unint64_t v13 = v11;
  }
  a5(a1, a2, a3, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003700E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  sub_100031648(&qword_100636A50);
  sub_1004CAA80();
  uint64_t result = sub_1004CAA70();
  if (v16)
  {
    if (v14) {
      return result;
    }
  }
  else if ((v14 & 1) == 0 && v15 == v13)
  {
    return result;
  }
  sub_1004CAA70();
  if (v16)
  {
    unint64_t v10 = 0xE500000000000000;
    uint64_t v11 = 0x2A6C696E2ALL;
  }
  else
  {
    uint64_t v11 = sub_1004CE090();
    unint64_t v10 = v12;
  }
  a5(a1, a2, a3, v11, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003701E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_1004CD860();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CD8C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  unint64_t v10 = (void *)sub_1004CE630();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = *(void *)(*(void *)(v1 + 80) + 296);
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_100372EF4;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D06F8;
  double v13 = _Block_copy(aBlock);
  swift_release();
  sub_1004CD880();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100372EFC((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10003A79C();
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1003704D8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      *(unsigned char *)(Strong + *(void *)(*(void *)Strong + 392)) = 1;
      sub_10036FBC4();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100370564()
{
  uint64_t v1 = *v0;
  sub_1000388F0(*(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 312));
  sub_100033194((uint64_t)v0 + *(void *)(*v0 + 320));
  swift_bridgeObjectRelease();
  sub_100039184((uint64_t)v0 + *(void *)(*v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100049B74((uint64_t)v0 + *(void *)(*v0 + 384), &qword_10062BA60);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DOCOperationProgress.__deallocating_deinit()
{
  DOCOperationProgress.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100370760()
{
  return sub_10036E5AC();
}

uint64_t sub_100370784()
{
  return sub_10036E5FC();
}

uint64_t sub_1003707A8()
{
  return sub_10036E820();
}

uint64_t sub_1003707CC()
{
  return sub_10036E8D4();
}

uint64_t sub_1003707F0()
{
  return sub_10036F43C();
}

uint64_t sub_100370814()
{
  return DOCOperationProgress.description.getter();
}

uint64_t sub_100370838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v31 = a3;
  uint64_t v6 = sub_1004CADE0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[3] = type metadata accessor for DOCFileOperation();
  v32[4] = (uint64_t)&protocol witness table for DOCFileOperation;
  unint64_t v10 = sub_10005AE54(v32);
  sub_1000EE6CC(a2, (uint64_t)v10);
  uint64_t v11 = (void *)(a4 + direct field offset for DOCOperationProgress.updateHandler);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = a4 + *(void *)(*(void *)a4 + 328);
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = *(void *)(*(void *)a4 + 336);
  *(unsigned char *)(a4 + v13) = 2;
  char v14 = (uint64_t *)(a4 + *(void *)(*(void *)a4 + 344));
  swift_retain();
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = sub_100030CB4(6);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *char v14 = v15;
  v14[1] = v17;
  v14[2] = v19;
  void v14[3] = v21;
  uint64_t v22 = a4 + *(void *)(*(void *)a4 + 368);
  *(unsigned char *)uint64_t v22 = 0;
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0xE000000000000000;
  uint64_t v23 = a4 + *(void *)(*(void *)a4 + 376);
  *(unsigned char *)uint64_t v23 = 0;
  *(void *)(v23 + 8) = 0;
  *(void *)(v23 + 16) = 0xE000000000000000;
  uint64_t v24 = (_OWORD *)(a4 + *(void *)(*(void *)a4 + 384));
  *uint64_t v24 = 0u;
  v24[1] = 0u;
  *(unsigned char *)(a4 + *(void *)(*(void *)a4 + 392)) = 0;
  *(void *)(a4 + *(void *)(*(void *)a4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)(a4 + *(void *)(*(void *)a4 + 408)) = _swiftEmptyArrayStorage;
  uint64_t v25 = v30;
  sub_10005ADF0(v30, a4 + *(void *)(*(void *)a4 + 312));
  sub_100033138((uint64_t)v10, a4 + *(void *)(*(void *)a4 + 320));
  sub_100049660((uint64_t)v32, a4 + *(void *)(*(void *)a4 + 352));
  *(void *)(a4 + *(void *)(*(void *)a4 + 360)) = v31;
  *(unsigned char *)(a4 + v13) = 2;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  swift_release();
  *(_WORD *)(a4 + 24) = 256;
  *(void *)(a4 + 32) = 0;
  uint64_t v26 = a4 + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v27 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(void *)(a4 + 16) = 0x3FE0000000000000;
  sub_1003CA12C(0);
  sub_10005AEB8(v25);
  sub_100039184((uint64_t)v32);
  return a4;
}

uint64_t sub_100370BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v10 = sub_1004CADE0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[3] = a5;
  v39[4] = a6;
  uint64_t v33 = sub_10005AE54(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v33, a2, a5);
  char v14 = (void *)(a4 + direct field offset for DOCOperationProgress.updateHandler);
  *char v14 = 0;
  v14[1] = 0;
  uint64_t v15 = a4 + *(void *)(*(void *)a4 + 328);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v34 = *(void *)(*(void *)a4 + 336);
  *(unsigned char *)(a4 + v34) = 2;
  uint64_t v16 = (uint64_t *)(a4 + *(void *)(*(void *)a4 + 344));
  swift_retain();
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v17 = sub_100030CB4(6);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *uint64_t v16 = v17;
  v16[1] = v19;
  void v16[2] = v21;
  void v16[3] = v23;
  uint64_t v24 = a4 + *(void *)(*(void *)a4 + 368);
  *(unsigned char *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(void *)(v24 + 16) = 0xE000000000000000;
  uint64_t v25 = a4 + *(void *)(*(void *)a4 + 376);
  *(unsigned char *)uint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(void *)(v25 + 16) = 0xE000000000000000;
  uint64_t v26 = (_OWORD *)(a4 + *(void *)(*(void *)a4 + 384));
  _OWORD *v26 = 0u;
  v26[1] = 0u;
  *(unsigned char *)(a4 + *(void *)(*(void *)a4 + 392)) = 0;
  *(void *)(a4 + *(void *)(*(void *)a4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)(a4 + *(void *)(*(void *)a4 + 408)) = _swiftEmptyArrayStorage;
  uint64_t v27 = v35;
  sub_10005ADF0(v35, a4 + *(void *)(*(void *)a4 + 312));
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a6 + 8))(v37, a5, a6);
  uint64_t v28 = a4 + *(void *)(*(void *)a4 + 320);
  long long v29 = v37[1];
  *(_OWORD *)uint64_t v28 = v37[0];
  *(_OWORD *)(v28 + 16) = v29;
  *(void *)(v28 + 32) = v38;
  sub_100049660((uint64_t)v39, a4 + *(void *)(*(void *)a4 + 352));
  *(void *)(a4 + *(void *)(*(void *)a4 + 360)) = v36;
  *(unsigned char *)(a4 + v34) = 2;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  swift_release();
  *(_WORD *)(a4 + 24) = 256;
  *(void *)(a4 + 32) = 0;
  uint64_t v30 = a4 + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v31 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  *(void *)(a4 + 16) = 0x3FE0000000000000;
  sub_1003CA12C(0);
  sub_10005AEB8(v27);
  sub_100039184((uint64_t)v39);
  return a4;
}

uint64_t sub_100370FA8(void *a1)
{
  if ([a1 isCancelled])
  {

    return 1;
  }
  else if ([a1 isFinished] || (objc_msgSend(a1, "fractionCompleted"), v3 >= 1.0))
  {

    return 0;
  }
  else
  {
    unsigned int v4 = [a1 isPaused];

    if (v4) {
      return 3;
    }
    else {
      return 2;
    }
  }
}

void *sub_100371044(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v33 = a3;
  uint64_t v31 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1004CADE0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)((char *)v4 + direct field offset for DOCOperationProgress.updateHandler);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (char *)v4 + *(void *)(*v4 + 328);
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  uint64_t v32 = *(void *)(*v4 + 336);
  *((unsigned char *)v4 + v32) = 2;
  uint64_t v13 = (void *)((char *)v4 + *(void *)(*v4 + 344));
  swift_retain();
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v14 = sub_100030CB4(6);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t *v13 = v14;
  v13[1] = v16;
  v13[2] = v18;
  v13[3] = v20;
  uint64_t v21 = (char *)v4 + *(void *)(*v4 + 368);
  *uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  *((void *)v21 + 2) = 0xE000000000000000;
  uint64_t v22 = (char *)v4 + *(void *)(*v4 + 376);
  char *v22 = 0;
  *((void *)v22 + 1) = 0;
  *((void *)v22 + 2) = 0xE000000000000000;
  uint64_t v23 = (_OWORD *)((char *)v4 + *(void *)(*v4 + 384));
  _OWORD *v23 = 0u;
  v23[1] = 0u;
  *((unsigned char *)v4 + *(void *)(*v4 + 392)) = 0;
  *(void *)((char *)v4 + *(void *)(*v4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)((char *)v4 + *(void *)(*v4 + 408)) = _swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v6 + 296) - 8) + 16))((char *)v4 + *(void *)(*v4 + 312), v31);
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  sub_100032FD8(a2, v24);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v34, v24, v25);
  uint64_t v26 = (char *)v4 + *(void *)(*v4 + 320);
  long long v27 = v34[1];
  *(_OWORD *)uint64_t v26 = v34[0];
  *((_OWORD *)v26 + 1) = v27;
  *((void *)v26 + 4) = v35;
  sub_100049660((uint64_t)a2, (uint64_t)v4 + *(void *)(*v4 + 352));
  *(void *)((char *)v4 + *(void *)(*v4 + 360)) = v33;
  *((unsigned char *)v4 + v32) = 2;
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  swift_release();
  *((_WORD *)v4 + 12) = 256;
  void v4[4] = 0;
  uint64_t v28 = (char *)v4
      + OBJC_IVAR____TtC14RecentsAvocado31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v29 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v4[2] = 0x3FE0000000000000;
  sub_1003CA12C(0);
  sub_100039184((uint64_t)a2);
  return v4;
}

uint64_t sub_100371424(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 296);
  __chkstk_darwin(a1);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v7, a1, v5);
  uint64_t v9 = type metadata accessor for DOCOperationProgress.OperationWithProvider();
  sub_100049660(a1 + *(int *)(v9 + 28), (uint64_t)v12);
  return (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 640))(v7, v12, a2);
}

uint64_t sub_100371528()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 368);
  swift_beginAccess();
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
  }
  else
  {
    sub_10036FAA0(v5);
    uint64_t v2 = v5[0];
    uint64_t v3 = v5[1];
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = v3;
    *(unsigned char *)uint64_t v1 = 1;
  }
  swift_endAccess();
  return v2;
}

uint64_t sub_1003715C8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 376);
  swift_beginAccess();
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
  }
  else
  {
    sub_10036FB14(v5);
    uint64_t v2 = v5[0];
    uint64_t v3 = v5[1];
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = v3;
    *(unsigned char *)uint64_t v1 = 1;
  }
  swift_endAccess();
  return v2;
}

unint64_t sub_10037166C()
{
  unint64_t result = qword_100636020;
  if (!qword_100636020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100636020);
  }
  return result;
}

unint64_t sub_1003716C4()
{
  unint64_t result = qword_100636028;
  if (!qword_100636028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100636028);
  }
  return result;
}

uint64_t sub_100371718()
{
  return swift_getWitnessTable();
}

uint64_t getEnumTagSinglePayload for DOCProgressValue(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCProgressValue(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100371784(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1003717A0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressValue()
{
  return &type metadata for DOCProgressValue;
}

uint64_t getEnumTagSinglePayload for DOCProgressState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100371880);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCProgressState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100371968);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressState()
{
  return &type metadata for DOCProgressState;
}

uint64_t type metadata accessor for DOCFileOperationProgress(uint64_t a1)
{
  return sub_100069444(a1, qword_100636058);
}

uint64_t type metadata accessor for DOCGenericOperationProgress(uint64_t a1)
{
  return sub_100069444(a1, qword_100636418);
}

uint64_t sub_1003719E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100371A1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_100371B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_100371B1C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100371BE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCOperationProgress.ObservedEvent()
{
  return sub_10005DE5C();
}

uint64_t type metadata accessor for DOCTrace()
{
  return self;
}

uint64_t sub_100371C4C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100371CE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

uint64_t sub_100371DCC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unsigned char *sub_100371E08(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_100371E78(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_100371EE8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_100371F58(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100371FC8(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 1) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)&a1[v9];
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9]) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v6 + 1] & ~v6);
      }
      unsigned int v15 = *a1;
      BOOL v16 = v15 >= 2;
      int v17 = (v15 + 2147483646) & 0x7FFFFFFF;
      if (v16) {
        return (v17 + 1);
      }
      else {
        return 0;
      }
    }
  }
  int v11 = a1[v9];
  if (!a1[v9]) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v9) = *(unsigned __int16 *)a1 | (a1[2] << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100372170(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 1) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1003723C8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 1] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else
        {
          *a1 = a2 + 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CachedValue()
{
  return sub_10005DE5C();
}

uint64_t sub_100372408()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1003724A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1003725DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  return sub_100039184((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_10037263C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1003726FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  sub_1000ABA90((uint64_t *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_100372774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1003727F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  sub_100039184(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_100372884(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003729D0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_1003729E4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100372BD0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 8) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(void *)unint64_t v19 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 24) = a2 - 1;
          }
        }
        else
        {
          unint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t sub_100372BF8()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100372C30()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100372C68(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_10036FCF4(a1, a2, a3, a4, a5, *(void *)(v5 + 24), *(void *)(v5 + 16));
}

uint64_t sub_100372C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10036FFC0(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 16));
}

uint64_t sub_100372C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003700E0(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 16));
}

const char *sub_100372C80()
{
  return "isCancelled";
}

id sub_100372C8C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isCancelled];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100372CC0(void *a1, uint64_t a2)
{
  return sub_100372EAC(a1, a2, 0x6C65636E61437369, 0xEB0000000064656CLL);
}

const char *sub_100372CE0()
{
  return "isPaused";
}

id sub_100372CEC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isPaused];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100372D20(void *a1, uint64_t a2)
{
  return sub_100372EAC(a1, a2, 0x6465737561507369, 0xE800000000000000);
}

const char *sub_100372D38()
{
  return "isFinished";
}

id sub_100372D44@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isFinished];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100372D78(void *a1, uint64_t a2)
{
  return sub_100372EAC(a1, a2, 0x6873696E69467369, 0xEA00000000006465);
}

uint64_t (*sub_100372D94())()
{
  return sub_100372EEC;
}

uint64_t sub_100372DD4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100372E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100372E14()
{
  return swift_release();
}

const char *sub_100372E1C()
{
  return "isIndeterminate";
}

id sub_100372E28@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isIndeterminate];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100372E5C(void *a1, uint64_t a2)
{
  return sub_100372EAC(a1, a2, 0x657465646E497369, 0xEF6574616E696D72);
}

const char *sub_100372E80()
{
  return "fractionCompleted";
}

uint64_t sub_100372E90(void *a1, uint64_t a2)
{
  return sub_100372EAC(a1, a2, 0xD000000000000011, 0x80000001004EF160);
}

uint64_t sub_100372EAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v4 + 16))(a3, a4, *a1, a2);
}

uint64_t sub_100372EEC()
{
  return sub_1003701E4(v0);
}

uint64_t sub_100372EF4()
{
  return sub_1003704D8();
}

uint64_t sub_100372EFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100372F44()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100372F94()
{
  return sub_10036FE0C(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

void sub_100372FE4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1[2];
  if (!v4 || v4 == 1 && a3 && (a1[4] == a2 ? (BOOL v6 = a1[5] == a3) : (BOOL v6 = 0), v6 || (sub_1004CF890() & 1) != 0))
  {
    objc_msgSend(v3, "set_alternateLargeTitles:", 0);
  }
  else
  {
    id v7 = [v3 _alternateLargeTitles];
    if (v7)
    {
      unsigned int v8 = v7;
      uint64_t v9 = (void *)sub_1004CDE30();
    }
    else
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    char v10 = sub_100282DA4(a1, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      Class isa = sub_1004CDE10().super.isa;
      objc_msgSend(v3, "set_alternateLargeTitles:", isa);
    }
  }
}

void sub_10037312C(void *a1, void *a2)
{
  if (sub_1001E7DCC(a2))
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_3:
      uint64_t v6 = v5[4];
      uint64_t v7 = v5[5];
      swift_bridgeObjectRetain();
      [a1 setLargeTitleDisplayMode:1];
      swift_bridgeObjectRetain();
      sub_100372FE4(v5, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v8 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = sub_1001E3D74(a2, *(void **)(v2 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_configuration));
    if (v5[2]) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  id v8 = [a2 displayName];
  [a1 setLargeTitleDisplayMode:2];
  objc_msgSend(a1, "set_alternateLargeTitles:", 0);
LABEL_6:
  [a1 setTitle:v8];
}

uint64_t sub_10037328C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_eventReporting];
  *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_eventReporting + 8] = a2;
  swift_unknownObjectWeakAssign();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v6 = *((void *)v5 + 1);
    uint64_t v7 = swift_getObjectType();
    void v11[3] = ObjectType;
    v11[0] = v2;
    id v8 = *(void (**)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t))(v6 + 8);
    uint64_t v9 = v2;
    v8(v11, 1, 1, 0, v7, v6);
    swift_unknownObjectRelease();
    sub_100039184((uint64_t)v11);
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_unknownObjectRelease();
  }
}

void sub_1003733F4()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14RecentsAvocadoP33_548ADB546ED6AD519BD47BB3154A8CE428DOCPlaceHolderViewController_location));
}

uint64_t type metadata accessor for DOCPlaceHolderViewController()
{
  return self;
}

void sub_100373438()
{
  if ((objc_msgSend(v0, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkipped_updateOverlay") & 1) == 0)
  {
    unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem];
    if (v1)
    {
      id v2 = v1;
      [v2 setHidesSearchBarWhenScrolling:0];
      [v2 setHidesBackButton:1];
      sub_100387DC8((unint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, 0, 1);
      sub_10037312C(v2, *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocadoP33_548ADB546ED6AD519BD47BB3154A8CE428DOCPlaceHolderViewController_location]);
    }
  }
}

void sub_100373544()
{
}

uint64_t type metadata accessor for DOCPlaceholderDataSource()
{
  return self;
}

id DOCInlineRenameOverlayView.hitTest(_:with:)(uint64_t a1, CGFloat a2, CGFloat a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v9 = (void *)Strong,
        char v10 = *(void **)(Strong + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView),
        id v11 = v10,
        v9,
        !v10))
  {
    v33.receiver = v4;
    v33.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
    return objc_msgSendSuper2(&v33, "hitTest:withEvent:", a1, a2, a3);
  }
  sub_100373880(v4);
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  id v20 = sub_100393B10();
  id v21 = [v20 superview];

  if (v21)
  {
    id v22 = sub_100393B10();
    objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v22, a2, a3);
    double v24 = v23;
    double v26 = v25;

    id v27 = sub_100393B10();
    id v28 = objc_msgSend(v27, "hitTest:withEvent:", a1, v24, v26);

    if (v28)
    {
      sub_1000333C8(0, (unint64_t *)&unk_10062BA30);
      if ([v28 isKindOfClass:swift_getObjCClassFromMetadata()])
      {

        return v28;
      }
    }
  }
  objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v11, a2, a3);
  id v29 = objc_msgSend(v11, "hitTest:withEvent:", a1);
  if (v29)
  {
    id v28 = v29;
  }
  else
  {
    v35.origin.x = v13;
    v35.origin.y = v15;
    v35.size.width = v17;
    v35.size.double height = v19;
    v34.x = a2;
    v34.y = a3;
    BOOL v30 = CGRectContainsPoint(v35, v34);

    if (v30)
    {
      return 0;
    }
    else
    {
      id v31 = v4;
      return v4;
    }
  }
  return v28;
}

uint64_t type metadata accessor for DOCInlineRenameOverlayView()
{
  return self;
}

void sub_100373880(void *a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = *(void **)(Strong + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView);
    id v5 = v4;

    if (v4)
    {
      objc_msgSend(v5, "frame", 0.0, 0.0);
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      double v14 = (void *)swift_unknownObjectWeakLoadStrong();
      objc_msgSend(a1, "convertRect:fromView:", v14, v7, v9, v11, v13);
      double v16 = v15;
      double v18 = v17;
      double v20 = v19;
      double v22 = v21;

      sub_10006BCE0(v16, v18, v20, v22, -5.0, -5.0);
    }
  }
}

id DOCInlineRenameOverlayView.init(frame:)(double a1, double a2, double a3, double a4)
{
  swift_unknownObjectWeakInit();
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id DOCInlineRenameOverlayView.init(coder:)(void *a1)
{
  swift_unknownObjectWeakInit();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id DOCInlineRenameOverlayView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100373BB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  swift_retain_n();
  double v6 = sub_1004CC760();
  os_log_type_t v7 = sub_1004CE350();
  int v8 = v7;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v9 = 136315650;
    int v21 = v8;
    uint64_t v23 = sub_100187CC4(0x4E746E6572727563, 0xEB0000000065646FLL, &v24);
    sub_1004CF1F0();
    *(_WORD *)(v9 + 12) = 2080;
    id v10 = [*(id *)(v1 + 64) filename];
    uint64_t v11 = sub_1004CDB50();
    uint64_t v20 = v2;
    uint64_t v12 = v11;
    unint64_t v14 = v13;

    uint64_t v23 = sub_100187CC4(v12, v14, &v24);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v15 = sub_1004CECA0();
    unint64_t v17 = v16;
    swift_unknownObjectRelease();
    uint64_t v23 = sub_100187CC4(v15, v17, &v24);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, (os_log_type_t)v21, "%s fileName: %s node: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_100373EB0(id *a1)
{
  uint64_t v2 = v1;
  id v69 = a1;
  uint64_t v3 = sub_1004CC770();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = (char *)&v63 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v63 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v63 - v14;
  sub_1004CC730();
  swift_retain_n();
  unint64_t v16 = sub_1004CC760();
  os_log_type_t v17 = sub_1004CE350();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v70 = v4;
  long long v66 = v13;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v67 = v7;
    uint64_t v20 = v19;
    uint64_t v64 = swift_slowAlloc();
    uint64_t v72 = v64;
    *(_DWORD *)uint64_t v20 = 136315650;
    uint64_t Strong = sub_100187CC4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
    long long v65 = v10;
    sub_1004CF1F0();
    *(_WORD *)(v20 + 12) = 2080;
    id v21 = [v1[8] filename];
    uint64_t v22 = sub_1004CDB50();
    uint64_t v68 = v3;
    uint64_t v23 = v22;
    unint64_t v25 = v24;

    uint64_t Strong = sub_100187CC4(v23, v25, &v72);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2080;
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v26 = sub_1004CECA0();
    unint64_t v28 = v27;
    swift_unknownObjectRelease();
    uint64_t v29 = v26;
    uint64_t v2 = v1;
    uint64_t Strong = sub_100187CC4(v29, v28, &v72);
    id v10 = v65;
    uint64_t v4 = v70;
    sub_1004CF1F0();
    swift_release_n();
    uint64_t v3 = v68;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s didSet fileName: %s node: %s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    os_log_type_t v7 = v67;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  BOOL v30 = *(char **)(v4 + 8);
  ((void (*)(char *, uint64_t))v30)(v15, v3);
  id v31 = v69;
  if (v69 && (uint64_t v32 = swift_unknownObjectWeakLoadStrong()) != 0)
  {
    objc_super v33 = (void *)v32;
    id v69 = v2;
    type metadata accessor for DOCItemCollectionCell();
    CGPoint v34 = v31;
    if (sub_1004CEF10())
    {
      sub_1004CC730();
      CGRect v35 = sub_1004CC760();
      os_log_type_t v36 = sub_1004CE350();
      if (os_log_type_enabled(v35, v36))
      {
        long long v65 = v10;
        Swift::String v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        *(_DWORD *)Swift::String v37 = 136315138;
        uint64_t Strong = sub_100187CC4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
        sub_1004CF1F0();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s current item cell and previous cell are the same. No need to re-host renaming between cells. Resuming first responder if needed.", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v30)(v65, v3);
      }
      else
      {

        ((void (*)(char *, uint64_t))v30)(v10, v3);
      }
      sub_1003750F4();
    }
    else
    {
      uint64_t v50 = v66;
      sub_1004CC730();
      objc_super v51 = v34;
      id v52 = v33;
      uint64_t v53 = v51;
      id v54 = v52;
      uint64_t v55 = sub_1004CC760();
      os_log_type_t v56 = sub_1004CE350();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        long long v65 = v30;
        uint64_t v72 = v58;
        *(_DWORD *)uint64_t v57 = 136315650;
        uint64_t Strong = sub_100187CC4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
        sub_1004CF1F0();
        *(_WORD *)(v57 + 12) = 2080;
        uint64_t Strong = (uint64_t)v53;
        uint64_t v68 = v3;
        uint64_t v59 = sub_1004CDBA0();
        uint64_t Strong = sub_100187CC4(v59, v60, &v72);
        sub_1004CF1F0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 22) = 2080;
        uint64_t Strong = (uint64_t)v54;
        uint64_t v61 = sub_1004CDBA0();
        uint64_t Strong = sub_100187CC4(v61, v62, &v72);
        sub_1004CF1F0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "%s moving rename from: %s to: %s", (uint8_t *)v57, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v65)(v50, v68);
      }
      else
      {

        ((void (*)(char *, uint64_t))v30)(v50, v3);
      }
      sub_100375790(v53, v54);
    }
  }
  else
  {
    sub_1004CC730();
    swift_retain_n();
    uint64_t v38 = v31;
    Swift::String v39 = sub_1004CC760();
    Swift::String v40 = v7;
    os_log_type_t v41 = sub_1004CE350();
    if (os_log_type_enabled(v39, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v67 = v40;
      uint64_t v43 = v42;
      uint64_t v44 = swift_slowAlloc();
      long long v65 = v30;
      uint64_t v72 = v44;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t Strong = sub_100187CC4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
      sub_1004CF1F0();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t Strong = (uint64_t)v31;
      Swift::String v45 = v38;
      sub_100031648((uint64_t *)&unk_100636E08);
      uint64_t v46 = sub_1004CDBA0();
      uint64_t v68 = v3;
      uint64_t Strong = sub_100187CC4(v46, v47, &v72);
      sub_1004CF1F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      uint64_t v48 = sub_1004CDBA0();
      uint64_t Strong = sub_100187CC4(v48, v49, &v72);
      sub_1004CF1F0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v41, "%s oldValue: %s or currentItemCell: %s were nil. Not updating renaming session.", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v65)(v67, v68);
    }
    else
    {

      swift_release_n();
      ((void (*)(char *, uint64_t))v30)(v40, v3);
    }
  }
}

uint64_t sub_10037486C()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    uint64_t v2 = v0;
    sub_100031648(&qword_100636E00);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = sub_1004CE3D0();
    *(void *)(v2 + 88) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t *NSNotificationName.DOCInlineRenameControllerWillBeginRename.unsafeMutableAddressor()
{
  if (qword_1006269E8 != -1) {
    swift_once();
  }
  return &static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
}

void sub_10037493C(uint64_t a1)
{
  sub_1004CA6D0();
  sub_100031648(&qword_10062BA60);
  if ((swift_dynamicCast() & 1) == 0 || (swift_unknownObjectRelease(), v2 != a1)) {
    sub_1003773E0();
  }
}

void sub_1003749BC()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (v2)
    {
      id v3 = [self defaultCenter];
      if (qword_1006269E8 != -1) {
        swift_once();
      }
      [v3 postNotificationName:static NSNotificationName.DOCInlineRenameControllerWillBeginRename object:v0];

      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v4 = *(void *)(v0 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);
        swift_unknownObjectRelease();
      }
      uint64_t v6 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      os_log_type_t v7 = sub_10003D25C((uint64_t)sub_100379458, v6, (uint64_t)sub_100379458, v6);
      swift_release_n();
      *(void *)(v1 + 80) = v7;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))((swift_isaMask & *Strong) + 0x3C0))(v1);
      uint64_t v8 = *(void **)(v1 + 32);
      if (v8)
      {
        Class v9 = v8;
        id v10 = [Strong window];
        if (v10)
        {
          uint64_t v11 = v10;
          [v10 addSubview:v9];
          Class isa = (Class)(id)DOCConstraintsToResizeWithReferenceView();
          if (!isa)
          {
            sub_1000333C8(0, (unint64_t *)&unk_100628430);
            sub_1004CDE30();
            Class isa = sub_1004CDE10().super.isa;
            swift_bridgeObjectRelease();
          }
          [self activateConstraints:isa];

          Class v9 = isa;
        }
      }
      sub_100377864();
    }
  }
}

void sub_100374C90()
{
  uint64_t v0 = (void *)sub_1004CC770();
  uint64_t v1 = *(v0 - 1);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v26 - v5;
  sub_1004CC730();
  os_log_type_t v7 = sub_1004CC760();
  os_log_type_t v8 = sub_1004CE350();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v0;
    id v10 = v4;
    uint64_t v11 = v1;
    uint64_t v12 = (uint8_t *)v9;
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v33 = sub_100187CC4(0x6E65526573756170, 0xED00002928656D61, &v34);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s if needed", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v11;
    uint64_t v4 = v10;
    uint64_t v0 = v32;
    swift_slowDealloc();
  }

  unint64_t v13 = *(void (**)(char *, void *))(v1 + 8);
  v13(v6, v0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (void *)Strong;
    unint64_t v16 = *(void **)(Strong + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView);
    if (v16)
    {
      id v17 = v16;
      if ([v17 isFirstResponder])
      {
        sub_1004CC730();
        BOOL v18 = v17;
        uint64_t v19 = sub_1004CC760();
        os_log_type_t v20 = sub_1004CE350();
        int v21 = v20;
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v22 = swift_slowAlloc();
          uint64_t v32 = v18;
          uint64_t v23 = v22;
          uint64_t v29 = (void *)swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          uint64_t v34 = v31;
          *(_DWORD *)uint64_t v23 = 136315394;
          os_log_t v28 = v19;
          uint64_t v33 = sub_100187CC4(0x6E65526573756170, 0xED00002928656D61, &v34);
          int v27 = v21;
          sub_1004CF1F0();
          *(_WORD *)(v23 + 12) = 2112;
          v26[1] = v23 + 14;
          uint64_t v30 = v1;
          uint64_t v33 = (uint64_t)v32;
          unint64_t v24 = v32;
          sub_1004CF1F0();
          *uint64_t v29 = v16;

          os_log_t v25 = v28;
          _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v27, "%s resigning: %@ first responder.", (uint8_t *)v23, 0x16u);
          sub_100031648((uint64_t *)&unk_100628890);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          BOOL v18 = v32;
          swift_slowDealloc();
        }
        else
        {
        }
        v13(v4, v0);
        [v18 resignFirstResponder];
      }
    }
    else
    {
      id v17 = (id)Strong;
    }
  }
}

void sub_1003750F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v47 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = &v40[-v7];
  __chkstk_darwin(v6);
  id v10 = &v40[-v9];
  sub_1004CC730();
  uint64_t v11 = sub_1004CC760();
  os_log_type_t v12 = sub_1004CE350();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v46 = v1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v48 = sub_100187CC4(0x6552656D75736572, 0xEE002928656D616ELL, &v49);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s if needed", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v15(v10, v2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = (void *)Strong;
    BOOL v18 = *(void **)(Strong + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView);
    if (v18)
    {
      id v19 = v18;
      if ([v19 isFirstResponder])
      {

        return;
      }
      sub_1004CC730();
      id v20 = v19;
      int v21 = sub_1004CC760();
      os_log_type_t v22 = sub_1004CE350();
      int v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v49 = v44;
        *(_DWORD *)uint64_t v24 = 136315394;
        Swift::String v45 = (void (*)(unsigned char *, uint64_t))v2;
        uint64_t v46 = v3;
        uint64_t v48 = sub_100187CC4(0x6552656D75736572, 0xEE002928656D616ELL, &v49);
        sub_1004CF1F0();
        *(_WORD *)(v24 + 12) = 2112;
        uint64_t v43 = v8;
        uint64_t v48 = (uint64_t)v20;
        id v25 = v20;
        int v41 = v23;
        uint64_t v26 = v21;
        id v27 = v25;
        uint64_t v2 = (uint64_t)v45;
        uint64_t v3 = v46;
        sub_1004CF1F0();
        void *v42 = v18;

        _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v41, "%s setting: %@ to first responder.", (uint8_t *)v24, 0x16u);
        sub_100031648((uint64_t *)&unk_100628890);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        os_log_t v28 = v43;
      }
      else
      {

        os_log_t v28 = v8;
      }
      v15(v28, v2);
      id v29 = [v20 window];
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = [v29 windowScene];
        if (v31)
        {
          uint64_t v32 = v31;
          id v33 = [v31 focusSystem];

          if (v33)
          {

            if ([v30 isFocused])
            {
              [v20 becomeFirstResponder];
            }
            else
            {
              uint64_t v34 = v20;
              CGRect v35 = v47;
              sub_1004CC730();
              os_log_type_t v36 = sub_1004CC760();
              os_log_type_t v37 = sub_1004CE350();
              if (os_log_type_enabled(v36, v37))
              {
                Swift::String v45 = v15;
                uint64_t v38 = (uint8_t *)swift_slowAlloc();
                uint64_t v39 = swift_slowAlloc();
                uint64_t v46 = v3;
                uint64_t v49 = v39;
                *(_DWORD *)uint64_t v38 = 136315138;
                uint64_t v48 = sub_100187CC4(0x6552656D75736572, 0xEE002928656D616ELL, &v49);
                sub_1004CF1F0();
                _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s skipping first responder because window isn't key", v38, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                v45(v47, v2);
              }
              else
              {

                v15(v35, v2);
              }
            }
            return;
          }
        }
      }
      [v20 becomeFirstResponder];
    }
  }
}

void sub_100375790(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1004CC770();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  id v10 = a1;
  id v11 = a2;
  os_log_type_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v14 = sub_1004CC760();
  os_log_type_t v15 = sub_1004CE350();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = v3;
    uint64_t v17 = v16;
    BOOL v18 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v31 = v6;
    uint64_t v33 = sub_100187CC4(0xD000000000000014, 0x8000000100533690, &v34);
    uint64_t v30 = v7;
    sub_1004CF1F0();
    *(_WORD *)(v17 + 12) = 2112;
    uint64_t v33 = (uint64_t)v12;
    id v19 = v12;
    os_log_t v28 = v14;
    id v20 = v13;
    id v21 = v19;
    sub_1004CF1F0();
    *BOOL v18 = v12;

    *(_WORD *)(v17 + 22) = 2112;
    uint64_t v33 = (uint64_t)v20;
    id v22 = v20;
    uint64_t v13 = v20;
    sub_1004CF1F0();
    v18[1] = v20;

    os_log_t v23 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, v15, "%s from: %@, to: %@", (uint8_t *)v17, 0x20u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v32;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*((unsigned char *)v12 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_isRenaming) == 1)
  {
    uint64_t v24 = *(void **)((char *)v12 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView);
    if (v24)
    {
      *(void *)((char *)v12 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameController) = 0;
      id v25 = v24;
      swift_release();
      (*(void (**)(void, void))((swift_isaMask & *v12) + 0x3C8))(0, 0);
      (*(void (**)(id))((swift_isaMask & *v13) + 0x3E0))(v25);
      (*(void (**)(uint64_t))((swift_isaMask & *v13) + 0x3C0))(v3);
      if (*(void *)(v3 + 32))
      {
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectWeakAssign();

        id v25 = (id)Strong;
      }
    }
  }
}

void sub_100375BF8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    id v10 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1F8))();

    if (v10)
    {
      id v11 = &v10[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_node];
      swift_beginAccess();
      uint64_t v12 = *(void *)v11;
      if (v12 && a2)
      {
        *(void *)(v4 + 48) = a1;
        *(void *)(v4 + 56) = a2;
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_getObjectType();
        uint64_t v13 = swift_allocObject();
        swift_weakInit();
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v13;
        *(void *)(v14 + 24) = v10;
        *(void *)(v14 + 32) = v12;
        *(unsigned char *)(v14 + 40) = a3 & 1;
        *(void *)(v14 + 48) = a1;
        *(void *)(v14 + 56) = a2;
        swift_unknownObjectRetain();
        swift_retain();
        os_log_type_t v15 = v10;
        sub_1004CECC0();

        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_100375DB0(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5, void *a6, uint64_t a7)
{
  id v36 = a6;
  int v35 = a5;
  uint64_t v12 = sub_1004CD860();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1004CD8C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = __chkstk_darwin(v16);
  id v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v33 = v17;
    uint64_t v34 = result;
    sub_1000333C8(0, (unint64_t *)&qword_100626B70);
    id v21 = a3;
    id v22 = a1;
    uint64_t v32 = v13;
    uint64_t v23 = v12;
    uint64_t v24 = a7;
    id v25 = v22;
    uint64_t v31 = sub_1004CE630();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a2;
    *(void *)(v26 + 24) = a3;
    *(void *)(v26 + 32) = a4;
    *(unsigned char *)(v26 + 40) = v35 & 1;
    id v27 = v36;
    *(void *)(v26 + 48) = v25;
    *(void *)(v26 + 56) = v27;
    *(void *)(v26 + 64) = v24;
    aBlock[4] = sub_100379388;
    void aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A422C;
    void aBlock[3] = &unk_1005D0830;
    os_log_t v28 = _Block_copy(aBlock);
    id v36 = v25;
    swift_retain();
    id v29 = v21;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    sub_1004CD880();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10003A744();
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10003A79C();
    sub_1004CF330();
    uint64_t v30 = (void *)v31;
    sub_1004CE650();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v20, v34);
  }
  return result;
}

void *sub_1003760BC(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1004CB5C0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    BOOL v18 = result;
    uint64_t result = *(void **)(a2 + OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_appearance);
    if (result)
    {
      if ([result shouldShowFileExtensions]) {
        goto LABEL_7;
      }
      uint64_t v23 = a5;
      if (qword_100626950 != -1) {
        swift_once();
      }
      id v19 = objc_msgSend(a3, "contentType", v23);
      sub_1004CB330();

      char v20 = sub_100300790();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      a5 = v23;
      if (v20) {
LABEL_7:
      }
        a4 = 1;
      id v21 = (void *)swift_allocObject();
      v21[2] = v18;
      void v21[3] = a6;
      v21[4] = a7;
      v21[5] = a3;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = a3;
      swift_unknownObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_100377A54(a5, a6, a7, a4 & 1, (void (*)(void))sub_100379400, (uint64_t)v21, (void (*)(id, uint64_t))sub_100379450, v22);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100376330(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, NSObject *a5, NSObject *a6, void *a7)
{
  os_log_t v66 = a5;
  os_log_t v67 = a6;
  unsigned int v68 = a3;
  uint64_t v69 = sub_1004CC770();
  uint64_t v10 = *(void *)(v69 - 8);
  uint64_t v11 = __chkstk_darwin(v69);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  id v19 = (char *)&v64 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v64 - v20;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = Strong;
    uint64_t v65 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1F8))();
    if (v65)
    {
      uint64_t v24 = v68;
      if ((v68 & 0x100) != 0)
      {
        swift_errorRetain();
        sub_1004CC730();
        swift_errorRetain();
        swift_errorRetain();
        os_log_type_t v37 = sub_1004CC760();
        os_log_type_t v38 = sub_1004CE360();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          os_log_t v67 = (os_log_t)swift_slowAlloc();
          os_log_t v71 = v67;
          *(_DWORD *)uint64_t v39 = 136315394;
          os_log_t v66 = v37;
          uint64_t v70 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, (uint64_t *)&v71);
          sub_1004CF1F0();
          *(_WORD *)(v39 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v40 = sub_1004CF940();
          uint64_t v70 = sub_100187CC4(v40, v41, (uint64_t *)&v71);
          sub_1004CF1F0();
          swift_bridgeObjectRelease();
          sub_1002EDD0C(a1, a2, v68, 1);
          sub_1002EDD0C(a1, a2, v68, 1);
          os_log_t v42 = v66;
          _os_log_impl((void *)&_mh_execute_header, v66, v38, "%s: renaming failed with error: %s", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v24 = v68;
          swift_slowDealloc();

          sub_1002EDD0C(a1, a2, v24, 1);
        }
        else
        {
          sub_1002EDD0C(a1, a2, v24, 1);
          sub_1002EDD0C(a1, a2, v24, 1);
          swift_errorRelease();
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v69);
      }
      else
      {
        if (*((unsigned char *)v23 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_isRenaming))
        {
          sub_1004CC730();
          id v25 = sub_1004CC760();
          os_log_type_t v26 = sub_1004CE340();
          if (os_log_type_enabled(v25, v26))
          {
            id v27 = (uint8_t *)swift_slowAlloc();
            os_log_t v71 = (os_log_t)swift_slowAlloc();
            *(_DWORD *)id v27 = 136315138;
            uint64_t v70 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, (uint64_t *)&v71);
            sub_1004CF1F0();
            _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: renaming ended with success", v27, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v69);
          os_log_t v28 = (char *)v65;
          if (v68)
          {
            NSString v52 = sub_1004CDB10();
            id v53 = [v52 stringByDeletingPathExtension];

            uint64_t v54 = sub_1004CDB50();
            uint64_t v56 = v55;

            uint64_t v57 = (uint64_t *)&v28[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameTitle];
            uint64_t v33 = *(void *)&v28[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameTitle];
            uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameTitle + 8];
            *uint64_t v57 = v54;
            v57[1] = v56;
          }
          else
          {
            id v29 = (void *)(v65 + OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameTitle);
            uint64_t v31 = *(void *)(v65 + OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameTitle);
            uint64_t v30 = *(void *)(v65
                            + OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameTitle
                            + 8);
            os_log_t v32 = v67;
            *id v29 = v66;
            v29[1] = v32;
            swift_bridgeObjectRetain();
            uint64_t v33 = v31;
          }
          sub_100424160(v33, v30);
          swift_bridgeObjectRelease();
          id v58 = [a7 filename];
          if (!v58)
          {
            __break(1u);
            return;
          }
          uint64_t v59 = v58;
          id v60 = [v58 stringByDeletingPathExtension];

          uint64_t v24 = sub_1004CDB50();
          uint64_t v62 = v61;

          uint64_t v63 = (uint64_t *)&v28[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionCellContent_inflightRenameOldTitle];
          uint64_t *v63 = v24;
          v63[1] = v62;
          swift_bridgeObjectRelease();
          LOWORD(v24) = v68;
          goto LABEL_25;
        }
        sub_1004CC730();
        swift_unknownObjectRetain_n();
        uint64_t v43 = sub_1004CC760();
        os_log_type_t v44 = sub_1004CE340();
        int v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v46 = swift_slowAlloc();
          LODWORD(v67) = v45;
          uint64_t v47 = v46;
          os_log_t v66 = (os_log_t)swift_slowAlloc();
          os_log_t v71 = v66;
          *(_DWORD *)uint64_t v47 = 136315394;
          uint64_t v70 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, (uint64_t *)&v71);
          sub_1004CF1F0();
          *(_WORD *)(v47 + 12) = 2080;
          id v48 = objc_msgSend(a7, "description", v47 + 14);
          uint64_t v49 = sub_1004CDB50();
          unint64_t v51 = v50;

          uint64_t v70 = sub_100187CC4(v49, v51, (uint64_t *)&v71);
          sub_1004CF1F0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v67, "%s: renaming for %s ended with success but cell was not being renamed", (uint8_t *)v47, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v69);
        LOWORD(v24) = v68;
      }
      os_log_t v28 = (char *)v65;
LABEL_25:
      (*(void (**)(BOOL, void))((swift_isaMask & *v23) + 0x3C8))((v24 & 0x100) == 0, 0);

      return;
    }
  }
  sub_1004CC730();
  uint64_t v34 = sub_1004CC760();
  os_log_type_t v35 = sub_1004CE360();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    os_log_t v71 = (os_log_t)swift_slowAlloc();
    *(_DWORD *)id v36 = 136315138;
    uint64_t v70 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, (uint64_t *)&v71);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: no cell or cell content. Bailing on rename completion handler.", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v69);
}

uint64_t sub_100376C4C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1004CC770();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v51[-v12];
  __chkstk_darwin(v11);
  uint64_t v15 = &v51[-v14];
  if (a2)
  {
    swift_errorRetain();
    sub_1004CC730();
    swift_errorRetain();
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    uint64_t v16 = sub_1004CC760();
    os_log_type_t v17 = sub_1004CE340();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v19 = 136315650;
      int v52 = v18;
      uint64_t v56 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, &v57);
      sub_1004CF1F0();
      *(_WORD *)(v19 + 12) = 2080;
      id v20 = [a3 description];
      uint64_t v55 = v7;
      id v21 = v20;
      uint64_t v22 = sub_1004CDB50();
      uint64_t v54 = v6;
      unint64_t v24 = v23;

      uint64_t v56 = sub_100187CC4(v22, v24, &v57);
      sub_1004CF1F0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v25 = sub_1004CF940();
      uint64_t v56 = sub_100187CC4(v25, v26, &v57);
      sub_1004CF1F0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v52, "%s: finished block has been called for renaming %s with error: %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 8))(v15, v54);
    }
    else
    {
      swift_errorRelease();
      swift_unknownObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v15, v6);
    }
  }
  else if (a1)
  {
    id v28 = a1;
    sub_1004CC730();
    swift_unknownObjectRetain_n();
    id v29 = v28;
    uint64_t v30 = sub_1004CC760();
    os_log_type_t v31 = sub_1004CE340();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      int v52 = v32;
      uint64_t v34 = v33;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v34 = 136315650;
      uint64_t v55 = v7;
      uint64_t v56 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, &v57);
      sub_1004CF1F0();
      *(_WORD *)(v34 + 12) = 2080;
      id v35 = [a3 description];
      uint64_t v54 = v6;
      id v36 = v35;
      uint64_t v37 = sub_1004CDB50();
      unint64_t v39 = v38;

      uint64_t v56 = sub_100187CC4(v37, v39, &v57);
      sub_1004CF1F0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      id v40 = [v29 description];
      uint64_t v41 = sub_1004CDB50();
      unint64_t v43 = v42;

      uint64_t v56 = sub_100187CC4(v41, v43, &v57);
      sub_1004CF1F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v52, "%s: finished block has been called for renaming %s with renamed item: %s", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 8))(v10, v54);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  else
  {
    sub_1004CC730();
    swift_unknownObjectRetain_n();
    os_log_type_t v44 = sub_1004CC760();
    os_log_type_t v45 = sub_1004CE360();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v55 = v7;
      uint64_t v56 = sub_100187CC4(0xD00000000000002ELL, 0x8000000100533660, &v57);
      uint64_t v54 = v6;
      sub_1004CF1F0();
      *(_WORD *)(v46 + 12) = 2080;
      id v47 = [a3 description];
      uint64_t v48 = sub_1004CDB50();
      unint64_t v50 = v49;

      uint64_t v56 = sub_100187CC4(v48, v50, &v57);
      sub_1004CF1F0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s: finished block has been called for renaming %s without FPItem", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 8))(v13, v54);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
}

void sub_1003773E0()
{
  uint64_t v0 = sub_1004CC770();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  uint64_t v4 = sub_1004CC760();
  os_log_type_t v5 = sub_1004CE350();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v10 = sub_100187CC4(0x65526C65636E6163, 0xEE002928656D616ELL, &v11);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (v9) {
      (*(void (**)(void, void))((swift_isaMask & *v8) + 0x3C8))(0, 0);
    }
  }
}

uint64_t sub_10037762C(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = sub_1004CC770();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  uint64_t v8 = sub_1004CC760();
  os_log_type_t v9 = sub_1004CE350();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    int v16 = (int)v3;
    uint64_t v3 = (uint8_t *)v10;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v17 = sub_100187CC4(0xD000000000000012, 0x8000000100520550, &v18);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v3) = v16;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = *(void **)(v2 + 32);
  if (v11) {
    [v11 removeFromSuperview];
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v13 + 40))(v3 & 1, ObjectType, v13);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100377864()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  os_log_type_t v9 = (char *)Strong;
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (v2)
  {
    if (*(unsigned char *)(v0 + 40) == 1)
    {
      uint64_t v3 = v9;
      uint64_t v4 = *(void **)&v9[OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView];
      if (v4)
      {
        uint64_t v5 = *(char **)(v0 + 64);
        swift_unknownObjectRetain();
        id v6 = v4;
        sub_100393818(v5);
LABEL_10:
        swift_unknownObjectRelease();

        uint64_t v3 = v6;
      }
    }
    else
    {

      uint64_t v3 = v9;
      uint64_t v7 = *(void **)&v9[OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView];
      if (v7)
      {
        uint64_t v8 = *(char **)(v0 + 64);
        swift_unknownObjectRetain();
        id v6 = v7;
        sub_1003939B0(v8);
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v3 = v9;
  }
}

uint64_t DOCInlineRenameController.deinit()
{
  sub_100377F84();
  swift_beginAccess();
  if (*(double *)(v0 + 96) != 0.0) {
    sub_100378AAC();
  }
  sub_1000391D4(v0 + 16);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DOCInlineRenameController.__deallocating_deinit()
{
  DOCInlineRenameController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100377A54(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t a6, void (*a7)(id, uint64_t), uint64_t a8)
{
  if (v8[19])
  {
    sub_1002EDCB8();
    swift_allocError();
    *uint64_t v14 = 1;
    a5();
    swift_errorRelease();
    uint64_t v15 = swift_allocError();
    *int v16 = 1;
LABEL_11:
    a7(a1, v15);
    return swift_errorRelease();
  }
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v19 = v8[3],
        uint64_t ObjectType = swift_getObjectType(),
        id v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(ObjectType, v19),
        swift_unknownObjectRelease(),
        !v21))
  {
    sub_1002EDCB8();
    swift_allocError();
    *id v28 = 0;
    a5();
    swift_errorRelease();
    uint64_t v15 = swift_allocError();
    *id v29 = 0;
    goto LABEL_11;
  }
  type metadata accessor for DOCItemRenameOperation();
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v22[3] = v21;
  v22[4] = 0;
  _OWORD v22[2] = a1;
  v8[19] = v22;
  id v23 = a1;
  id v24 = v21;
  uint64_t result = swift_release();
  uint64_t v26 = v8[19];
  if (v26 && (*(void *)(v26 + 32) = v8[18], swift_retain(), uint64_t result = swift_release(), (v27 = (id *)v8[19]) != 0))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1004A4E40(a2, a3, a4 & 1, a7, a8, v27, (uint64_t)v8, (uint64_t (*)(void, void, void))a5, a6);

    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100377CE8(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t (*a5)(void, void, void), uint64_t a6)
{
  uint64_t v25 = sub_1004CC770();
  uint64_t v12 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  uint64_t v15 = sub_1004CC760();
  os_log_type_t v16 = sub_1004CE350();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v22 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = a6;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    id v24 = a5;
    uint64_t v27 = v19;
    uint64_t v21 = a4;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v26 = sub_100187CC4(0xD000000000000049, 0x8000000100533610, &v27);
    a4 = v21;
    a2 = v22;
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s performItemRename completed", v18, 0xCu);
    swift_arrayDestroy();
    a5 = v24;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  *(void *)(a4 + 152) = 0;
  swift_release();
  return a5(a1, a2, a3 & 0x1FF);
}

uint64_t sub_100377F24()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003780CC();
    return swift_release();
  }
  return result;
}

uint64_t sub_100377F84()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_1004CF6D0();
    if (!v2) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v2) {
      goto LABEL_10;
    }
  }
  uint64_t result = self;
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = (void *)result;
  uint64_t v5 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = sub_1004CF500();
    }
    else
    {
      uint64_t v6 = *(void *)(v1 + 8 * v5 + 32);
      swift_unknownObjectRetain();
    }
    ++v5;
    id v7 = [v4 defaultCenter];
    [v7 removeObserver:v6];
    swift_unknownObjectRelease();
  }
  while (v2 != v5);
LABEL_10:
  swift_bridgeObjectRelease_n();
  *(void *)(v0 + 80) = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003780CC()
{
  uint64_t v1 = v0;
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = Strong[OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_isRenaming];

    char v4 = v3 ^ 1;
  }
  else
  {
    char v4 = 0;
  }
  uint64_t v5 = sub_1004CA6E0();
  if (!v5)
  {
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_15:
    sub_100035F60((uint64_t)&v19);
    int8x16_t v13 = 0uLL;
    char v15 = 1;
    int8x16_t v14 = 0uLL;
    goto LABEL_16;
  }
  uint64_t v6 = v5;
  *(void *)&long long v19 = sub_1004CDB50();
  *((void *)&v19 + 1) = v7;
  sub_1004CF480();
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_1001DB308((uint64_t)v18), (v9 & 1) != 0))
  {
    sub_10005AF14(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100033194((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_15;
  }
  type metadata accessor for CGRect(0);
  int v10 = swift_dynamicCast();
  if (v10) {
    unint64_t v11 = -1;
  }
  else {
    unint64_t v11 = 0;
  }
  int8x16_t v12 = (int8x16_t)vdupq_n_s64(v11);
  int8x16_t v13 = vandq_s8(v18[0], v12);
  int8x16_t v14 = vandq_s8(v18[1], v12);
  char v15 = v10 ^ 1;
LABEL_16:
  *(int8x16_t *)(v1 + 104) = v13;
  *(int8x16_t *)(v1 + 120) = v14;
  *(unsigned char *)(v1 + 136) = v15;
  uint64_t v16 = sub_1004CA6E0();
  sub_100378558(v16, v4 & 1);
  return swift_bridgeObjectRelease();
}

void sub_100378248()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (Strong[OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_isRenaming] == 1)
    {
      int8x16_t v14 = Strong;
      sub_1000BDB1C();
      uint64_t v7 = v14;

      return;
    }
  }
  sub_1004CC730();
  swift_retain_n();
  unint64_t v8 = sub_1004CC760();
  os_log_type_t v9 = sub_1004CE360();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v15 = sub_100187CC4(0x764F706154646964, 0xEF292879616C7265, &v16);
    sub_1004CF1F0();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v15 = v1;
    type metadata accessor for DOCInlineRenameController();
    swift_retain();
    uint64_t v11 = sub_1004CDBA0();
    uint64_t v15 = sub_100187CC4(v11, v12, &v16);
    sub_1004CF1F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s inline rename overlay view tapped but the rename text view was missing. Cancelling rename. Self: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10037762C(0);
}

void sub_100378558(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1004CC770();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v10 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
    if (v12)
    {
      id v62 = v12;
      id v13 = [v12 window];

      if (v13)
      {
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10))
        {
          Class isa = sub_1004CD990().super.isa;
          swift_beginAccess();
          objc_msgSend(v62, "doc_adjustForAutomaticKeyboardInfo:animated:lastAdjustment:", isa, 1, v3 + 96);
          swift_endAccess();
        }
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v16 = (char *)Strong;
          [v62 bounds];
          double v18 = v17;
          double v20 = v19;
          double v22 = v21;
          double v24 = v23;
          [v62 adjustedContentInset];
          v70.origin.x = sub_10006BCE0(v18, v20, v22, v24, v25, v26);
          double Height = CGRectGetHeight(v70);
          [v16 frame];
          if (Height < CGRectGetHeight(v71)
            && (uint64_t v28 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView,
                (id v29 = *(void **)&v16[OBJC_IVAR____TtC14RecentsAvocado21DOCItemCollectionCell_renameTextView]) != 0)
            && (a2 & 1) == 0)
          {
            id v40 = v29;
            [v40 bounds];
            os_log_type_t v45 = *(void **)&v16[v28];
            if (!v45)
            {
              __break(1u);
              return;
            }
            double v46 = v41;
            double v47 = v42;
            double v48 = v43;
            double v49 = v44;
            id v50 = v45;
            objc_msgSend(v62, "convertRect:fromCoordinateSpace:", v50, v46, v47, v48, v49);
            double v52 = v51;
            double v54 = v53;
            double v56 = v55;
            double v58 = v57;

            double v65 = v52;
            double v66 = v54;
            double v67 = v56;
            double v68 = v58 + 5.0;
          }
          else
          {
            [v16 frame];
            double v65 = v30;
            double v66 = v31;
            double v67 = v32;
            double v68 = v33;
          }
          sub_1004CC730();
          uint64_t v34 = sub_1004CC760();
          os_log_type_t v35 = sub_1004CE350();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = swift_slowAlloc();
            uint64_t v60 = swift_slowAlloc();
            v64[0] = v60;
            *(_DWORD *)uint64_t v36 = 136315394;
            uint64_t v63 = sub_100187CC4(0xD000000000000023, 0x80000001005335E0, v64);
            uint64_t v61 = v16;
            sub_1004CF1F0();
            *(_WORD *)(v36 + 12) = 2080;
            uint64_t v37 = sub_1004CEA30();
            uint64_t v63 = sub_100187CC4(v37, v38, v64);
            uint64_t v16 = v61;
            sub_1004CF1F0();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s rename cell frame: %s", (uint8_t *)v36, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          swift_beginAccess();
          objc_msgSend(v62, "scrollRectToVisible:animated:", 1, v65, v66, v67, v68);
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
        id v39 = v62;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_100378AAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  uint64_t v6 = sub_1004CC760();
  os_log_type_t v7 = sub_1004CE350();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)&long long v46 = sub_100187CC4(0xD000000000000019, 0x80000001005336B0, v48);
    sub_1004CF1F0();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s restoring scroll view's offset", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v9 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    if (v11)
    {
      unint64_t v12 = v11;
      if ((*(unsigned char *)(v1 + 136) & 1) == 0)
      {
        CGFloat v13 = *(double *)(v1 + 120);
        v44[0] = *(void *)(v1 + 128);
        CGFloat v15 = *(double *)(v1 + 104);
        CGFloat v14 = *(double *)(v1 + 112);
        id v16 = [v11 window];
        if (v16)
        {
          id v17 = v16;
          id v18 = [v16 screen];
          [v18 bounds];
          CGFloat v20 = v19;
          CGFloat v22 = v21;
          CGFloat v24 = v23;
          CGFloat v26 = v25;
        }
        else
        {
          id v17 = [self mainScreen];
          [v17 bounds];
          CGFloat v20 = v27;
          CGFloat v22 = v28;
          CGFloat v24 = v29;
          CGFloat v26 = v30;
        }

        unint64_t v31 = sub_1000202E0((uint64_t)_swiftEmptyArrayStorage);
        *(void *)&long long v46 = sub_1004CDB50();
        *((void *)&v46 + 1) = v32;
        sub_1004CF480();
        v49.origin.x = v20;
        v49.origin.y = v22;
        v49.size.width = v24;
        v49.size.double height = v26;
        CGFloat MinX = CGRectGetMinX(v49);
        v50.origin.x = v20;
        v50.origin.y = v22;
        v50.size.width = v24;
        v50.size.double height = v26;
        CGFloat Height = CGRectGetHeight(v50);
        v51.origin.x = v15;
        v51.origin.y = v14;
        v51.size.width = v13;
        CGFloat v35 = *(double *)v44;
        *(void *)&v51.size.double height = v44[0];
        CGFloat Width = CGRectGetWidth(v51);
        v52.origin.x = v15;
        v52.origin.y = v14;
        v52.size.width = v13;
        v52.size.double height = v35;
        CGFloat v37 = CGRectGetHeight(v52);
        type metadata accessor for CGRect(0);
        uint64_t v47 = v38;
        id v39 = (CGFloat *)swift_allocObject();
        *(void *)&long long v46 = v39;
        v39[2] = MinX;
        v39[3] = Height;
        v39[4] = Width;
        uint64_t v39[5] = v37;
        sub_100032FC8(&v46, v45);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v44[1] = v31;
        sub_10021C0D0(v45, (uint64_t)v48, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_100033194((uint64_t)v48);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9))
        {
          Class isa = sub_1004CD990().super.isa;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          objc_msgSend(v12, "doc_adjustForAutomaticKeyboardInfo:animated:lastAdjustment:", isa, 1, v1 + 96);
          swift_endAccess();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          double v43 = Strong;
          [Strong frame];
          objc_msgSend(v12, "scrollRectToVisible:animated:", 1);
        }
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

NSString sub_100378FA4()
{
  NSString result = sub_1004CDB10();
  static NSNotificationName.DOCInlineRenameControllerWillBeginRename = (uint64_t)result;
  return result;
}

id static NSNotificationName.DOCInlineRenameControllerWillBeginRename.getter()
{
  if (qword_1006269E8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
  return v0;
}

uint64_t type metadata accessor for DOCInlineRenameController()
{
  return self;
}

uint64_t sub_10037905C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(unsigned char *)(a4 + 136) = 1;
  *(void *)(a4 + 144) = 0;
  *(void *)(a4 + 152) = 0;
  *(void *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 24) = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign();
  id v6 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain();
  id v7 = [v6 initWithTarget:a4 action:"didTapOverlay"];
  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();

  [v8 addGestureRecognizer:v7];
  uint64_t v10 = *(void **)(a4 + 32);
  *(void *)(a4 + 32) = v8;

  sub_10037486C();
  if (qword_1006269E8 != -1) {
    swift_once();
  }
  id v11 = objc_msgSend(self, "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  sub_1004CE3B0();
  swift_release();

  swift_bridgeObjectRelease();
  sub_100035F60((uint64_t)&v13);
  return a4;
}

uint64_t sub_100379294()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003792CC()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10037931C(void *a1)
{
  return sub_100375DB0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_100379330()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 72, 7);
}

void *sub_100379388()
{
  return sub_1003760BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1003793A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003793B0()
{
  return swift_release();
}

uint64_t sub_1003793B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100379400(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_100376330(a1, a2, a3 & 0x1FF, *(void *)(v3 + 16), *(NSObject **)(v3 + 24), *(NSObject **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_100379418()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100379450(void *a1, uint64_t a2)
{
  return sub_100376C4C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100379458()
{
  return sub_100377F24();
}

uint64_t sub_100379460()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100379470()
{
  return 1;
}

uint64_t DOCBrowserContainerController.containedItemCollectionViewController.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!v2) {
    return 0;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3) {
    id v4 = v2;
  }
  return v3;
}

void sub_1003794F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
  Class isa = sub_1004CDE10().super.isa;
  _OWORD v8[4] = a2;
  _OWORD v8[5] = a3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_100259048;
  v8[3] = &unk_1005D09B0;
  id v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  [v3 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v7];
  _Block_release(v7);
}

uint64_t sub_1003795F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);
}

uint64_t sub_10037960C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

void sub_100379624(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_100379994()
{
  return sub_10037F104(type metadata accessor for DOCNullTransitionable);
}

unint64_t sub_1003799AC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1004CF4D0(30);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD00000000000001BLL;
      v3._countAndFlagsBits = sub_1004CF840();
      goto LABEL_13;
    case 2:
      sub_1004CF4D0(21);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000012;
      sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
      v3._countAndFlagsBits = sub_1004CDE40();
      goto LABEL_13;
    case 3:
      sub_1004CF4D0(29);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD00000000000001ALL;
      if (a1) {
        v3._countAndFlagsBits = 1702195828;
      }
      else {
        v3._countAndFlagsBits = 0x65736C6166;
      }
      if (a1) {
        id v4 = (void *)0xE400000000000000;
      }
      else {
        id v4 = (void *)0xE500000000000000;
      }
      v3._object = v4;
LABEL_13:
      sub_1004CDCD0(v3);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 41;
      v9._object = (void *)0xE100000000000000;
      sub_1004CDCD0(v9);
      return v6;
    case 4:
      if (a1) {
        return 0xD000000000000017;
      }
      else {
        return 0xD000000000000019;
      }
    default:
      unint64_t v6 = 0;
      swift_errorRetain();
      sub_1004CF4D0(21);
      v7._object = (void *)0x8000000100533BD0;
      v7._countAndFlagsBits = 0xD000000000000012;
      sub_1004CDCD0(v7);
      sub_100031648(&qword_1006301E0);
      sub_1004CF600();
      v8._countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      sub_1004CDCD0(v8);
      sub_100381C78(a1, 0);
      return v6;
  }
}

unint64_t sub_100379C38(unint64_t a1)
{
  unint64_t result = 0x676E6964616F6CLL;
  switch(a1)
  {
    case 0uLL:
      return result;
    case 1uLL:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 2uLL:
      unint64_t result = 0xD000000000000010;
      break;
    case 3uLL:
      unint64_t result = 0x7974706D65;
      break;
    case 4uLL:
      unint64_t result = 0x697265766F636572;
      break;
    default:
      swift_errorRetain();
      id v4 = (void *)sub_1004CAA50();
      id v5 = [v4 domain];
      uint64_t v6 = sub_1004CDB50();

      [v4 code];
      uint64_t v7 = sub_1004CF840();
      Swift::String v9 = v8;
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = v7;
      v10._object = v9;
      sub_1004CDCD0(v10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100212650(a1);
      unint64_t result = v6;
      break;
  }
  return result;
}

Swift::Int sub_100379DD8(unint64_t a1)
{
  sub_1004CF9E0();
  switch(a1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      break;
    default:
      swift_errorRetain();
      uint64_t v2 = (void *)sub_1004CAA50();
      id v3 = [v2 domain];
      sub_1004CDB50();

      [v2 code];
      uint64_t v4 = sub_1004CF840();
      uint64_t v6 = v5;
      swift_bridgeObjectRetain();
      v8._countAndFlagsBits = v4;
      v8._object = v6;
      sub_1004CDCD0(v8);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100212650(a1);
      break;
  }
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  return sub_1004CFA30();
}

Swift::Int sub_100379FA0()
{
  return sub_100379DD8(*v0);
}

uint64_t sub_100379FA8()
{
  sub_100379C38(*v0);
  sub_1004CDC80();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100379FFC()
{
  unint64_t v1 = *v0;
  sub_1004CF9E0();
  sub_100379C38(v1);
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  return sub_1004CFA30();
}

uint64_t sub_10037A05C(unint64_t *a1, unint64_t *a2)
{
  return sub_100381240(*a1, *a2);
}

unint64_t sub_10037A068@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100381E24(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10037A09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 48))();
  id v3 = (void *)v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = v2;
  unint64_t v9 = v2;
  if (!v2)
  {
LABEL_5:
    if (!v7) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v10 = sub_1004CDB50();
  unint64_t v12 = v11;
  if (sub_1004CDC90() >= 1)
  {
    v29._countAndFlagsBits = v10;
    v29._object = v12;
    sub_1004CDCD0(v29);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0x203A656372756F53;
    unint64_t v9 = 0xE800000000000000;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  if (!v7) {
    goto LABEL_10;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  if (sub_1004CDC90() >= 1)
  {
    v30._countAndFlagsBits = v5;
    v30._object = v7;
    sub_1004CDCD0(v30);
    swift_bridgeObjectRelease();
    uint64_t v14 = 0x203A656C746954;
    unint64_t v13 = 0xE700000000000000;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v14 = 0;
  unint64_t v13 = 0;
LABEL_11:
  sub_100031648((uint64_t *)&unk_10062D9D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1004E5790;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v13;
  if (!v9)
  {
    id v16 = _swiftEmptyArrayStorage;
    if (!v13) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  id v16 = sub_1002369E4(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    id v16 = sub_1002369E4((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  void v16[2] = v18 + 1;
  double v19 = &v16[2 * v18];
  v19[4] = v8;
  v19[5] = v9;
  if (v13)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v16 = sub_1002369E4(0, v16[2] + 1, 1, v16);
    }
    unint64_t v21 = v16[2];
    unint64_t v20 = v16[3];
    if (v21 >= v20 >> 1) {
      id v16 = sub_1002369E4((void *)(v20 > 1), v21 + 1, 1, v16);
    }
    void v16[2] = v21 + 1;
    CGFloat v22 = &v16[2 * v21];
    v22[4] = v14;
    v22[5] = v13;
  }
LABEL_22:
  swift_release();
  if (!v16[2])
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  double v28 = v16;
  sub_100031648(&qword_10062DF70);
  sub_10006102C((unint64_t *)&qword_100630D90, &qword_10062DF70);
  sub_1004CDA50();
  swift_bridgeObjectRelease();
  double v23 = self;
  NSString v24 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v23, "browsingRootIdentifierForSourceIdentifier:", v24, v28);

  uint64_t v26 = sub_1004CDB50();
  swift_bridgeObjectRelease();
  return v26;
}

void *DOCBrowserContainerController.contentViewController.getter()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DOCBrowserContainerController.contentViewController.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*DOCBrowserContainerController.contentViewController.modify())()
{
  return j__swift_endAccess;
}

unint64_t sub_10037A610(char a1)
{
  uint64_t v2 = v1;
  uint64_t v16 = OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_allowsPickingMultipleItems;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_allowsPickingMultipleItems) = a1;
  unint64_t result = (unint64_t)sub_10037B054();
  unint64_t v4 = result;
  if (result >> 62)
  {
    unint64_t result = sub_1004CF6D0();
    uint64_t v5 = result;
    if (result)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            uint64_t v7 = (unsigned __int8 *)sub_1004CF500();
          }
          else {
            uint64_t v7 = (unsigned __int8 *)*(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          v7[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_allowsPickingMultipleItems] = *(unsigned char *)(v2 + v16);
          uint64_t v9 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
          int v10 = v7[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
          if (v10 != 2)
          {
            sub_1003867F4();
            char v11 = sub_1004CC060();
            swift_release();
            if (v11 & 1) == 0 && (objc_msgSend(v8, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              id v12 = v8;
              sub_100031648(&qword_10062F480);
              if (swift_dynamicCast())
              {
                uint64_t v13 = v10 & 1;
                uint64_t v14 = *((void *)&v18 + 1);
                uint64_t v15 = v19;
                sub_100032FD8(&v17, *((uint64_t *)&v18 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(v13, v14, v15);
                sub_100039184((uint64_t)&v17);
              }
              else
              {
                uint64_t v19 = 0;
                long long v17 = 0u;
                long long v18 = 0u;
                sub_10011EE40((uint64_t)&v17);
              }
              *((unsigned char *)v8 + v9) = 2;
            }
          }
        }
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_10037A824(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = v2;
    if (Strong)
    {
      type metadata accessor for DOCBrowserContainedViewController();
      id v4 = Strong;
      id v5 = v3;
      char v6 = sub_1004CEF10();

      if (v6) {
        goto LABEL_9;
      }
    }
    else
    {
    }
LABEL_8:
    sub_10037AAE8();
    id v4 = Strong;
LABEL_9:

    goto LABEL_10;
  }
  if (Strong) {
    goto LABEL_8;
  }
LABEL_10:
}

void sub_10037A904(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = v2;
    if (Strong)
    {
      type metadata accessor for DOCBrowserContainedViewController();
      id v4 = Strong;
      id v5 = v3;
      char v6 = sub_1004CEF10();

      if (v6) {
        goto LABEL_9;
      }
    }
    else
    {
    }
LABEL_8:
    sub_10037A9E8();
    sub_10037AAE8();
    id v4 = Strong;
LABEL_9:

    goto LABEL_10;
  }
  if (Strong) {
    goto LABEL_8;
  }
LABEL_10:
}

void sub_10037A9E8()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  if (*v1)
  {
    id v2 = [*v1 viewIfLoaded];
    if (v2)
    {
      id v3 = v2;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      id v5 = *v1;
      char v6 = *v1 == 0;
      if (Strong)
      {
        uint64_t v7 = (void *)Strong;
        if (v5)
        {
          type metadata accessor for DOCBrowserContainedViewController();
          id v8 = v5;
          id v9 = v7;
          char v6 = sub_1004CEF10();

          uint64_t v7 = v8;
        }
        else
        {
          char v6 = 0;
        }
      }
      [v3 setHidden:(v6 & 1) == 0];
    }
  }
}

void sub_10037AAE8()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v2 = Strong;
  if (Strong) {
    goto LABEL_4;
  }
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    id v2 = v3;
LABEL_4:
    id v4 = Strong;
    id v5 = [v2 contentScrollViewForEdge:1];

    goto LABEL_5;
  }
  id v5 = 0;
  id v2 = 0;
LABEL_5:
  [v0 setContentScrollView:v5 forEdge:1];

  if (v2) {
    id v6 = [v2 contentScrollViewForEdge:4];
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;
  objc_msgSend(v0, "setContentScrollView:forEdge:");
}

unint64_t sub_10037ABF8()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state);
  unint64_t result = 0x746E65746E6F63;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x676E6964616F6CLL;
  switch(v2)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_6;
    case 5uLL:
      return result;
    default:
      sub_100243500(v2);
      swift_errorRetain();
      id v6 = (void *)sub_1004CAA50();
      id v7 = [v6 domain];
      uint64_t v8 = sub_1004CDB50();
      unint64_t v10 = v9;

      [v6 code];
      uint64_t v11 = sub_1004CF840();
      uint64_t v13 = v12;
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = v11;
      v16._object = v13;
      sub_1004CDCD0(v16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100381894(v2);
      uint64_t v5 = v8;
      unint64_t v4 = v10;
LABEL_3:
      if (v5 == 0x676E6964616F6CLL && v4 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_6:
        char v14 = sub_1004CF890();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          uint64_t v15 = *(void (**)(unint64_t))(v1
                                                        + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_stateReporting);
          if (v15)
          {
            swift_retain();
            v15(v2);
            sub_1000388F0((uint64_t)v15);
          }
        }
      }
      return sub_100381894(v2);
  }
}

void *DOCBrowserContainerController.preferredFocusEnvironments.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (*v1)
  {
    sub_100031648(&qword_100628240);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1004E5710;
    *(void *)(v3 + 32) = v2;
    id v7 = (void *)v3;
    sub_1004CDE50();
    unint64_t v4 = v7;
  }
  else
  {
    unint64_t v4 = _swiftEmptyArrayStorage;
  }
  id v5 = v2;
  return v4;
}

void *sub_10037B054()
{
  id v1 = [v0 childViewControllers];
  sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
  unint64_t v2 = sub_1004CDE30();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  unint64_t result = (void *)sub_1004CF6D0();
  uint64_t v3 = (uint64_t)result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_1004CF500();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      id v7 = v6;
      type metadata accessor for DOCBrowserContainedViewController();
      if (swift_dynamicCastClass())
      {
        sub_1004CDE00();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1004CDE60();
        }
        sub_1004CDF40();
        sub_1004CDE50();
      }
      else
      {
      }
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

Class sub_10037B238()
{
  sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
  swift_bridgeObjectRetain();
  v0.super.Class isa = sub_1004CDE10().super.isa;
  swift_bridgeObjectRelease();
  return v0.super.isa;
}

void sub_10037B2BC(char *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
  *(void *)&a1[*a4] = sub_1004CDE30();
  uint64_t v8 = a1;
  swift_bridgeObjectRelease();
  sub_10037B35C(a4, a5);
}

uint64_t sub_10037B35C(uint64_t *a1, void *a2)
{
  unint64_t v3 = (unint64_t)sub_10037B054();
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = *a1;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        unint64_t v9 = (char *)sub_1004CF500();
      }
      else {
        unint64_t v9 = (char *)*(id *)(v4 + 8 * v7 + 32);
      }
      unint64_t v10 = v9;
      *(void *)&v9[*a2] = *(void *)(v20 + v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v10[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      id v12 = [v10 viewIfLoaded];
      id v13 = [v12 window];

      if (v13)
      {
        int v14 = v10[v11];
        if (v14 != 2)
        {
          sub_1003867F4();
          char v15 = sub_1004CC060();
          swift_release();
          if ((v15 & 1) == 0)
          {
            if (objc_msgSend(v10, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              Swift::String v16 = v10;
              sub_100031648(&qword_10062F480);
              if (swift_dynamicCast())
              {
                uint64_t v17 = v14 & 1;
                uint64_t v19 = *((void *)&v23 + 1);
                uint64_t v18 = v24;
                sub_100032FD8(&v22, *((uint64_t *)&v23 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(v17, v19, v18);
                sub_100039184((uint64_t)&v22);
              }
              else
              {
                uint64_t v24 = 0;
                long long v22 = 0u;
                long long v23 = 0u;
                sub_10011EE40((uint64_t)&v22);
              }
              v10[v11] = 2;
            }
          }
        }
      }

      ++v7;
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

char *sub_10037B59C(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v3 = sub_1004CE620();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CE5F0();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1004CD8C0();
  __chkstk_darwin(v7 - 8);
  *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController] = 0;
  v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_allowsPickingMultipleItems] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state] = 5;
  uint64_t v26 = OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_queue;
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  uint64_t v8 = v2;
  v25[1] = sub_1004CE630();
  sub_1004CD880();
  unint64_t v31 = _swiftEmptyArrayStorage;
  sub_100381D38((unint64_t *)&qword_10062CDB0, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100031648((uint64_t *)&unk_100626B80);
  sub_10006102C((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
  sub_1004CF330();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  uint64_t v9 = v29;
  *(void *)&v2[v26] = sub_1004CE670();
  unint64_t v10 = &v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_stateReporting];
  *unint64_t v10 = 0;
  v10[1] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_overlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_preventAppearanceForwarding] = 0;
  *(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
  *(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem] = 0;
  uint64_t v11 = &v8[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource];
  uint64_t v12 = v30;
  *uint64_t v11 = v9;
  v11[1] = v12;
  swift_unknownObjectRetain();

  id v13 = (objc_class *)type metadata accessor for DOCBrowserContainerController();
  v32.receiver = v8;
  v32.super_class = v13;
  uint64_t v14 = v12;
  id v15 = objc_msgSendSuper2(&v32, "init");
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8);
  uint64_t v18 = (char *)v15;
  uint64_t v19 = v17(1, ObjectType, v14);
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    unint64_t v21 = (void **)&v18[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    long long v22 = *v21;
    *unint64_t v21 = v20;
    long long v23 = v20;

    swift_unknownObjectWeakAssign();
    sub_10037D46C(v23, 0);
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(ObjectType, v14))
  {
    sub_10037BFA0();
    if (*(void *)&v18[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state] == 5) {
      sub_10037C110(0, 0, 0);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(1, ObjectType, v14);
  }
  sub_10037E128();

  swift_unknownObjectRelease();
  return v18;
}

uint64_t DOCBrowserContainerController.description.getter()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  id v1 = objc_msgSendSuper2(&v11, "description");
  uint64_t v2 = sub_1004CDB50();
  uint64_t v4 = v3;

  uint64_t v12 = v2;
  uint64_t v13 = v4;
  id v5 = [v0 navigationItem];
  id v6 = [v5 title];

  if (v6)
  {
    uint64_t v7 = sub_1004CDB50();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = (void *)0xEA00000000002964;
    uint64_t v7 = 0x656C7469746E7528;
  }
  v14._countAndFlagsBits = v7;
  v14._object = v9;
  sub_1004CDCD0(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 34;
  v15._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v15);
  v16._countAndFlagsBits = 8736;
  v16._object = (void *)0xE200000000000000;
  sub_1004CDCD0(v16);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t type metadata accessor for DOCBrowserContainerController()
{
  return self;
}

id sub_10037BD1C()
{
  return sub_10037F104(type metadata accessor for DOCBrowserContainerController.DOCBrowserContainerControllerView);
}

Swift::Void __swiftcall DOCBrowserContainerController.loadView()()
{
  type metadata accessor for DOCBrowserContainerController.DOCBrowserContainerControllerView();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v0 setView:v1];
}

uint64_t type metadata accessor for DOCBrowserContainerController.DOCBrowserContainerControllerView()
{
  return self;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewDidLoad()()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v3, "viewDidLoad");
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8];
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1) & 1) == 0)
  {
    sub_10037BFA0();
    if (*(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state] == 5) {
      sub_10037C110(0, 0, 0);
    }
  }
}

void sub_10037BFA0()
{
  uint64_t v1 = (id *)&v0[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  if (*v1)
  {
    uint64_t v2 = *v1;
    sub_10037D46C(v2, 1);
  }
  id v3 = [v0 childViewControllers];
  sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
  unint64_t v4 = sub_1004CDE30();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_5:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_1004CF500();
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      type metadata accessor for DOCBrowserContainedViewController();
      uint64_t v9 = (void *)swift_dynamicCastClass();
      if (v9) {
        sub_10037D46C(v9, 1);
      }
    }
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_10037C110(unint64_t a1, void *a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = sub_1004CD860();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  objc_super v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1004CD8C0();
  uint64_t v12 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  Swift::String v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_queue];
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v4;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a3;
  *(void *)(v16 + 48) = a1;
  aBlock[4] = sub_100381D24;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D0DC0;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a2;
  swift_retain();
  uint64_t v19 = v4;
  sub_100243500(a1);
  sub_1004CD880();
  long long v23 = _swiftEmptyArrayStorage;
  sub_100381D38((unint64_t *)&qword_100628440, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10006102C((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
  return swift_release();
}

void sub_10037C434(uint64_t a1, char *a2, void *a3, char a4, unint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    sub_10037C4B4(a5, a2, a3, a4 & 1);
  }
}

void sub_10037C4B4(unint64_t a1, char *a2, void *a3, char a4)
{
  uint64_t v8 = OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state;
  unint64_t v9 = *(void *)&a2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state];
  if (v9 != 5)
  {
    sub_100243500(a1);
    sub_100381C68(v9);
    char v10 = sub_100381240(v9, a1);
    sub_100212650(a1);
    sub_100381894(v9);
    if (v10) {
      return;
    }
    unint64_t v11 = *(void *)&a2[v8];
    if (v11 != 5)
    {
      sub_100381C68(*(void *)&a2[v8]);
      char v12 = sub_100381E34(v11, a1);
      sub_100381894(v11);
      if ((v12 & 1) == 0) {
        return;
      }
    }
  }
  double v56 = a3;
  if (!a3)
  {
    uint64_t v13 = *(void *)&a2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    double v56 = (void *)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 8))(a1, ObjectType, v13);
    if (!v56) {
      return;
    }
  }
  uint64_t v15 = *(NSObject **)&a2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_queue];
  double v53 = a3;
  id v16 = a3;
  dispatch_suspend(v15);
  uint64_t v17 = (void *)sub_1004CC620();
  sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1004E12A0;
  uint64_t aBlock = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_1004CF4D0(16);
  unint64_t v64 = a1;
  sub_1004CF600();
  v65._countAndFlagsBits = 0x747320646C6F202CLL;
  v65._object = (void *)0xEC00000020657461;
  sub_1004CDCD0(v65);
  unint64_t v64 = *(void *)&a2[v8];
  sub_100381C68(v64);
  sub_100031648(&qword_100636F50);
  v66._countAndFlagsBits = sub_1004CDBA0();
  sub_1004CDCD0(v66);
  swift_bridgeObjectRelease();
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = sub_1000334C4();
  *(void *)(v18 + 32) = 0;
  *(void *)(v18 + 40) = 0xE000000000000000;
  sub_1004CC640();

  swift_bridgeObjectRelease();
  unint64_t v19 = *(void *)&a2[v8];
  *(void *)&a2[v8] = a1;
  sub_100243500(a1);
  sub_100381894(v19);
  id v20 = [a2 childViewControllers];
  sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
  unint64_t v21 = sub_1004CDE30();

  unint64_t v55 = a1;
  char v54 = a4;
  if (v21 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22)
    {
LABEL_9:
      double v57 = (id *)&a2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v23 = 4;
      do
      {
        if ((v21 & 0xC000000000000001) != 0) {
          id v25 = (id)sub_1004CF500();
        }
        else {
          id v25 = *(id *)(v21 + 8 * v23);
        }
        uint64_t v26 = v25;
        uint64_t v27 = v23 - 3;
        if (__OFADD__(v23 - 4, 1))
        {
          __break(1u);
          goto LABEL_39;
        }
        if (*v57 && (id v28 = *v57, v29 = sub_1004CEF10(), v28, (v29 & 1) != 0))
        {
          id v30 = [v26 view];
          if (!v30)
          {
            __break(1u);
LABEL_53:
            __break(1u);
            return;
          }
          uint64_t v24 = v30;
          [v30 setHidden:1];
          id v31 = v26;
        }
        else
        {
          id v31 = [v26 presentedViewController];
          if (v31
            && ((uint64_t aBlock = swift_getObjectType(),
                 sub_100031648(&qword_100636F58),
                 uint64_t v32 = sub_1004CDBA0(),
                 uint64_t v34 = v33,
                 type metadata accessor for DOCDocumentPickerViewController(),
                 swift_dynamicCastClass())
             || (self, swift_dynamicCastObjCClass())
             || v32 == 0xD000000000000027 && v34 == 0x8000000100533C70))
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v35 = sub_1004CF890();
            swift_bridgeObjectRelease();
            if (v31 && (v35 & 1) == 0) {
              [v31 dismissViewControllerAnimated:0 completion:0];
            }
          }
          if ([a2 _appearState] == 1
            || [a2 _appearState] == 2)
          {
            [v26 beginAppearanceTransition:0 animated:0];
          }
          sub_10037D0D0(v26);
          if ([a2 _appearState] == 1
            || [a2 _appearState] == 2
            || [a2 _appearState] == 3)
          {
            [v26 endAppearanceTransition];
          }
          uint64_t v24 = v26;
        }

        ++v23;
      }
      while (v27 != v22);
    }
  }
  swift_bridgeObjectRelease();
  id v36 = [a2 presentedViewController];
  if (v36)
  {
    CGFloat v37 = v36;
    type metadata accessor for DOCGetInfoErrorPresentingViewController();
    uint64_t v38 = (void *)swift_dynamicCastClass();
    if (v38) {
      [v38 dismissViewControllerAnimated:0 completion:0];
    }
  }
  id v39 = v56;
  sub_10037A824(v56);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a2;
  *(void *)(v40 + 24) = v39;
  double v41 = (void *)swift_allocObject();
  v41[2] = a2;
  v41[3] = v55;
  void v41[4] = v39;
  id v42 = v39;
  double v43 = a2;
  sub_100243500(v55);
  double v44 = v42;
  os_log_type_t v45 = v43;
  sub_10037D46C(v44, (char)[v45 isViewLoaded]);
  if (!v53)
  {
    uint64_t v46 = *(void *)&v45[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8];
    uint64_t v47 = swift_getObjectType();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 16))(v55, v47, v46);
  }
  sub_10037CD78();
  if (v54)
  {
    double v48 = [v45 view];
    if (!v48) {
      goto LABEL_53;
    }
    CGRect v49 = v48;
    CGRect v50 = self;
    id v62 = sub_100381DC0;
    uint64_t v63 = (void *)v40;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v59 = 1107296256;
    uint64_t v60 = sub_1003A422C;
    uint64_t v61 = &unk_1005D0E38;
    CGRect v51 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v62 = sub_100381E18;
    uint64_t v63 = v41;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v59 = 1107296256;
    uint64_t v60 = sub_100259048;
    uint64_t v61 = &unk_1005D0E60;
    CGRect v52 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v50 transitionWithView:v49 duration:5242880 options:v51 animations:v52 completion:0.2];
    swift_release();
    swift_release();

    _Block_release(v52);
    _Block_release(v51);
  }
  else
  {
    CGRect v49 = v44;
    sub_10037A904(v56);
    sub_10037A824(0);
    sub_1003823E8(v45, v55, (uint64_t)v49);
    swift_release();
    swift_release();
  }
}

void sub_10037CD40(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_10037A904(a2);
  sub_10037A824(0);
}

void sub_10037CD78()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    id v9 = v1;
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    sub_10037A09C(ObjectType, v2);
    if (v4)
    {
      id v5 = [v9 view];
      if (!v5)
      {
        __break(1u);
        return;
      }
      id v6 = v5;
      NSString v7 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      [v6 setAccessibilityIdentifier:v7];

      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v8 = v9;
    }
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  BOOL v5 = _;
  BOOL v6 = animated;
  objc_msgSendSuper2(&v8, "setEditing:animated:", v5, v6);
  NSString v7 = (id *)&v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  if (*v7) {
    [*v7 setEditing:v5 animated:v6];
  }
}

uint64_t sub_10037CFB4()
{
  id v1 = [self keyWindow];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 rootViewController];

  if (!v3) {
    return 0;
  }
  id v4 = [v0 parentViewController];
  if (v4)
  {
    id v5 = v4;
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    while (1)
    {
      id v6 = v5;
      id v7 = v3;
      char v8 = sub_1004CEF10();

      if (v8) {
        break;
      }
      id v5 = [v6 parentViewController];

      if (!v5) {
        goto LABEL_7;
      }
    }

    uint64_t v9 = 1;
  }
  else
  {
LABEL_7:
    uint64_t v9 = 0;
  }

  return v9;
}

void sub_10037D0D0(void *a1)
{
  uint64_t v2 = v1;
  objc_msgSend(a1, "doc_removeFromParentWithRemoveSubviewBlock:", 0);
  type metadata accessor for DOCBrowserContainedViewController();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    id v5 = (void *)v4;
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 32);
    id v9 = a1;
    char v10 = (void *)v8(ObjectType, v6);

    if (v10) {
      [v5 setAppearance:0];
    }
    (*(void (**)(void))((swift_isaMask & *v5) + 0x110))(0);
    (*(void (**)(void, void))((swift_isaMask & *v5) + 0xE0))(0, 0);
    *(void *)((char *)v5 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_viewReusing + 8) = 0;
    swift_unknownObjectWeakAssign();
    unint64_t v11 = *(void **)((char *)v5
                   + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem);
    *(void *)((char *)v5 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem) = 0;

    uint64_t v12 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
    *((unsigned char *)v5 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
    id v13 = [v5 viewIfLoaded];
    id v14 = [v13 window];

    if (v14) {
      sub_1003871C0();
    }
    *(void *)((char *)v5 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_overlayDelegate + 8) = 0;
    swift_unknownObjectWeakAssign();
    *(void *)((char *)v5
              + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *((unsigned char *)v5 + v12) = 0;
    id v15 = [v5 viewIfLoaded];
    id v16 = [v15 window];

    if (v16) {
      sub_1003871C0();
    }
    *(void *)((char *)v5
              + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *((unsigned char *)v5 + v12) = 0;
    id v17 = [v5 viewIfLoaded];
    id v18 = [v17 window];

    if (v18) {
      sub_1003871C0();
    }
  }
  unint64_t v19 = (void **)(v2 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  id v20 = *v19;
  if (*v19)
  {
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    id v21 = a1;
    id v22 = v20;
    char v23 = sub_1004CEF10();

    if (v23)
    {
      uint64_t v24 = *v19;
      *unint64_t v19 = 0;
    }
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = (void *)Strong;
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    id v27 = a1;
    char v28 = sub_1004CEF10();

    if (v28) {
      sub_10037A904(0);
    }
  }
}

void sub_10037D46C(void *a1, char a2)
{
  id v3 = v2;
  id v6 = [v2 childViewControllers];
  sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
  unint64_t v7 = sub_1004CDE30();

  char v8 = sub_100109EA8((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  if ([a1 wantsAppearanceOverride] && (v8 & 1) == 0)
  {
    if (sub_10037CFB4()) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    if (v12)
    {
      id v13 = (void *)v12;
      [a1 setAppearance:v12];
    }
    goto LABEL_9;
  }
  unsigned int v9 = [a1 wantsAppearanceOverride];
  if (v8) {
    goto LABEL_21;
  }
  if (v9) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x110))(Strong);
  id v15 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *a1) + 0xE0);
  uint64_t v16 = swift_unknownObjectRetain();
  v15(v16, &off_1005D08F8);
  *(void *)((char *)a1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_viewReusing + 8) = &off_1005D0908;
  swift_unknownObjectWeakAssign();
  id v17 = *(void **)&v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem];
  if (v17) {
    id v18 = *(id *)&v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem];
  }
  else {
    id v18 = [v3 navigationItem];
  }
  unint64_t v19 = *(void **)((char *)a1
                 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem);
  *(void *)((char *)a1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem) = v18;
  id v20 = v18;
  id v21 = v17;

  uint64_t v22 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  *((unsigned char *)a1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  id v23 = [a1 viewIfLoaded];
  id v24 = [v23 window];

  if (v24) {
    sub_1003871C0();
  }

  id v25 = &v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_overlayDelegate];
  swift_unknownObjectWeakLoadStrong();
  *(void *)((char *)a1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_overlayDelegate + 8) = *((void *)v25 + 1);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(void *)((char *)a1
            + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems) = *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v22) = 0;
  id v26 = [a1 viewIfLoaded];
  id v27 = [v26 window];

  if (v27) {
    sub_1003871C0();
  }
  *(void *)((char *)a1
            + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems) = *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v22) = 0;
  id v28 = [a1 viewIfLoaded];
  id v29 = [v28 window];

  if (v29) {
    sub_1003871C0();
  }
  sub_1003866D0(v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_allowsPickingMultipleItems]);
  if ([v3 _appearState] == 1 || objc_msgSend(v3, "_appearState") == 2) {
    [a1 beginAppearanceTransition:1 animated:0];
  }
LABEL_21:
  [v3 addChildViewController:a1];
  if (a2)
  {
    id v30 = [a1 view];
    if (!v30)
    {
      __break(1u);
      goto LABEL_45;
    }
    id v31 = v30;
    id v32 = [v30 superview];

    id v33 = [v3 view];
    id v34 = v33;
    if (v32)
    {

      if (v34)
      {

        if (v32 == v34) {
          goto LABEL_35;
        }
      }
LABEL_29:
      id v35 = [a1 view];
      if (v35)
      {
        id v36 = v35;
        id v37 = [v3 view];
        if (v37)
        {
          uint64_t v38 = v37;
          [v37 bounds];
          double v40 = v39;
          double v42 = v41;
          double v44 = v43;
          double v46 = v45;

          objc_msgSend(v36, "setFrame:", v40, v42, v44, v46);
          id v47 = [a1 view];
          if (v47)
          {
            double v48 = v47;
            [v47 setAutoresizingMask:18];

            id v49 = [v3 view];
            if (v49)
            {
              CGRect v50 = v49;
              id v51 = [a1 view];
              if (v51)
              {
                CGRect v52 = v51;
                [v50 addSubview:v51];

                goto LABEL_35;
              }
LABEL_49:
              __break(1u);
              return;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v33)
    {

      goto LABEL_29;
    }
  }
LABEL_35:
  id v53 = [a1 viewIfLoaded];
  if (v53)
  {
    char v54 = v53;
    [v53 setHidden:0];
  }
  if ((v8 & 1) == 0)
  {
    [a1 didMoveToParentViewController:v3];
    if ([v3 _appearState] == 1 || objc_msgSend(v3, "_appearState") == 2)
    {
      [a1 endAppearanceTransition];
    }
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  id v3 = v2;
  Swift::Bool is_nil = to.is_nil;
  Class isa = to.value.super.super.super.isa;
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v17, "viewDidMoveToWindow:shouldAppearOrDisappear:", isa, is_nil);
  if (isa)
  {
    uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    char v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);

    if (v8)
    {
      id v9 = [v3 childViewControllers];
      sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
      unint64_t v10 = sub_1004CDE30();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1004CF6D0();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
LABEL_5:
          if (v11 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v13 = (id)sub_1004CF500();
            }
            else {
              id v13 = *(id *)(v10 + 8 * i + 32);
            }
            id v14 = v13;
            type metadata accessor for DOCBrowserContainedViewController();
            id v15 = (void *)swift_dynamicCastClass();
            if (v15)
            {
              uint64_t v16 = v15;
              if ([v15 wantsAppearanceOverride]) {
                [v16 setAppearance:0];
              }
            }
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.willMove(toParent:)(UIViewController_optional toParent)
{
  uint64_t v2 = v1;
  Class isa = toParent.value.super.super.isa;
  uint64_t v4 = sub_1004CCA00();
  __chkstk_darwin(v4 - 8);
  id v5 = (objc_class *)type metadata accessor for DOCBrowserContainerController();
  v6.receiver = v2;
  v6.super_class = v5;
  objc_msgSendSuper2(&v6, "willMoveToParentViewController:", isa);
  sub_1004CCE80();
  sub_1004CE560();
  sub_1004CC9F0();
  sub_1004CE570();
}

Swift::Void __swiftcall DOCBrowserContainerController.didMove(toParent:)(UIViewController_optional toParent)
{
  uint64_t v2 = v1;
  Class isa = toParent.value.super.super.isa;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v12, "didMoveToParentViewController:", isa);
  id v4 = [v2 parentViewController];
  if (v4)
  {
    id v5 = v4;
    type metadata accessor for DOCColumnViewController(0);
    uint64_t v6 = swift_dynamicCastClass();

    if (v6)
    {
      unint64_t v7 = (void **)&v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      char v8 = *v7;
      if (*v7)
      {
        v8[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v9 = v8;
        id v10 = [v9 viewIfLoaded];
        id v11 = [v10 window];

        if (v11) {
          sub_1003871C0();
        }
      }
    }
  }
  sub_10037CD78();
}

Swift::Void __swiftcall DOCBrowserContainerController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v3, "traitCollectionDidChange:", isa);
  sub_10037E128();
}

void sub_10037E128()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem];
  if (v1)
  {
    id v2 = *(id *)&v0[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem];
  }
  else
  {
    id v2 = [v0 navigationItem];
    uint64_t v1 = 0;
  }
  id v3 = v1;
  id v4 = [v0 parentViewController];
  if (v4)
  {
    id v5 = v4;
    type metadata accessor for DOCColumnViewController(0);
    uint64_t v6 = (char *)swift_dynamicCastClass();
    if (v6) {
      goto LABEL_8;
    }
  }
  uint64_t v6 = v0;
LABEL_8:
  id v8 = [v6 traitCollection];

  if (DOCUsePadIdiomForTraits()) {
    BOOL v7 = [v8 horizontalSizeClass] == (id)2;
  }
  else {
    BOOL v7 = 0;
  }
  [v2 setStyle:v7];
}

uint64_t sub_10037E254()
{
  id v1 = [v0 childViewControllers];
  sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
  unint64_t v2 = sub_1004CDE30();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_1004CF500();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      BOOL v7 = v6;
      ++v5;
      id v8 = v6;
      sub_10037E384(&v8, v0);
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_10037E384(id *a1, void *a2)
{
  id v3 = *a1;
  unsigned int v4 = [*a1 _appearState];
  id result = [a2 _appearState];
  if (v4 != result)
  {
    unsigned int v6 = [v3 _appearState];
    id result = [a2 _appearState];
    switch(v6)
    {
      case 0u:
        if (result == 2)
        {
          [v3 beginAppearanceTransition:1 animated:0];
          return [v3 endAppearanceTransition];
        }
        if (result == 1) {
          goto LABEL_13;
        }
        return result;
      case 1u:
        switch(result)
        {
          case 0:
            [v3 endAppearanceTransition];
            [v3 beginAppearanceTransition:0 animated:0];
            return [v3 endAppearanceTransition];
          case 3:
            [v3 endAppearanceTransition];
            return [v3 beginAppearanceTransition:0 animated:0];
          case 2:
            return [v3 endAppearanceTransition];
        }
        return result;
      case 2u:
        if (result == 3) {
          return [v3 beginAppearanceTransition:0 animated:0];
        }
        if (!result)
        {
          [v3 beginAppearanceTransition:0 animated:0];
          return [v3 endAppearanceTransition];
        }
        return result;
      case 3u:
        switch(result)
        {
          case 0:
            return [v3 endAppearanceTransition];
          case 2:
            [v3 endAppearanceTransition];
            [v3 beginAppearanceTransition:1 animated:0];
            return [v3 endAppearanceTransition];
          case 1:
            [v3 endAppearanceTransition];
LABEL_13:
            id result = [v3 beginAppearanceTransition:1 animated:0];
            break;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewWillAppear(_:)(Swift::Bool a1)
{
  unint64_t v2 = v1;
  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v18, "viewWillAppear:", a1);
  if ((v1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    id v4 = [v1 childViewControllers];
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    unint64_t v5 = sub_1004CDE30();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1004CF6D0();
      if (!v6) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_11;
      }
    }
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v7 = 0;
    BOOL v8 = a1;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_1004CF500();
      }
      else {
        id v9 = *(id *)(v5 + 8 * v7 + 32);
      }
      id v10 = v9;
      ++v7;
      [v9 beginAppearanceTransition:1 animated:v8];
      objc_msgSend(v10, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
    }
    while (v6 != v7);
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_10037A9E8();
    uint64_t v11 = OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_isUserInteractionEnabled;
    v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
    unint64_t v12 = (unint64_t)sub_10037B054();
    unint64_t v13 = v12;
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1004CF6D0();
      if (v14)
      {
LABEL_13:
        if (v14 >= 1)
        {
          for (uint64_t i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0) {
              uint64_t v16 = (void *)sub_1004CF500();
            }
            else {
              uint64_t v16 = *(id *)(v13 + 8 * i + 32);
            }
            objc_super v17 = v16;
            (*(void (**)(void))((swift_isaMask & *v16) + 0x208))(v2[v11]);
          }
          goto LABEL_20;
        }
LABEL_23:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_13;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.viewIsAppearing(_:)(Swift::Bool a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v11, "viewIsAppearing:", a1);
  if ((v1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado17DOCViewController_appearStateTracker];
    id v4 = v1;
    swift_retain();
    sub_1000F37C4(v4, v3, (unsigned __int8 *)v4);
    swift_release();

    id v5 = [v4 childViewControllers];
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    unint64_t v6 = sub_1004CDE30();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1004CF6D0();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v8 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v9 = (id)sub_1004CF500();
          }
          else {
            id v9 = *(id *)(v6 + 8 * v8 + 32);
          }
          id v10 = v9;
          ++v8;
          [v9 endAppearanceTransition];
          objc_msgSend(v10, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
        }
        while (v7 != v8);
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

id sub_10037E9DC(unsigned __int8 *a1)
{
  id result = objc_msgSend(a1, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
  if ((a1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    id v3 = [a1 childViewControllers];
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    unint64_t v4 = sub_1004CDE30();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)sub_1004CF6D0();
      uint64_t v5 = (uint64_t)result;
      if (!result) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_11;
      }
    }
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_1004CF500();
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      [v7 beginAppearanceTransition:1 animated:0];
      objc_msgSend(v8, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
    }
    while (v5 != v6);
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_10037A9E8();
    uint64_t v9 = OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_isUserInteractionEnabled;
    a1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
    unint64_t v10 = (unint64_t)sub_10037B054();
    unint64_t v11 = v10;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)sub_1004CF6D0();
      uint64_t v12 = (uint64_t)result;
      if (result)
      {
LABEL_13:
        if (v12 >= 1)
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if ((v11 & 0xC000000000000001) != 0) {
              uint64_t v14 = (void *)sub_1004CF500();
            }
            else {
              uint64_t v14 = *(id *)(v11 + 8 * i + 32);
            }
            id v15 = v14;
            (*(void (**)(void))((swift_isaMask & *v14) + 0x208))(a1[v9]);
          }
          return (id)swift_bridgeObjectRelease_n();
        }
LABEL_23:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_13;
      }
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewWillDisappear(_:)(Swift::Bool a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v10, "viewWillDisappear:", a1);
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_preventAppearanceForwarding) & 1) == 0)
  {
    id v3 = [v1 childViewControllers];
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    unint64_t v4 = sub_1004CDE30();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1004CF6D0();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v6 = 0;
        BOOL v7 = a1;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v8 = (id)sub_1004CF500();
          }
          else {
            id v8 = *(id *)(v4 + 8 * v6 + 32);
          }
          uint64_t v9 = v8;
          ++v6;
          [v8 beginAppearanceTransition:0 animated:v7];
        }
        while (v5 != v6);
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v9, "viewDidDisappear:", a1);
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_preventAppearanceForwarding) & 1) == 0)
  {
    id v3 = [v1 childViewControllers];
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    unint64_t v4 = sub_1004CDE30();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1004CF6D0();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)sub_1004CF500();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          id v8 = v7;
          [v7 endAppearanceTransition];
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

void sub_10037F008()
{
  swift_unknownObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  sub_100381894(*(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_state));

  sub_1000388F0(*(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_stateReporting));
  sub_1000391D4(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_actionReporting);
  sub_1000391D4(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_overlayDelegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem);
}

id DOCBrowserContainerController.__deallocating_deinit()
{
  return sub_10037F104(type metadata accessor for DOCBrowserContainerController);
}

id sub_10037F104(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void DOCBrowserContainerController.effectiveAppearanceDidChange(_:)(void *a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  objc_msgSendSuper2(&v6, "effectiveAppearanceDidChange:", a1);
  id v3 = [v1 viewIfLoaded];
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = [a1 backgroundColor];
    [v4 setBackgroundColor:v5];
  }
}

void sub_10037F394(uint64_t a1, uint64_t a2, char a3, int a4)
{
  id v5 = v4;
  uint64_t v10 = sub_1004CD950();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (uint64_t *)((char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  uint64_t *v13 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = sub_1004CD980();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x10037FA00);
  }
  int v60 = a4;
  id v15 = (void *)sub_1004CC620();
  sub_1004CE350();
  uint64_t v59 = sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1004E59C0;
  uint64_t v58 = type metadata accessor for DOCBrowserContainerController();
  *(void *)(v16 + 56) = v58;
  uint64_t v57 = sub_100381D38(&qword_100636F38, v17, (void (*)(uint64_t))type metadata accessor for DOCBrowserContainerController);
  *(void *)(v16 + 64) = v57;
  *(void *)(v16 + 32) = v5;
  uint64_t v61 = v5;
  unint64_t v18 = sub_1003799AC(a2, a3);
  uint64_t v20 = v19;
  *(void *)(v16 + 96) = &type metadata for String;
  unint64_t v21 = sub_1000334C4();
  *(void *)(v16 + 104) = v21;
  *(void *)(v16 + 72) = v18;
  *(void *)(v16 + 80) = v20;
  sub_10005AF14(a1, (uint64_t)v64);
  sub_100031648((uint64_t *)&unk_100636F40);
  swift_dynamicCast();
  sub_1004CC640();

  swift_bridgeObjectRelease();
  switch(a3)
  {
    case 1:
      unint64_t v56 = v21;
      id v24 = v61;
      if (a2)
      {
        id v25 = (id *)&v61[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        id v23 = *v25;
        id v26 = *v25;
        unint64_t v22 = 1;
      }
      else
      {
        id v23 = 0;
        unint64_t v22 = 3;
      }
      goto LABEL_15;
    case 2:
      id v27 = v61;
      id v28 = [v61 parentViewController];
      if (!v28) {
        goto LABEL_26;
      }
      id v29 = v28;
      type metadata accessor for DOCColumnViewController(0);
      uint64_t v30 = swift_dynamicCastClass();
      if (v30)
      {
        id v31 = (void *)v30;
        sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
        id v32 = v29;
        Class isa = sub_1004CDE10().super.isa;
        [v31 setToolbarItems:isa];
      }
      else
      {

LABEL_26:
        sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
        Class v55 = sub_1004CDE10().super.isa;
        [v27 setToolbarItems:v55];
      }
      break;
    case 3:
      id v34 = [v61 navigationController];
      if (v34)
      {
        id v35 = v34;
        [v34 setToolbarHidden:(a2 & 1) == 0 animated:0];
      }
      return;
    case 4:
      unint64_t v56 = v21;
      id v23 = 0;
      if (a2) {
        unint64_t v22 = 2;
      }
      else {
        unint64_t v22 = 4;
      }
      goto LABEL_14;
    default:
      unint64_t v56 = v21;
      unint64_t v22 = a2;
      swift_errorRetain();
      id v23 = 0;
LABEL_14:
      id v24 = v61;
LABEL_15:
      sub_100243500(v22);
      id v36 = (void *)sub_1004CC620();
      sub_1004CE350();
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1004E5790;
      uint64_t v38 = v57;
      *(void *)(v37 + 56) = v58;
      *(void *)(v37 + 64) = v38;
      *(void *)(v37 + 32) = v24;
      switch(v22)
      {
        case 0uLL:
          id v39 = v24;
          unint64_t v40 = 0xE700000000000000;
          unint64_t v41 = 0x676E6964616F6CLL;
          break;
        case 1uLL:
          id v50 = v24;
          unint64_t v40 = 0xE700000000000000;
          unint64_t v41 = 0x746E65746E6F63;
          break;
        case 2uLL:
          id v51 = v24;
          unint64_t v40 = 0x8000000100524130;
          unint64_t v41 = 0xD000000000000010;
          break;
        case 3uLL:
          id v52 = v24;
          unint64_t v40 = 0xE500000000000000;
          unint64_t v41 = 0x7974706D65;
          break;
        case 4uLL:
          id v53 = v24;
          unint64_t v40 = 0xEA0000000000676ELL;
          unint64_t v41 = 0x697265766F636572;
          break;
        default:
          id v42 = v24;
          sub_100381C68(v22);
          double v43 = (void *)sub_1004CAA50();
          id v44 = [v43 domain];
          uint64_t v59 = sub_1004CDB50();
          unint64_t v46 = v45;

          id v62 = [v43 code];
          uint64_t v47 = sub_1004CF840();
          id v49 = v48;
          id v62 = (id)v59;
          unint64_t v63 = v46;
          swift_bridgeObjectRetain();
          v65._countAndFlagsBits = v47;
          v65._object = v49;
          sub_1004CDCD0(v65);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100381894(v22);
          unint64_t v41 = (unint64_t)v62;
          unint64_t v40 = v63;
          break;
      }
      unint64_t v54 = v56;
      *(void *)(v37 + 96) = &type metadata for String;
      *(void *)(v37 + 104) = v54;
      *(void *)(v37 + 72) = v41;
      *(void *)(v37 + 80) = v40;
      sub_1004CC640();

      swift_bridgeObjectRelease();
      sub_10037C110(v22, v23, v60 & 1);

      sub_100381894(v22);
      sub_100381894(v22);
      break;
  }
}

id sub_10037FA2C()
{
  id v1 = v0;
  id v2 = [v0 navigationItem];
  id v3 = [v2 searchController];

  if (!v3)
  {
LABEL_6:
    id v6 = [v1 childViewControllers];
    sub_1000333C8(0, (unint64_t *)&qword_10062DDD0);
    unint64_t v7 = sub_1004CDE30();

    if (v7 >> 62)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1004CF6D0();
      if (v8)
      {
LABEL_8:
        uint64_t v9 = 4;
        while (1)
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v10 = (id)sub_1004CF500();
          }
          else {
            id v10 = *(id *)(v7 + 8 * v9);
          }
          uint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
          {
            __break(1u);
            goto LABEL_22;
          }
          uint64_t v13 = swift_dynamicCastObjCProtocolConditional();
          id result = [v11 view];
          if (!result)
          {
            __break(1u);
LABEL_27:
            __break(1u);
            return result;
          }
          id v15 = result;
          [result alpha];
          double v17 = v16;

          id result = [v11 view];
          if (!result) {
            goto LABEL_27;
          }
          unint64_t v18 = result;
          unsigned __int8 v19 = [result isHidden];

          if (v13)
          {
            if (v17 == 1.0 && (v19 & 1) == 0) {
              break;
            }
          }

          ++v9;
          if (v12 == v8) {
            goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease_n();
        id v5 = (id)swift_dynamicCastObjCProtocolConditional();
        if (v5) {
          return v5;
        }
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8) {
        goto LABEL_8;
      }
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    uint64_t v11 = 0;
LABEL_24:
    sub_1004CF4D0(90);
    id v20 = [v1 description];
    uint64_t v21 = sub_1004CDB50();
    id v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    sub_1004CDCD0(v24);
    swift_bridgeObjectRelease();
    v25._object = (void *)0x8000000100533BF0;
    v25._countAndFlagsBits = 0xD000000000000058;
    sub_1004CDCD0(v25);
    sub_1002C58A4(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    id v5 = [objc_allocWithZone((Class)type metadata accessor for DOCNullTransitionable()) init];

    return v5;
  }
  if (![v3 isActive]) {
    goto LABEL_5;
  }
  id v4 = [v3 searchResultsController];

  if (!v4) {
    goto LABEL_6;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  id v5 = (id)swift_dynamicCastClass();
  id v3 = v4;
  if (!v5)
  {
LABEL_5:

    goto LABEL_6;
  }
  return v5;
}

void DOCBrowserContainerController.reveal(items:selectEvenIfVisible:completionBlock:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1004CD950();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (void *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  *id v10 = sub_1004CE630();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = sub_1004CD980();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    id v12 = sub_10037FA2C();
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    Class isa = sub_1004CDE10().super.isa;
    aBlock[4] = a3;
    void aBlock[5] = a4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100259048;
    void aBlock[3] = &unk_1005D08D0;
    char v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v12 revealWithItems:isa selectEvenIfVisible:a2 & 1 completionBlock:v14];
    _Block_release(v14);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall DOCBrowserContainerController.establishFirstResponder()()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  id v1 = (void *)Strong;
  id v2 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v2)
  {

LABEL_5:
    id v4 = (void *)sub_1004CC620();
    sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1004E12A0;
    swift_unknownObjectWeakLoadStrong();
    sub_100031648((uint64_t *)&unk_100636E58);
    uint64_t v6 = sub_1004CDBA0();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_1000334C4();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    sub_1004CC640();

    swift_bridgeObjectRelease();
    return 0;
  }
  unsigned __int8 v3 = objc_msgSend(v2, "establishFirstResponder", &OBJC_PROTOCOL___DOCFirstResponderEstablishing);

  return v3;
}

id sub_100380890()
{
  id v1 = v0;
  id v2 = [v0 navigationItem];
  id v3 = [v2 searchController];

  if (v3)
  {
    if (![v3 isActive])
    {
LABEL_5:

      goto LABEL_6;
    }
    id v4 = [v3 searchResultsController];

    if (v4)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      id result = (id)swift_dynamicCastClass();
      id v3 = v4;
      if (result) {
        return result;
      }
      goto LABEL_5;
    }
  }
LABEL_6:
  sub_1004CF4D0(70);
  id v6 = [v1 description];
  uint64_t v7 = sub_1004CDB50();
  uint64_t v9 = v8;

  v12._countAndFlagsBits = v7;
  v12._object = v9;
  sub_1004CDCD0(v12);
  swift_bridgeObjectRelease();
  v13._object = (void *)0x8000000100533A20;
  v13._countAndFlagsBits = 0xD000000000000044;
  sub_1004CDCD0(v13);
  sub_1002C58A4(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone((Class)type metadata accessor for DOCNullTransitionable());
  return [v10 init];
}

uint64_t sub_100381240(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = 0x676E6964616F6CLL;
  unint64_t v5 = 0xE700000000000000;
  uint64_t v6 = 0x676E6964616F6CLL;
  switch(a1)
  {
    case 0uLL:
      goto LABEL_9;
    case 1uLL:
      uint64_t v6 = 0x746E65746E6F63;
      if (a2 > 4) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 2uLL:
      unint64_t v5 = 0x8000000100524130;
      uint64_t v6 = 0xD000000000000010;
      if (a2 > 4) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 3uLL:
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x7974706D65;
      goto LABEL_9;
    case 4uLL:
      uint64_t v6 = 0x697265766F636572;
      unint64_t v5 = 0xEA0000000000676ELL;
      if (a2 > 4) {
        goto LABEL_13;
      }
      goto LABEL_9;
    default:
      swift_errorRetain();
      uint64_t v7 = (void *)sub_1004CAA50();
      id v8 = [v7 domain];
      uint64_t v6 = sub_1004CDB50();
      unint64_t v10 = v9;

      [v7 code];
      uint64_t v11 = sub_1004CF840();
      Swift::String v13 = v12;
      swift_bridgeObjectRetain();
      v25._countAndFlagsBits = v11;
      v25._object = v13;
      sub_1004CDCD0(v25);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100212650(a1);
      unint64_t v5 = v10;
      if (a2 <= 4)
      {
LABEL_9:
        unint64_t v14 = 0xE700000000000000;
        switch(a2)
        {
          case 0uLL:
            break;
          case 1uLL:
            if (v6 != 0x746E65746E6F63) {
              goto LABEL_22;
            }
            goto LABEL_19;
          case 2uLL:
            unint64_t v14 = 0x8000000100524130;
            if (v6 != 0xD000000000000010) {
              goto LABEL_22;
            }
            goto LABEL_19;
          case 3uLL:
            unint64_t v14 = 0xE500000000000000;
            uint64_t v4 = 0x7974706D65;
            break;
          case 4uLL:
            unint64_t v14 = 0xEA0000000000676ELL;
            if (v6 != 0x697265766F636572) {
              goto LABEL_22;
            }
            goto LABEL_19;
          default:
            goto LABEL_13;
        }
        if (v6 != v4) {
          goto LABEL_22;
        }
      }
      else
      {
LABEL_13:
        swift_errorRetain();
        id v15 = (void *)sub_1004CAA50();
        id v16 = [v15 domain];
        uint64_t v17 = sub_1004CDB50();
        unint64_t v19 = v18;

        [v15 code];
        uint64_t v20 = sub_1004CF840();
        unint64_t v22 = v21;
        swift_bridgeObjectRetain();
        v26._countAndFlagsBits = v20;
        v26._object = v22;
        sub_1004CDCD0(v26);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100212650(a2);
        unint64_t v14 = v19;
        if (v6 != v17) {
          goto LABEL_22;
        }
      }
LABEL_19:
      if (v5 == v14)
      {
        char v23 = 1;
        goto LABEL_23;
      }
LABEL_22:
      char v23 = sub_1004CF890();
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23 & 1;
  }
}

uint64_t sub_1003815D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003815E0()
{
  return swift_release();
}

uint64_t type metadata accessor for DOCNullTransitionable()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for DOCBrowserContainerState(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for DOCBrowserContainerState(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *assignWithCopy for DOCBrowserContainerState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

unint64_t *assignWithTake for DOCBrowserContainerState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCBrowserContainerState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCBrowserContainerState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserContainerState()
{
  return &type metadata for DOCBrowserContainerState;
}

unint64_t sub_100381808()
{
  unint64_t result = qword_100636F28;
  if (!qword_100636F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100636F28);
  }
  return result;
}

uint64_t sub_10038185C()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100381894(unint64_t result)
{
  if (result != 5) {
    return sub_100212650(result);
  }
  return result;
}

void sub_1003818A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem];
  uint64_t v36 = OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem;
  *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController__containerNavigationItem] = a1;
  id v4 = a1;

  unint64_t v5 = (unint64_t)sub_10037B054();
  unint64_t v6 = v5;
  if (!(v5 >> 62))
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    sub_10037E128();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1004CF6D0();
  if (!v7) {
    goto LABEL_29;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v35 = v7;
    unint64_t v9 = &selRef_setHiddenSourcesIdentifiers_;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        unint64_t v10 = (unsigned char *)sub_1004CF500();
      }
      else {
        unint64_t v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      Swift::String v12 = *(void **)&v2[v36];
      if (v12) {
        id v13 = *(id *)&v2[v36];
      }
      else {
        id v13 = [v2 navigationItem];
      }
      unint64_t v14 = *(void **)&v11[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem];
      *(void *)&v11[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem] = v13;
      id v15 = v13;
      id v16 = v12;

      uint64_t v17 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v11[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      unint64_t v18 = v9;
      id v19 = [v11 v9[247]];
      id v20 = [v19 window];

      if (v20)
      {
        int v21 = v11[v17];
        if (v21 != 2)
        {
          sub_1003867F4();
          char v22 = sub_1004CC060();
          swift_release();
          if ((v22 & 1) == 0)
          {
            if (objc_msgSend(v11, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              char v23 = v11;
              sub_100031648(&qword_10062F480);
              if (swift_dynamicCast())
              {
                uint64_t v24 = v21 & 1;
                uint64_t v25 = *((void *)&v38 + 1);
                uint64_t v26 = v39;
                sub_100032FD8(&v37, *((uint64_t *)&v38 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 8))(v24, v25, v26);
                sub_100039184((uint64_t)&v37);
              }
              else
              {
                uint64_t v39 = 0;
                long long v37 = 0u;
                long long v38 = 0u;
                sub_10011EE40((uint64_t)&v37);
              }
              v11[v17] = 2;
            }
          }
        }
      }

      v11[v17] = 0;
      unint64_t v9 = v18;
      id v27 = [v11 v18[247]];
      id v28 = [v27 window];

      if (v28)
      {
        int v29 = v11[v17];
        if (v29 != 2)
        {
          sub_1003867F4();
          char v30 = sub_1004CC060();
          swift_release();
          if ((v30 & 1) == 0)
          {
            if (objc_msgSend(v11, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              id v31 = v11;
              sub_100031648(&qword_10062F480);
              if (swift_dynamicCast())
              {
                uint64_t v32 = v29 & 1;
                uint64_t v33 = *((void *)&v38 + 1);
                uint64_t v34 = v39;
                sub_100032FD8(&v37, *((uint64_t *)&v38 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 8))(v32, v33, v34);
                sub_100039184((uint64_t)&v37);
              }
              else
              {
                uint64_t v39 = 0;
                long long v37 = 0u;
                long long v38 = 0u;
                sub_10011EE40((uint64_t)&v37);
              }
              v11[v17] = 2;
            }
          }
        }
      }

      ++v8;
    }
    while (v35 != v8);
    goto LABEL_29;
  }
  __break(1u);
}

unint64_t sub_100381C68(unint64_t result)
{
  if (result != 5) {
    return sub_100243500(result);
  }
  return result;
}

uint64_t sub_100381C78(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (!a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100381C94()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100381CCC()
{
  swift_release();

  if (*(void *)(v0 + 48) >= 5uLL) {
    swift_errorRelease();
  }
  return _swift_deallocObject(v0, 56, 7);
}

void sub_100381D24()
{
  sub_10037C434(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100381D38(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100381D80()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100381DC0()
{
  sub_10037CD40(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100381DC8()
{
  if (*(void *)(v0 + 24) >= 5uLL) {
    swift_errorRelease();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100381E18()
{
  sub_1003823E8(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_100381E24(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t sub_100381E34(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x746E65746E6F63;
  switch(a1)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_5;
    case 1uLL:
      break;
    default:
      swift_errorRetain();
      unint64_t v6 = (void *)sub_1004CAA50();
      id v7 = [v6 domain];
      uint64_t v8 = sub_1004CDB50();
      unint64_t v10 = v9;

      [v6 code];
      uint64_t v11 = sub_1004CF840();
      id v13 = v12;
      swift_bridgeObjectRetain();
      v39._countAndFlagsBits = v11;
      v39._object = v13;
      sub_1004CDCD0(v39);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100212650(a1);
      uint64_t v5 = v8;
      unint64_t v4 = v10;
      break;
  }
  if (v5 == 0x746E65746E6F63 && v4 == 0xE700000000000000)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_5:
  char v14 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_12;
  }
  unint64_t v15 = 0x8000000100524130;
  unint64_t v16 = 0xD000000000000010;
  switch(a1)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_11;
    case 2uLL:
      break;
    default:
      swift_errorRetain();
      uint64_t v17 = (void *)sub_1004CAA50();
      id v18 = [v17 domain];
      uint64_t v19 = sub_1004CDB50();
      unint64_t v21 = v20;

      [v17 code];
      uint64_t v22 = sub_1004CF840();
      uint64_t v24 = v23;
      swift_bridgeObjectRetain();
      v40._countAndFlagsBits = v22;
      v40._object = v24;
      sub_1004CDCD0(v40);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100212650(a1);
      unint64_t v16 = v19;
      unint64_t v15 = v21;
      break;
  }
  if (v16 == 0xD000000000000010 && v15 == 0x8000000100524130) {
    goto LABEL_10;
  }
LABEL_11:
  char v25 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    char v28 = 1;
    return v28 & 1;
  }
LABEL_12:
  unint64_t v26 = 0xE700000000000000;
  uint64_t v27 = 0x676E6964616F6CLL;
  switch(a2)
  {
    case 0uLL:
      goto LABEL_15;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_18;
    default:
      swift_errorRetain();
      int v29 = (void *)sub_1004CAA50();
      id v30 = [v29 domain];
      uint64_t v31 = sub_1004CDB50();
      unint64_t v33 = v32;

      [v29 code];
      uint64_t v34 = sub_1004CF840();
      uint64_t v36 = v35;
      swift_bridgeObjectRetain();
      v41._countAndFlagsBits = v34;
      v41._object = v36;
      sub_1004CDCD0(v41);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100212650(a2);
      uint64_t v27 = v31;
      unint64_t v26 = v33;
LABEL_15:
      if (v27 == 0x676E6964616F6CLL && v26 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        char v28 = 0;
      }
      else
      {
LABEL_18:
        char v37 = sub_1004CF890();
        swift_bridgeObjectRelease();
        char v28 = v37 ^ 1;
      }
      break;
  }
  return v28 & 1;
}

void sub_1003823E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t))&a1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_stateReporting];
  if (v5)
  {
    swift_retain();
    v5(a2);
    sub_1000388F0((uint64_t)v5);
  }
  id v7 = [self defaultCenter];
  if (qword_100626838 != -1) {
    swift_once();
  }
  [v7 postNotificationName:qword_1006503C8 object:a3];

  id v8 = [a1 viewIfLoaded];
  id v9 = [v8 window];

  id v10 = [v9 rootViewController];
  [v10 setNeedsFocusUpdate];

  uint64_t v11 = *(NSObject **)&a1[OBJC_IVAR____TtC14RecentsAvocado29DOCBrowserContainerController_queue];
  dispatch_resume(v11);
}

ValueMetadata *type metadata accessor for DOCPickerOperation()
{
  return &type metadata for DOCPickerOperation;
}

unint64_t sub_10038256C()
{
  unint64_t result = qword_100636F60;
  if (!qword_100636F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100636F60);
  }
  return result;
}

uint64_t sub_100382678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v11 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithString:v11];

  id v13 = self;
  id v14 = v12;
  NSString v15 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v16 = [v13 _systemImageNamed:v15 withConfiguration:0];

  if (v16)
  {

    if ((a7 & 1) == 0)
    {
      id v17 = [v16 imageWithBaselineOffsetFromBottom:*(double *)&a6];

      id v16 = v17;
    }
    id v18 = [self textAttachmentWithImage:v16];
    sub_100382910();
    id v19 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v18];
    id v20 = objc_allocWithZone((Class)NSAttributedString);
    NSString v21 = sub_1004CDB10();
    id v22 = [v20 initWithString:v21];

    [v14 insertAttributedString:v22 atIndex:0];
    [v14 insertAttributedString:v19 atIndex:0];
    id v23 = a5;
    objc_msgSend(v14, "addAttribute:value:range:", NSFontAttributeName, v23, 0, objc_msgSend(v14, "length"));

    return (uint64_t)v14;
  }
  else
  {
    uint64_t result = sub_1004CF6B0();
    __break(1u);
  }
  return result;
}

unint64_t sub_100382910()
{
  unint64_t result = qword_100635940;
  if (!qword_100635940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100635940);
  }
  return result;
}

id sub_100382980()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeObserverSubscriber(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *sub_100382ACC(void *a1, void *a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_1004CB7D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  NSString v15 = (char *)&v31 - v14;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers] = _swiftEmptyArrayStorage;
  uint64_t v16 = OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_node;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_node] = a1;
  if (a3)
  {
    uint64_t v31 = ObjectType;
    swift_getObjectType();
    id v17 = v4;
    swift_unknownObjectRetain();
    sub_1004CEE10();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for DOCNodeType.FINode(_:), v9);
    char v18 = sub_1004CB7C0();
    id v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v13, v9);
    v19(v15, v9);
    if (v18)
    {
      unsigned __int8 v20 = [a1 isFolder];
      uint64_t ObjectType = v31;
      if (v20) {
        unsigned int v21 = 1;
      }
      else {
        unsigned int v21 = [a1 isPackage];
      }
    }
    else
    {
      unsigned int v21 = 0;
      uint64_t ObjectType = v31;
    }
  }
  else
  {
    id v22 = v4;
    swift_unknownObjectRetain();
    unsigned int v21 = 0;
  }
  v4[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_deepObserving] = v21;
  uint64_t v23 = type metadata accessor for DOCNodeCollection();
  uint64_t v24 = *(void **)&v4[v16];
  uint64_t v25 = swift_getObjectType();
  id v26 = a2;
  swift_unknownObjectRetain();
  char v33 = v21 ^ 1;
  uint64_t v27 = 4;
  if (!v21) {
    uint64_t v27 = 0;
  }
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_collection] = sub_1003EC76C(v24, 0, a2, v27 | ((unint64_t)(v21 ^ 1u) << 32), v23, v25);

  v32.receiver = v4;
  v32.super_class = ObjectType;
  char v28 = (char *)objc_msgSendSuper2(&v32, "init");
  *(void *)(*(void *)&v28[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_collection]
            + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_delegate
            + 8) = &off_1005D0EA8;
  swift_unknownObjectWeakAssign();
  int v29 = v28;
  sub_1003E9AA8();

  swift_unknownObjectRelease();
  return v29;
}

id sub_100382E04()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1003E95E8();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_100382F54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
  id v6 = objc_allocWithZone(v5);
  swift_retain();
  id v7 = (char *)v6;
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  id v8 = &v7[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_updateBlock];
  *(void *)id v8 = a1;
  *((void *)v8 + 1) = a2;
  uint64_t v9 = &v7[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_didFinishGatheringBlock];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  swift_retain();

  v14.receiver = v7;
  v14.super_class = v5;
  id v10 = objc_msgSendSuper2(&v14, "init");
  swift_release();
  uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers);
  swift_beginAccess();
  id v12 = v10;
  sub_1004CDE00();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();
  swift_endAccess();
  return v12;
}

id sub_1003830BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
  id v6 = objc_allocWithZone(v5);
  swift_retain();
  id v7 = (char *)v6;
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  id v8 = &v7[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_updateBlock];
  *(void *)id v8 = DOCSplitBrowserViewController.didCommitPreview(of:);
  *((void *)v8 + 1) = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_didFinishGatheringBlock];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  swift_retain();

  v14.receiver = v7;
  v14.super_class = v5;
  id v10 = objc_msgSendSuper2(&v14, "init");
  swift_release();
  uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers);
  swift_beginAccess();
  id v12 = v10;
  sub_1004CDE00();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();
  swift_endAccess();
  return v12;
}

id sub_100383234(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  id v12 = (void *)a6(a5, v10);

  swift_release();
  return v12;
}

void sub_1003832D4(uint64_t a1, uint64_t a2)
{
  sub_100031648(&qword_1006274C0);
  Class isa = sub_1004CDE10().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_100383418(uint64_t a1)
{
  unint64_t v2 = sub_1003EB2B8(a1);
  objc_super v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (char *)sub_1004CF500();
      }
      else {
        id v8 = (char *)*(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      if (*(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_didFinishGatheringBlock]) {
        (*(void (**)(unint64_t))&v8[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_didFinishGatheringBlock])(v2);
      }
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10038354C(uint64_t a1, uint64_t a2)
{
  return sub_100384EA8(a2);
}

uint64_t sub_10038355C(unint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v3 + 56) = 0;
  *(void *)(v3 + 16) = a1;
  *(double *)(v3 + 64) = a3;
  if (!(a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v7) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    id v22 = _swiftEmptyArrayStorage;
LABEL_18:
    *(void *)(v4 + 32) = v22;
    swift_bridgeObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1004CF6D0();
  if (!v7) {
    goto LABEL_17;
  }
LABEL_3:
  char v28 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100188668(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    char v26 = a2 & 1;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        sub_1004CF500();
      }
      else {
        swift_unknownObjectRetain();
      }
      id v10 = objc_allocWithZone((Class)type metadata accessor for DOCNodeObserver());
      id v11 = (void *)swift_unknownObjectRetain();
      id v12 = sub_100382ACC(v11, 0, v26);
      uint64_t v13 = swift_allocObject();
      swift_weakInit();
      objc_super v14 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
      id v15 = objc_allocWithZone(v14);
      swift_retain_n();
      uint64_t v16 = (char *)v15;
      _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
      id v17 = (uint64_t (**)())&v16[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_updateBlock];
      *id v17 = sub_100384BFC;
      v17[1] = (uint64_t (*)())v13;
      char v18 = &v16[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_didFinishGatheringBlock];
      *(void *)char v18 = 0;
      *((void *)v18 + 1) = 0;
      swift_retain();

      v27.receiver = v16;
      v27.super_class = v14;
      id v19 = objc_msgSendSuper2(&v27, "init");
      swift_release();
      unsigned __int8 v20 = &v12[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers];
      swift_beginAccess();
      id v21 = v19;
      sub_1004CDE00();
      if (*(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_1004CDE60();
      sub_1004CDF40();
      sub_1004CDE50();
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_release_n();
      id v22 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100188668(0, v22[2] + 1, 1);
        id v22 = v28;
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1)
      {
        sub_100188668(v23 > 1, v24 + 1, 1);
        id v22 = v28;
      }
      ++v9;
      _OWORD v22[2] = v24 + 1;
      uint64_t v25 = &v22[2 * v24];
      void v25[4] = v21;
      v25[5] = v12;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10038387C()
{
  uint64_t v0 = sub_1004CD860();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1004CD8C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003A680();
  id v8 = (void *)sub_1004CE630();
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  aBlock[4] = sub_100384C04;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D0F08;
  id v10 = _Block_copy(aBlock);
  swift_release();
  sub_1004CD880();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003A744();
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10003A79C();
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100383B2C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100384230();
    return swift_release();
  }
  return result;
}

uint64_t DOCMultiNodeObserver.deinit()
{
  sub_100384170();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v34 = *(void *)(v1 + 16);
  if (!v34)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v0;
  }
  uint64_t v32 = v0;
  uint64_t v33 = v1 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v4 = v33 + 16 * v2;
    uint64_t v6 = *(void **)v4;
    uint64_t v5 = *(char **)(v4 + 8);
    uint64_t v7 = (unint64_t *)&v5[OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers];
    swift_beginAccess();
    unint64_t v8 = *v7;
    uint64_t v35 = v5;
    uint64_t v36 = v6;
    if (*v7 >> 62)
    {
      id v29 = v6;
      id v30 = v5;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1004CF6D0();
      if (!v9) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v10 = v6;
      id v11 = v5;
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_3;
      }
    }
    id v12 = (v8 & 0xC000000000000001) != 0 ? (id)sub_1004CF500() : *(id *)(v8 + 32);
    uint64_t v13 = v12;
    objc_super v14 = v36;
    char v15 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();

    if ((v15 & 1) == 0) {
      break;
    }
    unint64_t v16 = 0;
LABEL_21:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v22 = *v7;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v7 = v22;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v22 & 0x8000000000000000) != 0
      || (v22 & 0x4000000000000000) != 0)
    {
      unint64_t v22 = sub_100384B34(v22);
      *uint64_t v7 = v22;
    }
    uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
    unint64_t v25 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16 >= v25) {
      goto LABEL_34;
    }
    unint64_t v26 = v25 - 1;
    uint64_t v27 = v25 - 1 - v16;
    if (v27 < 0) {
      goto LABEL_35;
    }
    uint64_t v28 = v24 + 8 * v16;
    uint64_t v3 = *(void **)(v28 + 32);
    memmove((void *)(v28 + 32), (const void *)(v28 + 40), 8 * v27);
    *(void *)(v24 + 16) = v26;
    sub_1004CDE50();
    swift_endAccess();

LABEL_4:
    ++v2;

    if (v2 == v34)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v32;
      goto LABEL_32;
    }
  }
  if (v9 == 1)
  {
LABEL_3:

    swift_bridgeObjectRelease();
    uint64_t v3 = v5;
    goto LABEL_4;
  }
  uint64_t v17 = 5;
  while (1)
  {
    unint64_t v16 = v17 - 4;
    if ((v8 & 0xC000000000000001) != 0) {
      id v18 = (id)sub_1004CF500();
    }
    else {
      id v18 = *(id *)(v8 + 8 * v17);
    }
    id v19 = v18;
    char v20 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();

    if (v20)
    {
      objc_super v14 = v36;
      goto LABEL_21;
    }
    uint64_t v21 = v17 - 3;
    if (__OFADD__(v16, 1)) {
      break;
    }
    ++v17;
    if (v21 == v9) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_1004CF730();
  __break(1u);
  return result;
}

uint64_t DOCMultiNodeObserver.__deallocating_deinit()
{
  DOCMultiNodeObserver.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100383EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  objc_super v14 = (char *)&v23 - v13;
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  char v15 = &v14[*(int *)(v8 + 28)];
  *(void *)char v15 = a1;
  *((void *)v15 + 1) = a2;
  sub_100385008((uint64_t)v14, (uint64_t)v12);
  unint64_t v16 = (unint64_t *)(v3 + 48);
  swift_beginAccess();
  unint64_t v17 = *(void *)(v3 + 48);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 48) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v17 = sub_100237778(0, *(void *)(v17 + 16) + 1, 1, v17);
    *unint64_t v16 = v17;
  }
  unint64_t v20 = *(void *)(v17 + 16);
  unint64_t v19 = *(void *)(v17 + 24);
  if (v20 >= v19 >> 1)
  {
    unint64_t v17 = sub_100237778(v19 > 1, v20 + 1, 1, v17);
    *unint64_t v16 = v17;
  }
  *(void *)(v17 + 16) = v20 + 1;
  sub_10038506C((uint64_t)v12, v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v20);
  swift_endAccess();
  uint64_t v21 = sub_1004CADE0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 16))(a3, v14, v21);
  return sub_1003850D0((uint64_t)v14);
}

void sub_1003840B0()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    *(unsigned char *)(v0 + 40) = 1;
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = (void **)(v1 + 40);
      do
      {
        uint64_t v4 = *v3;
        id v5 = *(v3 - 1);
        id v6 = v4;
        sub_1003E9AA8();

        v3 += 2;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100384170()
{
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    *(unsigned char *)(v0 + 40) = 0;
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = (void **)(v1 + 40);
      do
      {
        uint64_t v4 = *v3;
        id v5 = *(v3 - 1);
        id v6 = v4;
        sub_1003E95E8();

        v3 += 2;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_100384230()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CD860();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CD8C0();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CD900();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v16 = (char *)&v20 - v15;
  if ((*(unsigned char *)(v1 + 56) & 1) == 0)
  {
    *(unsigned char *)(v1 + 56) = 1;
    sub_10003A680();
    uint64_t v22 = v6;
    uint64_t v20 = sub_1004CE630();
    sub_1004CD8E0();
    sub_1004CD970();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v13, v9);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_100385000;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A422C;
    void aBlock[3] = &unk_1005D0F30;
    id v18 = _Block_copy(aBlock);
    swift_release();
    sub_1004CD880();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10003A744();
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10003A79C();
    sub_1004CF330();
    unint64_t v19 = (void *)v20;
    sub_1004CE600();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    return ((uint64_t (*)(char *, uint64_t))v21)(v16, v9);
  }
  return result;
}

uint64_t sub_1003845A8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (*(unsigned char *)(result + 56) == 1)
    {
      uint64_t v2 = *(void *)(*(void *)(result + 32) + 16);
      if (v2)
      {
        swift_bridgeObjectRetain();
        sub_1004CF590();
        uint64_t v3 = 40;
        do
        {
          swift_unknownObjectRetain();
          sub_1004CF560();
          sub_1004CF5A0();
          sub_1004CF5B0();
          sub_1004CF570();
          v3 += 16;
          --v2;
        }
        while (v2);
        swift_bridgeObjectRelease();
      }
      *(void *)(v1 + 16) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v4 = *(void *)(v1 + 48);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        uint64_t v6 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
        uint64_t v7 = v4
           + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));
        uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 72);
        swift_bridgeObjectRetain();
        do
        {
          (*(void (**)(uint64_t))(v7 + *(int *)(v6 + 20)))(v1);
          v7 += v8;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v1 + 56) = 0;
    }
    return swift_release();
  }
  return result;
}

void *sub_100384778(void *a1)
{
  return sub_100236784(0, a1[2], 0, a1);
}

void *sub_100384790(void *a1)
{
  return sub_1002374BC(0, a1[2], 0, a1);
}

uint64_t sub_1003847A4()
{
  return type metadata accessor for DOCNodeObserverSubscriber(0);
}

uint64_t type metadata accessor for DOCNodeObserverSubscriber(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_100636FA8);
}

uint64_t sub_1003847CC()
{
  uint64_t result = sub_1004CADE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCNodeObserver()
{
  return self;
}

uint64_t type metadata accessor for DOCMultiNodeObserver()
{
  return self;
}

uint64_t sub_1003848BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003848D0);
}

uint64_t sub_1003848D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CADE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100384990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003849A4);
}

uint64_t sub_1003849A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1004CADE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DOCMultiNodeObserver.Subscriber(uint64_t a1)
{
  return sub_100069444(a1, qword_1006371E0);
}

void *sub_100384A80(void *a1)
{
  return sub_1002377E0(0, a1[2], 0, a1);
}

uint64_t sub_100384A94(unint64_t a1)
{
  return sub_100236640(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100384AA8(void *a1)
{
  return sub_100237E9C(0, a1[2], 0, a1);
}

uint64_t sub_100384ABC(unint64_t a1)
{
  return sub_100237EB0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100384AD0(void *a1)
{
  return sub_100237F18(0, a1[2], 0, a1);
}

void *sub_100384AE4(void *a1)
{
  return sub_10023840C(0, a1[2], 0, a1);
}

void *sub_100384AF8(void *a1)
{
  return sub_100238550(0, a1[2], 0, a1);
}

void *sub_100384B0C(void *a1)
{
  return sub_100238674(0, a1[2], 0, a1);
}

void *sub_100384B20(void *a1)
{
  return sub_100237D64(0, a1[2], 0, a1);
}

uint64_t sub_100384B34(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1004CF6D0();
    swift_bridgeObjectRelease();
  }
  return sub_1004CF510();
}

void *sub_100384BB0(void *a1)
{
  return sub_100238B6C(0, a1[2], 0, a1);
}

uint64_t sub_100384BC4()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100384BFC()
{
  return sub_10038387C();
}

uint64_t sub_100384C04()
{
  return sub_100383B2C();
}

uint64_t sub_100384C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100384C1C()
{
  return swift_release();
}

uint64_t sub_100384C24(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_uuid;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1004CF500() : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

uint64_t sub_100384D38(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_deepObserving) == 1
    && *(unsigned char *)(result + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) == 1)
  {
    uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers);
    swift_beginAccess();
    uint64_t v3 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1004CF6D0();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_5:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v5 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v6 = (char *)sub_1004CF500();
          }
          else {
            id v6 = (char *)*(id *)(v3 + 8 * v5 + 32);
          }
          uint64_t v7 = v6;
          ++v5;
          char v8 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_updateBlock];
          swift_retain();
          uint64_t v9 = swift_unknownObjectRetain();
          v8(v9);

          swift_release();
          swift_unknownObjectRelease();
        }
        while (v4 != v5);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100384EA8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_node) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC14RecentsAvocado15DOCNodeObserver_subscribers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004CF6D0();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        uint64_t v7 = (char *)sub_1004CF500();
      }
      else {
        uint64_t v7 = (char *)*(id *)(v3 + 8 * v6 + 32);
      }
      char v8 = v7;
      ++v6;
      uint64_t v9 = *(void (**)(uint64_t))&v7[OBJC_IVAR____TtC14RecentsAvocado25DOCNodeObserverSubscriber_updateBlock];
      swift_retain();
      uint64_t v10 = swift_unknownObjectRetain();
      v9(v10);

      swift_release();
      swift_unknownObjectRelease();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100385000()
{
  return sub_1003845A8();
}

uint64_t sub_100385008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038506C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003850D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10038512C()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100385164(uint64_t a1)
{
  sub_1003832D4(a1, *(void *)(v1 + 16));
}

uint64_t DOCTabBarItem.tab.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado13DOCTabBarItem_tab;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t DOCTabBarItem.tab.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado13DOCTabBarItem_tab);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*DOCTabBarItem.tab.modify())()
{
  return j__swift_endAccess;
}

uint64_t DOCTabBarItem.tabIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocado13DOCTabBarItem_tab);
  swift_beginAccess();
  uint64_t v2 = *v1;
  switch(v2)
  {
    case 0:
      return 0x73746E65636572;
    case 2:
      return 0x6573776F7262;
    case 1:
      return 0x646572616873;
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = sub_1004CF8E0();
  __break(1u);
  return result;
}

uint64_t static DOCTabBarItem.tabIdentifier(forTab:)(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x73746E65636572;
    case 2:
      return 0x6573776F7262;
    case 1:
      return 0x646572616873;
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = sub_1004CF8E0();
  __break(1u);
  return result;
}

unint64_t DOCTabBarItem.description.getter()
{
  sub_1004CF4D0(22);
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocado13DOCTabBarItem_tab);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*v1)
  {
    if (v2 == 2)
    {
      uint64_t v3 = (void *)0xE600000000000000;
      v4._countAndFlagsBits = 0x6573776F7242;
    }
    else if (v2 == 1)
    {
      uint64_t v3 = (void *)0xE600000000000000;
      v4._countAndFlagsBits = 0x646572616853;
    }
    else
    {
      uint64_t v3 = (void *)0xE500000000000000;
      v4._countAndFlagsBits = 0x3F3F3F3F3FLL;
    }
  }
  else
  {
    uint64_t v3 = (void *)0xE700000000000000;
    v4._countAndFlagsBits = 0x73746E65636552;
  }
  v4._object = v3;
  sub_1004CDCD0(v4);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v6);
  return 0xD000000000000013;
}

uint64_t sub_1003858F0(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      uint64_t v7 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v7)
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      uint64_t v2 = v7;
      v11._countAndFlagsBits = 0x8000000100534000;
      v3._countAndFlagsBits = 0x6573776F7242;
      v3._object = (void *)0xE600000000000000;
LABEL_10:
      v4._countAndFlagsBits = 0x617A696C61636F4CLL;
      v4._object = (void *)0xEB00000000656C62;
      v5.super.Class isa = v2;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      goto LABEL_11;
    case 1:
      uint64_t v1 = (objc_class *)(id)_DocumentManagerBundle();
      if (v1)
      {
        uint64_t v2 = v1;
        v11._countAndFlagsBits = 0x8000000100534080;
        v3._countAndFlagsBits = 0x646572616853;
        v3._object = (void *)0xE600000000000000;
        v4._countAndFlagsBits = 0x617A696C61636F4CLL;
        v4._object = (void *)0xEB00000000656C62;
        v5.super.Class isa = v2;
        v6._countAndFlagsBits = 0;
        v6._object = (void *)0xE000000000000000;
LABEL_11:
        uint64_t v9 = sub_1004CBEE0(v3, v4, v5, v6, v11);

        return v9;
      }
      __break(1u);
      goto LABEL_13;
    case 0:
      char v8 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v8)
      {
LABEL_14:
        __break(1u);
        break;
      }
      uint64_t v2 = v8;
      v11._countAndFlagsBits = 0x80000001005340A0;
      v3._countAndFlagsBits = 0x73746E65636552;
      v3._object = (void *)0xE700000000000000;
      goto LABEL_10;
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = sub_1004CF8E0();
  __break(1u);
  return result;
}

id DOCTabBarItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTabBarItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id UIViewController.DOCTabBarItem.getter()
{
  id result = [v0 tabBarItem];
  if (result)
  {
    type metadata accessor for DOCTabBarItem();
    return (id)swift_dynamicCastClassUnconditional();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void UIViewController.DOCTabBarItem.setter(void *a1)
{
  [v1 setTabBarItem:a1];
}

void *UITabBar.DOCTabBarItems.getter()
{
  id v1 = [v0 items];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  objc_super v2 = v1;
  sub_1000333C8(0, &qword_100637220);
  unint64_t v3 = sub_1004CDE30();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_4:
  id result = (void *)sub_1004CF590();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        sub_1004CF500();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      ++v6;
      type metadata accessor for DOCTabBarItem();
      swift_dynamicCastClassUnconditional();
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      sub_1004CF570();
    }
    while (v4 != v6);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t _s14RecentsAvocado13DOCTabBarItemC4item3tabACSo0C0V_tFZ_0(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a1 == 2 || a1 == 1)
    {
      type metadata accessor for DOCTabBarItem();
      objc_super v2 = self;
      NSString v3 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      id v4 = objc_msgSend(v2, "__systemImageNamedSwift:", v3);

      NSBundle v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTitle:0 image:v4 tag:a1];
LABEL_7:
      uint64_t v6 = (uint64_t *)&v5[OBJC_IVAR____TtC14RecentsAvocado13DOCTabBarItem_tab];
      swift_beginAccess();
      *uint64_t v6 = a1;
      id v7 = v5;
      sub_1003858F0(a1);
      NSString v8 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      [v7 _setInternalTitle:v8];

      [v7 setSpringLoaded:1];
      return (uint64_t)v7;
    }
    if (!a1)
    {
      type metadata accessor for DOCTabBarItem();
      NSBundle v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTabBarSystemItem:4 tag:0];
      goto LABEL_7;
    }
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = sub_1004CF8E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCTabBarItem()
{
  return self;
}

uint64_t sub_100386254()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038628C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003862C4(char a1)
{
  NSString v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_isUserInteractionEnabled);
  uint64_t result = swift_beginAccess();
  *NSString v3 = a1;
  return result;
}

uint64_t (*sub_100386310())()
{
  return j__swift_endAccess;
}

uint64_t sub_10038636C()
{
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

id sub_1003863B4(void *a1, void *a2, void *a3)
{
  id v4 = v3;
  swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_eventReporting + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_viewReusing + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_overlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 2;
  v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_allowsPickingMultipleItems] = 0;
  v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_forceEditingMode] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_isUserInteractionEnabled] = 1;
  v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed] = 1;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackground] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_configuration] = a1;
  *(void *)&v4[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_documentManager] = a2;
  id v8 = objc_allocWithZone((Class)type metadata accessor for DOCActionManager());
  id v9 = a2;
  uint64_t v10 = v4;
  id v11 = a1;
  uint64_t v12 = (char *)[v8 init];
  if (a3)
  {
    sub_100031648(&qword_100628240);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1004E5710;
    *(void *)(v13 + 32) = a3;
    uint64_t v20 = v13;
    sub_1004CDE50();
    *(void *)&v12[OBJC_IVAR____TtC14RecentsAvocado16DOCActionManager_associatedActionManagers] = v20;
    id v14 = a3;
    swift_bridgeObjectRelease();
  }
  *(void *)&v10[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_actionManager] = v12;
  uint64_t v15 = v12;

  v21.receiver = v10;
  v21.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  id v16 = objc_msgSendSuper2(&v21, "initWithNibName:bundle:", 0, 0);
  sub_100031648((uint64_t *)&unk_1006281E0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1004E12A0;
  *(void *)(v17 + 32) = sub_1004CCE80();
  *(void *)(v17 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  id v18 = v16;
  sub_1004CE580();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t sub_100386674()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_forceEditingMode);
}

uint64_t sub_100386684(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_eventReporting + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_1003866D0(uint64_t result)
{
  v1[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_allowsPickingMultipleItems] = result;
  uint64_t v2 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  int v3 = v1[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
  if (v3 != 2)
  {
    id v4 = v1;
    sub_1003867F4();
    char v5 = sub_1004CC060();
    uint64_t result = swift_release();
    if ((v5 & 1) == 0)
    {
      uint64_t result = (uint64_t)objc_msgSend(v1, "doc_hasAppearedOrIsAppearing");
      if (result)
      {
        type metadata accessor for DOCBrowserContainedViewController();
        uint64_t v6 = v1;
        sub_100031648(&qword_10062F480);
        if (swift_dynamicCast())
        {
          uint64_t v7 = v3 & 1;
          uint64_t v8 = *((void *)&v11 + 1);
          uint64_t v9 = v12;
          sub_100032FD8(&v10, *((uint64_t *)&v11 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(v7, v8, v9);
          uint64_t result = sub_100039184((uint64_t)&v10);
        }
        else
        {
          uint64_t v12 = 0;
          long long v10 = 0u;
          long long v11 = 0u;
          uint64_t result = sub_10011EE40((uint64_t)&v10);
        }
        v4[v2] = 2;
      }
    }
  }
  return result;
}

uint64_t sub_1003867F4()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions);
  }
  else
  {
    uint64_t v3 = v0;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1004CC090();
    swift_allocObject();
    uint64_t v2 = sub_1004CC080();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1003868CC(uint64_t a1, void *a2, void *a3)
{
  if (a3) {
    id v6 = a3;
  }
  else {
    id v6 = [v3 _definiteTransitionCoordinator];
  }
  strcpy((char *)v12, "transition (");
  BYTE5(v12[1]) = 0;
  HIWORD(v12[1]) = -5120;
  swift_unknownObjectRetain();
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  sub_1004CDCD0(v17);
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v18);
  uint64_t v7 = sub_100386AD8(v12[0], (void *)v12[1]);
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t (*)(void *))DOCSplitBrowserViewController.didCommitPreview(of:);
  uint64_t v16 = 0;
  v12[0] = (uint64_t)_NSConcreteStackBlock;
  v12[1] = 1107296256;
  uint64_t v13 = sub_100125C70;
  id v14 = &unk_1005D1030;
  uint64_t v8 = _Block_copy(v12);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1003883E8;
  *(void *)(v9 + 24) = v7;
  uint64_t v15 = sub_10038843C;
  uint64_t v16 = v9;
  v12[0] = (uint64_t)_NSConcreteStackBlock;
  v12[1] = 1107296256;
  uint64_t v13 = sub_100125C70;
  id v14 = &unk_1005D1080;
  long long v10 = _Block_copy(v12);
  swift_retain_n();
  swift_release();
  [v6 animateAlongsideTransition:v8 completion:v10];
  _Block_release(v10);
  _Block_release(v8);
  swift_unknownObjectRelease();
  return swift_release_n();
}

uint64_t sub_100386AD8(uint64_t a1, void *a2)
{
  sub_1003867F4();
  char v4 = sub_1004CC060();
  swift_release();
  if ((v4 & 1) == 0) {
    sub_1003871C0();
  }
  sub_1004CF4D0(29);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  sub_1004CDCD0(v7);
  sub_1004CB8D0();
  swift_allocObject();
  uint64_t v5 = sub_1004CB8C0();
  sub_1003867F4();
  sub_1004CC070();
  swift_release();
  return v5;
}

uint64_t DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed);
  swift_beginAccess();
  return *v1;
}

void DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.setter(char a1)
{
  int v3 = a1 & 1;
  char v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed);
  swift_beginAccess();
  int v5 = *v4;
  *char v4 = a1;
  if (v5 != v3) {
    sub_100386D68(0);
  }
}

void (*DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed;
  v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_100386D10;
}

void sub_100386D10(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  int v4 = *(unsigned __int8 *)(*(void *)a1 + 40);
  int v5 = *(unsigned __int8 *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  if (v4 != v5) {
    sub_100386D68(0);
  }
  free(v1);
}

void sub_100386D68(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackground;
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackground];
  id v6 = &v2[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
  swift_beginAccess();
  if (*v6 == 1)
  {
    unsigned int v7 = [v2 enclosedInUIPDocumentLanding];
    if ((((v5 != 0) ^ v7) & 1) == 0) {
      return;
    }
    if (v7)
    {
      id v8 = a1;
      if (!a1) {
        id v8 = [v2 effectiveAppearance];
      }
      uint64_t v9 = qword_100626798;
      id v10 = *(id *)&v2[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_configuration];
      id v11 = a1;
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_1006502E0;
      objc_allocWithZone((Class)type metadata accessor for DOCSystemMaterialBackgroundView());
      id v13 = v8;
      id v14 = v12;
      id v15 = sub_1000F12D8(v10, v12, v8);
      uint64_t v16 = *(void **)&v2[v4];
      *(void *)&v2[v4] = v15;
      id v17 = v15;

      id v18 = [v2 view];
      if (!v18)
      {
        __break(1u);
        return;
      }
      unint64_t v19 = v18;
      [v17 setAutoresizingMask:18];
      [v19 bounds];
      objc_msgSend(v17, "setFrame:");
      [v19 insertSubview:v17 atIndex:0];

      goto LABEL_13;
    }
  }
  else if (!v5)
  {
    return;
  }
  uint64_t v20 = *(void **)&v2[v4];
  if (!v20) {
    return;
  }
  id v17 = v20;
  [v17 removeFromSuperview];
  unint64_t v19 = *(void **)&v2[v4];
  *(void *)&v2[v4] = 0;
LABEL_13:
}

void sub_100386F68()
{
  uint64_t v1 = *(void **)((char *)v0
                + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem);
  if (v1)
  {
    id v7 = v1;
    if ([v0 enclosedInUIPDocumentLanding])
    {
      if (qword_100626938 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_100650728;
    }
    else if (DOCDeviceIsPhone())
    {
      uint64_t v2 = 2;
    }
    else
    {
      uint64_t v2 = 0;
    }
    id v3 = [v7 setPreferredSearchBarPlacement:v2];
    if (((*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x168))(v3) & 1) == 0)
    {
      id v4 = [v7 searchController];
      if (v4)
      {
        uint64_t v5 = v4;
        id v6 = [v4 searchBar];

        objc_msgSend(v6, "_setEnabled:", objc_msgSend(v0, "isEditing") ^ 1);
      }
    }
  }
}

id DOCBrowserContainedViewController.configuration.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_configuration);
}

void sub_1003871C0()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  int v2 = v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
  if (v2 != 2)
  {
    id v3 = v0;
    sub_1003867F4();
    char v4 = sub_1004CC060();
    swift_release();
    if ((v4 & 1) == 0)
    {
      if (objc_msgSend(v0, "doc_hasAppearedOrIsAppearing"))
      {
        type metadata accessor for DOCBrowserContainedViewController();
        uint64_t v5 = v0;
        sub_100031648(&qword_10062F480);
        if (swift_dynamicCast())
        {
          uint64_t v6 = v2 & 1;
          uint64_t v7 = *((void *)&v10 + 1);
          uint64_t v8 = v11;
          sub_100032FD8(&v9, *((uint64_t *)&v10 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v6, v7, v8);
          sub_100039184((uint64_t)&v9);
        }
        else
        {
          uint64_t v11 = 0;
          long long v9 = 0u;
          long long v10 = 0u;
          sub_10011EE40((uint64_t)&v9);
        }
        v3[v1] = 2;
      }
    }
  }
}

id DOCBrowserContainedViewController.actionManager.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_actionManager);
}

void sub_1003873AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1003867F4();
    char v2 = sub_1004CC060();
    swift_release();
    if ((v2 & 1) == 0)
    {
      if (objc_msgSend(v1, "doc_hasAppearedOrIsAppearing")) {
        sub_1003871C0();
      }
    }
  }
}

uint64_t sub_100387440(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_1004CD860();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1004CD8C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![a1 isCancelled]) {
    return a2();
  }
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  id v14 = (void *)sub_1004CE630();
  aBlock[4] = a2;
  void aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D10A8;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1004CD880();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003A744();
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10003A79C();
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_100387704(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
  *(void *)&a1[*a4] = sub_1004CDE30();
  uint64_t v8 = a1;
  swift_bridgeObjectRelease();
  v8[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v6 = [v8 viewIfLoaded];
  id v7 = [v6 window];

  if (v7) {
    sub_1003871C0();
  }
}

Swift::Void __swiftcall DOCBrowserContainedViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  objc_msgSendSuper2(&v1, "viewDidLoad");
  sub_1003871C0();
  sub_100386D68(0);
}

uint64_t type metadata accessor for DOCBrowserContainedViewController()
{
  return self;
}

void DOCBrowserContainedViewController.effectiveAppearanceDidChange(_:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  objc_msgSendSuper2(&v5, "effectiveAppearanceDidChange:", a1);
  *((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  id v3 = [v1 viewIfLoaded];
  id v4 = [v3 window];

  if (v4) {
    sub_1003871C0();
  }
  if ([v1 isViewLoaded]) {
    sub_100386D68(a1);
  }
}

void DOCBrowserContainedViewController.init(nibName:bundle:)()
{
}

id DOCBrowserContainedViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall DOCBrowserContainedViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  BOOL v5 = _;
  BOOL v6 = animated;
  objc_msgSendSuper2(&v9, "setEditing:animated:", v5, v6);
  sub_1000333C8(0, (unint64_t *)&unk_10063BA20);
  id v7 = (void *)sub_1004CE4D0();
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 setEditing:v5 animated:v6];
  }
}

void sub_100387DC8(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v5 = *(void **)((char *)v4
                + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem);
  if (v5)
  {
    BOOL v6 = v4;
    if ((a4 & 1) == 0)
    {
      id v21 = v5;
      unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_41;
    }
    uint64_t v10 = (char *)v4 + OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_overlayDelegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v11 = *((void *)v10 + 1);
      uint64_t ObjectType = swift_getObjectType();
      id v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
      id v14 = v5;
      unint64_t v15 = v13(ObjectType, v11);
      swift_unknownObjectRelease();
      if (!(v15 >> 62)) {
        goto LABEL_5;
      }
    }
    else
    {
      id v22 = v5;
      unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      {
LABEL_5:
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v16)
        {
LABEL_6:
          if ((v15 & 0xC000000000000001) != 0)
          {
            uint64_t v17 = 0;
            while (1)
            {
              uint64_t v18 = sub_1004CF500();
              uint64_t v19 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                break;
              }
              char v20 = *(unsigned char *)(v18
                             + OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canPerformShiftAction);
              swift_unknownObjectRelease();
              if (v20) {
                goto LABEL_21;
              }
              ++v17;
              if (v19 == v16) {
                goto LABEL_20;
              }
            }
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
          uint64_t v23 = 0;
          while (1)
          {
            uint64_t v24 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_46;
            }
            if ((*(unsigned char *)(*(void *)(v15 + 32 + 8 * v23)
                           + OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canPerformShiftAction) & 1) != 0)
              break;
            ++v23;
            if (v24 == v16) {
              goto LABEL_20;
            }
          }
LABEL_21:
          char v25 = 1;
          goto LABEL_22;
        }
LABEL_20:
        char v25 = 0;
LABEL_22:
        swift_bridgeObjectRelease_n();
        unsigned int v26 = [v6 enclosedInUIPDocumentLanding];
        if ((v25 & 1) == 0 && v26)
        {
          swift_bridgeObjectRelease();
          unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
        }
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = sub_1004CF6D0();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v27 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v27)
          {
LABEL_27:
            unint64_t v36 = a1;
            uint64_t v37 = a2;
            uint64_t v38 = a3;
            Swift::String v39 = v5;
            if (v27 < 1)
            {
              __break(1u);
              return;
            }
            swift_bridgeObjectRetain_n();
            uint64_t v28 = 0;
            while (1)
            {
              if ((v15 & 0xC000000000000001) != 0) {
                uint64_t v31 = (unsigned char *)sub_1004CF500();
              }
              else {
                uint64_t v31 = *(id *)(v15 + 8 * v28 + 32);
              }
              uint64_t v32 = v31;
              if (objc_msgSend(v6, "isEditing", v36, v37, v38, v39))
              {
                char v33 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x168))();
                v32[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canEnable] = v33 & 1;
                if ((v33 & 1) == 0)
                {
                  uint64_t v29 = 0;
                  goto LABEL_31;
                }
              }
              else
              {
                v32[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canEnable] = 1;
              }
              uint64_t v29 = v32[OBJC_IVAR____TtC14RecentsAvocado30DOCHistoryNavigationButtonItem_canPerformShiftAction];
LABEL_31:
              ++v28;
              id v30 = (objc_class *)type metadata accessor for DOCHistoryNavigationButtonItem();
              v40.receiver = v32;
              v40.super_class = v30;
              objc_msgSendSuper2(&v40, "setEnabled:", v29);

              if (v27 == v28)
              {
                swift_bridgeObjectRelease_n();
                a3 = v38;
                BOOL v5 = v39;
                a1 = v36;
                a2 = v37;
                if (!(v15 >> 62)) {
                  goto LABEL_39;
                }
LABEL_50:
                swift_bridgeObjectRetain();
                uint64_t v34 = sub_1004CF6D0();
                swift_bridgeObjectRelease();
                goto LABEL_40;
              }
            }
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
        if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
          goto LABEL_50;
        }
LABEL_39:
        uint64_t v34 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_40:
        [v5 setLeftItemsSupplementBackButton:v34 == 0];
LABEL_41:
        objc_msgSend(v5, "setHidesBackButton:", objc_msgSend(v6, "hidesNavigationBackButton"));
        if (!(v15 >> 62))
        {
          swift_bridgeObjectRetain();
          sub_1004CF8A0();
          sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
          swift_bridgeObjectRelease();
          unint64_t v35 = v15;
LABEL_43:
          sub_1002D3920(a1, v35);
          swift_bridgeObjectRelease();
          sub_1002D4D40(a2, a3);

          return;
        }
LABEL_47:
        sub_1000333C8(0, (unint64_t *)&qword_100627DB0);
        swift_bridgeObjectRetain();
        unint64_t v35 = sub_1004CF6C0();
        swift_bridgeObjectRelease_n();
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1004CF6D0();
    if (v16) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
}

void sub_100388264()
{
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_eventReporting + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_viewReusing + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_overlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 2;
  v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_allowsPickingMultipleItems] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_forceEditingMode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_containerNavigationItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_isUserInteractionEnabled] = 1;
  v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed] = 1;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado33DOCBrowserContainedViewController_uipDocLandingBackground] = 0;

  sub_1004CF6B0();
  __break(1u);
}

uint64_t sub_1003883A8()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003883E0()
{
}

uint64_t sub_1003883EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003883FC()
{
  return swift_release();
}

uint64_t sub_100388404()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038843C(void *a1)
{
  return sub_100387440(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

objc_class *sub_100388454()
{
  uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v35._countAndFlagsBits = 0x8000000100534330;
    v37._countAndFlagsBits = 0x73746E65636552;
    v37._object = (void *)0xE700000000000000;
    v38._countAndFlagsBits = 0x617A696C61636F4CLL;
    v38._object = (void *)0xEB00000000656C62;
    v2.super.Class isa = v1;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    uint64_t v3 = sub_1004CBEE0(v37, v38, v2, v39, v35);
    uint64_t v5 = v4;

    BOOL v6 = sub_100388854();
    id v7 = (objc_class *)type metadata accessor for DOCEverywhereSearchScope();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    uint64_t v9 = OBJC_IVAR____TtC14RecentsAvocado24DOCEverywhereSearchScope_trashedItemsMembership;
    *(void *)&v8[OBJC_IVAR____TtC14RecentsAvocado24DOCEverywhereSearchScope_trashedItemsMembership] = 1;
    uint64_t v10 = (uint64_t *)&v8[OBJC_IVAR____TtC14RecentsAvocado24DOCEverywhereSearchScope_displayName];
    *uint64_t v10 = v3;
    v10[1] = v5;
    *(void *)&v8[v9] = v6;
    v36.receiver = v8;
    v36.super_class = v7;
    id v11 = objc_msgSendSuper2(&v36, "init");
    uint64_t v12 = sub_1002369D0(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      uint64_t v12 = sub_1002369D0((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    uint64_t v12[2] = v14 + 1;
    unint64_t v15 = &v12[2 * v14];
    v15[4] = v11;
    v15[5] = &off_1005CC810;
    id v16 = sub_100388940();
    if (v16)
    {
      unint64_t v17 = v12[2];
      unint64_t v18 = v12[3];
      id v19 = v16;
      if (v17 >= v18 >> 1) {
        uint64_t v12 = sub_1002369D0((void *)(v18 > 1), v17 + 1, 1, v12);
      }
      uint64_t v12[2] = v17 + 1;
      char v20 = &v12[2 * v17];
      v20[4] = v19;
      v20[5] = &off_1005CC7D0;
    }
    sub_100388B98();
    if (v21)
    {
      uint64_t v23 = v21;
      uint64_t v24 = v22;
      unint64_t v25 = v12[2];
      unint64_t v26 = v12[3];
      swift_unknownObjectRetain();
      if (v25 >= v26 >> 1) {
        uint64_t v12 = sub_1002369D0((void *)(v26 > 1), v25 + 1, 1, v12);
      }
      uint64_t v12[2] = v25 + 1;
      uint64_t v27 = &v12[2 * v25];
      v27[4] = v23;
      v27[5] = v24;
      swift_unknownObjectRelease();
    }
    id v28 = sub_100388E84();
    if (v28)
    {
      id v30 = v28;
      uint64_t v31 = v29;
      unint64_t v32 = v12[2];
      unint64_t v33 = v12[3];
      swift_unknownObjectRetain();
      if (v32 >= v33 >> 1) {
        uint64_t v12 = sub_1002369D0((void *)(v33 > 1), v32 + 1, 1, v12);
      }
      uint64_t v12[2] = v32 + 1;
      uint64_t v34 = &v12[2 * v32];
      v34[4] = v30;
      v34[5] = v31;
      swift_unknownObjectRelease();
    }
    return (objc_class *)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100388814()
{
  unint64_t result = qword_100627D90;
  if (!qword_100627D90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100627D90);
  }
  return result;
}

BOOL sub_100388854()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration);
  NSBundle v2 = *(id *)((char *)v1 + *(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 48));
  if (v2 && ([v2 isTrashed] & 1) != 0) {
    return 0;
  }
  id v4 = [*v1 identifier];
  uint64_t v5 = sub_1004CDB50();
  uint64_t v7 = v6;
  BOOL v3 = (v5 != sub_1004CDB50() || v7 != v8) && (sub_1004CF890() & 1) == 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_100388940()
{
  sub_1003891AC();
  if ((v1 & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v3 = (void *)(v2 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v4 = (void *)v3[1];
    swift_unknownObjectRetain();
    if (v4) {
      goto LABEL_7;
    }
LABEL_15:
    id result = (id)sub_1004CF6B0();
    __break(1u);
    return result;
  }
  id v4 = *(void **)(*v3 + OBJC_IVAR____TtC14RecentsAvocado23DOCFileSystemCollection_observedNode);
  swift_unknownObjectRetain();
LABEL_7:
  id v6 = [v4 providerDomainID];
  swift_unknownObjectRelease();
  sub_1004CDB50();

  NSString v7 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  uint64_t v8 = OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration;
  id v9 = [*(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) displayName];
  uint64_t v10 = sub_1004CDB50();
  uint64_t v12 = v11;

  if (((*(unsigned char *)(v2 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) != 0
     || (id v13 = *(id *)(v2 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type),
         self,
         uint64_t v14 = swift_dynamicCastObjCClass(),
         v13,
         !v14))
    && (id v15 = [*(id *)(v0 + v8) supportedSearchFilters]) != 0)
  {

    char v16 = 1;
  }
  else
  {
    char v16 = 0;
  }
  BOOL v17 = sub_100388854();
  unint64_t v18 = (objc_class *)type metadata accessor for DOCFileProviderSearchScope();
  id v19 = objc_allocWithZone(v18);
  uint64_t v20 = OBJC_IVAR____TtC14RecentsAvocado26DOCFileProviderSearchScope_shouldPerformServerSearch;
  v19[OBJC_IVAR____TtC14RecentsAvocado26DOCFileProviderSearchScope_shouldPerformServerSearch] = 0;
  uint64_t v21 = OBJC_IVAR____TtC14RecentsAvocado26DOCFileProviderSearchScope_trashedItemsMembership;
  *(void *)&v19[OBJC_IVAR____TtC14RecentsAvocado26DOCFileProviderSearchScope_trashedItemsMembership] = 1;
  uint64_t v22 = (uint64_t *)&v19[OBJC_IVAR____TtC14RecentsAvocado26DOCFileProviderSearchScope_displayName];
  uint64_t *v22 = v10;
  v22[1] = v12;
  *(void *)&v19[OBJC_IVAR____TtC14RecentsAvocado26DOCFileProviderSearchScope_providerDomainIdentifier] = v7;
  v19[v20] = v16;
  *(void *)&v19[v21] = v17;
  v23.receiver = v19;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, "init");
}

void sub_100388B98()
{
  uint64_t v1 = v0;
  sub_1003892B8();
  if ((v2 & 1) == 0) {
    return;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (!v3)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = v3 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type);
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v6 = v5;
    uint64_t v11 = sub_100389474();
    uint64_t v13 = v12;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16))
    {
      id v14 = v6;
    }
    else
    {
      id v15 = *(void **)(v3 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type);
      id v16 = v6;
      id v17 = v15;
      self;
      uint64_t v18 = swift_dynamicCastObjCClass();

      if (v18) {
        goto LABEL_13;
      }
    }
    id v19 = [*(id *)(v1 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
    if (v19)
    {

      char v20 = 1;
LABEL_14:
      BOOL v21 = sub_100388854();
      uint64_t v22 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      objc_super v23 = objc_allocWithZone(v22);
      uint64_t v24 = OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v23[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      uint64_t v25 = OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(void *)&v23[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      unint64_t v26 = (uint64_t *)&v23[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_displayName];
      uint64_t *v26 = v11;
      v26[1] = v13;
      uint64_t v27 = &v23[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_source];
      *(void *)uint64_t v27 = v5;
      v27[8] = 1;
      v23[v24] = v20;
      *(void *)&v23[v25] = v21;
      Swift::String v41 = v23;
      id v28 = (objc_super *)&v41;
LABEL_20:
      v28->super_class = v22;
      [(objc_super *)v28 init];

      return;
    }
LABEL_13:
    char v20 = 0;
    goto LABEL_14;
  }
  swift_unknownObjectRetain();
  swift_getObjectType();
  id v6 = (id)sub_1004CED30();
  swift_unknownObjectRelease();
  if (v6)
  {
    uint64_t v7 = sub_100389474();
    uint64_t v9 = v8;
    if (*(unsigned char *)(v4 + 16))
    {
      id v10 = v6;
    }
    else
    {
      uint64_t v29 = *(void **)v4;
      id v30 = v6;
      id v31 = v29;
      self;
      uint64_t v32 = swift_dynamicCastObjCClass();

      if (v32) {
        goto LABEL_18;
      }
    }
    id v33 = [*(id *)(v1 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
    if (v33)
    {

      char v34 = 1;
LABEL_19:
      BOOL v35 = sub_100388854();
      uint64_t v22 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      objc_super v36 = objc_allocWithZone(v22);
      uint64_t v37 = OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v36[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      uint64_t v38 = OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(void *)&v36[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      Swift::String v39 = (uint64_t *)&v36[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_displayName];
      uint64_t *v39 = v7;
      v39[1] = v9;
      objc_super v40 = &v36[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_source];
      *(void *)objc_super v40 = v6;
      v40[8] = 0;
      v36[v37] = v34;
      *(void *)&v36[v38] = v35;
      v42.receiver = v36;
      id v28 = &v42;
      goto LABEL_20;
    }
LABEL_18:
    char v34 = 0;
    goto LABEL_19;
  }
}

id sub_100388E84()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
  uint64_t v2 = sub_1004CDB50();
  uint64_t v4 = v3;
  if (v2 == sub_1004CDB50() && v4 == v5)
  {

    id result = (id)swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_1004CF890();

    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (v9)
  {
    uint64_t v10 = v9 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type;
    if (*(unsigned char *)(v10 + 16)) {
      return 0;
    }
    id v11 = *(id *)v10;
    id v12 = *(id *)v10;
    uint64_t v13 = sub_100389474();
    uint64_t v15 = v14;
    id v16 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
    id v17 = objc_allocWithZone(v16);
    uint64_t v18 = OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_shouldPerformServerSearch;
    v17[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
    uint64_t v19 = OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_trashedItemsMembership;
    *(void *)&v17[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
    char v20 = (uint64_t *)&v17[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_displayName];
    *char v20 = v13;
    v20[1] = v15;
    BOOL v21 = &v17[OBJC_IVAR____TtC14RecentsAvocado28DOCItemCollectionSearchScope_source];
    *(void *)BOOL v21 = v11;
    v21[8] = 1;
    v17[v18] = 0;
    *(void *)&v17[v19] = 2;
    v22.receiver = v17;
    v22.super_class = v16;
    return objc_msgSendSuper2(&v22, "init");
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100389020()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type;
    if ((*(unsigned char *)(v2 + 16) & 1) != 0
      || (v3 = *(id *)v2, self, uint64_t v4 = swift_dynamicCastObjCClass(), v3, !v4))
    {
      char v12 = 0;
      return v12 & 1;
    }
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration)
       + OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_type;
    if (*(unsigned char *)(v5 + 8))
    {
      id v6 = *(void **)v5;
      uint64_t v7 = sub_1004CDB50();
      uint64_t v9 = v8;
      if (v7 == sub_1004CDB50() && v9 == v10) {
        char v12 = 1;
      }
      else {
        char v12 = sub_1004CF890();
      }
      id v13 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v12 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_1004CF6B0();
  __break(1u);
  return result;
}

void sub_1003891AC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) == 0)
  {
    if (!swift_unknownObjectRetain()) {
      return;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v2 = OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration;
  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
  if (v3)
  {

    id v4 = [*(id *)(v0 + v2) supportedSearchFilters];
    if (v4)
    {
      uint64_t v5 = v4;
      type metadata accessor for NSFileProviderSearchFilter(0);
      uint64_t v6 = sub_1004CDE30();

      uint64_t v7 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      if (!v7) {
        return;
      }
      goto LABEL_8;
    }
LABEL_14:
    __break(1u);
    return;
  }
LABEL_8:
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) == 0)
  {
    if (swift_unknownObjectRetain()) {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1003892B8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16)) {
    goto LABEL_5;
  }
  if (!swift_unknownObjectRetain()) {
    goto LABEL_7;
  }
  swift_unknownObjectRelease();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16))
  {
LABEL_5:
    id v3 = *(void **)(*v2 + OBJC_IVAR____TtC14RecentsAvocado23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    id v3 = (void *)v2[1];
    swift_unknownObjectRetain();
    if (!v3) {
      goto LABEL_12;
    }
  }
  unsigned __int8 v4 = [v3 isRootItem];
  swift_unknownObjectRelease();
  if ((v4 & 1) == 0)
  {
LABEL_12:
    uint64_t v7 = OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration;
    id v8 = [*(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
    if (!v8) {
      return;
    }

    id v9 = [*(id *)(v0 + v7) supportedSearchFilters];
    if (v9)
    {
      uint64_t v10 = v9;
      type metadata accessor for NSFileProviderSearchFilter(0);
      uint64_t v11 = sub_1004CDE30();

      id v12 = NSFileProviderSearchFilterScopedToDirectory;
      sub_1001098A4(v12, v11);
      swift_bridgeObjectRelease();

      return;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_7:
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v5 = *(id *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type);
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();

    if (v6) {
      sub_100389020();
    }
  }
}

uint64_t sub_100389474()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_1004CF6B0();
    __break(1u);
    return result;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16) & 1) != 0
    || (id v2 = *(id *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type),
        self,
        uint64_t v3 = swift_dynamicCastObjCClass(),
        v2,
        !v3))
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
    uint64_t v5 = sub_1004CDB50();
    uint64_t v7 = v6;
    if (v5 == sub_1004CDB50() && v7 == v8)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = sub_1004CF890();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        uint64_t v11 = v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type;
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_type + 16))
        {
LABEL_12:
          id v12 = *(void **)(*(void *)v11 + OBJC_IVAR____TtC14RecentsAvocado23DOCFileSystemCollection_observedNode);
          swift_unknownObjectRetain();
LABEL_23:
          id v22 = [v12 displayName];
          swift_unknownObjectRelease();
          sub_1004CDB50();

          uint64_t v23 = sub_1004CDC40();
          swift_bridgeObjectRelease();
          return v23;
        }
        if (swift_unknownObjectRetain())
        {
          swift_unknownObjectRelease();
          if (*(unsigned char *)(v11 + 16)) {
            goto LABEL_12;
          }
          id v12 = *(void **)(v11 + 8);
          swift_unknownObjectRetain();
          if (v12) {
            goto LABEL_23;
          }
        }
        goto LABEL_25;
      }
    }
  }
  uint64_t v13 = v0 + OBJC_IVAR____TtC14RecentsAvocado31DOCItemCollectionViewController_itemCollectionConfiguration;
  uint64_t v14 = *(void **)(v13 + 24);
  if (!v14)
  {
LABEL_20:
    id v20 = [*(id *)v13 displayName];
    uint64_t v21 = sub_1004CDB50();

    return v21;
  }
  id v15 = v14;
  id v16 = [v15 displayName];
  if (!v16)
  {

    goto LABEL_20;
  }
  id v17 = v16;
  uint64_t v18 = sub_1004CDB50();

  if ([v15 isTaggedItemsSource])
  {
    uint64_t v18 = sub_1004CDC40();

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v18;
}

uint64_t sub_1003897B4(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = sub_100031648((uint64_t *)&unk_10062CCD0);
  __chkstk_darwin(v10 - 8);
  id v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for DOCItemCollectionConfiguration();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  id v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v42[-v17];
  id v19 = [a2 browserViewContext];
  id v44 = a1;
  if (!v19)
  {
LABEL_6:
    int v20 = 2;
    goto LABEL_7;
  }
  if (v19 != (id)1)
  {
    if (v19 == (id)2)
    {
      uint64_t result = sub_1004CF6B0();
      __break(1u);
      return result;
    }
    id v21 = [a2 browserViewContext];
    type metadata accessor for DOCBrowserViewContext(0);
    v48[3] = v22;
    v48[0] = v21;
    sub_1004CC5F0();
    sub_100039184((uint64_t)v48);
    goto LABEL_6;
  }
  int v20 = 3;
LABEL_7:
  int v43 = v20;
  id v45 = a3;
  id v46 = a4;
  id v47 = a5;
  id v23 = [self searchLocation];
  if (qword_1006268E0 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)static DOCFileProviderSource.searchSource;
  uint64_t v25 = sub_1004CBA70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
  uint64_t v26 = sub_1004CDB50();
  id v28 = v27;
  id v29 = v24;
  id v30 = a2;
  id v31 = v23;
  id v32 = v44;
  id v33 = v44;
  DOCItemCollectionConfiguration.init(source:configuration:context:initialLocation:defaultSorting:searchStartLocation:viewAccessibilityIdentifier:isBrowsingTrash:)(v29, v30, v43, v23, (uint64_t)v12, v32, v26, v28, (uint64_t)v18, 0);
  sub_10003F83C((uint64_t)v18, (uint64_t)v16);
  id v34 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionViewController(0));
  id v35 = v45;
  id v36 = v47;
  id v37 = v47;
  id v38 = v46;
  id v39 = v46;
  uint64_t v40 = sub_10012B6E0((uint64_t)v16, v35, v38, v36);

  sub_10003F8A0((uint64_t)v18);
  return v40;
}

id DOCFileOperationsManager.__allocating_init(serviceImpl:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_1000C8128(a1, v3);
  id v6 = sub_10038CA84(v5, v1, v3, v4);
  sub_100039184(a1);
  return v6;
}

uint64_t sub_100389B38(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1004CF6D0();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_14;
    }
  }
  if (v5 < 1) {
    goto LABEL_19;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      sub_1004CF500();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      sub_1004CF570();
    }
    else
    {
      swift_release();
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  *uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v8 = sub_10038CDCC(v3, a1);
  uint64_t result = swift_unknownObjectRelease();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1004CF6D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 >= v8) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v8)
    {
LABEL_16:
      sub_1002D58A0(v8, v9);
      return swift_endAccess();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_100389D50(int a1)
{
  uint64_t v2 = v1;
  int v43 = a1;
  uint64_t v3 = sub_1004CAC10();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v42 - v10;
  id v12 = (void *)(v1 + *(void *)(*(void *)v1 + 352));
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  uint64_t v15 = sub_100032FD8(v12, v13);
  uint64_t v16 = *(void *)(v13 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - v17;
  (*(void (**)(char *))(v16 + 16))((char *)&v42 - v17);
  id v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v13);
  id v20 = [v19 fileURL];

  if (v20)
  {
    sub_1004CABC0();

    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, v21, 1, v3);
  sub_100269F4C((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
  {
    sub_100049B74((uint64_t)v11, (uint64_t *)&unk_10062B3B0);
    uint64_t v22 = (void *)0xE500000000000000;
    uint64_t v23 = 0x273F3F3F27;
  }
  else
  {
    uint64_t v24 = v44;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v44, v11, v3);
    sub_100049B74((uint64_t)v11, (uint64_t *)&unk_10062B3B0);
    uint64_t v23 = sub_1004CAB50();
    uint64_t v22 = v25;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v24, v3);
  }
  sub_100033138(v2 + *(void *)(*(void *)v2 + 320), (uint64_t)&v45);
  sub_1004CF430();
  sub_100033194((uint64_t)&v45);
  sub_100030CB4(6);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  id v44 = (char *)v23;
  uint64_t v42 = v27;
  if (v43)
  {
    uint64_t v45 = 32;
    unint64_t v46 = 0xE100000000000000;
    uint64_t v28 = v12[3];
    uint64_t v29 = v12[4];
    id v30 = sub_100032FD8(v12, v28);
    uint64_t v31 = *(void *)(v28 - 8);
    __chkstk_darwin(v30);
    id v33 = (char *)&v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v33);
    id v34 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v28);
    id v35 = objc_msgSend(v34, "description", v42);

    uint64_t v36 = sub_1004CDB50();
    id v38 = v37;

    v47._countAndFlagsBits = v36;
    v47._object = v38;
    sub_1004CDCD0(v47);
    swift_bridgeObjectRelease();
    v48._countAndFlagsBits = 59;
    v48._object = (void *)0xE100000000000000;
    sub_1004CDCD0(v48);
    uint64_t v40 = v45;
    id v39 = (void *)v46;
  }
  else
  {
    uint64_t v40 = 0;
    id v39 = (void *)0xE000000000000000;
  }
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_1004CF4D0(44);
  swift_bridgeObjectRelease();
  uint64_t v45 = 60;
  unint64_t v46 = 0xE100000000000000;
  v49._countAndFlagsBits = sub_1004CFB00();
  sub_1004CDCD0(v49);
  swift_bridgeObjectRelease();
  v50._countAndFlagsBits = 0x496775626564203ALL;
  v50._object = (void *)0xEC000000203D2044;
  sub_1004CDCD0(v50);
  swift_bridgeObjectRetain();
  v51._countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = 0x203D204449706F20;
  v52._object = (void *)0xE800000000000000;
  sub_1004CDCD0(v52);
  v53._countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = 0x3D20656C6966203BLL;
  v54._object = (void *)0xEA00000000002720;
  sub_1004CDCD0(v54);
  v55._countAndFlagsBits = (uint64_t)v44;
  v55._object = v22;
  sub_1004CDCD0(v55);
  swift_bridgeObjectRelease();
  v56._countAndFlagsBits = 15143;
  v56._object = (void *)0xE200000000000000;
  sub_1004CDCD0(v56);
  v57._countAndFlagsBits = v40;
  v57._object = v39;
  sub_1004CDCD0(v57);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 62;
  v58._object = (void *)0xE100000000000000;
  sub_1004CDCD0(v58);
  return v45;
}

id DOCFileOperationsManager.init(serviceImpl:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_1000C8128(a1, v3);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  id v9 = sub_10038C8D0((uint64_t)v7, v1, v3, v4);
  sub_100039184(a1);
  return v9;
}

uint64_t DOCFileOperationsManager.unorderedFileOperations.getter()
{
  uint64_t v1 = type metadata accessor for DOCFileOperation();
  uint64_t v30 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_trackedItemsByID);
  swift_beginAccess();
  uint64_t v5 = *v4;
  int64_t v6 = *(void *)(*v4 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  id v39 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_100188338(0, v6, 0);
  uint64_t result = sub_10038C5FC(v5);
  uint64_t v9 = result;
  int v11 = v10;
  uint64_t v12 = 0;
  uint64_t v13 = v5 + 64;
  char v14 = *(unsigned char *)(v5 + 32);
  uint64_t v27 = v5 + 80;
  uint64_t v29 = v3;
  int64_t v28 = v6;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << v14)
  {
    unint64_t v17 = (unint64_t)v9 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(v5 + 36) != v11) {
      goto LABEL_27;
    }
    sub_100033138(*(void *)(v5 + 48) + 40 * v9, (uint64_t)v37);
    uint64_t v38 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
    uint64_t v18 = v38;
    sub_100033138((uint64_t)v37, (uint64_t)v35);
    *((void *)&v36 + 1) = v18;
    v33[0] = v35[0];
    v33[1] = v35[1];
    long long v34 = v36;
    swift_retain_n();
    sub_100049B74((uint64_t)v37, &qword_100637308);
    sub_100033138((uint64_t)v33, (uint64_t)v31);
    uint64_t v32 = *((void *)&v34 + 1);
    sub_1000EE730(*((void *)&v34 + 1) + *(void *)(**((void **)&v34 + 1) + 312), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    sub_100033194((uint64_t)v31);
    sub_100049B74((uint64_t)v33, &qword_100637308);
    uint64_t v7 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100188338(0, v7[2] + 1, 1);
      uint64_t v7 = v39;
    }
    unint64_t v20 = v7[2];
    unint64_t v19 = v7[3];
    if (v20 >= v19 >> 1)
    {
      sub_100188338(v19 > 1, v20 + 1, 1);
      uint64_t v7 = v39;
    }
    uint64_t v7[2] = v20 + 1;
    uint64_t v21 = (uint64_t)v7
        + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))
        + *(void *)(v30 + 72) * v20;
    uint64_t v3 = v29;
    uint64_t result = sub_1000EE6CC((uint64_t)v29, v21);
    char v14 = *(unsigned char *)(v5 + 32);
    unint64_t v15 = 1 << v14;
    if (v9 >= 1 << v14) {
      goto LABEL_28;
    }
    uint64_t v22 = *(void *)(v13 + 8 * v17);
    if ((v22 & (1 << v9)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(v5 + 36) != v11) {
      goto LABEL_30;
    }
    unint64_t v23 = v22 & (-2 << (v9 & 0x3F));
    if (v23)
    {
      unint64_t v15 = __clz(__rbit64(v23)) | v9 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v28;
    }
    else
    {
      unint64_t v24 = v17 + 1;
      unint64_t v25 = (v15 + 63) >> 6;
      int64_t v16 = v28;
      if (v17 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v13 + 8 * v24);
        if (v26)
        {
LABEL_22:
          unint64_t v15 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v17)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v17++);
            if (v26)
            {
              unint64_t v24 = v17 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    uint64_t v9 = v15;
    if (v12 == v16)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t DOCFileOperationsManager.addObserver(_:)(uint64_t a1)
{
  swift_getObjectType();
  return sub_10038C684(a1, v1);
}

uint64_t DOCFileOperationsManager.removeObserver(_:)(uint64_t a1)
{
  swift_retain();
  sub_100389B38(a1);
  swift_release();
  return sub_10038AFE8();
}

uint64_t sub_10038A904()
{
  uint64_t v1 = sub_100031648(&qword_100637378);
  __chkstk_darwin(v1 - 8);
  uint64_t v38 = (uint64_t)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1004CADE0();
  uint64_t v35 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v36 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updateCGFloat d = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
  uint64_t v33 = *(void *)(updated - 8);
  uint64_t v34 = updated;
  __chkstk_darwin(updated);
  int64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100031648((uint64_t *)&unk_100629AC0);
  __chkstk_darwin(v7 - 8);
  id v37 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (unint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers) + 16);
  swift_beginAccess();
  unint64_t v10 = *v9;
  Swift::String v41 = _swiftEmptyArrayStorage;
  if (v10 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1004CF6D0();
    uint64_t v11 = result;
    uint64_t v40 = v0;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    char v14 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v40 = v0;
  if (!v11) {
    goto LABEL_14;
  }
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      sub_1004CF500();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      sub_1004CF570();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v0 = v40;
  char v14 = v41;
LABEL_15:
  *uint64_t v9 = (unint64_t)v14;
  swift_bridgeObjectRelease();
  if (!(*v9 >> 62))
  {
    uint64_t v15 = *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_release();
    if (v15 != 1) {
      return result;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1004CF6D0();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v31 == 1)
  {
LABEL_17:
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_impl;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t v19 = *(void *)(v17 + 32);
    sub_1000C8128(v17, v18);
    unint64_t v20 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v19 + 24);
    swift_retain();
    v20(sub_10038D5D0, v16, v18, v19);
    swift_endAccess();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_10038D5D0;
    *(void *)(v21 + 24) = v16;
    v32[1] = v16;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = (uint64_t)v6;
    _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
    uint64_t v23 = v34;
    unint64_t v24 = (uint64_t (**)())&v6[*(int *)(v34 + 20)];
    *unint64_t v24 = sub_100049C64;
    v24[1] = (uint64_t (*)())v21;
    uint64_t v26 = v35;
    uint64_t v25 = (uint64_t)v36;
    v32[0] = *(void *)(v35 + 16);
    uint64_t v27 = v39;
    ((void (*)(char *, uint64_t, uint64_t))v32[0])(v36, v22, v39);
    uint64_t v28 = v38;
    sub_1000EE730(v22, v38, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v23);
    swift_beginAccess();
    sub_1003A36E8(v28, v25);
    swift_endAccess();
    uint64_t v29 = (uint64_t)v37;
    ((void (*)(char *, uint64_t, uint64_t))v32[0])(v37, v22, v27);
    sub_10038D610(v22, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v27);
    uint64_t v30 = v40 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_testablesProviderObservance;
    swift_beginAccess();
    sub_10038D670(v29, v30);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void sub_10038AED0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    os_log_type_t v2 = sub_1004CE380();
    sub_10038C2E0(v2, 0xD00000000000001BLL, 0x80000001005345E0);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    aBlock[4] = sub_10038D710;
    void aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A422C;
    void aBlock[3] = &unk_1005D11F8;
    uint64_t v4 = _Block_copy(aBlock);
    id v5 = v1;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v4);
  }
}

uint64_t sub_10038AFE8()
{
  uint64_t v1 = sub_100031648(&qword_100637378);
  __chkstk_darwin(v1 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100031648((uint64_t *)&unk_100629AC0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v32 = (uint64_t)&v27 - v6;
  uint64_t v7 = sub_1004CADE0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v0;
  unint64_t v10 = (unint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers)
                           + 16);
  swift_beginAccess();
  unint64_t v11 = *v10;
  uint64_t v34 = _swiftEmptyArrayStorage;
  if (v11 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1004CF6D0();
    uint64_t v12 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_14;
  }
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v31 = v8;
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0) {
      sub_1004CF500();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      sub_1004CF570();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v34;
  uint64_t v8 = v31;
LABEL_15:
  *unint64_t v10 = (unint64_t)v15;
  swift_bridgeObjectRelease();
  if (*v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1004CF6D0();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v26) {
      return result;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_release();
    if (v16) {
      return result;
    }
  }
  uint64_t v17 = v33;
  uint64_t v18 = v33 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_impl;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 24);
  uint64_t v20 = *(void *)(v18 + 32);
  sub_1000C8128(v18, v19);
  (*(void (**)(void, void, uint64_t, uint64_t))(v20 + 24))(0, 0, v19, v20);
  swift_endAccess();
  uint64_t v21 = v17 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_testablesProviderObservance;
  swift_beginAccess();
  uint64_t v22 = v32;
  sub_1000C34E4(v21, v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v7) == 1) {
    return sub_100049B74(v22, (uint64_t *)&unk_100629AC0);
  }
  uint64_t v23 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v28, v22, v7);
  swift_beginAccess();
  swift_retain();
  uint64_t v24 = v29;
  sub_1003B3E2C(v23, v29);
  sub_100049B74(v24, &qword_100637378);
  swift_endAccess();
  swift_release();
  uint64_t v25 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v30, 1, 1, v7);
  swift_beginAccess();
  sub_10038D670(v25, v21);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v23, v7);
}

void sub_10038B4C8()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_needsUpdate) == 1)
  {
    uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_hasUpdateInProgress;
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_hasUpdateInProgress) & 1) == 0)
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_needsUpdate) = 0;
      *(unsigned char *)(v0 + v1) = 1;
      uint64_t v2 = v0 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_impl;
      swift_beginAccess();
      sub_100049660(v2, (uint64_t)&v14);
      sub_100031648(&qword_100637370);
      uint64_t v3 = sub_1004CDBA0();
      uint64_t v5 = v4;
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_1004CF4D0(38);
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD000000000000024;
      unint64_t v15 = 0x8000000100534510;
      v18._countAndFlagsBits = v3;
      v18._object = v5;
      sub_1004CDCD0(v18);
      uint64_t v6 = v14;
      unint64_t v7 = v15;
      os_log_type_t v8 = sub_1004CE380();
      sub_10038C2E0(v8, v6, v7);
      swift_bridgeObjectRelease();
      sub_100049660(v2, (uint64_t)&v14);
      uint64_t v9 = v16;
      uint64_t v10 = v17;
      sub_100032FD8(&v14, v16);
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = (void *)swift_allocObject();
      uint64_t v12[2] = v11;
      v12[3] = v3;
      v12[4] = v5;
      uint64_t v13 = *(void (**)(void (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(v10 + 8);
      swift_retain();
      v13(sub_10038CD54, v12, v9, v10);
      swift_release();
      swift_release();
      sub_100039184((uint64_t)&v14);
    }
  }
}

void sub_10038B6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    if (a2)
    {
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v11 = sub_1004CF940();
      uint64_t v13 = v12;
      os_log_type_t v14 = sub_1004CE370();
      uint64_t aBlock = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1004CF4D0(60);
      v24._object = (void *)0x8000000100534540;
      v24._countAndFlagsBits = 0xD00000000000003ALL;
      sub_1004CDCD0(v24);
      v25._countAndFlagsBits = v11;
      v25._object = v13;
      sub_1004CDCD0(v25);
      swift_bridgeObjectRelease();
      sub_10038C2E0(v14, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      unint64_t v15 = (void *)swift_allocObject();
      v15[2] = v10;
      void v15[3] = a4;
      v15[4] = a5;
      v15[5] = a1;
      uint64_t v22 = sub_10038CDA8;
      uint64_t v23 = v15;
      uint64_t aBlock = _NSConcreteStackBlock;
      unint64_t v19 = 1107296256;
      uint64_t v20 = sub_1003A422C;
      uint64_t v21 = &unk_1005D1158;
      uint64_t v16 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      id v17 = v10;
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v16);
    }
  }
}

uint64_t sub_10038B880(char *a1, uint64_t a2, void *a3, void *a4)
{
  sub_1004CF4D0(40);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = a2;
  v17._object = a3;
  sub_1004CDCD0(v17);
  v18._countAndFlagsBits = 8250;
  v18._object = (void *)0xE200000000000000;
  sub_1004CDCD0(v18);
  if (a4)
  {
    type metadata accessor for DOCFileOperation();
    v8._countAndFlagsBits = sub_1004CDE40();
    object = v8._object;
    uint64_t v10 = a4;
  }
  else
  {
    object = (void *)0xE500000000000000;
    v8._countAndFlagsBits = 0x2A6C696E2ALL;
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  v8._object = object;
  sub_1004CDCD0(v8);
  swift_bridgeObjectRelease();
  os_log_type_t v11 = sub_1004CE380();
  sub_10038C2E0(v11, 0xD000000000000022, 0x8000000100534580);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_testablesProvider];
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100109104(v13);
  os_log_type_t v14 = a1;
  swift_bridgeObjectRetain();
  sub_10038D1A0((uint64_t)v14, v14, (uint64_t)v10);
  swift_bridgeObjectRelease();

  uint64_t v15 = swift_bridgeObjectRelease_n();
  v14[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_hasUpdateInProgress] = 0;
  return sub_10038B4C8(v15);
}

uint64_t sub_10038BA28(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for DOCFileOperation();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  os_log_type_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  os_log_type_t v14 = (char *)&v35 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - v15;
  sub_100033138(a1, (uint64_t)v39);
  if (*(void *)(a2 + 16) && (unint64_t v17 = sub_1001DB308((uint64_t)v39), (v18 & 1) != 0))
  {
    uint64_t v19 = *(void *)(*(void *)(a2 + 56) + 8 * v17);
    swift_retain();
  }
  else
  {
    sub_1000EE730(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    type metadata accessor for DOCFileOperationProgress(0);
    uint64_t v20 = swift_allocObject();
    sub_1000EE730((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    sub_1000EE730((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    uint64_t v19 = sub_100370838((uint64_t)v14, (uint64_t)v11, (uint64_t)&off_1005B5730, v20);
    sub_10038D610((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    swift_beginAccess();
    int v21 = *(unsigned __int8 *)(v19 + 24);
    *(unsigned char *)(v19 + 24) = 1;
    if (v21 != 1) {
      sub_1003C9E1C();
    }
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100033138((uint64_t)v39, (uint64_t)v37);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    long long v24 = v37[1];
    *(_OWORD *)(v23 + 24) = v37[0];
    *(_OWORD *)(v23 + 40) = v24;
    *(void *)(v23 + 56) = v38;
    Swift::String v25 = (uint64_t *)(v19 + direct field offset for DOCOperationProgress.updateHandler);
    swift_beginAccess();
    uint64_t v26 = *v25;
    uint64_t *v25 = (uint64_t)sub_10038D5BC;
    v25[1] = v23;
    sub_1000388F0(v26);
    *(void *)&v37[0] = 0;
    *((void *)&v37[0] + 1) = 0xE000000000000000;
    sub_1004CF4D0(37);
    id v27 = [a3 description];
    uint64_t v28 = sub_1004CDB50();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();

    *(void *)&v37[0] = v28;
    *((void *)&v37[0] + 1) = v30;
    v40._object = (void *)0x80000001005345B0;
    v40._countAndFlagsBits = 0xD000000000000021;
    sub_1004CDCD0(v40);
    v41._countAndFlagsBits = sub_100389D50(0);
    sub_1004CDCD0(v41);
    swift_bridgeObjectRelease();
    long long v31 = v37[0];
    os_log_type_t v32 = sub_1004CE380();
    sub_10038C2E0(v32, v31, *((unint64_t *)&v31 + 1));
    swift_bridgeObjectRelease();
  }
  sub_100033138((uint64_t)v39, (uint64_t)v37);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = *a4;
  *a4 = 0x8000000000000000;
  sub_10021DBCC(v19, (uint64_t)v37, isUniquelyReferenced_nonNull_native);
  *a4 = v36;
  swift_bridgeObjectRelease();
  sub_100033194((uint64_t)v37);
  swift_release();
  return sub_100033194((uint64_t)v39);
}

void sub_10038BDA4(unsigned char *a1)
{
  if ((a1[*(void *)(*(void *)a1 + 336)] & 0xFE) != 2)
  {
    swift_beginAccess();
    char v2 = a1[24];
    a1[24] = 0;
    if (v2)
    {
      type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
      swift_retain();
      sub_100031648(&qword_100639210);
      swift_dynamicCast();
      uint64_t v3 = v8;
      uint64_t v4 = v9;
      sub_100032FD8(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
      sub_100039184((uint64_t)v7);
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = (void *)Strong;
      __chkstk_darwin(Strong);
      sub_10038BF08((void (*)(void))sub_10038D5C8);
    }
  }
}

uint64_t sub_10038BF08(void (*a1)(void))
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100022F28(v4);
  a1();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_100022F28(v6);
  LOBYTE(a1) = sub_1002B3A0C(v7, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers) + 16);
    swift_beginAccess();
    uint64_t v10 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1004CF6D0();
      uint64_t v11 = result;
      if (!result) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_15;
      }
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_30;
    }
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        sub_1004CF500();
      }
      else {
        swift_retain();
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_unknownObjectRelease();
        sub_1004CF560();
        sub_1004CF5A0();
        sub_1004CF5B0();
        sub_1004CF570();
      }
      else
      {
        swift_release();
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    *uint64_t v9 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v13 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1004CF6D0();
      uint64_t v14 = result;
      if (result)
      {
LABEL_17:
        if (v14 >= 1)
        {
          for (uint64_t j = 0; j != v14; ++j)
          {
            if ((v13 & 0xC000000000000001) != 0) {
              sub_1004CF500();
            }
            else {
              swift_retain();
            }
            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              [Strong didUpdateInProgressOperationsIn:v2];
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_27;
        }
LABEL_30:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v14) {
        goto LABEL_17;
      }
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_10038C1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_trackedItemsByID);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001DB308(a2);
  LOBYTE(a2) = v5;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10049F55C();
      uint64_t v7 = v9;
    }
    sub_100033194(*(void *)(v7 + 48) + 40 * v4);
    sub_100498A80(v4, v7);
    *uint64_t v3 = v7;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10038C2E0(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_100626888 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1006505F8;
  uint64_t result = os_log_type_enabled((os_log_t)qword_1006505F8, a1);
  if (result)
  {
    id v9 = v3;
    swift_bridgeObjectRetain_n();
    id v10 = v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412546;
    id v13 = v10;
    sub_1004CF1F0();
    *uint64_t v12 = v10;

    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100187CC4(a2, a3, &v14);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, a1, "[%@] %s", (uint8_t *)v11, 0x16u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    return swift_slowDealloc();
  }
  return result;
}

void DOCFileOperationsManager.init()()
{
}

id DOCFileOperationsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileOperationsManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10038C5FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10038C684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers;
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers);
  swift_beginAccess();
  unint64_t v6 = *(void *)(v5 + 16);
  char v18 = _swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1004CF6D0();
    uint64_t v7 = result;
    uint64_t v17 = v4;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v10 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = v4;
  if (!v7) {
    goto LABEL_14;
  }
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = a1;
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      sub_1004CF500();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      sub_1004CF560();
      sub_1004CF5A0();
      sub_1004CF5B0();
      sub_1004CF570();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = v18;
  a1 = v16;
LABEL_15:
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v5 + 16);
  __chkstk_darwin(v11);
  v15[2] = a1;
  swift_bridgeObjectRetain();
  char v13 = sub_100124948((uint64_t (*)(uint64_t *))sub_100035FC0, (uint64_t)v15, v12);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    uint64_t v14 = *(void *)(a2 + v17);
    swift_retain();
    sub_10005DC48(a1, v14);
    swift_release();
    sub_10038B4C8();
    return sub_10038A904();
  }
  return result;
}

id sub_10038C8D0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  void v17[3] = a3;
  v17[4] = a4;
  uint64_t v7 = sub_10005AE54(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v7, a1, a3);
  uint64_t v8 = OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_trackedItemsByID;
  id v9 = a2;
  *(void *)&a2[v8] = sub_10001E8EC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers;
  sub_100031648(&qword_100626BF8);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v9[v10] = v11;
  unint64_t v12 = &v9[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_testablesProviderObservance];
  uint64_t v13 = sub_1004CADE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v9[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_needsUpdate] = 1;
  v9[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_hasUpdateInProgress] = 0;
  sub_100049660((uint64_t)v17, (uint64_t)&v9[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_impl]);
  if (qword_100626770 != -1) {
    swift_once();
  }
  *(void *)&v9[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_testablesProvider] = qword_1006502D0;
  swift_retain();

  v16.receiver = v9;
  v16.super_class = (Class)type metadata accessor for DOCFileOperationsManager();
  id v14 = objc_msgSendSuper2(&v16, "init");
  sub_100039184((uint64_t)v17);
  return v14;
}

id sub_10038CA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  id v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCFileOperationsManager());
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_10038C8D0((uint64_t)v9, v10, a3, a4);
}

uint64_t type metadata accessor for DOCFileOperationsManager()
{
  uint64_t result = qword_100637360;
  if (!qword_100637360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10038CBB8()
{
  return type metadata accessor for DOCFileOperationsManager();
}

void sub_10038CBC0()
{
  sub_10038CC84();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10038CC84()
{
  if (!qword_10063B860)
  {
    sub_1004CADE0();
    unint64_t v0 = sub_1004CF1C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10063B860);
    }
  }
}

uint64_t sub_10038CCDC()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038CD14()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10038CD54(uint64_t a1, uint64_t a2)
{
  sub_10038B6A4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10038CD60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10038CDA8()
{
  return sub_10038B880(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10038CDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10038CDC4()
{
  return swift_release();
}

uint64_t sub_10038CDCC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_64;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_3:
    unint64_t v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        sub_1004CF500();
      }
      else {
        swift_retain();
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      swift_release();
      if (Strong)
      {
        swift_unknownObjectRelease();
        if (Strong == a2) {
          break;
        }
      }
      unint64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1004CF6D0();
        if (!v5) {
          goto LABEL_11;
        }
        goto LABEL_3;
      }
      ++v6;
      if (v8 == v5) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else if (!((unint64_t)*a1 >> 62))
    {
      if (v11 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v4 = i - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            sub_1004CF500();
          }
          else
          {
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_54;
            }
            if (v4 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_55;
            }
            swift_retain();
          }
          uint64_t v13 = swift_unknownObjectWeakLoadStrong();
          swift_release();
          if (v13)
          {
            swift_unknownObjectRelease();
            if (v13 == a2) {
              goto LABEL_44;
            }
          }
          if (v4 != v6) {
            break;
          }
LABEL_43:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_57;
          }
LABEL_44:
          unint64_t v21 = i - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_56;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v22 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v21 == v22) {
            return v6;
          }
        }
        uint64_t v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = sub_1004CF500();
          uint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_29:
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_60;
            }
            if (v4 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_61;
            }
            uint64_t v16 = *(void *)(v14 + 8 * i);
            swift_retain();
            goto LABEL_32;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_58;
          }
          if (v6 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_59;
          }
          uint64_t v15 = *(void *)(v14 + 8 * v6 + 32);
          swift_retain();
          if ((v14 & 0xC000000000000001) == 0) {
            goto LABEL_29;
          }
        }
        uint64_t v16 = sub_1004CF500();
        uint64_t v14 = *a1;
LABEL_32:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v14;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v14 < 0 || (v14 & 0x4000000000000000) != 0)
        {
          uint64_t v14 = sub_10038478C(v14);
          *a1 = v14;
        }
        *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;
        swift_release();
        sub_1004CDE50();
        uint64_t v18 = *a1;
        int v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v18;
        if (!v19 || v18 < 0 || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v18 = sub_10038478C(v18);
          *a1 = v18;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_62;
        }
        if (v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_63;
        }
        *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v15;
        swift_release();
        sub_1004CDE50();
        goto LABEL_43;
      }
      return v6;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v11 != v24) {
      goto LABEL_17;
    }
    return v6;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  unint64_t v9 = *a1;
  if (!(v9 >> 62)) {
    return *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10038D1A0(uint64_t a1, char *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_100022F28(v5);
  uint64_t v7 = (uint64_t *)&a2[OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_trackedItemsByID];
  swift_beginAccess();
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_10001E8EC((uint64_t)_swiftEmptyArrayStorage);
  v28[0] = v9;
  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(type metadata accessor for DOCFileOperation() - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10038BA28(v12, v8, a2, (uint64_t *)v28);
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v28[0];
  }
  else
  {
    uint64_t v14 = v9;
    swift_bridgeObjectRelease();
  }
  *uint64_t v7 = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_100022F28(v15);
  char v17 = sub_1002B3A0C(v16, v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    int v19 = (uint64_t *)(*(void *)(a1 + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_observers) + 16);
    swift_beginAccess();
    uint64_t v20 = *v19;
    if ((unint64_t)*v19 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1004CF6D0();
      uint64_t v21 = result;
      if (!result) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_20;
      }
    }
    if (v21 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }
    for (uint64_t i = 0; i != v21; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0) {
        sub_1004CF500();
      }
      else {
        swift_retain();
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_unknownObjectRelease();
        sub_1004CF560();
        sub_1004CF5A0();
        sub_1004CF5B0();
        sub_1004CF570();
      }
      else
      {
        swift_release();
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    *int v19 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v23 = *v19;
    if ((unint64_t)*v19 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1004CF6D0();
      uint64_t v24 = result;
      if (result)
      {
LABEL_22:
        if (v24 >= 1)
        {
          for (uint64_t j = 0; j != v24; ++j)
          {
            if ((v23 & 0xC000000000000001) != 0) {
              sub_1004CF500();
            }
            else {
              swift_retain();
            }
            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              [Strong didUpdateInProgressOperationsIn:a1];
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_32;
        }
LABEL_35:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v24) {
        goto LABEL_22;
      }
    }
LABEL_32:
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_10038D57C()
{
  swift_release();
  sub_100039184(v0 + 24);
  return _swift_deallocObject(v0, 64, 7);
}

void sub_10038D5BC(unsigned char *a1)
{
}

uint64_t sub_10038D5C8()
{
  return sub_10038C1F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10038D5D0()
{
}

uint64_t sub_10038D5D8()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038D610(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10038D670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648((uint64_t *)&unk_100629AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038D6D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10038D710()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC14RecentsAvocado24DOCFileOperationsManager_needsUpdate) = 1;
  sub_10038B4C8();
}

uint64_t sub_10038D74C(uint64_t a1, unint64_t a2)
{
  switch(a2)
  {
    case 0uLL:
      uint64_t v4 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v4)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x10038DBA4);
      }
      uint64_t v5 = v4;
      v22._countAndFlagsBits = 0x8000000100534830;
      v6._countAndFlagsBits = 0x75636F4420464450;
      LODWORD(v6._object) = 1953391981;
      goto LABEL_17;
    case 1uLL:
      uint64_t v7 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v7) {
        goto LABEL_31;
      }
      uint64_t v5 = v7;
      v22._countAndFlagsBits = 0x8000000100534800;
      v6._countAndFlagsBits = 0x736567616D49;
      v6._object = (void *)0xE600000000000000;
      goto LABEL_27;
    case 2uLL:
      uint64_t v8 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v8) {
        goto LABEL_32;
      }
      uint64_t v5 = v8;
      v22._countAndFlagsBits = 0x80000001005347C0;
      v6._countAndFlagsBits = 0x636973754DLL;
      v6._object = (void *)0xE500000000000000;
      goto LABEL_10;
    case 3uLL:
      unint64_t v9 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v9) {
        goto LABEL_33;
      }
      uint64_t v5 = v9;
      v22._countAndFlagsBits = 0x8000000100534780;
      v6._countAndFlagsBits = 0x736569766F4DLL;
      v6._object = (void *)0xE600000000000000;
LABEL_10:
      v10._countAndFlagsBits = 0x617A696C61636F4CLL;
      v10._object = (void *)0xEB00000000656C62;
      v11.super.Class isa = v5;
      v12._countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      goto LABEL_28;
    case 4uLL:
      uint64_t v13 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v13) {
        goto LABEL_34;
      }
      uint64_t v5 = v13;
      v6._object = (void *)0xE900000000000073;
      v22._countAndFlagsBits = 0x8000000100534730;
      v6._countAndFlagsBits = 0x746E656D75636F44;
      goto LABEL_27;
    case 5uLL:
      uint64_t v14 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v14) {
        goto LABEL_35;
      }
      uint64_t v5 = v14;
      v22._countAndFlagsBits = 0x80000001005346F0;
      v6._countAndFlagsBits = 0x6873646165727053;
      v6._object = (void *)0xEC00000073746565;
      goto LABEL_27;
    case 6uLL:
      uint64_t v15 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v15) {
        goto LABEL_36;
      }
      uint64_t v5 = v15;
      v22._countAndFlagsBits = 0x80000001005346B0;
      v6._countAndFlagsBits = 0x61746E6573657250;
      LODWORD(v6._object) = 1852795252;
LABEL_17:
      v6._object = (void *)(LODWORD(v6._object) | 0xED00007300000000);
      goto LABEL_27;
    case 7uLL:
      uint64_t v16 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v16) {
        goto LABEL_37;
      }
      uint64_t v5 = v16;
      v22._countAndFlagsBits = 0x8000000100534670;
      v6._countAndFlagsBits = 0x65706F6C65766544;
      v6._object = (void *)0xE900000000000072;
      goto LABEL_27;
    case 8uLL:
      uint64_t v20 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v20) {
        goto LABEL_40;
      }
      uint64_t v5 = v20;
      v22._countAndFlagsBits = 0x8000000100534630;
      v6._countAndFlagsBits = 0x7365766968637241;
      v6._object = (void *)0xE800000000000000;
      goto LABEL_27;
    case 9uLL:
      char v17 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v17) {
        goto LABEL_38;
      }
      uint64_t v5 = v17;
      v22._countAndFlagsBits = 0x8000000100534600;
      v6._countAndFlagsBits = 0x737265646C6F46;
      v6._object = (void *)0xE700000000000000;
      goto LABEL_27;
    case 0xAuLL:
      uint64_t v18 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v18) {
        goto LABEL_39;
      }
      uint64_t v5 = v18;
      v22._countAndFlagsBits = 0x8000000100526D70;
      v6._countAndFlagsBits = 0x726568744FLL;
      v6._object = (void *)0xE500000000000000;
LABEL_27:
      v10._countAndFlagsBits = 0x617A696C61636F4CLL;
      v10._object = (void *)0xEB00000000656C62;
      v11.super.Class isa = v5;
      v12._countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
LABEL_28:
      uint64_t v19 = sub_1004CBEE0(v6, v10, v11, v12, v22);

LABEL_29:
      sub_100033278(a1, a2);
      return v19;
    default:
      uint64_t v19 = a1;
      goto LABEL_29;
  }
}

void *sub_10038DBD0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  if (!v7) {
    return a2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100390B78(a3, a1, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_100030F0C((uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1004CF9E0();
  sub_1004CF9F0(0xBuLL);
  Swift::String v10 = v63;
  Swift::Int v11 = sub_1004CFA30();
  char v12 = *(unsigned char *)(v9 + 32);
  char v13 = v12 & 0x3F;
  uint64_t v14 = -1;
  for (unint64_t i = v11 & ~(-1 << v12);
        ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0;
        unint64_t i = (i + 1) & ~(-1 << v12))
  {
    if (*(void *)(*(void *)(v9 + 48) + 16 * i + 8) == 10)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v63[0] = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_135;
      }
      goto LABEL_7;
    }
  }
  while (2)
  {
    uint64_t v20 = v9 + 56;
    uint64_t v21 = 1 << v13;
    if (v21 < 64) {
      uint64_t v22 = ~(v14 << v21);
    }
    else {
      uint64_t v22 = v14;
    }
    unint64_t v23 = v22 & *(void *)(v9 + 56);
    int64_t v59 = (unint64_t)(v21 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v25 = 0;
    while (1)
    {
      uint64_t v61 = a2 + 4;
      unint64_t v26 = (unint64_t)(a2 + 5);
LABEL_13:
      if (v23)
      {
        unint64_t v27 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        unint64_t v28 = v27 | (v25 << 6);
        goto LABEL_29;
      }
      unint64_t v29 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
        __break(1u);
        goto LABEL_70;
      }
      if ((uint64_t)v29 >= v59) {
        goto LABEL_66;
      }
      unint64_t v30 = *(void *)(v20 + 8 * v29);
      ++v25;
      if (!v30)
      {
        int64_t v25 = v29 + 1;
        if ((uint64_t)(v29 + 1) >= v59) {
          goto LABEL_66;
        }
        unint64_t v30 = *(void *)(v20 + 8 * v25);
        if (!v30)
        {
          int64_t v25 = v29 + 2;
          if ((uint64_t)(v29 + 2) >= v59) {
            goto LABEL_66;
          }
          unint64_t v30 = *(void *)(v20 + 8 * v25);
          if (!v30) {
            break;
          }
        }
      }
LABEL_28:
      unint64_t v23 = (v30 - 1) & v30;
      unint64_t v28 = __clz(__rbit64(v30)) + (v25 << 6);
LABEL_29:
      uint64_t v32 = *(void *)(v9 + 48);
      long long v33 = *(_OWORD *)(v32 + 16 * v28);
      uint64_t v14 = a2[2];
      Swift::String v10 = *(void **)(v32 + 16 * v28 + 8);
      long long v62 = v33;
      if (v14)
      {
        unint64_t i = v33;
        uint64_t v3 = a2 + 5;
        while (2)
        {
          unint64_t v34 = *v3;
          switch(*v3)
          {
            case 0uLL:
              if (v10) {
                goto LABEL_32;
              }
              goto LABEL_60;
            case 1uLL:
              if (v10 == (void *)1) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 2uLL:
              if (v10 == (void *)2) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 3uLL:
              if (v10 == (void *)3) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 4uLL:
              if (v10 == (void *)4) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 5uLL:
              if (v10 == (void *)5) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 6uLL:
              if (v10 == (void *)6) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 7uLL:
              if (v10 == (void *)7) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 8uLL:
              if (v10 == (void *)8) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 9uLL:
              if (v10 == (void *)9) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 0xAuLL:
              if (v10 != (void *)10) {
                goto LABEL_32;
              }
LABEL_60:
              sub_100033278(i, v34);
              goto LABEL_13;
            default:
              if ((unint64_t)v10 >= 0xB)
              {
                if (*(v3 - 1) == i && v34 == (void)v10) {
                  goto LABEL_13;
                }
                char v36 = sub_1004CF890();
                *(void *)&long long v33 = v62;
                if (v36) {
                  goto LABEL_13;
                }
              }
LABEL_32:
              v3 += 2;
              if (--v14) {
                continue;
              }
              goto LABEL_61;
          }
        }
      }
LABEL_61:
      sub_100033278(v33, (unint64_t)v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_100236FD4(0, a2[2] + 1, 1, a2);
      }
      unint64_t i = a2[2];
      unint64_t v37 = a2[3];
      Swift::String v10 = (void *)(i + 1);
      long long v38 = v62;
      if (i >= v37 >> 1)
      {
        uint64_t v39 = sub_100236FD4((void *)(v37 > 1), i + 1, 1, a2);
        long long v38 = v62;
        a2 = v39;
      }
      a2[2] = v10;
      *(_OWORD *)&a2[2 * i + 4] = v38;
    }
    int64_t v31 = v29 + 3;
    if (v31 < v59)
    {
      unint64_t v30 = *(void *)(v20 + 8 * v31);
      if (!v30)
      {
        while (1)
        {
          int64_t v25 = v31 + 1;
          if (__OFADD__(v31, 1)) {
            break;
          }
          if (v25 >= v59) {
            goto LABEL_66;
          }
          unint64_t v30 = *(void *)(v20 + 8 * v25);
          ++v31;
          if (v30) {
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_135:
        sub_10002701C();
        uint64_t v9 = v63[0];
LABEL_7:
        char v17 = (uint64_t *)(*(void *)(v9 + 48) + 16 * i);
        uint64_t v18 = *v17;
        unint64_t v19 = v17[1];
        Swift::String v10 = v63;
        sub_1003B5984(i);
        uint64_t v9 = v63[0];
        swift_bridgeObjectRelease();
        sub_1000332E0(v18, v19);
        char v13 = *(unsigned char *)(v9 + 32) & 0x3F;
        continue;
      }
      int64_t v25 = v31;
      goto LABEL_28;
    }
    break;
  }
LABEL_66:
  swift_release();
  uint64_t v14 = a2[2];
  if (!v14)
  {
    swift_bridgeObjectRelease();
    Swift::String v40 = _swiftEmptyArrayStorage;
    uint64_t v3 = _swiftEmptyArrayStorage;
    goto LABEL_132;
  }
  unint64_t v23 = 0;
  Swift::String v40 = _swiftEmptyArrayStorage;
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_72:
  long long v43 = *(_OWORD *)&v61[2 * v23];
  unint64_t v44 = v61[2 * v23 + 1];
  long long v62 = v43;
  if (!*(void *)(v9 + 16))
  {
    sub_100033278(v43, v44);
    goto LABEL_125;
  }
  sub_1004CF9E0();
  switch(v44)
  {
    case 0uLL:
      Swift::UInt v45 = 0;
      goto LABEL_87;
    case 1uLL:
      Swift::UInt v45 = 1;
      goto LABEL_87;
    case 2uLL:
      Swift::UInt v45 = 2;
      goto LABEL_87;
    case 3uLL:
      Swift::UInt v45 = 3;
      goto LABEL_87;
    case 4uLL:
      Swift::UInt v45 = 4;
      goto LABEL_87;
    case 5uLL:
      Swift::UInt v45 = 5;
      goto LABEL_87;
    case 6uLL:
      Swift::UInt v45 = 6;
      goto LABEL_87;
    case 7uLL:
      Swift::UInt v45 = 7;
      goto LABEL_87;
    case 8uLL:
      Swift::UInt v45 = 8;
      goto LABEL_87;
    case 9uLL:
      Swift::UInt v45 = 9;
      goto LABEL_87;
    case 0xAuLL:
      Swift::UInt v45 = 11;
LABEL_87:
      sub_1004CF9F0(v45);
      swift_bridgeObjectRetain();
      break;
    default:
      sub_1004CF9F0(0xAuLL);
      swift_bridgeObjectRetain();
      sub_100033278(v62, v44);
      sub_1004CDC80();
      break;
  }
  Swift::Int v46 = sub_1004CFA30();
  uint64_t v47 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v48 = v46 & ~v47;
  if (((*(void *)(v20 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_125;
  }
  Swift::String v58 = v3;
  int v60 = v40;
  uint64_t v49 = v14;
  uint64_t v50 = ~v47;
  uint64_t v51 = *(void *)(v9 + 48);
  while (2)
  {
    Swift::String v52 = (void *)(v51 + 16 * v48);
    uint64_t v53 = v52[1];
    switch(v53)
    {
      case 0:
        if (v44) {
          goto LABEL_91;
        }
        goto LABEL_119;
      case 1:
        if (v44 == 1) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 2:
        if (v44 == 2) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 3:
        if (v44 == 3) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 4:
        if (v44 == 4) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 5:
        if (v44 == 5) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 6:
        if (v44 == 6) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 7:
        if (v44 == 7) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 8:
        if (v44 == 8) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 9:
        if (v44 == 9) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 10:
        if (v44 != 10) {
          goto LABEL_91;
        }
        goto LABEL_119;
      default:
        if (v44 < 0xB || (*v52 == (void)v62 ? (BOOL v54 = v53 == v44) : (BOOL v54 = 0), !v54 && (sub_1004CF890() & 1) == 0))
        {
LABEL_91:
          unint64_t v48 = (v48 + 1) & v50;
          if (((*(void *)(v20 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v14 = v49;
            uint64_t v3 = v58;
            Swift::String v40 = v60;
LABEL_125:
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v24 = v40;
            }
            else {
              uint64_t v24 = sub_100236FD4(0, v40[2] + 1, 1, v40);
            }
            unint64_t v26 = v24[2];
            unint64_t v29 = v24[3];
            Swift::String v10 = (void *)(v26 + 1);
            long long v42 = v62;
            if (v26 < v29 >> 1)
            {
              Swift::String v40 = v24;
              goto LABEL_71;
            }
LABEL_70:
            Swift::String v41 = sub_100236FD4((void *)(v29 > 1), (int64_t)v10, 1, v24);
            long long v42 = v62;
            uint64_t v24 = v41;
            Swift::String v40 = v41;
            goto LABEL_71;
          }
          continue;
        }
LABEL_119:
        swift_bridgeObjectRelease();
        uint64_t v3 = v58;
        uint64_t v14 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_100236FD4(0, v58[2] + 1, 1, v58);
        }
        Swift::String v40 = v60;
        unint64_t v26 = v3[2];
        unint64_t v55 = v3[3];
        Swift::String v10 = (void *)(v26 + 1);
        long long v42 = v62;
        if (v26 >= v55 >> 1)
        {
          Swift::String v56 = sub_100236FD4((void *)(v55 > 1), v26 + 1, 1, v3);
          long long v42 = v62;
          uint64_t v24 = v56;
          uint64_t v3 = v56;
        }
        else
        {
          uint64_t v24 = v3;
        }
LABEL_71:
        ++v23;
        v24[2] = v10;
        *(_OWORD *)&v24[2 * v26 + 4] = v42;
        if (v23 != v14) {
          goto LABEL_72;
        }
        swift_bridgeObjectRelease();
LABEL_132:
        swift_bridgeObjectRelease();
        v63[0] = v3;
        sub_100108274((uint64_t)v40);
        return (void *)v63[0];
    }
  }
}

void sub_10038E498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
      Swift::UInt v3 = 0;
      goto LABEL_16;
    case 1:
      Swift::UInt v3 = 1;
      goto LABEL_16;
    case 2:
      Swift::UInt v3 = 2;
      goto LABEL_16;
    case 3:
      Swift::UInt v3 = 3;
      goto LABEL_16;
    case 4:
      Swift::UInt v3 = 4;
      goto LABEL_16;
    case 5:
      Swift::UInt v3 = 5;
      goto LABEL_16;
    case 6:
      Swift::UInt v3 = 6;
      goto LABEL_16;
    case 7:
      Swift::UInt v3 = 7;
      goto LABEL_16;
    case 8:
      Swift::UInt v3 = 8;
      goto LABEL_16;
    case 9:
      Swift::UInt v3 = 9;
      goto LABEL_16;
    case 10:
      Swift::UInt v3 = 11;
LABEL_16:
      sub_1004CF9F0(v3);
      break;
    default:
      sub_1004CF9F0(0xAuLL);
      sub_1004CDC80();
      break;
  }
}

Swift::Int sub_10038E5AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1004CF9E0();
  sub_10038E498((uint64_t)v4, v1, v2);
  return sub_1004CFA30();
}

void sub_10038E5F8(uint64_t a1)
{
  sub_10038E498(a1, *v1, v1[1]);
}

Swift::Int sub_10038E600()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1004CF9E0();
  sub_10038E498((uint64_t)v4, v1, v2);
  return sub_1004CFA30();
}

uint64_t sub_10038E648(uint64_t *a1, uint64_t a2)
{
  return sub_10038E684(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

void *sub_10038E65C()
{
  uint64_t result = (void *)sub_10001F580((uint64_t)_swiftEmptyArrayStorage);
  off_100637380 = result;
  return result;
}

uint64_t sub_10038E684(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a4 != 5) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 6:
      if (a4 != 6) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 7:
      if (a4 != 7) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 8:
      if (a4 != 8) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 9:
      if (a4 != 9) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 10:
      if (a4 != 10) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 0xB)
      {
LABEL_28:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = sub_1004CF890();
      }
      break;
  }
  return result;
}

uint64_t sub_10038E7B8(uint64_t a1)
{
  v305[1] = a1;
  uint64_t v1 = sub_1004CB5C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  v314 = (char *)v305 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  v317 = (char *)v305 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  v316 = (char *)v305 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v319 = (char *)v305 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v318 = (char *)v305 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v322 = (char *)v305 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v321 = (char *)v305 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  *(void *)&long long v325 = (char *)v305 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v324 = (char *)v305 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v323 = (char *)v305 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v326 = (unint64_t)v305 - v24;
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)v305 - v25;
  sub_100031648(&qword_100637388);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1004EF7C0;
  sub_100031648(&qword_100637390);
  uint64_t inited = swift_initStackObject();
  long long v327 = xmmword_1004E12A0;
  *(_OWORD *)(inited + 16) = xmmword_1004E12A0;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  sub_1004CB390();
  uint64_t v29 = sub_1004CB100();
  uint64_t v31 = v30;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v2 + 8);
  v32(v26, v1);
  *(void *)(inited + 48) = v29;
  *(void *)(inited + 56) = v31;
  *(void *)(v27 + 32) = sub_10001F6A8(inited);
  uint64_t v33 = swift_initStackObject();
  long long v306 = xmmword_1004EB020;
  *(_OWORD *)(v33 + 16) = v327;
  *(_OWORD *)(v33 + 32) = xmmword_1004EB020;
  sub_1004CB4D0();
  uint64_t v34 = sub_1004CB100();
  uint64_t v36 = v35;
  v32(v26, v1);
  *(void *)(v33 + 48) = v34;
  *(void *)(v33 + 56) = v36;
  *(void *)(v27 + 40) = sub_10001F6A8(v33);
  uint64_t v37 = swift_initStackObject();
  long long v307 = xmmword_1004EF7D0;
  *(_OWORD *)(v37 + 16) = v327;
  *(_OWORD *)(v37 + 32) = xmmword_1004EF7D0;
  sub_1004CB4C0();
  uint64_t v38 = sub_1004CB100();
  uint64_t v40 = v39;
  v32(v26, v1);
  *(void *)(v37 + 48) = v38;
  *(void *)(v37 + 56) = v40;
  *(void *)(v27 + 48) = sub_10001F6A8(v37);
  uint64_t v41 = swift_initStackObject();
  long long v308 = xmmword_1004EF7E0;
  *(_OWORD *)(v41 + 16) = v327;
  *(_OWORD *)(v41 + 32) = xmmword_1004EF7E0;
  sub_1004CB4F0();
  uint64_t v42 = sub_1004CB100();
  uint64_t v44 = v43;
  v32(v26, v1);
  *(void *)(v41 + 48) = v42;
  *(void *)(v41 + 56) = v44;
  *(void *)(v27 + 56) = sub_10001F6A8(v41);
  uint64_t v45 = swift_initStackObject();
  long long v309 = xmmword_1004EF7F0;
  *(_OWORD *)(v45 + 16) = v327;
  *(_OWORD *)(v45 + 32) = xmmword_1004EF7F0;
  sub_1004CB140();
  uint64_t v46 = sub_1004CB100();
  uint64_t v48 = v47;
  v32(v26, v1);
  *(void *)(v45 + 48) = v46;
  *(void *)(v45 + 56) = v48;
  *(void *)(v27 + 64) = sub_10001F6A8(v45);
  uint64_t v49 = swift_initStackObject();
  long long v310 = xmmword_1004EF800;
  *(_OWORD *)(v49 + 16) = v327;
  *(_OWORD *)(v49 + 32) = xmmword_1004EF800;
  sub_1004CB5B0();
  uint64_t v50 = sub_1004CB100();
  uint64_t v52 = v51;
  v32(v26, v1);
  *(void *)(v49 + 48) = v50;
  *(void *)(v49 + 56) = v52;
  *(void *)(v27 + 72) = sub_10001F6A8(v49);
  uint64_t v53 = swift_initStackObject();
  long long v313 = xmmword_1004EF810;
  *(_OWORD *)(v53 + 16) = v327;
  *(_OWORD *)(v53 + 32) = xmmword_1004EF810;
  sub_1004CB160();
  uint64_t v54 = sub_1004CB100();
  uint64_t v56 = v55;
  v32(v26, v1);
  *(void *)(v53 + 48) = v54;
  *(void *)(v53 + 56) = v56;
  *(void *)(v27 + 80) = sub_10001F6A8(v53);
  uint64_t v57 = swift_initStackObject();
  long long v312 = xmmword_1004EF820;
  *(_OWORD *)(v57 + 16) = v327;
  *(_OWORD *)(v57 + 32) = xmmword_1004EF820;
  sub_1004CB180();
  uint64_t v58 = sub_1004CB100();
  uint64_t v60 = v59;
  v32(v26, v1);
  *(void *)(v57 + 48) = v58;
  *(void *)(v57 + 56) = v60;
  *(void *)(v27 + 88) = sub_10001F6A8(v57);
  uint64_t v61 = swift_initStackObject();
  long long v311 = xmmword_1004EF830;
  *(_OWORD *)(v61 + 16) = v327;
  *(_OWORD *)(v61 + 32) = xmmword_1004EF830;
  sub_1004CB500();
  uint64_t v62 = sub_1004CB100();
  uint64_t v64 = v63;
  v32(v26, v1);
  *(void *)(v61 + 48) = v62;
  *(void *)(v61 + 56) = v64;
  unint64_t v65 = sub_10001F6A8(v61);
  v305[0] = v27;
  *(void *)(v27 + 96) = v65;
  sub_100031648(&qword_100637398);
  uint64_t v66 = swift_initStackObject();
  *(_OWORD *)(v66 + 16) = xmmword_1004ECB70;
  *(void *)(v66 + 32) = 0;
  *(void *)(v66 + 40) = 0;
  uint64_t v67 = v66;
  uint64_t v320 = sub_100031648((uint64_t *)&unk_10062D9C0);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = v327;
  sub_1004CB390();
  uint64_t v69 = sub_1004CB100();
  uint64_t v71 = v70;
  v32(v26, v1);
  *(void *)(v68 + 32) = v69;
  *(void *)(v68 + 40) = v71;
  *(void *)(v67 + 48) = v68;
  *(_OWORD *)(v67 + 56) = v306;
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_1004EF840;
  sub_1004CB4D0();
  uint64_t v73 = sub_1004CB100();
  uint64_t v75 = v74;
  v32(v26, v1);
  *(void *)(v72 + 32) = v73;
  *(void *)(v72 + 40) = v75;
  unint64_t v76 = v326;
  sub_1004CB420();
  uint64_t v77 = sub_1004CB100();
  uint64_t v79 = v78;
  v32((char *)v76, v1);
  *(void *)(v72 + 48) = v77;
  *(void *)(v72 + 56) = v79;
  long long v80 = v323;
  sub_1004CB450();
  uint64_t v81 = sub_1004CB100();
  uint64_t v83 = v82;
  v32(v80, v1);
  *(void *)(v72 + 64) = v81;
  *(void *)(v72 + 72) = v83;
  uint64_t v84 = v324;
  sub_1004CB4B0();
  uint64_t v85 = sub_1004CB100();
  uint64_t v87 = v86;
  v32(v84, v1);
  *(void *)(v72 + 80) = v85;
  *(void *)(v72 + 88) = v87;
  uint64_t v88 = (char *)v325;
  sub_1004CB360();
  uint64_t v89 = sub_1004CB100();
  uint64_t v91 = v90;
  v32(v88, v1);
  *(void *)(v72 + 96) = v89;
  *(void *)(v72 + 104) = v91;
  long long v92 = v321;
  sub_1004CB3A0();
  uint64_t v93 = sub_1004CB100();
  uint64_t v95 = v94;
  v32(v92, v1);
  *(void *)(v72 + 112) = v93;
  *(void *)(v72 + 120) = v95;
  long long v96 = v322;
  sub_1004CB430();
  uint64_t v97 = sub_1004CB100();
  uint64_t v99 = v98;
  v32(v96, v1);
  *(void *)(v72 + 128) = v97;
  *(void *)(v72 + 136) = v99;
  long long v100 = v318;
  sub_1004CB350();
  uint64_t v101 = sub_1004CB100();
  uint64_t v103 = v102;
  v32(v100, v1);
  *(void *)(v72 + 144) = v101;
  *(void *)(v72 + 152) = v103;
  unsigned __int8 v104 = v319;
  sub_1004CB370();
  uint64_t v105 = sub_1004CB100();
  uint64_t v107 = v106;
  v32(v104, v1);
  *(void *)(v72 + 160) = v105;
  *(void *)(v72 + 168) = v107;
  long long v108 = v316;
  sub_1004CB5A0();
  uint64_t v109 = sub_1004CB100();
  uint64_t v111 = v110;
  v32(v108, v1);
  *(void *)(v72 + 176) = v109;
  *(void *)(v72 + 184) = v111;
  long long v112 = v317;
  sub_1004CB3C0();
  uint64_t v113 = sub_1004CB100();
  uint64_t v115 = v114;
  v32(v112, v1);
  *(void *)(v72 + 192) = v113;
  *(void *)(v72 + 200) = v115;
  uint64_t v315 = v67;
  *(void *)(v67 + 72) = v72;
  *(_OWORD *)(v67 + 80) = v307;
  uint64_t v116 = swift_allocObject();
  *(_OWORD *)(v116 + 16) = xmmword_1004E12D0;
  sub_1004CB4C0();
  uint64_t v117 = sub_1004CB100();
  uint64_t v119 = v118;
  v32(v26, v1);
  *(void *)(v116 + 32) = v117;
  *(void *)(v116 + 40) = v119;
  unint64_t v120 = v326;
  sub_1004CB380();
  uint64_t v121 = sub_1004CB100();
  uint64_t v123 = v122;
  v32((char *)v120, v1);
  *(void *)(v116 + 48) = v121;
  *(void *)(v116 + 56) = v123;
  uint64_t v124 = v323;
  sub_1004CB120();
  uint64_t v125 = sub_1004CB100();
  uint64_t v127 = v126;
  v32(v124, v1);
  *(void *)(v116 + 64) = v125;
  *(void *)(v116 + 72) = v127;
  long long v128 = v324;
  sub_1004CB3E0();
  uint64_t v129 = sub_1004CB100();
  uint64_t v131 = v130;
  v32(v128, v1);
  *(void *)(v116 + 80) = v129;
  *(void *)(v116 + 88) = v131;
  BOOL v132 = (char *)v325;
  sub_1004CB470();
  uint64_t v133 = sub_1004CB100();
  uint64_t v135 = v134;
  v32(v132, v1);
  *(void *)(v116 + 96) = v133;
  *(void *)(v116 + 104) = v135;
  uint64_t v136 = v315;
  *(void *)(v315 + 96) = v116;
  *(_OWORD *)(v136 + 104) = v308;
  uint64_t v137 = swift_allocObject();
  *(_OWORD *)(v137 + 16) = xmmword_1004EF850;
  sub_1004CB4F0();
  uint64_t v138 = sub_1004CB100();
  uint64_t v140 = v139;
  v32(v26, v1);
  *(void *)(v137 + 32) = v138;
  *(void *)(v137 + 40) = v140;
  unint64_t v141 = v326;
  sub_1004CB110();
  uint64_t v142 = sub_1004CB100();
  uint64_t v144 = v143;
  v32((char *)v141, v1);
  *(void *)(v137 + 48) = v142;
  *(void *)(v137 + 56) = v144;
  id v145 = v323;
  sub_1004CB4E0();
  uint64_t v146 = sub_1004CB100();
  uint64_t v148 = v147;
  v32(v145, v1);
  *(void *)(v137 + 64) = v146;
  *(void *)(v137 + 72) = v148;
  uint64_t v149 = v324;
  sub_1004CB1B0();
  uint64_t v150 = sub_1004CB100();
  uint64_t v152 = v151;
  v32(v149, v1);
  *(void *)(v137 + 80) = v150;
  *(void *)(v137 + 88) = v152;
  unint64_t v153 = (char *)v325;
  sub_1004CB480();
  uint64_t v154 = sub_1004CB100();
  uint64_t v156 = v155;
  v32(v153, v1);
  *(void *)(v137 + 96) = v154;
  *(void *)(v137 + 104) = v156;
  uint64_t v157 = v321;
  sub_1004CB130();
  uint64_t v158 = sub_1004CB100();
  uint64_t v160 = v159;
  v32(v157, v1);
  *(void *)(v137 + 112) = v158;
  *(void *)(v137 + 120) = v160;
  uint64_t v161 = v322;
  sub_1004CB340();
  uint64_t v162 = sub_1004CB100();
  uint64_t v164 = v163;
  v32(v161, v1);
  *(void *)(v137 + 128) = v162;
  *(void *)(v137 + 136) = v164;
  uint64_t v165 = v315;
  *(void *)(v315 + 120) = v137;
  *(_OWORD *)(v165 + 128) = v309;
  uint64_t v166 = swift_allocObject();
  *(_OWORD *)(v166 + 16) = xmmword_1004EF860;
  sub_1004CB140();
  uint64_t v167 = sub_1004CB100();
  uint64_t v169 = v168;
  v32(v26, v1);
  *(void *)(v166 + 32) = v167;
  *(void *)(v166 + 40) = v169;
  unint64_t v170 = v326;
  sub_1004CB460();
  uint64_t v171 = sub_1004CB100();
  uint64_t v173 = v172;
  v32((char *)v170, v1);
  *(void *)(v166 + 48) = v171;
  *(void *)(v166 + 56) = v173;
  v174 = v323;
  sub_1004CB170();
  uint64_t v175 = sub_1004CB100();
  uint64_t v177 = v176;
  v32(v174, v1);
  *(void *)(v166 + 64) = v175;
  *(void *)(v166 + 72) = v177;
  uint64_t v178 = v324;
  sub_1004CB1D0();
  uint64_t v179 = sub_1004CB100();
  uint64_t v181 = v180;
  v32(v178, v1);
  *(void *)(v166 + 80) = v179;
  *(void *)(v166 + 88) = v181;
  uint64_t v182 = (char *)v325;
  sub_1004CB230();
  uint64_t v183 = sub_1004CB100();
  uint64_t v185 = v184;
  v32(v182, v1);
  *(void *)(v166 + 96) = v183;
  *(void *)(v166 + 104) = v185;
  uint64_t v186 = v321;
  sub_1004CB540();
  uint64_t v187 = sub_1004CB100();
  uint64_t v189 = v188;
  v32(v186, v1);
  *(void *)(v166 + 112) = v187;
  *(void *)(v166 + 120) = v189;
  uint64_t v190 = v322;
  sub_1004CB530();
  uint64_t v191 = sub_1004CB100();
  uint64_t v193 = v192;
  v32(v190, v1);
  *(void *)(v166 + 128) = v191;
  *(void *)(v166 + 136) = v193;
  v194 = v318;
  sub_1004CB0E0();
  uint64_t v195 = sub_1004CB100();
  uint64_t v197 = v196;
  v32(v194, v1);
  *(void *)(v166 + 144) = v195;
  *(void *)(v166 + 152) = v197;
  uint64_t v198 = v319;
  sub_1004CB0D0();
  uint64_t v199 = sub_1004CB100();
  uint64_t v201 = v200;
  v32(v198, v1);
  *(void *)(v166 + 160) = v199;
  *(void *)(v166 + 168) = v201;
  objc_super v202 = v316;
  sub_1004CB190();
  uint64_t v203 = sub_1004CB100();
  uint64_t v205 = v204;
  v32(v202, v1);
  *(void *)(v166 + 176) = v203;
  *(void *)(v166 + 184) = v205;
  v206 = v317;
  sub_1004CB1C0();
  uint64_t v207 = sub_1004CB100();
  uint64_t v209 = v208;
  v32(v206, v1);
  *(void *)(v166 + 192) = v207;
  *(void *)(v166 + 200) = v209;
  v210 = v314;
  sub_1004CB200();
  uint64_t v211 = sub_1004CB100();
  uint64_t v213 = v212;
  v32(v210, v1);
  *(void *)(v166 + 208) = v211;
  *(void *)(v166 + 216) = v213;
  *(void *)(v166 + 224) = 0xD000000000000022;
  *(void *)(v166 + 232) = 0x8000000100534870;
  *(void *)(v166 + 240) = 0xD000000000000015;
  *(void *)(v166 + 248) = 0x80000001005348A0;
  *(void *)(v166 + 256) = 0xD000000000000017;
  *(void *)(v166 + 264) = 0x80000001005348C0;
  v317 = (char *)0xD000000000000016;
  *(void *)(v166 + 272) = 0xD000000000000016;
  *(void *)(v166 + 280) = 0x80000001005348E0;
  *(void *)(v166 + 288) = 0xD00000000000001CLL;
  *(void *)(v166 + 296) = 0x8000000100534900;
  *(void *)(v166 + 304) = 0xD000000000000017;
  *(void *)(v166 + 312) = 0x8000000100534920;
  *(void *)(v165 + 144) = v166;
  *(_OWORD *)(v165 + 152) = v310;
  uint64_t v214 = swift_allocObject();
  *(_OWORD *)(v214 + 16) = xmmword_1004EF870;
  sub_1004CB5B0();
  uint64_t v215 = sub_1004CB100();
  uint64_t v217 = v216;
  v32(v26, v1);
  *(void *)(v214 + 32) = v215;
  *(void *)(v214 + 40) = v217;
  unint64_t v218 = v326;
  sub_1004CB3B0();
  uint64_t v219 = sub_1004CB100();
  uint64_t v221 = v220;
  v32((char *)v218, v1);
  *(void *)(v214 + 48) = v219;
  *(void *)(v214 + 56) = v221;
  v222 = v323;
  sub_1004CB290();
  uint64_t v223 = sub_1004CB100();
  uint64_t v225 = v224;
  v32(v222, v1);
  *(void *)(v214 + 64) = v223;
  *(void *)(v214 + 72) = v225;
  v226 = v324;
  sub_1004CB2C0();
  uint64_t v227 = sub_1004CB100();
  uint64_t v229 = v228;
  v32(v226, v1);
  *(void *)(v214 + 80) = v227;
  *(void *)(v214 + 88) = v229;
  v230 = (char *)v325;
  sub_1004CB2A0();
  uint64_t v231 = sub_1004CB100();
  uint64_t v233 = v232;
  v32(v230, v1);
  *(void *)(v214 + 96) = v231;
  *(void *)(v214 + 104) = v233;
  v234 = v321;
  sub_1004CB2B0();
  uint64_t v235 = sub_1004CB100();
  uint64_t v237 = v236;
  v32(v234, v1);
  *(void *)(v214 + 112) = v235;
  *(void *)(v214 + 120) = v237;
  v238 = v322;
  sub_1004CB2F0();
  uint64_t v239 = sub_1004CB100();
  uint64_t v241 = v240;
  v32(v238, v1);
  *(void *)(v214 + 128) = v239;
  *(void *)(v214 + 136) = v241;
  v242 = v318;
  sub_1004CB2D0();
  uint64_t v243 = sub_1004CB100();
  uint64_t v245 = v244;
  v32(v242, v1);
  *(void *)(v214 + 144) = v243;
  *(void *)(v214 + 152) = v245;
  v246 = v319;
  sub_1004CB300();
  uint64_t v247 = sub_1004CB100();
  uint64_t v249 = v248;
  v32(v246, v1);
  *(void *)(v214 + 160) = v247;
  *(void *)(v214 + 168) = v249;
  *(void *)(v214 + 176) = 0xD00000000000001FLL;
  *(void *)(v214 + 184) = 0x8000000100534940;
  *(void *)&long long v325 = 0xD00000000000001BLL;
  *(void *)(v214 + 192) = 0xD00000000000001BLL;
  *(void *)(v214 + 200) = 0x8000000100534960;
  *(void *)(v214 + 208) = 0xD00000000000001ELL;
  *(void *)(v214 + 216) = 0x8000000100534980;
  *(void *)(v214 + 224) = 0xD000000000000020;
  *(void *)(v214 + 232) = 0x80000001005349A0;
  *(void *)(v165 + 168) = v214;
  *(_OWORD *)(v165 + 176) = v313;
  uint64_t v250 = swift_allocObject();
  *(_OWORD *)(v250 + 16) = v327;
  sub_1004CB160();
  uint64_t v251 = sub_1004CB100();
  uint64_t v253 = v252;
  v32(v26, v1);
  *(void *)(v250 + 32) = v251;
  *(void *)(v250 + 40) = v253;
  *(void *)(v165 + 192) = v250;
  *(_OWORD *)(v165 + 200) = v312;
  uint64_t v254 = swift_allocObject();
  *(_OWORD *)(v254 + 16) = v327;
  sub_1004CB180();
  uint64_t v255 = sub_1004CB100();
  uint64_t v257 = v256;
  v32(v26, v1);
  *(void *)(v254 + 32) = v255;
  *(void *)(v254 + 40) = v257;
  *(void *)(v165 + 216) = v254;
  *(_OWORD *)(v165 + 224) = v311;
  uint64_t v258 = swift_allocObject();
  *(_OWORD *)(v258 + 16) = v327;
  sub_1004CB500();
  uint64_t v259 = sub_1004CB100();
  uint64_t v261 = v260;
  v32(v26, v1);
  *(void *)(v258 + 32) = v259;
  *(void *)(v258 + 40) = v261;
  *(void *)(v165 + 240) = v258;
  *(_OWORD *)(v165 + 248) = xmmword_1004EF880;
  uint64_t v262 = swift_allocObject();
  *(_OWORD *)(v262 + 16) = xmmword_1004EF890;
  sub_1004CB3F0();
  uint64_t v263 = sub_1004CB100();
  uint64_t v265 = v264;
  v32(v26, v1);
  *(void *)(v262 + 32) = v263;
  *(void *)(v262 + 40) = v265;
  unint64_t v266 = v326;
  sub_1004CB410();
  uint64_t v267 = sub_1004CB100();
  uint64_t v269 = v268;
  v32((char *)v266, v1);
  *(void *)(v262 + 48) = v267;
  *(void *)(v262 + 56) = v269;
  *(void *)(v262 + 64) = 0xD000000000000012;
  *(void *)(v262 + 72) = 0x80000001005349D0;
  *(void *)(v262 + 80) = 0xD000000000000017;
  *(void *)(v262 + 88) = 0x80000001005349F0;
  *(void *)(v262 + 96) = 0xD000000000000012;
  *(void *)(v262 + 104) = 0x8000000100534A10;
  *(void *)(v262 + 112) = 0xD000000000000017;
  *(void *)(v262 + 120) = 0x8000000100534A30;
  *(void *)(v262 + 128) = v325;
  *(void *)(v262 + 136) = 0x8000000100534A50;
  *(void *)(v262 + 144) = v317;
  *(void *)(v262 + 152) = 0x8000000100534A70;
  *(void *)(v165 + 264) = v262;
  v270 = (void *)sub_10001F7D0(v165);
  if (qword_1006269F0 != -1) {
    goto LABEL_44;
  }
LABEL_2:
  v271 = &off_100637380;
  swift_beginAccess();
  if (*((void *)off_100637380 + 2)) {
    return v305[0];
  }
  uint64_t v272 = v270[8];
  uint64_t v320 = (uint64_t)(v270 + 8);
  uint64_t v273 = 1 << *((unsigned char *)v270 + 32);
  uint64_t v274 = -1;
  if (v273 < 64) {
    uint64_t v274 = ~(-1 << v273);
  }
  unint64_t v275 = v274 & v272;
  v321 = (char *)((unint64_t)(v273 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v276 = 0;
  v319 = (char *)v270;
  do
  {
LABEL_7:
    if (v275)
    {
      unint64_t v277 = __clz(__rbit64(v275));
      v275 &= v275 - 1;
      unint64_t v278 = v277 | (v276 << 6);
    }
    else
    {
      uint64_t v279 = v276 + 1;
      if (__OFADD__(v276, 1))
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (v279 >= (uint64_t)v321) {
        goto LABEL_38;
      }
      unint64_t v280 = *(void *)(v320 + 8 * v279);
      ++v276;
      if (!v280)
      {
        uint64_t v276 = v279 + 1;
        if (v279 + 1 >= (uint64_t)v321) {
          goto LABEL_38;
        }
        unint64_t v280 = *(void *)(v320 + 8 * v276);
        if (!v280)
        {
          uint64_t v276 = v279 + 2;
          if (v279 + 2 >= (uint64_t)v321) {
            goto LABEL_38;
          }
          unint64_t v280 = *(void *)(v320 + 8 * v276);
          if (!v280)
          {
            uint64_t v281 = v279 + 3;
            if (v281 >= (uint64_t)v321)
            {
LABEL_38:
              swift_release();
              return v305[0];
            }
            unint64_t v280 = *(void *)(v320 + 8 * v281);
            if (!v280)
            {
              while (1)
              {
                uint64_t v276 = v281 + 1;
                if (__OFADD__(v281, 1)) {
                  break;
                }
                if (v276 >= (uint64_t)v321) {
                  goto LABEL_38;
                }
                unint64_t v280 = *(void *)(v320 + 8 * v276);
                ++v281;
                if (v280) {
                  goto LABEL_22;
                }
              }
LABEL_43:
              __break(1u);
LABEL_44:
              swift_once();
              goto LABEL_2;
            }
            uint64_t v276 = v281;
          }
        }
      }
LABEL_22:
      unint64_t v275 = (v280 - 1) & v280;
      unint64_t v278 = __clz(__rbit64(v280)) + (v276 << 6);
    }
    v282 = *(char **)(v270[7] + 8 * v278);
    uint64_t v283 = *((void *)v282 + 2);
  }
  while (!v283);
  v323 = (char *)v275;
  v324 = (char *)v276;
  long long v325 = *(_OWORD *)(v270[6] + 16 * v278);
  unint64_t v326 = *((void *)&v325 + 1);
  *(void *)&long long v327 = v325;
  sub_100033278(v325, *((unint64_t *)&v325 + 1));
  swift_bridgeObjectRetain();
  v322 = v282;
  v284 = (uint64_t *)(v282 + 40);
  while (1)
  {
    uint64_t v288 = *(v284 - 1);
    uint64_t v287 = *v284;
    swift_beginAccess();
    sub_100033278(v327, v326);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v328 = (void *)*v271;
    v270 = v328;
    v290 = v271;
    void *v271 = 0x8000000000000000;
    unint64_t v292 = sub_1001DB86C(v288, v287);
    uint64_t v293 = v270[2];
    BOOL v294 = (v291 & 1) == 0;
    uint64_t v295 = v293 + v294;
    if (__OFADD__(v293, v294))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    char v296 = v291;
    if (v270[3] < v295) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      v299 = v328;
      if (v291) {
        goto LABEL_25;
      }
    }
    else
    {
      v270 = &v328;
      sub_10049B4E0();
      v299 = v328;
      if (v296)
      {
LABEL_25:
        uint64_t v285 = v299[7] + 16 * v292;
        sub_1000332E0(*(void *)v285, *(void *)(v285 + 8));
        unint64_t v286 = v326;
        *(void *)uint64_t v285 = v327;
        *(void *)(v285 + 8) = v286;
        goto LABEL_26;
      }
    }
LABEL_34:
    v299[(v292 >> 6) + 8] |= 1 << v292;
    v300 = (uint64_t *)(v299[6] + 16 * v292);
    uint64_t *v300 = v288;
    v300[1] = v287;
    *(_OWORD *)(v299[7] + 16 * v292) = v325;
    uint64_t v301 = v299[2];
    BOOL v302 = __OFADD__(v301, 1);
    uint64_t v303 = v301 + 1;
    if (v302) {
      goto LABEL_41;
    }
    v299[2] = v303;
    swift_bridgeObjectRetain();
LABEL_26:
    v284 += 2;
    off_100637380 = v299;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    --v283;
    v271 = v290;
    if (!v283)
    {
      swift_bridgeObjectRelease();
      sub_1000332E0(v327, v326);
      v270 = v319;
      unint64_t v275 = (unint64_t)v323;
      uint64_t v276 = (uint64_t)v324;
      goto LABEL_7;
    }
  }
  sub_10048ED5C(v295, isUniquelyReferenced_nonNull_native);
  v270 = v328;
  uint64_t v297 = sub_1001DB86C(v288, v287);
  if ((v296 & 1) == (v298 & 1))
  {
    unint64_t v292 = v297;
    v299 = v328;
    if (v296) {
      goto LABEL_25;
    }
    goto LABEL_34;
  }
  uint64_t result = sub_1004CF910();
  __break(1u);
  return result;
}

uint64_t sub_10038FED4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v110 = a1;
  uint64_t v4 = sub_1004CC770();
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v96 - v7;
  uint64_t v9 = sub_100031648((uint64_t *)&unk_10062F860);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1004CB5C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  long long v100 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v96 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v96 - v21;
  uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(a2 + 16);
  uint64_t v105 = v13;
  uint64_t v106 = v18;
  long long v108 = v23;
  uint64_t v104 = v4;
  if (v23)
  {
    uint64_t v97 = v20;
    uint64_t v98 = v8;
    uint64_t v109 = (void (*)(char *, uint64_t))(a2 + 32);
    uint64_t v4 = v13 + 48;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v107 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v99 = a2;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      uint64_t v26 = *((void *)v109 + v13);
      uint64_t v27 = v26 + 64;
      unint64_t v28 = *(void *)(v26 + 64);
      char v29 = *(unsigned char *)(v26 + 32);
      unsigned int v30 = v29 & 0x3F;
      uint64_t v31 = 1 << v29;
      if (v28)
      {
        uint64_t v32 = 0;
        unint64_t v33 = *(void *)(v26 + 64);
      }
      else
      {
        if (v30 < 7) {
          goto LABEL_73;
        }
        unint64_t v33 = *(void *)(v26 + 72);
        if (!v33)
        {
          uint64_t v34 = 0;
          unint64_t v35 = 2;
          if ((unint64_t)(v31 + 63) >> 6 > 2) {
            unint64_t v35 = (unint64_t)(v31 + 63) >> 6;
          }
          unint64_t v36 = v35 - 2;
          while (v36 != v34)
          {
            unint64_t v33 = *(void *)(v26 + 80 + 8 * v34++);
            if (v33)
            {
              uint64_t v32 = v34 + 1;
              goto LABEL_14;
            }
          }
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v32 = 1;
      }
LABEL_14:
      unint64_t v37 = __clz(__rbit64(v33));
      uint64_t v38 = v37 + (v32 << 6);
      if (v38 == v31) {
        goto LABEL_73;
      }
      if (v38 < 0)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      if (v38 >= v31) {
        goto LABEL_66;
      }
      if (((*(void *)(v27 + (((unint64_t)v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        goto LABEL_67;
      }
      if (v28)
      {
        uint64_t v39 = 0;
      }
      else
      {
        if (v30 < 7) {
          goto LABEL_74;
        }
        unint64_t v28 = *(void *)(v26 + 72);
        if (!v28)
        {
          uint64_t v40 = 0;
          unint64_t v41 = 2;
          if ((unint64_t)(v31 + 63) >> 6 > 2) {
            unint64_t v41 = (unint64_t)(v31 + 63) >> 6;
          }
          unint64_t v42 = v41 - 2;
          while (v42 != v40)
          {
            unint64_t v28 = *(void *)(v26 + 80 + 8 * v40++);
            if (v28)
            {
              uint64_t v39 = v40 + 1;
              goto LABEL_29;
            }
          }
LABEL_74:
          __break(1u);
          return result;
        }
        uint64_t v39 = 1;
      }
LABEL_29:
      unint64_t v43 = __clz(__rbit64(v28));
      uint64_t v44 = v43 + (v39 << 6);
      if (v44 == v31) {
        goto LABEL_74;
      }
      if (v44 < 0) {
        goto LABEL_68;
      }
      if (v44 >= v31) {
        goto LABEL_69;
      }
      if (((*(void *)(v27 + (((unint64_t)v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
        goto LABEL_70;
      }
      uint64_t v45 = (uint64_t *)(*(void *)(v26 + 48) + 16 * v44);
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      swift_bridgeObjectRetain();
      sub_100033278(v46, v47);
      sub_1004CB5D0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v4)(v11, 1, v12) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1000332E0(v46, v47);
        sub_1002DAA7C((uint64_t)v11);
        return 0;
      }
      (*v24)(v22, v11, v12);
      if (sub_1004CB570())
      {
        swift_bridgeObjectRelease();
        if (qword_1006269F0 != -1) {
          swift_once();
        }
        uint64_t v55 = v110;
        uint64_t v56 = sub_1004CB100();
        uint64_t v58 = v57;
        swift_beginAccess();
        sub_100033278(v46, v47);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v111 = off_100637380;
        off_100637380 = (_UNKNOWN *)0x8000000000000000;
        sub_10021B3C0(v46, v47, v56, v58, isUniquelyReferenced_nonNull_native);
        off_100637380 = v111;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v60 = v98;
        sub_1004CC710();
        uint64_t v61 = v97;
        (*(void (**)(char *, void *, uint64_t))(v105 + 16))(v97, v55, v12);
        sub_100033278(v46, v47);
        sub_100033278(v46, v47);
        uint64_t v62 = sub_1004CC760();
        os_log_type_t v63 = sub_1004CE350();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = swift_slowAlloc();
          uint64_t v110 = (void *)swift_slowAlloc();
          uint64_t v111 = v110;
          *(_DWORD *)uint64_t v64 = 136315394;
          uint64_t v65 = sub_1004CB100();
          *(void *)&long long v112 = sub_100187CC4(v65, v66, (uint64_t *)&v111);
          sub_1004CF1F0();
          swift_bridgeObjectRelease();
          uint64_t v109 = *v107;
          v109(v61, v12);
          *(_WORD *)(v64 + 12) = 2080;
          *(void *)&long long v112 = v46;
          *((void *)&v112 + 1) = v47;
          sub_100033278(v46, v47);
          uint64_t v67 = sub_1004CDBA0();
          *(void *)&long long v112 = sub_100187CC4(v67, v68, (uint64_t *)&v111);
          sub_1004CF1F0();
          swift_bridgeObjectRelease();
          sub_1000332E0(v46, v47);
          sub_1000332E0(v46, v47);
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "Dynamically mapped %s to DOCItemFileTypeGroupCategory %s", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v104);
          v109(v22, v12);
        }
        else
        {

          sub_1000332E0(v46, v47);
          sub_1000332E0(v46, v47);
          uint64_t v69 = *v107;
          (*v107)(v61, v12);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v60, v104);
          v69(v22, v12);
        }
        return v46;
      }
      ++v13;
      (*v107)(v22, v12);
      uint64_t result = sub_1000332E0(v46, v47);
      if ((void (*)(char *, unint64_t, uint64_t))v13 == v108)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v104;
        uint64_t v13 = v105;
        uint64_t v18 = v106;
        break;
      }
    }
  }
  uint64_t v48 = v103;
  uint64_t v109 = *(void (**)(char *, uint64_t))(v103 + 16);
  if (!v109) {
    goto LABEL_59;
  }
  unint64_t v49 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v50 = v13;
  uint64_t v51 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v13 += 16;
  long long v108 = v51;
  v51(v18, v103 + v49, v12);
  unint64_t v52 = sub_1002DA96C();
  swift_bridgeObjectRetain();
  uint64_t v107 = (void (**)(char *, uint64_t))v52;
  char v53 = sub_1004CDAA0();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v50 + 8);
  v54(v18, v12);
  if ((v53 & 1) == 0)
  {
    if (v109 != (void (*)(char *, uint64_t))1)
    {
      uint64_t v70 = v106;
      uint64_t v71 = *(void *)(v105 + 72);
      unint64_t v72 = v48 + v71 + v49;
      uint64_t v4 = 1;
      while (1)
      {
        v108(v70, v72, v12);
        uint64_t v73 = (void (*)(char *, uint64_t))(v4 + 1);
        if (__OFADD__(v4, 1)) {
          break;
        }
        char v74 = sub_1004CDAA0();
        v54(v70, v12);
        if (v74)
        {
          swift_bridgeObjectRelease();
          uint64_t v4 = v104;
          goto LABEL_55;
        }
        ++v4;
        v72 += v71;
        if (v73 == v109)
        {
          swift_bridgeObjectRelease();
          uint64_t v4 = v104;
          goto LABEL_53;
        }
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    swift_bridgeObjectRelease();
LABEL_53:
    uint64_t v13 = v105;
LABEL_59:
    if (qword_1006269F0 == -1)
    {
LABEL_60:
      uint64_t v82 = v110;
      uint64_t v83 = sub_1004CB100();
      uint64_t v85 = v84;
      swift_beginAccess();
      char v86 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v111 = off_100637380;
      off_100637380 = (_UNKNOWN *)0x8000000000000000;
      sub_10021B3C0(0, 10, v83, v85, v86);
      off_100637380 = v111;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v87 = v102;
      sub_1004CC710();
      uint64_t v88 = v100;
      (*(void (**)(char *, void *, uint64_t))(v13 + 16))(v100, v82, v12);
      uint64_t v89 = sub_1004CC760();
      os_log_type_t v90 = sub_1004CE350();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = swift_slowAlloc();
        uint64_t v111 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v91 = 136315394;
        uint64_t v92 = sub_1004CB100();
        *(void *)&long long v112 = sub_100187CC4(v92, v93, (uint64_t *)&v111);
        sub_1004CF1F0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v88, v12);
        *(_WORD *)(v91 + 12) = 2080;
        long long v112 = xmmword_1004E9000;
        uint64_t v94 = sub_1004CDBA0();
        *(void *)&long long v112 = sub_100187CC4(v94, v95, (uint64_t *)&v111);
        sub_1004CF1F0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "Could not map %s to a DOCItemFileTypeGroupCategory. Caching result category: %s", (uint8_t *)v91, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v104);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v88, v12);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v87, v4);
      }
      return 0;
    }
LABEL_72:
    swift_once();
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
LABEL_55:
  uint64_t v75 = sub_1004CB220();
  uint64_t v13 = v105;
  if (!v76) {
    goto LABEL_59;
  }
  uint64_t v46 = v75;
  uint64_t v77 = v76;
  if (qword_1006269F0 != -1) {
    swift_once();
  }
  uint64_t v78 = sub_1004CB100();
  uint64_t v80 = v79;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v81 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v111 = off_100637380;
  off_100637380 = (_UNKNOWN *)0x8000000000000000;
  sub_10021B3C0(v46, v77, v78, v80, v81);
  off_100637380 = v111;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v46;
}

void *sub_100390B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v5 = sub_100031648((uint64_t *)&unk_10062F860);
  __chkstk_darwin(v5 - 8);
  uint64_t v39 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1004CB5C0();
  uint64_t v7 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v31 = v3;
    uint64_t v40 = _swiftEmptyArrayStorage;
    sub_1001884A4(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    unint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v12 = *(void *)(v7 + 72);
    uint64_t v32 = (void (**)(void *, uint64_t))(v7 + 8);
    unint64_t v33 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    do
    {
      uint64_t v13 = sub_1004CB100();
      uint64_t v15 = v14;
      if (qword_1006269F0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v16 = off_100637380;
      if (*((void *)off_100637380 + 2))
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1001DB86C(v13, v15);
        if (v18)
        {
          uint64_t v19 = (uint64_t *)(v16[7] + 16 * v17);
          uint64_t v20 = *v19;
          unint64_t v21 = v19[1];
          swift_endAccess();
          sub_100033278(v20, v21);
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      v41._countAndFlagsBits = 778991972;
      v41._object = (void *)0xE400000000000000;
      if (!sub_1004CDD60(v41))
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = (uint64_t)v39;
        sub_1004CB5D0();
        uint64_t v23 = v38;
        if ((*v37)(v22, 1, v38) != 1)
        {
          uint64_t v27 = v34;
          (*v33)(v34, v22, v23);
          uint64_t v28 = sub_10038FED4(v27, v35, v36);
          unint64_t v21 = v29;
          (*v32)(v27, v23);
          swift_bridgeObjectRelease();
          if (v21 == 11) {
            uint64_t v20 = 0;
          }
          else {
            uint64_t v20 = v28;
          }
          if (v21 == 11) {
            unint64_t v21 = 10;
          }
          goto LABEL_14;
        }
        sub_1002DAA7C(v22);
      }
      uint64_t v20 = 0;
      unint64_t v21 = 10;
LABEL_13:
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t v10 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001884A4(0, v10[2] + 1, 1);
        uint64_t v10 = v40;
      }
      unint64_t v25 = v10[2];
      unint64_t v24 = v10[3];
      if (v25 >= v24 >> 1)
      {
        sub_1001884A4(v24 > 1, v25 + 1, 1);
        uint64_t v10 = v40;
      }
      void v10[2] = v25 + 1;
      uint64_t v26 = &v10[2 * v25];
      v26[4] = v20;
      v26[5] = v21;
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t getEnumTagSinglePayload for DOCItemFileTypeGroupCategory(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF4 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483637);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 10;
  if (v4 >= 0xC) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCItemFileTypeGroupCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 10;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemFileTypeGroupCategory()
{
  return &type metadata for DOCItemFileTypeGroupCategory;
}

unint64_t sub_100390FC4()
{
  unint64_t result = qword_1006373A0;
  if (!qword_1006373A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006373A0);
  }
  return result;
}

uint64_t static DOCNamedLocation.from(location:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1004CC770();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CDBB0();
  uint64_t v10 = v8;
  if (v9 == 0x746E656D75636F64 && v8 == 0xE900000000000073 || (sub_1004CF890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v9 == 0x706F746B736564 && v10 == 0xE700000000000000 || (sub_1004CF890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v9 == 0x64616F6C6E776F64 && v10 == 0xE900000000000073 || (sub_1004CF890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (v9 == 0x726464756F6C6369 && v10 == 0xEB00000000657669)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  char v12 = sub_1004CF890();
  swift_bridgeObjectRelease();
  if (v12) {
    return 3;
  }
  sub_1004CC710();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1004CC760();
  os_log_type_t v14 = sub_1004CE350();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    v16[1] = v15 + 4;
    swift_bridgeObjectRetain();
    void v16[2] = sub_100187CC4(a1, a2, &v17);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Can not create a named location from provided string: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

unint64_t DOCNamedLocation.init(rawValue:)(unint64_t a1)
{
  return sub_100381E24(a1);
}

_UNKNOWN **static DOCNamedLocation.allCases.getter()
{
  return &off_1005B5758;
}

void sub_100391454(void *a1@<X8>)
{
  *a1 = &off_1005B5798;
}

unint64_t sub_100391468()
{
  unint64_t result = qword_1006373A8;
  if (!qword_1006373A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006373A8);
  }
  return result;
}

unint64_t sub_1003914C0()
{
  unint64_t result = qword_1006373B0;
  if (!qword_1006373B0)
  {
    sub_1000316E8(&qword_1006373B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006373B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNamedLocation()
{
  return &type metadata for DOCNamedLocation;
}

uint64_t sub_10039152C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v14 = a1;
  uint64_t v13 = sub_1004CE620();
  uint64_t v3 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CD8C0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1004CE5F0();
  __chkstk_darwin(v7);
  *(_WORD *)(v1 + 16) = 512;
  *(unsigned char *)(v1 + 18) = 2;
  sub_10003A680();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_100060C40((unint64_t *)&qword_10062CDB0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100031648((uint64_t *)&unk_100626B80);
  sub_10005B6A0((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
  sub_1004CF330();
  sub_1004CD880();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)(v1 + 32) = sub_1004CE670();
  uint64_t v8 = (void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado29DOCProviderDomainStateManager_domainStatePollingInterval);
  *uint64_t v8 = 2;
  uint64_t v9 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v10 = sub_1004CD840();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  *(void *)(v2 + 24) = v14;
  return v2;
}

uint64_t sub_1003917E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1004CD860();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1004CD8C0();
  uint64_t v12 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v4 + 32);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v15;
  void v16[3] = a2;
  void v16[4] = a3;
  v16[5] = a1;
  aBlock[4] = sub_100392570;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D1338;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v18 = a1;
  sub_1004CD880();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100060C40((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  swift_release();
  return swift_release();
}

void sub_100391AE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = *(void **)(Strong + 24);
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = v8;
    v10[3] = a2;
    uint64_t v10[4] = a3;
    v10[5] = a4;
    aBlock[4] = sub_100392598;
    void aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100392300;
    void aBlock[3] = &unk_1005D1388;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v9;
    swift_retain();
    swift_retain();
    id v13 = a4;
    swift_release();
    [v12 domainStateWithCompletionHandler:v11];
    _Block_release(v11);
    swift_release();
  }
}

uint64_t sub_100391C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  uint64_t v41 = a4;
  uint64_t v9 = sub_1004CD860();
  uint64_t v44 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1004CD8C0();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1004CD900();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v33 - v20;
  id v39 = [*(id *)(a3 + 24) disconnectionState];
  if (([*(id *)(a3 + 24) isiCloudDriveProvider] & 1) != 0 || a1 == 2)
  {
    *(unsigned char *)(a3 + 16) = 1;
    uint64_t v37 = *(void *)(a3 + 32);
    sub_1004CD8E0();
    uint64_t v36 = v21;
    sub_1004CD960();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v33 = v16 + 8;
    uint64_t v38 = v22;
    v22(v19, v15);
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v24 = v41;
    v23[2] = a3;
    v23[3] = v24;
    v23[4] = a5;
    uint64_t v50 = sub_100392634;
    uint64_t v51 = v23;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1003A422C;
    unint64_t v49 = &unk_1005D1428;
    uint64_t v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_1004CD880();
    uint64_t v45 = _swiftEmptyArrayStorage;
    sub_100060C40((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v35 = v15;
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    sub_1004CF330();
    unint64_t v25 = v36;
    uint64_t v26 = v34;
    sub_1004CE600();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v43);
    v38(v25, v35);
    swift_release();
  }
  if (a1 == 2) {
    char v27 = 2;
  }
  else {
    char v27 = 1;
  }
  BOOL v28 = v39 != (id)1;
  if (v39 == (id)1) {
    char v29 = v27;
  }
  else {
    char v29 = 0;
  }
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v41;
  *(void *)(v30 + 24) = a5;
  *(unsigned char *)(v30 + 32) = v29;
  *(void *)(v30 + 40) = a3;
  uint64_t v50 = sub_1003925E4;
  uint64_t v51 = (void *)v30;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  uint64_t v48 = sub_1003A422C;
  unint64_t v49 = &unk_1005D13D8;
  uint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_1004CD880();
  uint64_t v45 = _swiftEmptyArrayStorage;
  sub_100060C40((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v43);
  uint64_t result = swift_release();
  *(unsigned char *)(a3 + 17) = v28;
  *(unsigned char *)(a3 + 18) = a1 == 2;
  return result;
}

void sub_1003921D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    sub_10003A680();
    id v5 = (id)sub_1004CE630();
    sub_1003917E8(v5, a2, a3);
  }
}

uint64_t sub_100392264(void (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [*(id *)(a4 + 24) localizedDisconnectionBannerText];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1004CDB50();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  a1(a3, v8, v10);
  return swift_bridgeObjectRelease();
}

void sub_100392300(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, v6);
  swift_release();
}

uint64_t sub_100392378()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14RecentsAvocado29DOCProviderDomainStateManager_domainStatePollingInterval;
  uint64_t v2 = sub_1004CD840();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_100392428()
{
  return type metadata accessor for DOCProviderDomainStateManager();
}

uint64_t type metadata accessor for DOCProviderDomainStateManager()
{
  uint64_t result = qword_1006373F0;
  if (!qword_1006373F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10039247C()
{
  uint64_t result = sub_1004CD840();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100392534()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100392570()
{
  sub_100391AE0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10039257C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10039258C()
{
  return swift_release();
}

uint64_t sub_100392598(uint64_t a1, uint64_t a2)
{
  return sub_100391C1C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1003925A4()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003925E4()
{
  return sub_100392264(*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003925F4()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100392634()
{
  sub_1003921D4(v0[2], v0[3], v0[4]);
}

uint64_t sub_100392658(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_10039268C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)(v3 + 32);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v9 = sub_100344F54(v3 + 32, a1);
  swift_unknownObjectRelease();
  int64_t v10 = *(void *)(*(void *)(v3 + 32) + 16);
  if (v10 < v9)
  {
    __break(1u);
LABEL_9:
    uint64_t v4 = sub_100236784(0, v4[2] + 1, 1, v4);
    *uint64_t v8 = v4;
    goto LABEL_4;
  }
  sub_1002D3000(v9, v10);
  uint64_t result = swift_endAccess();
  if (!a2) {
    return result;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  swift_beginAccess();
  uint64_t v4 = (void *)*v8;
  swift_unknownObjectRetain();
  sub_100039174(a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v14 = v4[2];
  unint64_t v13 = v4[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v4 = sub_100236784((void *)(v13 > 1), v14 + 1, 1, v4);
    *uint64_t v8 = v4;
  }
  v4[2] = v14 + 1;
  uint64_t v15 = &v4[3 * v14];
  v15[4] = a1;
  void v15[5] = sub_1003937E8;
  v15[6] = v9;
  return swift_endAccess();
}

uint64_t sub_100392818()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCFakeStaticContentProgress.dateStarted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 20);
  uint64_t v4 = sub_1004CAD80();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DOCFakeStaticContentProgress()
{
  uint64_t result = qword_100637670;
  if (!qword_100637670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DOCFakeStaticContentProgress.dateStarted.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 20);
  uint64_t v4 = sub_1004CAD80();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*DOCFakeStaticContentProgress.dateStarted.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

id DOCFakeStaticContentProgress.progress.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 24));
  return v1;
}

void DOCFakeStaticContentProgress.progress.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 24);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*DOCFakeStaticContentProgress.progress.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFakeStaticContentProgress.iconType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 28);
  return sub_1000C9920(v3, a1);
}

uint64_t DOCFakeStaticContentProgress.iconType.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 28);
  return sub_10034540C(a1, v3);
}

uint64_t (*DOCFakeStaticContentProgress.iconType.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t sub_100392B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1004CAD80();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

id sub_100392BA4(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 24));
}

uint64_t type metadata accessor for DOCStaticContentOperationSource()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for DOCFakeStaticContentProgress(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1004CAD80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    unint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v14;
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
    id v18 = v14;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v22;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1004CB5C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t destroy for DOCFakeStaticContentProgress(uint64_t a1, int *a2)
{
  sub_100039184(a1);
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = a1 + a2[7];
  type metadata accessor for DOCProgressProvidingOperationIconType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v8 = sub_1004CB5C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v6, v8);
  }
  return result;
}

uint64_t initializeWithCopy for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  unint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
  id v17 = v13;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = v15[1];
    *unint64_t v14 = *v15;
    v14[1] = v20;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_1004CB5C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for DOCFakeStaticContentProgress(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_1000ABA90(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1004CAD80();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
  id v13 = v11;

  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1000CA12C((uint64_t)a1 + v14);
    uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_1004CB5C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t initializeWithTake for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DOCProgressProvidingOperationIconType();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1004CB5C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100039184(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1004CAD80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  if (a1 != a2)
  {
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_1000CA12C(a1 + v13);
    uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1004CB5C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100393464);
}

uint64_t sub_100393464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1004CAD80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003935A4);
}

uint64_t sub_1003935A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1004CAD80();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1003936D0()
{
  uint64_t result = sub_1004CAD80();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003937B0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003937E8(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void sub_100393818(char *a1)
{
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension) == 1)
  {
    v14.receiver = v1;
    v14.super_class = (Class)swift_getObjectType();
    id v3 = objc_msgSendSuper2(&v14, "text");
    if (v3)
    {
      unint64_t v4 = v3;
      uint64_t v5 = sub_1004CDB50();
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v7 = 0xE000000000000000;
    }
    uint64_t v8 = sub_100397358(v5, v7, a1);
    swift_bridgeObjectRelease();
    id v9 = [v1 endOfDocument];
    if (__OFSUB__(0, v8))
    {
      __break(1u);
    }
    else
    {
      uint64_t v10 = v9;
      id v11 = [v1 positionFromPosition:v9 offset:-(uint64_t)v8];

      if (v11)
      {
        id v12 = [v1 beginningOfDocument];
        id v13 = [v1 textRangeFromPosition:v12 toPosition:v11];

        [v1 setSelectedTextRange:v13];
      }
    }
  }
  else
  {
    [v1 selectAll:0];
  }
}

void sub_1003939B0(char *a1)
{
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension) != 1)
  {
    id v8 = [v1 endOfDocument];
LABEL_8:
    id v12 = [v1 textRangeFromPosition:v8 toPosition:v8];
    [v1 setSelectedTextRange:v12];

    return;
  }
  v13.receiver = v1;
  v13.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v13, "text");
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1004CDB50();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0xE000000000000000;
  }
  id v9 = sub_100397358(v5, v7, a1);
  swift_bridgeObjectRelease();
  id v10 = [v1 endOfDocument];
  if (__OFSUB__(0, v9))
  {
    __break(1u);
    return;
  }
  id v11 = v10;
  id v8 = [v1 positionFromPosition:v10 offset:-(uint64_t)v9];

  if (v8) {
    goto LABEL_8;
  }
}

id sub_100393B10()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___clearButton;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___clearButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___clearButton);
  }
  else
  {
    unint64_t v4 = sub_100395AF0();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100393C60()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___notificationsController;
  if (*(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___notificationsController])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___notificationsController];
  }
  else
  {
    id v3 = v0;
    sub_100031648(&qword_1006377C8);
    swift_allocObject();
    unint64_t v4 = v0;
    uint64_t v2 = sub_1004CE3D0();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_100393D10(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_itemRenameDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_canDisplayExtension] = 0;
  v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___notificationsController] = 0;
  v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___backgroundView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin] = 0x4000000000000000;
  *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_contentSizeObserver] = 0;
  v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___clearButton] = 0;
  v22.receiver = v5;
  v22.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v22, "initWithFrame:textContainer:", 0, 0.0, 0.0, 0.0, 0.0);
  [v9 setReturnKeyType:9];
  [v9 setEnablesReturnKeyAutomatically:1];
  id v10 = self;
  id v11 = v9;
  NSString v12 = [v10 inlineRenameField];
  if (!v12)
  {
    sub_1004CDB50();
    NSString v12 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  [v11 setAccessibilityIdentifier:v12];

  [v11 setSmartInsertDeleteType:1];
  v21.receiver = v11;
  v21.super_class = ObjectType;
  objc_msgSendSuper2(&v21, "setDelegate:", v11);
  NSString v13 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  v20.receiver = v11;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "setText:", v13);

  *((unsigned char *)v11 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_canDisplayExtension) = a3 & 1;
  *((unsigned char *)v11 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension) = a4 & 1;
  sub_100393C60();
  objc_super v14 = self;
  id v15 = objc_msgSend(v14, "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  sub_1004CE3B0();
  swift_release();

  swift_bridgeObjectRelease();
  sub_100035F60((uint64_t)&v19);
  sub_100393C60();
  id v16 = objc_msgSend(v14, "mainQueue", 0, 0, 0, 0);
  sub_1004CE3B0();
  swift_release();

  swift_bridgeObjectRelease();
  sub_100035F60((uint64_t)&v19);
  sub_100393C60();
  id v17 = objc_msgSend(v14, "mainQueue", 0, 0, 0, 0);
  sub_1004CE3B0();
  swift_release();

  swift_bridgeObjectRelease();
  sub_100035F60((uint64_t)&v19);
  return v11;
}

uint64_t sub_1003940C0(uint64_t a1, uint64_t a2)
{
  return sub_1003941E4(a1, a2, 1);
}

uint64_t sub_1003940C8(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v12, "text");
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1004CDB50();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  if (sub_1004CDC90() < 1 || (a1 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    unint64_t v7 = 0;
  }
  id v8 = &v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_itemRenameDelegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v9 = *((void *)v8 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, unint64_t, void, uint64_t, uint64_t))(v9 + 8))(v1, v5, v7, v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension], ObjectType, v9);
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003941DC(uint64_t a1, uint64_t a2)
{
  return sub_1003941E4(a1, a2, 0);
}

uint64_t sub_1003941E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_1004CA6F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CC770();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  objc_super v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC730();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  NSString v13 = sub_1004CC760();
  os_log_type_t v14 = sub_1004CE350();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    os_log_t v29 = v13;
    uint64_t v16 = swift_slowAlloc();
    int v27 = v15;
    id v17 = (uint8_t *)v16;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v33 = v28;
    uint64_t v31 = v9;
    *(_DWORD *)id v17 = 136315138;
    v25[1] = v17 + 4;
    uint64_t v26 = v17;
    id v18 = (void *)sub_1004CA6C0();
    uint64_t v19 = sub_1004CDB50();
    uint64_t v30 = v10;
    uint64_t v20 = v19;
    unint64_t v22 = v21;

    uint64_t v32 = sub_100187CC4(v20, v22, &v33);
    sub_1004CF1F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    os_log_t v23 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v27, "Received %s notification", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return sub_1003940C8(a3 & 1);
}

id DOCItemRenameTextView.backgroundColor.getter()
{
  return sub_100396E0C((SEL *)&selRef_backgroundColor);
}

void DOCItemRenameTextView.backgroundColor.setter(void *a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "setBackgroundColor:", a1);
}

void (*DOCItemRenameTextView.backgroundColor.modify(objc_super **a1))(objc_super **a1, char a2)
{
  objc_super v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].super_class = v1;
  uint64_t ObjectType = swift_getObjectType();
  v3[4].receiver = (id)ObjectType;
  v3->receiver = v1;
  v3->super_class = (Class)ObjectType;
  v3[3].receiver = [(objc_super *)v3 backgroundColor];
  return sub_100394630;
}

void sub_100394630(objc_super **a1, char a2)
{
  uint64_t v2 = *a1;
  id receiver = (*a1)[3].receiver;
  Class super_class = (*a1)[3].super_class;
  unint64_t v4 = (objc_class *)(*a1)[4].receiver;
  if (a2)
  {
    v2[1].id receiver = super_class;
    v2[1].Class super_class = v4;
    objc_msgSendSuper2(v2 + 1, "setBackgroundColor:", receiver);
    id receiver = v2[3].receiver;
  }
  else
  {
    v2[2].id receiver = super_class;
    v2[2].Class super_class = v4;
    objc_msgSendSuper2(v2 + 2, "setBackgroundColor:", receiver);
  }

  free(v2);
}

void sub_1003946BC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_100031648(&qword_100635950);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle))
  {
    objc_super v12 = &selRef_clearColor;
LABEL_7:
    id v13 = [self *v12];
    v17.id receiver = v1;
    v17.Class super_class = ObjectType;
    objc_msgSendSuper2(&v17, "setBackgroundColor:", v13);

    [v1 setHoverStyle:0];
    id v14 = sub_10039492C();
    [v14 setHoverStyle:0];

    id v15 = sub_10039492C();
    [v15 removeFromSuperview];

    return;
  }
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle) != 1)
  {
    objc_super v12 = &selRef_systemBackgroundColor;
    goto LABEL_7;
  }
  id v6 = [self clearColor];
  v16.id receiver = v1;
  v16.Class super_class = ObjectType;
  objc_msgSendSuper2(&v16, "setBackgroundColor:", v6);

  [v1 setHoverStyle:0];
  id v7 = sub_10039492C();
  sub_1000333C8(0, &qword_100635960);
  sub_1004CD2B0();
  uint64_t v8 = sub_1004CD2F0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
  uint64_t v9 = (void *)sub_1004CE2A0();
  [v7 setHoverStyle:v9];

  id v10 = sub_10039492C();
  id v11 = [v10 superview];

  if (!v11) {
    sub_10039498C();
  }
}

id sub_10039492C()
{
  uint64_t v1 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___backgroundView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___backgroundView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___backgroundView);
  }
  else
  {
    id v4 = sub_100395838();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10039498C()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    id v30 = v2;
    id v3 = sub_10039492C();
    [v30 insertSubview:v3 belowSubview:v1];

    id v4 = self;
    sub_100031648(&qword_100628240);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1004E5B40;
    id v6 = sub_10039492C();
    id v7 = [v6 topAnchor];

    id v8 = [v1 topAnchor];
    uint64_t v9 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin;
    id v10 = [v7 constraintEqualToAnchor:v8 constant:-*(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin]];

    *(void *)(v5 + 32) = v10;
    id v11 = sub_10039492C();
    id v12 = [v11 leadingAnchor];

    id v13 = [v1 leadingAnchor];
    [v1 textContainerInset];
    id v15 = [v12 constraintEqualToAnchor:v13 constant:v14];

    *(void *)(v5 + 40) = v15;
    id v16 = sub_10039492C();
    id v17 = [v16 trailingAnchor];

    id v18 = [v1 trailingAnchor];
    [v1 textContainerInset];
    id v20 = [v17 constraintEqualToAnchor:v18 constant:-v19];

    *(void *)(v5 + 48) = v20;
    sub_1004CDE50();
    sub_1000333C8(0, (unint64_t *)&unk_100628430);
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v4 activateConstraints:isa];

    if (v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      [v1 contentSize];
      double v23 = v22;
      [v1 bounds];
      double Height = CGRectGetHeight(v32);
      if (Height >= v23) {
        double Height = v23;
      }
      double v25 = Height + *(double *)&v1[v9] + *(double *)&v1[v9];
      uint64_t v26 = (char *)sub_10039492C();
      *(double *)&v26[OBJC_IVAR____TtC14RecentsAvocadoP33_3F83016E1D60FFEBA040C7ECBE420DCA25DOCResizingBackgroundView_preferredHeight] = v25;
      [v26 invalidateIntrinsicContentSize];
    }
    uint64_t v27 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_contentSizeObserver;
    if (*(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_contentSizeObserver])
    {
    }
    else
    {
      swift_getKeyPath();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v28 = sub_1004CAAC0();
      swift_release();

      swift_release();
      os_log_t v29 = *(void **)&v1[v27];
      *(void *)&v1[v27] = v28;
    }
  }
}

Swift::Void __swiftcall DOCItemRenameTextView.layoutSubviews()()
{
  v21.id receiver = v0;
  v21.Class super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, "layoutSubviews");
  if (v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] == 1)
  {
    [v0 contentSize];
    double v2 = v1;
    [v0 bounds];
    double Height = CGRectGetHeight(v22);
    if (Height >= v2) {
      double Height = v2;
    }
    double v4 = Height
       + *(double *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin]
       + *(double *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin];
    uint64_t v5 = (char *)sub_10039492C();
    *(double *)&v5[OBJC_IVAR____TtC14RecentsAvocadoP33_3F83016E1D60FFEBA040C7ECBE420DCA25DOCResizingBackgroundView_preferredHeight] = v4;
    [v5 invalidateIntrinsicContentSize];
  }
  if (v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton] == 1)
  {
    [v0 textContainerInset];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    id v14 = sub_100393B10();
    [v14 frame];
    double v16 = v15;

    double v17 = v16 + 0.0;
    id v18 = [v0 effectiveUserInterfaceLayoutDirection];
    if (v18) {
      double v19 = v13;
    }
    else {
      double v19 = v17;
    }
    if (v18) {
      double v20 = v17;
    }
    else {
      double v20 = v9;
    }
    objc_msgSend(v0, "setTextContainerInset:", v7, v20, v11, v19);
  }
}

Swift::Void __swiftcall DOCItemRenameTextView.willMove(toSuperview:)(UIView_optional toSuperview)
{
  if (!toSuperview.value.super.super.isa)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle) == 1)
    {
      id v2 = sub_10039492C();
      [v2 removeFromSuperview];
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton) == 1)
    {
      id v3 = sub_100393B10();
      [v3 removeFromSuperview];
    }
  }
}

void sub_100395030()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension;
  if ((v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension] & 1) == 0)
  {
    double v4 = (objc_class *)ObjectType;
    uint64_t v5 = &v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_itemRenameDelegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *((void *)v5 + 1);
      uint64_t v7 = swift_getObjectType();
      uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v0, v7, v6);
      double v10 = v9;
      swift_unknownObjectRelease();
      if (v10)
      {
        v0[v3] = 1;
        uint64_t v24 = 46;
        unint64_t v25 = 0xE100000000000000;
        v26._countAndFlagsBits = v8;
        v26._object = v10;
        sub_1004CDCD0(v26);
        v23.id receiver = v0;
        v23.Class super_class = v4;
        id v11 = objc_msgSendSuper2(&v23, "text");
        if (v11)
        {
          double v12 = v11;
          uint64_t v13 = sub_1004CDB50();
          unint64_t v15 = v14;
        }
        else
        {
          uint64_t v13 = 0;
          unint64_t v15 = 0xE000000000000000;
        }
        uint64_t v24 = v13;
        unint64_t v25 = v15;
        v27._countAndFlagsBits = 46;
        v27._object = (void *)0xE100000000000000;
        sub_1004CDCD0(v27);
        swift_bridgeObjectRelease();
        NSString v16 = sub_1004CDB10();
        swift_bridgeObjectRelease();
        v22.id receiver = v1;
        v22.Class super_class = v4;
        objc_msgSendSuper2(&v22, "setText:", v16);

        id v17 = [v1 endOfDocument];
        uint64_t v18 = sub_1004CDD40();
        swift_bridgeObjectRelease();
        if (__OFSUB__(0, v18))
        {
          __break(1u);
        }
        else
        {
          id v19 = [v1 positionFromPosition:v17 offset:-v18];
          if (v19)
          {
            double v20 = v19;
            id v21 = [v1 textRangeFromPosition:v19 toPosition:v17];
            [v1 setSelectedTextRange:v21];
          }
        }
      }
    }
  }
}

Swift::Void __swiftcall DOCItemRenameTextView.didMoveToSuperview()()
{
  v1.id receiver = v0;
  v1.Class super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "didMoveToSuperview");
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle) == 1) {
    sub_10039498C();
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton) == 1) {
    sub_100395320();
  }
}

void sub_100395320()
{
  id v1 = [v0 superview];
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_100393B10();
    [v2 insertSubview:v3 aboveSubview:v0];

    id v4 = sub_100393B10();
    id v5 = [v4 trailingAnchor];

    id v6 = [v0 trailingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6 constant:-3.0];

    int v8 = v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle];
    id v9 = sub_100393B10();
    id v10 = [v9 centerYAnchor];

    if (v8 == 1)
    {
      id v11 = sub_10039492C();
      id v12 = [v11 centerYAnchor];
    }
    else
    {
      id v12 = [v0 centerYAnchor];
    }
    id v13 = [v10 constraintEqualToAnchor:v12 constant:1.0];

    unint64_t v14 = self;
    sub_100031648(&qword_100628240);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1004E5E30;
    *(void *)(v15 + 32) = v7;
    *(void *)(v15 + 40) = v13;
    sub_1004CDE50();
    sub_1000333C8(0, (unint64_t *)&unk_100628430);
    id v16 = v7;
    id v18 = v13;
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v14 activateConstraints:isa];
  }
}

uint64_t DOCItemRenameTextView.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (sub_1004CAF80()) {
    return 0;
  }
  if (sub_1004CAF80()) {
    return 1;
  }
  sub_10010E21C(a2, (uint64_t)v15);
  uint64_t v7 = v16;
  if (v16)
  {
    int v8 = sub_100032FD8(v15, v16);
    uint64_t v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8);
    id v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = sub_1004CF870();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_100039184((uint64_t)v15);
  }
  else
  {
    uint64_t v12 = 0;
  }
  v14.id receiver = v2;
  v14.Class super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v14, "canPerformAction:withSender:", a1, v12);
  swift_unknownObjectRelease();
  return (uint64_t)v6;
}

id sub_100395838()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCResizingBackgroundView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v1) = 1144750080;
  [v0 setContentHuggingPriority:1 forAxis:v1];
  [v0 setClipsToBounds:1];
  id v2 = self;
  id v3 = v0;
  id v4 = [v2 secondarySystemFillColor];
  [v3 setBackgroundColor:v4];

  id v5 = [v3 layer];
  [v5 setCornerRadius:6.0];

  id v6 = [v3 layer];
  [v6 setCornerCurve:kCACornerCurveContinuous];

  LODWORD(v7) = 1148846080;
  [v3 setContentCompressionResistancePriority:1 forAxis:v7];
  LODWORD(v8) = 1144750080;
  [v3 setContentHuggingPriority:1 forAxis:v8];
  return v3;
}

void sub_1003959C0()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = Strong;
    [Strong contentSize];
    if (v2 > 0.0 && v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      [v1 contentSize];
      double v4 = v3;
      [v1 bounds];
      double Height = CGRectGetHeight(v8);
      if (Height >= v4) {
        double Height = v4;
      }
      double v6 = Height
         + *(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin]
         + *(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin];
      double v7 = (char *)sub_10039492C();
      *(double *)&v7[OBJC_IVAR____TtC14RecentsAvocadoP33_3F83016E1D60FFEBA040C7ECBE420DCA25DOCResizingBackgroundView_preferredHeight] = v6;
      [v7 invalidateIntrinsicContentSize];

      double v1 = v7;
    }
  }
}

void *sub_100395AF0()
{
  uint64_t v0 = sub_1004CF0E0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  double v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  double v7 = (char *)&v27 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = self;

  sub_1004CEF80();
  id v11 = [self configurationWithScale:2];
  uint64_t v12 = self;
  NSString v13 = sub_1004CDB10();
  id v14 = objc_msgSend(v12, "__systemImageNamedSwift:", v13);

  if (v14)
  {
    id v15 = [v14 imageWithConfiguration:v11];
  }
  sub_1004CF0A0();
  id v16 = [self secondaryLabelColor];
  sub_1004CF070();

  sub_1000333C8(0, (unint64_t *)&unk_10062BA30);
  id v17 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v17(v7, v9, v0);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17(v4, v7, v0);
  sub_1000333C8(0, (unint64_t *)&qword_100628760);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100397C94;
  *(void *)(v19 + 24) = v18;
  swift_retain_n();
  sub_1004CEF50();
  double v20 = (void *)sub_1004CF0F0();
  swift_release();
  id v21 = *(void (**)(char *, uint64_t))(v1 + 8);
  v21(v7, v0);
  swift_release();
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v22) = 1148846080;
  [v20 setContentCompressionResistancePriority:0 forAxis:v22];
  LODWORD(v23) = 1148846080;
  [v20 setContentCompressionResistancePriority:1 forAxis:v23];
  id v24 = [v20 heightAnchor];
  id v25 = [v24 constraintGreaterThanOrEqualToConstant:44.0];

  [v25 setActive:1];
  v21(v9, v0);
  return v20;
}

void sub_100395F20()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100395F74();
  }
}

void sub_100395F74()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v47.id receiver = v0;
  v47.Class super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v47, "text");
  if (v3)
  {
    double v4 = v3;
    sub_1004CDB50();
  }
  NSString v5 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  id v6 = [v5 pathExtension];

  uint64_t v7 = sub_1004CDB50();
  unint64_t v9 = v8;

  uint64_t v10 = OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension;
  if (v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension] != 1) {
    goto LABEL_10;
  }
  v40.id receiver = v1;
  v40.Class super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v40, "text");
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1004CDB50();
  }
  v48._countAndFlagsBits = 46;
  v48._object = (void *)0xE100000000000000;
  BOOL v13 = sub_1004CDD60(v48);
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_10;
  }
  uint64_t v14 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v14 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    id v15 = [v1 undoManager];
    if (v15)
    {
      id v16 = v15;
      v41.id receiver = v1;
      v41.Class super_class = ObjectType;
      id v17 = objc_msgSendSuper2(&v41, "text");
      if (v17)
      {
        uint64_t v18 = v17;
        sub_1004CDB50();
      }
      NSString v19 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      [v16 registerUndoWithTarget:v1 selector:"undoClearTextWithPreviousText:" object:v19];
    }
    if (v1[v10] != 1) {
      goto LABEL_19;
    }
    uint64_t v20 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v20 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v20)
    {
      uint64_t v43 = 46;
      unint64_t v44 = 0xE100000000000000;
      v49._countAndFlagsBits = v7;
      v49._object = (void *)v9;
      sub_1004CDCD0(v49);
      swift_bridgeObjectRelease();
      NSString v21 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      v42.id receiver = v1;
      v42.Class super_class = ObjectType;
      objc_msgSendSuper2(&v42, "setText:", v21);

      id v22 = [v1 beginningOfDocument];
      id v23 = [v1 beginningOfDocument];
      NSString v24 = [v1 textRangeFromPosition:v22 toPosition:v23];

      [v1 setSelectedTextRange:v24];
    }
    else
    {
LABEL_19:
      swift_bridgeObjectRelease();
      NSString v24 = sub_1004CDB10();
      v46.id receiver = v1;
      v46.Class super_class = ObjectType;
      objc_msgSendSuper2(&v46, "setText:", v24);
    }

    if (v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      [v1 contentSize];
      double v26 = v25;
      [v1 bounds];
      double Height = CGRectGetHeight(v50);
      if (Height >= v26) {
        double Height = v26;
      }
      double v28 = Height
          + *(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin]
          + *(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin];
      os_log_t v29 = (char *)sub_10039492C();
      *(double *)&v29[OBJC_IVAR____TtC14RecentsAvocadoP33_3F83016E1D60FFEBA040C7ECBE420DCA25DOCResizingBackgroundView_preferredHeight] = v28;
      [v29 invalidateIntrinsicContentSize];
    }
    if (v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton] == 1)
    {
      id v30 = (void *)((uint64_t (*)(void))sub_100393B10)();
      unsigned int v31 = [v30 isHidden];

      v45.id receiver = v1;
      v45.Class super_class = ObjectType;
      id v32 = objc_msgSendSuper2(&v45, "text");
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = sub_1004CDB50();
        unint64_t v36 = v35;

        if (v34) {
          goto LABEL_32;
        }
      }
      else
      {
        unint64_t v36 = 0xE000000000000000;
      }
      if (v36 == 0xE000000000000000)
      {
        uint64_t v37 = swift_bridgeObjectRelease();
        if (v31) {
          return;
        }
        char v38 = 1;
LABEL_33:
        id v39 = (void *)sub_100393B10(v37);
        [v39 setHidden:v38 & 1];

        return;
      }
LABEL_32:
      char v38 = sub_1004CF890();
      uint64_t v37 = swift_bridgeObjectRelease();
      if (v31 == (v38 & 1)) {
        return;
      }
      goto LABEL_33;
    }
  }
}

unint64_t DOCItemRenameTextView.keyCommands.getter()
{
  v7.id receiver = v0;
  v7.Class super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v7, "keyCommands");
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1000333C8(0, (unint64_t *)&unk_10062F800);
    id v3 = (void *)sub_1004CDE30();
  }
  else
  {
    id v3 = _swiftEmptyArrayStorage;
  }
  unint64_t v8 = (unint64_t)v3;
  NSString v4 = sub_1004CDB10();
  id v5 = [self keyCommandWithInput:v4 modifierFlags:0 action:"endEdtingCell"];

  sub_1004CDE00();
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004CDE60();
  }
  sub_1004CDF40();
  sub_1004CDE50();
  return v8;
}

Swift::Bool __swiftcall DOCItemRenameTextView.textView(_:shouldChangeTextIn:replacementText:)(UITextView _, __C::_NSRange shouldChangeTextIn, Swift::String replacementText)
{
  object = replacementText._object;
  uint64_t countAndFlagsBits = replacementText._countAndFlagsBits;
  id v5 = [(objc_class *)_.super.super.super.super.isa markedTextRange];

  if (v5 || (countAndFlagsBits != 10 || object != (void *)0xE100000000000000) && (sub_1004CF890() & 1) == 0) {
    return 1;
  }
  sub_1003940C8(1);
  return 0;
}

Swift::Void __swiftcall DOCItemRenameTextView.textViewDidChange(_:)(UITextView a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = [(objc_class *)a1.super.super.super.super.isa markedTextRange];

  if (!v4)
  {
    if (v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      [v1 contentSize];
      double v6 = v5;
      [v1 bounds];
      double Height = CGRectGetHeight(v20);
      if (Height >= v6) {
        double Height = v6;
      }
      double v8 = Height
         + *(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin]
         + *(double *)&v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin];
      unint64_t v9 = (char *)sub_10039492C();
      *(double *)&v9[OBJC_IVAR____TtC14RecentsAvocadoP33_3F83016E1D60FFEBA040C7ECBE420DCA25DOCResizingBackgroundView_preferredHeight] = v8;
      [v9 invalidateIntrinsicContentSize];
    }
    if (v1[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton] == 1)
    {
      id v10 = sub_100393B10();
      unsigned int v11 = [v10 isHidden];

      v19.id receiver = v1;
      v19.Class super_class = ObjectType;
      id v12 = objc_msgSendSuper2(&v19, "text");
      if (v12)
      {
        BOOL v13 = v12;
        uint64_t v14 = sub_1004CDB50();
        unint64_t v16 = v15;

        if (v14) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v16 = 0xE000000000000000;
      }
      if (v16 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
        if (v11) {
          return;
        }
        char v17 = 1;
LABEL_15:
        id v18 = sub_100393B10();
        [v18 setHidden:v17 & 1];

        return;
      }
LABEL_14:
      char v17 = sub_1004CF890();
      swift_bridgeObjectRelease();
      if (v11 == (v17 & 1)) {
        return;
      }
      goto LABEL_15;
    }
  }
}

UIMenu_optional __swiftcall DOCItemRenameTextView.textView(_:editMenuForTextIn:suggestedActions:)(UITextView _, __C::_NSRange editMenuForTextIn, Swift::OpaquePointer suggestedActions)
{
  id v3 = sub_100397870((UIMenuElementSize)suggestedActions._rawValue);
  result.value.super.super.Class isa = v3;
  result.Swift::Bool is_nil = v4;
  return result;
}

uint64_t sub_1003969C0(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = (void *)result;
    v5[3] = sub_1000333C8(0, (unint64_t *)&qword_100628760);
    v5[0] = a1;
    id v4 = a1;
    sub_100395030();

    return sub_100035F60((uint64_t)v5);
  }
  return result;
}

id DOCItemRenameTextView.__allocating_init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = objc_msgSend(objc_allocWithZone(v5), "initWithFrame:textContainer:", a1, a2, a3, a4, a5);

  return v7;
}

void DOCItemRenameTextView.init(frame:textContainer:)()
{
}

id sub_100396DA8(void *a1, uint64_t a2, SEL *a3)
{
  v6.id receiver = a1;
  v6.Class super_class = (Class)swift_getObjectType();
  id v4 = objc_msgSendSuper2(&v6, *a3);
  return v4;
}

id DOCItemRenameTextView.delegate.getter()
{
  return sub_100396E0C((SEL *)&selRef_delegate);
}

id sub_100396E0C(SEL *a1)
{
  v5.id receiver = v1;
  v5.Class super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, *a1);
  return v3;
}

uint64_t (*DOCItemRenameTextView.delegate.modify(objc_super *a1))()
{
  uint64_t ObjectType = swift_getObjectType();
  a1->id receiver = v1;
  a1->Class super_class = (Class)ObjectType;
  a1[1].id receiver = [(objc_super *)a1 delegate];
  return sub_100396ECC;
}

uint64_t sub_100396ECC()
{
  return swift_unknownObjectRelease();
}

uint64_t DOCItemRenameTextView.text.getter()
{
  v5.id receiver = v0;
  v5.Class super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v5, "text");
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1004CDB50();

  return v3;
}

void DOCItemRenameTextView.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    NSString v5 = sub_1004CDB10();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v6.id receiver = v2;
  v6.Class super_class = ObjectType;
  objc_msgSendSuper2(&v6, "setText:", v5);
}

void (*DOCItemRenameTextView.text.modify(objc_super **a1))(uint64_t *a1, char a2)
{
  uint64_t v2 = v1;
  id v4 = (objc_super *)malloc(0x50uLL);
  *a1 = v4;
  v4[4].id receiver = v2;
  uint64_t ObjectType = swift_getObjectType();
  v4[4].Class super_class = (Class)ObjectType;
  v4[1].id receiver = v2;
  v4[1].Class super_class = (Class)ObjectType;
  id v6 = objc_msgSendSuper2(v4 + 1, "text");
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = sub_1004CDB50();
    id v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    id v10 = 0;
  }
  v4->id receiver = (id)v8;
  v4->Class super_class = v10;
  return sub_1003971D0;
}

void sub_1003971D0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      NSString v4 = sub_1004CDB10();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v4 = 0;
    }
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 64);
    objc_msgSendSuper2((objc_super *)(v2 + 32), "setText:", v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      NSString v5 = sub_1004CDB10();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v5 = 0;
    }
    *(_OWORD *)(v2 + 48) = *(_OWORD *)(v2 + 64);
    objc_msgSendSuper2((objc_super *)(v2 + 48), "setText:", v5);
  }
  free((void *)v2);
}

uint64_t sub_1003972BC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1004CDCA0();
    return sub_1004CDDA0();
  }
  return result;
}

char *sub_100397358(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_1004CB5C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3) {
    goto LABEL_15;
  }
  id v8 = [a3 contentType];
  sub_1004CB330();

  uint64_t v9 = sub_1004CB310();
  a3 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!a3) {
    goto LABEL_15;
  }
  NSString v11 = sub_1004CDB10();
  id v12 = [v11 pathExtension];

  uint64_t v13 = sub_1004CDB50();
  unint64_t v15 = v14;

  if (v9 == v13 && a3 == v15)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_1004CF890();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1004CDD40();
  swift_bridgeObjectRelease();
  if (v18 < 1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    a3 = 0;
    goto LABEL_15;
  }
  uint64_t v19 = sub_1004CDD40();
  swift_bridgeObjectRelease();
  a3 = (char *)(v19 + 1);
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  sub_1003972BC((uint64_t)a3);
  swift_bridgeObjectRelease();
  sub_1004CDBC0();
  swift_bridgeObjectRelease();
  sub_1004CDBF0();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1004CDD40();
  swift_bridgeObjectRelease();
  uint64_t result = &a3[v20];
  if (__OFADD__(a3, v20)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003975D8(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1004CF6D0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = -v5;
    if (!__OFSUB__(0, v5)) {
      goto LABEL_4;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = -v5;
  if (__OFSUB__(0, v5)) {
    goto LABEL_25;
  }
LABEL_4:
  uint64_t v7 = -v3;
  if (v6 > 0 || v6 <= v7)
  {
    uint64_t v8 = v5 - v3;
    if (__OFADD__(v5, v7))
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v8 < 0)
    {
LABEL_29:
      __break(1u);
      return result;
    }
    if (!v4) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (!v4)
    {
LABEL_7:
      uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1004CF6D0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1004CF6D0();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
  if (v9 < v8)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    type metadata accessor for DOCBrowserContainerController();
    Swift::Int v11 = 0;
    do
    {
      Swift::Int v12 = v11 + 1;
      sub_1004CF4F0(v11);
      Swift::Int v11 = v12;
    }
    while (v8 != v12);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1004CF6E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v13;
}

void sub_100397798()
{
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_itemRenameDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_canDisplayExtension] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___notificationsController] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_backgroundStyle] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_verticalMargin] = 0x4000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_contentSizeObserver] = 0;
  v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_showsClearButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView____lazy_storage___clearButton] = 0;

  sub_1004CF6B0();
  __break(1u);
}

Class sub_100397870(UIMenuElementSize a1)
{
  UIMenuElementSize v2 = a1;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_canDisplayExtension) != 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14RecentsAvocado21DOCItemRenameTextView_isDisplayingExtension);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_8:
    sub_1000333C8(0, (unint64_t *)&qword_1006288E0);
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v15.value._uint64_t countAndFlagsBits = 0;
    v15.value._object = 0;
    v11.value.super.Class isa = 0;
    v11.Swift::Bool is_nil = 0;
    v8.value = 0;
    return sub_1004CEB60(v13, v15, v11, v8, 0xFFFFFFFFFFFFFFFFLL, v2, (Swift::OpaquePointer)v9._object).super.super.isa;
  }
  Class result = (Class)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v5 = result;
    v9._uint64_t countAndFlagsBits = 0x8000000100534F00;
    v12._uint64_t countAndFlagsBits = 0x7478452074696445;
    v12._object = (void *)0xEE006E6F69736E65;
    v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._object = (void *)0xEB00000000656C62;
    v6.super.Class isa = v5;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    sub_1004CBEE0(v12, v14, v6, v16, v9);

    sub_1000333C8(0, (unint64_t *)&qword_100628760);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v9._object = 0;
    id v7 = (id)sub_1004CEF50();
    sub_1004CDE00();
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1004CDE60();
    }
    sub_1004CDF40();
    sub_1004CDE50();

    UIMenuElementSize v2 = a1;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCResizingBackgroundView()
{
  return self;
}

uint64_t type metadata accessor for DOCItemRenameTextView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCItemRenameTextView.BackgroundStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *Class result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100397BB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *Class result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemRenameTextView.BackgroundStyle()
{
  return &type metadata for DOCItemRenameTextView.BackgroundStyle;
}

unint64_t sub_100397BF0()
{
  unint64_t result = qword_1006377B8;
  if (!qword_1006377B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006377B8);
  }
  return result;
}

uint64_t sub_100397C44()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100397C7C(void *a1)
{
  return sub_1003969C0(a1);
}

void sub_100397C8C()
{
}

void sub_100397C94()
{
}

uint64_t sub_100397C9C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100397CD4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10039E8D0();
  }
}

id sub_100397D28()
{
  [*(id *)&v0[OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_sourceObserver] stopObservingSources];
  if (*(void *)&v0[OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_sharingFlowTask])
  {
    swift_retain();
    sub_100031648(&qword_1006301E0);
    sub_1004CE040();
    swift_release();
  }
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for DOCTipsManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100397F40()
{
  return type metadata accessor for DOCTipsManager(0);
}

uint64_t type metadata accessor for DOCTipsManager(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_100637888);
}

id sub_100397F68(void *a1, uint64_t a2)
{
  id v99 = a1;
  uint64_t v3 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100031648(&qword_10062DA50);
  __chkstk_darwin(v10 - 8);
  uint64_t v101 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1004CD3D0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String_optional v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1004CC770();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v92 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  os_log_t v29 = (char *)&v92 - v28;
  if (a2)
  {
    uint64_t v30 = (uint64_t)v101;
    if (a2 == 1)
    {
      uint64_t v31 = v25;
      uint64_t v32 = v100;
      uint64_t v33 = v23;
      sub_1004CC690();
      uint64_t v34 = sub_1004CC760();
      os_log_type_t v35 = sub_1004CE380();
      if (os_log_type_enabled(v34, v35))
      {
        unint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Files Family Tip, user sent folder invite", v36, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v33);
      v102[1] = *(id *)(v32 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTip);
      (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Tips.InvalidationReason.actionPerformed(_:), v12);
      type metadata accessor for DOCTipsFamilyTip();
      sub_1003A0828();
      swift_retain();
      sub_1004CD300();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_release();
      sub_1004CDB50();
      id v37 = objc_allocWithZone((Class)NSUserDefaults);
      NSString v38 = sub_1004CDB10();
      swift_bridgeObjectRelease();
      id v39 = [v37 initWithSuiteName:v38];

      if (v39)
      {
        [v39 setBool:1 forKey:DOCUserDefaultsKeyIsSharingFolderWithAdultFamilyMember];
      }
      uint64_t v40 = sub_1004CE000();
      uint64_t v30 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v101, 1, 1, v40);
      sub_1004CDFC0();
      uint64_t v41 = sub_1004CDFB0();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      *(void *)(v42 + 24) = &protocol witness table for MainActor;
      sub_100135EC0(v30, (uint64_t)&unk_100637960, v42);
      swift_release();
    }
  }
  else
  {
    unint64_t v95 = v24;
    uint64_t v96 = v9;
    uint64_t v92 = v26;
    unint64_t v93 = v27;
    uint64_t v43 = v25;
    uint64_t v97 = v7;
    uint64_t v98 = v23;
    sub_1004CC690();
    unint64_t v44 = sub_1004CC760();
    os_log_type_t v45 = sub_1004CE380();
    if (os_log_type_enabled(v44, v45))
    {
      objc_super v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Files Family Tip, user cancelled invite", v46, 2u);
      swift_slowDealloc();
    }

    objc_super v47 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v94 = v43 + 8;
    v47(v22, v98);
    uint64_t v48 = v100;
    uint64_t v49 = v100 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familyFolderFilePath;
    swift_beginAccess();
    sub_1000335A8(v49, (uint64_t)v5, (uint64_t *)&unk_10062B3B0);
    uint64_t v50 = v97;
    uint64_t v51 = v6;
    int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48))(v5, 1, v6);
    uint64_t v30 = (uint64_t)v101;
    if (v52 == 1)
    {
      sub_100049B74((uint64_t)v5, (uint64_t *)&unk_10062B3B0);
    }
    else
    {
      char v53 = v96;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v96, v5, v51);
      uint64_t v54 = *(void **)(v48 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_fileManager);
      sub_1004CAB60((NSURL *)OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_fileManager);
      uint64_t v56 = v55;
      type metadata accessor for URLResourceKey(0);
      Class isa = sub_1004CDE10().super.isa;
      v102[0] = 0;
      id v58 = [v54 contentsOfDirectoryAtURL:v56 includingPropertiesForKeys:isa options:0 error:v102];

      id v59 = v102[0];
      if (v58)
      {
        unint64_t v93 = (void (*)(uint64_t, uint64_t))v47;
        uint64_t v60 = sub_1004CDE30();
        id v61 = v59;

        sub_1004CC690();
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_1004CC760();
        os_log_type_t v63 = sub_1004CE380();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 134217984;
          v102[0] = *(id *)(v60 + 16);
          sub_1004CF1F0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "Files Family Tip, items in Family folder  %ld", v64, 0xCu);
          uint64_t v50 = v97;
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease();
        }

        uint64_t v71 = v93;
        v93((uint64_t)v95, v98);
        uint64_t v72 = *(void *)(v60 + 16);
        swift_bridgeObjectRelease();
        if (v72)
        {
          (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v51);
        }
        else
        {
          sub_1004CAB60(v73);
          uint64_t v75 = v74;
          v102[0] = 0;
          uint64_t v76 = v53;
          unsigned int v77 = [v54 removeItemAtURL:v74 error:v102];

          if (v77)
          {
            uint64_t v78 = *(void (**)(char *, uint64_t))(v50 + 8);
            id v79 = v102[0];
            v78(v76, v51);
          }
          else
          {
            id v80 = v102[0];
            sub_1004CAA60();

            swift_willThrow();
            sub_1004CC690();
            swift_errorRetain();
            swift_errorRetain();
            char v81 = sub_1004CC760();
            os_log_type_t v82 = sub_1004CE360();
            if (os_log_type_enabled(v81, v82))
            {
              uint64_t v83 = (uint8_t *)swift_slowAlloc();
              uint64_t v84 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v83 = 138412290;
              swift_errorRetain();
              uint64_t v85 = (void *)_swift_stdlib_bridgeErrorToNSError();
              v102[0] = v85;
              uint64_t v50 = v97;
              sub_1004CF1F0();
              *uint64_t v84 = v85;
              uint64_t v71 = v93;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v81, v82, "Files Family Tip, Failed to remove family folder with error: %@", v83, 0xCu);
              sub_100031648((uint64_t *)&unk_100628890);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_errorRelease();
              swift_errorRelease();
            }
            char v86 = v96;
            swift_errorRelease();
            v71(v92, v98);
            (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v51);
          }
        }
      }
      else
      {
        id v65 = v102[0];
        sub_1004CAA60();

        swift_willThrow();
        sub_1004CC690();
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v66 = sub_1004CC760();
        os_log_type_t v67 = sub_1004CE360();
        if (os_log_type_enabled(v66, v67))
        {
          unint64_t v68 = (uint8_t *)swift_slowAlloc();
          uint64_t v69 = (void *)swift_slowAlloc();
          unint64_t v95 = v68;
          *(_DWORD *)unint64_t v68 = 138412290;
          swift_errorRetain();
          uint64_t v70 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v102[0] = v70;
          uint64_t v50 = v97;
          sub_1004CF1F0();
          *uint64_t v69 = v70;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v66, v67, "Files Family Tip, Failed to get folder contents with error: %@", v95, 0xCu);
          sub_100031648((uint64_t *)&unk_100628890);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
        }
        swift_errorRelease();
        v47((char *)v93, v98);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v96, v51);
      }
    }
  }
  uint64_t v87 = sub_1004CE000();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v30, 1, 1, v87);
  uint64_t v88 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1004CDFC0();
  swift_retain();
  uint64_t v89 = sub_1004CDFB0();
  os_log_type_t v90 = (void *)swift_allocObject();
  v90[2] = v89;
  v90[3] = &protocol witness table for MainActor;
  v90[4] = v88;
  swift_release();
  sub_10013606C(v30, (uint64_t)&unk_100637948, (uint64_t)v90);
  swift_release();
  return [v99 dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_100398C20()
{
  sub_1004CDFC0();
  *(void *)(v0 + 40) = sub_1004CDFB0();
  uint64_t v2 = sub_1004CDF70();
  return _swift_task_switch(sub_100398CB4, v2, v1);
}

uint64_t sub_100398CB4()
{
  swift_release();
  if (qword_100626A80 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100031648((uint64_t *)&unk_1006378B0);
  sub_10010F698(v1, (uint64_t)qword_10063B028);
  *(unsigned char *)(v0 + 48) = 1;
  swift_beginAccess();
  sub_1004CD4C0();
  swift_endAccess();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100398DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_1004CDFC0();
  v4[7] = sub_1004CDFB0();
  uint64_t v6 = sub_1004CDF70();
  return _swift_task_switch(sub_100398E3C, v6, v5);
}

uint64_t sub_100398E3C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = (void *)Strong;
  if (Strong)
  {
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView);
    if (v3) {
      [v3 setUserInteractionEnabled:1];
    }
  }
  **(unsigned char **)(v0 + 40) = v2 == 0;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100398F5C()
{
  v1[16] = v0;
  uint64_t v2 = sub_1004CC770();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_10039902C, 0, 0);
}

uint64_t sub_10039902C()
{
  uint64_t v1 = *(void **)(v0[16] + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_sourceObserver);
  v0[21] = v1;
  if (v1)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_100399184;
    uint64_t v2 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100399658;
    v0[13] = &unk_1005D1740;
    v0[14] = v2;
    [v1 retrieveAllSourcesCompletionBlock:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3(0);
  }
}

uint64_t sub_100399184()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_100399524;
  }
  else {
    uint64_t v2 = sub_100399294;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100399294()
{
  unint64_t v1 = v0[15];
  if (v1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      while (1)
      {
        if ((v1 & 0xC000000000000001) != 0) {
          id v4 = (id)sub_1004CF500();
        }
        else {
          id v4 = *(id *)(v1 + 8 * v3 + 32);
        }
        uint64_t v5 = v4;
        uint64_t v0 = (void *)(v3 + 1);
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        type metadata accessor for DOCFileProviderSource(0);
        uint64_t v6 = swift_dynamicCastClass();
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          uint64_t v8 = *(void **)(v6 + OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_providerDomain);
          if (v8)
          {
            id v9 = v5;
            id v10 = v8;
            if (((unint64_t)[v7 status] | 2) == 2
              && [v10 isiCloudDriveProvider]
              && ([v10 isEnterpriseDomain] & 1) == 0)
            {
              uint64_t v0 = v19;
              swift_bridgeObjectRelease();
              sub_1004CC690();
              uint64_t v11 = sub_1004CC760();
              os_log_type_t v12 = sub_1004CE380();
              BOOL v13 = os_log_type_enabled(v11, v12);
              uint64_t v14 = (void *)v19[21];
              if (v13)
              {
                Swift::String_optional v15 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)Swift::String_optional v15 = 0;
                _os_log_impl((void *)&_mh_execute_header, v11, v12, "Files Family Tip, found main iCloud Drive Provider", v15, 2u);
                swift_slowDealloc();
              }
              else
              {

                id v9 = v14;
              }

              (*(void (**)(void, void))(v19[18] + 8))(v19[20], v19[17]);
              goto LABEL_19;
            }
          }
        }

        ++v3;
        if (v0 == (void *)v2)
        {
          uint64_t v0 = v19;
          break;
        }
      }
    }
  }
  uint64_t v16 = (void *)v0[21];
  swift_bridgeObjectRelease();

  uint64_t v8 = 0;
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void *))v0[1];
  return v17(v8);
}

uint64_t sub_100399524()
{
  swift_willThrow();
  swift_errorRelease();
  sub_1004CC690();
  unint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Files Family Tip, failed to get sources", v3, 2u);
    swift_slowDealloc();
  }
  id v4 = (void *)v0[21];
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = v0[17];

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8(0);
}

uint64_t sub_100399658(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100031648(&qword_1006301E0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_1000333C8(0, (unint64_t *)&qword_1006322C0);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1004CDE30();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100399734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  uint64_t v5 = sub_1004CC770();
  v4[24] = v5;
  v4[25] = *(void *)(v5 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = sub_100031648((uint64_t *)&unk_10062B3B0);
  v4[30] = swift_task_alloc();
  uint64_t v6 = sub_1004CAC10();
  v4[31] = v6;
  v4[32] = *(void *)(v6 - 8);
  v4[33] = swift_task_alloc();
  return _swift_task_switch(sub_1003998A4, 0, 0);
}

uint64_t sub_1003998A4()
{
  *(void *)(v0 + 272) = [self defaultManager];
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100399958;
  return sub_100398F5C();
}

uint64_t sub_100399958(uint64_t a1)
{
  *(void *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100399A58, 0, 0);
}

uint64_t sub_100399A58()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void **)(v0 + 288);
  if (!v1)
  {
    sub_1004CC690();
    uint64_t v19 = sub_1004CC760();
    os_log_type_t v20 = sub_1004CE360();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Files Family Tip, No iCloud Drive Domain found", v21, 2u);
      swift_slowDealloc();
    }
    uint64_t v22 = *(void **)(v0 + 272);
    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 256);
    uint64_t v25 = *(void *)(v0 + 216);
    uint64_t v26 = *(void *)(v0 + 192);
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v28, 1, 1, v23);
    goto LABEL_23;
  }
  if (![*(id *)(v0 + 288) isEnabled]
    || ([v1 isHidden] & 1) != 0)
  {
    sub_1004CC690();
    id v2 = v1;
    uint64_t v3 = sub_1004CC760();
    os_log_type_t v4 = sub_1004CE360();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void **)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 200);
    if (v5)
    {
      uint64_t v34 = *(void **)(v0 + 272);
      uint64_t v10 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315394;
      unsigned int v11 = [v2 isEnabled];
      BOOL v12 = v11 == 0;
      if (v11) {
        uint64_t v13 = 1702195828;
      }
      else {
        uint64_t v13 = 0x65736C6166;
      }
      uint64_t v33 = v7;
      if (v12) {
        unint64_t v14 = 0xE500000000000000;
      }
      else {
        unint64_t v14 = 0xE400000000000000;
      }
      *(void *)(v0 + 128) = sub_100187CC4(v13, v14, &v35);
      sub_1004CF1F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      unsigned int v15 = [v2 isHidden];
      BOOL v16 = v15 == 0;
      if (v15) {
        uint64_t v17 = 1702195828;
      }
      else {
        uint64_t v17 = 0x65736C6166;
      }
      if (v16) {
        unint64_t v18 = 0xE500000000000000;
      }
      else {
        unint64_t v18 = 0xE400000000000000;
      }
      *(void *)(v0 + 136) = sub_100187CC4(v17, v18, &v35);
      sub_1004CF1F0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Files Family Tip, Did not attempt to create folder, iCloud Domain isEnabled: %s , isHidden: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v33, v8);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 256) + 56))(*(void *)(v0 + 160), 1, 1, *(void *)(v0 + 248));
LABEL_23:
    *(unsigned char *)(*(void *)(v0 + 160) + *(int *)(type metadata accessor for FamilyFolderDetails(0) + 20)) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
  uint64_t v31 = *(void **)(v0 + 272);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_100399F40;
  uint64_t v32 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10039AAF0;
  *(void *)(v0 + 104) = &unk_1005D16B0;
  *(void *)(v0 + 112) = v32;
  objc_msgSend(v31, "doc_fetchRootItemForProviderDomain:completionHandler:", v1, v0 + 80);
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100399F40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 296) = v1;
  if (v1) {
    id v2 = sub_10039A79C;
  }
  else {
    id v2 = sub_10039A050;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039A050()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[15];
  v0[38] = v3;
  uint64_t v4 = swift_allocObject();
  v0[39] = v4;
  swift_unknownObjectWeakInit();
  BOOL v5 = (void *)swift_task_alloc();
  v0[40] = v5;
  uint64_t v5[2] = v4;
  v5[3] = v2;
  void v5[4] = v1;
  v5[5] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[41] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10039A180;
  uint64_t v8 = v0[29];
  uint64_t v7 = v0[30];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, 0, 0, 0xD000000000000021, 0x8000000100535190, sub_1003A05D4, v5, v8);
}

uint64_t sub_10039A180()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10039A438;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_10039A2A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039A2A4()
{
  uint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 240);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_100049B74(*(void *)(v0 + 240), (uint64_t *)&unk_10062B3B0);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 256) + 56))(*(void *)(v0 + 160), 1, 1, *(void *)(v0 + 248));
    char v6 = 0;
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 160);
    unsigned int v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    v11(v7, *(void *)(v0 + 240), v9);
    v11(v10, v7, v9);
    char v6 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
  }
  *(unsigned char *)(*(void *)(v0 + 160) + *(int *)(type metadata accessor for FamilyFolderDetails(0) + 20)) = v6;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10039A438()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void **)(v0 + 304);
  swift_release();
  swift_task_dealloc();

  sub_1004CC690();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1004CC760();
  os_log_type_t v3 = sub_1004CE360();
  if (os_log_type_enabled(v2, v3))
  {
    unsigned int v15 = *(void **)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 200);
    uint64_t v17 = *(void **)(v0 + 288);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v19 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 168);
    unint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 144) = sub_100187CC4(v4, v5, &v20);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 152) = v8;
    sub_1004CF1F0();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Files Family Tip, Failed to create folder %s with error: %@", (uint8_t *)v6, 0x16u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v18);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 192);

    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 256) + 56))(*(void *)(v0 + 160), 1, 1, *(void *)(v0 + 248));
  *(unsigned char *)(*(void *)(v0 + 160) + *(int *)(type metadata accessor for FamilyFolderDetails(0) + 20)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10039A79C()
{
  uint64_t v20 = v0;
  swift_willThrow();
  sub_1004CC690();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1004CC760();
  os_log_type_t v2 = sub_1004CE360();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v14 = *(void **)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void **)(v0 + 288);
    uint64_t v17 = *(void *)(v0 + 192);
    uint64_t v18 = *(void *)(v0 + 208);
    uint64_t v3 = *(void *)(v0 + 168);
    unint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 144) = sub_100187CC4(v3, v4, &v19);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 152) = v7;
    sub_1004CF1F0();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Files Family Tip, Failed to create folder %s with error: %@", (uint8_t *)v5, 0x16u);
    sub_100031648((uint64_t *)&unk_100628890);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v17);
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 192);

    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 256) + 56))(*(void *)(v0 + 160), 1, 1, *(void *)(v0 + 248));
  *(unsigned char *)(*(void *)(v0 + 160) + *(int *)(type metadata accessor for FamilyFolderDetails(0) + 20)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10039AAF0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100031648(&qword_1006301E0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;
  return swift_continuation_throwingResume();
}

void sub_10039ABB0(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, void (*a6)(char *, uint64_t), uint64_t a7)
{
  uint64_t v65 = a7;
  unint64_t v66 = a6;
  id v63 = a4;
  uint64_t v10 = sub_1004CAC10();
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v56 - v15;
  __chkstk_darwin(v14);
  uint64_t v62 = (char *)&v56 - v17;
  uint64_t v18 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v64 = (char *)&v56 - v22;
  uint64_t v23 = sub_1004CC770();
  uint64_t v67 = *(void *)(v23 - 8);
  uint64_t v68 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v56 - v27;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v30 = Strong;
  if (a2)
  {
    swift_errorRetain();
    sub_1004CC690();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1004CC760();
    os_log_type_t v32 = sub_1004CE360();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v62 = (char *)swift_slowAlloc();
      v71[0] = (uint64_t)v62;
      *(_DWORD *)uint64_t v33 = 136315394;
      id v61 = v30;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_100187CC4((uint64_t)v63, a5, v71);
      sub_1004CF1F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2112;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v70 = v35;
      sub_1004CF1F0();
      void *v34 = v35;
      uint64_t v30 = v61;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Files Family Tip, Failed to create folder %s with error: %@", (uint8_t *)v33, 0x16u);
      sub_100031648((uint64_t *)&unk_100628890);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v68);
    uint64_t v21 = v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v64, 1, 1, v10);
    swift_errorRetain();
    v66(v21, a2);
    swift_errorRelease();

    swift_errorRelease();
    goto LABEL_15;
  }
  if (!a1)
  {

    return;
  }
  id v36 = a1;
  id v37 = [v36 fileURL];
  id v63 = v36;
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v21, 1, 1, v10);
    goto LABEL_14;
  }
  NSString v38 = v37;
  sub_1004CABC0();

  uint64_t v39 = v69;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
  v40(v21, v16, v10);
  uint64_t v41 = *(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56);
  v41(v21, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v21, 1, v10) == 1)
  {
LABEL_14:

LABEL_15:
    sub_100049B74((uint64_t)v21, (uint64_t *)&unk_10062B3B0);
    return;
  }
  uint64_t v60 = (void (*)(uint64_t, void, uint64_t, uint64_t))v41;
  id v61 = v30;
  uint64_t v42 = v62;
  v40(v62, v21, v10);
  sub_1004CC690();
  id v59 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v59(v13, v42, v10);
  uint64_t v43 = sub_1004CC760();
  os_log_type_t v44 = sub_1004CE360();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    os_log_t v57 = v43;
    objc_super v46 = (uint8_t *)v45;
    uint64_t v58 = swift_slowAlloc();
    v71[0] = v58;
    *(_DWORD *)objc_super v46 = 136315138;
    uint64_t v56 = v46 + 4;
    uint64_t v47 = sub_1004CAB10();
    uint64_t v70 = sub_100187CC4(v47, v48, v71);
    sub_1004CF1F0();
    swift_bridgeObjectRelease();
    uint64_t v69 = *(void *)(v39 + 8);
    ((void (*)(char *, uint64_t))v69)(v13, v10);
    os_log_t v49 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, v44, "Files Family Tip, got url for Family folder %s", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v69 = *(void *)(v39 + 8);
    ((void (*)(char *, uint64_t))v69)(v13, v10);
  }
  (*(void (**)(char *, uint64_t))(v67 + 8))(v26, v68);
  uint64_t v51 = (void (*)(uint64_t, char *, uint64_t))v59;
  uint64_t v50 = v60;
  uint64_t v52 = (uint64_t)v64;
  char v53 = v62;
  v59(v64, v62, v10);
  v50(v52, 0, 1, v10);
  uint64_t v54 = v61;
  uint64_t v55 = (uint64_t)v61 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familyFolderFilePath;
  swift_beginAccess();
  sub_1003A06C8(v52, v55);
  swift_endAccess();
  v51(v52, v53, v10);
  v50(v52, 0, 1, v10);
  v66((char *)v52, 0);

  sub_100049B74(v52, (uint64_t *)&unk_10062B3B0);
  ((void (*)(char *, uint64_t))v69)(v53, v10);
}

uint64_t sub_10039B3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_100031648((uint64_t *)&unk_100637930);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = (char *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    id v16 = objc_allocWithZone((Class)FPCreateFolderOperation);
    id v17 = a5;
    swift_bridgeObjectRetain();
    NSString v18 = sub_1004CDB10();
    swift_bridgeObjectRelease();
    id v19 = [v16 initWithParentItem:v17 folderName:v18];

    [v19 setShouldBounceOnCollision:1];
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v20;
    void v21[3] = a3;
    v21[4] = a4;
    v21[5] = sub_1003A05EC;
    v21[6] = v15;
    aBlock[4] = sub_1003A06B8;
    void aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100051F74;
    void aBlock[3] = &unk_1005D1718;
    uint64_t v22 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v19 setCreateFolderCompletionBlock:v22];
    _Block_release(v22);
    [*(id *)&v13[OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_fpItemManager] scheduleAction:v19];

    return swift_release();
  }
  return result;
}

uint64_t sub_10039B6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (a2)
  {
    v8[1] = a2;
    swift_errorRetain();
    sub_100031648((uint64_t *)&unk_100637930);
    return sub_1004CDF80();
  }
  else
  {
    sub_1000335A8(a1, (uint64_t)v8 - v6, (uint64_t *)&unk_10062B3B0);
    sub_100031648((uint64_t *)&unk_100637930);
    return sub_1004CDF90();
  }
}

void sub_10039B7AC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v10 = sub_1004CAC10();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1004CC770();
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v21 = (char *)&v36 - v20;
  if (a2)
  {
    uint64_t v41 = v19;
    uint64_t v42 = v18;
    uint64_t v43 = a5;
    swift_errorRetain();
    sub_1004CC690();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = sub_1004CC760();
    os_log_type_t v23 = sub_1004CE360();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      NSString v38 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v45 = v39;
      *(_DWORD *)uint64_t v24 = 136315394;
      os_log_t v37 = v22;
      uint64_t v25 = sub_1004CAB10();
      uint64_t v44 = sub_100187CC4(v25, v26, &v45);
      uint64_t v40 = a4;
      sub_1004CF1F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(_WORD *)(v24 + 12) = 2112;
      swift_errorRetain();
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v44 = v27;
      a4 = v40;
      sub_1004CF1F0();
      *NSString v38 = v27;
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v22 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, v23, "Files Family Tip, error getting metadata for file %s %@", (uint8_t *)v24, 0x16u);
      sub_100031648((uint64_t *)&unk_100628890);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v42);
    swift_errorRetain();
    a4(0, a2);
    swift_errorRelease();
    swift_errorRelease();
  }
  else if (a1)
  {
    uint64_t v28 = v19;
    uint64_t v29 = v18;
    uint64_t v30 = (void (*)(void *, void))a4;
    id v31 = a1;
    sub_1004CC690();
    os_log_type_t v32 = sub_1004CC760();
    os_log_type_t v33 = sub_1004CE380();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Files Family Tip, got metadata for file", v34, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v29);
    id v35 = v31;
    v30(a1, 0);
  }
  else
  {
    a4(0, 0);
  }
}

uint64_t sub_10039BC64(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_10039BC84, 0, 0);
}

uint64_t sub_10039BC84()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_allocObject();
  v0[5] = v2;
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = sub_100031648((uint64_t *)&unk_1006378F0);
  *uint64_t v4 = v0;
  v4[1] = sub_10039BDB0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000020, 0x8000000100535130, sub_1003A03CC, v3, v5);
}

uint64_t sub_10039BDB0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10039BED4;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_100330F6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039BED4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10039BF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v4 = sub_1004CAC10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_100031648((uint64_t *)&unk_100637920);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    id v23 = Strong;
    v11((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    uint64_t v14 = v24;
    sub_1004CAB60(v15);
    id v17 = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v4);
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    uint64_t v20 = (uint64_t (**)(void *, uint64_t))(v19 + ((v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v20 = sub_1003A03E0;
    v20[1] = (uint64_t (*)(void *, uint64_t))v13;
    aBlock[4] = sub_1003A050C;
    void aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100051F74;
    void aBlock[3] = &unk_1005D1688;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    SWCollaborationMetadataForDocumentURL();
    _Block_release(v21);
    swift_release();
  }
}

uint64_t sub_10039C23C(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100031648((uint64_t *)&unk_100637920);
    return sub_1004CDF80();
  }
  else
  {
    id v3 = a1;
    sub_100031648((uint64_t *)&unk_100637920);
    return sub_1004CDF90();
  }
}

uint64_t sub_10039C2B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100031648(&qword_10062DA50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CC770();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CC690();
  uint64_t v9 = sub_1004CC760();
  os_log_type_t v10 = sub_1004CE380();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Files Family Tip, Initiating tips share flow", v11, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = sub_1004CE000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1004CDFC0();
  swift_retain();
  uint64_t v14 = sub_1004CDFB0();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  void v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_sharingFlowTask) = sub_10039DDF4((uint64_t)v4, (uint64_t)&unk_1006378C8, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_10039C520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  uint64_t v5 = sub_1004CC770();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  sub_100031648(&qword_10062DA50);
  v4[12] = swift_task_alloc();
  sub_100031648((uint64_t *)&unk_10062B3B0);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_1004CAC10();
  v4[15] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[16] = v7;
  v4[17] = *(void *)(v7 + 64);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = type metadata accessor for FamilyFolderDetails(0);
  v4[21] = swift_task_alloc();
  sub_1004CDFC0();
  v4[22] = sub_1004CDFB0();
  uint64_t v9 = sub_1004CDF70();
  v4[23] = v9;
  v4[24] = v8;
  return _swift_task_switch(sub_10039C744, v9, v8);
}

objc_class *sub_10039C744()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[25] = Strong;
  if (Strong)
  {
    uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v3 = result;
      v11._uint64_t countAndFlagsBits = 0x8000000100535050;
      v13._uint64_t countAndFlagsBits = 0x796C696D6146;
      v13._object = (void *)0xE600000000000000;
      v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v14._object = (void *)0xEB00000000656C62;
      v4.super.Class isa = v3;
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      uint64_t v5 = sub_1004CBEE0(v13, v14, v4, v15, v11);
      uint64_t v7 = v6;

      v0[26] = v7;
      uint64_t v8 = (void *)swift_task_alloc();
      v0[27] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_10039C954;
      uint64_t v9 = v0[21];
      return (objc_class *)sub_100399734(v9, v5, v7);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v10 = (uint64_t (*)(void))v0[1];
    return (objc_class *)v10();
  }
  return result;
}

uint64_t sub_10039C954()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_10039CA98, v3, v2);
}

uint64_t sub_10039CA98()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  sub_1000335A8(v0[21], v3, (uint64_t *)&unk_10062B3B0);
  NSBundle v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[28] = v4;
  v0[29] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = v0[14];
    swift_release();
    sub_100049B74(v5, (uint64_t *)&unk_10062B3B0);
LABEL_8:
    sub_1004CC690();
    Swift::String v15 = sub_1004CC760();
    os_log_type_t v16 = sub_1004CE360();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Files Family Tip, Family folder details not found", v17, 2u);
      swift_slowDealloc();
    }
    uint64_t v18 = v0[25];
    uint64_t v20 = v0[8];
    uint64_t v19 = v0[9];
    uint64_t v21 = v0[7];

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v22 = *(void **)(v18 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView);
    id v23 = (void *)v0[25];
    uint64_t v24 = v0[21];
    if (v22) {
      [v22 setUserInteractionEnabled:1];
    }

    sub_10039EE38(v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[21];
  uint64_t v8 = v0[19];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v0[30] = v12;
  v0[31] = (v10 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v12(v8, v11, v9);
  if (*(unsigned char *)(v7 + *(int *)(v6 + 20)) != 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[19], v0[15]);
    swift_release();
    goto LABEL_8;
  }
  Swift::String v13 = (void *)swift_task_alloc();
  v0[32] = v13;
  void *v13 = v0;
  v13[1] = sub_10039CD70;
  return sub_10039F2E4();
}

uint64_t sub_10039CD70(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  return _swift_task_switch(sub_10039CE98, v4, v3);
}

uint64_t sub_10039CE98()
{
  if (!*(void *)(*(void *)(v0 + 264) + 16))
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1004CC690();
    NSString v38 = sub_1004CC760();
    os_log_type_t v39 = sub_1004CE360();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Files Family Tip, No family members found to use as recipients", v40, 2u);
      swift_slowDealloc();
    }
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v42 = *(void *)(v0 + 80);
    goto LABEL_16;
  }
  if (![self canSendText])
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1004CC690();
    NSString v38 = sub_1004CC760();
    os_log_type_t v43 = sub_1004CE360();
    if (os_log_type_enabled(v38, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v43, "Files Family Tip, SMS services are not available", v44, 2u);
      swift_slowDealloc();
    }
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v42 = *(void *)(v0 + 88);
LABEL_16:
    uint64_t v45 = *(void *)(v0 + 56);
    uint64_t v46 = *(void *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v42, v45);
    uint64_t v47 = *(void **)(v41 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView);
    unint64_t v48 = *(void **)(v0 + 200);
    uint64_t v49 = *(void *)(v0 + 168);
    uint64_t v50 = *(void *)(v0 + 152);
    uint64_t v51 = *(void *)(v0 + 120);
    uint64_t v52 = *(void *)(v0 + 128);
    if (v47) {
      [v47 setUserInteractionEnabled:1];
    }

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
    goto LABEL_19;
  }
  uint64_t v1 = *(void *)(v0 + 200);
  id v2 = [objc_allocWithZone((Class)MFMessageComposeViewController) init];
  *(void *)(v0 + 272) = v2;
  [v2 setMessageComposeDelegate:v1];
  uint64_t v3 = (objc_class *)(id)_DocumentManagerBundle();
  if (!v3)
  {
    __break(1u);
    return Task.value.getter(v3, v4, v5, v6, v7);
  }
  uint64_t v8 = v3;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 104);
  v55._uint64_t countAndFlagsBits = 0x80000001005350D0;
  v58._object = (void *)0x8000000100535090;
  v58._uint64_t countAndFlagsBits = 0x1000000000000035;
  v59._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v59._object = (void *)0xEB00000000656C62;
  v14.super.Class isa = v8;
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  sub_1004CBEE0(v58, v59, v14, v60, v55);

  sub_1004CDB20();
  swift_bridgeObjectRelease();
  NSString v15 = sub_1004CDB10();
  swift_bridgeObjectRelease();
  [v2 setBody:v15];

  os_log_type_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v16(v13, v10, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v13, 0, 1, v11);
  int v17 = v9(v13, 1, v11);
  uint64_t v19 = 0;
  if (v17 != 1)
  {
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v21 = *(void *)(v0 + 128);
    uint64_t v22 = *(void *)(v0 + 104);
    sub_1004CAB60(v18);
    uint64_t v19 = v23;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  }
  id v24 = [objc_allocWithZone((Class)NSItemProvider) initWithContentsOfURL:v19];
  *(void *)(v0 + 280) = v24;

  if (v24)
  {
    uint64_t v56 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 240);
    uint64_t v25 = *(void **)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 144);
    uint64_t v26 = *(void *)(v0 + 152);
    uint64_t v28 = *(void *)(v0 + 128);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v31 = sub_1004CE000();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
    v16(v27, v26, v29);
    unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v25;
    v56(v33 + v32, v27, v29);
    id v34 = v25;
    uint64_t v35 = sub_10039DBC4(v30, 3, (uint64_t)&unk_1006378E8, v33, 1.0);
    *(void *)(v0 + 288) = v35;
    swift_release();
    sub_100049B74(v30, &qword_10062DA50);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v36;
    uint64_t v37 = sub_100031648((uint64_t *)&unk_1006378F0);
    uint64_t v6 = sub_100031648(&qword_1006301E0);
    *uint64_t v36 = v0;
    v36[1] = sub_10039D500;
    uint64_t v7 = &protocol self-conformance witness table for Error;
    uint64_t v3 = (objc_class *)(v0 + 40);
    uint64_t v4 = v35;
    uint64_t v5 = v37;
    return Task.value.getter(v3, v4, v5, v6, v7);
  }

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v49 = *(void *)(v0 + 168);
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 120));
LABEL_19:
  sub_10039EE38(v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_10039D500()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = *(void *)(v2 + 192);
    uint64_t v5 = sub_10039D864;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = *(void *)(v2 + 192);
    uint64_t v5 = sub_10039D644;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10039D644()
{
  swift_release();
  uint64_t v1 = (void *)v0[5];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 defaultShareOptions];
    if (v3)
    {
      uint64_t v4 = v3;
      self;
      uint64_t v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5) {
    }
      }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v8 = (void *)v0[34];
    [v8 insertCollaborationItemProvider:v0[35] collaborationShareOptions:v5 collaborationMetadata:v2 isCollaboration:1];

    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v8 setRecipients:isa];

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v11 = (void *)v0[34];
    uint64_t v12 = (void *)v0[35];
    uint64_t v7 = (void *)v0[25];
    if (Strong)
    {
      uint64_t v13 = Strong;
      [Strong presentViewController:v0[34] animated:1 completion:0];
    }
    else
    {
    }
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v6 = (void *)v0[34];
    id v2 = (id)v0[35];
    uint64_t v7 = (void *)v0[25];
    swift_bridgeObjectRelease();
  }

  uint64_t v14 = v0[21];
  (*(void (**)(void, void))(v0[16] + 8))(v0[19], v0[15]);
  sub_10039EE38(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10039D864()
{
  uint64_t v1 = v0[25];
  swift_release();
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView);
  id v3 = (void *)v0[34];
  uint64_t v4 = (void *)v0[35];
  uint64_t v5 = (void *)v0[25];
  if (v2) {
    [v2 setUserInteractionEnabled:1];
  }

  swift_errorRelease();
  uint64_t v6 = v0[21];
  (*(void (**)(void, void))(v0[16] + 8))(v0[19], v0[15]);
  sub_10039EE38(v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10039D9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10039DA54;
  v6[3] = a3;
  void v6[4] = a2;
  return _swift_task_switch(sub_10039BC84, 0, 0);
}

uint64_t sub_10039DA54(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return _swift_task_switch(sub_10039DBA0, 0, 0);
  }
}

uint64_t sub_10039DBA0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039DBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = sub_100031648(&qword_10062DA50);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000335A8(a1, (uint64_t)v12, &qword_10062DA50);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  *(void *)(v13 + 48) = a4;
  *(double *)(v13 + 56) = a5;
  uint64_t v14 = sub_1004CE000();
  uint64_t v15 = *(void *)(v14 - 8);
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
  swift_retain();
  if (a2 == 1)
  {
    sub_100049B74((uint64_t)v12, &qword_10062DA50);
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    sub_1004CDFF0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    if (*(void *)(v13 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = sub_1004CDF70();
      uint64_t v17 = v18;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = 0;
    }
  }
  sub_100031648((uint64_t *)&unk_1006378F0);
  if (v17 | v16)
  {
    v20[0] = 0;
    v20[1] = 0;
    void v20[2] = v16;
    v20[3] = v17;
  }
  return swift_task_create();
}

uint64_t sub_10039DDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1004CE000();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1004CDFF0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100049B74(a1, &qword_10062DA50);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1004CDF70();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

id sub_10039DFC4()
{
  uint64_t v1 = sub_1004CC770();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v61 - v5;
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v61 - v8;
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView);
  if (v10)
  {
    uint64_t v62 = v7;
    id v11 = v10;
    sub_1004CC690();
    id v12 = v11;
    uint64_t v13 = sub_1004CC760();
    os_log_type_t v14 = sub_1004CE380();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v63 = v2;
    uint64_t v61 = v1;
    if (v15)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v65[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      unsigned int v17 = [v12 isUserInteractionEnabled];
      BOOL v18 = v17 == 0;
      if (v17) {
        uint64_t v19 = 1702195828;
      }
      else {
        uint64_t v19 = 0x65736C6166;
      }
      if (v18) {
        unint64_t v20 = 0xE500000000000000;
      }
      else {
        unint64_t v20 = 0xE400000000000000;
      }
      uint64_t v66 = sub_100187CC4(v19, v20, v65);
      sub_1004CF1F0();

      uint64_t v2 = v63;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Files Family Tip, familySharedFolderTipView isUserInteractionEnabled value %s", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v1 = v61;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v23 = *(void (**)(char *, uint64_t))(v2 + 8);
    v23(v9, v1);
    sub_1004CC690();
    id v24 = sub_1004CC760();
    os_log_type_t v25 = sub_1004CE380();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      if (qword_100626A88 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_100031648((uint64_t *)&unk_1006378B0);
      sub_10010F698(v27, (uint64_t)qword_10063B040);
      swift_beginAccess();
      sub_1004CD4B0();
      int v28 = v64;
      swift_endAccess();
      if (v28) {
        uint64_t v29 = 1702195828;
      }
      else {
        uint64_t v29 = 0x65736C6166;
      }
      if (v28) {
        unint64_t v30 = 0xE400000000000000;
      }
      else {
        unint64_t v30 = 0xE500000000000000;
      }
      v65[0] = sub_100187CC4(v29, v30, &v66);
      sub_1004CF1F0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Files Family Tip, tip hasFamilyWithAdultMember parameter value %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v31 = v6;
      uint64_t v1 = v61;
    }
    else
    {

      uint64_t v31 = v6;
    }
    v23(v31, v1);
    unint64_t v32 = v62;
    sub_1004CC690();
    uint64_t v33 = sub_1004CC760();
    os_log_type_t v34 = sub_1004CE380();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      if (qword_100626A80 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_100031648((uint64_t *)&unk_1006378B0);
      sub_10010F698(v36, (uint64_t)qword_10063B028);
      swift_beginAccess();
      sub_1004CD4B0();
      int v37 = v64;
      swift_endAccess();
      if (v37) {
        uint64_t v38 = 1702195828;
      }
      else {
        uint64_t v38 = 0x65736C6166;
      }
      if (v37) {
        unint64_t v39 = 0xE400000000000000;
      }
      else {
        unint64_t v39 = 0xE500000000000000;
      }
      v65[0] = sub_100187CC4(v38, v39, &v66);
      sub_1004CF1F0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Files Family Tip, tip hasSharedFolderWithAdultFamilyMember parameter value %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v40 = v62;
    }
    else
    {

      uint64_t v40 = v32;
    }
    v23(v40, v1);
    [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [objc_allocWithZone((Class)UIView) init];
    [v41 addSubview:v12];
    uint64_t v42 = self;
    sub_100031648(&qword_100628240);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1004E5E40;
    id v44 = [v12 leadingAnchor];
    id v45 = [v41 layoutMarginsGuide];
    id v46 = [v45 leadingAnchor];

    id v47 = [v44 constraintEqualToAnchor:v46];
    *(void *)(v43 + 32) = v47;
    id v48 = [v12 trailingAnchor];
    id v49 = [v41 layoutMarginsGuide];
    id v50 = [v49 trailingAnchor];

    id v51 = [v48 constraintEqualToAnchor:v50];
    *(void *)(v43 + 40) = v51;
    id v52 = [v12 topAnchor];
    id v53 = [v41 layoutMarginsGuide];
    id v54 = [v53 topAnchor];

    id v55 = [v52 constraintEqualToAnchor:v54];
    *(void *)(v43 + 48) = v55;
    id v56 = [v12 bottomAnchor];
    id v57 = [v41 layoutMarginsGuide];
    id v58 = [v57 bottomAnchor];

    id v59 = [v56 constraintEqualToAnchor:v58];
    *(void *)(v43 + 56) = v59;
    v65[0] = v43;
    sub_1004CDE50();
    sub_1000333C8(0, (unint64_t *)&unk_100628430);
    Class isa = sub_1004CDE10().super.isa;
    swift_bridgeObjectRelease();
    [v42 activateConstraints:isa];

    return v41;
  }
  else
  {
    id v21 = objc_allocWithZone((Class)UIView);
    return [v21 init];
  }
}

uint64_t sub_10039E8D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1004CC770();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - v7;
  sub_1004CC690();
  uint64_t v9 = sub_1004CC760();
  os_log_type_t v10 = sub_1004CE380();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Files Family Tip, Set up shared folder button tapped", v11, 2u);
    swift_slowDealloc();
  }

  id v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v8, v2);
  uint64_t v13 = OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView;
  os_log_type_t v14 = *(void **)&v1[OBJC_IVAR____TtC14RecentsAvocado14DOCTipsManager_familySharedFolderTipView];
  if (v14) {
    [v14 setUserInteractionEnabled:0];
  }
  sub_1004CC690();
  BOOL v15 = v1;
  uint64_t v16 = sub_1004CC760();
  os_log_type_t v17 = sub_1004CE380();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v27 = v2;
    BOOL v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)BOOL v18 = 136315138;
    uint64_t v19 = *(void **)&v1[v13];
    if (v19) {
      unsigned __int8 v20 = [v19 isUserInteractionEnabled];
    }
    else {
      unsigned __int8 v20 = 2;
    }
    LOBYTE(v28) = v20;
    sub_100031648((uint64_t *)&unk_100630B10);
    uint64_t v23 = sub_1004CDBA0();
    uint64_t v28 = sub_100187CC4(v23, v24, &v29);
    sub_1004CF1F0();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Files Family Tip, familySharedFolderTipView isUserInteractionEnabled value in action handler %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v21 = v6;
    uint64_t v22 = v27;
  }
  else
  {

    id v21 = v6;
    uint64_t v22 = v2;
  }
  v12(v21, v22);
  return sub_10039C2B0();
}

void sub_10039EC00()
{
  sub_10039ECD0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10039ECD0()
{
  if (!qword_10062D3A0)
  {
    sub_1004CAC10();
    unint64_t v0 = sub_1004CF1C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10062D3A0);
    }
  }
}

uint64_t sub_10039ED28()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039ED64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001B38CC;
  return sub_10039C520(a1, v4, v5, v6);
}

uint64_t type metadata accessor for FamilyFolderDetails(uint64_t a1)
{
  return sub_100069444(a1, qword_1006379C8);
}

uint64_t sub_10039EE38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FamilyFolderDetails(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10039EE94(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v7 + 24) = v12;
  *(void *)uint64_t v12 = v7;
  *(void *)(v12 + 8) = sub_10039EF60;
  *(double *)(v12 + 48) = a2;
  *(void *)(v12 + 32) = a6;
  *(void *)(v12 + 40) = a7;
  *(void *)(v12 + 24) = a5;
  return _swift_task_switch(sub_10039FBAC, 0, 0);
}

uint64_t sub_10039EF60(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_10039F070()
{
  uint64_t v0 = sub_1004CD420();
  v8[0] = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1004CD3F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031648(&qword_100637968);
  sub_1004CD440();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1004E5790;
  sub_1004CD3E0();
  sub_1004CD400();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1004CD410();
  sub_1004CD430();
  (*(void (**)(char *, uint64_t))(v8[0] + 8))(v2, v0);
  sub_1004CD4E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10039F2E4()
{
  uint64_t v1 = sub_1004CC770();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10063BC58 + dword_10063BC58);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10039F3E0;
  return v4();
}

uint64_t sub_10039F3E0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10039F4E0, 0, 0);
}

void sub_10039F4E0()
{
  uint64_t v1 = (void *)v0[6];
  if (!v1)
  {
    sub_1004CC690();
    uint64_t v8 = sub_1004CC760();
    os_log_type_t v9 = sub_1004CE360();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Files Family Tip, No Family found", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = v0[3];
    uint64_t v11 = v0[4];
    uint64_t v13 = v0[2];

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    uint64_t v14 = _swiftEmptyArrayStorage;
    goto LABEL_39;
  }
  uint64_t v28 = (void *)v0[6];
  id v2 = [v1 members];
  sub_1000333C8(0, &qword_10062DB58);
  unint64_t v3 = sub_1004CDE30();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        goto LABEL_43;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)sub_1004CF500();
        }
        else {
          id v6 = *(id *)(v3 + 8 * i + 32);
        }
        uint64_t v7 = v6;
        if ([v6 memberType] || (objc_msgSend(v7, "isMe") & 1) != 0)
        {
        }
        else
        {
          sub_1004CF560();
          sub_1004CF5A0();
          sub_1004CF5B0();
          sub_1004CF570();
        }
      }
      swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_36;
      }
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_36;
  }
LABEL_21:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_36:
    swift_retain();
    uint64_t v15 = sub_1004CF6D0();
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_23;
  }
  uint64_t v15 = _swiftEmptyArrayStorage[2];
  swift_retain();
  if (v15)
  {
LABEL_23:
    if (v15 >= 1)
    {
      uint64_t v16 = 0;
      uint64_t v14 = _swiftEmptyArrayStorage;
      do
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
          id v17 = (id)sub_1004CF500();
        }
        else {
          id v17 = (id)_swiftEmptyArrayStorage[v16 + 4];
        }
        BOOL v18 = v17;
        id v19 = [v17 appleID];
        if (v19)
        {
          unsigned __int8 v20 = v19;
          uint64_t v21 = sub_1004CDB50();
          uint64_t v23 = v22;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_1002369E4(0, v14[2] + 1, 1, v14);
          }
          unint64_t v25 = v14[2];
          unint64_t v24 = v14[3];
          if (v25 >= v24 >> 1) {
            uint64_t v14 = sub_1002369E4((void *)(v24 > 1), v25 + 1, 1, v14);
          }
          v14[2] = v25 + 1;
          uint64_t v26 = &v14[2 * v25];
          v26[4] = v21;
          v26[5] = v23;
        }
        else
        {
        }
        ++v16;
      }
      while (v15 != v16);
      goto LABEL_38;
    }
LABEL_43:
    __break(1u);
    return;
  }
LABEL_37:
  uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_38:
  swift_release_n();

  uint64_t v0 = v29;
LABEL_39:
  swift_task_dealloc();
  uint64_t v27 = (void (*)(void *))v0[1];
  v27(v14);
}

uint64_t sub_10039F8AC()
{
  uint64_t v1 = sub_1004CAC10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10039F978(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1004CAC10() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001AE5D4;
  return sub_10039D9A0(a1, v5, v6);
}

uint64_t sub_10039FA60()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10039FAA0(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  double v9 = v1[7];
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *os_log_type_t v10 = v2;
  v10[1] = sub_1001B38CC;
  uint64_t v11 = dword_100637900;
  return ((uint64_t (*)(uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100637900
                                                                                               + v11))(a1, v9, v4, v5, v6, v7, v8);
}

uint64_t sub_10039FB84(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  *(double *)(v4 + 48) = a4;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 24) = a1;
  return _swift_task_switch(sub_10039FBAC, 0, 0);
}

void sub_10039FBAC()
{
  uint64_t v1 = v0[3];
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v1)
    {
      uint64_t v2 = (int *)v0[4];
      v0[7] = 0;
      uint64_t v5 = (void (*)(void *))((char *)v2 + *v2);
      uint64_t v3 = (void *)swift_task_alloc();
      v0[8] = v3;
      *uint64_t v3 = v0;
      uint64_t v4 = sub_10039FD5C;
    }
    else
    {
      sub_1004CE050();
      uint64_t v5 = (void (*)(void *))(v0[4] + *(int *)v0[4]);
      uint64_t v3 = (void *)swift_task_alloc();
      v0[12] = v3;
      *uint64_t v3 = v0;
      uint64_t v4 = sub_1003A02A0;
    }
    v3[1] = v4;
    v5(v0 + 2);
  }
}

uint64_t sub_10039FD5C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10039FE70;
  }
  else {
    uint64_t v2 = sub_100330F6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039FE70(unint64_t a1)
{
  double v2 = *(double *)(v1 + 48) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 80) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10039FF54;
  a1 = (unint64_t)v2;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_10039FF54()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    double v2 = sub_1003A023C;
  }
  else {
    double v2 = sub_1003A0068;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003A0068()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[7] + 1;
  uint64_t result = swift_errorRelease();
  if (v2 == v1)
  {
    uint64_t v4 = v0[11];
    sub_1004CE050();
    if (v4)
    {
      uint64_t v5 = (uint64_t (*)(void))v0[1];
      return v5();
    }
    double v9 = (uint64_t (*)(void *))(v0[4] + *(int *)v0[4]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[12] = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = sub_1003A02A0;
  }
  else
  {
    uint64_t v6 = v0[7] + 1;
    v0[7] = v6;
    if (v6 == v0[3])
    {
      __break(1u);
      return result;
    }
    double v9 = (uint64_t (*)(void *))(v0[4] + *(int *)v0[4]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = sub_10039FD5C;
  }
  v7[1] = v8;
  return v9(v0 + 2);
}

uint64_t sub_1003A023C()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003A02A0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003A03B4;
  }
  else {
    uint64_t v2 = sub_1003A1368;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003A03B4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003A03CC(uint64_t a1)
{
  sub_10039BF40(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003A03D4()
{
  return sub_10033BC8C((uint64_t *)&unk_100637920);
}

uint64_t sub_1003A03E0(void *a1, uint64_t a2)
{
  sub_100031648((uint64_t *)&unk_100637920);
  return sub_10039C23C(a1, a2);
}

uint64_t sub_1003A0464()
{
  uint64_t v1 = sub_1004CAC10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

void sub_1003A050C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1004CAC10() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  double v9 = *(void (**)(void, void))v8;
  uint64_t v10 = *(void *)(v8 + 8);
  sub_10039B7AC(a1, a2, v7, v9, v10);
}

uint64_t sub_1003A05BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003A05CC()
{
  return swift_release();
}

uint64_t sub_1003A05D4(uint64_t a1)
{
  return sub_10039B3EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1003A05E0()
{
  return sub_10033BC8C((uint64_t *)&unk_100637930);
}

uint64_t sub_1003A05EC(uint64_t a1, uint64_t a2)
{
  sub_100031648((uint64_t *)&unk_100637930);
  return sub_10039B6D4(a1, a2);
}

uint64_t sub_1003A0670()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

void sub_1003A06B8(void *a1, uint64_t a2)
{
  sub_10039ABB0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void (**)(char *, uint64_t))(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1003A06C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648((uint64_t *)&unk_10062B3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A0734()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A0774(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001AE5D4;
  return sub_100398DA4(a1, v4, v5, v6);
}

unint64_t sub_1003A0828()
{
  unint64_t result = qword_10062DB50;
  if (!qword_10062DB50)
  {
    type metadata accessor for DOCTipsFamilyTip();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10062DB50);
  }
  return result;
}

uint64_t sub_1003A0880()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A08B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001B38CC;
  return sub_100398C20();
}

uint64_t *sub_1003A0964(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1004CAC10();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100031648((uint64_t *)&unk_10062B3B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1003A0ADC(uint64_t a1)
{
  uint64_t v2 = sub_1004CAC10();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1003A0BAC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100031648((uint64_t *)&unk_10062B3B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1003A0CD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100031648((uint64_t *)&unk_10062B3B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1003A0E60(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100031648((uint64_t *)&unk_10062B3B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1003A0F88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CAC10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100031648((uint64_t *)&unk_10062B3B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003A1114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A1128);
}

uint64_t sub_1003A1128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1003A11FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A1210);
}

uint64_t sub_1003A1210(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

void sub_1003A12D0()
{
  sub_10039ECD0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1003A13F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_1004CC620();
  sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1004E12A0;
  uint64_t v8 = v7;
  unint64_t v9 = 0xE900000000000073;
  uint64_t v10 = 0x746E656D75636F44;
  unint64_t v11 = 0xE900000000000073;
  switch(a1)
  {
    case 0:
      goto LABEL_5;
    case 1:
      unint64_t v11 = 0xE700000000000000;
      uint64_t v10 = 0x706F746B736544;
      goto LABEL_5;
    case 2:
      uint64_t v10 = 0x64616F6C6E776F44;
      goto LABEL_5;
    case 3:
      unint64_t v11 = 0xEB00000000657669;
      uint64_t v10 = 0x724464756F6C4369;
LABEL_5:
      *(void *)(v7 + 56) = &type metadata for String;
      *(void *)(v7 + 64) = sub_1000334C4();
      *(void *)(v8 + 32) = v10;
      *(void *)(v8 + 40) = v11;
      sub_1004CC640();

      swift_bridgeObjectRelease();
      uint64_t v12 = sub_100116CFC;
      uint64_t v13 = 0x746E656D75636F44;
      switch(a1)
      {
        case 0:
          goto LABEL_9;
        case 1:
          uint64_t v12 = sub_100116CFC;
          unint64_t v9 = 0xE700000000000000;
          uint64_t v13 = 0x706F746B736544;
          goto LABEL_9;
        case 2:
          id v14 = [objc_allocWithZone((Class)DOCDownloadSettings) init];
          uint64_t v15 = (void *)swift_allocObject();
          v15[2] = 2;
          void v15[3] = a2;
          v15[4] = a3;
          v19[4] = sub_1003A3470;
          v19[5] = v15;
          v19[0] = _NSConcreteStackBlock;
          v19[1] = 1107296256;
          v19[2] = sub_100051F74;
          v19[3] = &unk_1005D1960;
          uint64_t v16 = _Block_copy(v19);
          swift_retain();
          swift_release();
          [v14 fetchDefaultDownloadsLocationItem:v16];
          _Block_release(v16);

          return;
        case 3:
          uint64_t v13 = 0;
          uint64_t v12 = sub_100116B60;
          unint64_t v9 = 0xE000000000000000;
LABEL_9:
          id v17 = (void *)swift_allocObject();
          void v17[2] = a1;
          void v17[3] = a2;
          v17[4] = a3;
          BOOL v18 = (void *)swift_allocObject();
          long long v18[2] = a1;
          int8x16_t v18[3] = v12;
          v18[4] = v17;
          v18[5] = a1;
          void v18[6] = a2;
          v18[7] = a3;
          v18[8] = v13;
          v18[9] = v9;
          swift_retain_n();
          swift_retain();
          sub_1002AA990((uint64_t)sub_100116C08, (uint64_t)v18);
          swift_release();
          swift_release();
          return;
        default:
          goto LABEL_12;
      }
    default:
      break;
  }
LABEL_12:
  v19[0] = a1;
  sub_1004CF8E0();
  __break(1u);
  JUMPOUT(0x1003A17B8);
}

uint64_t sub_1003A17D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CC620();
  int v10 = sub_1004CE350();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1004E5790;
  uint64_t v12 = (void *)v11;
  v24[1] = v10;
  unint64_t v25 = (void *)v9;
  unint64_t v13 = 0xE900000000000073;
  uint64_t v14 = 0x746E656D75636F44;
  switch(a1)
  {
    case 0:
      break;
    case 1:
      unint64_t v13 = 0xE700000000000000;
      uint64_t v14 = 0x706F746B736544;
      break;
    case 2:
      uint64_t v14 = 0x64616F6C6E776F44;
      break;
    case 3:
      unint64_t v13 = 0xEB00000000657669;
      uint64_t v14 = 0x724464756F6C4369;
      break;
    default:
      *(void *)&long long v26 = a1;
      sub_1004CF8E0();
      __break(1u);
      JUMPOUT(0x1003A1B10);
  }
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_1000334C4();
  v12[8] = v15;
  v12[4] = v14;
  _OWORD v12[5] = v13;
  sub_100037C48(a2, (uint64_t)v8);
  uint64_t v16 = sub_1004CAC10();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    id v19 = v25;
LABEL_9:
    v12[12] = &type metadata for String;
    v12[13] = v15;
    v12[9] = 0x296C696E28;
    v12[10] = 0xE500000000000000;
    sub_100049B74((uint64_t)&v26, (uint64_t *)&unk_10062E8E0);
    goto LABEL_10;
  }
  sub_1004CAB60(v18);
  unsigned __int8 v20 = a3;
  uint64_t v22 = v21;
  *((void *)&v27 + 1) = sub_1000333C8(0, &qword_10062F770);
  uint64_t v28 = sub_100037D10((unint64_t *)&qword_100627D50, &qword_10062F770);
  *(void *)&long long v26 = v22;
  a3 = v20;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  id v19 = v25;
  if (!*((void *)&v27 + 1)) {
    goto LABEL_9;
  }
  sub_100033120(&v26, (uint64_t)(v12 + 9));
LABEL_10:
  sub_1004CC640();

  swift_bridgeObjectRelease();
  return a3(a2);
}

void sub_1003A1B20(char *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    unsigned __int8 v20 = *(void **)&a1[OBJC_IVAR____TtC14RecentsAvocado21DOCFileProviderSource_providerDomain];
    if (v20)
    {
      uint64_t v38 = a9;
      uint64_t v21 = self;
      uint64_t v37 = a4;
      uint64_t v22 = a3;
      uint64_t v23 = (void *)v21;
      unint64_t v39 = a1;
      id v24 = v20;
      id v25 = [v23 defaultManager];
      long long v26 = (void *)swift_allocObject();
      void v26[2] = v24;
      v26[3] = a2;
      v26[4] = a5;
      v26[5] = a6;
      v26[6] = a7;
      v26[7] = a8;
      v26[8] = v38;
      v26[9] = v22;
      v26[10] = v37;
      unint64_t v43 = (unint64_t)sub_1003A3344;
      id v44 = v26;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      id v41 = sub_100051F74;
      uint64_t v42 = &unk_1005D17D0;
      long long v27 = _Block_copy(&aBlock);
      id v28 = v24;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v25, "doc_fetchRootItemForProviderDomain:completionHandler:", v28, v27);
      _Block_release(v27);

      return;
    }
  }
  unint64_t v39 = (char *)a3;
  uint64_t v29 = (void *)sub_1004CC620();
  sub_1004CE360();
  sub_100031648((uint64_t *)&unk_100627480);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = (void *)v30;
  *(_OWORD *)(v30 + 16) = xmmword_1004E5790;
  if (a1)
  {
    uint64_t v42 = (void *)type metadata accessor for DOCFileProviderSource(0);
    unint64_t v43 = sub_1003A32E8();
    *(void *)&long long aBlock = a1;
    sub_100033120(&aBlock, (uint64_t)(v31 + 4));
  }
  else
  {
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_1000334C4();
    void v31[4] = 0x72756F73206F6E28;
    uint64_t v31[5] = 0xEB00000000296563;
    if (a2 > 3)
    {
LABEL_9:
      *(void *)&long long aBlock = a2;
      uint64_t v33 = a1;
      sub_1004CF8E0();
      __break(1u);
LABEL_10:
      uint64_t v32 = 0x64616F6C6E776F44;
      goto LABEL_12;
    }
  }
  a3 = (void *)0xE900000000000073;
  uint64_t v32 = 0x746E656D75636F44;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      a3 = (void *)0xE700000000000000;
      uint64_t v32 = 0x706F746B736544;
      break;
    case 2uLL:
      goto LABEL_10;
    case 3uLL:
      a3 = (void *)0xEB00000000657669;
      uint64_t v32 = 0x724464756F6C4369;
      break;
    default:
      goto LABEL_9;
  }
LABEL_12:
  v31[12] = &type metadata for String;
  v31[13] = sub_1000334C4();
  v31[9] = v32;
  v31[10] = a3;
  os_log_type_t v34 = a1;
  sub_1004CC640();

  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1004CAC10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v19, 1, 1, v35);
  ((void (*)(char *))v39)(v19);
  sub_100049B74((uint64_t)v19, (uint64_t *)&unk_10062B3B0);
}

void sub_1003A1F38(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v51 = a4;
  uint64_t v18 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  uint64_t v20 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v24 = (char *)&v46 - v23;
  if (a1)
  {
    id v25 = self;
    id v26 = a1;
    id v27 = [v25 defaultManager];
    id v28 = (void *)swift_allocObject();
    uint64_t v29 = v51;
    void v28[2] = v26;
    v28[3] = v29;
    unint64_t v28[4] = a5;
    v28[5] = a6;
    v28[6] = a7;
    v28[7] = a8;
    v28[8] = a9;
    v28[9] = a10;
    v28[10] = a11;
    id v55 = (uint64_t (*)())sub_1003A33F4;
    id v56 = v28;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v53 = sub_100124F1C;
    id v54 = &unk_1005D1870;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v27 fetchURLForItem:v31 completionHandler:v30];
    _Block_release(v30);
  }
  else
  {
    uint64_t v46 = a2;
    uint64_t v49 = v22;
    uint64_t v50 = a5;
    uint64_t v48 = a7;
    uint64_t v32 = (void *)sub_1004CC620();
    int v47 = sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1004E59C0;
    *(void *)(v33 + 56) = sub_1000333C8(0, &qword_1006287A0);
    *(void *)(v33 + 64) = sub_100037D10(&qword_1006287A8, &qword_1006287A0);
    *(void *)(v33 + 32) = a3;
    unint64_t v34 = 0xE900000000000073;
    uint64_t v35 = 0x746E656D75636F44;
    switch(v51)
    {
      case 0:
        break;
      case 1:
        unint64_t v34 = 0xE700000000000000;
        uint64_t v35 = 0x706F746B736544;
        break;
      case 2:
        uint64_t v35 = 0x64616F6C6E776F44;
        break;
      case 3:
        unint64_t v34 = 0xEB00000000657669;
        uint64_t v35 = 0x724464756F6C4369;
        break;
      default:
        *(void *)&long long aBlock = v51;
        id v45 = a3;
        sub_1004CF8E0();
        __break(1u);
        JUMPOUT(0x1003A249CLL);
    }
    *(void *)(v33 + 96) = &type metadata for String;
    unint64_t v36 = sub_1000334C4();
    *(void *)(v33 + 104) = v36;
    *(void *)(v33 + 72) = v35;
    *(void *)(v33 + 80) = v34;
    if (v46)
    {
      id v37 = a3;
      uint64_t v38 = sub_1004CAA50();
      id v54 = (void *)sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
      id v55 = (uint64_t (*)())sub_100037D10((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
      *(void *)&long long aBlock = v38;
      sub_100033120(&aBlock, v33 + 112);
    }
    else
    {
      *(void *)(v33 + 136) = &type metadata for String;
      *(void *)(v33 + 144) = v36;
      *(void *)(v33 + 112) = 7104878;
      *(void *)(v33 + 120) = 0xE300000000000000;
      id v39 = a3;
    }
    sub_1004CC640();

    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1004CAC10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v24, 1, 1, v40);
    sub_100037C48((uint64_t)v24, (uint64_t)v21);
    unint64_t v41 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v50;
    sub_100269F4C((uint64_t)v21, v42 + v41);
    unint64_t v43 = (void *)(v42 + ((v19 + v41 + 7) & 0xFFFFFFFFFFFFFFF8));
    *unint64_t v43 = a6;
    v43[1] = v48;
    id v55 = sub_1003A339C;
    id v56 = (void *)v42;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v53 = sub_1003A422C;
    id v54 = &unk_1005D1820;
    id v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v44);
    sub_100049B74((uint64_t)v24, (uint64_t *)&unk_10062B3B0);
  }
}

uint64_t sub_1003A24AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *))
{
  uint64_t v46 = a8;
  uint64_t v47 = a2;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v50 = a5;
  uint64_t v13 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v49 + 64);
  uint64_t v15 = __chkstk_darwin(v13 - 8);
  uint64_t v48 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_1004CAC10();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  id v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  id v27 = (char *)&v45 - v26;
  sub_100037C48(a1, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_100049B74((uint64_t)v20, (uint64_t *)&unk_10062B3B0);
    id v28 = (void *)sub_1004CC620();
    LODWORD(v46) = sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1004E59C0;
    *(void *)(v29 + 56) = sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    *(void *)(v29 + 64) = sub_100037D10((unint64_t *)&qword_100630930, (unint64_t *)&qword_100627EE0);
    *(void *)(v29 + 32) = a3;
    unint64_t v30 = 0xE900000000000073;
    uint64_t v31 = 0x746E656D75636F44;
    switch(a4)
    {
      case 0:
        break;
      case 1:
        unint64_t v30 = 0xE700000000000000;
        uint64_t v31 = 0x706F746B736544;
        break;
      case 2:
        uint64_t v31 = 0x64616F6C6E776F44;
        break;
      case 3:
        unint64_t v30 = 0xEB00000000657669;
        uint64_t v31 = 0x724464756F6C4369;
        break;
      default:
        *(void *)&long long aBlock = a4;
        id v44 = a3;
        sub_1004CF8E0();
        __break(1u);
        JUMPOUT(0x1003A2A8CLL);
    }
    *(void *)(v29 + 96) = &type metadata for String;
    unint64_t v34 = sub_1000334C4();
    *(void *)(v29 + 104) = v34;
    *(void *)(v29 + 72) = v31;
    *(void *)(v29 + 80) = v30;
    if (v47)
    {
      id v35 = a3;
      uint64_t v36 = sub_1004CAA50();
      id v55 = (void *)sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
      id v56 = (uint64_t (*)())sub_100037D10((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
      *(void *)&long long aBlock = v36;
      sub_100033120(&aBlock, v29 + 112);
    }
    else
    {
      *(void *)(v29 + 136) = &type metadata for String;
      *(void *)(v29 + 144) = v34;
      *(void *)(v29 + 112) = 7104878;
      *(void *)(v29 + 120) = 0xE300000000000000;
      id v37 = a3;
    }
    sub_1004CC640();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v18, 1, 1, v21);
    uint64_t v38 = v48;
    sub_100037C48((uint64_t)v18, v48);
    unint64_t v39 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v50;
    sub_100269F4C(v38, v40 + v39);
    unint64_t v41 = (void *)(v40 + ((v14 + v39 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v42 = v52;
    void *v41 = v51;
    v41[1] = v42;
    id v56 = sub_1003A339C;
    uint64_t v57 = v40;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v54 = sub_1003A422C;
    id v55 = &unk_1005D18C0;
    unint64_t v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v43);
    return sub_100049B74((uint64_t)v18, (uint64_t *)&unk_10062B3B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
    sub_1004CAB70();
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v18, v25, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    a10(v18);
    sub_100049B74((uint64_t)v18, (uint64_t *)&unk_10062B3B0);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v22 + 8);
    v32(v25, v21);
    return ((uint64_t (*)(char *, uint64_t))v32)(v27, v21);
  }
}

uint64_t sub_1003A2A9C(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v46 - v18;
  __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v46 - v21;
  if (a2)
  {
    uint64_t v47 = v20;
    uint64_t v48 = a4;
    uint64_t v49 = a5;
    uint64_t v23 = (void *)sub_1004CC620();
    sub_1004CE350();
    sub_100031648((uint64_t *)&unk_100627480);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1004E5790;
    id v25 = (void *)v24;
    unint64_t v26 = 0xE900000000000073;
    uint64_t v27 = 0x746E656D75636F44;
    switch((unint64_t)a3)
    {
      case 0uLL:
        break;
      case 1uLL:
        unint64_t v26 = 0xE700000000000000;
        uint64_t v27 = 0x706F746B736544;
        break;
      case 2uLL:
        uint64_t v27 = 0x64616F6C6E776F44;
        break;
      case 3uLL:
        unint64_t v26 = 0xEB00000000657669;
        uint64_t v27 = 0x724464756F6C4369;
        break;
      default:
        long long aBlock = a3;
        sub_1004CF8E0();
        __break(1u);
        JUMPOUT(0x1003A3058);
    }
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = sub_1000334C4();
    void v25[4] = v27;
    v25[5] = v26;
    uint64_t v32 = sub_1004CAA50();
    v25[12] = sub_1000333C8(0, (unint64_t *)&qword_10062B3C0);
    v25[13] = sub_100037D10((unint64_t *)&qword_100627D60, (unint64_t *)&qword_10062B3C0);
    v25[9] = v32;
    sub_1004CC640();

    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1004CAC10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 1, 1, v33);
    sub_100037C48((uint64_t)v16, (uint64_t)v13);
    unint64_t v34 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = a3;
    sub_100269F4C((uint64_t)v13, v35 + v34);
    uint64_t v36 = (void *)(v35 + ((v11 + v34 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v37 = v49;
    *uint64_t v36 = v48;
    v36[1] = v37;
    id v54 = sub_1003A339C;
    uint64_t v55 = v35;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1003A422C;
    id v53 = &unk_1005D1AA0;
    uint64_t v38 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v28 = v20;
    if (a1)
    {
      id v29 = [a1 fileURL];
      if (v29)
      {
        unint64_t v30 = v29;
        sub_1004CABC0();

        uint64_t v31 = sub_1004CAC10();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v19, 0, 1, v31);
      }
      else
      {
        uint64_t v41 = sub_1004CAC10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v19, 1, 1, v41);
      }
      uint64_t v39 = a4;
      sub_100269F4C((uint64_t)v19, (uint64_t)v22);
    }
    else
    {
      uint64_t v39 = a4;
      uint64_t v40 = sub_1004CAC10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v22, 1, 1, v40);
    }
    sub_100037C48((uint64_t)v22, (uint64_t)v16);
    unint64_t v42 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = a3;
    sub_100269F4C((uint64_t)v16, v43 + v42);
    id v44 = (void *)(v43 + ((v11 + v42 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v44 = v39;
    v44[1] = a5;
    id v54 = sub_1003A339C;
    uint64_t v55 = v43;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1003A422C;
    id v53 = &unk_1005D1A50;
    uint64_t v38 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v16 = v22;
  }
  DOCRunInMainThread();
  _Block_release(v38);
  return sub_100049B74((uint64_t)v16, (uint64_t *)&unk_10062B3B0);
}

void sub_1003A3068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100031648((uint64_t *)&unk_10062B3B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_100037C48(a1, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_100269F4C((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  uint64_t v13 = (void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v13 = a3;
  v13[1] = a4;
  aBlock[4] = sub_1003A339C;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D1910;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v14);
}

id sub_1003A3234()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for DOCNamedLocationResolver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCNamedLocationResolver()
{
  return self;
}

unint64_t sub_1003A32E8()
{
  unint64_t result = qword_100629A48;
  if (!qword_100629A48)
  {
    type metadata accessor for DOCFileProviderSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100629A48);
  }
  return result;
}

void sub_1003A3344(void *a1, uint64_t a2)
{
  sub_1003A1F38(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_1003A3380(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003A3390()
{
  return swift_release();
}

uint64_t sub_1003A33A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003A33F4(uint64_t a1, uint64_t a2)
{
  return sub_1003A24AC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void (**)(char *))(v2 + 72));
}

uint64_t sub_1003A3438()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003A3470(void *a1, uint64_t a2)
{
  return sub_1003A2A9C(a1, a2, *(void ***)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1003A347C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003A34CC()
{
  uint64_t v1 = *(void *)(sub_100031648((uint64_t *)&unk_10062B3B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_1004CAC10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();
  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1003A360C()
{
  uint64_t v1 = *(void *)(sub_100031648((uint64_t *)&unk_10062B3B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1003A17D8(v3, v0 + v2, v4);
}

uint64_t sub_1003A36E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100031648(&qword_100637378);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  updateCGFloat d = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
  __chkstk_darwin(updated);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_100049B74(a1, &qword_100637378);
    sub_1003B3E2C(a2, (uint64_t)v8);
    uint64_t v13 = sub_1004CADE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_100049B74((uint64_t)v8, &qword_100637378);
  }
  else
  {
    sub_1003B843C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10021ABF0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1004CADE0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

void sub_1003A3908(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a3 & 1;
  uint64_t v8 = sub_100031648(&qword_1006288A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RestorableSettings(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_100049B74(a1, &qword_1006288A0);
    sub_1003B3FF8(a2, v7, (uint64_t)v10);

    sub_100049B74((uint64_t)v10, &qword_1006288A0);
  }
  else
  {
    sub_1003B843C(a1, (uint64_t)v13, type metadata accessor for RestorableSettings);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_10021AE2C((uint64_t)v13, a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v17;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003A3ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100031648(&qword_10062CF18);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_100049B74(a1, &qword_10062CF18);
    sub_1003B435C(a2, (uint64_t)v8);
    uint64_t v13 = sub_1004CAC10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_100049B74((uint64_t)v8, &qword_10062CF18);
  }
  else
  {
    sub_1003B843C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10021CFFC((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1004CAC10();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1003A3CEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100031648((uint64_t *)&unk_10062DF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)a2;
  long long v18 = *((_OWORD *)a2 + 1);
  long long v19 = v12;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(a1, 1) == 1)
  {
    sub_100049B74(a1, (uint64_t *)&unk_10062DF90);
    sub_1003B4528(a2, (uint64_t)v8);
    sub_1001B0A7C((uint64_t)&v19);
    sub_1001B0A7C((uint64_t)&v18);
    swift_release();
    return sub_100049B74((uint64_t)v8, (uint64_t *)&unk_10062DF90);
  }
  else
  {
    sub_1003B843C(a1, (uint64_t)v11, type metadata accessor for ScrollPositionInfo.ItemOffset);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10021D20C((uint64_t)v11, (long long *)a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    sub_1001B0A7C((uint64_t)&v19);
    sub_1001B0A7C((uint64_t)&v18);
    return swift_release();
  }
}

uint64_t sub_1003A3ED8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1)
  {
    long long v4 = *(_OWORD *)(a1 + 16);
    v8[0] = *(_OWORD *)a1;
    v8[1] = v4;
    void v8[2] = *(_OWORD *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_10021DD74((uint64_t)v8, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v7;
    swift_bridgeObjectRelease();
    return sub_100033078(a2);
  }
  else
  {
    sub_100049B74(a1, &qword_100637DE0);
    sub_1003B48C4(a2, (uint64_t)v8);
    sub_100033078(a2);
    return sub_100049B74((uint64_t)v8, &qword_100637DE0);
  }
}

uint64_t sub_1003A3FA8(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100033120((long long *)a1, (uint64_t)v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_10021DF20(v7, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100049B74(a1, &qword_100637E10);
    sub_1003B49DC((uint64_t)a2, (uint64_t)v7);

    return sub_100049B74((uint64_t)v7, &qword_100637E10);
  }
}

uint64_t sub_1003A4064(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100031648((uint64_t *)&unk_10062B3B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CAC10();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_100049B74(a1, (uint64_t *)&unk_10062B3B0);
    sub_1003B4ADC((uint64_t)a2, (uint64_t)v8);

    return sub_100049B74((uint64_t)v8, (uint64_t *)&unk_10062B3B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10021E848((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003A422C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t DOCBrowserHistoryShiftDirection.description.getter(char a1)
{
  if (a1) {
    return 0x64726177726F66;
  }
  else {
    return 0x647261776B636162;
  }
}

unint64_t sub_1003A42B0()
{
  unint64_t result = qword_100637A40;
  if (!qword_100637A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100637A40);
  }
  return result;
}

uint64_t sub_1003A4304()
{
  if (*v0) {
    return 0x64726177726F66;
  }
  else {
    return 0x647261776B636162;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCBrowserHistoryItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1004CADE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    uint64_t v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    uint64_t v15 = a3[9];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *((void *)v17 + 3);
    id v19 = v10;
    swift_bridgeObjectRetain();
    id v20 = v13;
    id v21 = v14;
    if (v18)
    {
      *((void *)v16 + 3) = v18;
      (**(void (***)(char *, char *, uint64_t))(v18 - 8))(v16, v17, v18);
    }
    else
    {
      long long v23 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v23;
    }
  }
  return a1;
}

uint64_t destroy for DOCBrowserHistoryItem(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  uint64_t result = a1 + a2[9];
  if (*(void *)(result + 24)) {
    return sub_100039184(result);
  }
  return result;
}

uint64_t initializeWithCopy for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v16 + 24);
  id v18 = v9;
  swift_bridgeObjectRetain();
  id v19 = v12;
  id v20 = v13;
  if (v17)
  {
    *(void *)(v15 + 24) = v17;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(v15, v16, v17);
  }
  else
  {
    long long v21 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v21;
  }
  return a1;
}

uint64_t assignWithCopy for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a1 + v11);
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = v13;

  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v21 + 24);
  if (!*(void *)(a1 + v19 + 24))
  {
    if (v22)
    {
      *(void *)(v20 + 24) = v22;
      (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v20, v21);
      return a1;
    }
LABEL_7:
    long long v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v23;
    return a1;
  }
  if (!v22)
  {
    sub_100039184(v20);
    goto LABEL_7;
  }
  sub_100343A1C((uint64_t *)v20, (uint64_t *)v21);
  return a1;
}

uint64_t initializeWithTake for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  id v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  long long v12 = v11[1];
  *id v10 = *v11;
  v10[1] = v12;
  return a1;
}

uint64_t assignWithTake for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1004CADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[8];
  long long v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[9];
  id v14 = (_OWORD *)(a1 + v13);
  if (*(void *)(a1 + v13 + 24)) {
    sub_100039184(a1 + v13);
  }
  long long v15 = *(_OWORD *)(a2 + v13 + 16);
  *id v14 = *(_OWORD *)(a2 + v13);
  v14[1] = v15;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A4948);
}

uint64_t sub_1003A4948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1004CADE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A4A1C);
}

uint64_t sub_1003A4A1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1004CADE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DOCBrowserHistoryItem(uint64_t a1)
{
  return sub_100069444(a1, qword_100637AA0);
}

uint64_t sub_1003A4AF8()
{
  uint64_t result = sub_1004CADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCBrowserHistoryShiftDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A4C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryShiftDirection()
{
  return &type metadata for DOCBrowserHistoryShiftDirection;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCBrowserHistoryShiftAmount(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100031648(&qword_10062C980);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1004CADE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
      uint64_t v14 = v11[7];
      long long v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v11[8];
      uint64_t v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v11[9];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = *((void *)v20 + 3);
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v25 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v25;
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for DOCBrowserHistoryShiftAmount(uint64_t a1)
{
  uint64_t v2 = sub_100031648(&qword_10062C980);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1004CADE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    int v5 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);

    swift_bridgeObjectRelease();
    uint64_t result = a1 + v5[9];
    if (*(void *)(result + 24)) {
      return sub_100039184(result);
    }
  }
  return result;
}

char *initializeWithCopy for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648(&qword_10062C980);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1004CADE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = *(void **)&a2[v10];
    *(void *)&a1[v10] = v11;
    *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
    uint64_t v12 = v9[7];
    uint64_t v13 = *(void **)&a2[v12];
    *(void *)&a1[v12] = v13;
    uint64_t v14 = v9[8];
    long long v15 = *(void **)&a2[v14];
    *(void *)&a1[v14] = v15;
    uint64_t v16 = v9[9];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = *((void *)v18 + 3);
    id v20 = v11;
    swift_bridgeObjectRetain();
    id v21 = v13;
    id v22 = v15;
    if (v19)
    {
      *((void *)v17 + 3) = v19;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      long long v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648(&qword_10062C980);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v26 = sub_1004CADE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
      uint64_t v27 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      uint64_t v28 = v27[5];
      id v29 = *(void **)&a2[v28];
      unint64_t v30 = *(void **)&a1[v28];
      *(void *)&a1[v28] = v29;
      id v31 = v29;

      *(void *)&a1[v27[6]] = *(void *)&a2[v27[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v32 = v27[7];
      uint64_t v33 = *(void **)&a1[v32];
      unint64_t v34 = *(void **)&a2[v32];
      *(void *)&a1[v32] = v34;
      id v35 = v34;

      uint64_t v36 = v27[8];
      uint64_t v37 = *(void **)&a2[v36];
      uint64_t v38 = *(void **)&a1[v36];
      *(void *)&a1[v36] = v37;
      id v39 = v37;

      uint64_t v40 = v27[9];
      uint64_t v41 = (uint64_t)&a1[v40];
      unint64_t v42 = &a2[v40];
      uint64_t v43 = *((void *)v42 + 3);
      if (*(void *)&a1[v40 + 24])
      {
        if (v43)
        {
          sub_100343A1C((uint64_t *)v41, (uint64_t *)v42);
          return a1;
        }
        sub_100039184(v41);
      }
      else if (v43)
      {
        *(void *)(v41 + 24) = v43;
        (**(void (***)(uint64_t, char *))(v43 - 8))(v41, v42);
        return a1;
      }
      long long v46 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *(_OWORD *)(v41 + 16) = v46;
      return a1;
    }
    sub_100049B74((uint64_t)a1, &qword_10062C980);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1004CADE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = *(void **)&a2[v13];
  *(void *)&a1[v13] = v14;
  *(void *)&a1[v12[6]] = *(void *)&a2[v12[6]];
  uint64_t v15 = v12[7];
  uint64_t v16 = *(void **)&a2[v15];
  *(void *)&a1[v15] = v16;
  uint64_t v17 = v12[8];
  uint64_t v18 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v18;
  uint64_t v19 = v12[9];
  id v20 = &a1[v19];
  id v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 3);
  id v23 = v14;
  swift_bridgeObjectRetain();
  id v24 = v16;
  id v25 = v18;
  if (v22)
  {
    *((void *)v20 + 3) = v22;
    (**(void (***)(char *, char *, uint64_t))(v22 - 8))(v20, v21, v22);
  }
  else
  {
    long long v44 = *((_OWORD *)v21 + 1);
    *(_OWORD *)id v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v44;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648(&qword_10062C980);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1004CADE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    int v9 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
    *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    uint64_t v10 = v9[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648(&qword_10062C980);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_1004CADE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      *(void *)&a1[v12[5]] = *(void *)&a2[v12[5]];
      *(void *)&a1[v12[6]] = *(void *)&a2[v12[6]];
      *(void *)&a1[v12[7]] = *(void *)&a2[v12[7]];
      *(void *)&a1[v12[8]] = *(void *)&a2[v12[8]];
      uint64_t v13 = v12[9];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_100049B74((uint64_t)a1, &qword_10062C980);
    goto LABEL_6;
  }
  uint64_t v18 = sub_1004CADE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(a1, a2, v18);
  uint64_t v19 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v20 = v19[5];
  id v21 = *(void **)&a1[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];

  *(void *)&a1[v19[6]] = *(void *)&a2[v19[6]];
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[7];
  id v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  uint64_t v24 = v19[8];
  id v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  uint64_t v26 = v19[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (*(void *)&a1[v26 + 24]) {
    sub_100039184((uint64_t)v27);
  }
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCBrowserHistoryShiftAmount(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A58F0);
}

uint64_t sub_1003A58F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648(&qword_10062C980);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryShiftAmount(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A5974);
}

uint64_t sub_1003A5974(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100031648(&qword_10062C980);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1003A59F8(uint64_t a1)
{
  uint64_t v2 = sub_100031648(&qword_10062C980);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1003A5A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100031648(&qword_10062C980);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftAmount(uint64_t a1)
{
  return sub_100069444(a1, (uint64_t *)&unk_100637B60);
}

uint64_t sub_1003A5AF8()
{
  uint64_t result = type metadata accessor for DOCBrowserHistoryItem(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1003A5B74(uint64_t a1, void (*a2)(unsigned char *))
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100031648(&qword_100632BA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = &v25[-v13];
  __chkstk_darwin(v12);
  long long v16 = &v25[-v15];
  sub_1000335A8(a1, (uint64_t)&v25[-v15], &qword_100632BA0);
  sub_1000335A8((uint64_t)v16, (uint64_t)v14, &qword_100632BA0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_100049B74((uint64_t)v14, &qword_100632BA0);
  }
  else
  {
    sub_1003B843C((uint64_t)v14, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    a2(v7);
    sub_1003B82A4((uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    sub_100049B74((uint64_t)v16, &qword_100632BA0);
    sub_100031790((uint64_t)v11, (uint64_t)v16, &qword_100632BA0);
  }
  uint64_t v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v18 = *(int *)(v17 + 20);
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1003B7638(v19, (void (*)(void))a2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = *(int *)(v17 + 24);
  swift_retain();
  uint64_t v22 = swift_bridgeObjectRetain();
  id v23 = sub_1003B7638(v22, (void (*)(void))a2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1003B82A4(a1, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  uint64_t result = sub_100031790((uint64_t)v16, a1, &qword_100632BA0);
  *(void *)(a1 + v18) = v20;
  *(void *)(a1 + v21) = v23;
  return result;
}

uint64_t sub_1003A5E48()
{
  char v2 = 0;
  uint64_t v1 = 0;
  sub_1004CBF30();
  return sub_1003B8FF4(0);
}

uint64_t sub_1003A6018(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, unsigned char *a5, uint64_t *a6)
{
  uint64_t v12 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - v16;
  if ((a2 & 1) != 0
    || (uint64_t v18 = (void *)(a1
                       + *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0) + 20)),
        !*v18))
  {
    sub_1003B8D70(a1, (uint64_t)v17, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    a3(a1);
    sub_1003B8D70(a1, (uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    char v25 = sub_1003B6CB0((uint64_t)v15, (uint64_t)v17);
    sub_1003B82A4((uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    uint64_t result = sub_1003B82A4((uint64_t)v17, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    if ((v25 & 1) == 0) {
      *a5 = 1;
    }
    if (a2)
    {
      uint64_t v26 = a1 + *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0) + 20);
      uint64_t v27 = *a6;
      *(_OWORD *)a6 = *(_OWORD *)v26;
      uint64_t result = sub_1003B8FF4(v27);
      *(void *)uint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
    }
  }
  else
  {
    uint64_t v19 = (void *)v18[1];
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a3;
    *(void *)(v20 + 24) = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v19 = sub_100238A2C(0, v19[2] + 1, 1, v19);
    }
    unint64_t v22 = v19[2];
    unint64_t v21 = v19[3];
    if (v22 >= v21 >> 1) {
      uint64_t v19 = sub_100238A2C((void *)(v21 > 1), v22 + 1, 1, v19);
    }
    v19[2] = v22 + 1;
    id v23 = &v19[2 * v22];
    v23[4] = sub_10003D680;
    v23[5] = v20;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1003A6268(uint64_t a1)
{
  id v2 = [self defaultCenter];
  id v3 = v2;
  if (qword_1006269F8 != -1)
  {
    swift_once();
    id v2 = v3;
  }
  [v2 postNotificationName:qword_1006507D0 object:a1];
}

uint64_t sub_1003A6314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003B8D70(a1, a2, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
}

uint64_t sub_1003A6344(uint64_t a1)
{
  uint64_t v3 = sub_1004CD860();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1004CD8C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v17 = result;
    sub_1000333C8(0, (unint64_t *)&qword_100626B70);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1004CE630();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = v1;
    aBlock[4] = sub_1003B8FC0;
    void aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003A422C;
    void aBlock[3] = &unk_1005D2310;
    uint64_t v14 = _Block_copy(aBlock);
    id v15 = v1;
    swift_release();
    sub_1004CD880();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003B8F74((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    sub_1004CF330();
    sub_1004CE650();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v17);
  }
  return result;
}

uint64_t sub_1003A6620(uint64_t a1, char *a2)
{
  uint64_t v40 = sub_1004CD860();
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  id v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1004CD8C0();
  uint64_t result = __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(a1 + 16);
  if (v44)
  {
    uint64_t v9 = *(void *)&a2[OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_state];
    uint64_t v42 = a1 + 32;
    uint64_t v43 = v9;
    uint64_t v45 = &v51;
    uint64_t v36 = (void (**)(char *, uint64_t))(v4 + 8);
    id v35 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v34 = a1;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v41 = (char *)&type metadata for () + 8;
    uint64_t v11 = v37;
    do
    {
      uint64_t v12 = swift_allocObject();
      long long v48 = *(_OWORD *)(v42 + 16 * v10);
      *(_OWORD *)(v12 + 16) = v48;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_1003B8FC8;
      *(void *)(v13 + 24) = v12;
      char v57 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = 0;
      uint64_t v14 = __chkstk_darwin(v13);
      *((unsigned char *)&v34 - 48) = 0;
      *(&v34 - 5) = (uint64_t)sub_10003D680;
      *(&v34 - 4) = v14;
      *(&v34 - 3) = (uint64_t)&v57;
      *(&v34 - 2) = (uint64_t)&v55;
      uint64_t v15 = *((void *)&v48 + 1);
      swift_retain_n();
      sub_1004CBF30();
      uint64_t v16 = v55;
      if (v55)
      {
        uint64_t v17 = v56;
        uint64_t v18 = *(void *)(v55 + 16);
        uint64_t v47 = v13;
        *(void *)&long long v48 = v15;
        if (v18)
        {
          uint64_t v19 = swift_bridgeObjectRetain();
          sub_1003B903C(v19);
          uint64_t v20 = v16 + 40;
          do
          {
            unint64_t v21 = *(void (**)(uint64_t))(v20 - 8);
            uint64_t v22 = swift_retain();
            v21(v22);
            swift_release();
            v20 += 16;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        sub_1000333C8(0, (unint64_t *)&qword_100626B70);
        swift_bridgeObjectRetain_n();
        uint64_t v46 = sub_1004CE630();
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v17;
        *(void *)(v23 + 24) = a2;
        id v53 = (void (*)())sub_1003B9614;
        uint64_t v54 = v23;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        uint64_t v51 = sub_1003A422C;
        uint64_t v52 = &unk_1005D2400;
        uint64_t v24 = _Block_copy(&aBlock);
        char v25 = a2;
        swift_release();
        sub_1004CD880();
        long long aBlock = (void **)_swiftEmptyArrayStorage;
        sub_1003B8F74((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100031648((uint64_t *)&unk_100628370);
        sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
        uint64_t v26 = v39;
        uint64_t v27 = a2;
        uint64_t v28 = v40;
        sub_1004CF330();
        long long v29 = (void *)v46;
        sub_1004CE650();
        _Block_release(v24);

        uint64_t v30 = v28;
        a2 = v27;
        (*v36)(v26, v30);
        (*v35)(v11, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      if (v57 == 1)
      {
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = a2;
        id v53 = sub_1003B9034;
        uint64_t v54 = v31;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        uint64_t v51 = sub_1003A422C;
        uint64_t v52 = &unk_1005D23B0;
        uint64_t v32 = _Block_copy(&aBlock);
        uint64_t v33 = a2;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v32);
      }
      ++v10;
      sub_1003B8FF4(v55);
      swift_release();
      swift_release();
    }
    while (v10 != v44);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1003A6BF8()
{
  uint64_t v1 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1004CADE0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)&v0[OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_shortDebugID];
  uint64_t v10 = v0;
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100030CB4(6);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1004CDBC0();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *uint64_t v9 = v11;
  v9[1] = v13;
  uint64_t v14 = OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_state;
  uint64_t v15 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  uint64_t v16 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&v4[*(int *)(v16 + 20)] = _swiftEmptyArrayStorage;
  *(void *)&v4[*(int *)(v16 + 24)] = _swiftEmptyArrayStorage;
  uint64_t v17 = &v4[*(int *)(v2 + 28)];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  sub_100031648((uint64_t *)&unk_100637E30);
  swift_allocObject();
  *(void *)&v10[v14] = sub_1004CBF40();
  uint64_t v18 = OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_itemManager;
  *(void *)&v10[v18] = [self defaultManager];

  uint64_t v19 = (objc_class *)type metadata accessor for _DOCBrowserHistoryDataSourceBase();
  v21.id receiver = v10;
  v21.Class super_class = v19;
  return objc_msgSendSuper2(&v21, "init");
}

id sub_1003A6E98()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for _DOCBrowserHistoryDataSourceBase();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase()
{
  return self;
}

NSString sub_1003A6F50()
{
  NSString result = sub_1004CDB10();
  qword_1006507D0 = (uint64_t)result;
  return result;
}

id sub_1003A6F88(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_observableTrashCollection] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourcesObserverToken] = 0;
  v1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] = 0;
  uint64_t v3 = (uint64_t (**)())&v1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_allowedItemsFilter];
  *uint64_t v3 = variable initialization expression of DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourceObserver] = a1;
  v7.id receiver = v1;
  v7.Class super_class = (Class)type metadata accessor for DOCBrowserHistoryDataSource();
  id v4 = a1;
  id v5 = objc_msgSendSuper2(&v7, "init");
  sub_1003A7048();

  return v5;
}

void sub_1003A7048()
{
  uint64_t v1 = v0;
  id v2 = [self shared];
  [v2 addChangeObserver:v1];

  uint64_t v3 = OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_observableTrashCollection;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_observableTrashCollection);
  if (v4) {
    goto LABEL_5;
  }
  id v5 = [*(id *)(v1 + OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_itemManager) newTrashCollection];
  objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
  id v6 = v5;
  sub_1003E86E4(v6, 0);
  objc_super v7 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = v8;

  uint64_t v9 = *(void *)(v1 + v3);
  if (v9)
  {
    *(void *)(v9 + OBJC_IVAR____TtC14RecentsAvocado17DOCNodeCollection_delegate + 8) = &off_1005D1BF8;
    swift_unknownObjectWeakAssign();
  }

  id v4 = *(void **)(v1 + v3);
  if (v4)
  {
LABEL_5:
    id v10 = v4;
    sub_1003E9130();
  }
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourceObserver);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17[4] = sub_1003B90B8;
  uint64_t v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_10006C0B4;
  void v17[3] = &unk_1005D24A0;
  uint64_t v13 = _Block_copy(v17);
  id v14 = v11;
  swift_release();
  id v15 = [v14 addSubscriber:v13];
  _Block_release(v13);

  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourcesObserverToken);
  *(void *)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourcesObserverToken) = v15;
}

uint64_t sub_1003A7244()
{
  return swift_release();
}

id sub_1003A72A8()
{
  sub_1003A72E0();
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for DOCBrowserHistoryDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1003A72E0()
{
  uint64_t v1 = v0;
  id v2 = [self shared];
  [v2 removeChangeObserver:v1];

  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_observableTrashCollection);
  if (v3)
  {
    id v4 = v3;
    sub_1003E95E8();
  }
  uint64_t v5 = OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourcesObserverToken;
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourcesObserverToken);
  if (v6)
  {
    objc_super v7 = *(void **)(v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_sourceObserver);
    id v8 = v6;
    [v7 removeSubscriberForToken:v8];
    id v9 = *(id *)(v1 + v5);
    *(void *)(v1 + v5) = 0;
  }
}

uint64_t sub_1003A7490(uint64_t a1)
{
  uint64_t v2 = sub_100031648(&qword_100632BA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  objc_super v7 = (char *)&v9 - v6;
  sub_1000335A8(a1, (uint64_t)&v9 - v6, &qword_100632BA0);
  sub_100031790((uint64_t)v7, (uint64_t)v5, &qword_100632BA0);
  sub_1003B82A4(a1, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_100031790((uint64_t)v5, a1, &qword_100632BA0);
  uint64_t result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)(a1 + *(int *)(result + 20)) = _swiftEmptyArrayStorage;
  *(void *)(a1 + *(int *)(result + 24)) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1003A7594(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  objc_super v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CBF20();
  sub_1003B8D70((uint64_t)v16, (uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1003B82A4((uint64_t)v16, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  if (a1)
  {
    uint64_t v18 = *(void *)&v13[*(int *)(v11 + 24)];
    swift_bridgeObjectRetain();
    sub_1003B82A4((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  }
  else
  {
    unint64_t v17 = *(void *)&v13[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain();
    sub_1003B82A4((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    uint64_t v18 = sub_100459E34(v17);
  }
  sub_1003B8D70(a2, (uint64_t)v10, type metadata accessor for DOCBrowserHistoryShiftAmount);
  uint64_t v19 = sub_100031648(&qword_10062C980);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v10, 1, v19) == 1)
  {
    uint64_t v20 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    char v21 = v20 != 0;
  }
  else
  {
    sub_1003B843C((uint64_t)v10, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v22 = *(void *)(v18 + 16);
    if (v22)
    {
      unint64_t v23 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v24 = *(void *)(v5 + 72);
      swift_bridgeObjectRetain();
      uint64_t v25 = v22 - 1;
      do
      {
        uint64_t v26 = v25;
        char v21 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();
        if (v21) {
          break;
        }
        uint64_t v25 = v26 - 1;
        v23 += v24;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = 0;
    }
    sub_1003B82A4((uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    swift_bridgeObjectRelease();
  }
  return v21 & 1;
}

uint64_t sub_1003A7920(char a1, uint64_t a2)
{
  int v3 = a1 & 1;
  uint64_t v175 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v4 = __chkstk_darwin(v175);
  uint64_t v156 = (uint64_t)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v158 = (uint64_t)&v149 - v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v149 - v8;
  uint64_t v178 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  uint64_t v10 = __chkstk_darwin(v178);
  uint64_t v161 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v157 = (char *)&v149 - v13;
  __chkstk_darwin(v12);
  uint64_t v179 = (char *)&v149 - v14;
  uint64_t v15 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v15 - 8);
  uint64_t v168 = (uint64_t)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v155 = (uint64_t)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v154 = (char *)&v149 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v153 = (uint64_t)&v149 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v160 = (uint64_t)&v149 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v166 = (uint64_t)&v149 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v177 = (uint64_t)&v149 - v29;
  __chkstk_darwin(v28);
  uint64_t v182 = (uint64_t)&v149 - v30;
  uint64_t v167 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v187 = *(void *)(v167 - 8);
  uint64_t v31 = __chkstk_darwin(v167);
  uint64_t v152 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v174 = (uint64_t)&v149 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v151 = (char *)&v149 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v173 = (uint64_t)&v149 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v180 = (uint64_t)&v149 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v181 = (uint64_t)&v149 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v149 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  long long v48 = (char *)&v149 - v47;
  uint64_t v49 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)&v149 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  uint64_t v54 = (char *)&v149 - v53;
  uint64_t v55 = __chkstk_darwin(v52);
  char v57 = (char *)&v149 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  Swift::String v60 = (char *)&v149 - v59;
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v149 - v61;
  int v176 = v3;
  uint64_t i = a2;
  uint64_t v63 = a2;
  uint64_t v64 = v159;
  uint64_t result = sub_1003A7594(v3, v63);
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v172 = v60;
  uint64_t v163 = v62;
  uint64_t v164 = v57;
  uint64_t v184 = v51;
  uint64_t v185 = v54;
  uint64_t v186 = v48;
  int v66 = v176;
  uint64_t v67 = v64;
  sub_1003A8CAC(v176);
  uint64_t v68 = v182;
  sub_1003B8D70(i, v182, type metadata accessor for DOCBrowserHistoryShiftAmount);
  uint64_t v69 = sub_100031648(&qword_10062C980);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v71(v68, 1, v69) == 1)
  {
    uint64_t v72 = type metadata accessor for DOCBrowserHistoryShiftAmount;
    uint64_t v73 = v68;
    return sub_1003B82A4(v73, v72);
  }
  unint64_t v170 = v71;
  uint64_t v171 = v70 + 48;
  char v74 = v172;
  sub_1003B843C(v68, (uint64_t)v172, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v75 = (uint64_t)v163;
  sub_1003B843C((uint64_t)v74, (uint64_t)v163, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v182 = *(void *)(v67 + OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_state);
  uint64_t v162 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
  uint64_t v172 = (void *)(v70 + 56);
  unint64_t v150 = (unint64_t)" completion to that job!";
  unint64_t v149 = 0x8000000100535770;
  uint64_t v165 = v9;
  uint64_t v76 = v177;
  uint64_t v77 = (uint64_t)v164;
  for (uint64_t i = v69; ; v69 = i)
  {
    uint64_t v78 = (uint64_t)v179;
    sub_1004CBF20();
    sub_1003B8D70(v78, (uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1003B82A4(v78, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    uint64_t v79 = v168;
    sub_1000335A8((uint64_t)v9, v168, &qword_100632BA0);
    sub_1003B82A4((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    if ((*v162)(v79, 1, v167) == 1)
    {
      sub_1003B82A4(v75, type metadata accessor for DOCBrowserHistoryItem);
      return sub_100049B74(v79, &qword_100632BA0);
    }
    sub_1003B843C(v79, v77, type metadata accessor for DOCBrowserHistoryItem);
    sub_1004CADE0();
    sub_1003B8F74((unint64_t *)&unk_10063AF30, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (sub_1004CDAA0())
    {
      sub_1003B82A4(v77, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v73 = v75;
      uint64_t v72 = type metadata accessor for DOCBrowserHistoryItem;
      return sub_1003B82A4(v73, v72);
    }
    id v80 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v172;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v172)(v76, 1, 1, v69);
    uint64_t v169 = v80;
    if (v66)
    {
      uint64_t v99 = (uint64_t)v179;
      sub_1004CBF20();
      sub_1003B8D70(v99, (uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
      sub_1003B82A4(v99, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
      unint64_t v83 = *(void *)&v9[*(int *)(v175 + 24)];
      swift_bridgeObjectRetain();
      sub_1003B82A4((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
      goto LABEL_25;
    }
    uint64_t v81 = (uint64_t)v157;
    sub_1004CBF20();
    uint64_t v82 = v158;
    sub_1003B8D70(v81, v158, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1003B82A4(v81, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    unint64_t v83 = *(void *)(v82 + *(int *)(v175 + 20));
    swift_bridgeObjectRetain();
    uint64_t result = sub_1003B82A4(v82, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    unint64_t v84 = *(void *)(v83 + 16);
    if (v84 >= 2) {
      break;
    }
LABEL_25:
    uint64_t v89 = (uint64_t)v186;
LABEL_26:
    uint64_t v76 = v177;
    uint64_t v100 = v166;
    sub_1003B8D70(v177, v166, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v170(v100, 1, i) == 1)
    {
      uint64_t v101 = *(void *)(v83 + 16);
      swift_bridgeObjectRelease();
      sub_1003B82A4(v76, type metadata accessor for DOCBrowserHistoryShiftAmount);
      int v66 = v176;
      uint64_t v102 = (uint64_t)v161;
      uint64_t v103 = v187;
      if (!v101) {
        goto LABEL_8;
      }
      if (!v176) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_1003B843C(v100, v89, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v110 = *(void *)(v83 + 16);
      uint64_t v111 = v187;
      if (!v110)
      {
LABEL_38:
        sub_1003B82A4(v89, type metadata accessor for DOCBrowserHistoryItem);
        swift_bridgeObjectRelease();
        uint64_t v115 = v76;
LABEL_39:
        sub_1003B82A4(v115, type metadata accessor for DOCBrowserHistoryShiftAmount);
        int v66 = v176;
        goto LABEL_8;
      }
      uint64_t v112 = v83 + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
      swift_bridgeObjectRetain();
      uint64_t v113 = *(void *)(v111 + 72);
      while (1)
      {
        sub_1003B8D70(v112, (uint64_t)v45, type metadata accessor for DOCBrowserHistoryItem);
        char v114 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();
        sub_1003B82A4((uint64_t)v45, type metadata accessor for DOCBrowserHistoryItem);
        if (v114) {
          break;
        }
        v112 += v113;
        if (!--v110)
        {
          swift_bridgeObjectRelease();
          uint64_t v76 = v177;
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease();
      sub_1003B82A4(v89, type metadata accessor for DOCBrowserHistoryItem);
      swift_bridgeObjectRelease();
      uint64_t v76 = v177;
      sub_1003B82A4(v177, type metadata accessor for DOCBrowserHistoryShiftAmount);
      uint64_t v102 = (uint64_t)v161;
      uint64_t v103 = v187;
      if (!v176)
      {
LABEL_29:
        v169(v160, 1, 1, i);
        sub_1004CBF20();
        uint64_t v104 = v156;
        sub_1003B8D70(v102, v156, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
        sub_1003B82A4(v102, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
        unint64_t v105 = *(void *)(v104 + *(int *)(v175 + 20));
        swift_bridgeObjectRetain();
        uint64_t result = sub_1003B82A4(v104, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
        unint64_t v106 = *(void *)(v105 + 16);
        if (v106 >= 2)
        {
          unint64_t v123 = 0;
          unint64_t v124 = v106 >> 1;
          unint64_t v125 = v106 - 1;
          uint64_t v126 = v181;
          do
          {
            if (v123 != v125)
            {
              unint64_t v127 = *(void *)(v105 + 16);
              if (v123 >= v127) {
                goto LABEL_76;
              }
              unint64_t v128 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
              uint64_t v129 = *(void *)(v103 + 72);
              uint64_t v130 = v129 * v123;
              uint64_t result = sub_1003B8D70(v105 + v128 + v129 * v123, v126, type metadata accessor for DOCBrowserHistoryItem);
              if (v125 >= v127) {
                goto LABEL_77;
              }
              unint64_t v131 = v129 * v125;
              uint64_t v132 = v105 + v128 + v129 * v125;
              uint64_t v133 = v180;
              sub_1003B8D70(v132, v180, type metadata accessor for DOCBrowserHistoryItem);
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                uint64_t result = sub_100384ABC(v105);
                unint64_t v105 = result;
              }
              if (v123 >= *(void *)(v105 + 16)) {
                goto LABEL_78;
              }
              unint64_t v134 = v105 + v128;
              uint64_t result = sub_1003B8CE8(v133, v134 + v130);
              if (v125 >= *(void *)(v105 + 16)) {
                goto LABEL_79;
              }
              uint64_t v135 = v134 + v131;
              uint64_t v136 = v181;
              uint64_t result = sub_1003B8CE8(v181, v135);
              uint64_t v126 = v136;
              uint64_t v103 = v187;
            }
            ++v123;
            --v125;
          }
          while (v124 != v123);
        }
        uint64_t v107 = v160;
        uint64_t v108 = v153;
        sub_1003B8D70(v160, v153, type metadata accessor for DOCBrowserHistoryShiftAmount);
        if (v170(v108, 1, i) == 1)
        {
          uint64_t v109 = *(void *)(v105 + 16);
          swift_bridgeObjectRelease();
          sub_1003B82A4(v107, type metadata accessor for DOCBrowserHistoryShiftAmount);
          int v66 = v176;
          uint64_t v76 = v177;
          if (v109) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v143 = v173;
          sub_1003B843C(v108, v173, type metadata accessor for DOCBrowserHistoryItem);
          uint64_t v144 = *(void *)(v105 + 16);
          if (v144)
          {
            uint64_t v145 = v105
                 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
            swift_bridgeObjectRetain();
            uint64_t v146 = *(void *)(v103 + 72);
            uint64_t v147 = (uint64_t)v151;
            while (1)
            {
              sub_1003B8D70(v145, v147, type metadata accessor for DOCBrowserHistoryItem);
              char v148 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();
              sub_1003B82A4(v147, type metadata accessor for DOCBrowserHistoryItem);
              if (v148) {
                break;
              }
              v145 += v146;
              if (!--v144)
              {
                swift_bridgeObjectRelease();
                uint64_t v107 = v160;
                uint64_t v143 = v173;
                goto LABEL_65;
              }
            }
            swift_bridgeObjectRelease();
            sub_1003B82A4(v173, type metadata accessor for DOCBrowserHistoryItem);
            swift_bridgeObjectRelease();
            sub_1003B82A4(v160, type metadata accessor for DOCBrowserHistoryShiftAmount);
            int v66 = v176;
            uint64_t v76 = v177;
LABEL_67:
            sub_1003A9588(0xD000000000000018, v149);
LABEL_7:
            sub_1003A5E48();
            goto LABEL_8;
          }
LABEL_65:
          sub_1003B82A4(v143, type metadata accessor for DOCBrowserHistoryItem);
          swift_bridgeObjectRelease();
          sub_1003B82A4(v107, type metadata accessor for DOCBrowserHistoryShiftAmount);
          int v66 = v176;
          uint64_t v76 = v177;
        }
        goto LABEL_8;
      }
    }
    uint64_t v116 = (uint64_t)v154;
    uint64_t v117 = i;
    v169((uint64_t)v154, 1, 1, i);
    uint64_t v118 = (uint64_t)v179;
    sub_1004CBF20();
    uint64_t v119 = (uint64_t)v165;
    sub_1003B8D70(v118, (uint64_t)v165, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1003B82A4(v118, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    uint64_t v120 = *(void *)(v119 + *(int *)(v175 + 24));
    swift_bridgeObjectRetain();
    sub_1003B82A4(v119, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    uint64_t v121 = v155;
    sub_1003B8D70(v116, v155, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v170(v121, 1, v117) != 1)
    {
      uint64_t v137 = v174;
      sub_1003B843C(v121, v174, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v138 = *(void *)(v120 + 16);
      if (v138)
      {
        uint64_t v139 = v120 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
        swift_bridgeObjectRetain();
        uint64_t v140 = *(void *)(v103 + 72);
        uint64_t v141 = (uint64_t)v152;
        do
        {
          sub_1003B8D70(v139, v141, type metadata accessor for DOCBrowserHistoryItem);
          char v142 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();
          sub_1003B82A4(v141, type metadata accessor for DOCBrowserHistoryItem);
          if (v142)
          {
            swift_bridgeObjectRelease();
            sub_1003B82A4(v174, type metadata accessor for DOCBrowserHistoryItem);
            swift_bridgeObjectRelease();
            sub_1003B82A4(v116, type metadata accessor for DOCBrowserHistoryShiftAmount);
            int v66 = v176;
            uint64_t v76 = v177;
            goto LABEL_6;
          }
          v139 += v140;
          --v138;
        }
        while (v138);
        swift_bridgeObjectRelease();
        uint64_t v76 = v177;
        uint64_t v137 = v174;
      }
      sub_1003B82A4(v137, type metadata accessor for DOCBrowserHistoryItem);
      swift_bridgeObjectRelease();
      uint64_t v115 = v116;
      goto LABEL_39;
    }
    uint64_t v122 = *(void *)(v120 + 16);
    swift_bridgeObjectRelease();
    sub_1003B82A4(v116, type metadata accessor for DOCBrowserHistoryShiftAmount);
    int v66 = v176;
    if (v122)
    {
LABEL_6:
      sub_1003A9588(0xD000000000000018, v150 | 0x8000000000000000);
      goto LABEL_7;
    }
LABEL_8:
    uint64_t v77 = (uint64_t)v164;
    sub_1003B82A4((uint64_t)v164, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v9 = v165;
    uint64_t v75 = (uint64_t)v163;
  }
  unint64_t v85 = 0;
  unint64_t v86 = v84 >> 1;
  unint64_t v87 = v84 - 1;
  uint64_t v88 = (uint64_t)v185;
  uint64_t v89 = (uint64_t)v186;
  while (1)
  {
    if (v85 == v87) {
      goto LABEL_15;
    }
    unint64_t v91 = *(void *)(v83 + 16);
    if (v85 >= v91) {
      break;
    }
    unint64_t v92 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
    uint64_t v93 = *(void *)(v187 + 72);
    uint64_t v94 = v93 * v85;
    uint64_t result = sub_1003B8D70(v83 + v92 + v93 * v85, v88, type metadata accessor for DOCBrowserHistoryItem);
    if (v87 >= v91) {
      goto LABEL_73;
    }
    unint64_t v95 = v93 * v87;
    uint64_t v96 = v83 + v92 + v93 * v87;
    uint64_t v97 = (uint64_t)v184;
    sub_1003B8D70(v96, (uint64_t)v184, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100384ABC(v83);
      unint64_t v83 = result;
    }
    if (v85 >= *(void *)(v83 + 16)) {
      goto LABEL_74;
    }
    unint64_t v98 = v83 + v92;
    uint64_t result = sub_1003B8CE8(v97, v98 + v94);
    if (v87 >= *(void *)(v83 + 16)) {
      goto LABEL_75;
    }
    uint64_t v90 = (uint64_t)v185;
    uint64_t result = sub_1003B8CE8((uint64_t)v185, v98 + v95);
    uint64_t v88 = v90;
    uint64_t v89 = (uint64_t)v186;
LABEL_15:
    ++v85;
    --v87;
    if (v86 == v85) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_1003A8CAC(char a1)
{
  int v1 = a1 & 1;
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100031648(&qword_10062C980);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  char v7 = sub_1003A7594(v1, (uint64_t)v4);
  uint64_t result = sub_1003B82A4((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
  if (v7)
  {
    v6(v4, 1, 1, v5);
    if (v1)
    {
      char v10 = sub_1003A7594(1, (uint64_t)v4);
      uint64_t result = sub_1003B82A4((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    else
    {
      int v9 = sub_1003A7594(0, (uint64_t)v4);
      uint64_t result = sub_1003B82A4((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v9 & 1) == 0) {
        return result;
      }
    }
    sub_1003A9588(0xD000000000000018, 0x8000000100535770);
    return sub_1003A5E48();
  }
  return result;
}

uint64_t sub_1003A8E78(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(void **)(a1 + *(int *)(v4 + 28));
  id v8 = [v7 sourceIdentifier];
  uint64_t v9 = sub_1004CDB50();
  uint64_t v11 = v10;
  if (v9 == sub_1004CDB50() && v11 == v12)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v14 = sub_1004CF890();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_10:
    sub_1003B8D70(a1, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_11;
  }
  if (![v7 isContainer])
  {
    sub_1003B8D70(a1, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
LABEL_14:
    char v17 = 0;
    goto LABEL_12;
  }
  unsigned __int8 v15 = [v7 canBeRestored];
  sub_1003B8D70(a1, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  if ((v15 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v16 = *(uint64_t (**)(char *))(v1
                                         + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_allowedItemsFilter);
  swift_retain();
  char v17 = v16(v6);
  swift_release();
LABEL_12:
  sub_1003B82A4((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  return v17 & 1;
}

uint64_t sub_1003A907C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v46[1] = a3;
  uint64_t v4 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v46[0] = (uint64_t)v46 - v12;
  __chkstk_darwin(v13);
  unsigned __int8 v15 = (char *)v46 - v14;
  uint64_t v16 = swift_projectBox();
  uint64_t v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v19 = *(void *)(a1 + v18);
  v51[3] = &type metadata for DOCBrowserHistoryItem.SearchContext;
  v51[0] = v19;
  swift_beginAccess();
  uint64_t v20 = *(int *)(v7 + 36);
  uint64_t v48 = v16;
  uint64_t v21 = v16 + v20;
  swift_bridgeObjectRetain();
  sub_1000AADA0((uint64_t)v51, v21, &qword_10062BA60);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v18) = _swiftEmptyArrayStorage;
  sub_1000335A8(a1, (uint64_t)v6, &qword_100632BA0);
  uint64_t v47 = v8;
  uint64_t v22 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100049B74((uint64_t)v6, &qword_100632BA0);
  }
  else
  {
    sub_1003B843C((uint64_t)v6, (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v23 = v46[0];
    sub_1003B8D70((uint64_t)v15, v46[0], type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v24 = *(int *)(v17 + 20);
    unint64_t v25 = *(void *)(a1 + v24);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_100237EB0(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    if (v27 >= v26 >> 1) {
      unint64_t v25 = sub_100237EB0(v26 > 1, v27 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v27 + 1;
    sub_1003B843C(v23, v25+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v27, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(a1 + v24) = v25;
    sub_1003B82A4((uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  }
  uint64_t v49 = 0x203A676E69646461;
  unint64_t v50 = 0xE800000000000000;
  uint64_t v28 = v48;
  swift_beginAccess();
  sub_1003B8D70(v28, (uint64_t)v10, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v29 = v22;
  uint64_t v30 = *(void **)&v10[*(int *)(v22 + 20)];
  uint64_t v31 = *(void **)&v10[*(int *)(v22 + 32)];
  id v32 = v30;
  id v33 = v31;
  sub_1003B82A4((uint64_t)v10, type metadata accessor for DOCBrowserHistoryItem);
  id v34 = sub_10033F3C8();
  if (v35 != 255)
  {
    uint64_t v36 = v34;
    if (v35 == 2)
    {
      id v37 = [v33 displayName];
      uint64_t v38 = sub_1004CDB50();
      uint64_t v40 = v39;

      sub_100343450(v36, 2u);
      goto LABEL_15;
    }
    sub_100343450(v34, v35);
  }
  id v41 = [v32 displayName];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v38 = sub_1004CDB50();
    uint64_t v40 = v43;
  }
  else
  {

    uint64_t v38 = 0;
    uint64_t v40 = (void *)0xE000000000000000;
  }
LABEL_15:
  v52._uint64_t countAndFlagsBits = v38;
  v52._object = v40;
  sub_1004CDCD0(v52);
  swift_bridgeObjectRelease();
  sub_1003A9588(v49, v50);
  swift_bridgeObjectRelease();
  sub_100049B74(a1, &qword_100632BA0);
  uint64_t v44 = v48;
  swift_beginAccess();
  sub_1003B8D70(v44, a1, type metadata accessor for DOCBrowserHistoryItem);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v29);
}

uint64_t sub_1003A9588(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1004CC770();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_shortDebugID);
  unint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_shortDebugID + 8);
  swift_bridgeObjectRetain();
  sub_1004CC6F0();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1004CC760();
  os_log_type_t v12 = sub_1004CE340();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = v5;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v17 = a1;
    uint64_t v20 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100187CC4(v10, v9, &v20);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100187CC4(v17, a2, &v20);
    sub_1004CF1F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[History:%s] %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1003A9810()
{
  uint64_t v1 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v7);
  unint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v10 - 8);
  os_log_type_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = v0;
  sub_1004CBF20();
  sub_1003B8D70((uint64_t)v9, (uint64_t)v6, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1003B82A4((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  sub_1000335A8((uint64_t)v6, (uint64_t)v12, &qword_100632BA0);
  sub_1003B82A4((uint64_t)v6, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_100049B74((uint64_t)v12, &qword_100632BA0);
  }
  sub_1003B843C((uint64_t)v12, (uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000335A8((uint64_t)&v16[*(int *)(v13 + 36)], (uint64_t)v21, &qword_10062BA60);
  if (v22)
  {
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_100031648(&qword_10062C980);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 1, 1, v18);
      char v19 = sub_1003A7594(0, (uint64_t)v3);
      sub_1003B82A4((uint64_t)v3, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if (v19)
      {
        sub_1003A9588(0xD000000000000018, 0x8000000100535770);
        sub_1003A5E48();
      }
    }
  }
  else
  {
    sub_100049B74((uint64_t)v21, &qword_10062BA60);
  }
  return sub_1003B82A4((uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
}

void sub_1003A9C08(unint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_ignoreExternalUpdates)) {
    return;
  }
  unint64_t v11 = a1 >> 62;
  id v33 = a2;
  if (a2) {
    goto LABEL_9;
  }
  if (v11) {
    goto LABEL_33;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_34;
  }
LABEL_5:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v13 = (id)sub_1004CF500();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v13 = *(id *)(a1 + 32);
  }
  id v33 = v13;
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v11)
  {
    while (1)
    {
      id v31 = a2;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1004CF6D0();
      if (!v15) {
        goto LABEL_36;
      }
LABEL_11:
      unint64_t v17 = v15 - 1;
      if (__OFSUB__(v15, 1)) {
        break;
      }
      if ((a1 & 0xC000000000000001) != 0) {
        goto LABEL_28;
      }
      if ((v17 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (v17 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_30;
      }
      id v18 = *(id *)(a1 + 8 * v17 + 32);
LABEL_16:
      a2 = v18;
      swift_bridgeObjectRelease();
      if (v11)
      {
        swift_bridgeObjectRetain();
        id v21 = a2;
        uint64_t v19 = sub_1004CF6D0();
      }
      else
      {
        uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        id v20 = a2;
      }
      if (!v19) {
        goto LABEL_31;
      }
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      unint64_t v34 = a1;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (a1 & 0x8000000000000000) != 0
        || (a1 & 0x4000000000000000) != 0)
      {
        a1 = sub_10038478C(a1);
        unint64_t v34 = a1;
      }
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23)
      {
        uint64_t v24 = v23 - 1;
        unint64_t v25 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v24 + 0x20);
        *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
        sub_1004CDE50();

        unint64_t v26 = v33;
        unint64_t v27 = v34;
        uint64_t v28 = &v10[v8[9]];
        *(_OWORD *)uint64_t v28 = 0u;
        *((_OWORD *)v28 + 1) = 0u;
        id v29 = v26;
        id v30 = a3;
        _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
        *(void *)&v10[v8[5]] = a2;
        *(void *)&v10[v8[6]] = v27;
        *(void *)&v10[v8[7]] = v33;
        *(void *)&v10[v8[8]] = v30;
        sub_1003A9F28((uint64_t)v10);

        sub_1003B82A4((uint64_t)v10, type metadata accessor for DOCBrowserHistoryItem);
        return;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      swift_bridgeObjectRetain();
      if (sub_1004CF6D0()) {
        goto LABEL_5;
      }
LABEL_34:
      swift_bridgeObjectRelease();
      id v33 = 0;
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v11) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_28:
    id v18 = (id)sub_1004CF500();
    goto LABEL_16;
  }
LABEL_10:
  uint64_t v15 = *(void *)(v14 + 16);
  id v16 = a2;
  swift_bridgeObjectRetain();
  if (v15) {
    goto LABEL_11;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  id v32 = v33;
}

void sub_1003A9F28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v25 + 64);
  __chkstk_darwin(v4);
  uint64_t v6 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_ignoreExternalUpdates) & 1) == 0)
  {
    uint64_t v15 = *(int *)(v4 + 20);
    uint64_t v24 = a1;
    id v16 = *(id *)(a1 + v15);
    sub_1004CBF20();
    sub_1003B8D70((uint64_t)v11, (uint64_t)v8, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1003B82A4((uint64_t)v11, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    sub_1000335A8((uint64_t)v8, (uint64_t)v14, &qword_100632BA0);
    sub_1003B82A4((uint64_t)v8, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v4) == 1)
    {
      sub_100049B74((uint64_t)v14, &qword_100632BA0);

      uint64_t v17 = v24;
    }
    else
    {
      id v18 = *(id *)&v14[*(int *)(v4 + 20)];
      sub_1003B82A4((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
      sub_1000333C8(0, &qword_100628830);
      id v19 = v16;
      char v20 = sub_1004CEF10();

      uint64_t v17 = v24;
      if (v20) {
        return;
      }
    }
    if (sub_1003A8E78(v17))
    {
      sub_1003B8D70(v17, (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
      unint64_t v21 = (*(unsigned __int8 *)(v25 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v2;
      sub_1003B843C((uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for DOCBrowserHistoryItem);
      id v23 = v2;
      sub_1003A5E48();
      swift_release();
    }
  }
}

uint64_t sub_1003AA2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v35[1] = a2;
  uint64_t v5 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v35 - v13;
  uint64_t v15 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v16 = *(int *)(v15 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v16) = _swiftEmptyArrayStorage;
  sub_1000335A8(a1, (uint64_t)v7, &qword_100632BA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100049B74((uint64_t)v7, &qword_100632BA0);
  }
  else
  {
    sub_1003B843C((uint64_t)v7, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
    sub_1003B8D70((uint64_t)v14, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v17 = *(int *)(v15 + 20);
    unint64_t v18 = *(void *)(a1 + v17);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v18 = sub_100237EB0(0, *(void *)(v18 + 16) + 1, 1, v18);
    }
    unint64_t v20 = *(void *)(v18 + 16);
    unint64_t v19 = *(void *)(v18 + 24);
    if (v20 >= v19 >> 1) {
      unint64_t v18 = sub_100237EB0(v19 > 1, v20 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v20 + 1;
    sub_1003B843C((uint64_t)v12, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v20, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(a1 + v17) = v18;
    sub_1003B82A4((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  }
  uint64_t v36 = 0x203A676E69646461;
  unint64_t v37 = 0xE800000000000000;
  unint64_t v21 = *(void **)(a3 + *(int *)(v8 + 32));
  id v22 = *(id *)(a3 + *(int *)(v8 + 20));
  id v23 = v21;
  id v24 = sub_10033F3C8();
  if (v25 != 255)
  {
    unint64_t v26 = v24;
    if (v25 == 2)
    {
      id v27 = [v23 displayName];
      uint64_t v28 = sub_1004CDB50();
      id v30 = v29;

      sub_100343450(v26, 2u);
      goto LABEL_15;
    }
    sub_100343450(v24, v25);
  }
  id v31 = [v22 displayName];
  if (v31)
  {
    id v32 = v31;
    uint64_t v28 = sub_1004CDB50();
    id v30 = v33;
  }
  else
  {

    uint64_t v28 = 0;
    id v30 = (void *)0xE000000000000000;
  }
LABEL_15:
  v38._uint64_t countAndFlagsBits = v28;
  v38._object = v30;
  sub_1004CDCD0(v38);
  swift_bridgeObjectRelease();
  sub_1003A9588(v36, v37);
  swift_bridgeObjectRelease();
  sub_100049B74(a1, &qword_100632BA0);
  sub_1003B8D70(a3, a1, type metadata accessor for DOCBrowserHistoryItem);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
}

void sub_1003AA6E8(uint64_t a1, uint64_t a2)
{
  v3[4] = a1;
  v3[5] = a2;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_1003A422C;
  v3[3] = &unk_1005D2018;
  uint64_t v2 = _Block_copy(v3);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v2);
}

uint64_t sub_1003AA790(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int64_t a5)
{
  int64_t v143 = a5;
  uint64_t v142 = a4;
  id v141 = a3;
  uint64_t v129 = a2;
  uint64_t v146 = a1;
  uint64_t v128 = sub_1004CD860();
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v126 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1004CD870();
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v121 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v137 = (dispatch_group_t)sub_1004CE620();
  Class isa = v137[-1].isa;
  __chkstk_darwin(v137);
  uint64_t v135 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_1004CE5F0();
  __chkstk_darwin(v130);
  unint64_t v131 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1004CD8C0();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v132 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v119 = *((void *)v10 - 1);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100031648(&qword_100632BA0);
  uint64_t v139 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v139 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v138 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1004CADE0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  uint64_t v133 = v19;
  *(void *)(v19 + 16) = 0;
  uint64_t v140 = (uint64_t *)(v19 + 16);
  _s14RecentsAvocado21DOCBrowserHistoryItemV13historyNodeID10Foundation4UUIDVvpfi_0();
  sub_1004CAD90();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v20 = sub_100030CB4(6);
  uint64_t v145 = v21;
  unint64_t v134 = v22;
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  unsigned __int8 v25 = (void *)swift_allocObject();
  unint64_t v26 = v141;
  uint64_t v27 = v142;
  void v25[2] = v141;
  v25[3] = v27;
  void v25[4] = v143;
  *(void *)&long long v153 = 0;
  *((void *)&v153 + 1) = 0xE000000000000000;
  id v28 = v26;
  swift_retain();
  sub_1004CF4D0(29);
  swift_bridgeObjectRelease();
  *(void *)&long long v153 = 91;
  *((void *)&v153 + 1) = 0xE100000000000000;
  v157._uint64_t countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v157);
  swift_bridgeObjectRelease();
  v158._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v158._object = (void *)0x8000000100535580;
  sub_1004CDCD0(v158);
  id v29 = v144;
  sub_1003A9588(v153, *((unint64_t *)&v153 + 1));
  swift_bridgeObjectRelease();
  uint64_t v30 = (uint64_t)v138;
  sub_1000335A8(v146, (uint64_t)v138, &qword_100632BA0);
  unint64_t v31 = (*(unsigned __int8 *)(v139 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  unint64_t v32 = (v14 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v33 = (void *)swift_allocObject();
  _OWORD v33[2] = v29;
  void v33[3] = v20;
  uint64_t v146 = v20;
  unint64_t v34 = v134;
  id v33[4] = v145;
  v33[5] = v34;
  v33[6] = v24;
  v33[7] = sub_1003B7C5C;
  v33[8] = v25;
  sub_100031790(v30, (uint64_t)v33 + v31, &qword_100632BA0);
  *(void *)((char *)v33 + v32) = v133;
  uint64_t v35 = v24;
  id v36 = v29;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1003A5E48();
  swift_release();
  unint64_t v37 = v140;
  swift_beginAccess();
  uint64_t v38 = *v37;
  if (!*v37)
  {
    *(void *)&long long v153 = 0;
    *((void *)&v153 + 1) = 0xE000000000000000;
    sub_1004CF4D0(51);
    v161._uint64_t countAndFlagsBits = 91;
    v161._object = (void *)0xE100000000000000;
    sub_1004CDCD0(v161);
    v162._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v162);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v163._uint64_t countAndFlagsBits = 0xD000000000000030;
    v163._object = (void *)0x80000001005355A0;
    sub_1004CDCD0(v163);
    sub_1003A9588(v153, *((unint64_t *)&v153 + 1));
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  if (!*(void *)(v38 + 16))
  {
    *(void *)&long long v153 = 0;
    *((void *)&v153 + 1) = 0xE000000000000000;
    sub_1004CF4D0(40);
    swift_bridgeObjectRelease();
    *(void *)&long long v153 = 91;
    *((void *)&v153 + 1) = 0xE100000000000000;
    v164._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v164);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v165._uint64_t countAndFlagsBits = 0xD000000000000025;
    v165._object = (void *)0x80000001005355E0;
    sub_1004CDCD0(v165);
    sub_1003A9588(v153, *((unint64_t *)&v153 + 1));
    swift_bridgeObjectRelease();
    sub_1003A5E48();
    swift_release();
    return swift_release();
  }
  *(void *)&long long v153 = 0;
  *((void *)&v153 + 1) = 0xE000000000000000;
  uint64_t v142 = v38;
  swift_bridgeObjectRetain();
  sub_1004CF4D0(27);
  swift_bridgeObjectRelease();
  *(void *)&long long v153 = 91;
  *((void *)&v153 + 1) = 0xE100000000000000;
  uint64_t v39 = v146;
  v159._uint64_t countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v159);
  swift_bridgeObjectRelease();
  v160._uint64_t countAndFlagsBits = 0xD000000000000018;
  v160._object = (void *)0x8000000100535610;
  sub_1004CDCD0(v160);
  id v141 = v36;
  sub_1003A9588(v153, *((unint64_t *)&v153 + 1));
  swift_bridgeObjectRelease();
  *(void *)&long long v153 = _swiftEmptyArrayStorage;
  uint64_t v40 = *(void *)(v142 + 16);
  uint64_t v118 = v25;
  uint64_t v120 = v35;
  if (v40)
  {
    id v144 = (id)(v142 + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80)));
    int64_t v143 = *(void *)(v119 + 72);
    swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    do
    {
      sub_1003B8D70((uint64_t)v144 + v143 * v41, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
      *(void *)&v151[0] = _swiftEmptyArrayStorage;
      id v44 = *(id *)&v12[v10[5]];
      sub_1004CDE00();
      if (*(void *)(*(void *)&v151[0] + 16) >= *(void *)(*(void *)&v151[0] + 24) >> 1) {
        sub_1004CDE60();
      }
      sub_1004CDF40();
      sub_1004CDE50();
      uint64_t v45 = sub_10004AE38(*(void *)&v12[v10[6]]);
      sub_100108BD4((uint64_t)v45);
      id v46 = *(id *)&v12[v10[7]];
      sub_1004CDE00();
      if (*(void *)(*(void *)&v151[0] + 16) >= *(void *)(*(void *)&v151[0] + 24) >> 1) {
        sub_1004CDE60();
      }
      sub_1004CDF40();
      sub_1004CDE50();
      uint64_t v47 = *(void *)&v151[0];
      *(void *)&v149[0] = _swiftEmptyArrayStorage;
      uint64_t v48 = *(void *)(*(void *)&v151[0] + 16);
      if (v48)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t i = 0; i != v48; ++i)
        {
          unint64_t v50 = *(void **)(v47 + 8 * i + 32);
          if (v50)
          {
            id v51 = v50;
            sub_1004CDE00();
            if (*(void *)((*(void *)&v149[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v149[0] & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
              sub_1004CDE60();
            sub_1004CDF40();
            sub_1004CDE50();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v42 = *(void **)&v149[0];
        uint64_t v39 = v146;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = _swiftEmptyArrayStorage;
      }
      ++v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1003B82A4((uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
      sub_1001080E4((unint64_t)v42);
      uint64_t v43 = v145;
    }
    while (v41 != v40);
    swift_bridgeObjectRelease_n();
    unint64_t v53 = v153;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v53 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v43 = v145;
  }
  id v54 = v134;
  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v55 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v55)
    {
LABEL_25:
      *(void *)&long long v153 = _swiftEmptyArrayStorage;
      uint64_t result = sub_1001889E0(0, v55 & ~(v55 >> 63), 0);
      if (v55 < 0) {
        goto LABEL_67;
      }
      uint64_t v56 = 0;
      char v57 = (void *)v153;
      id v144 = (id)v53;
      do
      {
        id v58 = *(id *)(v53 + 8 * v56 + 32);
        id v59 = objc_msgSend(v58, "fileProviderItem", v118);
        if (v59)
        {
          id v60 = v59;
          unint64_t v61 = sub_1003B8150();
          unint64_t v62 = sub_1003B81A4();
          uint64_t v63 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
          id v54 = v60;
        }
        else
        {
          id v64 = [v58 representedTag];
          if (v64)
          {
            uint64_t v65 = v64;
            id v66 = v58;
            id v54 = (id)FPTagFromDOCTag();

            unint64_t v61 = sub_1003B80A8();
            unint64_t v62 = sub_1003B80FC();
            uint64_t v63 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
          }
          else
          {
            unint64_t v61 = sub_1003B7EB0();
            unint64_t v62 = sub_1003B7F04();
            uint64_t v63 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
          }
        }
        *(void *)&long long v153 = v57;
        unint64_t v68 = v57[2];
        unint64_t v67 = v57[3];
        if (v68 >= v67 >> 1)
        {
          sub_1001889E0(v67 > 1, v68 + 1, 1);
          char v57 = (void *)v153;
        }
        ++v56;
        v57[2] = v68 + 1;
        uint64_t v69 = &v57[7 * v68];
        v69[4] = v58;
        v69[5] = v58;
        v69[6] = v54;
        v69[8] = v63;
        v69[9] = v61;
        v69[10] = v62;
        uint64_t v39 = v146;
        unint64_t v53 = (unint64_t)v144;
      }
      while (v55 != v56);
      swift_bridgeObjectRelease();
      uint64_t v43 = v145;
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease();
  char v57 = _swiftEmptyArrayStorage;
LABEL_38:
  uint64_t v70 = swift_allocObject();
  uint64_t v71 = sub_100031AB4((uint64_t)v57);
  swift_bridgeObjectRelease();
  uint64_t v119 = v70;
  *(void *)(v70 + 16) = v71;
  uint64_t v72 = v70 + 16;
  *(void *)&long long v153 = &_swiftEmptyDictionarySingleton;
  uint64_t v73 = v129;
  if (v129)
  {
    unint64_t v74 = __chkstk_darwin(v129);
    *(&v118 - 2) = &v153;
    sub_1003B7198(v74, (void (*)(id, id))sub_1003B80A0);
  }
  __chkstk_darwin(v73);
  *(&v118 - 2) = (void *)v72;
  uint64_t v129 = v75;
  sub_1003B7484(v75, (void (*)(unsigned char *, unsigned char *))sub_1003B7F58);
  *(void *)&long long v153 = 0;
  *((void *)&v153 + 1) = 0xE000000000000000;
  sub_1004CF4D0(26);
  swift_bridgeObjectRelease();
  *(void *)&long long v153 = 91;
  *((void *)&v153 + 1) = 0xE100000000000000;
  v166._uint64_t countAndFlagsBits = sub_1004CDBC0();
  sub_1004CDCD0(v166);
  swift_bridgeObjectRelease();
  v167._object = (void *)0x8000000100535630;
  v167._uint64_t countAndFlagsBits = 0xD000000000000017;
  sub_1004CDCD0(v167);
  sub_1003A9588(v153, *((unint64_t *)&v153 + 1));
  swift_bridgeObjectRelease();
  uint64_t v76 = sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  sub_1004CD880();
  *(void *)&long long v153 = _swiftEmptyArrayStorage;
  sub_1003B8F74((unint64_t *)&qword_10062CDB0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100031648((uint64_t *)&unk_100626B80);
  sub_10005B6A0((unint64_t *)&qword_10062CDC0, (uint64_t *)&unk_100626B80);
  sub_1004CF330();
  (*((void (**)(char *, void, dispatch_group_t))isa + 13))(v135, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v137);
  unint64_t v131 = (char *)v76;
  uint64_t v138 = (char *)sub_1004CE670();
  uint64_t v77 = swift_allocObject();
  unint64_t v78 = sub_100021828((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v140 = (uint64_t *)v77;
  *(void *)(v77 + 16) = v78;
  uint64_t v139 = swift_allocObject();
  *(void *)(v139 + 16) = _swiftEmptyArrayStorage;
  dispatch_group_t v137 = dispatch_group_create();
  uint64_t v79 = *(void *)v72;
  uint64_t v80 = *(void *)(*(void *)v72 + 56);
  uint64_t v142 = *(void *)v72 + 56;
  uint64_t v81 = 1 << *(unsigned char *)(v79 + 32);
  uint64_t v82 = -1;
  if (v81 < 64) {
    uint64_t v82 = ~(-1 << v81);
  }
  unint64_t v83 = v82 & v80;
  Class isa = (Class)OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_itemManager;
  int64_t v143 = (unint64_t)(v81 + 63) >> 6;
  uint64_t v135 = (char *)v148;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v84 = 0;
  unint64_t v85 = v140;
  uint64_t v86 = v139;
  while (1)
  {
    if (v83)
    {
      unint64_t v87 = __clz(__rbit64(v83));
      v83 &= v83 - 1;
      unint64_t v88 = v87 | (v84 << 6);
      goto LABEL_60;
    }
    int64_t v89 = v84 + 1;
    if (__OFADD__(v84, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v89 >= v143) {
      goto LABEL_63;
    }
    unint64_t v90 = *(void *)(v142 + 8 * v89);
    ++v84;
    if (!v90)
    {
      int64_t v84 = v89 + 1;
      if (v89 + 1 >= v143) {
        goto LABEL_63;
      }
      unint64_t v90 = *(void *)(v142 + 8 * v84);
      if (!v90)
      {
        int64_t v84 = v89 + 2;
        if (v89 + 2 >= v143) {
          goto LABEL_63;
        }
        unint64_t v90 = *(void *)(v142 + 8 * v84);
        if (!v90) {
          break;
        }
      }
    }
LABEL_59:
    unint64_t v83 = (v90 - 1) & v90;
    unint64_t v88 = __clz(__rbit64(v90)) + (v84 << 6);
LABEL_60:
    sub_10003301C(*(void *)(v79 + 48) + 56 * v88, (uint64_t)&v153);
    v151[0] = v153;
    v151[1] = v154;
    v151[2] = v155;
    uint64_t v152 = v156;
    id v92 = [(id)v153 fileProviderItem];
    if (v92)
    {
      uint64_t v93 = v92;
      id v94 = [v92 itemID];

      if (v94)
      {
        dispatch_group_t v95 = v137;
        dispatch_group_enter(v137);
        id v144 = *(id *)((char *)isa + (void)v141);
        sub_10003301C((uint64_t)v151, (uint64_t)v149);
        uint64_t v96 = swift_allocObject();
        uint64_t v97 = v79;
        id v98 = v138;
        *(void *)(v96 + 16) = v138;
        *(void *)(v96 + 24) = v85;
        long long v99 = v149[1];
        *(_OWORD *)(v96 + 32) = v149[0];
        *(_OWORD *)(v96 + 48) = v99;
        *(_OWORD *)(v96 + 64) = v149[2];
        *(void *)(v96 + 80) = v150;
        *(void *)(v96 + 88) = v86;
        *(void *)(v96 + 96) = v95;
        v148[2] = sub_1003B7FC0;
        v148[3] = v96;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v148[0] = sub_100051F74;
        v148[1] = &unk_1005D1E10;
        uint64_t v100 = _Block_copy(aBlock);
        id v101 = v98;
        uint64_t v79 = v97;
        swift_retain();
        swift_retain();
        uint64_t v102 = v95;
        uint64_t v43 = v145;
        swift_release();
        [v144 fetchItemForItemID:v94 completionHandler:v100];
        uint64_t v103 = v100;
        uint64_t v39 = v146;
        _Block_release(v103);
      }
    }
    uint64_t result = sub_100033078((uint64_t)v151);
  }
  int64_t v91 = v89 + 3;
  if (v91 >= v143)
  {
LABEL_63:
    swift_release();
    uint64_t v104 = v122;
    unint64_t v105 = v121;
    uint64_t v106 = v123;
    (*(void (**)(char *, void, uint64_t))(v122 + 104))(v121, enum case for DispatchQoS.QoSClass.userInitiated(_:), v123);
    uint64_t v107 = (void *)sub_1004CE680();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v106);
    uint64_t v108 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v109 = (void *)swift_allocObject();
    v109[2] = v108;
    v109[3] = v39;
    uint64_t v110 = v134;
    v109[4] = v43;
    v109[5] = v110;
    uint64_t v111 = v119;
    v109[6] = v120;
    v109[7] = v111;
    uint64_t v112 = v140;
    v109[8] = v129;
    v109[9] = v112;
    v109[10] = v139;
    *(void *)&long long v155 = sub_1003B8068;
    *((void *)&v155 + 1) = v109;
    *(void *)&long long v153 = _NSConcreteStackBlock;
    *((void *)&v153 + 1) = 1107296256;
    *(void *)&long long v154 = sub_1003A422C;
    *((void *)&v154 + 1) = &unk_1005D1E88;
    uint64_t v113 = _Block_copy(&v153);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    char v114 = v132;
    sub_1004CD880();
    *(void *)&v151[0] = _swiftEmptyArrayStorage;
    sub_1003B8F74((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    uint64_t v115 = v126;
    uint64_t v116 = v128;
    sub_1004CF330();
    dispatch_group_t v117 = v137;
    sub_1004CE5E0();
    _Block_release(v113);
    swift_release();

    (*(void (**)(char *, uint64_t))(v127 + 8))(v115, v116);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v114, v125);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  unint64_t v90 = *(void *)(v142 + 8 * v91);
  if (v90)
  {
    int64_t v84 = v91;
    goto LABEL_59;
  }
  while (1)
  {
    int64_t v84 = v91 + 1;
    if (__OFADD__(v91, 1)) {
      break;
    }
    if (v84 >= v143) {
      goto LABEL_63;
    }
    unint64_t v90 = *(void *)(v142 + 8 * v84);
    ++v91;
    if (v90) {
      goto LABEL_59;
    }
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

BOOL sub_1003ABE68()
{
  uint64_t v23 = sub_1004CD900();
  uint64_t v0 = *(void *)(v23 - 8);
  uint64_t v1 = __chkstk_darwin(v23);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v22 - v4;
  uint64_t v6 = sub_1004CD870();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
  uint64_t v14 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.userInitiated(_:), v6);
  uint64_t v15 = (void *)sub_1004CE680();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  int64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  uint64_t v17 = v13;
  sub_1003AA790((uint64_t)v12, 0, v15, (uint64_t)sub_1003B9654, v16);

  swift_release();
  sub_100049B74((uint64_t)v12, &qword_100632BA0);
  sub_1004CD8E0();
  sub_1004CD970();
  unint64_t v18 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v19 = v3;
  uint64_t v20 = v23;
  v18(v19, v23);
  sub_1004CE870();
  v18(v5, v20);
  LOBYTE(v7) = sub_1004CD850();

  return (v7 & 1) == 0;
}

BOOL sub_1003AC1A8(uint64_t a1)
{
  uint64_t v25 = sub_1004CD900();
  uint64_t v2 = *(void *)(v25 - 8);
  uint64_t v3 = __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1004CD870();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
  sub_1003B8D70(a1, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v16 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 0, 1, v16);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.userInitiated(_:), v8);
  uint64_t v17 = (void *)sub_1004CE680();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  int64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v15;
  uint64_t v19 = v15;
  sub_1003AA790((uint64_t)v14, 0, v17, (uint64_t)sub_1003B8D4C, v18);

  swift_release();
  sub_100049B74((uint64_t)v14, &qword_100632BA0);
  sub_1004CD8E0();
  sub_1004CD970();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v21 = v5;
  uint64_t v22 = v25;
  v20(v21, v25);
  sub_1004CE870();
  v20(v7, v22);
  LOBYTE(v9) = sub_1004CD850();

  return (v9 & 1) == 0;
}

void sub_1003AC50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + *(int *)(__chkstk_darwin(v7 - 8) + 28));
  id v12 = [v11 fileProviderItem];
  if (!v12) {
    goto LABEL_4;
  }
  uint64_t v13 = v12;
  if ([v11 isRoot])
  {

LABEL_4:
    sub_1003B8D70(a1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    sub_1003B843C((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v30 = sub_1003B861C;
    uint64_t v31 = v15;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    id v28 = sub_1003A422C;
    id v29 = &unk_1005D2108;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v16);
    return;
  }
  id v25 = *(id *)&v3[OBJC_IVAR____TtC14RecentsAvocado32_DOCBrowserHistoryDataSourceBase_itemManager];
  id v17 = [v13 itemID];
  sub_1003B8D70(a1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  sub_1003B843C((uint64_t)v10, v20 + v18, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(v20 + v19) = v3;
  uint64_t v21 = (void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v21 = a2;
  v21[1] = a3;
  uint64_t v30 = sub_1003B87D4;
  uint64_t v31 = v20;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  id v28 = sub_1004575EC;
  id v29 = &unk_1005D2158;
  uint64_t v22 = _Block_copy(&aBlock);
  uint64_t v23 = v3;
  swift_retain();
  swift_release();
  [v25 fetchParentsForItemID:v17 recursively:1 completionHandler:v22];
  _Block_release(v22);
}

uint64_t sub_1003AC858(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a1;
  unint64_t v34 = a4;
  uint64_t v31 = a3;
  uint64_t v6 = sub_1004CD860();
  uint64_t v39 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CD8C0();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1004CD870();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000333C8(0, (unint64_t *)&qword_100626B70);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.userInitiated(_:), v16);
  uint64_t v32 = sub_1004CE680();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_1003B8D70(v31, (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1003B843C((uint64_t)v15, v23 + v20, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v24 = v34;
  *(void *)(v23 + v21) = v33;
  *(void *)(v23 + v22) = v24;
  id v25 = (void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v36;
  void *v25 = v35;
  v25[1] = v26;
  aBlock[4] = sub_1003B89F0;
  void aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D21A8;
  uint64_t v27 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v28 = v24;
  swift_retain();
  sub_1004CD880();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_1003B8F74((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  id v29 = (void *)v32;
  sub_1004CE650();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
  return swift_release();
}

uint64_t sub_1003ACCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a3;
  uint64_t v9 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocBox();
  uint64_t v15 = v14;
  sub_1003B8D70(a1, v14, type metadata accessor for DOCBrowserHistoryItem);
  if (a2)
  {
    sub_1003B8D70(a1, (uint64_t)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = swift_allocObject();
    sub_1003B843C((uint64_t)v12, v18 + v16, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(v18 + v17) = a2;
    *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v13;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1003B8C30;
    *(void *)(v19 + 24) = v18;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1003A5E48();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  sub_1003B8D70(v15, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  sub_1003AC1A8((uint64_t)v12);
  sub_1003B82A4((uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a5;
  void v20[4] = v13;
  aBlock[4] = sub_1003B8AD8;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D21F8;
  unint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
  return swift_release();
}

uint64_t sub_1003ACFEC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  unint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = swift_projectBox();
  if ((_s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0() & 1) == 0)
  {
LABEL_19:
    sub_1003B8D70(a1, a3, type metadata accessor for DOCBrowserHistoryItem);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  }
  if (a2 >> 62) {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v16 = _swiftEmptyArrayStorage;
LABEL_18:
    sub_1003AD328(0, 0, (unint64_t)v16, (uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1003B8CE8((uint64_t)v9, v10);
    swift_beginAccess();
    a1 = v10;
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1004CF590();
    if (v11 < 0) {
      break;
    }
    unint64_t v17 = v9;
    unint64_t v18 = v10;
    unint64_t v19 = a1;
    unint64_t v20 = v7;
    uint64_t v21 = v6;
    uint64_t v22 = a3;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = v11 - 1;
      unint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v9 = &qword_100627EE0;
      while (v13 != 0x7FFFFFFFFFFFFFFFLL)
      {
        sub_1004CF500();
        sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
        a3 = sub_1004CED20();
        swift_unknownObjectRelease();
        sub_1004CF560();
        uint64_t v6 = v23[2];
        sub_1004CF5A0();
        sub_1004CF5B0();
        sub_1004CF570();
        if (--v13 == -1) {
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    else
    {
      unint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      a1 = v11 - 1;
      unint64_t v7 = a2 + 24;
      uint64_t v9 = (uint64_t *)FPItem_ptr;
      while (a1 < v10)
      {
        uint64_t v14 = *(void **)(v7 + 8 * v11);
        sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
        id v15 = v14;
        a3 = sub_1004CED20();

        sub_1004CF560();
        uint64_t v6 = v23[2];
        sub_1004CF5A0();
        sub_1004CF5B0();
        sub_1004CF570();
        if (!--v11)
        {
LABEL_13:
          unint64_t v16 = v23;
          swift_bridgeObjectRelease();
          uint64_t v6 = v21;
          a3 = v22;
          unint64_t v7 = v20;
          uint64_t v9 = v17;
          unint64_t v10 = v18;
          goto LABEL_18;
        }
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1004CF6D0();
    if (!v11) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

void sub_1003AD328(void *a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1003B8D70(v4, a4, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)(a4 + v11);
  id v13 = v12;
  uint64_t v14 = sub_1003AED08(v12, a1, (uint64_t)a2);
  if (!v14)
  {
    __break(1u);
    goto LABEL_56;
  }
  id v15 = v14;

  *(void *)(a4 + v11) = v15;
  uint64_t v16 = v10[7];
  unint64_t v17 = *(void **)(a4 + v16);
  id v18 = v17;
  unint64_t v19 = sub_1003AED08(v17, a1, (uint64_t)a2);

  *(void *)(a4 + v16) = v19;
  id v20 = v19;

  uint64_t v21 = v10[6];
  unint64_t v22 = *(void *)(a4 + v21);
  if (!a3)
  {
    swift_bridgeObjectRetain();

    a3 = v22;
    goto LABEL_42;
  }
  if (!v19)
  {
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1004CF6D0() < 2) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 < 2)
    {
LABEL_6:

      swift_bridgeObjectRelease();
LABEL_42:
      id v43 = a2;
      swift_bridgeObjectRetain();
      id v44 = sub_1003B78EC(a3, a1, (uint64_t)a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(void *)(a4 + v21) = v44;
      return;
    }
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    id v24 = (id)sub_1004CF500();
LABEL_13:
    id v25 = v24;
    swift_bridgeObjectRelease();
    sub_1001253C0((uint64_t)v25, a3);
    uint64_t v48 = v26;
    char v28 = v27;

    if (v28)
    {

      goto LABEL_42;
    }
    sub_100031648(&qword_100628240);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1004E5710;
    *(void *)(v29 + 32) = v20;
    uint64_t v49 = v29;
    unint64_t v30 = (unint64_t)&v49;
    sub_1004CDE50();
    uint64_t v5 = v49;
    uint64_t v47 = a3 >> 62;
    if (!(a3 >> 62))
    {
      uint64_t v31 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v31 < v48)
      {
        __break(1u);
        goto LABEL_48;
      }
      id v32 = v20;
      unint64_t v30 = v31;
LABEL_17:
      if (v31 >= v48)
      {
        if ((v48 & 0x8000000000000000) == 0)
        {
          if (v47)
          {
            swift_bridgeObjectRetain();
            uint64_t v33 = sub_1004CF6D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v33 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v33 >= (uint64_t)v30)
          {
            uint64_t v46 = v5;
            if ((v30 & 0x8000000000000000) == 0)
            {
              if ((a3 & 0xC000000000000001) == 0 || v48 == v30)
              {
LABEL_30:
                if (v47)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v5 = sub_1004CF6E0();
                  uint64_t v36 = v37;
                  uint64_t v48 = v38;
                  unint64_t v30 = v39;
                  swift_bridgeObjectRelease_n();
                  if (v30) {
                    goto LABEL_35;
                  }
                }
                else
                {
                  uint64_t v5 = a3 & 0xFFFFFFFFFFFFFF8;
                  uint64_t v36 = (a3 & 0xFFFFFFFFFFFFFF8) + 32;
                  unint64_t v30 = (2 * v30) | 1;
                  if (v30)
                  {
LABEL_35:
                    uint64_t v47 = v36;
                    sub_1004CF8B0();
                    swift_unknownObjectRetain_n();
                    uint64_t v40 = (void *)swift_dynamicCastClass();
                    if (!v40)
                    {
                      swift_unknownObjectRelease();
                      uint64_t v40 = _swiftEmptyArrayStorage;
                    }
                    uint64_t v41 = v40[2];
                    swift_release();
                    if (!__OFSUB__(v30 >> 1, v48))
                    {
                      if (v41 == (v30 >> 1) - v48)
                      {
                        if (!swift_dynamicCastClass()) {
                          swift_unknownObjectRelease();
                        }
                        goto LABEL_41;
                      }
                      goto LABEL_54;
                    }
LABEL_53:
                    __break(1u);
LABEL_54:
                    swift_unknownObjectRelease();
                    uint64_t v36 = v47;
                  }
                }
                sub_1003173EC(v5, v36, v48, v30);
LABEL_41:
                swift_unknownObjectRelease();
                uint64_t v49 = v46;
                swift_bridgeObjectRetain();
                unint64_t v42 = swift_retain();
                sub_1001080E4(v42);
                swift_bridgeObjectRelease();
                swift_release();

                a3 = v49;
                goto LABEL_42;
              }
              if (v48 < v30)
              {
                sub_1000333C8(0, &qword_100628830);
                Swift::Int v34 = v48;
                do
                {
                  Swift::Int v35 = v34 + 1;
                  sub_1004CF4F0(v34);
                  Swift::Int v34 = v35;
                }
                while (v30 != v35);
                goto LABEL_30;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    goto LABEL_45;
  }
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v24 = *(id *)(v22 + 40);
    goto LABEL_13;
  }
  __break(1u);
LABEL_45:
  id v45 = v20;
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1004CF6D0();
  swift_bridgeObjectRelease();
  if ((uint64_t)v30 >= v48)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1004CF6D0();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_1003AD82C(void (*a1)(char *))
{
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_projectBox();
  swift_beginAccess();
  sub_1003B8D70(v5, (uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
  a1(v4);
  return sub_1003B82A4((uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t type metadata accessor for DOCBrowserHistoryDataSource()
{
  return self;
}

uint64_t sub_1003AD95C(uint64_t a1)
{
  uint64_t v2 = sub_100031648((uint64_t *)&unk_1006322B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100031648(&qword_100632BA0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v29[-1] - v9;
  uint64_t v11 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v29[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v29[-1] - v16;
  sub_1000335A8(a1, (uint64_t)v10, &qword_100632BA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    id v18 = &qword_100632BA0;
    unint64_t v19 = v10;
    return sub_100049B74((uint64_t)v19, v18);
  }
  sub_1003B843C((uint64_t)v10, (uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000335A8((uint64_t)&v17[*(int *)(v11 + 36)], (uint64_t)v29, &qword_10062BA60);
  if (v30)
  {
    sub_100031648((uint64_t *)&unk_100637E20);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
    }
  }
  else
  {
    sub_100049B74((uint64_t)v29, &qword_10062BA60);
    long long v31 = 0u;
    long long v32 = 0u;
    uint64_t v33 = 0;
  }
  sub_1000335A8((uint64_t)&v31, (uint64_t)v29, &qword_100637E18);
  if (v30)
  {
    id v20 = sub_100032FD8(v29, v30);
    uint64_t v21 = *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 24);
    if (!*(void *)(*(void *)(a1 + v21) + 16))
    {
      uint64_t v22 = *v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + v21) = v22;
    }
    sub_100039184((uint64_t)v29);
  }
  else
  {
    sub_100049B74((uint64_t)v29, &qword_100637E18);
  }
  if ((sub_1003ADD94(1) & 1) == 0)
  {
    type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
    sub_1003B8D70((uint64_t)v17, (uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
    sub_1002D2D7C(0, 0, (uint64_t)v4);
  }
  uint64_t v23 = *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 20);
  unint64_t v24 = *(void *)(a1 + v23);
  if (!*(void *)(v24 + 16))
  {
    __break(1u);
LABEL_20:
    uint64_t result = sub_100384ABC(v24);
    unint64_t v24 = result;
    uint64_t v26 = *(void *)(result + 16);
    if (v26) {
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v26 = *(void *)(v24 + 16);
  if (v26)
  {
LABEL_17:
    uint64_t v27 = v26 - 1;
    sub_1003B843C(v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * (v26 - 1), (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(v24 + 16) = v27;
    *(void *)(a1 + v23) = v24;
    sub_1003B843C((uint64_t)v15, (uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
    sub_1003B82A4((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    sub_1000AADA0((uint64_t)v8, a1, &qword_100632BA0);
    id v18 = &qword_100637E18;
    unint64_t v19 = (char *)&v31;
    return sub_100049B74((uint64_t)v19, v18);
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1003ADD94(char a1)
{
  if (a1)
  {
    uint64_t v2 = type metadata accessor for DOCBrowserHistoryItem(0);
    sub_1000335A8(v1 + *(int *)(v2 + 36), (uint64_t)v4, &qword_10062BA60);
    if (v5)
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
      sub_100049B74((uint64_t)v4, &qword_10062BA60);
    }
  }
  return 0;
}

uint64_t sub_1003ADE28(uint64_t a1)
{
  uint64_t v2 = sub_100031648(&qword_100632BA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - v13;
  sub_1000335A8(a1, (uint64_t)v7, &qword_100632BA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_100049B74((uint64_t)v7, &qword_100632BA0);
  }
  sub_1003B843C((uint64_t)v7, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  sub_1003B8D70((uint64_t)v14, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v23 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v16 = *(int *)(v23 + 20);
  unint64_t v17 = *(void *)(a1 + v16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v17 = sub_100237EB0(0, *(void *)(v17 + 16) + 1, 1, v17);
  }
  unint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  if (v19 >= v18 >> 1) {
    unint64_t v17 = sub_100237EB0(v18 > 1, v19 + 1, 1, v17);
  }
  *(void *)(v17 + 16) = v19 + 1;
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = sub_1003B843C((uint64_t)v12, v17 + v20 + *(void *)(v9 + 72) * v19, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(a1 + v16) = v17;
  uint64_t v21 = a1 + *(int *)(v23 + 24);
  if (*(void *)(*(void *)v21 + 16))
  {
    sub_1003B8D70(*(void *)v21 + v20, (uint64_t)v5, type metadata accessor for DOCBrowserHistoryItem);
    sub_1002D5C20(0, 1);
    sub_1003B82A4((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    return sub_1000AADA0((uint64_t)v5, a1, &qword_100632BA0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003AE138(uint64_t a1, __objc2_class *a2)
{
  uint64_t v120 = a2;
  uint64_t v3 = sub_100031648(&qword_100632BA0);
  __chkstk_darwin(v3 - 8);
  dispatch_group_t v117 = (char *)v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v102 - v6;
  __chkstk_darwin(v8);
  uint64_t v116 = (char *)v102 - v9;
  __chkstk_darwin(v10);
  uint64_t v111 = (uint64_t)v102 - v11;
  __chkstk_darwin(v12);
  uint64_t v113 = (uint64_t)v102 - v13;
  __chkstk_darwin(v14);
  uint64_t v115 = (uint64_t)v102 - v15;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)v102 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v102 - v20;
  uint64_t v22 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v110 = (uint64_t)v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v122 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v102 - v26);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v102 - v28;
  __chkstk_darwin(v30);
  uint64_t v121 = (__objc2_class *)((char *)v102 - v31);
  __chkstk_darwin(v32);
  Swift::Int v34 = (char *)v102 - v33;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v102 - v36;
  sub_1000335A8(a1, (uint64_t)v21, &qword_100632BA0);
  uint64_t v118 = v23;
  unint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v38 = v23 + 48;
  uint64_t v119 = v39;
  if (v39((uint64_t)v21, 1, v22) == 1) {
    return sub_100049B74((uint64_t)v21, &qword_100632BA0);
  }
  uint64_t v112 = v38;
  uint64_t v108 = v22;
  uint64_t v109 = v18;
  uint64_t v104 = v7;
  uint64_t v107 = v37;
  sub_1003B843C((uint64_t)v21, (uint64_t)v37, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v41 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v105 = *(int *)(v41 + 20);
  uint64_t v42 = a1;
  uint64_t v43 = *(void *)(a1 + v105);
  id v44 = (__objc2_class *)_swiftEmptyArrayStorage;
  uint64_t v123 = (__objc2_class *)_swiftEmptyArrayStorage;
  uint64_t v45 = *(void *)(v43 + 16);
  p_superclass = &OBJC_METACLASS____TtC14RecentsAvocado20DOCMultiNodeObserver.superclass;
  uint64_t v47 = OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_allowedItemsFilter;
  uint64_t v48 = v120;
  uint64_t v106 = v120;
  swift_bridgeObjectRetain();
  uint64_t v114 = v42;
  if (v45)
  {
    uint64_t v103 = (char *)v41;
    uint64_t v49 = (char *)v48 + v47;
    unint64_t v50 = (__objc2_class *)((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
    uint64_t v51 = *(void *)(v118 + 72);
    v102[1] = v43;
    uint64_t v120 = v50;
    uint64_t v52 = (uint64_t)v50 + v43;
    unint64_t v53 = (__objc2_class *)_swiftEmptyArrayStorage;
    do
    {
      sub_1003B8D70(v52, (uint64_t)v34, type metadata accessor for DOCBrowserHistoryItem);
      id v54 = *(uint64_t (**)(char *))v49;
      swift_retain();
      LOBYTE(v54) = v54(v34);
      swift_release();
      if (v54)
      {
        sub_1003B843C((uint64_t)v34, (uint64_t)v121, type metadata accessor for DOCBrowserHistoryItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100188A9C(0, (int64_t)v53->cache + 1, 1);
        }
        unint64_t v53 = v123;
        unint64_t cache = (unint64_t)v123->cache;
        unint64_t vtable = (unint64_t)v123->vtable;
        if (cache >= vtable >> 1)
        {
          sub_100188A9C(vtable > 1, cache + 1, 1);
          unint64_t v53 = v123;
        }
        v53->unint64_t cache = (void *)(cache + 1);
        sub_1003B843C((uint64_t)v121, (uint64_t)v120 + (void)v53 + cache * v51, type metadata accessor for DOCBrowserHistoryItem);
      }
      else
      {
        sub_1003B82A4((uint64_t)v34, type metadata accessor for DOCBrowserHistoryItem);
      }
      v52 += v51;
      --v45;
    }
    while (v45);
    char v57 = v123;
    uint64_t v42 = v114;
    id v44 = (__objc2_class *)_swiftEmptyArrayStorage;
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC14RecentsAvocado20DOCMultiNodeObserver + 8);
    id v58 = v106;
    uint64_t v41 = (uint64_t)v103;
  }
  else
  {
    char v57 = (__objc2_class *)_swiftEmptyArrayStorage;
    id v58 = v106;
  }
  swift_bridgeObjectRelease();

  id v59 = (char *)*(int *)(v41 + 24);
  id v60 = *(__objc2_class **)&v59[v42];
  uint64_t v123 = (__objc2_class *)_swiftEmptyArrayStorage;
  unint64_t v61 = (char *)v60->cache;
  uint64_t v120 = p_superclass[378];
  unint64_t v62 = v58;
  uint64_t v121 = v57;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v63 = v58;
  uint64_t v64 = v118;
  if (v61)
  {
    uint64_t v103 = v62;
    uint64_t v106 = v59;
    uint64_t v65 = (char *)v120 + (void)v63;
    unint64_t v66 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
    uint64_t v67 = *(void *)(v118 + 72);
    uint64_t v120 = v60;
    uint64_t v68 = (uint64_t)v60 + v66;
    uint64_t v69 = (__objc2_class *)_swiftEmptyArrayStorage;
    do
    {
      sub_1003B8D70(v68, (uint64_t)v29, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v70 = *(uint64_t (**)(char *))v65;
      swift_retain();
      char v71 = v70(v29);
      swift_release();
      if (v71)
      {
        sub_1003B843C((uint64_t)v29, (uint64_t)v122, type metadata accessor for DOCBrowserHistoryItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100188A9C(0, (int64_t)v69->cache + 1, 1);
        }
        uint64_t v69 = v123;
        unint64_t v73 = (unint64_t)v123->cache;
        unint64_t v72 = (unint64_t)v123->vtable;
        if (v73 >= v72 >> 1)
        {
          sub_100188A9C(v72 > 1, v73 + 1, 1);
          uint64_t v69 = v123;
        }
        v69->unint64_t cache = (void *)(v73 + 1);
        sub_1003B843C((uint64_t)v122, (uint64_t)v69 + v66 + v73 * v67, type metadata accessor for DOCBrowserHistoryItem);
      }
      else
      {
        sub_1003B82A4((uint64_t)v29, type metadata accessor for DOCBrowserHistoryItem);
      }
      v68 += v67;
      --v61;
    }
    while (v61);
    id v44 = v123;
    uint64_t v64 = v118;
    unint64_t v74 = v106;
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC14RecentsAvocado20DOCMultiNodeObserver + 8);
    unint64_t v62 = v103;
  }
  else
  {
    unint64_t v74 = v59;
  }
  swift_bridgeObjectRelease();

  uint64_t v123 = v44;
  uint64_t v75 = *(uint64_t (**)(char *))((char *)&p_superclass[378]->isa + (void)v62);
  uint64_t v120 = v44;
  swift_retain();
  swift_retain();
  uint64_t v76 = (uint64_t)v107;
  LOBYTE(v75) = v75(v107);
  swift_release();
  uint64_t v78 = v108;
  uint64_t v77 = (uint64_t)v109;
  uint64_t v80 = (uint64_t)v116;
  uint64_t v79 = (uint64_t)v117;
  unint64_t v81 = (unint64_t)v121;
  if (v75)
  {
    sub_1003B8D70(v76, (uint64_t)v109, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    uint64_t v83 = v77;
    uint64_t v84 = 0;
  }
  else
  {
    uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    uint64_t v83 = (uint64_t)v109;
    uint64_t v84 = 1;
  }
  uint64_t v122 = v82;
  v82(v83, v84, 1, v78);
  uint64_t v85 = v115;
  sub_1000335A8(v77, v115, &qword_100632BA0);
  if (v119(v85, 1, v78) != 1)
  {
    swift_release();
    sub_100049B74(v85, &qword_100632BA0);
    goto LABEL_41;
  }
  sub_100049B74(v85, &qword_100632BA0);
  uint64_t v86 = *(void *)(v81 + 16);
  uint64_t v79 = v76;
  if (v86)
  {
    uint64_t v76 = v113;
    sub_1003B8D70(v81+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * (v86 - 1), v113, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v87 = 0;
  }
  else
  {
    uint64_t v87 = 1;
    uint64_t v76 = v113;
  }
  v122(v76, v87, 1, v78);
  swift_release();
  unsigned int v88 = v119(v76, 1, v78);
  sub_100049B74(v76, &qword_100632BA0);
  if (v88 == 1)
  {
    uint64_t v76 = v79;
    uint64_t v79 = (uint64_t)v117;
    goto LABEL_41;
  }
  if (!*(void *)(v81 + 16))
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v76 = v79;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v79 = (uint64_t)v117;
  if ((result & 1) == 0)
  {
LABEL_52:
    uint64_t result = sub_100384ABC(v81);
    unint64_t v81 = result;
  }
  uint64_t v106 = v74;
  uint64_t v89 = *(void *)(v81 + 16);
  if (!v89)
  {
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v90 = v89 - 1;
  uint64_t v91 = v118;
  uint64_t v92 = v81
      + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))
      + *(void *)(v118 + 72) * (v89 - 1);
  unint64_t v93 = v81;
  uint64_t v94 = v110;
  sub_1003B843C(v92, v110, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(v93 + 16) = v90;
  uint64_t v64 = v91;
  uint64_t v95 = v94;
  unint64_t v81 = v93;
  uint64_t v96 = v111;
  sub_1003B843C(v95, v111, type metadata accessor for DOCBrowserHistoryItem);
  sub_100049B74(v77, &qword_100632BA0);
  v122(v96, 0, 1, v78);
  sub_100031790(v96, v77, &qword_100632BA0);
  uint64_t v80 = (uint64_t)v116;
  unint64_t v74 = v106;
LABEL_41:
  sub_1000335A8(v77, v80, &qword_100632BA0);
  if (v119(v80, 1, v78) != 1)
  {
    swift_release();
    sub_100049B74(v80, &qword_100632BA0);
    sub_1003B82A4(v76, type metadata accessor for DOCBrowserHistoryItem);
LABEL_50:
    uint64_t v99 = v114;
    sub_1000AADA0(v77, v114, &qword_100632BA0);
    uint64_t v100 = v105;
    swift_bridgeObjectRelease();
    *(void *)(v99 + v100) = v81;
    id v101 = v123;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)&v74[v99] = v101;
    return result;
  }
  sub_100049B74(v80, &qword_100632BA0);
  if (v120->cache)
  {
    uint64_t v97 = (uint64_t)v104;
    sub_1003B8D70((uint64_t)v120 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80)), (uint64_t)v104, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v98 = 1;
    uint64_t v97 = (uint64_t)v104;
  }
  v122(v97, v98, 1, v78);
  swift_release();
  if (v119(v97, 1, v78) == 1)
  {
    sub_1003B82A4(v76, type metadata accessor for DOCBrowserHistoryItem);
    sub_100049B74(v97, &qword_100632BA0);
    goto LABEL_50;
  }
  uint64_t result = sub_100049B74(v97, &qword_100632BA0);
  if (v123->cache)
  {
    sub_1003B8D70((uint64_t)v123 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80)), v79, type metadata accessor for DOCBrowserHistoryItem);
    sub_1002D5C20(0, 1);
    sub_100049B74(v77, &qword_100632BA0);
    sub_1003B82A4(v76, type metadata accessor for DOCBrowserHistoryItem);
    v122(v79, 0, 1, v78);
    sub_100031790(v79, v77, &qword_100632BA0);
    goto LABEL_50;
  }
LABEL_54:
  __break(1u);
  return result;
}

void *sub_1003AED08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (!a1) {
    return v3;
  }
  uint64_t v5 = a2;
  if (!a2)
  {
    id v9 = a1;
    if (!a3) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v24 = a1;
  id v6 = a1;
  id v7 = [v6 fileProviderItem];
  if (v7)
  {
    id v8 = v7;
    uint64_t v27 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    unint64_t v28 = sub_1003B8150();
    unint64_t v29 = sub_1003B81A4();
    id v25 = v6;
    id v26 = v8;
    if (!v5[2]) {
      goto LABEL_14;
    }
  }
  else
  {
    id v10 = [v6 representedTag];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = v6;
      id v13 = (id)FPTagFromDOCTag();
      uint64_t v27 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      unint64_t v28 = sub_1003B80A8();
      unint64_t v29 = sub_1003B80FC();

      id v25 = v12;
      id v26 = v13;
      if (!v5[2]) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v27 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      unint64_t v28 = sub_1003B7EB0();
      unint64_t v29 = sub_1003B7F04();
      id v25 = v6;
      if (!v5[2]) {
        goto LABEL_14;
      }
    }
  }
  unint64_t v14 = sub_1001DBF98((uint64_t)&v24);
  if (v15)
  {
    sub_10003301C(v5[7] + 56 * v14, (uint64_t)v30);
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v31 = 0;
  memset(v30, 0, sizeof(v30));
LABEL_15:
  sub_100033078((uint64_t)&v24);
  uint64_t v5 = *(void **)&v30[0];
  if (*(void *)&v30[0])
  {
    id v16 = *(id *)&v30[0];
    sub_100033078((uint64_t)v30);
    if (!a3) {
      goto LABEL_21;
    }
  }
  else
  {
    sub_100049B74((uint64_t)v30, &qword_100637DE0);
    if (!a3) {
      goto LABEL_21;
    }
  }
LABEL_19:
  if (v5) {
    goto LABEL_22;
  }
  uint64_t v5 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithTaggedItemsSourceRepresentedTag:a3];
LABEL_21:
  if (v5)
  {
LABEL_22:
    uint64_t v17 = v5;
    id v18 = [v17 representedTag];
    if (v18)
    {

      unsigned __int8 v19 = [v3 isTaggedItemsSource];
      if ((v19 & 1) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      id v20 = [v3 fileProviderItem];
      if (!v20
        || (v20, (id v21 = [v17 fileProviderItem]) == 0))
      {

        goto LABEL_30;
      }
      uint64_t v22 = v21;

      uint64_t v3 = v17;
    }
    uint64_t v17 = v3;
    uint64_t v3 = v5;
LABEL_30:
  }
  return v3;
}

void sub_1003AEF8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v1;
    aBlock[4] = sub_1003B96F4;
    void aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1003A422C;
    void aBlock[3] = &unk_1005D24F0;
    uint64_t v3 = _Block_copy(aBlock);
    id v4 = v1;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v3);
  }
}

uint64_t sub_1003AF084(unsigned char *a1)
{
  uint64_t v2 = sub_1004CD860();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1004CD8C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1004CD900();
  uint64_t v11 = __chkstk_darwin(v10);
  id v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v17 = (char *)v24 - v16;
  if ((a1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_ignoreExternalUpdates] & 1) == 0
    && (a1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] & 1) == 0)
  {
    a1[OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] = 1;
    uint64_t v28 = v6;
    uint64_t v18 = v15;
    sub_1000333C8(0, (unint64_t *)&qword_100626B70);
    uint64_t v27 = v3;
    uint64_t v25 = sub_1004CE630();
    sub_1004CD8E0();
    sub_1004CD970();
    unsigned __int8 v19 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v24[1] = v18 + 8;
    id v26 = v19;
    v19(v13, v10);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a1;
    aBlock[4] = sub_1003B7BDC;
    void aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1003A422C;
    void aBlock[3] = &unk_1005D1CA8;
    id v21 = _Block_copy(aBlock);
    uint64_t v22 = a1;
    swift_release();
    sub_1004CD880();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003B8F74((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100031648((uint64_t *)&unk_100628370);
    sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
    sub_1004CF330();
    uint64_t v23 = (void *)v25;
    sub_1004CE600();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
    return v26(v17, v10);
  }
  return result;
}

uint64_t sub_1003AF478(uint64_t a1)
{
  uint64_t v2 = sub_100031648(&qword_100632BA0);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending) = 0;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC14RecentsAvocado27DOCBrowserHistoryDataSource_ignoreExternalUpdates) & 1) == 0)
  {
    uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    sub_1000333C8(0, (unint64_t *)&qword_100626B70);
    uint64_t v7 = (void *)sub_1004CE630();
    int64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = DOCSplitBrowserViewController.didCommitPreview(of:);
    *(void *)(v8 + 24) = 0;
    sub_1003AA790((uint64_t)v5, 0, v7, (uint64_t)sub_1002DFBE4, v8);

    swift_release();
    return sub_100049B74((uint64_t)v5, &qword_100632BA0);
  }
  return result;
}

uint64_t sub_1003AF5E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  id v7 = [*(id *)(a1 + *(int *)(v6 + 20)) representedTag];
  if (!v7) {
    goto LABEL_4;
  }
  int64_t v8 = v7;
  sub_1000333C8(0, (unint64_t *)&unk_100628880);
  id v9 = a2;
  id v10 = v8;
  char v11 = sub_1004CEF10();

  if (v11)
  {
    uint64_t v12 = 1;
  }
  else
  {
LABEL_4:
    sub_1003B8D70(a1, a3, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v12 = 0;
  }
  id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v13(a3, v12, 1, v6);
}

void *sub_1003AF7FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  int64_t v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  id v9 = [*(id *)(a1 + v8[5]) representedTag];
  if (!v9) {
    goto LABEL_5;
  }
  id v10 = v9;
  sub_1000333C8(0, (unint64_t *)&unk_100628880);
  id v11 = a2;
  id v12 = v10;
  char v13 = sub_1004CEF10();

  if (v13)
  {
    sub_1003B8D70(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v14 = v8[5];
    uint64_t v15 = *(void **)(a4 + v14);
    id v16 = v15;
    uint64_t result = sub_1003AED08(v15, 0, (uint64_t)a3);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = result;

    *(void *)(a4 + v14) = v18;
    uint64_t v19 = v8[7];
    uint64_t v20 = *(void **)(a4 + v19);
    id v21 = v20;
    uint64_t v22 = sub_1003AED08(v20, 0, (uint64_t)a3);

    *(void *)(a4 + v19) = v22;
    id v23 = v22;

    uint64_t v24 = v8[6];
    unint64_t v25 = *(void *)(a4 + v24);
    swift_bridgeObjectRetain();

    id v26 = a3;
    uint64_t v27 = sub_1003B78EC(v25, 0, (uint64_t)a3);
    swift_bridgeObjectRelease_n();

    *(void *)(a4 + v24) = v27;
  }
  else
  {
LABEL_5:
    sub_1003B8D70(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
  }
  uint64_t v28 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v8 - 1) + 56);
  return (void *)v28(a4, 0, 1, v8);
}

uint64_t *sub_1003AFB0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    id v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100031648(&qword_100632BA0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v33 = v8;
      uint64_t v11 = sub_1004CADE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v7[5];
      char v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v14 = v7[7];
      uint64_t v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v7[8];
      uint64_t v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v7[9];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (_OWORD *)((char *)a2 + v18);
      uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 24);
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, _OWORD *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v25 = v20[1];
        *(_OWORD *)uint64_t v19 = *v20;
        *((_OWORD *)v19 + 1) = v25;
      }
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v33 + 56))(a1, 0, 1, v7);
    }
    uint64_t v26 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
    *(uint64_t *)((char *)a1 + *(int *)(v26 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v26 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(v26 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v26 + 24));
    uint64_t v27 = *(int *)(a3 + 20);
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    unint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = *(uint64_t *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      uint64_t v31 = *((void *)v29 + 1);
      *uint64_t v28 = v30;
      v28[1] = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
  }
  return a1;
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(uint64_t a1)
{
  return sub_100069444(a1, qword_100637D58);
}

uint64_t sub_1003AFDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v4 - 1) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_1004CADE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);

    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + v4[9];
    if (*(void *)(v6 + 24)) {
      sub_100039184(v6);
    }
  }
  type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 20));
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1003AFF20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v31 = a3;
    uint64_t v9 = sub_1004CADE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = v6[5];
    uint64_t v11 = *(void **)&a2[v10];
    *(void *)&a1[v10] = v11;
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v12 = v6[7];
    char v13 = *(void **)&a2[v12];
    *(void *)&a1[v12] = v13;
    uint64_t v14 = v6[8];
    uint64_t v15 = *(void **)&a2[v14];
    *(void *)&a1[v14] = v15;
    uint64_t v16 = v6[9];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = *(void *)&a2[v16 + 24];
    id v20 = v11;
    swift_bridgeObjectRetain();
    id v21 = v13;
    id v22 = v15;
    if (v19)
    {
      *((void *)v17 + 3) = v19;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      long long v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
    a3 = v31;
  }
  uint64_t v24 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v24 + 20)] = *(void *)&a2[*(int *)(v24 + 20)];
  *(void *)&a1[*(int *)(v24 + 24)] = *(void *)&a2[*(int *)(v24 + 24)];
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)&a2[v25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    uint64_t v29 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = v28;
    *((void *)v26 + 1) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  return a1;
}

char *sub_1003B017C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v51 = a3;
      uint64_t v11 = sub_1004CADE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v6[5];
      char v13 = *(void **)&a2[v12];
      *(void *)&a1[v12] = v13;
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      uint64_t v14 = v6[7];
      uint64_t v15 = *(void **)&a2[v14];
      *(void *)&a1[v14] = v15;
      uint64_t v16 = v6[8];
      uint64_t v17 = *(void **)&a2[v16];
      *(void *)&a1[v16] = v17;
      uint64_t v18 = v6[9];
      uint64_t v19 = &a1[v18];
      id v20 = &a2[v18];
      uint64_t v21 = *(void *)&a2[v18 + 24];
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v43 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v43;
      }
      a3 = v51;
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v25 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  if (v10)
  {
    sub_1003B82A4((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_7;
  }
  uint64_t v26 = sub_1004CADE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
  uint64_t v27 = v6[5];
  uint64_t v28 = *(void **)&a2[v27];
  uint64_t v29 = *(void **)&a1[v27];
  *(void *)&a1[v27] = v28;
  id v30 = v28;

  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v6[7];
  uint64_t v32 = *(void **)&a1[v31];
  uint64_t v33 = *(void **)&a2[v31];
  *(void *)&a1[v31] = v33;
  id v34 = v33;

  uint64_t v35 = v6[8];
  uint64_t v36 = *(void **)&a2[v35];
  uint64_t v37 = *(void **)&a1[v35];
  *(void *)&a1[v35] = v36;
  id v38 = v36;

  uint64_t v39 = v6[9];
  uint64_t v40 = (uint64_t)&a1[v39];
  uint64_t v41 = (uint64_t *)&a2[v39];
  uint64_t v42 = *(void *)&a2[v39 + 24];
  if (*(void *)&a1[v39 + 24])
  {
    if (v42)
    {
      sub_100343A1C((uint64_t *)v40, v41);
      goto LABEL_13;
    }
    sub_100039184(v40);
  }
  else if (v42)
  {
    *(void *)(v40 + 24) = v42;
    (**(void (***)(uint64_t, char *))(v42 - 8))(v40, (char *)v41);
    goto LABEL_13;
  }
  long long v50 = *((_OWORD *)v41 + 1);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v50;
LABEL_13:
  uint64_t v44 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v44 + 20)] = *(void *)&a2[*(int *)(v44 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v44 + 24)] = *(void *)&a2[*(int *)(v44 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = *(void *)&a2[v45];
  if (!*(void *)&a1[v45])
  {
    if (v48)
    {
      *(void *)uint64_t v46 = v48;
      *((void *)v46 + 1) = *((void *)v47 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_19:
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    return a1;
  }
  if (!v48)
  {
    sub_1003B0588((uint64_t)&a1[v45]);
    goto LABEL_19;
  }
  *(void *)uint64_t v46 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v46 + 1) = *((void *)v47 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003B0588(uint64_t a1)
{
  return a1;
}

char *sub_1003B05BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1004CADE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v10 = v6[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
  *(void *)&a1[*(int *)(v14 + 24)] = *(void *)&a2[*(int *)(v14 + 24)];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1003B0764(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_1004CADE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
      uint64_t v12 = v6[9];
      long long v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)long long v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1003B82A4((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
LABEL_6:
    uint64_t v16 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v22 = sub_1004CADE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(a1, a2, v22);
  uint64_t v23 = v6[5];
  id v24 = *(void **)&a1[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];

  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v6[7];
  uint64_t v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  uint64_t v27 = v6[8];
  uint64_t v28 = *(void **)&a1[v27];
  *(void *)&a1[v27] = *(void *)&a2[v27];

  uint64_t v29 = v6[9];
  id v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (*(void *)&a1[v29 + 24]) {
    sub_100039184((uint64_t)v30);
  }
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)id v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
LABEL_7:
  uint64_t v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v17 + 20)] = *(void *)&a2[*(int *)(v17 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&a2[*(int *)(v17 + 24)];
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (uint64_t)&a1[v18];
  id v20 = &a2[v18];
  if (!*(void *)&a1[v18])
  {
LABEL_11:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    return a1;
  }
  if (!*(void *)v20)
  {
    sub_1003B0588(v19);
    goto LABEL_11;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003B0A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B0A6C);
}

uint64_t sub_1003B0A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1003B0B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B0B4C);
}

uint64_t sub_1003B0B4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(uint64_t a1)
{
  return sub_100069444(a1, qword_100637CC8);
}

uint64_t sub_1003B0C28()
{
  uint64_t result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for _DOCBrowserHistoryDataSourceBase.RefreshContext()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s14RecentsAvocado32_DOCBrowserHistoryDataSourceBaseC14RefreshContextVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for _DOCBrowserHistoryDataSourceBase.RefreshContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _DOCBrowserHistoryDataSourceBase.RefreshContext(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _DOCBrowserHistoryDataSourceBase.RefreshContext()
{
  return &type metadata for _DOCBrowserHistoryDataSourceBase.RefreshContext;
}

uint64_t *sub_1003B0DEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100031648(&qword_100632BA0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v8;
      uint64_t v11 = sub_1004CADE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v7[5];
      long long v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v14 = v7[7];
      long long v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v7[8];
      uint64_t v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v7[9];
      uint64_t v19 = (char *)a1 + v18;
      id v20 = (_OWORD *)((char *)a2 + v18);
      uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 24);
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, _OWORD *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v25 = v20[1];
        *(_OWORD *)uint64_t v19 = *v20;
        *((_OWORD *)v19 + 1) = v25;
      }
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v28 + 56))(a1, 0, 1, v7);
    }
    uint64_t v26 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1003B1050(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2))
  {
    uint64_t v3 = sub_1004CADE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);

    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[9];
    if (*(void *)(v4 + 24)) {
      sub_100039184(v4);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1003B1160(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v7;
    uint64_t v9 = sub_1004CADE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = v6[5];
    uint64_t v11 = *(void **)&a2[v10];
    *(void *)&a1[v10] = v11;
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v12 = v6[7];
    long long v13 = *(void **)&a2[v12];
    *(void *)&a1[v12] = v13;
    uint64_t v14 = v6[8];
    long long v15 = *(void **)&a2[v14];
    *(void *)&a1[v14] = v15;
    uint64_t v16 = v6[9];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = *(void *)&a2[v16 + 24];
    id v20 = v11;
    swift_bridgeObjectRetain();
    id v21 = v13;
    id v22 = v15;
    if (v19)
    {
      *((void *)v17 + 3) = v19;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      long long v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(a1, 0, 1, v6);
  }
  uint64_t v24 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1003B1374(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v26 = sub_1004CADE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
      uint64_t v27 = v6[5];
      uint64_t v28 = *(void **)&a2[v27];
      uint64_t v29 = *(void **)&a1[v27];
      *(void *)&a1[v27] = v28;
      id v30 = v28;

      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = v6[7];
      long long v32 = *(void **)&a1[v31];
      uint64_t v33 = *(void **)&a2[v31];
      *(void *)&a1[v31] = v33;
      id v34 = v33;

      uint64_t v35 = v6[8];
      uint64_t v36 = *(void **)&a2[v35];
      uint64_t v37 = *(void **)&a1[v35];
      *(void *)&a1[v35] = v36;
      id v38 = v36;

      uint64_t v39 = v6[9];
      uint64_t v40 = (uint64_t)&a1[v39];
      uint64_t v41 = (uint64_t *)&a2[v39];
      uint64_t v42 = *(void *)&a2[v39 + 24];
      if (*(void *)&a1[v39 + 24])
      {
        if (v42)
        {
          sub_100343A1C((uint64_t *)v40, v41);
          goto LABEL_13;
        }
        sub_100039184(v40);
      }
      else if (v42)
      {
        *(void *)(v40 + 24) = v42;
        (**(void (***)(uint64_t, char *))(v42 - 8))(v40, (char *)v41);
        goto LABEL_13;
      }
      long long v45 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v45;
      goto LABEL_13;
    }
    sub_1003B82A4((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v25 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v46 = a3;
  uint64_t v11 = sub_1004CADE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = v6[5];
  long long v13 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v13;
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  uint64_t v14 = v6[7];
  long long v15 = *(void **)&a2[v14];
  *(void *)&a1[v14] = v15;
  uint64_t v16 = v6[8];
  uint64_t v17 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v17;
  uint64_t v18 = v6[9];
  uint64_t v19 = &a1[v18];
  id v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18 + 24];
  id v22 = v13;
  swift_bridgeObjectRetain();
  id v23 = v15;
  id v24 = v17;
  if (v21)
  {
    *((void *)v19 + 3) = v21;
    (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
  }
  else
  {
    long long v43 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v43;
  }
  a3 = v46;
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_13:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1003B16FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1004CADE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v10 = v6[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  return a1;
}

char *sub_1003B188C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_1004CADE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
      uint64_t v12 = v6[9];
      long long v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)long long v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v16 = sub_100031648(&qword_100632BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1003B82A4((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_6;
  }
  uint64_t v18 = sub_1004CADE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(a1, a2, v18);
  uint64_t v19 = v6[5];
  id v20 = *(void **)&a1[v19];
  *(void *)&a1[v19] = *(void *)&a2[v19];

  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRelease();
  uint64_t v21 = v6[7];
  id v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  uint64_t v23 = v6[8];
  id v24 = *(void **)&a1[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];

  uint64_t v25 = v6[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  if (*(void *)&a1[v25 + 24]) {
    sub_100039184((uint64_t)v26);
  }
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003B1B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B1B40);
}

uint64_t sub_1003B1B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100031648(&qword_100632BA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003B1C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B1C18);
}

uint64_t sub_1003B1C18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100031648(&qword_100632BA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1003B1CD8()
{
  sub_100341D34();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1003B1D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[0] = a1;
  uint64_t v5 = sub_1004CD860();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1004CD8C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  aBlock[4] = sub_100049C64;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1003A422C;
  void aBlock[3] = &unk_1005D1FF0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1004CD880();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1003B8F74((unint64_t *)&qword_100628440, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100031648((uint64_t *)&unk_100628370);
  sub_10005B6A0((unint64_t *)&qword_100628450, (uint64_t *)&unk_100628370);
  sub_1004CF330();
  sub_1004CE650();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1003B2020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v79 = a7;
  uint64_t v80 = a8;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  unint64_t v74 = (char *)a3;
  uint64_t v75 = (char *)a4;
  uint64_t v78 = a2;
  uint64_t v11 = sub_100031648(&qword_100632BA0);
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v68 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v68 - v18;
  uint64_t v20 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  id v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v68 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v68 - v28;
  uint64_t v30 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  uint64_t v31 = a1;
  long long v32 = (void *)(a1 + *(int *)(v30 + 20));
  if (*v32)
  {
    uint64_t v81 = 0;
    unint64_t v82 = 0xE000000000000000;
    sub_1004CF4D0(75);
    v83._uint64_t countAndFlagsBits = 91;
    v83._object = (void *)0xE100000000000000;
    sub_1004CDCD0(v83);
    v84._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v84);
    swift_bridgeObjectRelease();
    v85._object = (void *)0x8000000100535720;
    v85._uint64_t countAndFlagsBits = 0xD000000000000048;
    sub_1004CDCD0(v85);
    sub_1003A9588(v81, v82);
    swift_bridgeObjectRelease();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v79;
    *(void *)(v33 + 24) = v80;
    id v34 = (void *)*v32;
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1002378F0(0, v34[2] + 1, 1, v34);
      id v34 = (void *)result;
    }
    unint64_t v37 = v34[2];
    unint64_t v36 = v34[3];
    if (v37 >= v36 >> 1)
    {
      uint64_t result = (uint64_t)sub_1002378F0((void *)(v36 > 1), v37 + 1, 1, v34);
      id v34 = (void *)result;
    }
    _OWORD v34[2] = v37 + 1;
    id v38 = &v34[2 * v37];
    unsigned char v38[4] = sub_1000BF250;
    v38[5] = v33;
    *long long v32 = v34;
  }
  else
  {
    uint64_t v77 = v19;
    uint64_t v78 = v21;
    uint64_t v70 = v24;
    char v71 = v29;
    uint64_t v69 = v27;
    unint64_t v74 = v17;
    uint64_t v75 = v14;
    uint64_t v72 = v11;
    uint64_t v39 = v31;
    uint64_t v76 = a9;
    uint64_t v40 = _swiftEmptyArrayStorage;
    *long long v32 = _swiftEmptyArrayStorage;
    v32[1] = _swiftEmptyArrayStorage;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v79;
    *(void *)(v41 + 24) = v80;
    swift_retain();
    uint64_t v42 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v40 = sub_1002378F0(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v44 = v40[2];
    unint64_t v43 = v40[3];
    uint64_t v45 = v73;
    uint64_t v46 = (uint64_t)v77;
    if (v44 >= v43 >> 1) {
      uint64_t v40 = sub_1002378F0((void *)(v43 > 1), v44 + 1, 1, v40);
    }
    uint64_t v47 = (uint64_t *)(a10 + 16);
    v40[2] = v44 + 1;
    uint64_t v48 = &v40[2 * v44];
    void v48[4] = sub_1000674E0;
    v48[5] = v41;
    void *v42 = v40;
    sub_1000335A8(v76, v46, &qword_100632BA0);
    uint64_t v49 = v78;
    long long v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
    if (v50(v46, 1, v20) == 1)
    {
      sub_100049B74(v46, &qword_100632BA0);
      sub_100031648((uint64_t *)&unk_100637DF0);
      unint64_t v51 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1004E12A0;
      uint64_t v53 = v52 + v51;
      uint64_t v54 = v39;
      sub_1000335A8(v39, v53, &qword_100632BA0);
      uint64_t v55 = (uint64_t)v74;
      sub_1000335A8(v53, (uint64_t)v74, &qword_100632BA0);
      uint64_t v56 = v55;
      uint64_t v57 = (uint64_t)v75;
      sub_100031790(v56, (uint64_t)v75, &qword_100632BA0);
      if (v50(v57, 1, v20) == 1)
      {
        sub_100049B74(v57, &qword_100632BA0);
        id v58 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v62 = (uint64_t)v69;
        sub_1003B843C(v57, (uint64_t)v69, type metadata accessor for DOCBrowserHistoryItem);
        uint64_t v63 = (uint64_t)v70;
        sub_1003B843C(v62, (uint64_t)v70, type metadata accessor for DOCBrowserHistoryItem);
        id v58 = _swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v58 = (void *)sub_100237EB0(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
        }
        unint64_t v65 = v58[2];
        unint64_t v64 = v58[3];
        if (v65 >= v64 >> 1) {
          id v58 = (void *)sub_100237EB0(v64 > 1, v65 + 1, 1, (unint64_t)v58);
        }
        v58[2] = v65 + 1;
        sub_1003B843C(v63, (uint64_t)v58+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v65, type metadata accessor for DOCBrowserHistoryItem);
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v81 = *(void *)(v54 + *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 20));
      swift_bridgeObjectRetain();
      sub_100109130((uint64_t)v58);
      uint64_t v66 = swift_bridgeObjectRetain();
      sub_100109130(v66);
      uint64_t v67 = v81;
      swift_beginAccess();
      uint64_t *v47 = v67;
    }
    else
    {
      uint64_t v59 = (uint64_t)v71;
      sub_1003B843C(v46, (uint64_t)v71, type metadata accessor for DOCBrowserHistoryItem);
      sub_100031648((uint64_t *)&unk_10062F8C0);
      unint64_t v60 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = xmmword_1004E12A0;
      sub_1003B843C(v59, v61 + v60, type metadata accessor for DOCBrowserHistoryItem);
      swift_beginAccess();
      uint64_t *v47 = v61;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003B271C(uint64_t a1, uint64_t a2)
{
  sub_1003B5580(a1, (uint64_t)v6);
  uint64_t v3 = v6[0];
  uint64_t result = sub_100049B74((uint64_t)v6, &qword_100637DE0);
  if (v3)
  {
    sub_10003301C(a2, (uint64_t)v5);
    sub_10002EA88((uint64_t)v6, (uint64_t)v5);
    return sub_100033078((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1003B2790(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  uint64_t v10 = a4 + 16;
  uint64_t v11 = a6 + 16;
  sub_10003301C(a5, (uint64_t)v19);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v10;
  long long v13 = v19[1];
  *(_OWORD *)(v12 + 32) = v19[0];
  *(_OWORD *)(v12 + 48) = v13;
  *(_OWORD *)(v12 + 64) = v19[2];
  *(void *)(v12 + 80) = v20;
  *(void *)(v12 + 88) = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1003B834C;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_1000674E0;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100125C48;
  void aBlock[3] = &unk_1005D1F50;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(a3, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a3)
  {
    __break(1u);
  }
  else
  {
    dispatch_group_leave(a7);
    return swift_release();
  }
  return result;
}

void sub_1003B2924(void *a1, uint64_t a2, uint64_t a3, void **a4)
{
  if (a1)
  {
    sub_10003301C(a3, (uint64_t)v17);
    sub_1000333C8(0, (unint64_t *)&qword_100627EE0);
    id v5 = a1;
    uint64_t v6 = (void *)sub_1004CED20();
    sub_1003B3404(v6, v16);
    swift_beginAccess();
    sub_1003A3ED8((uint64_t)v16, (uint64_t)v17);
    swift_endAccess();
  }
  else
  {
    sub_10003301C(a3, (uint64_t)v17);
    swift_beginAccess();
    uint64_t v8 = *a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v8 = sub_100238A40(0, v8[2] + 1, 1, v8);
      *a4 = v8;
    }
    unint64_t v11 = v8[2];
    unint64_t v10 = v8[3];
    if (v11 >= v10 >> 1)
    {
      uint64_t v8 = sub_100238A40((void *)(v10 > 1), v11 + 1, 1, v8);
      *a4 = v8;
    }
    void v8[2] = v11 + 1;
    uint64_t v12 = &v8[7 * v11];
    long long v13 = v17[0];
    long long v14 = v17[1];
    long long v15 = v17[2];
    v12[10] = v18;
    *((_OWORD *)v12 + 3) = v14;
    *((_OWORD *)v12 + 4) = v15;
    *((_OWORD *)v12 + 2) = v13;
    swift_endAccess();
  }
}

uint64_t sub_1003B2A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v16 = (void *)result;
    sub_1004CF4D0(45);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 0xD000000000000017;
    v22._object = (void *)0x8000000100535650;
    sub_1004CDCD0(v22);
    swift_beginAccess();
    v23._uint64_t countAndFlagsBits = sub_1004CF840();
    sub_1004CDCD0(v23);
    swift_bridgeObjectRelease();
    v24._object = (void *)0x8000000100535670;
    v24._uint64_t countAndFlagsBits = 0xD000000000000011;
    sub_1004CDCD0(v24);
    sub_1003A9588(91, 0xE100000000000000);
    uint64_t v17 = swift_bridgeObjectRelease();
    __chkstk_darwin(v17);
    sub_1003B7484(a7, (void (*)(unsigned char *, unsigned char *))sub_1003B81F8);
    sub_1004CF4D0(37);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0xD000000000000022;
    v26._object = (void *)0x8000000100535690;
    sub_1004CDCD0(v26);
    sub_1003A9588(91, 0xE100000000000000);
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)swift_allocObject();
    long long v18[2] = a9;
    int8x16_t v18[3] = v16;
    v18[4] = a2;
    v18[5] = a3;
    void v18[6] = a4;
    v18[7] = a5;
    v18[8] = a8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1003B8250;
    *(void *)(v19 + 24) = v18;
    swift_retain();
    id v20 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1003A5E48();
    swift_release();
    swift_release();
    sub_1004CF4D0(23);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 0xD000000000000014;
    v28._object = (void *)0x80000001005356C0;
    sub_1004CDCD0(v28);
    sub_1003A9588(91, 0xE100000000000000);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003B2E3C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  sub_10003301C(a1, (uint64_t)v24);
  swift_beginAccess();
  uint64_t v8 = *a3;
  if (*(void *)(*a3 + 16) && (unint64_t v9 = sub_1001DBF98(a2), (v10 & 1) != 0))
  {
    sub_10003301C(*(void *)(v8 + 56) + 56 * v9, (uint64_t)v22);
  }
  else
  {
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
  }
  swift_endAccess();
  swift_beginAccess();
  sub_1003A3ED8((uint64_t)v22, (uint64_t)v24);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v11 = *a4;
  swift_bridgeObjectRetain();
  char v12 = sub_10010A034(a1, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    sub_10003301C(a2, (uint64_t)v24);
    swift_beginAccess();
    long long v14 = (void *)*a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = (uint64_t)v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v14 = sub_100238A40(0, v14[2] + 1, 1, v14);
      *a4 = (uint64_t)v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      long long v14 = sub_100238A40((void *)(v16 > 1), v17 + 1, 1, v14);
      *a4 = (uint64_t)v14;
    }
    v14[2] = v17 + 1;
    uint64_t v18 = &v14[7 * v17];
    long long v19 = v24[0];
    long long v20 = v24[1];
    long long v21 = v24[2];
    v18[10] = v25;
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = v21;
    *((_OWORD *)v18 + 2) = v19;
    return swift_endAccess();
  }
  return result;
}

void *sub_1003B3008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v9 = v8[5];
  id v38 = *(id *)(a1 + v9);
  id v10 = v38;
  swift_bridgeObjectRetain();
  id v11 = [v10 fileProviderItem];
  if (v11)
  {
    id v12 = v11;
    uint64_t v41 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    unint64_t v42 = sub_1003B8150();
    unint64_t v43 = sub_1003B81A4();
    unint64_t v39 = (unint64_t)v10;
    id v40 = v12;
  }
  else
  {
    id v13 = [v10 representedTag];
    if (v13)
    {
      long long v14 = v13;
      id v15 = v10;
      id v16 = (id)FPTagFromDOCTag();
      uint64_t v41 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      unint64_t v42 = sub_1003B80A8();
      unint64_t v43 = sub_1003B80FC();

      unint64_t v39 = (unint64_t)v15;
      id v40 = v16;
    }
    else
    {
      uint64_t v41 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      unint64_t v42 = sub_1003B7EB0();
      unint64_t v43 = sub_1003B7F04();
      unint64_t v39 = (unint64_t)v10;
    }
  }
  char v17 = sub_10010A034((uint64_t)&v38, v7);
  sub_100033078((uint64_t)&v38);
  swift_bridgeObjectRelease();
  if (v17)
  {
    id v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_1004CF4D0(57);
    v44._uint64_t countAndFlagsBits = 91;
    v44._object = (void *)0xE100000000000000;
    sub_1004CDCD0(v44);
    v45._uint64_t countAndFlagsBits = sub_1004CDBC0();
    sub_1004CDCD0(v45);
    swift_bridgeObjectRelease();
    v46._object = (void *)0x80000001005356E0;
    v46._uint64_t countAndFlagsBits = 0xD000000000000034;
    sub_1004CDCD0(v46);
    id v18 = *(id *)(a1 + v9);
    id v19 = [v18 description];
    uint64_t v20 = sub_1004CDB50();
    Swift::String v22 = v21;

    v47._uint64_t countAndFlagsBits = v20;
    v47._object = v22;
    sub_1004CDCD0(v47);

    swift_bridgeObjectRelease();
    sub_1003A9588((uint64_t)v38, v39);
    swift_bridgeObjectRelease();
    return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 56))(a4, 1, 1, v8);
  }
  else
  {
    swift_beginAccess();
    Swift::String v24 = *(void **)(a3 + 16);
    sub_1003B8D70(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v25 = v8[5];
    Swift::String v26 = *(void **)(a4 + v25);
    swift_bridgeObjectRetain();
    id v27 = v26;
    uint64_t result = sub_1003AED08(v26, v24, 0);
    if (result)
    {
      Swift::String v28 = result;

      *(void *)(a4 + v25) = v28;
      uint64_t v29 = v8[7];
      uint64_t v30 = *(void **)(a4 + v29);
      id v31 = v30;
      long long v32 = sub_1003AED08(v30, v24, 0);

      *(void *)(a4 + v29) = v32;
      id v33 = v32;

      uint64_t v34 = v8[6];
      unint64_t v35 = *(void *)(a4 + v34);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRetain();
      unint64_t v36 = sub_1003B78EC(v35, v24, 0);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(void *)(a4 + v34) = v36;
      return (void *)(*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v8 - 1) + 56))(a4, 0, 1, v8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1003B33FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1003B3404(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  id v3 = a1;
  id v4 = [v3 fileProviderItem];
  if (v4)
  {
    id v5 = v4;
    a2[4] = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    a2[5] = sub_1003B8150();
    a2[6] = sub_1003B81A4();
    a2[1] = v3;
    a2[2] = v5;
  }
  else
  {
    id v6 = [v3 representedTag];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = v3;
      id v9 = (id)FPTagFromDOCTag();
      a2[4] = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      a2[5] = sub_1003B80A8();
      a2[6] = sub_1003B80FC();

      a2[1] = v8;
      a2[2] = v9;
    }
    else
    {
      a2[4] = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      a2[5] = sub_1003B7EB0();
      a2[6] = sub_1003B7F04();
      a2[1] = v3;
    }
  }
}

uint64_t sub_1003B3500(void *a1, void *a2)
{
  id v12 = a1;
  id v3 = a1;
  id v4 = [v3 fileProviderItem];
  if (v4)
  {
    id v5 = v4;
    id v15 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    unint64_t v16 = sub_1003B8150();
    unint64_t v17 = sub_1003B81A4();
    id v13 = v3;
    id v14 = v5;
  }
  else
  {
    id v6 = [v3 representedTag];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = v3;
      id v9 = (id)FPTagFromDOCTag();
      id v15 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      unint64_t v16 = sub_1003B80A8();
      unint64_t v17 = sub_1003B80FC();

      id v13 = v8;
      id v14 = v9;
    }
    else
    {
      id v15 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      unint64_t v16 = sub_1003B7EB0();
      unint64_t v17 = sub_1003B7F04();
      id v13 = v3;
    }
  }
  sub_1003B3404(a2, v11);
  return sub_1003A3ED8((uint64_t)v11, (uint64_t)&v12);
}

void sub_1003B3630()
{
  id v1 = *(id *)(v0 + 8);
  sub_1004CEF20();
}

uint64_t sub_1003B368C()
{
  return sub_1003B706C(*(void **)(v0 + 8));
}

Swift::Int sub_1003B3698()
{
  id v1 = *(void **)(v0 + 8);
  sub_1004CF9E0();
  id v2 = v1;
  sub_1004CEF20();

  return sub_1004CFA30();
}

Swift::Int sub_1003B36E8()
{
  id v1 = *(void **)(v0 + 8);
  sub_1004CF9E0();
  id v2 = v1;
  sub_1004CEF20();

  return sub_1004CFA30();
}

uint64_t sub_1003B3734()
{
  id v1 = [*(id *)(v0 + 8) label];
  uint64_t v2 = sub_1004CDB50();
  id v4 = v3;

  v6._uint64_t countAndFlagsBits = v2;
  v6._object = v4;
  sub_1004CDCD0(v6);
  swift_bridgeObjectRelease();
  return 979853652;
}

uint64_t sub_1003B37B8()
{
  if (sub_1004CEF10()) {
    return sub_1004CEF10() & 1;
  }
  else {
    return 0;
  }
}

void sub_1003B3830(int a1, id a2)
{
  id v3 = [a2 sourceIdentifier];
  sub_1004CDB50();
  sub_1004CDC80();

  swift_bridgeObjectRelease();
  id v4 = [a2 displayName];
  if (v4)
  {
    id v5 = v4;
    sub_1004CDB50();

    sub_1004CFA00(1u);
    swift_bridgeObjectRetain();
    sub_1004CDC80();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1004CFA00(0);
  }
}

unint64_t sub_1003B3904(void *a1)
{
  sub_1004CF4D0(30);
  swift_bridgeObjectRelease();
  id v2 = [a1 displayName];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = sub_1004CDB50();
    Swift::String v6 = v5;
  }
  else
  {
    Swift::String v6 = (void *)0xE200000000000000;
    uint64_t v4 = 16191;
  }
  v8._uint64_t countAndFlagsBits = v4;
  v8._object = v6;
  sub_1004CDCD0(v8);
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

Swift::Int sub_1003B39C4(void *a1)
{
  sub_1004CF9E0();
  id v2 = [a1 sourceIdentifier];
  sub_1004CDB50();
  sub_1004CDC80();

  swift_bridgeObjectRelease();
  id v3 = [a1 displayName];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1004CDB50();

    sub_1004CFA00(1u);
    swift_bridgeObjectRetain();
    sub_1004CDC80();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1004CFA00(0);
  }
  return sub_1004CFA30();
}

Swift::Int sub_1003B3AB8()
{
  return sub_1003B39C4(*v0);
}

void sub_1003B3AC0(int a1)
{
  sub_1003B3830(a1, *v1);
}

Swift::Int sub_1003B3AC8()
{
  id v1 = *v0;
  sub_1004CF9E0();
  id v2 = [v1 sourceIdentifier];
  sub_1004CDB50();
  sub_1004CDC80();

  swift_bridgeObjectRelease();
  id v3 = [v1 displayName];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1004CDB50();

    sub_1004CFA00(1u);
    swift_bridgeObjectRetain();
    sub_1004CDC80();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1004CFA00(0);
  }
  return sub_1004CFA30();
}

unint64_t sub_1003B3BB8()
{
  return sub_1003B3904(*v0);
}

uint64_t sub_1003B3BC0()
{
  return sub_1004CEF10() & 1;
}

Swift::Int sub_1003B3C14()
{
  sub_1004CF9E0();
  sub_100032FD8((void *)(v0 + 8), *(void *)(v0 + 32));
  sub_1004CDA20();
  return sub_1004CFA30();
}

uint64_t sub_1003B3C7C()
{
  sub_100032FD8((void *)(v0 + 8), *(void *)(v0 + 32));
  return sub_1004CDA20();
}

Swift::Int sub_1003B3CCC()
{
  sub_1004CF9E0();
  sub_100032FD8((void *)(v0 + 8), *(void *)(v0 + 32));
  sub_1004CDA20();
  return sub_1004CFA30();
}

BOOL sub_1003B3D30(uint64_t a1, uint64_t a2)
{
  sub_1004CF9E0();
  sub_100032FD8((void *)(a1 + 8), *(void *)(a1 + 32));
  sub_1004CDA20();
  Swift::Int v4 = sub_1004CFA30();
  sub_1004CF9E0();
  sub_100032FD8((void *)(a2 + 8), *(void *)(a2 + 32));
  sub_1004CDA20();
  return v4 == sub_1004CFA30();
}

uint64_t sub_1003B3DE8()
{
  sub_100032FD8((void *)(v0 + 8), *(void *)(v0 + 32));
  return sub_1004CF840();
}

uint64_t sub_1003B3E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DB34C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049AAC8();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1004CADE0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    updateCGFloat d = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
    uint64_t v20 = *(void *)(updated - 8);
    sub_1003B843C(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    sub_100498738(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = updated;
  }
  else
  {
    uint64_t v18 = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1003B3FF8@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  Swift::Int v4 = v3;
  char v7 = a2 & 1;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1001DB424(a1, v7);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *Swift::Int v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049AD0C();
      uint64_t v11 = v21;
    }

    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for RestorableSettings(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1003B843C(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for RestorableSettings);
    sub_100498A84(v8, v11);
    *Swift::Int v4 = v11;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for RestorableSettings(0);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1003B419C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v3 = sub_1001DB500(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10049C6FC();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 24 * v5);
  sub_100499004(v5, v7);
  *id v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1003B4258@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1001DB86C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *char v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049CFE4();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_100032FC8((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1004991D4(v8, v11);
    *char v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1003B435C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DBBF4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049DFFC();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1004CAC10();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1003B843C(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    sub_1004993AC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1003B4528@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1001DE1C8(v5, v6);
  LOBYTE(v6) = v8;
  swift_bridgeObjectRelease();
  if (v6)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v2;
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049E3B4();
      uint64_t v10 = v20;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v10 + 56);
    uint64_t v12 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    uint64_t v19 = *(void *)(v12 - 8);
    sub_1003B843C(v11 + *(void *)(v19 + 72) * v7, a2, type metadata accessor for ScrollPositionInfo.ItemOffset);
    sub_1004996F4(v7, v10);
    *uint64_t v3 = v10;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a2;
    uint64_t v15 = 1;
  }
  return v13(v14, v15, 1, v16);
}

unint64_t sub_1003B46DC(uint64_t a1)
{
  id v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001DB308(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0xF000000000000007;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *id v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10049E840();
    uint64_t v7 = v10;
  }
  sub_100033194(*(void *)(v7 + 48) + 40 * v4);
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 24 * v4);
  sub_100499940(v4, v7);
  *id v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1003B47C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DC19C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    *(void *)&v11[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049F310();
      uint64_t v9 = *(void *)&v11[0];
    }

    memmove(a2, (const void *)(*(void *)(v9 + 56) + 224 * v6), 0xD9uLL);
    sub_100499CD4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    return DOCSplitBrowserViewController.didCommitPreview(of:)(a2);
  }
  else
  {
    sub_1003B9090(v11);
    return sub_100031790((uint64_t)v11, (uint64_t)a2, (uint64_t *)&unk_100637E40);
  }
}

double sub_1003B48C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DBF98(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049F73C();
      uint64_t v9 = v13;
    }
    sub_100033078(*(void *)(v9 + 48) + 56 * v6);
    uint64_t v10 = *(void *)(v9 + 56) + 56 * v6;
    long long v11 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v10;
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v10 + 32);
    *(void *)(a2 + 48) = *(void *)(v10 + 48);
    sub_10049A06C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

double sub_1003B49DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DC1EC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10049F930();
      uint64_t v9 = v11;
    }

    sub_100033120((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_10049A294(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1003B4ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001DC14C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1004A0434();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_1004CAC10();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_10049A45C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_1004CAC10();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_1003B4C78(unsigned __int8 a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  sub_1004CF9E0();
  swift_bridgeObjectRetain();
  sub_1004CDC80();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_1004CFA30();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 6;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a1;
  while (2)
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v11 = 7368564;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        uint64_t v11 = 0x796C746E65636572;
        unint64_t v10 = 0xEC00000064657355;
        break;
      case 2:
        uint64_t v11 = 0x6E6F697461636F6CLL;
        goto LABEL_7;
      case 3:
        uint64_t v11 = 0x657469726F766166;
LABEL_7:
        unint64_t v10 = 0xE900000000000073;
        break;
      case 4:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x73726576726573;
        break;
      case 5:
        unint64_t v10 = 0xE400000000000000;
        uint64_t v11 = 1936154996;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE300000000000000;
    uint64_t v13 = 7368564;
    switch(v9)
    {
      case 1:
        unint64_t v12 = 0xEC00000064657355;
        if (v11 == 0x796C746E65636572) {
          goto LABEL_19;
        }
        goto LABEL_20;
      case 2:
        uint64_t v14 = 0x6E6F697461636F6CLL;
        goto LABEL_15;
      case 3:
        uint64_t v14 = 0x657469726F766166;
LABEL_15:
        unint64_t v12 = 0xE900000000000073;
        if (v11 != v14) {
          goto LABEL_20;
        }
        goto LABEL_19;
      case 4:
        unint64_t v12 = 0xE700000000000000;
        uint64_t v13 = 0x73726576726573;
        goto LABEL_18;
      case 5:
        unint64_t v12 = 0xE400000000000000;
        if (v11 != 1936154996) {
          goto LABEL_20;
        }
        goto LABEL_19;
      default:
LABEL_18:
        if (v11 != v13) {
          goto LABEL_20;
        }
LABEL_19:
        if (v10 != v12)
        {
LABEL_20:
          char v15 = sub_1004CF890();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_27;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_25;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = *v2;
        uint64_t v20 = *v2;
        *id v2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000274E0();
          uint64_t v18 = v20;
        }
        uint64_t v16 = *(unsigned __int8 *)(*(void *)(v18 + 48) + v7);
        sub_1003B5C44(v7);
        *id v2 = v20;
        swift_bridgeObjectRelease();
        return v16;
    }
  }
}

uint64_t sub_1003B505C()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1004CDB50();
  sub_1004CF9E0();
  swift_bridgeObjectRetain();
  sub_1004CDC80();
  Swift::Int v3 = sub_1004CFA30();
  swift_bridgeObjectRelease();
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = v3 & ~v4;
  if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = sub_1004CDB50();
  uint64_t v8 = v7;
  if (v6 == sub_1004CDB50() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_1004CF890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v12;
        if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v13 = sub_1004CDB50();
        uint64_t v15 = v14;
        if (v13 == sub_1004CDB50() && v15 == v16) {
          goto LABEL_16;
        }
        char v18 = sub_1004CF890();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  uint64_t v23 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000271D0();
    uint64_t v21 = v23;
  }
  uint64_t v19 = *(void *)(*(void *)(v21 + 48) + 8 * v5);
  sub_1003B5EB4(v5);
  *id v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1003B5270(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_1004CF400();

    if (v6)
    {
      uint64_t v7 = sub_1003B57BC();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_1004CEF00(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1000333C8(0, (unint64_t *)&unk_1006273A0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_1004CEF10();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_1004CEF10();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000279FC();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1003B6098(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003B5448(char a1)
{
  Swift::UInt v2 = a1 & 1;
  uint64_t v3 = *v1;
  sub_1004CF9E0();
  sub_1004CF9F0(v2);
  Swift::Int v4 = sub_1004CFA30();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 2;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if ((((v2 == 0) ^ *(unsigned __int8 *)(v7 + v6)) & 1) == 0)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 2;
      }
    }
    while ((((v2 == 0) ^ *(unsigned __int8 *)(v7 + v6)) & 1) == 0);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100027A08();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_1003B623C(v6);
  *id v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1003B5580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  sub_1004CF9E0();
  sub_100032FD8((void *)(a1 + 8), *(void *)(a1 + 32));
  swift_bridgeObjectRetain();
  sub_1004CDA20();
  Swift::Int v6 = sub_1004CFA30();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v17 = v2;
    uint64_t v9 = ~v7;
    while (1)
    {
      sub_10003301C(*(void *)(v5 + 48) + 56 * v8, (uint64_t)v18);
      sub_1004CF9E0();
      sub_100032FD8(v19, v19[3]);
      sub_1004CDA20();
      Swift::Int v10 = sub_1004CFA30();
      sub_1004CF9E0();
      sub_100032FD8((void *)(a1 + 8), *(void *)(a1 + 32));
      sub_1004CDA20();
      Swift::Int v11 = sub_1004CFA30();
      sub_100033078((uint64_t)v18);
      if (v10 == v11) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v17;
    uint64_t v20 = *v17;
    *uint64_t v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100027B9C();
      uint64_t v14 = v20;
    }
    uint64_t v15 = *(void *)(v14 + 48) + 56 * v8;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v15;
    *(_OWORD *)(a2 + 16) = v16;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v15 + 32);
    *(void *)(a2 + 48) = *(void *)(v15 + 48);
    sub_1003B6590(v8);
    *uint64_t v17 = v20;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1003B57BC()
{
  id v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1004CF3C0();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1003B6A24(v3, v2, &qword_100637E50, (unint64_t *)&unk_1006273A0, (uint64_t)FINode_ptr, (void (*)(unint64_t))sub_10002C534);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_1004CEF00(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_1000333C8(0, (unint64_t *)&unk_1006273A0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_1004CEF10();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1003B6098(v8);
      if (sub_1004CEF10())
      {
        *id v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_1004CEF10();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1003B5984(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        char v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
        uint64_t v12 = *v10;
        unint64_t v11 = v10[1];
        sub_1004CF9E0();
        switch(v11)
        {
          case 0uLL:
            Swift::UInt v13 = 0;
            goto LABEL_19;
          case 1uLL:
            Swift::UInt v13 = 1;
            goto LABEL_19;
          case 2uLL:
            Swift::UInt v13 = 2;
            goto LABEL_19;
          case 3uLL:
            Swift::UInt v13 = 3;
            goto LABEL_19;
          case 4uLL:
            Swift::UInt v13 = 4;
            goto LABEL_19;
          case 5uLL:
            Swift::UInt v13 = 5;
            goto LABEL_19;
          case 6uLL:
            Swift::UInt v13 = 6;
            goto LABEL_19;
          case 7uLL:
            Swift::UInt v13 = 7;
            goto LABEL_19;
          case 8uLL:
            Swift::UInt v13 = 8;
            goto LABEL_19;
          case 9uLL:
            Swift::UInt v13 = 9;
            goto LABEL_19;
          case 0xAuLL:
            Swift::UInt v13 = 11;
LABEL_19:
            sub_1004CF9F0(v13);
            break;
          default:
            sub_1004CF9F0(0xAuLL);
            swift_bridgeObjectRetain();
            sub_1004CDC80();
            break;
        }
        Swift::Int v14 = sub_1004CFA30();
        sub_1000332E0(v12, v11);
        unint64_t v15 = v14 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v15 < v9) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v9)
        {
          goto LABEL_25;
        }
        if (v2 >= (uint64_t)v15)
        {
LABEL_25:
          uint64_t v16 = *(void *)(v3 + 48);
          uint64_t v17 = (_OWORD *)(v16 + 16 * v2);
          uint64_t v18 = (_OWORD *)(v16 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
          {
            *uint64_t v17 = *v18;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x1003B5C18);
  }
  *(void *)(v3 + 16) = v21;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1003B5C44(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1004CF9E0();
        sub_1004CDC80();
        swift_bridgeObjectRelease();
        unint64_t v10 = sub_1004CFA30() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v2);
          Swift::UInt v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x1003B5E9CLL);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1003B5EB4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
        sub_1004CDB50();
        sub_1004CF9E0();
        id v11 = v10;
        sub_1004CDC80();
        Swift::Int v12 = sub_1004CFA30();

        swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          BOOL v15 = (void *)(v14 + 8 * v2);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            *BOOL v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1003B6098(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = sub_1004CEF00(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            BOOL v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1003B623C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        sub_1004CF9E0();
        sub_1004CF9F0(v10);
        unint64_t v11 = sub_1004CFA30() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          Swift::Int v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            unsigned char *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1003B63E8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1004CF9E0();
        sub_1004CF9F0(0);
        unint64_t v10 = sub_1004CFA30() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v2);
          Swift::Int v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1003B6590(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    Swift::String v22 = v1;
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_10003301C(*(void *)(v3 + 48) + 56 * v6, (uint64_t)v23);
        sub_1004CF9E0();
        sub_100032FD8(v24, v24[3]);
        sub_1004CDA20();
        Swift::Int v13 = sub_1004CFA30();
        sub_100033078((uint64_t)v23);
        Swift::Int v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v2 >= v14)
          {
LABEL_12:
            uint64_t v15 = *(void *)(v3 + 48);
            unint64_t v16 = v15 + 56 * v2;
            uint64_t v17 = (long long *)(v15 + 56 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= (unint64_t)v17 + 56))
            {
              long long v10 = *v17;
              long long v11 = v17[1];
              long long v12 = v17[2];
              *(void *)(v16 + 48) = *((void *)v17 + 6);
              *(_OWORD *)(v16 + 16) = v11;
              *(_OWORD *)(v16 + 32) = v12;
              *(_OWORD *)unint64_t v16 = v10;
              int64_t v2 = v6;
            }
          }
        }
        else if (v14 >= v9 || v2 >= v14)
        {
          goto LABEL_12;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
    id v1 = v22;
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *v1;
  uint64_t v19 = *(void *)(*v1 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v18 + 16) = v21;
    ++*(_DWORD *)(v18 + 36);
  }
  return result;
}

unint64_t sub_1003B67C8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1004CF340();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      while (1)
      {
        int v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        sub_1004CF9E0();
        if (v10 == 2) {
          break;
        }
        if (v10 == 3)
        {
          Swift::UInt v11 = 2;
          goto LABEL_12;
        }
        if (v10 == 4)
        {
          Swift::UInt v11 = 3;
LABEL_12:
          sub_1004CF9F0(v11);
          goto LABEL_14;
        }
        sub_1004CF9F0(0);
        sub_1004CFA00(v10 & 1);
LABEL_14:
        unint64_t v12 = sub_1004CFA30() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_19;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_19:
          uint64_t v13 = *(void *)(v3 + 48);
          Swift::Int v14 = (unsigned char *)(v13 + v2);
          uint64_t v15 = (unsigned char *)(v13 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *Swift::Int v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_22;
        }
      }
      Swift::UInt v11 = 1;
      goto LABEL_12;
    }
LABEL_22:
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

Swift::Int sub_1003B69C4(uint64_t a1, uint64_t a2)
{
  return sub_1003B6A24(a1, a2, (uint64_t *)&unk_100627440, &qword_10062D060, (uint64_t)UICollectionViewCell_ptr, (void (*)(unint64_t))sub_10002B630);
}

Swift::Int sub_1003B69F4(uint64_t a1, uint64_t a2)
{
  return sub_1003B6A24(a1, a2, &qword_100637E50, (unint64_t *)&unk_1006273A0, (uint64_t)FINode_ptr, (void (*)(unint64_t))sub_10002C534);
}

Swift::Int sub_1003B6A24(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  if (a2)
  {
    sub_100031648(a3);
    uint64_t v8 = sub_1004CF4B0();
    uint64_t v21 = v8;
    sub_1004CF370();
    if (sub_1004CF3F0())
    {
      sub_1000333C8(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          uint64_t v8 = v21;
        }
        Swift::Int result = sub_1004CEF00(*(void *)(v8 + 40));
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (sub_1004CF3F0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v8;
}

unint64_t sub_1003B6C2C(uint64_t a1, void *a2)
{
  sub_1004CEF00(a2[5]);
  unint64_t result = sub_1004CF350();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1003B6CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100031648((uint64_t *)&unk_100637E00);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100031648(&qword_100632BA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v29 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v31 = a1;
  sub_1000335A8(a1, (uint64_t)&v29 - v18, &qword_100632BA0);
  uint64_t v32 = a2;
  sub_1000335A8(a2, (uint64_t)v17, &qword_100632BA0);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1000335A8((uint64_t)v19, (uint64_t)v10, &qword_100632BA0);
  sub_1000335A8((uint64_t)v17, v20, &qword_100632BA0);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_100049B74((uint64_t)v17, &qword_100632BA0);
    sub_100049B74((uint64_t)v19, &qword_100632BA0);
    if (v21(v20, 1, v4) == 1)
    {
      sub_100049B74((uint64_t)v10, &qword_100632BA0);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1000335A8((uint64_t)v10, (uint64_t)v14, &qword_100632BA0);
  if (v21(v20, 1, v4) == 1)
  {
    sub_100049B74((uint64_t)v17, &qword_100632BA0);
    sub_100049B74((uint64_t)v19, &qword_100632BA0);
    sub_1003B82A4((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
LABEL_6:
    sub_100049B74((uint64_t)v10, (uint64_t *)&unk_100637E00);
LABEL_10:
    char v27 = 0;
    return v27 & 1;
  }
  uint64_t v22 = v30;
  sub_1003B843C(v20, v30, type metadata accessor for DOCBrowserHistoryItem);
  char v23 = _s14RecentsAvocado21DOCBrowserHistoryItemV2eeoiySbAC_ACtFZ_0();
  sub_1003B82A4(v22, type metadata accessor for DOCBrowserHistoryItem);
  sub_100049B74((uint64_t)v17, &qword_100632BA0);
  sub_100049B74((uint64_t)v19, &qword_100632BA0);
  sub_1003B82A4((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  sub_100049B74((uint64_t)v10, &qword_100632BA0);
  if ((v23 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v24 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v26 = v31;
  uint64_t v25 = v32;
  if ((sub_1002828BC(*(void *)(v31 + *(int *)(v24 + 20)), *(void *)(v32 + *(int *)(v24 + 20))) & 1) == 0) {
    goto LABEL_10;
  }
  char v27 = sub_1002828BC(*(void *)(v26 + *(int *)(v24 + 24)), *(void *)(v25 + *(int *)(v24 + 24)));
  return v27 & 1;
}

uint64_t sub_1003B706C(void *a1)
{
  sub_1004CF4D0(16);
  swift_bridgeObjectRelease();
  id v2 = [a1 itemID];
  id v3 = [v2 description];
  uint64_t v4 = sub_1004CDB50();
  uint64_t v6 = v5;

  v12._uint64_t countAndFlagsBits = v4;
  v12._object = v6;
  sub_1004CDCD0(v12);

  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x3A656D616E202CLL;
  v13._object = (void *)0xE700000000000000;
  sub_1004CDCD0(v13);
  id v7 = [a1 displayName];
  uint64_t v8 = sub_1004CDB50();
  uint64_t v10 = v9;

  v14._uint64_t countAndFlagsBits = v8;
  v14._object = v10;
  sub_1004CDCD0(v14);
  swift_bridgeObjectRelease();
  return 0x3A44497066;
}

void sub_1003B7198(unint64_t a1, void (*a2)(id, id))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v21 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_1004CF660() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v21 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v10 = (v4 - 1) & v4;
      unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
      uint64_t v12 = v9;
      goto LABEL_29;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v15);
    uint64_t v12 = v9 + 1;
    if (!v16)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v20) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v20) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v21 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v20) {
            goto LABEL_32;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v12);
          if (!v16)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v20) {
              goto LABEL_32;
            }
            unint64_t v16 = *(void *)(v21 + 8 * v12);
            if (!v16)
            {
              uint64_t v17 = v9 + 6;
              while (v20 != v17)
              {
                unint64_t v16 = *(void *)(v21 + 8 * v17++);
                if (v16)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10031C144();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
    uint64_t v18 = 8 * v11;
    uint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    id v13 = *(id *)(*(void *)(v5 + 48) + v18);
    id v14 = v19;
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      a2(v13, v14);

      uint64_t v9 = v12;
      unint64_t v4 = v10;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1004CF690())
      {
        sub_1000333C8(0, &qword_100628830);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v22;
        swift_unknownObjectRelease();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = v22;
        swift_unknownObjectRelease();
        uint64_t v12 = v9;
        uint64_t v10 = v4;
        if (v22) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1003B7484(uint64_t a1, void (*a2)(unsigned char *, unsigned char *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v4 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v4 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v4 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = 56 * v12;
    sub_10003301C(*(void *)(a1 + 48) + 56 * v12, (uint64_t)v17);
    sub_10003301C(*(void *)(a1 + 56) + v13, (uint64_t)v18);
    a2(v17, v18);
    uint64_t result = sub_100049B74((uint64_t)v17, &qword_100637DE8);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}