double WTF::StringBuilder::append<WTF::Indentation<4u>,WTF::ASCIILiteral,WTF::Indentation<4u>,WTF::ASCIILiteral,WTF::Indentation<4u>,WTF::ASCIILiteral,WTF::Indentation<4u>,WTF::ASCIILiteral>(WTF::StringBuilder *a1, int a2, int8x16_t *a3, uint64_t a4, int a5, unsigned char *a6, uint64_t a7, int a8, unsigned char *a9, uint64_t a10, int a11, char *a12, uint64_t a13)
{
  size_t v13;
  size_t v14;
  size_t v15;
  unint64_t v16;
  size_t v20;
  size_t v21;
  size_t v22;
  size_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double result;
  char *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned char *v32;
  unsigned char *v33;
  unsigned char *v34;
  unsigned char *v35;
  unsigned char *v36;
  char *v37;
  char *v38;
  unint64_t v39;
  long long v40;
  int8x16_t v41;
  int8x16_t v42;
  int8x16_t v43;
  char *v44;
  char *v45;
  char *v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  int8x16_t *v53;
  __int16 v54;
  uint64_t v55;
  unint64_t v56;
  uint8x8_t *v57;
  uint16x8_t *v58;
  unint64_t v59;
  uint8x16_t v60;
  uint16x8_t v61;
  uint16x8_t v62;
  uint8x8_t *v63;
  uint16x8_t *v64;
  unint64_t v65;
  uint8x8_t v66;
  size_t __n;
  uint64_t vars8;
  int8x16x2_t v70;
  int8x16x2_t v71;
  int8x16x2_t v72;

  if (a4) {
    v13 = a4 - 1;
  }
  else {
    v13 = 0;
  }
  if (v13 >> 31) {
    goto LABEL_91;
  }
  if (a7) {
    v14 = a7 - 1;
  }
  else {
    v14 = 0;
  }
  if (v14 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x182589C90);
  }
  if (a10) {
    v15 = a10 - 1;
  }
  else {
    v15 = 0;
  }
  if (v15 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x182589CB0);
  }
  v16 = a13 ? a13 - 1 : 0;
  if (v16 >> 31)
  {
LABEL_91:
    __break(0xC471u);
    JUMPOUT(0x182589C70);
  }
  v20 = (4 * a2);
  v21 = (4 * a5);
  v22 = (4 * a8);
  v23 = (4 * a11);
  __n = v16;
  v24 = *((void *)a1 + 1);
  if ((v24 || (v24 = *(void *)a1) != 0) && (*(unsigned char *)(v24 + 16) & 4) == 0)
  {
    v25 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!v25) {
      return result;
    }
    v28 = v25;
    if (v20)
    {
      memset_pattern16(v25, asc_1826CF510, 2 * v20);
      v29 = (unint64_t)&v28[2 * v20];
      v30 = (char *)(v29 + 2 * v13);
      v31 = v13 & 0xFFFFFFC0;
      if ((v13 & 0xFFFFFFC0) == 0) {
        goto LABEL_60;
      }
    }
    else
    {
      v20 = 0;
      v29 = (unint64_t)v25;
      v30 = &v25[2 * v13];
      v31 = v13 & 0xFFFFFFC0;
      if ((v13 & 0xFFFFFFC0) == 0) {
        goto LABEL_60;
      }
    }
    v39 = v29 + 2 * v31;
    v40 = 0uLL;
    do
    {
      v70.val[0] = *a3;
      v41 = a3[1];
      v71.val[0] = a3[2];
      v42 = a3[3];
      a3 += 4;
      v43 = v42;
      v71.val[1] = 0uLL;
      v72.val[0] = v41;
      v70.val[1] = 0uLL;
      v44 = (char *)v29;
      vst2q_s8(v44, v70);
      v44 += 32;
      v72.val[1] = 0uLL;
      vst2q_s8(v44, v72);
      v45 = (char *)(v29 + 64);
      vst2q_s8(v45, v71);
      v46 = (char *)(v29 + 96);
      vst2q_s8(v46, *(int8x16x2_t *)(&v40 - 1));
      v29 += 128;
    }
    while (v29 != v39);
    v29 = v39;
LABEL_60:
    if ((char *)v29 == v30) {
      goto LABEL_71;
    }
    v47 = (size_t)&v28[2 * v20 + 2 * a4 - v29];
    v48 = -2;
    if (a4) {
      v49 = -2;
    }
    else {
      v49 = 0;
    }
    v50 = v47 + v49 - 2;
    if (v50 < 0xE) {
      goto LABEL_69;
    }
    if (!a4) {
      v48 = 0;
    }
    v51 = v47 + v48 - 2;
    if (v29 < (unint64_t)a3->u64 + (v51 >> 1) + 1
      && (unint64_t)a3 < (v51 & 0xFFFFFFFFFFFFFFFELL) + v29 + 2)
    {
LABEL_69:
      v52 = (char *)v29;
      v53 = a3;
      goto LABEL_70;
    }
    v55 = (v50 >> 1) + 1;
    if (v50 >= 0x3E)
    {
      v56 = v55 & 0xFFFFFFFFFFFFFFE0;
      v57 = (uint8x8_t *)&a3[1];
      v58 = (uint16x8_t *)(v29 + 32);
      v59 = v55 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v60 = *(uint8x16_t *)v57[-2].i8;
        v61 = vmovl_u8(*v57);
        v62 = vmovl_high_u8(*(uint8x16_t *)v57->i8);
        v58[-2] = vmovl_u8(*(uint8x8_t *)v60.i8);
        v58[-1] = vmovl_high_u8(v60);
        *v58 = v61;
        v58[1] = v62;
        v58 += 4;
        v57 += 4;
        v59 -= 32;
      }
      while (v59);
      if (v55 == v56) {
        goto LABEL_71;
      }
      if ((v55 & 0x18) == 0)
      {
        v53 = (int8x16_t *)((char *)a3 + v56);
        v52 = (char *)(v29 + 2 * v56);
        do
        {
LABEL_70:
          v54 = v53->u8[0];
          v53 = (int8x16_t *)((char *)v53 + 1);
          *(_WORD *)v52 = v54;
          v52 += 2;
        }
        while (v52 != v30);
        goto LABEL_71;
      }
    }
    else
    {
      v56 = 0;
    }
    v52 = (char *)(v29 + 2 * (v55 & 0xFFFFFFFFFFFFFFF8));
    v53 = (int8x16_t *)((char *)a3 + (v55 & 0xFFFFFFFFFFFFFFF8));
    v63 = (uint8x8_t *)&a3->i8[v56];
    v64 = (uint16x8_t *)(v29 + 2 * v56);
    v65 = v56 - (v55 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v66 = *v63++;
      *v64++ = vmovl_u8(v66);
      v65 += 8;
    }
    while (v65);
    if (v55 != (v55 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_70;
    }
LABEL_71:
    if (v21) {
      memset_pattern16(v30, asc_1826CF510, 2 * v21);
    }
    else {
      v21 = 0;
    }
    *(void *)&result = WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(&v30[2 * v21], (unint64_t)a6, v14, a8, (unint64_t)a9, v15, a11, v26, (unint64_t)a12, __n).u64[0];
    return result;
  }
  v32 = (unsigned char *)MEMORY[0x18530ACF0]();
  if (!v32) {
    return result;
  }
  v33 = v32;
  if (v20)
  {
    memset(v32, 32, v20);
    v33 += v20;
    if (!v13)
    {
LABEL_31:
      v34 = &v33[v13];
      if (v21) {
        goto LABEL_32;
      }
LABEL_35:
      if (!v14) {
        goto LABEL_38;
      }
      goto LABEL_36;
    }
  }
  else if (!v13)
  {
    goto LABEL_31;
  }
  if (v13 == 1)
  {
    *v33 = a3->i8[0];
    goto LABEL_31;
  }
  memcpy(v33, a3, v13);
  v34 = &v33[v13];
  if (!v21) {
    goto LABEL_35;
  }
LABEL_32:
  memset(v34, 32, v21);
  v34 += v21;
  if (!v14)
  {
LABEL_38:
    v35 = &v34[v14];
    if (v22) {
      goto LABEL_39;
    }
LABEL_42:
    v36 = v35;
    if (!v15) {
      goto LABEL_45;
    }
    goto LABEL_43;
  }
LABEL_36:
  if (v14 == 1)
  {
    *v34 = *a6;
    goto LABEL_38;
  }
  memcpy(v34, a6, v14);
  v35 = &v34[v14];
  if (!v22) {
    goto LABEL_42;
  }
LABEL_39:
  memset(v35, 32, v22);
  v36 = &v35[v22];
  if (!v15)
  {
LABEL_45:
    v37 = &v36[v15];
    if (v23) {
      goto LABEL_46;
    }
LABEL_49:
    v23 = 0;
    if (!__n) {
      return result;
    }
    goto LABEL_50;
  }
LABEL_43:
  if (v15 == 1)
  {
    *v36 = *a9;
    goto LABEL_45;
  }
  memcpy(v36, a9, v15);
  v37 = &v36[v15];
  if (!v23) {
    goto LABEL_49;
  }
LABEL_46:
  memset(v37, 32, v23);
  if (!__n) {
    return result;
  }
LABEL_50:
  v38 = &v37[v23];
  if (__n == 1)
  {
    *v38 = *a12;
  }
  else
  {
    memcpy(v38, a12, __n);
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(uint64_t this, WGSL::AST::Function *a2)
{
  uint64_t v3 = this;
  v5 = (uint64_t *)(this + 96);
  uint64_t v4 = *(void *)(this + 96);
  if (v4
    || (this = WTF::HashTable<WGSL::Graph::Node *,WGSL::Graph::Node *,WTF::IdentityExtractor,WTF::DefaultHash<WGSL::Graph::Node *>,WTF::HashTraits<WGSL::Graph::Node *>,WTF::HashTraits<WGSL::Graph::Node *>>::rehash((uint64_t *)(this + 96), 8u), (uint64_t v4 = *v5) != 0))
  {
    int v6 = *(_DWORD *)(v4 - 8);
  }
  else
  {
    int v6 = 0;
  }
  unint64_t v7 = ((unint64_t)a2 + ~((void)a2 << 32)) ^ (((unint64_t)a2 + ~((void)a2 << 32)) >> 22);
  unint64_t v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  unint64_t v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  unsigned int v10 = (v9 >> 31) ^ v9;
  unsigned int v11 = v6 & v10;
  v12 = (WGSL::AST::Function **)(v4 + 8 * (v6 & v10));
  v13 = *v12;
  if (*v12)
  {
    v14 = 0;
    int v15 = 1;
    do
    {
      if (v13 == a2) {
        return this;
      }
      if (v13 == (WGSL::AST::Function *)-1) {
        v14 = v12;
      }
      unsigned int v11 = (v11 + v15) & v6;
      v12 = (WGSL::AST::Function **)(v4 + 8 * v11);
      v13 = *v12;
      ++v15;
    }
    while (*v12);
    if (v14)
    {
      *v14 = 0;
      --*(_DWORD *)(*v5 - 16);
      v12 = v14;
    }
  }
  *v12 = a2;
  if (*v5)
  {
    ++*(_DWORD *)(*v5 - 12);
    uint64_t v16 = *v5;
    if (*v5) {
      goto LABEL_14;
    }
  }
  else
  {
    MEMORY[0xFFFFFFFFFFFFFFF4] = 1;
    uint64_t v16 = *v5;
    if (*v5)
    {
LABEL_14:
      uint64_t v17 = (*(_DWORD *)(v16 - 16) + *(_DWORD *)(v16 - 12));
      unint64_t v18 = *(unsigned int *)(v16 - 4);
      if (v18 <= 0x400) {
        goto LABEL_15;
      }
LABEL_20:
      if (v18 > 2 * v17) {
        goto LABEL_23;
      }
      goto LABEL_21;
    }
  }
  uint64_t v17 = *(unsigned int *)(v16 - 16);
  unint64_t v18 = *(unsigned int *)(v16 - 4);
  if (v18 > 0x400) {
    goto LABEL_20;
  }
LABEL_15:
  if (3 * v18 > 4 * v17) {
    goto LABEL_23;
  }
  if (v18)
  {
LABEL_21:
    unsigned int v19 = v18 << (6 * *(_DWORD *)(v16 - 12) >= (2 * v18));
    goto LABEL_22;
  }
  unsigned int v19 = 8;
LABEL_22:
  WTF::HashTable<WGSL::Graph::Node *,WGSL::Graph::Node *,WTF::IdentityExtractor,WTF::DefaultHash<WGSL::Graph::Node *>,WTF::HashTraits<WGSL::Graph::Node *>,WTF::HashTraits<WGSL::Graph::Node *>>::rehash(v5, v19);
LABEL_23:
  uint64_t v20 = *(void *)(v3 + 48);
  if (!*(unsigned char *)(v20 + 392))
  {
    __break(1u);
    JUMPOUT(0x18258A658);
  }
  uint64_t v21 = *(void *)(v20 + 384);
  int v22 = *(_DWORD *)(v21 - 8);
  unsigned int v23 = v22 & v10;
  uint64_t v24 = v21 + 24 * (v22 & v10);
  v25 = *(WGSL::AST::Function **)v24;
  if (*(WGSL::AST::Function **)v24 == a2)
  {
LABEL_28:
    uint64_t v27 = *(unsigned int *)(v24 + 20);
    if (!v27) {
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  int v26 = 1;
  while (v25)
  {
    unsigned int v23 = (v23 + v26) & v22;
    uint64_t v24 = v21 + 24 * v23;
    v25 = *(WGSL::AST::Function **)v24;
    ++v26;
    if (*(WGSL::AST::Function **)v24 == a2) {
      goto LABEL_28;
    }
  }
  uint64_t v24 = v21 + 24 * *(unsigned int *)(v21 - 4);
  uint64_t v27 = *(unsigned int *)(v24 + 20);
  if (v27)
  {
LABEL_31:
    v28 = *(uint64_t **)(v24 + 8);
    uint64_t v29 = 24 * v27;
    do
    {
      uint64_t v30 = *v28;
      v28 += 3;
      (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 48))(v3, v30);
      v29 -= 24;
    }
    while (v29);
  }
LABEL_33:
  uint64_t v31 = *((unsigned int *)a2 + 21);
  if (v31)
  {
    v32 = (void *)*((void *)a2 + 9);
    for (uint64_t i = 8 * v31; i; i -= 8)
    {
      if (*(unsigned char *)(v3 + 32))
      {
        uint64_t v34 = *(void *)(v3 + 40);
        uint64_t v35 = *(void *)(v34 + 8);
        if (!v35) {
          goto LABEL_35;
        }
      }
      else
      {
        (*(void (**)(uint64_t, void))(*(void *)v3 + 88))(v3, *v32);
        uint64_t v34 = *(void *)(v3 + 40);
        uint64_t v35 = *(void *)(v34 + 8);
        if (!v35) {
          goto LABEL_35;
        }
      }
      uint64_t v36 = *(unsigned int *)(v34 + 16);
      if (v36 < *(_DWORD *)(v35 + 4) && !*(void *)v34)
      {
        int v37 = *(_DWORD *)(v35 + 16);
        uint64_t v38 = *(void *)(v35 + 8);
        *(_DWORD *)(v34 + 16) = v36 + 1;
        if ((v37 & 4) != 0) {
          *(unsigned char *)(v38 + v36) = 32;
        }
        else {
          *(_WORD *)(v38 + 2 * v36) = 32;
        }
        goto LABEL_36;
      }
LABEL_35:
      WTF::StringBuilder::append();
LABEL_36:
      ++v32;
    }
  }
  uint64_t v39 = *((void *)a2 + 13);
  if (v39)
  {
    WGSL::Metal::FunctionDefinitionWriter::visit((char *)v3, *(const WGSL::Type **)(v39 + 24));
    v40 = *(WTF::StringBuilder **)(v3 + 40);
    uint64_t v41 = *((void *)a2 + 6);
    if (v41) {
      goto LABEL_48;
    }
LABEL_51:
    uint64_t v42 = *((void *)v40 + 1);
    if (!v42) {
      goto LABEL_52;
    }
    goto LABEL_53;
  }
  WTF::StringBuilder::append();
  v40 = *(WTF::StringBuilder **)(v3 + 40);
  uint64_t v41 = *((void *)a2 + 6);
  if (!v41) {
    goto LABEL_51;
  }
LABEL_48:
  uint64_t v42 = *((void *)v40 + 1);
  if (!v42)
  {
LABEL_52:
    uint64_t v42 = *(void *)v40;
    if (!*(void *)v40) {
      goto LABEL_60;
    }
  }
LABEL_53:
  if ((*(unsigned char *)(v42 + 16) & 4) == 0)
  {
    v43 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v40);
    if (!v43) {
      goto LABEL_106;
    }
    _WORD *v43 = 32;
    v44 = v43 + 1;
    if (!v41)
    {
      uint64_t v72 = 0;
LABEL_105:
      v44[v72] = 40;
LABEL_106:
      uint64_t v80 = *((unsigned int *)a2 + 17);
      if (v80) {
        goto LABEL_107;
      }
      goto LABEL_132;
    }
    v45 = *(int8x16_t **)(v41 + 8);
    uint64_t v46 = *(unsigned int *)(v41 + 4);
    if ((*(unsigned char *)(v41 + 16) & 4) == 0) {
      goto LABEL_57;
    }
    goto LABEL_64;
  }
LABEL_60:
  if (v41)
  {
    if ((*(unsigned char *)(v41 + 16) & 4) == 0)
    {
      v47 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v40);
      if (!v47) {
        goto LABEL_106;
      }
      _WORD *v47 = 32;
      v44 = v47 + 1;
      v45 = *(int8x16_t **)(v41 + 8);
      uint64_t v46 = *(unsigned int *)(v41 + 4);
      if ((*(unsigned char *)(v41 + 16) & 4) == 0)
      {
LABEL_57:
        if (v46)
        {
          if (v46 == 1) {
            _WORD *v44 = v45->i16[0];
          }
          else {
            memcpy(v44, v45, 2 * v46);
          }
        }
        goto LABEL_104;
      }
LABEL_64:
      v48 = &v44[v46];
      if (v46 < 0x40)
      {
        unint64_t v49 = (unint64_t)v44;
      }
      else
      {
        unint64_t v49 = (unint64_t)&v44[v46 & 0xFFFFFFC0];
        long long v50 = 0uLL;
        v51 = (char *)v44;
        do
        {
          v109.val[0] = *v45;
          int8x16_t v52 = v45[1];
          v110.val[0] = v45[2];
          int8x16_t v53 = v45[3];
          v45 += 4;
          int8x16_t v54 = v53;
          v110.val[1] = 0uLL;
          v111.val[0] = v52;
          v109.val[1] = 0uLL;
          v55 = v51;
          vst2q_s8(v55, v109);
          v55 += 32;
          v111.val[1] = 0uLL;
          vst2q_s8(v55, v111);
          v56 = v51 + 64;
          vst2q_s8(v56, v110);
          v57 = v51 + 96;
          vst2q_s8(v57, *(int8x16x2_t *)(&v50 - 1));
          v51 += 128;
        }
        while (v51 != (char *)v49);
      }
      if ((_WORD *)v49 == v48) {
        goto LABEL_104;
      }
      unint64_t v73 = (unint64_t)&v44[v46 - 1] - v49;
      if (v73 < 0xE
        || (v49 < (unint64_t)v45->u64 + (v73 >> 1) + 1
          ? (BOOL v74 = (unint64_t)v45 >= (v73 & 0xFFFFFFFFFFFFFFFELL) + v49 + 2)
          : (BOOL v74 = 1),
            !v74))
      {
        v77 = (_WORD *)v49;
        v78 = v45;
        goto LABEL_98;
      }
      uint64_t v75 = (v73 >> 1) + 1;
      if (v73 >= 0x3E)
      {
        unint64_t v76 = v75 & 0xFFFFFFFFFFFFFFE0;
        v88 = (uint8x8_t *)&v45[1];
        v89 = (uint16x8_t *)(v49 + 32);
        unint64_t v90 = v75 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v91 = *(uint8x16_t *)v88[-2].i8;
          uint16x8_t v92 = vmovl_u8(*v88);
          uint16x8_t v93 = vmovl_high_u8(*(uint8x16_t *)v88->i8);
          v89[-2] = vmovl_u8(*(uint8x8_t *)v91.i8);
          v89[-1] = vmovl_high_u8(v91);
          uint16x8_t *v89 = v92;
          v89[1] = v93;
          v89 += 4;
          v88 += 4;
          v90 -= 32;
        }
        while (v90);
        if (v75 == v76) {
          goto LABEL_104;
        }
        if ((v75 & 0x18) == 0)
        {
          v78 = (int8x16_t *)((char *)v45 + v76);
          v77 = (_WORD *)(v49 + 2 * v76);
          do
          {
LABEL_98:
            __int16 v79 = v78->u8[0];
            v78 = (int8x16_t *)((char *)v78 + 1);
            *v77++ = v79;
          }
          while (v77 != v48);
LABEL_104:
          uint64_t v72 = *(unsigned int *)(v41 + 4);
          goto LABEL_105;
        }
      }
      else
      {
        unint64_t v76 = 0;
      }
      v77 = (_WORD *)(v49 + 2 * (v75 & 0xFFFFFFFFFFFFFFF8));
      v78 = (int8x16_t *)((char *)v45 + (v75 & 0xFFFFFFFFFFFFFFF8));
      v94 = (uint8x8_t *)&v45->i8[v76];
      v95 = (uint16x8_t *)(v49 + 2 * v76);
      unint64_t v96 = v76 - (v75 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint8x8_t v97 = *v94++;
        *v95++ = vmovl_u8(v97);
        v96 += 8;
      }
      while (v96);
      if (v75 == (v75 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_104;
      }
      goto LABEL_98;
    }
    v61 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!v61) {
      goto LABEL_106;
    }
    v59 = v61;
    unsigned char *v61 = 32;
    v62 = (int8x16_t *)(v61 + 1);
    v63 = *(int8x16_t **)(v41 + 8);
    size_t v64 = *(unsigned int *)(v41 + 4);
    if ((*(unsigned char *)(v41 + 16) & 4) != 0)
    {
      if (v64)
      {
        if (v64 == 1) {
          v62->i8[0] = v63->i8[0];
        }
        else {
          memcpy(v62, v63, v64);
        }
      }
      goto LABEL_130;
    }
    v65 = (int8x16_t *)((char *)v62 + v64);
    if (v64 >= 0x10)
    {
      v66 = (int8x16_t *)((char *)v62 + (v64 & 0xFFFFFFF0));
      do
      {
        unsigned long long v67 = (unsigned __int128)vld2q_s8(v63->i8);
        v63 += 2;
        *v62++ = (int8x16_t)v67;
      }
      while (v62 != v66);
      v62 = v66;
    }
    if (v62 == v65)
    {
LABEL_130:
      uint64_t v60 = *(unsigned int *)(v41 + 4);
      goto LABEL_131;
    }
    size_t v68 = &v59[v64] - (unsigned char *)v62;
    unint64_t v69 = v68 + 1;
    if (v68 + 1 < 8
      || (v62 < (int8x16_t *)&v63->i16[v68 + 1] ? (BOOL v70 = v63 >= (int8x16_t *)&v59[v64 + 1]) : (BOOL v70 = 1), !v70))
    {
      v85 = v62;
      v86 = v63;
      goto LABEL_127;
    }
    if (v69 >= 0x20)
    {
      unint64_t v71 = v69 & 0xFFFFFFFFFFFFFFE0;
      v98 = v63 + 2;
      v99 = v62 + 1;
      unint64_t v100 = v69 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v102 = v98[-2];
        int8x16_t v101 = v98[-1];
        int8x16_t v104 = *v98;
        int8x16_t v103 = v98[1];
        v98 += 4;
        v99[-1] = vuzp1q_s8(v102, v101);
        int8x16_t *v99 = vuzp1q_s8(v104, v103);
        v99 += 2;
        v100 -= 32;
      }
      while (v100);
      if (v69 == v71) {
        goto LABEL_130;
      }
      if ((v69 & 0x18) == 0)
      {
        v86 = (int8x16_t *)((char *)v63 + 2 * v71);
        v85 = (int8x16_t *)((char *)v62 + v71);
        do
        {
LABEL_127:
          __int8 v87 = v86->i8[0];
          v86 = (int8x16_t *)((char *)v86 + 2);
          v85->i8[0] = v87;
          v85 = (int8x16_t *)((char *)v85 + 1);
        }
        while (v85 != v65);
        goto LABEL_130;
      }
    }
    else
    {
      unint64_t v71 = 0;
    }
    v85 = (int8x16_t *)((char *)v62 + (v69 & 0xFFFFFFFFFFFFFFF8));
    v86 = (int8x16_t *)((char *)v63 + 2 * (v69 & 0xFFFFFFFFFFFFFFF8));
    v105 = (int16x8_t *)((char *)v63 + 2 * v71);
    v106 = (int8x8_t *)&v62->i8[v71];
    unint64_t v107 = v71 - (v69 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v108 = *v105++;
      *v106++ = vmovn_s16(v108);
      v107 += 8;
    }
    while (v107);
    if (v69 == (v69 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_130;
    }
    goto LABEL_127;
  }
  v58 = (unsigned char *)MEMORY[0x18530ACF0]();
  if (!v58) {
    goto LABEL_106;
  }
  v59 = v58;
  uint64_t v60 = 0;
  unsigned char *v58 = 32;
LABEL_131:
  v59[v60 + 1] = 40;
  uint64_t v80 = *((unsigned int *)a2 + 17);
  if (v80)
  {
LABEL_107:
    v81 = (WGSL::AST::Parameter **)*((void *)a2 + 7);
    switch(*((unsigned char *)*v81 + 24))
    {
      case 0:
      case 3:
        if (*(unsigned char *)(v3 + 32)) {
          goto LABEL_114;
        }
        (*(void (**)(uint64_t))(*(void *)v3 + 344))(v3);
        if (v80 != 1) {
          goto LABEL_115;
        }
        break;
      case 1:
        if (!*(unsigned char *)(v3 + 32)) {
          (*(void (**)(uint64_t))(*(void *)v3 + 344))(v3);
        }
        WTF::StringBuilder::append();
        goto LABEL_114;
      case 2:
        WGSL::Metal::FunctionDefinitionWriter::visitArgumentBufferParameter((WGSL::Metal::FunctionDefinitionWriter *)v3, *v81);
        if (v80 == 1) {
          break;
        }
        goto LABEL_115;
      default:
LABEL_114:
        if (v80 != 1)
        {
LABEL_115:
          v82 = v81 + 1;
          uint64_t v83 = 8 * v80 - 8;
          do
          {
            v84 = *v82;
            WTF::StringBuilder::append();
            switch(*((unsigned char *)v84 + 24))
            {
              case 0:
              case 3:
                if (!*(unsigned char *)(v3 + 32)) {
                  (*(void (**)(uint64_t, WGSL::AST::Parameter *))(*(void *)v3 + 344))(v3, v84);
                }
                break;
              case 1:
                if (!*(unsigned char *)(v3 + 32)) {
                  (*(void (**)(uint64_t, WGSL::AST::Parameter *))(*(void *)v3 + 344))(v3, v84);
                }
                WTF::StringBuilder::append();
                break;
              case 2:
                WGSL::Metal::FunctionDefinitionWriter::visitArgumentBufferParameter((WGSL::Metal::FunctionDefinitionWriter *)v3, v84);
                break;
              default:
                break;
            }
            ++v82;
            v83 -= 8;
          }
          while (v83);
        }
        break;
    }
  }
LABEL_132:
  if (*(unsigned char *)(v3 + 67)) {
    *(unsigned char *)(v3 + 67) = 0;
  }
  *(void *)(v3 + 72) = a2;
  WTF::StringBuilder::append();
  if (!*(unsigned char *)(v3 + 32)) {
    (*(void (**)(uint64_t, void))(*(void *)v3 + 400))(v3, *((void *)a2 + 14));
  }
  this = WTF::StringBuilder::append();
  *(void *)(v3 + 72) = 0;
  return this;
}

char *WGSL::Metal::FunctionDefinitionWriter::visit(char *this, const WGSL::Type *a2)
{
  uint64_t v3 = (uint64_t)this;
  *(void *)&v213[4] = *MEMORY[0x1E4F143B8];
  while (1)
  {
    int v4 = *((_DWORD *)a2 + 12);
    uint64_t v5 = v4 == -1 ? -1 : *((unsigned int *)a2 + 12);
    if (v5 != 10) {
      break;
    }
    if (v4 != 10) {
      goto LABEL_276;
    }
    unint64_t v6 = *(char *)a2;
    if (v6 < 6 && ((0x3Du >> v6) & 1) != 0)
    {
      unint64_t v7 = off_1E521DDE0[v6];
      int v8 = dword_1826CF5D8[v6];
      if (!*((unsigned char *)a2 + 1)) {
        WTF::StringBuilder::append();
      }
      unint64_t v9 = *(WTF::StringBuilder **)(v3 + 40);
      v211 = v7;
      int v212 = v8;
      LOBYTE(v209) = 32;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v9, (unint64_t *)&v211, (char *)&v209);
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *((const WGSL::Type **)a2 + 1));
      this = *(char **)(v3 + 40);
      LOBYTE(v211) = 38;
      uint64_t v10 = *((void *)this + 1);
      if (v10)
      {
        uint64_t v11 = *((unsigned int *)this + 4);
        if (v11 < *(_DWORD *)(v10 + 4) && !*(void *)this)
        {
          int v12 = *(_DWORD *)(v10 + 16);
          uint64_t v13 = *(void *)(v10 + 8);
          *((_DWORD *)this + 4) = v11 + 1;
          if ((v12 & 4) != 0) {
            *(unsigned char *)(v13 + v11) = 38;
          }
          else {
            *(_WORD *)(v13 + 2 * v11) = 38;
          }
          return this;
        }
      }
      return (char *)WTF::StringBuilder::append();
    }
    a2 = (const WGSL::Type *)*((void *)a2 + 1);
  }
  switch(v5)
  {
    case 1:
      if (v4 != 1) {
        goto LABEL_276;
      }
      uint64_t v15 = *(void *)a2;
      if ((this[61] && (this[60] | 2) == 7 || this[63] && this[62] == 1 || this[65] && this[64] == 3)
        && *((unsigned char *)a2 + 8) == 3)
      {
        if (!*(_DWORD *)(v15 + 48))
        {
          switch(*(unsigned char *)v15)
          {
            case 0:
            case 1:
              uint64_t v16 = (WTF::StringBuilder *)*((void *)this + 5);
              v211 = "packed_int";
              int v17 = 10;
              goto LABEL_206;
            case 2:
              v151 = "packed_uint";
              goto LABEL_205;
            case 3:
            case 5:
              uint64_t v16 = (WTF::StringBuilder *)*((void *)this + 5);
              v211 = "packed_float";
              int v17 = 12;
              goto LABEL_206;
            case 4:
              v151 = "packed_half";
LABEL_205:
              uint64_t v16 = (WTF::StringBuilder *)*((void *)this + 5);
              v211 = v151;
              int v17 = 11;
LABEL_206:
              int v212 = v17;
              LOBYTE(v209) = 3;
              this = WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<unsigned char,void>>(v16, (unint64_t *)&v211, (unsigned __int8 *)&v209);
              break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 0xA:
            case 0xB:
            case 0xC:
            case 0xD:
              __break(0xC471u);
              JUMPOUT(0x18258BB94);
            default:
              return this;
          }
          return this;
        }
LABEL_276:
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      WTF::StringBuilder::append();
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *(const WGSL::Type **)a2);
      int v84 = 0;
      v85 = *(WTF::StringBuilder **)(v3 + 40);
      unsigned __int8 v86 = *((unsigned char *)a2 + 8);
      unsigned __int8 v87 = v86;
      do
      {
        ++v84;
        unsigned int v88 = v87;
        v87 /= 0xAu;
      }
      while (v88 > 9);
      uint64_t v89 = *((void *)v85 + 1);
      if ((v89 || (uint64_t v89 = *(void *)v85) != 0) && (*(unsigned char *)(v89 + 16) & 4) == 0)
      {
        this = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v85);
        if (!this) {
          return this;
        }
        uint64_t v90 = 0;
        *(_DWORD *)this = 2097196;
        uint64_t v91 = 4;
        uint64_t v92 = 1;
        unsigned __int8 v93 = v86;
        do
        {
          uint64_t v94 = v91;
          uint64_t v95 = v90;
          uint64_t v96 = v92;
          unsigned int v97 = v93;
          --v91;
          *((unsigned char *)&v211 + v91) = (v93 % 0xAu) | 0x30;
          ++v90;
          ++v92;
          v93 /= 0xAu;
        }
        while (v97 > 9);
        v98 = this + 4;
        if (v94 > 4) {
          goto LABEL_263;
        }
        unint64_t v99 = v95 + 1;
        if ((unint64_t)(v95 + 1) < 8)
        {
          uint64_t v100 = v91;
          int8x16_t v101 = this + 4;
          goto LABEL_262;
        }
        if (v99 >= 0x20)
        {
          unint64_t v152 = v99 & 0xFFFFFFFFFFFFFFE0;
          v163 = (uint16x8_t *)(this + 36);
          unint64_t v164 = v96 & 0xFFFFFFFFFFFFFFE0;
          v165 = (uint8x8_t *)((char *)&v211 - v95 + 19);
          do
          {
            uint8x16_t v166 = *(uint8x16_t *)v165[-2].i8;
            uint16x8_t v167 = vmovl_u8(*v165);
            uint16x8_t v168 = vmovl_high_u8(*(uint8x16_t *)v165->i8);
            v163[-2] = vmovl_u8(*(uint8x8_t *)v166.i8);
            v163[-1] = vmovl_high_u8(v166);
            uint16x8_t *v163 = v167;
            v163[1] = v168;
            v163 += 4;
            v165 += 4;
            v164 -= 32;
          }
          while (v164);
          if (v99 == v152) {
            goto LABEL_263;
          }
          if ((v99 & 0x18) == 0)
          {
            int8x16_t v101 = &v98[2 * v152];
            uint64_t v100 = v91 + v152;
            do
            {
LABEL_262:
              *(_WORD *)int8x16_t v101 = *((unsigned __int8 *)&v211 + v100);
              v101 += 2;
              ++v100;
            }
            while (v100 != 4);
            goto LABEL_263;
          }
        }
        else
        {
          unint64_t v152 = 0;
        }
        uint64_t v100 = v91 + (v99 & 0xFFFFFFFFFFFFFFF8);
        int8x16_t v101 = &v98[2 * (v99 & 0xFFFFFFFFFFFFFFF8)];
        v169 = (uint16x8_t *)&this[2 * v152 + 4];
        unint64_t v170 = v152 - (v96 & 0xFFFFFFFFFFFFFFF8);
        v171 = (char *)&v211 + v152;
        do
        {
          *v169++ = vmovl_u8(*(uint8x8_t *)&v171[v91]);
          v171 += 8;
          v170 += 8;
        }
        while (v170);
        if (v99 != (v99 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_262;
        }
LABEL_263:
        int v205 = 0;
        do
        {
          ++v205;
          unsigned int v207 = v86;
          v86 /= 0xAu;
        }
        while (v207 > 9);
LABEL_265:
        *(_WORD *)&v98[2 * v205] = 62;
        return this;
      }
      this = (char *)MEMORY[0x18530ACF0]();
      if (!this) {
        return this;
      }
      uint64_t v138 = 0;
      *(_WORD *)this = 8236;
      unsigned __int8 v139 = v86;
      do
      {
        unsigned int v140 = v139;
        *((unsigned char *)&v211 + v138-- + 3) = (v139 % 0xAu) | 0x30;
        v139 /= 0xAu;
      }
      while (v140 > 9);
      v112 = this + 2;
      if (v138 + 5 <= 4) {
        this = (char *)memcpy(this + 2, (char *)&v211 + v138 + 4, -v138);
      }
      unsigned int v113 = 0;
      do
      {
        ++v113;
        unsigned int v141 = v86;
        v86 /= 0xAu;
      }
      while (v141 > 9);
      goto LABEL_175;
    case 2:
      if (v4 != 2) {
        goto LABEL_276;
      }
      WTF::StringBuilder::append();
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *(const WGSL::Type **)a2);
      int v18 = 0;
      unsigned int v19 = *(WTF::StringBuilder **)(v3 + 40);
      unsigned __int8 v20 = *((unsigned char *)a2 + 8);
      unsigned __int8 v21 = *((unsigned char *)a2 + 9);
      unsigned __int8 v22 = v20;
      do
      {
        ++v18;
        unsigned int v23 = v22;
        v22 /= 0xAu;
      }
      while (v23 > 9);
      int v24 = 0;
      unsigned __int8 v25 = v21;
      do
      {
        ++v24;
        unsigned int v26 = v25;
        v25 /= 0xAu;
      }
      while (v26 > 9);
      uint64_t v27 = *((void *)v19 + 1);
      if (!v27 && (uint64_t v27 = *(void *)v19) == 0 || (*(unsigned char *)(v27 + 16) & 4) != 0)
      {
        this = (char *)MEMORY[0x18530ACF0]();
        if (!this) {
          return this;
        }
        uint64_t v102 = 0;
        *(_WORD *)this = 8236;
        unsigned __int8 v103 = v20;
        do
        {
          unsigned int v104 = v103;
          *((unsigned char *)&v211 + v102-- + 3) = (v103 % 0xAu) | 0x30;
          v103 /= 0xAu;
        }
        while (v104 > 9);
        v105 = this + 2;
        if (v102 + 5 <= 4) {
          this = (char *)memcpy(this + 2, (char *)&v211 + v102 + 4, -v102);
        }
        int v106 = 0;
        do
        {
          ++v106;
          unsigned int v107 = v20;
          v20 /= 0xAu;
        }
        while (v107 > 9);
        uint64_t v108 = 0;
        int8x16x2_t v109 = &v105[v106];
        *(_WORD *)int8x16x2_t v109 = 8236;
        unsigned __int8 v110 = v21;
        do
        {
          unsigned int v111 = v110;
          *((unsigned char *)&v211 + v108-- + 3) = (v110 % 0xAu) | 0x30;
          v110 /= 0xAu;
        }
        while (v111 > 9);
        v112 = v109 + 2;
        if (v108 + 5 <= 4) {
          this = (char *)memcpy(v112, (char *)&v211 + v108 + 4, -v108);
        }
        unsigned int v113 = 0;
        do
        {
          ++v113;
          unsigned int v114 = v21;
          v21 /= 0xAu;
        }
        while (v114 > 9);
LABEL_175:
        *((unsigned char *)v112 + v113) = 62;
        return this;
      }
      this = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v19);
      if (!this) {
        return this;
      }
      uint64_t v28 = 0;
      *(_DWORD *)this = 2097196;
      uint64_t v29 = 4;
      uint64_t v30 = 1;
      unsigned __int8 v31 = v20;
      do
      {
        uint64_t v32 = v29;
        uint64_t v33 = v28;
        uint64_t v34 = v30;
        unsigned int v35 = v31;
        --v29;
        *((unsigned char *)&v211 + v29) = (v31 % 0xAu) | 0x30;
        ++v28;
        ++v30;
        v31 /= 0xAu;
      }
      while (v35 > 9);
      uint64_t v36 = this + 4;
      if (v32 > 4) {
        goto LABEL_239;
      }
      unint64_t v37 = v33 + 1;
      if ((unint64_t)(v33 + 1) < 8)
      {
        uint64_t v38 = v29;
        uint64_t v39 = this + 4;
        goto LABEL_238;
      }
      if (v37 >= 0x20)
      {
        unint64_t v150 = v37 & 0xFFFFFFFFFFFFFFE0;
        v153 = (uint16x8_t *)(this + 36);
        unint64_t v154 = v34 & 0xFFFFFFFFFFFFFFE0;
        v155 = (uint8x8_t *)((char *)&v211 - v33 + 19);
        do
        {
          uint8x16_t v156 = *(uint8x16_t *)v155[-2].i8;
          uint16x8_t v157 = vmovl_u8(*v155);
          uint16x8_t v158 = vmovl_high_u8(*(uint8x16_t *)v155->i8);
          v153[-2] = vmovl_u8(*(uint8x8_t *)v156.i8);
          v153[-1] = vmovl_high_u8(v156);
          uint16x8_t *v153 = v157;
          v153[1] = v158;
          v153 += 4;
          v155 += 4;
          v154 -= 32;
        }
        while (v154);
        if (v37 == v150) {
          goto LABEL_239;
        }
        if ((v37 & 0x18) == 0)
        {
          uint64_t v39 = &v36[2 * v150];
          uint64_t v38 = v29 + v150;
          do
          {
LABEL_238:
            *(_WORD *)uint64_t v39 = *((unsigned __int8 *)&v211 + v38);
            v39 += 2;
            ++v38;
          }
          while (v38 != 4);
          goto LABEL_239;
        }
      }
      else
      {
        unint64_t v150 = 0;
      }
      uint64_t v38 = v29 + (v37 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v39 = &v36[2 * (v37 & 0xFFFFFFFFFFFFFFF8)];
      v159 = (uint16x8_t *)&this[2 * v150 + 4];
      unint64_t v160 = v150 - (v34 & 0xFFFFFFFFFFFFFFF8);
      v161 = (char *)&v211 + v150;
      do
      {
        *v159++ = vmovl_u8(*(uint8x8_t *)&v161[v29]);
        v161 += 8;
        v160 += 8;
      }
      while (v160);
      if (v37 != (v37 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_238;
      }
LABEL_239:
      unsigned int v181 = 0;
      do
      {
        ++v181;
        unsigned int v182 = v20;
        v20 /= 0xAu;
      }
      while (v182 > 9);
      uint64_t v183 = 0;
      v184 = &v36[2 * v181];
      *(_DWORD *)v184 = 2097196;
      uint64_t v185 = 4;
      uint64_t v186 = 1;
      unsigned __int8 v187 = v21;
      do
      {
        uint64_t v188 = v185;
        uint64_t v189 = v183;
        uint64_t v190 = v186;
        unsigned int v191 = v187;
        --v185;
        *((unsigned char *)&v211 + v185) = (v187 % 0xAu) | 0x30;
        ++v183;
        ++v186;
        v187 /= 0xAu;
      }
      while (v191 > 9);
      v98 = v184 + 4;
      if (v188 > 4) {
        goto LABEL_258;
      }
      unint64_t v192 = v189 + 1;
      if ((unint64_t)(v189 + 1) < 8)
      {
        uint64_t v193 = v185;
        v194 = v98;
        goto LABEL_257;
      }
      if (v192 >= 0x20)
      {
        unint64_t v195 = v192 & 0xFFFFFFFFFFFFFFE0;
        v196 = (uint16x8_t *)&this[2 * v181 + 40];
        unint64_t v197 = v190 & 0xFFFFFFFFFFFFFFE0;
        v198 = (uint8x8_t *)((char *)&v211 - v189 + 19);
        do
        {
          uint8x16_t v199 = *(uint8x16_t *)v198[-2].i8;
          uint16x8_t v200 = vmovl_u8(*v198);
          uint16x8_t v201 = vmovl_high_u8(*(uint8x16_t *)v198->i8);
          v196[-2] = vmovl_u8(*(uint8x8_t *)v199.i8);
          v196[-1] = vmovl_high_u8(v199);
          uint16x8_t *v196 = v200;
          v196[1] = v201;
          v196 += 4;
          v198 += 4;
          v197 -= 32;
        }
        while (v197);
        if (v192 == v195) {
          goto LABEL_258;
        }
        if ((v192 & 0x18) == 0)
        {
          v194 = &v98[2 * v195];
          uint64_t v193 = v185 + v195;
          do
          {
LABEL_257:
            *(_WORD *)v194 = *((unsigned __int8 *)&v211 + v193);
            v194 += 2;
            ++v193;
          }
          while (v193 != 4);
LABEL_258:
          int v205 = 0;
          do
          {
            ++v205;
            unsigned int v206 = v21;
            v21 /= 0xAu;
          }
          while (v206 > 9);
          goto LABEL_265;
        }
      }
      else
      {
        unint64_t v195 = 0;
      }
      uint64_t v193 = v185 + (v192 & 0xFFFFFFFFFFFFFFF8);
      v194 = &v98[2 * (v192 & 0xFFFFFFFFFFFFFFF8)];
      v202 = (uint16x8_t *)&this[2 * v195 + 8 + 2 * v181];
      unint64_t v203 = v195 - (v190 & 0xFFFFFFFFFFFFFFF8);
      v204 = (char *)&v211 + v195;
      do
      {
        *v202++ = vmovl_u8(*(uint8x8_t *)&v204[v185]);
        v204 += 8;
        v203 += 8;
      }
      while (v203);
      if (v192 == (v192 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_258;
      }
      goto LABEL_257;
    case 3:
      if (v4 != 3) {
        goto LABEL_276;
      }
      WTF::StringBuilder::append();
      uint64_t v40 = *(void *)a2;
      if (*(void *)a2
        && *(_DWORD *)(v40 + 48) == 1
        && *(unsigned char *)(v40 + 8) == 3
        && (*(unsigned char *)(v3 + 61) && (*(unsigned __int8 *)(v3 + 60) | 2) == 7
         || *(unsigned char *)(v3 + 63) && *(unsigned char *)(v3 + 62) == 1
         || *(unsigned char *)(v3 + 65) && *(unsigned char *)(v3 + 64) == 3))
      {
        WTF::StringBuilder::append();
        WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *(const WGSL::Type **)v40);
        WTF::StringBuilder::append();
      }
      else
      {
        WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *(const WGSL::Type **)a2);
      }
      WTF::StringBuilder::append();
      int v65 = *((_DWORD *)a2 + 4);
      if (v65 == -1) {
        uint64_t v66 = -1;
      }
      else {
        uint64_t v66 = *((unsigned int *)a2 + 4);
      }
      if (v66 == 2)
      {
        if (v65 != 2) {
          goto LABEL_276;
        }
        (*(void (**)(uint64_t, void))(*(void *)v3 + 208))(v3, *((void *)a2 + 1));
      }
      else if (v66 == 1)
      {
        if (v65 != 1) {
          goto LABEL_276;
        }
        int v67 = 0;
        unsigned int v68 = *((_DWORD *)a2 + 2);
        unint64_t v69 = *(WTF::StringBuilder **)(v3 + 40);
        int v70 = -1;
        unsigned int v71 = v68;
        do
        {
          ++v67;
          --v70;
          BOOL v72 = v71 > 9;
          v71 /= 0xAu;
        }
        while (v72);
        uint64_t v73 = *((void *)v69 + 1);
        if ((v73 || (uint64_t v73 = *(void *)v69) != 0) && (*(unsigned char *)(v73 + 16) & 4) == 0)
        {
          uint64_t v74 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v69);
          if (v74)
          {
            uint64_t v75 = 0;
            uint64_t v76 = 13;
            uint64_t v77 = 1;
            do
            {
              uint64_t v78 = v76;
              uint64_t v79 = v75;
              uint64_t v80 = v77;
              --v76;
              *((unsigned char *)&v211 + v76) = (v68 % 0xA) | 0x30;
              ++v75;
              ++v77;
              BOOL v72 = v68 > 9;
              v68 /= 0xAu;
            }
            while (v72);
            if (v78 <= 13)
            {
              unint64_t v81 = v79 + 1;
              if ((unint64_t)(v79 + 1) < 8)
              {
                uint64_t v82 = v76;
                uint64_t v83 = (_WORD *)v74;
                goto LABEL_267;
              }
              if (v81 >= 0x20)
              {
                unint64_t v162 = v81 & 0xFFFFFFFFFFFFFFE0;
                v172 = (uint16x8_t *)(v74 + 32);
                unint64_t v173 = v80 & 0xFFFFFFFFFFFFFFE0;
                v174 = (uint8x8_t *)((char *)&v211 - v79 + 28);
                do
                {
                  uint8x16_t v175 = *(uint8x16_t *)v174[-2].i8;
                  uint16x8_t v176 = vmovl_u8(*v174);
                  uint16x8_t v177 = vmovl_high_u8(*(uint8x16_t *)v174->i8);
                  v172[-2] = vmovl_u8(*(uint8x8_t *)v175.i8);
                  v172[-1] = vmovl_high_u8(v175);
                  uint16x8_t *v172 = v176;
                  v172[1] = v177;
                  v172 += 4;
                  v174 += 4;
                  v173 -= 32;
                }
                while (v173);
                if (v81 == v162) {
                  goto LABEL_163;
                }
                if ((v81 & 0x18) == 0)
                {
                  uint64_t v83 = (_WORD *)(v74 + 2 * v162);
                  uint64_t v82 = v76 + v162;
                  do
LABEL_267:
                    *v83++ = *((unsigned __int8 *)&v211 + v82++);
                  while (v82 != 13);
                  goto LABEL_163;
                }
              }
              else
              {
                unint64_t v162 = 0;
              }
              uint64_t v82 = v76 + (v81 & 0xFFFFFFFFFFFFFFF8);
              uint64_t v83 = (_WORD *)(v74 + 2 * (v81 & 0xFFFFFFFFFFFFFFF8));
              unint64_t v178 = v162 - (v80 & 0xFFFFFFFFFFFFFFF8);
              v179 = (char *)&v211 + v162;
              v180 = (uint16x8_t *)(v74 + 2 * v162);
              do
              {
                *v180++ = vmovl_u8(*(uint8x8_t *)&v179[v76]);
                v179 += 8;
                v178 += 8;
              }
              while (v178);
              if (v81 != (v81 & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_267;
              }
            }
          }
        }
        else
        {
          v142 = (void *)MEMORY[0x18530ACF0]();
          if (v142)
          {
            uint64_t v143 = 0;
            do
            {
              v213[v143--] = (v68 % 0xA) | 0x30;
              BOOL v72 = v68 > 9;
              v68 /= 0xAu;
            }
            while (v72);
            if (v143 + 14 <= 13) {
              memcpy(v142, &v213[v143 + 1], -v143);
            }
          }
        }
      }
      else
      {
        if (v65) {
          goto LABEL_276;
        }
        v133 = *(WTF::StringBuilder **)(v3 + 40);
        LODWORD(v211) = 1;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<int,void>>(v133, (unsigned int *)&v211);
      }
LABEL_163:
      this = *(char **)(v3 + 40);
      LOBYTE(v211) = 62;
      uint64_t v134 = *((void *)this + 1);
      if (!v134) {
        return (char *)WTF::StringBuilder::append();
      }
      uint64_t v135 = *((unsigned int *)this + 4);
      if (v135 >= *(_DWORD *)(v134 + 4) || *(void *)this) {
        return (char *)WTF::StringBuilder::append();
      }
      int v136 = *(_DWORD *)(v134 + 16);
      uint64_t v137 = *(void *)(v134 + 8);
      *((_DWORD *)this + 4) = v135 + 1;
      if ((v136 & 4) != 0) {
        *(unsigned char *)(v137 + v135) = 62;
      }
      else {
        *(_WORD *)(v137 + 2 * v135) = 62;
      }
      return this;
    case 4:
      if (v4 != 4) {
        goto LABEL_276;
      }
      uint64_t v41 = (WTF::StringBuilder *)*((void *)this + 5);
      v211 = *(const char **)(*(void *)a2 + 48);
      this = (char *)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v41, (uint64_t *)&v211);
      if ((*(unsigned char *)(v3 + 61) && (*(unsigned __int8 *)(v3 + 60) | 2) == 7
         || *(unsigned char *)(v3 + 63) && *(unsigned char *)(v3 + 62) == 1
         || *(unsigned char *)(v3 + 65) && *(unsigned char *)(v3 + 64) == 3)
        && *(unsigned char *)(*(void *)a2 + 88) == 6)
      {
LABEL_89:
        return (char *)WTF::StringBuilder::append();
      }
      return this;
    case 5:
      if (v4 != 5) {
        goto LABEL_276;
      }
      uint64_t v42 = (WTF::StringBuilder *)*((void *)this + 5);
      v211 = *(const char **)a2;
      LOBYTE(v209) = 60;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(v42, (uint64_t *)&v211, (char *)&v209);
      v43 = (unsigned int *)*((void *)a2 + 2);
      if (v43) {
        v44 = (const WGSL::Type **)(v43 + 2);
      }
      else {
        v44 = 0;
      }
      if (v43)
      {
        uint64_t v45 = (uint64_t)&v43[2 * *v43 + 2];
        if (v44 == (const WGSL::Type **)v45) {
          goto LABEL_163;
        }
      }
      else
      {
        uint64_t v45 = 0;
        if (!v44) {
          goto LABEL_163;
        }
      }
      v131 = *v44;
      v130 = v44 + 1;
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, v131);
      while (v130 != (const WGSL::Type **)v45)
      {
        WTF::StringBuilder::append();
        v132 = *v130++;
        WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, v132);
      }
      goto LABEL_163;
    case 6:
      if (v4 == 6)
      {
        __break(0xC471u);
        JUMPOUT(0x18258BB1CLL);
      }
      goto LABEL_276;
    case 7:
      if (v4 != 7) {
        goto LABEL_276;
      }
      unsigned int v46 = *((unsigned __int8 *)a2 + 8) - 1;
      if (v46 >= 7)
      {
        uint64_t v50 = 0;
        v51 = 0;
        int v49 = 6;
        v48 = "sample";
      }
      else
      {
        uint64_t v47 = (char)v46;
        v48 = off_1E521DD10[v47];
        int v49 = dword_1826CF520[(char)v46];
        uint64_t v50 = *(void *)((char *)&unk_1826CF540 + v47 * 8);
        v51 = off_1E521DD48[v47];
      }
      v115 = (WTF::StringBuilder *)*((void *)this + 5);
      v211 = v51;
      BOOL v116 = v50 != 0;
      int v117 = v50 - 1;
      if (!v116) {
        int v117 = 0;
      }
      int v212 = v117;
      LOBYTE(v209) = 60;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v115, (unint64_t *)&v211, (char *)&v209);
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *(const WGSL::Type **)a2);
      v118 = *(WTF::StringBuilder **)(v3 + 40);
      v211 = ", access::";
      int v212 = 10;
      v209 = v48;
      int v210 = v49;
      goto LABEL_150;
    case 8:
      if (v4 != 8) {
        goto LABEL_276;
      }
      if ((*(unsigned char *)a2 - 1) > 3u)
      {
        uint64_t v53 = 0;
        int8x16_t v54 = 0;
        unint64_t v55 = *((char *)a2 + 2);
        if (v55 > 2) {
          goto LABEL_81;
        }
      }
      else
      {
        uint64_t v52 = (char)(*(unsigned char *)a2 - 1);
        uint64_t v53 = *(void *)((char *)&unk_1826CF578 + v52 * 8);
        int8x16_t v54 = off_1E521DD80[v52];
        unint64_t v55 = *((char *)a2 + 2);
        if (v55 > 2)
        {
LABEL_81:
          uint64_t v56 = 0;
          v57 = 0;
          goto LABEL_141;
        }
      }
      unint64_t v119 = v55;
      uint64_t v56 = *(void *)((char *)&unk_1826CF598 + v119 * 8);
      v57 = off_1E521DDA0[v119];
LABEL_141:
      v120 = (WTF::StringBuilder *)*((void *)this + 5);
      v211 = v54;
      BOOL v116 = v53 != 0;
      int v121 = v53 - 1;
      if (!v116) {
        int v121 = 0;
      }
      int v212 = v121;
      LOBYTE(v209) = 60;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v120, (unint64_t *)&v211, (char *)&v209);
      v122 = *(const WGSL::Type ***)(v3 + 48);
      int v123 = 1 << *((unsigned char *)a2 + 1);
      v124 = v122 + 22;
      v125 = v122 + 20;
      v126 = v122 + 21;
      if ((v123 & 0x2924) != 0) {
        v126 = v125;
      }
      if ((v123 & 0x14493) != 0) {
        v126 = v124;
      }
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *v126);
      v118 = *(WTF::StringBuilder **)(v3 + 40);
      v211 = ", access::";
      int v212 = 10;
      v209 = v57;
      int v127 = v56 - 1;
      if (!v56) {
        int v127 = 0;
      }
      int v210 = v127;
LABEL_150:
      char v208 = 62;
      return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v118, (unint64_t *)&v211, (uint64_t)&v209, &v208);
    case 9:
      if (v4 != 9) {
        goto LABEL_276;
      }
      unsigned int v58 = *(unsigned __int8 *)a2 - 1;
      if (v58 > 4)
      {
        uint64_t v60 = 0;
        v61 = 0;
      }
      else
      {
        uint64_t v59 = (char)v58;
        uint64_t v60 = *(void *)((char *)&unk_1826CF5B0 + v59 * 8);
        v61 = off_1E521DDB8[v59];
      }
      v128 = (WTF::StringBuilder *)*((void *)this + 5);
      v211 = v61;
      BOOL v116 = v60 != 0;
      int v129 = v60 - 1;
      if (!v116) {
        int v129 = 0;
      }
      int v212 = v129;
      v209 = "<float>";
      int v210 = 7;
      return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v128, (unint64_t *)&v211, (uint64_t)&v209);
    case 10:
      goto LABEL_275;
    case 11:
      if (v4 != 11) {
        goto LABEL_276;
      }
      v62 = 0;
      char v63 = 1;
      uint64_t v64 = 0;
      switch(*(unsigned char *)a2)
      {
        case 0:
        case 2:
          char v63 = 0;
          v62 = "thread";
          goto LABEL_182;
        case 3:
          char v63 = 0;
          v62 = "device";
LABEL_182:
          uint64_t v64 = 7;
          break;
        case 4:
          char v63 = 0;
          v62 = "constant";
          uint64_t v64 = 9;
          break;
        case 5:
          char v63 = 0;
          v62 = "threadgroup";
          uint64_t v64 = 12;
          break;
        default:
          break;
      }
      if (!*((unsigned char *)a2 + 1)) {
        WTF::StringBuilder::append();
      }
      if ((v63 & 1) == 0)
      {
        v144 = *(WTF::StringBuilder **)(v3 + 40);
        int v145 = v64 - 1;
        if (!v64) {
          int v145 = 0;
        }
        v211 = v62;
        int v212 = v145;
        LOBYTE(v209) = 32;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v144, (unint64_t *)&v211, (char *)&v209);
      }
      WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)v3, *((const WGSL::Type **)a2 + 1));
      this = *(char **)(v3 + 40);
      LOBYTE(v211) = 42;
      uint64_t v146 = *((void *)this + 1);
      if (!v146) {
        return (char *)WTF::StringBuilder::append();
      }
      uint64_t v147 = *((unsigned int *)this + 4);
      if (v147 >= *(_DWORD *)(v146 + 4) || *(void *)this) {
        return (char *)WTF::StringBuilder::append();
      }
      int v148 = *(_DWORD *)(v146 + 16);
      uint64_t v149 = *(void *)(v146 + 8);
      *((_DWORD *)this + 4) = v147 + 1;
      if ((v148 & 4) != 0) {
        *(unsigned char *)(v149 + v147) = 42;
      }
      else {
        *(_WORD *)(v149 + 2 * v147) = 42;
      }
      return this;
    case 12:
      if (v4 == 12) {
        goto LABEL_89;
      }
      goto LABEL_276;
    case 13:
      if (v4 == 13)
      {
        __break(0xC471u);
        JUMPOUT(0x18258BB44);
      }
      goto LABEL_276;
    case 14:
      if (v4 != 14) {
        goto LABEL_276;
      }
      __break(0xC471u);
LABEL_275:
      __break(1u);
      goto LABEL_276;
    default:
      if (!v4)
      {
        switch(*(unsigned char *)a2)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 9:
          case 0xA:
            goto LABEL_89;
          case 6:
          case 7:
          case 8:
            v14 = (WTF::StringBuilder *)*((void *)this + 5);
            WGSL::Type::toString(a2, (uint64_t *)&v211);
            WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WGSL::Type,void>>(v14, (uint64_t *)&v211);
            this = (char *)v211;
            v211 = 0;
            if (this)
            {
              if (*(_DWORD *)this == 2) {
                return (char *)WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)this -= 2;
              }
            }
            return this;
          case 0xB:
          case 0xC:
          case 0xD:
            __break(0xC471u);
            JUMPOUT(0x18258BBB4);
          default:
            return this;
        }
      }
      goto LABEL_276;
  }
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visitArgumentBufferParameter(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Parameter *a2)
{
  WTF::StringBuilder::append();
  WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, *(const WGSL::Type **)(*((void *)a2 + 8) + 24));
  int v4 = (WTF::StringBuilder *)*((void *)this + 5);
  int v16 = 2;
  uint64_t v14 = *((void *)a2 + 7);
  uint64_t v15 = "& ";
  uint64_t result = (uint64_t)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v4, (unint64_t *)&v15, &v14);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 9);
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *v7;
      uint64_t result = *((void *)this + 5);
      LOBYTE(v15) = 32;
      uint64_t v10 = *(void *)(result + 8);
      if (v10 && (uint64_t v11 = *(unsigned int *)(result + 16), v11 < *(_DWORD *)(v10 + 4)) && !*(void *)result)
      {
        int v12 = *(_DWORD *)(v10 + 16);
        uint64_t v13 = *(void *)(v10 + 8);
        *(_DWORD *)(result + 16) = v11 + 1;
        if ((v12 & 4) != 0) {
          *(unsigned char *)(v13 + v11) = 32;
        }
        else {
          *(_WORD *)(v13 + 2 * v11) = 32;
        }
      }
      else
      {
        uint64_t result = WTF::StringBuilder::append();
      }
      if (!*((unsigned char *)this + 32)) {
        uint64_t result = (*(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 88))(this, v9);
      }
      ++v7;
      v8 -= 8;
    }
    while (v8);
  }
  return result;
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Structure *a2)
{
  *(void *)&v411[4] = *MEMORY[0x1E4F143B8];
  *((_WORD *)this + 30) = *((unsigned __int8 *)a2 + 88) | 0x100;
  int v4 = (WTF::StringBuilder *)*((void *)this + 5);
  LODWORD(v402) = *((_DWORD *)this + 14);
  int v410 = 7;
  uint64_t v408 = *((void *)a2 + 6);
  v409 = "struct ";
  v406 = " {\n";
  int v407 = 3;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v4, (int *)&v402, (unint64_t *)&v409, &v408, (unint64_t *)&v406);
  int v6 = *((_DWORD *)this + 14) + 1;
  *((_DWORD *)this + 14) = v6;
  int v7 = *((unsigned __int8 *)a2 + 88);
  if (v7 == 7)
  {
    uint64_t v8 = (WTF::StringBuilder *)*((void *)this + 5);
    uint64_t v9 = *((void *)a2 + 12);
    LODWORD(v402) = v6;
    int v410 = 28;
    uint64_t v408 = *(void *)(v9 + 48);
    v409 = "using UnpackedType = struct ";
    v406 = ";\n\n";
    int v407 = 3;
  }
  else
  {
    if (v7 != 6) {
      goto LABEL_6;
    }
    uint64_t v8 = (WTF::StringBuilder *)*((void *)this + 5);
    uint64_t v10 = *((void *)a2 + 13);
    LODWORD(v402) = v6;
    int v410 = 26;
    uint64_t v408 = *(void *)(v10 + 48);
    v409 = "using PackedType = struct ";
    v406 = ";\n\n";
    int v407 = 3;
  }
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v8, (int *)&v402, (unint64_t *)&v409, &v408, (unint64_t *)&v406);
LABEL_6:
  uint64_t v11 = *((unsigned int *)a2 + 21);
  if (v11)
  {
    unsigned int v398 = 0;
    int v12 = (uint64_t *)*((void *)a2 + 9);
    v399 = &v12[v11];
    int8x16_t v13 = 0uLL;
    int v397 = v7;
    while (1)
    {
      uint64_t v14 = *v12;
      uint64_t v15 = *(void *)(*(void *)(*v12 + 104) + 24);
      int8x16_t v400 = v5;
      int8x16_t v401 = v13;
      if (!v15) {
        break;
      }
      if (*(_DWORD *)(v15 + 48) != 10) {
        break;
      }
      uint64_t v16 = *(void *)(v15 + 8);
      if (!v16 || *(_DWORD *)(v16 + 48) || *(unsigned char *)v16 != 10) {
        break;
      }
      uint64_t v17 = *(void *)(v14 + 48);
      unsigned __int8 v93 = (WTF::StringBuilder *)*((void *)this + 5);
      int v94 = *((_DWORD *)this + 14);
      size_t v95 = (4 * v94);
      uint64_t v96 = *((void *)v93 + 1);
      if ((!v96 && (uint64_t v96 = *(void *)v93) == 0 || (*(unsigned char *)(v96 + 16) & 4) != 0)
        && (!v17 || (*(unsigned char *)(v17 + 16) & 4) != 0))
      {
        uint64_t v100 = (char *)MEMORY[0x18530ACF0]();
        if (v100)
        {
          int8x16_t v101 = v100;
          if (v95)
          {
            memset(v100, 32, (4 * v94));
            uint64_t v102 = (4 * v94);
          }
          else
          {
            uint64_t v102 = 0;
          }
          uint64_t v394 = v102;
          v395 = v101;
          v124 = &v101[v102];
          long long v125 = *(_OWORD *)"texture2d<float> __";
          *(_OWORD *)v124 = *(_OWORD *)"texture2d<float> __";
          *(_DWORD *)(v124 + 15) = 1600069694;
          v126 = v124 + 19;
          if (v17)
          {
            int v127 = *(int8x16_t **)(v17 + 8);
            size_t v128 = *(unsigned int *)(v17 + 4);
            if ((*(unsigned char *)(v17 + 16) & 4) != 0)
            {
              if (v128)
              {
                if (v128 == 1)
                {
                  unsigned char *v126 = v127->i8[0];
                }
                else
                {
                  memcpy(v126, v127, v128);
                  long long v125 = *(_OWORD *)"texture2d<float> __";
                }
              }
            }
            else
            {
              if (v128 < 0x10)
              {
                unint64_t v129 = (unint64_t)(v124 + 19);
              }
              else
              {
                unint64_t v129 = (unint64_t)&v126[v128 & 0xFFFFFFF0];
                v130 = (unsigned long long *)(v124 + 19);
                do
                {
                  unsigned long long v131 = (unsigned __int128)vld2q_s8(v127->i8);
                  v127 += 2;
                  *v130++ = v131;
                }
                while (v130 != (unsigned long long *)v129);
              }
              if ((unsigned char *)v129 != &v126[v128])
              {
                v238 = &v395[v128 + v394];
                size_t v239 = (size_t)&v238[-v129];
                unint64_t v240 = (unint64_t)&v238[-v129 + 19];
                if (v240 < 8
                  || ((unint64_t v241 = (unint64_t)(v238 + 19), v129 < (unint64_t)v127[2].u64 + 2 * v239 + 6)
                    ? (BOOL v242 = (unint64_t)v127 >= v241)
                    : (BOOL v242 = 1),
                      !v242))
                {
                  v244 = (unsigned char *)v129;
                  v245 = v127;
                  goto LABEL_287;
                }
                if (v240 >= 0x20)
                {
                  unint64_t v243 = v240 & 0xFFFFFFFFFFFFFFE0;
                  v327 = v127 + 2;
                  v328 = (int8x16_t *)(v129 + 16);
                  unint64_t v329 = v240 & 0xFFFFFFFFFFFFFFE0;
                  do
                  {
                    int8x16_t v331 = v327[-2];
                    int8x16_t v330 = v327[-1];
                    int8x16_t v333 = *v327;
                    int8x16_t v332 = v327[1];
                    v327 += 4;
                    v328[-1] = vuzp1q_s8(v331, v330);
                    int8x16_t *v328 = vuzp1q_s8(v333, v332);
                    v328 += 2;
                    v329 -= 32;
                  }
                  while (v329);
                  if (v240 != v243)
                  {
                    if ((v240 & 0x18) == 0)
                    {
                      v245 = (int8x16_t *)((char *)v127 + 2 * v243);
                      v244 = (unsigned char *)(v129 + v243);
                      goto LABEL_287;
                    }
                    goto LABEL_405;
                  }
                }
                else
                {
                  unint64_t v243 = 0;
LABEL_405:
                  v244 = (unsigned char *)(v129 + (v240 & 0xFFFFFFFFFFFFFFF8));
                  v245 = (int8x16_t *)((char *)v127 + 2 * (v240 & 0xFFFFFFFFFFFFFFF8));
                  v334 = (int16x8_t *)((char *)v127 + 2 * v243);
                  v335 = (int8x8_t *)(v129 + v243);
                  unint64_t v336 = v243 - (v240 & 0xFFFFFFFFFFFFFFF8);
                  do
                  {
                    int16x8_t v337 = *v334++;
                    *v335++ = vmovn_s16(v337);
                    v336 += 8;
                  }
                  while (v336);
                  if (v240 != (v240 & 0xFFFFFFFFFFFFFFF8))
                  {
                    do
                    {
LABEL_287:
                      char v246 = v245->i8[0];
                      v245 = (int8x16_t *)((char *)v245 + 2);
                      *v244++ = v246;
                    }
                    while (v244 != &v126[v128]);
                  }
                }
              }
            }
            uint64_t v132 = *(unsigned int *)(v17 + 4);
          }
          else
          {
            uint64_t v132 = 0;
          }
          uint64_t v392 = v132;
          v247 = &v126[v132];
          qmemcpy(v247, "_FirstPlane;\n", 13);
          v248 = (_OWORD *)((char *)v247 + 13);
          if (v95)
          {
            long long v390 = v125;
            memset((char *)v247 + 13, 32, v95);
            v249 = (char *)v248 + v95;
            *(_OWORD *)v249 = v390;
            *(_DWORD *)(v249 + 15) = 1600069694;
            v250 = (char *)v248 + v95 + 19;
            if (v17) {
              goto LABEL_293;
            }
LABEL_299:
            uint64_t v256 = 0;
LABEL_318:
            qmemcpy(&v250[v256], "_SecondPlane;\n", 14);
            v264 = &v250[v256 + 14];
            if (v95)
            {
              memset(v264, 32, v95);
              size_t v265 = v95;
            }
            else
            {
              size_t v265 = 0;
            }
            v266 = &v264[v265];
            *(void *)v266 = *(void *)"float3x2 __";
            *(_DWORD *)(v266 + 7) = 1600069682;
            v267 = v266 + 11;
            if (v17)
            {
              v268 = *(int8x16_t **)(v17 + 8);
              size_t v269 = *(unsigned int *)(v17 + 4);
              if ((*(unsigned char *)(v17 + 16) & 4) != 0)
              {
                if (v269)
                {
                  if (v269 == 1) {
                    unsigned char *v267 = v268->i8[0];
                  }
                  else {
                    memcpy(v267, v268, v269);
                  }
                }
              }
              else
              {
                if (v269 < 0x10)
                {
                  unint64_t v270 = (unint64_t)(v266 + 11);
                }
                else
                {
                  unint64_t v270 = (unint64_t)&v267[v269 & 0xFFFFFFF0];
                  v271 = (unsigned long long *)(v266 + 11);
                  do
                  {
                    unsigned long long v272 = (unsigned __int128)vld2q_s8(v268->i8);
                    v268 += 2;
                    *v271++ = v272;
                  }
                  while (v271 != (unsigned long long *)v270);
                }
                if ((unsigned char *)v270 != &v267[v269])
                {
                  unint64_t v274 = (unint64_t)&v395[3 * v394 + v392 + v256 + v269 - v270 + 76];
                  if (v274 < 8
                    || ((size_t v275 = (size_t)&v395[v269 + v256 + v392],
                         v270 < (unint64_t)&v268[9].u64[1] + 2 * v275 + 6 * v394 - 2 * v270)
                      ? (BOOL v276 = (unint64_t)v268 >= v275 + 3 * v394 + 76)
                      : (BOOL v276 = 1),
                        !v276))
                  {
                    v278 = (unsigned char *)v270;
                    v279 = v268;
                    goto LABEL_342;
                  }
                  if (v274 >= 0x20)
                  {
                    unint64_t v277 = v274 & 0xFFFFFFFFFFFFFFE0;
                    v349 = v268 + 2;
                    v350 = (int8x16_t *)(v270 + 16);
                    unint64_t v351 = v274 & 0xFFFFFFFFFFFFFFE0;
                    do
                    {
                      int8x16_t v353 = v349[-2];
                      int8x16_t v352 = v349[-1];
                      int8x16_t v355 = *v349;
                      int8x16_t v354 = v349[1];
                      v349 += 4;
                      v350[-1] = vuzp1q_s8(v353, v352);
                      int8x16_t *v350 = vuzp1q_s8(v355, v354);
                      v350 += 2;
                      v351 -= 32;
                    }
                    while (v351);
                    if (v274 != v277)
                    {
                      if ((v274 & 0x18) == 0)
                      {
                        v279 = (int8x16_t *)((char *)v268 + 2 * v277);
                        v278 = (unsigned char *)(v270 + v277);
                        goto LABEL_342;
                      }
                      goto LABEL_421;
                    }
                  }
                  else
                  {
                    unint64_t v277 = 0;
LABEL_421:
                    v278 = (unsigned char *)(v270 + (v274 & 0xFFFFFFFFFFFFFFF8));
                    v279 = (int8x16_t *)((char *)v268 + 2 * (v274 & 0xFFFFFFFFFFFFFFF8));
                    v356 = (int16x8_t *)((char *)v268 + 2 * v277);
                    v357 = (int8x8_t *)(v270 + v277);
                    unint64_t v358 = v277 - (v274 & 0xFFFFFFFFFFFFFFF8);
                    do
                    {
                      int16x8_t v359 = *v356++;
                      *v357++ = vmovn_s16(v359);
                      v358 += 8;
                    }
                    while (v358);
                    if (v274 != (v274 & 0xFFFFFFFFFFFFFFF8))
                    {
                      do
                      {
LABEL_342:
                        char v280 = v279->i8[0];
                        v279 = (int8x16_t *)((char *)v279 + 2);
                        *v278++ = v280;
                      }
                      while (v278 != &v267[v269]);
                    }
                  }
                }
              }
              uint64_t v273 = *(unsigned int *)(v17 + 4);
            }
            else
            {
              uint64_t v273 = 0;
            }
            *(_OWORD *)&v267[v273] = *(_OWORD *)"_UVRemapMatrix;\n";
            v281 = &v267[v273 + 16];
            if (v95) {
              memset(v281, 32, v95);
            }
            else {
              size_t v95 = 0;
            }
            int8x16_t v5 = v400;
            int8x16_t v13 = v401;
            v282 = &v281[v95];
            *(void *)v282 = *(void *)"float4x3 __";
            *(_DWORD *)(v282 + 7) = 1600069683;
            v283 = &v281[v95 + 11];
            if (v17)
            {
              v284 = *(int8x16_t **)(v17 + 8);
              size_t v285 = *(unsigned int *)(v17 + 4);
              if ((*(unsigned char *)(v17 + 16) & 4) != 0)
              {
                if (v285)
                {
                  if (v285 == 1)
                  {
                    char *v283 = v284->i8[0];
                  }
                  else
                  {
                    memcpy(v283, v284, v285);
                    int8x16_t v5 = v400;
                    int8x16_t v13 = v401;
                  }
                }
              }
              else
              {
                if (v285 < 0x10)
                {
                  unint64_t v286 = (unint64_t)v283;
                }
                else
                {
                  unint64_t v286 = (unint64_t)&v283[v285 & 0xFFFFFFF0];
                  v287 = (unsigned long long *)v283;
                  do
                  {
                    unsigned long long v288 = (unsigned __int128)vld2q_s8(v284->i8);
                    v284 += 2;
                    *v287++ = v288;
                  }
                  while (v287 != (unsigned long long *)v286);
                }
                if ((char *)v286 != &v283[v285])
                {
                  v290 = &v395[v273 + v392 + v256];
                  unint64_t v291 = (unint64_t)&v290[4 * v394 + v285 - v286 + 103];
                  if (v291 < 8
                    || (v286 < (unint64_t)&v284[12].u64[1] + 8 * v394 + 2 * (void)&v290[v285] - 2 * v286 + 6
                      ? (BOOL v292 = v284 >= (int8x16_t *)&v395[4 * v394 + 103 + v392 + v273 + v256 + v285])
                      : (BOOL v292 = 1),
                        !v292))
                  {
                    v294 = (char *)v286;
                    v295 = v284;
                    goto LABEL_370;
                  }
                  if (v291 >= 0x20)
                  {
                    unint64_t v293 = v291 & 0xFFFFFFFFFFFFFFE0;
                    v360 = v284 + 2;
                    v361 = (int8x16_t *)(v286 + 16);
                    unint64_t v362 = v291 & 0xFFFFFFFFFFFFFFE0;
                    do
                    {
                      int8x16_t v364 = v360[-2];
                      int8x16_t v363 = v360[-1];
                      int8x16_t v366 = *v360;
                      int8x16_t v365 = v360[1];
                      v360 += 4;
                      v361[-1] = vuzp1q_s8(v364, v363);
                      int8x16_t *v361 = vuzp1q_s8(v366, v365);
                      v361 += 2;
                      v362 -= 32;
                    }
                    while (v362);
                    if (v291 != v293)
                    {
                      if ((v291 & 0x18) == 0)
                      {
                        v295 = (int8x16_t *)((char *)v284 + 2 * v293);
                        v294 = (char *)(v286 + v293);
                        goto LABEL_370;
                      }
                      goto LABEL_429;
                    }
                  }
                  else
                  {
                    unint64_t v293 = 0;
LABEL_429:
                    v294 = (char *)(v286 + (v291 & 0xFFFFFFFFFFFFFFF8));
                    v295 = (int8x16_t *)((char *)v284 + 2 * (v291 & 0xFFFFFFFFFFFFFFF8));
                    v367 = (int16x8_t *)((char *)v284 + 2 * v293);
                    v368 = (int8x8_t *)(v286 + v293);
                    unint64_t v369 = v293 - (v291 & 0xFFFFFFFFFFFFFFF8);
                    do
                    {
                      int16x8_t v370 = *v367++;
                      *v368++ = vmovn_s16(v370);
                      v369 += 8;
                    }
                    while (v369);
                    if (v291 != (v291 & 0xFFFFFFFFFFFFFFF8))
                    {
                      do
                      {
LABEL_370:
                        char v296 = v295->i8[0];
                        v295 = (int8x16_t *)((char *)v295 + 2);
                        *v294++ = v296;
                      }
                      while (v294 != &v283[v285]);
                    }
                  }
                }
              }
              uint64_t v289 = *(unsigned int *)(v17 + 4);
            }
            else
            {
              uint64_t v289 = 0;
            }
            qmemcpy(&v283[v289], "_ColorSpaceConversionMatrix;\n", 29);
            int v7 = v397;
            goto LABEL_10;
          }
          _OWORD *v248 = v125;
          v247[7] = 1600069694;
          v250 = v247 + 8;
          if (!v17) {
            goto LABEL_299;
          }
LABEL_293:
          v251 = *(int8x16_t **)(v17 + 8);
          size_t v252 = *(unsigned int *)(v17 + 4);
          if ((*(unsigned char *)(v17 + 16) & 4) != 0)
          {
            if (v252)
            {
              if (v252 == 1) {
                unsigned char *v250 = v251->i8[0];
              }
              else {
                memcpy(v250, v251, v252);
              }
            }
          }
          else
          {
            if (v252 < 0x10)
            {
              unint64_t v253 = (unint64_t)v250;
            }
            else
            {
              unint64_t v253 = (unint64_t)&v250[v252 & 0xFFFFFFF0];
              v254 = (unsigned long long *)v250;
              do
              {
                unsigned long long v255 = (unsigned __int128)vld2q_s8(v251->i8);
                v251 += 2;
                *v254++ = v255;
              }
              while (v254 != (unsigned long long *)v253);
            }
            if ((unsigned char *)v253 != &v250[v252])
            {
              unint64_t v257 = (unint64_t)&v395[2 * v394 + v392 + v252 - v253 + 51];
              if (v257 < 8
                || ((size_t v258 = (size_t)&v395[v392 + v252],
                     v253 < (unint64_t)v251[6].u64 + 4 * v394 + 2 * v258 - 2 * v253 + 6)
                  ? (BOOL v259 = (unint64_t)v251 >= v258 + 2 * v394 + 51)
                  : (BOOL v259 = 1),
                    !v259))
              {
                v261 = (unsigned char *)v253;
                v262 = v251;
                goto LABEL_314;
              }
              if (v257 >= 0x20)
              {
                unint64_t v260 = v257 & 0xFFFFFFFFFFFFFFE0;
                v338 = v251 + 2;
                v339 = (int8x16_t *)(v253 + 16);
                unint64_t v340 = v257 & 0xFFFFFFFFFFFFFFE0;
                do
                {
                  int8x16_t v342 = v338[-2];
                  int8x16_t v341 = v338[-1];
                  int8x16_t v344 = *v338;
                  int8x16_t v343 = v338[1];
                  v338 += 4;
                  v339[-1] = vuzp1q_s8(v342, v341);
                  int8x16_t *v339 = vuzp1q_s8(v344, v343);
                  v339 += 2;
                  v340 -= 32;
                }
                while (v340);
                if (v257 != v260)
                {
                  if ((v257 & 0x18) == 0)
                  {
                    v262 = (int8x16_t *)((char *)v251 + 2 * v260);
                    v261 = (unsigned char *)(v253 + v260);
                    goto LABEL_314;
                  }
                  goto LABEL_413;
                }
              }
              else
              {
                unint64_t v260 = 0;
LABEL_413:
                v261 = (unsigned char *)(v253 + (v257 & 0xFFFFFFFFFFFFFFF8));
                v262 = (int8x16_t *)((char *)v251 + 2 * (v257 & 0xFFFFFFFFFFFFFFF8));
                v345 = (int16x8_t *)((char *)v251 + 2 * v260);
                v346 = (int8x8_t *)(v253 + v260);
                unint64_t v347 = v260 - (v257 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  int16x8_t v348 = *v345++;
                  *v346++ = vmovn_s16(v348);
                  v347 += 8;
                }
                while (v347);
                if (v257 != (v257 & 0xFFFFFFFFFFFFFFF8))
                {
                  do
                  {
LABEL_314:
                    char v263 = v262->i8[0];
                    v262 = (int8x16_t *)((char *)v262 + 2);
                    *v261++ = v263;
                  }
                  while (v261 != &v250[v252]);
                }
              }
            }
          }
          uint64_t v256 = *(unsigned int *)(v17 + 4);
          goto LABEL_318;
        }
        goto LABEL_9;
      }
      unsigned int v97 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v93);
      if (v97)
      {
        v98 = v97;
        if (v95)
        {
          memset_pattern16(v97, asc_1826CF510, 2 * (4 * v94));
          uint64_t v99 = (4 * v94);
        }
        else
        {
          uint64_t v99 = 0;
        }
        uint64_t v393 = v99;
        unsigned __int8 v110 = &v98[2 * v99];
        *(_OWORD *)unsigned __int8 v110 = xmmword_1826CF300;
        *((_OWORD *)v110 + 1) = xmmword_1826CF310;
        *((_DWORD *)v110 + 8) = 6225952;
        *((_WORD *)v110 + 18) = 95;
        unsigned int v111 = v110 + 38;
        int8x16_t v112 = v400;
        int8x16_t v113 = v401;
        if (!v17)
        {
          uint64_t v116 = 0;
          goto LABEL_219;
        }
        unsigned int v114 = *(int8x16_t **)(v17 + 8);
        uint64_t v115 = *(unsigned int *)(v17 + 4);
        if ((*(unsigned char *)(v17 + 16) & 4) == 0)
        {
          if (v115)
          {
            if (v115 == 1)
            {
              *unsigned int v111 = v114->i16[0];
            }
            else
            {
              memcpy(v111, v114, 2 * v115);
              int8x16_t v112 = v400;
              int8x16_t v113 = v401;
            }
          }
LABEL_218:
          uint64_t v116 = *(unsigned int *)(v17 + 4);
LABEL_219:
          uint64_t v391 = v116;
          unsigned int v191 = &v111[v116];
          *(_OWORD *)unsigned int v191 = xmmword_1826CF420;
          *((void *)v191 + 2) = 0x3B0065006E0061;
          v191[12] = 10;
          unint64_t v192 = (char *)(v191 + 13);
          int8x16_t v400 = v112;
          int8x16_t v401 = v113;
          if (v95)
          {
            memset_pattern16(v192, asc_1826CF510, 2 * (4 * v94));
            int8x16_t v113 = v401;
            uint64_t v193 = (4 * v94);
          }
          else
          {
            uint64_t v193 = 0;
          }
          v194 = &v192[2 * v193];
          *(_OWORD *)v194 = xmmword_1826CF300;
          *((_OWORD *)v194 + 1) = xmmword_1826CF310;
          *((_DWORD *)v194 + 8) = 6225952;
          *((_WORD *)v194 + 18) = 95;
          unint64_t v195 = v194 + 38;
          int v396 = v94;
          if (!v17)
          {
            uint64_t v198 = 0;
            goto LABEL_247;
          }
          v196 = *(int8x16_t **)(v17 + 8);
          uint64_t v197 = *(unsigned int *)(v17 + 4);
          if ((*(unsigned char *)(v17 + 16) & 4) == 0)
          {
            if (v197)
            {
              if (v197 == 1)
              {
                *unint64_t v195 = v196->i16[0];
              }
              else
              {
                memcpy(v195, v196, 2 * v197);
                int8x16_t v113 = v401;
              }
            }
LABEL_246:
            uint64_t v198 = *(unsigned int *)(v17 + 4);
LABEL_247:
            v214 = &v195[v198];
            _WORD *v214 = 95;
            *(_OWORD *)(v214 + 1) = xmmword_1826CF430;
            *(void *)(v214 + 9) = 0x3B0065006E0061;
            v214[13] = 10;
            v215 = v214 + 14;
            if (v95)
            {
              memset_pattern16(v214 + 14, asc_1826CF510, 2 * v95);
              int8x16_t v113 = v401;
            }
            else
            {
              size_t v95 = 0;
            }
            v216 = &v215[v95];
            _WORD *v216 = 102;
            *(_OWORD *)(v216 + 1) = xmmword_1826CF440;
            *(_DWORD *)(v216 + 9) = 6226015;
            v217 = v216 + 11;
            if (!v17)
            {
              uint64_t v220 = 0;
              goto LABEL_275;
            }
            v218 = *(int8x16_t **)(v17 + 8);
            uint64_t v219 = *(unsigned int *)(v17 + 4);
            if ((*(unsigned char *)(v17 + 16) & 4) == 0)
            {
              if (v219)
              {
                if (v219 == 1) {
                  _WORD *v217 = v218->i16[0];
                }
                else {
                  memcpy(v217, v218, 2 * v219);
                }
              }
LABEL_274:
              uint64_t v220 = *(unsigned int *)(v17 + 4);
LABEL_275:
              v237 = &v217[v220];
              _WORD *v237 = 95;
              *(_OWORD *)(v237 + 1) = xmmword_1826CF450;
              *(void *)(v237 + 9) = 0x69007200740061;
              *(_DWORD *)(v237 + 13) = 3866744;
              v237[15] = 10;
              WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((char *)v237 + 32, v396, (unint64_t)"float4x3 __", 0xBu, v17, (unint64_t)"_ColorSpaceConversionMatrix;\n",
                0x1Du);
              int v7 = v397;
              goto LABEL_9;
            }
            if (v219 < 0x40)
            {
              unint64_t v221 = (unint64_t)(v216 + 11);
            }
            else
            {
              unint64_t v221 = (unint64_t)&v217[v219 & 0xFFFFFFC0];
              v222 = (char *)(v216 + 11);
              do
              {
                v416.val[0] = *v218;
                int8x16_t v223 = v218[1];
                v420.val[0] = v218[2];
                int8x16_t v224 = v218[3];
                v218 += 4;
                v424.val[0] = v224;
                v420.val[1] = v113;
                v427.val[0] = v223;
                v416.val[1] = v113;
                v225 = v222;
                vst2q_s8(v225, v416);
                v225 += 32;
                v424.val[1] = v113;
                v427.val[1] = v113;
                vst2q_s8(v225, v427);
                v226 = v222 + 64;
                vst2q_s8(v226, v420);
                v227 = v222 + 96;
                v222 += 128;
                vst2q_s8(v227, v424);
              }
              while (v222 != (char *)v221);
            }
            v228 = &v217[v219];
            if ((_WORD *)v221 == v228) {
              goto LABEL_274;
            }
            unint64_t v229 = (unint64_t)&v98[6 * v393 + 2 * v391 + 2 * v198 + 2 * v219 - v221 + 150];
            if (v229 < 0xE
              || ((unint64_t v230 = (unint64_t)&v98[6 * v393 + 2 * v391 + 2 * v198 + 2 * v219 - v221 + 150],
                   v221 < (unint64_t)v218->u64 + (v230 >> 1) + 1)
                ? (BOOL v231 = (unint64_t)v218 >= v221 + (v230 & 0xFFFFFFFFFFFFFFFELL) + 2)
                : (BOOL v231 = 1),
                  !v231))
            {
              v234 = (_WORD *)v221;
              v235 = v218;
              goto LABEL_271;
            }
            uint64_t v232 = (v229 >> 1) + 1;
            if (v229 < 0x3E)
            {
              unint64_t v233 = 0;
              goto LABEL_396;
            }
            unint64_t v233 = v232 & 0xFFFFFFFFFFFFFFE0;
            v317 = (uint8x8_t *)&v218[1];
            v318 = (uint16x8_t *)(v221 + 32);
            unint64_t v319 = v232 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              uint8x16_t v320 = *(uint8x16_t *)v317[-2].i8;
              uint16x8_t v321 = vmovl_u8(*v317);
              uint16x8_t v322 = vmovl_high_u8(*(uint8x16_t *)v317->i8);
              v318[-2] = vmovl_u8(*(uint8x8_t *)v320.i8);
              v318[-1] = vmovl_high_u8(v320);
              uint16x8_t *v318 = v321;
              v318[1] = v322;
              v318 += 4;
              v317 += 4;
              v319 -= 32;
            }
            while (v319);
            if (v232 == v233) {
              goto LABEL_274;
            }
            if ((v232 & 0x18) != 0)
            {
LABEL_396:
              v234 = (_WORD *)(v221 + 2 * (v232 & 0xFFFFFFFFFFFFFFF8));
              v235 = (int8x16_t *)((char *)v218 + (v232 & 0xFFFFFFFFFFFFFFF8));
              v323 = (uint8x8_t *)&v218->i8[v233];
              v324 = (uint16x8_t *)(v221 + 2 * v233);
              unint64_t v325 = v233 - (v232 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                uint8x8_t v326 = *v323++;
                *v324++ = vmovl_u8(v326);
                v325 += 8;
              }
              while (v325);
              if (v232 == (v232 & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_274;
              }
            }
            else
            {
              v235 = (int8x16_t *)((char *)v218 + v233);
              v234 = (_WORD *)(v221 + 2 * v233);
            }
            do
            {
LABEL_271:
              __int16 v236 = v235->u8[0];
              v235 = (int8x16_t *)((char *)v235 + 1);
              *v234++ = v236;
            }
            while (v234 != v228);
            goto LABEL_274;
          }
          if (v197 < 0x40)
          {
            unint64_t v199 = (unint64_t)(v194 + 38);
          }
          else
          {
            unint64_t v199 = (unint64_t)&v195[v197 & 0xFFFFFFC0];
            uint16x8_t v200 = v194 + 38;
            do
            {
              v415.val[0] = *v196;
              int8x16_t v201 = v196[1];
              v419.val[0] = v196[2];
              int8x16_t v202 = v196[3];
              v196 += 4;
              v423.val[0] = v202;
              v419.val[1] = v113;
              v426.val[0] = v201;
              v415.val[1] = v113;
              unint64_t v203 = v200;
              vst2q_s8(v203, v415);
              v203 += 32;
              v423.val[1] = v113;
              v426.val[1] = v113;
              vst2q_s8(v203, v426);
              v204 = v200 + 64;
              vst2q_s8(v204, v419);
              int v205 = v200 + 96;
              v200 += 128;
              vst2q_s8(v205, v423);
            }
            while (v200 != (char *)v199);
          }
          unsigned int v206 = &v195[v197];
          if ((_WORD *)v199 == v206) {
            goto LABEL_246;
          }
          unint64_t v207 = (unint64_t)&v98[4 * v393 + 2 * v391 + 2 * v197 - v199 + 100];
          if (v207 < 0xE
            || (v199 < (unint64_t)v196->u64 + (v207 >> 1) + 1
              ? (BOOL v208 = (unint64_t)v196 >= v199 + (v207 & 0xFFFFFFFFFFFFFFFELL) + 2)
              : (BOOL v208 = 1),
                !v208))
          {
            v211 = (_WORD *)v199;
            int v212 = v196;
            goto LABEL_243;
          }
          uint64_t v209 = (v207 >> 1) + 1;
          if (v207 < 0x3E)
          {
            unint64_t v210 = 0;
            goto LABEL_388;
          }
          unint64_t v210 = v209 & 0xFFFFFFFFFFFFFFE0;
          v307 = (uint8x8_t *)&v196[1];
          v308 = (uint16x8_t *)(v199 + 32);
          unint64_t v309 = v209 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v310 = *(uint8x16_t *)v307[-2].i8;
            uint16x8_t v311 = vmovl_u8(*v307);
            uint16x8_t v312 = vmovl_high_u8(*(uint8x16_t *)v307->i8);
            v308[-2] = vmovl_u8(*(uint8x8_t *)v310.i8);
            v308[-1] = vmovl_high_u8(v310);
            uint16x8_t *v308 = v311;
            v308[1] = v312;
            v308 += 4;
            v307 += 4;
            v309 -= 32;
          }
          while (v309);
          if (v209 == v210) {
            goto LABEL_246;
          }
          if ((v209 & 0x18) != 0)
          {
LABEL_388:
            v211 = (_WORD *)(v199 + 2 * (v209 & 0xFFFFFFFFFFFFFFF8));
            int v212 = (int8x16_t *)((char *)v196 + (v209 & 0xFFFFFFFFFFFFFFF8));
            v313 = (uint8x8_t *)&v196->i8[v210];
            v314 = (uint16x8_t *)(v199 + 2 * v210);
            unint64_t v315 = v210 - (v209 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint8x8_t v316 = *v313++;
              *v314++ = vmovl_u8(v316);
              v315 += 8;
            }
            while (v315);
            if (v209 == (v209 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_246;
            }
          }
          else
          {
            int v212 = (int8x16_t *)((char *)v196 + v210);
            v211 = (_WORD *)(v199 + 2 * v210);
          }
          do
          {
LABEL_243:
            __int16 v213 = v212->u8[0];
            int v212 = (int8x16_t *)((char *)v212 + 1);
            *v211++ = v213;
          }
          while (v211 != v206);
          goto LABEL_246;
        }
        if (v115 < 0x40)
        {
          unint64_t v117 = (unint64_t)(v110 + 38);
        }
        else
        {
          unint64_t v117 = (unint64_t)&v111[v115 & 0xFFFFFFC0];
          v118 = v110 + 38;
          do
          {
            v413.val[0] = *v114;
            int8x16_t v119 = v114[1];
            v417.val[0] = v114[2];
            int8x16_t v120 = v114[3];
            v114 += 4;
            int8x16_t v112 = v120;
            v417.val[1] = v401;
            v421.val[0] = v119;
            v413.val[1] = v401;
            int v121 = v118;
            vst2q_s8(v121, v413);
            v121 += 32;
            v421.val[1] = v401;
            vst2q_s8(v121, v421);
            v122 = v118 + 64;
            vst2q_s8(v122, v417);
            int v123 = v118 + 96;
            vst2q_s8(v123, *(int8x16x2_t *)v112.i8);
            v118 += 128;
          }
          while (v118 != (char *)v117);
        }
        v172 = &v111[v115];
        if ((_WORD *)v117 == v172) {
          goto LABEL_218;
        }
        unint64_t v173 = (unint64_t)&v98[2 * v115 + 2 * v393 - v117 + 36];
        if (v173 < 0xE
          || (v117 < (unint64_t)v114->u64 + (v173 >> 1) + 1
            ? (BOOL v174 = (unint64_t)v114 >= v117 + (v173 & 0xFFFFFFFFFFFFFFFELL) + 2)
            : (BOOL v174 = 1),
              !v174))
        {
          uint16x8_t v177 = (_WORD *)v117;
          unint64_t v178 = v114;
          goto LABEL_207;
        }
        uint64_t v175 = (v173 >> 1) + 1;
        if (v173 < 0x3E)
        {
          unint64_t v176 = 0;
          goto LABEL_380;
        }
        unint64_t v176 = v175 & 0xFFFFFFFFFFFFFFE0;
        v297 = (uint8x8_t *)&v114[1];
        v298 = (uint16x8_t *)(v117 + 32);
        unint64_t v299 = v175 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v300 = *(uint8x16_t *)v297[-2].i8;
          uint16x8_t v301 = vmovl_u8(*v297);
          uint16x8_t v302 = vmovl_high_u8(*(uint8x16_t *)v297->i8);
          v298[-2] = vmovl_u8(*(uint8x8_t *)v300.i8);
          v298[-1] = vmovl_high_u8(v300);
          uint16x8_t *v298 = v301;
          v298[1] = v302;
          v298 += 4;
          v297 += 4;
          v299 -= 32;
        }
        while (v299);
        if (v175 == v176) {
          goto LABEL_218;
        }
        if ((v175 & 0x18) != 0)
        {
LABEL_380:
          uint16x8_t v177 = (_WORD *)(v117 + 2 * (v175 & 0xFFFFFFFFFFFFFFF8));
          unint64_t v178 = (int8x16_t *)((char *)v114 + (v175 & 0xFFFFFFFFFFFFFFF8));
          v303 = (uint8x8_t *)&v114->i8[v176];
          v304 = (uint16x8_t *)(v117 + 2 * v176);
          unint64_t v305 = v176 - (v175 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint8x8_t v306 = *v303++;
            *v304++ = vmovl_u8(v306);
            v305 += 8;
          }
          while (v305);
          if (v175 == (v175 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_218;
          }
        }
        else
        {
          unint64_t v178 = (int8x16_t *)((char *)v114 + v176);
          uint16x8_t v177 = (_WORD *)(v117 + 2 * v176);
        }
        do
        {
LABEL_207:
          __int16 v179 = v178->u8[0];
          unint64_t v178 = (int8x16_t *)((char *)v178 + 1);
          *v177++ = v179;
        }
        while (v177 != v172);
        goto LABEL_218;
      }
      int v7 = v397;
LABEL_9:
      int8x16_t v5 = v400;
      int8x16_t v13 = v401;
LABEL_10:
      if (++v12 == v399) {
        goto LABEL_440;
      }
    }
    int v18 = (WTF::StringBuilder *)*((void *)this + 5);
    size_t v19 = (4 * *((_DWORD *)this + 14));
    uint64_t v20 = *((void *)v18 + 1);
    if ((v20 || (uint64_t v20 = *(void *)v18) != 0) && (*(unsigned char *)(v20 + 16) & 4) == 0)
    {
      unsigned __int8 v21 = (void *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v18);
      if (v21) {
        BOOL v22 = v19 == 0;
      }
      else {
        BOOL v22 = 1;
      }
      if (!v22) {
        memset_pattern16(v21, asc_1826CF510, 2 * v19);
      }
    }
    else
    {
      unsigned int v23 = (void *)MEMORY[0x18530ACF0]();
      if (v23) {
        BOOL v24 = v19 == 0;
      }
      else {
        BOOL v24 = 1;
      }
      if (!v24) {
        memset(v23, 32, v19);
      }
    }
    WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, *(const WGSL::Type **)(*(void *)(v14 + 104) + 24));
    unsigned __int8 v25 = (WTF::StringBuilder *)*((void *)this + 5);
    LOBYTE(v406) = 32;
    v409 = *(const char **)(v14 + 48);
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v25, &v406, (uint64_t *)&v409);
    uint64_t v26 = *(unsigned int *)(v14 + 100);
    if (v26)
    {
      uint64_t v27 = *(uint64_t **)(v14 + 88);
      uint64_t v28 = 8 * v26;
      do
      {
        uint64_t v29 = *v27;
        uint64_t v30 = *((void *)this + 5);
        LOBYTE(v409) = 32;
        uint64_t v31 = *(void *)(v30 + 8);
        if (!v31 || (uint64_t v32 = *(unsigned int *)(v30 + 16), v32 >= *(_DWORD *)(v31 + 4)) || *(void *)v30)
        {
          WTF::StringBuilder::append();
        }
        else
        {
          int v33 = *(_DWORD *)(v31 + 16);
          uint64_t v34 = *(void *)(v31 + 8);
          *(_DWORD *)(v30 + 16) = v32 + 1;
          if ((v33 & 4) != 0) {
            *(unsigned char *)(v34 + v32) = 32;
          }
          else {
            *(_WORD *)(v34 + 2 * v32) = 32;
          }
        }
        (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 88))(this, v29);
        ++v27;
        v28 -= 8;
      }
      while (v28);
    }
    WTF::StringBuilder::append();
    if (v7 != 7) {
      goto LABEL_9;
    }
    unsigned int v35 = (WTF::String *)*(unsigned int *)(v14 + 116);
    if (!v35) {
      goto LABEL_9;
    }
    uint64_t v36 = (uint64_t *)*((void *)this + 5);
    WTF::String::number(v35);
    int v37 = 0;
    uint64_t v38 = v406;
    unsigned int v39 = ++v398;
    int v40 = *((_DWORD *)v36 + 4);
    do
    {
      ++v37;
      BOOL v41 = v39 > 9;
      v39 /= 0xAu;
    }
    while (v41);
    if (v406) {
      unsigned int v42 = *((_DWORD *)v406 + 1);
    }
    else {
      unsigned int v42 = 0;
    }
    size_t v43 = (4 * *((_DWORD *)this + 14));
    int v44 = v42 + 5;
    if (v42 >= 0xFFFFFFFB) {
      int v44 = -1;
    }
    BOOL v105 = __CFADD__(v37, v44);
    int v45 = v37 + v44;
    if (v105) {
      int v45 = -1;
    }
    BOOL v105 = __CFADD__(v45, 17);
    int v46 = v45 + 17;
    if (v105) {
      int v46 = -1;
    }
    BOOL v105 = __CFADD__(v43, v46);
    int v47 = v43 + v46;
    if (v105) {
      int v47 = -1;
    }
    BOOL v105 = __CFADD__(v40, v47);
    unsigned int v48 = v40 + v47;
    if (v105) {
      uint64_t v49 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v49 = v48;
    }
    uint64_t v50 = v36[1];
    if ((v50 || (uint64_t v50 = *v36) != 0) && (*(unsigned char *)(v50 + 16) & 4) == 0 || v406 && (v406[16] & 4) == 0)
    {
      v51 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert((WTF::StringBuilder *)v36);
      int8x16_t v5 = v400;
      int8x16_t v13 = v401;
      if (v51)
      {
        uint64_t v52 = v51;
        if (v43) {
          memset_pattern16(v51, asc_1826CF510, 2 * v43);
        }
        else {
          size_t v43 = 0;
        }
        uint64_t v55 = 0;
        uint64_t v56 = 0;
        v57 = &v52[2 * v43];
        *(_OWORD *)v57 = xmmword_1826CF150;
        *((_OWORD *)v57 + 1) = xmmword_1826CF160;
        *((_WORD *)v57 + 16) = 103;
        unsigned int v58 = v398;
        do
        {
          uint64_t v59 = v56;
          uint64_t v60 = v55;
          v411[v55] = (v58 % 0xA) | 0x30;
          ++v56;
          --v55;
          BOOL v41 = v58 > 9;
          v58 /= 0xAu;
        }
        while (v41);
        v61 = v57 + 34;
        int8x16_t v5 = v400;
        int8x16_t v13 = v401;
        if (v55 + 14 <= 13)
        {
          unint64_t v62 = -v55;
          if ((unint64_t)-v55 < 8)
          {
            unint64_t v63 = v55 + 13;
            uint64_t v64 = v61;
            goto LABEL_156;
          }
          if (v62 >= 0x20)
          {
            unint64_t v65 = v62 & 0xFFFFFFFFFFFFFFE0;
            uint64_t v83 = (uint8x8_t *)((char *)&v412 - v59);
            unint64_t v84 = (1 - v60) & 0xFFFFFFFFFFFFFFE0;
            v85 = (uint16x8_t *)&v52[2 * v43 + 66];
            do
            {
              uint8x16_t v86 = *(uint8x16_t *)v83[-2].i8;
              uint16x8_t v87 = vmovl_u8(*v83);
              uint16x8_t v88 = vmovl_high_u8(*(uint8x16_t *)v83->i8);
              v85[-2] = vmovl_u8(*(uint8x8_t *)v86.i8);
              v85[-1] = vmovl_high_u8(v86);
              uint16x8_t *v85 = v87;
              v85[1] = v88;
              v85 += 4;
              v83 += 4;
              v84 -= 32;
            }
            while (v84);
            if (v62 == v65) {
              goto LABEL_157;
            }
            if ((v62 & 0x18) == 0)
            {
              uint64_t v64 = &v61[v65];
              unint64_t v63 = (v56 & 0xFFFFFFFFFFFFFFE0) + v55 + 13;
              do
LABEL_156:
                *v64++ = *((unsigned __int8 *)&v409 + v63++);
              while (v63 != 13);
              goto LABEL_157;
            }
          }
          else
          {
            unint64_t v65 = 0;
          }
          unint64_t v63 = (v56 & 0xFFFFFFFFFFFFFFF8) + v55 + 13;
          uint64_t v64 = &v61[v62 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v89 = (uint8x8_t *)&v411[v65 - v59];
          uint64_t v90 = (uint16x8_t *)&v52[2 * v65 + 34 + 2 * v43];
          unint64_t v91 = v65 - ((1 - v60) & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint8x8_t v92 = *v89++;
            *v90++ = vmovl_u8(v92);
            v91 += 8;
          }
          while (v91);
          if (v62 != (v62 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_156;
          }
        }
LABEL_157:
        LODWORD(v133) = 0;
        int v134 = 1;
        unsigned int v135 = v398;
        do
        {
          unsigned int v136 = v134;
          uint64_t v133 = (v133 + 1);
          ++v134;
          BOOL v41 = v135 > 9;
          v135 /= 0xAu;
        }
        while (v41);
        uint64_t v137 = &v61[v133];
        *uint64_t v137 = 91;
        uint64_t v138 = v137 + 1;
        if (!v38)
        {
          uint64_t v141 = 0;
LABEL_184:
          *(void *)&v138[v141] = 0xA0020003B005DLL;
          int v7 = v397;
          goto LABEL_185;
        }
        unsigned __int8 v139 = (int8x16_t *)*((void *)v38 + 1);
        uint64_t v140 = *((unsigned int *)v38 + 1);
        if ((v38[16] & 4) == 0)
        {
          if (v140)
          {
            if (v140 == 1)
            {
              *uint64_t v138 = v139->i16[0];
            }
            else
            {
              memcpy(v138, v139, 2 * v140);
              int8x16_t v5 = v400;
              int8x16_t v13 = v401;
            }
          }
          goto LABEL_183;
        }
        if (v140 < 0x40)
        {
          unint64_t v142 = (unint64_t)v138;
          uint64_t v149 = &v138[v140];
          if (v138 == v149)
          {
LABEL_183:
            uint64_t v141 = *((unsigned int *)v38 + 1);
            goto LABEL_184;
          }
        }
        else
        {
          unint64_t v142 = (unint64_t)&v138[v140 & 0xFFFFFFC0];
          uint64_t v143 = (char *)v138;
          do
          {
            v414.val[0] = *v139;
            int8x16_t v144 = v139[1];
            v418.val[0] = v139[2];
            int8x16_t v145 = v139[3];
            v139 += 4;
            v422.val[0] = v145;
            v418.val[1] = v401;
            v425.val[0] = v144;
            v414.val[1] = v401;
            uint64_t v146 = v143;
            vst2q_s8(v146, v414);
            v146 += 32;
            v422.val[1] = v401;
            v425.val[1] = v401;
            vst2q_s8(v146, v425);
            uint64_t v147 = v143 + 64;
            vst2q_s8(v147, v418);
            int v148 = v143 + 96;
            v143 += 128;
            vst2q_s8(v148, v422);
          }
          while (v143 != (char *)v142);
          uint64_t v149 = &v138[v140];
          if ((_WORD *)v142 == v149) {
            goto LABEL_183;
          }
        }
        unint64_t v150 = (unint64_t)&v52[2 * v140 + 2 * v43 - v142 + 34];
        uint64_t v151 = v133 + (v150 >> 1);
        unint64_t v152 = v151 & 0x7FFFFFFFFFFFFFFFLL;
        if ((v151 & 0x7FFFFFFFFFFFFFFFuLL) < 7
          || ((unint64_t v153 = v142 + 2 * v151 + 2, v142 < (unint64_t)v139->u64 + v152 + 1)
            ? (BOOL v154 = (unint64_t)v139 >= v153)
            : (BOOL v154 = 1),
              !v154))
        {
          uint16x8_t v158 = (_WORD *)v142;
          v159 = v139;
          goto LABEL_180;
        }
        unint64_t v155 = v152 + 1;
        unint64_t v156 = v150 >> 1;
        if (v152 >= 0x1F)
        {
          unint64_t v157 = v155 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v162 = (uint8x8_t *)&v139[1];
          v163 = (uint16x8_t *)(v142 + 32);
          unint64_t v164 = (((v156 + v136) & 0x7FFFFFFFFFFFFFFFLL) + 1) & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v165 = *(uint8x16_t *)v162[-2].i8;
            uint16x8_t v166 = vmovl_u8(*v162);
            uint16x8_t v167 = vmovl_high_u8(*(uint8x16_t *)v162->i8);
            v163[-2] = vmovl_u8(*(uint8x8_t *)v165.i8);
            v163[-1] = vmovl_high_u8(v165);
            uint16x8_t *v163 = v166;
            v163[1] = v167;
            v163 += 4;
            v162 += 4;
            v164 -= 32;
          }
          while (v164);
          if (v155 == v157) {
            goto LABEL_183;
          }
          if ((v155 & 0x18) == 0)
          {
            v159 = (int8x16_t *)((char *)v139 + v157);
            uint16x8_t v158 = (_WORD *)(v142 + 2 * v157);
            do
            {
LABEL_180:
              __int16 v160 = v159->u8[0];
              v159 = (int8x16_t *)((char *)v159 + 1);
              *v158++ = v160;
            }
            while (v158 != v149);
            goto LABEL_183;
          }
        }
        else
        {
          unint64_t v157 = 0;
        }
        uint16x8_t v158 = (_WORD *)(v142 + 2 * (v155 & 0xFFFFFFFFFFFFFFF8));
        v159 = (int8x16_t *)((char *)v139 + (v155 & 0xFFFFFFFFFFFFFFF8));
        uint16x8_t v168 = (uint8x8_t *)&v139->i8[v157];
        v169 = (uint16x8_t *)(v142 + 2 * v157);
        unint64_t v170 = v157 - ((((v156 + v136) & 0x7FFFFFFFFFFFFFFFLL) + 1) & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v171 = *v168++;
          *v169++ = vmovl_u8(v171);
          v170 += 8;
        }
        while (v170);
        if (v155 == (v155 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_183;
        }
        goto LABEL_180;
      }
LABEL_185:
      v161 = v406;
      v406 = 0;
      if (!v161) {
        goto LABEL_10;
      }
      if (*(_DWORD *)v161 != 2)
      {
        *(_DWORD *)v161 -= 2;
        goto LABEL_10;
      }
      WTF::StringImpl::destroy();
      goto LABEL_9;
    }
    uint64_t v53 = (void *)MEMORY[0x18530ACF0](v36, v49);
    int8x16_t v5 = v400;
    int8x16_t v13 = v401;
    if (!v53) {
      goto LABEL_185;
    }
    int8x16_t v54 = v53;
    if (v43) {
      memset(v53, 32, v43);
    }
    else {
      size_t v43 = 0;
    }
    uint64_t v66 = 0;
    size_t v67 = (size_t)v54 + v43;
    *(_OWORD *)size_t v67 = *(_OWORD *)"uint8_t __padding";
    *(unsigned char *)(v67 + 16) = 103;
    unsigned int v68 = v398;
    do
    {
      v411[v66--] = (v68 % 0xA) | 0x30;
      BOOL v41 = v68 > 9;
      v68 /= 0xAu;
    }
    while (v41);
    unint64_t v69 = (char *)(v67 + 17);
    if (v66 + 14 <= 13) {
      memcpy(v69, &v411[v66 + 1], -v66);
    }
    LODWORD(v70) = 0;
    int v71 = 1;
    unsigned int v72 = v398;
    int8x16_t v5 = v400;
    int8x16_t v13 = v401;
    do
    {
      unsigned int v73 = v71;
      uint64_t v70 = (v70 + 1);
      ++v71;
      BOOL v41 = v72 > 9;
      v72 /= 0xAu;
    }
    while (v41);
    uint64_t v74 = &v69[v70];
    *uint64_t v74 = 91;
    uint64_t v75 = v74 + 1;
    if (!v38)
    {
      uint64_t v82 = 0;
LABEL_132:
      *(_DWORD *)&v75[v82] = 169884509;
      goto LABEL_185;
    }
    uint64_t v76 = (int8x16_t *)*((void *)v38 + 1);
    size_t v77 = *((unsigned int *)v38 + 1);
    if ((v38[16] & 4) != 0)
    {
      if (v77)
      {
        if (v77 == 1)
        {
          *uint64_t v75 = v76->i8[0];
        }
        else
        {
          memcpy(v75, v76, v77);
          int8x16_t v5 = v400;
          int8x16_t v13 = v401;
        }
      }
      goto LABEL_131;
    }
    if (v77 < 0x10)
    {
      unint64_t v78 = (unint64_t)v75;
      unint64_t v81 = &v75[v77];
      if (v75 == &v75[v77])
      {
LABEL_131:
        uint64_t v82 = *((unsigned int *)v38 + 1);
        goto LABEL_132;
      }
    }
    else
    {
      unint64_t v78 = (unint64_t)&v75[v77 & 0xFFFFFFF0];
      uint64_t v79 = (unsigned long long *)v75;
      do
      {
        unsigned long long v80 = (unsigned __int128)vld2q_s8(v76->i8);
        v76 += 2;
        *v79++ = v80;
      }
      while (v79 != (unsigned long long *)v78);
      unint64_t v81 = &v75[v77];
      if ((unsigned char *)v78 == &v75[v77]) {
        goto LABEL_131;
      }
    }
    unint64_t v103 = (unint64_t)v54 + v77 + v43 - v78 + v70 + 18;
    if (v103 < 8
      || ((size_t v104 = (size_t)v54 + v77 + v43 + v70, v78 < (unint64_t)v76[2].u64 + 2 * v104 + -2 * v78 + 4)
        ? (BOOL v105 = (unint64_t)v76 >= v104 + 18)
        : (BOOL v105 = 1),
          !v105))
    {
      unsigned int v107 = (unsigned char *)v78;
      uint64_t v108 = v76;
      goto LABEL_127;
    }
    if (v103 >= 0x20)
    {
      unint64_t v106 = v103 & 0xFFFFFFFFFFFFFFE0;
      v180 = v76 + 2;
      unsigned int v181 = (int8x16_t *)(v78 + 16);
      unint64_t v182 = ((unint64_t)v54 + v77 + v43 - v78 + v73 + 18) & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v184 = v180[-2];
        int8x16_t v183 = v180[-1];
        int8x16_t v186 = *v180;
        int8x16_t v185 = v180[1];
        v180 += 4;
        v181[-1] = vuzp1q_s8(v184, v183);
        *unsigned int v181 = vuzp1q_s8(v186, v185);
        v181 += 2;
        v182 -= 32;
      }
      while (v182);
      if (v103 == v106) {
        goto LABEL_131;
      }
      if ((v103 & 0x18) == 0)
      {
        uint64_t v108 = (int8x16_t *)((char *)v76 + 2 * v106);
        unsigned int v107 = (unsigned char *)(v78 + v106);
        do
        {
LABEL_127:
          char v109 = v108->i8[0];
          uint64_t v108 = (int8x16_t *)((char *)v108 + 2);
          *v107++ = v109;
        }
        while (v107 != v81);
        goto LABEL_131;
      }
    }
    else
    {
      unint64_t v106 = 0;
    }
    unsigned int v107 = (unsigned char *)(v78 + (v103 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v108 = (int8x16_t *)((char *)v76 + 2 * (v103 & 0xFFFFFFFFFFFFFFF8));
    unsigned __int8 v187 = (int16x8_t *)((char *)v76 + 2 * v106);
    uint64_t v188 = (int8x8_t *)(v78 + v106);
    unint64_t v189 = v106 - (((unint64_t)v54 + v77 + v43 - v78 + v73 + 18) & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v190 = *v187++;
      *v188++ = vmovn_s16(v190);
      v189 += 8;
    }
    while (v189);
    if (v103 == (v103 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_131;
    }
    goto LABEL_127;
  }
LABEL_440:
  int v371 = *((unsigned __int8 *)a2 + 88);
  if (v371 != 4 && v371 != 8)
  {
    if (v371 != 9) {
      goto LABEL_451;
    }
    if (!*((_DWORD *)a2 + 21))
    {
      __break(0xC471u);
      return;
    }
    uint64_t v372 = **((void **)a2 + 9);
    v373 = (WTF::StringBuilder *)*((void *)this + 5);
    char v405 = 10;
    LODWORD(v402) = *((_DWORD *)this + 14);
    int v410 = 21;
    int v404 = v402;
    uint64_t v408 = *((void *)a2 + 6);
    v409 = "template<typename T>\n";
    v406 = "(T value)\n";
    int v407 = 10;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v373, &v405, (int *)&v402, (uint64_t)&v409, &v404, &v408, (uint64_t)&v406);
    int v374 = *((_DWORD *)this + 14) + 1;
    *((_DWORD *)this + 14) = v374;
    v375 = (WTF::StringBuilder *)*((void *)this + 5);
    LODWORD(v402) = v374;
    int v410 = 2;
    uint64_t v408 = *(void *)(v372 + 48);
    v409 = ": ";
    v406 = "(value)\n";
    int v407 = 8;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v375, (int *)&v402, (unint64_t *)&v409, &v408, (unint64_t *)&v406);
    goto LABEL_449;
  }
  v376 = (WTF::StringBuilder *)*((void *)this + 5);
  char v405 = 10;
  LODWORD(v402) = *((_DWORD *)this + 14);
  int v410 = 21;
  int v404 = v402;
  uint64_t v408 = *((void *)a2 + 6);
  v409 = "template<typename T>\n";
  v406 = "(const thread T& other)\n";
  int v407 = 24;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v376, &v405, (int *)&v402, (uint64_t)&v409, &v404, &v408, (uint64_t)&v406);
  int v377 = *((_DWORD *)this + 14);
  int v378 = v377 + 1;
  *((_DWORD *)this + 14) = v377 + 1;
  uint64_t v379 = *((unsigned int *)a2 + 21);
  if (v379)
  {
    v380 = (uint64_t *)*((void *)a2 + 9);
    uint64_t v381 = *v380;
    v382 = (WTF::StringBuilder *)*((void *)this + 5);
    int v404 = v378;
    char v405 = 58;
    char v403 = 32;
    uint64_t v408 = *(void *)(v381 + 48);
    v409 = "(other.";
    int v410 = 7;
    uint64_t v402 = v408;
    v406 = ")\n";
    int v407 = 2;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v382, &v404, &v405, &v403, &v408, (unint64_t *)&v409, &v402, (unint64_t *)&v406);
    if (v379 != 1)
    {
      v383 = v380 + 1;
      uint64_t v384 = 8 * v379 - 8;
      do
      {
        uint64_t v385 = *v383++;
        v386 = (WTF::StringBuilder *)*((void *)this + 5);
        int v404 = *((_DWORD *)this + 14);
        char v405 = 44;
        char v403 = 32;
        uint64_t v408 = *(void *)(v385 + 48);
        v409 = "(other.";
        int v410 = 7;
        uint64_t v402 = v408;
        v406 = ")\n";
        int v407 = 2;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v386, &v404, &v405, &v403, &v408, (unint64_t *)&v409, &v402, (unint64_t *)&v406);
        v384 -= 8;
      }
      while (v384);
    }
LABEL_449:
    int v377 = *((_DWORD *)this + 14) - 1;
  }
  *((_DWORD *)this + 14) = v377;
  v387 = (WTF::StringBuilder *)*((void *)this + 5);
  LODWORD(v406) = v377;
  v409 = "{ }\n";
  int v410 = 4;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v387, (int *)&v406, (uint64_t)&v409);
LABEL_451:
  int v388 = *((_DWORD *)this + 14) - 1;
  *((_DWORD *)this + 14) = v388;
  v389 = (WTF::StringBuilder *)*((void *)this + 5);
  LODWORD(v406) = v388;
  v409 = "};\n\n";
  int v410 = 4;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v389, (int *)&v406, (uint64_t)&v409);
  if (*((unsigned char *)this + 61)) {
    *((unsigned char *)this + 61) = 0;
  }
}

void WGSL::Metal::FunctionDefinitionWriter::visit(uint16x8_t *this, WGSL::AST::Variable *a2)
{
  if (*((unsigned char *)a2 + 128))
  {
    __int16 v4 = this[3].i16[7];
    this[3].i16[7] = *((unsigned __int8 *)a2 + 129) | 0x100;
    uint64_t v5 = *((void *)a2 + 18);
    if (!v5
      || *(_DWORD *)(v5 + 48) != 10
      || (uint64_t v6 = *(void *)(v5 + 8)) == 0
      || *(_DWORD *)(v6 + 48)
      || *(unsigned char *)v6 != 10)
    {
      uint64_t v9 = *((void *)a2 + 13);
      if (v9 && *(unsigned char *)(v9 + 24) == 5) {
        WTF::StringBuilder::append();
      }
      WGSL::Metal::FunctionDefinitionWriter::visit(this->i8, (const WGSL::Type *)v5);
      uint64_t v10 = (WTF::StringBuilder *)this[2].i64[1];
      char v75 = 32;
      uint64_t v74 = *((void *)a2 + 6);
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v10, &v75, &v74);
      if (*((unsigned char *)a2 + 128) == 2) {
        goto LABEL_15;
      }
      uint64_t v11 = (WGSL::AST::Expression *)*((void *)a2 + 15);
      if (v11)
      {
        WTF::StringBuilder::append();
        WGSL::Metal::FunctionDefinitionWriter::visit(this, (const WGSL::Type *)v5, v11);
LABEL_15:
        this[3].i16[7] = v4;
        return;
      }
LABEL_14:
      WTF::StringBuilder::append();
      goto LABEL_15;
    }
    int v7 = (WTF::StringBuilder *)this[2].i64[1];
    uint64_t v8 = *((void *)a2 + 6);
    uint64_t v12 = *((void *)v7 + 1);
    if ((v12 || (uint64_t v12 = *(void *)v7) != 0) && (*(unsigned char *)(v12 + 16) & 4) == 0 || v8 && (*(unsigned char *)(v8 + 16) & 4) == 0)
    {
      uint64_t v13 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v7);
      if (v13)
      {
        *(_OWORD *)uint64_t v13 = xmmword_1826CF460;
        *(_OWORD *)(v13 + 16) = xmmword_1826CF470;
        *(_WORD *)(v13 + 32) = 32;
        uint64_t v14 = (_WORD *)(v13 + 34);
        if (!v8)
        {
          uint64_t v25 = 0;
LABEL_59:
          int v44 = &v14[v25];
          *(_DWORD *)int v44 = 8060960;
          v44[2] = 32;
          goto LABEL_76;
        }
        uint64_t v15 = *(int8x16_t **)(v8 + 8);
        uint64_t v16 = *(unsigned int *)(v8 + 4);
        if ((*(unsigned char *)(v8 + 16) & 4) == 0)
        {
          if (v16)
          {
            if (v16 == 1) {
              _WORD *v14 = v15->i16[0];
            }
            else {
              memcpy((void *)(v13 + 34), v15, 2 * v16);
            }
          }
          goto LABEL_58;
        }
        uint64_t v26 = &v14[v16];
        if (v16 < 0x40)
        {
          unint64_t v27 = v13 + 34;
        }
        else
        {
          unint64_t v27 = (unint64_t)&v14[v16 & 0xFFFFFFC0];
          long long v28 = 0uLL;
          uint64_t v29 = (char *)(v13 + 34);
          do
          {
            v76.val[0] = *v15;
            int8x16_t v30 = v15[1];
            v77.val[0] = v15[2];
            int8x16_t v31 = v15[3];
            v15 += 4;
            int8x16_t v32 = v31;
            v77.val[1] = 0uLL;
            v78.val[0] = v30;
            v76.val[1] = 0uLL;
            int v33 = v29;
            vst2q_s8(v33, v76);
            v33 += 32;
            v78.val[1] = 0uLL;
            vst2q_s8(v33, v78);
            uint64_t v34 = v29 + 64;
            vst2q_s8(v34, v77);
            unsigned int v35 = v29 + 96;
            vst2q_s8(v35, *(int8x16x2_t *)(&v28 - 1));
            v29 += 128;
          }
          while (v29 != (char *)v27);
        }
        if ((_WORD *)v27 == v26) {
          goto LABEL_58;
        }
        unint64_t v37 = v13 + 2 * v16 - v27 + 32;
        if (v37 < 0xE
          || (v27 < (unint64_t)v15->u64 + (v37 >> 1) + 1
            ? (BOOL v38 = (unint64_t)v15 >= (v37 & 0xFFFFFFFFFFFFFFFELL) + v27 + 2)
            : (BOOL v38 = 1),
              !v38))
        {
          BOOL v41 = (_WORD *)v27;
          unsigned int v42 = v15;
          goto LABEL_55;
        }
        uint64_t v39 = (v37 >> 1) + 1;
        if (v37 >= 0x3E)
        {
          unint64_t v40 = v39 & 0xFFFFFFFFFFFFFFE0;
          uint64_t v53 = (uint8x8_t *)&v15[1];
          int8x16_t v54 = (uint16x8_t *)(v27 + 32);
          unint64_t v55 = v39 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v56 = *(uint8x16_t *)v53[-2].i8;
            uint16x8_t v57 = vmovl_u8(*v53);
            uint16x8_t v58 = vmovl_high_u8(*(uint8x16_t *)v53->i8);
            v54[-2] = vmovl_u8(*(uint8x8_t *)v56.i8);
            v54[-1] = vmovl_high_u8(v56);
            *int8x16_t v54 = v57;
            v54[1] = v58;
            v54 += 4;
            v53 += 4;
            v55 -= 32;
          }
          while (v55);
          if (v39 == v40) {
            goto LABEL_58;
          }
          if ((v39 & 0x18) == 0)
          {
            unsigned int v42 = (int8x16_t *)((char *)v15 + v40);
            BOOL v41 = (_WORD *)(v27 + 2 * v40);
            do
            {
LABEL_55:
              __int16 v43 = v42->u8[0];
              unsigned int v42 = (int8x16_t *)((char *)v42 + 1);
              *v41++ = v43;
            }
            while (v41 != v26);
LABEL_58:
            uint64_t v25 = *(unsigned int *)(v8 + 4);
            goto LABEL_59;
          }
        }
        else
        {
          unint64_t v40 = 0;
        }
        BOOL v41 = (_WORD *)(v27 + 2 * (v39 & 0xFFFFFFFFFFFFFFF8));
        unsigned int v42 = (int8x16_t *)((char *)v15 + (v39 & 0xFFFFFFFFFFFFFFF8));
        uint64_t v59 = (uint8x8_t *)&v15->i8[v40];
        uint64_t v60 = (uint16x8_t *)(v27 + 2 * v40);
        unint64_t v61 = v40 - (v39 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v62 = *v59++;
          *v60++ = vmovl_u8(v62);
          v61 += 8;
        }
        while (v61);
        if (v39 == (v39 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_58;
        }
        goto LABEL_55;
      }
LABEL_76:
      (*(void (**)(uint16x8_t *, void))(this->i64[0] + 208))(this, *((void *)a2 + 15));
      WTF::StringBuilder::append();
      (*(void (**)(uint16x8_t *, void))(this->i64[0] + 208))(this, *((void *)a2 + 15));
      WTF::StringBuilder::append();
      (*(void (**)(uint16x8_t *, void))(this->i64[0] + 208))(this, *((void *)a2 + 15));
      WTF::StringBuilder::append();
      (*(void (**)(uint16x8_t *, void))(this->i64[0] + 208))(this, *((void *)a2 + 15));
      goto LABEL_14;
    }
    uint64_t v17 = MEMORY[0x18530ACF0]();
    if (!v17) {
      goto LABEL_76;
    }
    *(unsigned char *)(v17 + 16) = 32;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)"texture_external ";
    int v18 = (unsigned char *)(v17 + 17);
    if (!v8)
    {
      uint64_t v36 = 0;
LABEL_75:
      uint64_t v52 = &v18[v36];
      v52[2] = 32;
      *(_WORD *)uint64_t v52 = 31520;
      goto LABEL_76;
    }
    size_t v19 = *(int8x16_t **)(v8 + 8);
    size_t v20 = *(unsigned int *)(v8 + 4);
    if ((*(unsigned char *)(v8 + 16) & 4) != 0)
    {
      if (v20)
      {
        if (v20 == 1) {
          *int v18 = v19->i8[0];
        }
        else {
          memcpy((void *)(v17 + 17), v19, v20);
        }
      }
      goto LABEL_74;
    }
    unsigned __int8 v21 = &v18[v20];
    if (v20 < 0x10)
    {
      unint64_t v22 = v17 + 17;
    }
    else
    {
      unint64_t v22 = (unint64_t)&v18[v20 & 0xFFFFFFF0];
      unsigned int v23 = (unsigned long long *)(v17 + 17);
      do
      {
        unsigned long long v24 = (unsigned __int128)vld2q_s8(v19->i8);
        v19 += 2;
        *v23++ = v24;
      }
      while (v23 != (unsigned long long *)v22);
    }
    if ((unsigned char *)v22 == v21)
    {
LABEL_74:
      uint64_t v36 = *(unsigned int *)(v8 + 4);
      goto LABEL_75;
    }
    size_t v45 = v17 + v20;
    unint64_t v46 = v17 + v20 - v22 + 17;
    if (v46 < 8
      || (v22 < (unint64_t)v19[2].u64 + 2 * v45 + -2 * v22 + 2
        ? (BOOL v47 = (unint64_t)v19 >= v45 + 17)
        : (BOOL v47 = 1),
          !v47))
    {
      uint64_t v49 = (unsigned char *)v22;
      uint64_t v50 = v19;
      goto LABEL_71;
    }
    if (v46 >= 0x20)
    {
      unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v63 = v19 + 2;
      uint64_t v64 = (int8x16_t *)(v22 + 16);
      unint64_t v65 = v46 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v67 = v63[-2];
        int8x16_t v66 = v63[-1];
        int8x16_t v69 = *v63;
        int8x16_t v68 = v63[1];
        v63 += 4;
        v64[-1] = vuzp1q_s8(v67, v66);
        *uint64_t v64 = vuzp1q_s8(v69, v68);
        v64 += 2;
        v65 -= 32;
      }
      while (v65);
      if (v46 == v48) {
        goto LABEL_74;
      }
      if ((v46 & 0x18) == 0)
      {
        uint64_t v50 = (int8x16_t *)((char *)v19 + 2 * v48);
        uint64_t v49 = (unsigned char *)(v22 + v48);
        do
        {
LABEL_71:
          char v51 = v50->i8[0];
          uint64_t v50 = (int8x16_t *)((char *)v50 + 2);
          *v49++ = v51;
        }
        while (v49 != v21);
        goto LABEL_74;
      }
    }
    else
    {
      unint64_t v48 = 0;
    }
    uint64_t v49 = (unsigned char *)(v22 + (v46 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v50 = (int8x16_t *)((char *)v19 + 2 * (v46 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v70 = (int16x8_t *)((char *)v19 + 2 * v48);
    int v71 = (int8x8_t *)(v22 + v48);
    unint64_t v72 = v48 - (v46 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v73 = *v70++;
      *v71++ = vmovn_s16(v73);
      v72 += 8;
    }
    while (v72);
    if (v46 == (v46 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_74;
    }
    goto LABEL_71;
  }
}

uint64_t WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::add<WGSL::ConstantValue const&>@<X0>(uint64_t *a1@<X0>, WTF::StringImpl **a2@<X1>, const WTF::StringImpl *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v7 = *a1;
  if (!*a1)
  {
    WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>::rehash(a1, 8u, 0);
    uint64_t v7 = *a1;
    if (!*a1)
    {
      int v8 = 0;
      uint64_t v9 = *a2;
      unsigned int v10 = *((_DWORD *)*a2 + 4);
      if (v10 >= 0x100) {
        goto LABEL_4;
      }
LABEL_6:
      unsigned int v11 = WTF::StringImpl::hashSlowCase(v9);
      goto LABEL_7;
    }
  }
  int v8 = *(_DWORD *)(v7 - 8);
  uint64_t v9 = *a2;
  unsigned int v10 = *((_DWORD *)*a2 + 4);
  if (v10 < 0x100) {
    goto LABEL_6;
  }
LABEL_4:
  unsigned int v11 = v10 >> 8;
LABEL_7:
  uint64_t v12 = 0;
  for (int i = 1; ; ++i)
  {
    uint64_t v14 = v11 & v8;
    uint64_t v15 = (WTF::StringImpl **)(v7 + 32 * v14);
    uint64_t v16 = *v15;
    if (*v15 == (WTF::StringImpl *)-1)
    {
      uint64_t v12 = (WTF::StringImpl **)(v7 + 32 * v14);
      goto LABEL_9;
    }
    if (!v16)
    {
      if (v12)
      {
        *(_OWORD *)uint64_t v12 = 0u;
        *((_OWORD *)v12 + 1) = 0u;
        --*(_DWORD *)(*a1 - 16);
        uint64_t v15 = v12;
      }
      uint64_t result = (uint64_t)WTF::HashMapTranslator<WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::String>>::translate<WTF::String const&,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::HashTableAddResult<WTF::HashTableIterator<WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>,WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>> WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::inlineAdd<WTF::String const&,WGSL::ConstantValue const&>(WTF::String const&,WGSL::ConstantValue const&)::{lambda(void)#1}>((uint64_t)v15, (_DWORD **)a2, (uint64_t *)&v25);
      if (*a1)
      {
        ++*(_DWORD *)(*a1 - 12);
        uint64_t v20 = *a1;
        if (*a1) {
          goto LABEL_19;
        }
      }
      else
      {
        MEMORY[0xFFFFFFFFFFFFFFF4] = 1;
        uint64_t v20 = *a1;
        if (*a1)
        {
LABEL_19:
          uint64_t v21 = (*(_DWORD *)(v20 - 16) + *(_DWORD *)(v20 - 12));
          unint64_t v22 = *(unsigned int *)(v20 - 4);
          if (v22 <= 0x400) {
            goto LABEL_20;
          }
          goto LABEL_28;
        }
      }
      uint64_t v21 = *(unsigned int *)(v20 - 16);
      unint64_t v22 = *(unsigned int *)(v20 - 4);
      if (v22 <= 0x400)
      {
LABEL_20:
        if (3 * v22 > 4 * v21)
        {
LABEL_31:
          uint64_t v24 = v20 + 32 * v22;
          char v23 = 1;
          goto LABEL_32;
        }
        if (!v22)
        {
          uint64_t result = WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>::rehash(a1, 8u, v15);
          uint64_t v15 = (WTF::StringImpl **)result;
          uint64_t v20 = *a1;
          if (!*a1)
          {
LABEL_23:
            unint64_t v22 = 0;
            goto LABEL_31;
          }
LABEL_30:
          unint64_t v22 = *(unsigned int *)(v20 - 4);
          goto LABEL_31;
        }
LABEL_29:
        uint64_t result = WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>::rehash(a1, v22 << (6 * *(_DWORD *)(v20 - 12) >= (2 * v22)), v15);
        uint64_t v15 = (WTF::StringImpl **)result;
        uint64_t v20 = *a1;
        if (!*a1) {
          goto LABEL_23;
        }
        goto LABEL_30;
      }
LABEL_28:
      if (v22 > 2 * v21) {
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    uint64_t result = WTF::equal(v16, *a2, a3);
    if (result) {
      break;
    }
LABEL_9:
    unsigned int v11 = i + v14;
  }
  uint64_t v18 = *a1;
  if (*a1) {
    uint64_t v19 = *(unsigned int *)(v18 - 4);
  }
  else {
    uint64_t v19 = 0;
  }
  char v23 = 0;
  uint64_t v24 = v18 + 32 * v19;
LABEL_32:
  *(void *)a4 = v15;
  *(void *)(a4 + 8) = v24;
  *(unsigned char *)(a4 + 16) = v23;
  return result;
}

void WGSL::Metal::FunctionDefinitionWriter::visit(uint16x8_t *this, const WGSL::Type *a2, WGSL::AST::Expression *a3)
{
  uint64_t v3 = a3;
  v11[0] = 0;
  char v13 = 0;
  if (*((unsigned char *)a3 + 56))
  {
LABEL_2:
    int v12 = -1;
    uint64_t v6 = *((unsigned int *)v3 + 12);
    if (v6 == -1)
    {
      char v13 = 1;
      LOBYTE(v9[0]) = 0;
      int v10 = -1;
    }
    else
    {
      uint64_t v7 = (char *)v3 + 32;
      int v8 = off_1ECABDED0[v6];
      ((void (*)(char *, unsigned char *, char *))v8)(&v14, v11, v7);
      int v12 = v6;
      char v13 = 1;
      LOBYTE(v9[0]) = 0;
      int v10 = -1;
      ((void (*)(char *, unsigned int **, unsigned char *))v8)(&v14, v9, v11);
      int v10 = v6;
    }
    WGSL::Metal::FunctionDefinitionWriter::serializeConstant(this, (uint64_t *)a2, v9);
    if (v10 != -1) {
      ((void (*)(char *, unsigned int **))off_1ECABDE78[v10])(&v14, v9);
    }
    int v10 = -1;
    if (v13)
    {
      if (v12 != -1) {
        ((void (*)(char *, unsigned char *))off_1ECABDE78[v12])(&v14, v11);
      }
    }
  }
  else
  {
    while (1)
    {
      if ((*(unsigned int (**)(WGSL::AST::Expression *))(*(void *)v3 + 16))(v3) == 20)
      {
        WGSL::Metal::FunctionDefinitionWriter::visit((WGSL::Metal::FunctionDefinitionWriter *)this, a2, v3);
        return;
      }
      if ((*(unsigned int (**)(WGSL::AST::Expression *))(*(void *)v3 + 16))(v3) != 23) {
        break;
      }
      uint64_t v3 = (WGSL::AST::Expression *)*((void *)v3 + 8);
      v11[0] = 0;
      char v13 = 0;
      if (*((unsigned char *)v3 + 56)) {
        goto LABEL_2;
      }
    }
    WGSL::AST::Visitor::visit(this, (uint64_t)v3);
  }
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(uint64_t this, WGSL::AST::BuiltinAttribute *a2)
{
  if (!*(unsigned char *)(this + 61)
    || ((v2 = *(unsigned __int8 *)(this + 60), BOOL v3 = v2 > 9, v4 = (1 << v2) & 0x310, !v3) ? (v5 = v4 == 0) : (v5 = 1), !v5))
  {
    switch(*((unsigned char *)a2 + 24))
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
        this = WTF::StringBuilder::append();
        break;
      default:
        return this;
    }
  }
  return this;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(uint64_t this, WGSL::AST::StageAttribute *a2)
{
  *(_WORD *)(this + 66) = *((unsigned __int8 *)a2 + 24) | 0x100;
  int v2 = *((unsigned __int8 *)a2 + 24);
  if (v2 == 1 || v2 == 4 || v2 == 2) {
    return WTF::StringBuilder::append();
  }
  return this;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::GroupAttribute *a2)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *((void *)a2 + 3);
  if (!*(unsigned char *)(v2 + 56))
  {
    __break(1u);
LABEL_46:
    uint64_t result = 151;
    __break(0xC471u);
    return result;
  }
  int v3 = *(_DWORD *)(v2 + 48);
  if (v3 != 5 && v3 != 4 && v3 != 3) {
    goto LABEL_46;
  }
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  if (*((unsigned char *)this + 67))
  {
    if (*((unsigned char *)this + 66) == 1)
    {
      unsigned int v5 = *(_DWORD *)(*((void *)this + 6) + 40) - 1;
      BOOL v6 = v5 >= v4;
      unsigned int v7 = v5 - v4;
      if (v6) {
        unsigned int v4 = v7;
      }
    }
  }
  int v8 = 0;
  uint64_t v9 = (WTF::StringBuilder *)*((void *)this + 5);
  unsigned int v10 = v4;
  do
  {
    ++v8;
    BOOL v11 = v10 > 9;
    v10 /= 0xAu;
  }
  while (v11);
  uint64_t v12 = *((void *)v9 + 1);
  if ((v12 || (uint64_t v12 = *(void *)v9) != 0) && (*(unsigned char *)(v12 + 16) & 4) == 0)
  {
    uint64_t result = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v9);
    if (!result) {
      return result;
    }
    uint64_t v14 = 0;
    *(_OWORD *)uint64_t result = xmmword_1826CF480;
    uint64_t v15 = 13;
    uint64_t v16 = 1;
    *(_WORD *)(result + 16) = 40;
    unsigned int v17 = v4;
    do
    {
      uint64_t v18 = v15;
      uint64_t v19 = v14;
      uint64_t v20 = v16;
      v42[--v15] = (v17 % 0xA) | 0x30;
      ++v14;
      ++v16;
      BOOL v11 = v17 > 9;
      v17 /= 0xAu;
    }
    while (v11);
    uint64_t v21 = result + 18;
    if (v18 > 13) {
      goto LABEL_42;
    }
    unint64_t v22 = v19 + 1;
    if ((unint64_t)(v19 + 1) < 8)
    {
      uint64_t v23 = v15;
      uint64_t v24 = (_WORD *)(result + 18);
      goto LABEL_41;
    }
    if (v22 >= 0x20)
    {
      unint64_t v30 = v22 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v31 = (uint16x8_t *)(result + 50);
      unint64_t v32 = v20 & 0xFFFFFFFFFFFFFFE0;
      int v33 = (uint8x8_t *)&v42[-v19 + 28];
      do
      {
        uint8x16_t v34 = *(uint8x16_t *)v33[-2].i8;
        uint16x8_t v35 = vmovl_u8(*v33);
        uint16x8_t v36 = vmovl_high_u8(*(uint8x16_t *)v33->i8);
        v31[-2] = vmovl_u8(*(uint8x8_t *)v34.i8);
        v31[-1] = vmovl_high_u8(v34);
        *int8x16_t v31 = v35;
        v31[1] = v36;
        v31 += 4;
        v33 += 4;
        v32 -= 32;
      }
      while (v32);
      if (v22 == v30) {
        goto LABEL_42;
      }
      if ((v22 & 0x18) == 0)
      {
        uint64_t v24 = (_WORD *)(v21 + 2 * v30);
        uint64_t v23 = v15 + v30;
        do
LABEL_41:
          *v24++ = v42[v23++];
        while (v23 != 13);
LABEL_42:
        unsigned int v40 = 0;
        do
        {
          ++v40;
          BOOL v11 = v4 > 9;
          v4 /= 0xAu;
        }
        while (v11);
        uint64_t v41 = v21 + 2 * v40;
        *(_DWORD *)uint64_t v41 = 6094889;
        *(_WORD *)(v41 + 4) = 93;
        return result;
      }
    }
    else
    {
      unint64_t v30 = 0;
    }
    uint64_t v23 = v15 + (v22 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (_WORD *)(v21 + 2 * (v22 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v37 = (uint16x8_t *)(result + 2 * v30 + 18);
    unint64_t v38 = v30 - (v20 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v39 = &v42[v30];
    do
    {
      *v37++ = vmovl_u8(*(uint8x8_t *)&v39[v15]);
      v39 += 8;
      v38 += 8;
    }
    while (v38);
    if (v22 == (v22 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t result = MEMORY[0x18530ACF0]();
  if (result)
  {
    uint64_t v25 = 0;
    *(unsigned char *)(result + 8) = 40;
    *(void *)uint64_t result = *(void *)"[[buffer(";
    unsigned int v26 = v4;
    do
    {
      v42[v25-- + 12] = (v26 % 0xA) | 0x30;
      BOOL v11 = v26 > 9;
      v26 /= 0xAu;
    }
    while (v11);
    uint64_t v27 = result + 9;
    if (v25 + 14 <= 13) {
      uint64_t result = (uint64_t)memcpy((void *)(result + 9), &v42[v25 + 13], -v25);
    }
    unsigned int v28 = 0;
    do
    {
      ++v28;
      BOOL v11 = v4 > 9;
      v4 /= 0xAu;
    }
    while (v11);
    uint64_t v29 = v27 + v28;
    *(unsigned char *)(v29 + 2) = 93;
    *(_WORD *)uint64_t v29 = 23849;
  }
  return result;
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::BindingAttribute *a2)
{
  uint64_t v2 = *((void *)a2 + 3);
  if (*(unsigned char *)(v2 + 56))
  {
    int v3 = (WTF::StringBuilder *)*((void *)this + 5);
    int v4 = *(_DWORD *)(v2 + 48);
    switch(v4)
    {
      case 5:
        unint64_t v5 = *(void *)(v2 + 32);
        goto LABEL_8;
      case 4:
        unint64_t v5 = *(unsigned int *)(v2 + 32);
        goto LABEL_8;
      case 3:
        unint64_t v5 = *(int *)(v2 + 32);
LABEL_8:
        uint64_t v9 = "[[id(";
        int v10 = 5;
        unint64_t v8 = v5;
        BOOL v6 = ")]]";
        int v7 = 3;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v3, (unint64_t *)&v9, &v8, (unint64_t *)&v6);
        return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(0xC471u);
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::LocationAttribute *a2)
{
  if (*((unsigned char *)this + 61))
  {
    switch(*((unsigned char *)this + 60))
    {
      case 1:
        uint64_t v6 = *((void *)a2 + 3);
        if (!*(unsigned char *)(v6 + 56)) {
          goto LABEL_29;
        }
        int v3 = (WTF::StringBuilder *)*((void *)this + 5);
        int v7 = *(_DWORD *)(v6 + 48);
        switch(v7)
        {
          case 5:
            unint64_t v5 = *(void *)(v6 + 32);
            break;
          case 4:
            unint64_t v5 = *(unsigned int *)(v6 + 32);
            break;
          case 3:
            unint64_t v5 = *(int *)(v6 + 32);
            break;
          default:
            __break(0xC471u);
            JUMPOUT(0x18258ECF4);
        }
        uint64_t v14 = "[[attribute(";
        int v10 = 12;
        goto LABEL_27;
      case 2:
      case 4:
        uint64_t v2 = *((void *)a2 + 3);
        if (!*(unsigned char *)(v2 + 56)) {
          goto LABEL_29;
        }
        int v3 = (WTF::StringBuilder *)*((void *)this + 5);
        int v4 = *(_DWORD *)(v2 + 48);
        switch(v4)
        {
          case 5:
            unint64_t v5 = *(void *)(v2 + 32);
            break;
          case 4:
            unint64_t v5 = *(unsigned int *)(v2 + 32);
            break;
          case 3:
            unint64_t v5 = *(int *)(v2 + 32);
            break;
          default:
            __break(0xC471u);
            JUMPOUT(0x18258ECD4);
        }
        uint64_t v14 = "[[user(loc";
        int v10 = 10;
        goto LABEL_27;
      case 8:
        uint64_t v8 = *((void *)a2 + 3);
        if (!*(unsigned char *)(v8 + 56))
        {
LABEL_29:
          __break(1u);
LABEL_30:
          __break(0xC471u);
          JUMPOUT(0x18258ECB4);
        }
        int v3 = (WTF::StringBuilder *)*((void *)this + 5);
        int v9 = *(_DWORD *)(v8 + 48);
        switch(v9)
        {
          case 5:
            unint64_t v5 = *(void *)(v8 + 32);
            break;
          case 4:
            unint64_t v5 = *(unsigned int *)(v8 + 32);
            break;
          case 3:
            unint64_t v5 = *(int *)(v8 + 32);
            break;
          default:
            __break(0xC471u);
            JUMPOUT(0x18258ED14);
        }
        uint64_t v14 = "[[color(";
        int v10 = 8;
LABEL_27:
        int v15 = v10;
        unint64_t v13 = v5;
        BOOL v11 = ")]]";
        int v12 = 3;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v3, (unint64_t *)&v14, &v13, (unint64_t *)&v11);
        break;
      case 9:
        goto LABEL_30;
      default:
        return;
    }
  }
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::InterpolateAttribute *a2)
{
  int v2 = *((unsigned __int8 *)a2 + 24);
  if (!*((unsigned char *)a2 + 24)) {
    goto LABEL_12;
  }
  int v3 = *((unsigned __int8 *)a2 + 25);
  if (v2 == 2)
  {
    if (*((unsigned char *)a2 + 25))
    {
      if (v3 != 2)
      {
        if (v3 == 1)
        {
          int v4 = "centroid_perspective";
          uint64_t v5 = 21;
          goto LABEL_13;
        }
        goto LABEL_12;
      }
      int v4 = "sample_perspective";
      uint64_t v5 = 19;
    }
    else
    {
      int v4 = "center_perspective";
      uint64_t v5 = 19;
    }
    goto LABEL_13;
  }
  if (v2 != 1)
  {
LABEL_12:
    int v4 = "flat";
    uint64_t v5 = 5;
    goto LABEL_13;
  }
  if (*((unsigned char *)a2 + 25))
  {
    if (v3 != 2)
    {
      if (v3 == 1)
      {
        int v4 = "centroid_no_perspective";
        uint64_t v5 = 24;
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    int v4 = "sample_no_perspective";
    uint64_t v5 = 22;
  }
  else
  {
    int v4 = "center_no_perspective";
    uint64_t v5 = 22;
  }
LABEL_13:
  uint64_t v6 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v14 = "[[";
  int v15 = 2;
  BOOL v7 = v5 != 0;
  unint64_t v8 = v5 - 1;
  if (!v7) {
    unint64_t v8 = 0;
  }
  int v12 = v4;
  if (v8 >> 31)
  {
    uint64_t result = 124;
    __break(0xC471u);
  }
  else
  {
    int v13 = v8;
    int v10 = "]]";
    int v11 = 2;
    return (uint64_t)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v6, (unint64_t *)&v14, (uint64_t)&v12, (uint64_t)&v10);
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Parameter *a2)
{
  __int16 v4 = *((_WORD *)this + 32);
  *((_WORD *)this + 32) = *((unsigned __int8 *)a2 + 24) | 0x100;
  WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, *(const WGSL::Type **)(*((void *)a2 + 8) + 24));
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  v16[0] = 32;
  uint64_t v15 = *((void *)a2 + 7);
  uint64_t result = (uint64_t)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v5, v16, &v15);
  uint64_t v7 = *((unsigned int *)a2 + 21);
  if (v7)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 9);
    uint64_t v9 = 8 * v7;
    do
    {
      uint64_t v10 = *v8;
      uint64_t result = *((void *)this + 5);
      v16[1] = 32;
      uint64_t v11 = *(void *)(result + 8);
      if (v11 && (uint64_t v12 = *(unsigned int *)(result + 16), v12 < *(_DWORD *)(v11 + 4)) && !*(void *)result)
      {
        int v13 = *(_DWORD *)(v11 + 16);
        uint64_t v14 = *(void *)(v11 + 8);
        *(_DWORD *)(result + 16) = v12 + 1;
        if ((v13 & 4) != 0) {
          *(unsigned char *)(v14 + v12) = 32;
        }
        else {
          *(_WORD *)(v14 + 2 * v12) = 32;
        }
      }
      else
      {
        uint64_t result = WTF::StringBuilder::append();
      }
      if (!*((unsigned char *)this + 32)) {
        uint64_t result = (*(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 88))(this, v10);
      }
      ++v8;
      v9 -= 8;
    }
    while (v9);
  }
  *((_WORD *)this + 32) = v4;
  return result;
}

void WGSL::Metal::FunctionDefinitionWriter::visit(uint16x8_t *this, const WGSL::Type **a2)
{
}

uint16x8_t *WGSL::Metal::FunctionDefinitionWriter::serializeConstant(uint16x8_t *result, uint64_t *a2, unsigned int **a3)
{
  uint64_t v401 = *MEMORY[0x1E4F143B8];
  int v3 = *((_DWORD *)a2 + 12);
  if (v3 == -1) {
    uint64_t v4 = -1;
  }
  else {
    uint64_t v4 = *((unsigned int *)a2 + 12);
  }
  uint64_t v7 = result;
  switch(v4)
  {
    case 1:
      if (v3 != 1 || *((_DWORD *)a3 + 4) != 8) {
        goto LABEL_521;
      }
      WGSL::Metal::FunctionDefinitionWriter::visit(result->i8, (const WGSL::Type *)a2);
      uint64_t v9 = v7[2].i64[1];
      LOBYTE(v396) = 40;
      uint64_t v10 = *(void *)(v9 + 8);
      if (v10 && (uint64_t v11 = *(unsigned int *)(v9 + 16), v11 < *(_DWORD *)(v10 + 4)) && !*(void *)v9)
      {
        int v211 = *(_DWORD *)(v10 + 16);
        uint64_t v212 = *(void *)(v10 + 8);
        *(_DWORD *)(v9 + 16) = v11 + 1;
        if ((v211 & 4) != 0) {
          *(unsigned char *)(v212 + v11) = 40;
        }
        else {
          *(_WORD *)(v212 + 2 * v11) = 40;
        }
      }
      else
      {
        WTF::StringBuilder::append();
      }
      uint64_t v12 = *a3;
      if (*a3) {
        uint64_t v13 = (uint64_t)(*a3 + 2);
      }
      else {
        uint64_t v13 = 0;
      }
      if (v12)
      {
        uint64_t v14 = (uint64_t)&(*a3)[6 * *v12 + 2];
        if (v13 == v14) {
          goto LABEL_485;
        }
      }
      else
      {
        uint64_t v14 = 0;
        if (!v13) {
          goto LABEL_485;
        }
      }
      uint64_t v72 = *a2;
      uint64_t v73 = *(unsigned int *)(v13 + 16);
      __s[0] = 0;
      int v400 = -1;
      if (v73 != -1)
      {
        ((void (*)(char **, char *, uint64_t))off_1ECABDED0[v73])(&v396, __s, v13);
        int v400 = v73;
      }
      WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v72, __s);
      if (v400 != -1) {
        ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
      }
      int v400 = -1;
      for (uint64_t i = v13 + 24; i != v14; i += 24)
      {
        WTF::StringBuilder::append();
        uint64_t v75 = *a2;
        __s[0] = 0;
        int v400 = -1;
        uint64_t v76 = *(unsigned int *)(i + 16);
        if (v76 != -1)
        {
          ((void (*)(char **, char *, uint64_t))off_1ECABDED0[v76])(&v396, __s, i);
          int v400 = v76;
        }
        WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v75, __s);
        if (v400 != -1) {
          ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
        }
        int v400 = -1;
      }
      goto LABEL_485;
    case 2:
      if (v3 != 2 || *((_DWORD *)a3 + 4) != 9) {
        goto LABEL_521;
      }
      WTF::StringBuilder::append();
      WGSL::Metal::FunctionDefinitionWriter::visit(v7->i8, (const WGSL::Type *)*a2);
      int v15 = 0;
      uint64_t v16 = (WTF::StringBuilder *)v7[2].i64[1];
      unsigned __int8 v17 = *((unsigned char *)a2 + 8);
      unsigned __int8 v18 = *((unsigned char *)a2 + 9);
      unsigned __int8 v19 = v17;
      do
      {
        ++v15;
        unsigned int v20 = v19;
        v19 /= 0xAu;
      }
      while (v20 > 9);
      int v21 = 0;
      unsigned __int8 v22 = *((unsigned char *)a2 + 9);
      do
      {
        ++v21;
        unsigned int v23 = v22;
        v22 /= 0xAu;
      }
      while (v23 > 9);
      uint64_t v24 = *((void *)v16 + 1);
      if ((v24 || (uint64_t v24 = *(void *)v16) != 0) && (*(unsigned char *)(v24 + 16) & 4) == 0)
      {
        uint64_t v25 = (_DWORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v16);
        if (v25)
        {
          uint64_t v26 = 0;
          _DWORD *v25 = 2097196;
          uint64_t v27 = 4;
          uint64_t v28 = 1;
          unsigned __int8 v29 = v17;
          do
          {
            uint64_t v30 = v27;
            uint64_t v31 = v26;
            uint64_t v32 = v28;
            unsigned int v33 = v29;
            --v27;
            *((unsigned char *)&v396 + v27) = (v29 % 0xAu) | 0x30;
            ++v26;
            ++v28;
            v29 /= 0xAu;
          }
          while (v33 > 9);
          uint8x16_t v34 = v25 + 1;
          if (v30 <= 4)
          {
            unint64_t v35 = v31 + 1;
            if ((unint64_t)(v31 + 1) < 8)
            {
              uint64_t v36 = v27;
              unint64_t v37 = v25 + 1;
              goto LABEL_447;
            }
            if (v35 >= 0x20)
            {
              unint64_t v219 = v35 & 0xFFFFFFFFFFFFFFE0;
              unint64_t v315 = (uint16x8_t *)(v25 + 9);
              unint64_t v316 = v32 & 0xFFFFFFFFFFFFFFE0;
              v317 = (uint8x8_t *)((char *)&v396 - v31 + 19);
              do
              {
                uint8x16_t v318 = *(uint8x16_t *)v317[-2].i8;
                uint16x8_t v319 = vmovl_u8(*v317);
                uint16x8_t v320 = vmovl_high_u8(*(uint8x16_t *)v317->i8);
                v315[-2] = vmovl_u8(*(uint8x8_t *)v318.i8);
                v315[-1] = vmovl_high_u8(v318);
                *unint64_t v315 = v319;
                v315[1] = v320;
                v315 += 4;
                v317 += 4;
                v316 -= 32;
              }
              while (v316);
              if (v35 == v219) {
                goto LABEL_448;
              }
              if ((v35 & 0x18) == 0)
              {
                unint64_t v37 = (_WORD *)v34 + v219;
                uint64_t v36 = v27 + v219;
                do
LABEL_447:
                  *v37++ = *((unsigned __int8 *)&v396 + v36++);
                while (v36 != 4);
                goto LABEL_448;
              }
            }
            else
            {
              unint64_t v219 = 0;
            }
            uint64_t v36 = v27 + (v35 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v37 = (_WORD *)v34 + (v35 & 0xFFFFFFFFFFFFFFF8);
            uint16x8_t v321 = (uint16x8_t *)((char *)v25 + 2 * v219 + 4);
            unint64_t v322 = v219 - (v32 & 0xFFFFFFFFFFFFFFF8);
            v323 = (char *)&v396 + v219;
            do
            {
              *v321++ = vmovl_u8(*(uint8x8_t *)&v323[v27]);
              v323 += 8;
              v322 += 8;
            }
            while (v322);
            if (v35 != (v35 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_447;
            }
          }
LABEL_448:
          unsigned int v342 = 0;
          do
          {
            ++v342;
            unsigned int v343 = v17;
            v17 /= 0xAu;
          }
          while (v343 > 9);
          uint64_t v344 = 0;
          v345 = (_DWORD *)((char *)v34 + 2 * v342);
          _DWORD *v345 = 2097196;
          uint64_t v346 = 4;
          uint64_t v347 = 1;
          unsigned __int8 v348 = v18;
          do
          {
            uint64_t v349 = v346;
            uint64_t v350 = v344;
            uint64_t v351 = v347;
            unsigned int v352 = v348;
            --v346;
            *((unsigned char *)&v396 + v346) = (v348 % 0xAu) | 0x30;
            ++v344;
            ++v347;
            v348 /= 0xAu;
          }
          while (v352 > 9);
          int8x16_t v353 = v345 + 1;
          if (v349 <= 4)
          {
            unint64_t v354 = v350 + 1;
            if ((unint64_t)(v350 + 1) < 8)
            {
              uint64_t v355 = v346;
              v356 = v353;
              goto LABEL_466;
            }
            if (v354 >= 0x20)
            {
              unint64_t v357 = v354 & 0xFFFFFFFFFFFFFFE0;
              unint64_t v358 = (uint16x8_t *)((char *)v25 + 2 * v342 + 40);
              unint64_t v359 = v351 & 0xFFFFFFFFFFFFFFE0;
              v360 = (uint8x8_t *)((char *)&v396 - v350 + 19);
              do
              {
                uint8x16_t v361 = *(uint8x16_t *)v360[-2].i8;
                uint16x8_t v362 = vmovl_u8(*v360);
                uint16x8_t v363 = vmovl_high_u8(*(uint8x16_t *)v360->i8);
                v358[-2] = vmovl_u8(*(uint8x8_t *)v361.i8);
                v358[-1] = vmovl_high_u8(v361);
                *unint64_t v358 = v362;
                v358[1] = v363;
                v358 += 4;
                v360 += 4;
                v359 -= 32;
              }
              while (v359);
              if (v354 == v357) {
                goto LABEL_467;
              }
              if ((v354 & 0x18) == 0)
              {
                v356 = &v353[v357];
                uint64_t v355 = v346 + v357;
                do
LABEL_466:
                  *v356++ = *((unsigned __int8 *)&v396 + v355++);
                while (v355 != 4);
                goto LABEL_467;
              }
            }
            else
            {
              unint64_t v357 = 0;
            }
            uint64_t v355 = v346 + (v354 & 0xFFFFFFFFFFFFFFF8);
            v356 = &v353[v354 & 0xFFFFFFFFFFFFFFF8];
            int8x16_t v364 = (uint16x8_t *)((char *)v25 + 2 * v357 + 2 * v342 + 8);
            unint64_t v365 = v357 - (v351 & 0xFFFFFFFFFFFFFFF8);
            int8x16_t v366 = (char *)&v396 + v357;
            do
            {
              *v364++ = vmovl_u8(*(uint8x8_t *)&v366[v346]);
              v366 += 8;
              v365 += 8;
            }
            while (v365);
            if (v354 != (v354 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_466;
            }
          }
LABEL_467:
          int v367 = 0;
          do
          {
            ++v367;
            unsigned int v368 = v18;
            v18 /= 0xAu;
          }
          while (v368 > 9);
          *(_DWORD *)&v353[v367] = 2621502;
          int8x16_t v68 = a3[1];
          int8x16_t v69 = v68 + 2;
          if (v68) {
            uint64_t v70 = v68 + 2;
          }
          else {
            uint64_t v70 = 0;
          }
          if (!v68) {
            goto LABEL_473;
          }
          goto LABEL_84;
        }
      }
      else
      {
        int8x16_t v54 = (_WORD *)MEMORY[0x18530ACF0]();
        if (v54)
        {
          uint64_t v55 = 0;
          *int8x16_t v54 = 8236;
          unsigned __int8 v56 = v17;
          do
          {
            unsigned int v57 = v56;
            *((unsigned char *)&v396 + v55-- + 3) = (v56 % 0xAu) | 0x30;
            v56 /= 0xAu;
          }
          while (v57 > 9);
          uint16x8_t v58 = v54 + 1;
          if (v55 + 5 <= 4) {
            memcpy(v54 + 1, (char *)&v396 + v55 + 4, -v55);
          }
          unsigned int v59 = 0;
          do
          {
            ++v59;
            unsigned int v60 = v17;
            v17 /= 0xAu;
          }
          while (v60 > 9);
          uint64_t v61 = 0;
          uint8x8_t v62 = (_WORD *)((char *)v58 + v59);
          _WORD *v62 = 8236;
          unsigned __int8 v63 = v18;
          do
          {
            unsigned int v64 = v63;
            *((unsigned char *)&v396 + v61-- + 3) = (v63 % 0xAu) | 0x30;
            v63 /= 0xAu;
          }
          while (v64 > 9);
          unint64_t v65 = (char *)(v62 + 1);
          if (v61 + 5 <= 4) {
            memcpy(v65, (char *)&v396 + v61 + 4, -v61);
          }
          int v66 = 0;
          do
          {
            ++v66;
            unsigned int v67 = v18;
            v18 /= 0xAu;
          }
          while (v67 > 9);
          *(_WORD *)&v65[v66] = 10302;
        }
      }
      int8x16_t v68 = a3[1];
      int8x16_t v69 = v68 + 2;
      if (v68) {
        uint64_t v70 = v68 + 2;
      }
      else {
        uint64_t v70 = 0;
      }
      if (!v68)
      {
LABEL_473:
        int v71 = 0;
        if (!v70) {
          goto LABEL_485;
        }
LABEL_474:
        uint64_t v369 = *a2;
        uint64_t v370 = v70[4];
        __s[0] = 0;
        int v400 = -1;
        if (v370 != -1)
        {
          ((void (*)(char **, char *, unsigned int *))off_1ECABDED0[v370])(&v396, __s, v70);
          int v400 = v370;
        }
        WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v369, __s);
        if (v400 != -1) {
          ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
        }
        int v400 = -1;
        for (j = v70 + 6; j != v71; j += 6)
        {
          WTF::StringBuilder::append();
          uint64_t v372 = *a2;
          __s[0] = 0;
          int v400 = -1;
          uint64_t v373 = j[4];
          if (v373 != -1)
          {
            ((void (*)(char **, char *, unsigned int *))off_1ECABDED0[v373])(&v396, __s, j);
            int v400 = v373;
          }
          WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v372, __s);
          if (v400 != -1) {
            ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
          }
          int v400 = -1;
        }
LABEL_485:
        uint64_t result = (uint16x8_t *)v7[2].i64[1];
        LOBYTE(v396) = 41;
        uint64_t v374 = result->i64[1];
        if (v374)
        {
          uint64_t v375 = result[1].u32[0];
          if (v375 < *(_DWORD *)(v374 + 4) && !result->i64[0])
          {
            int v376 = *(_DWORD *)(v374 + 16);
            uint64_t v377 = *(void *)(v374 + 8);
            result[1].i32[0] = v375 + 1;
            if ((v376 & 4) != 0) {
              *(unsigned char *)(v377 + v375) = 41;
            }
            else {
              *(_WORD *)(v377 + 2 * v375) = 41;
            }
            return result;
          }
        }
        return (uint16x8_t *)WTF::StringBuilder::append();
      }
LABEL_84:
      int v71 = &v69[6 * *v68];
      if (v70 == v71) {
        goto LABEL_485;
      }
      goto LABEL_474;
    case 3:
      if (v3 != 3 || *((_DWORD *)a3 + 4) != 7) {
        goto LABEL_521;
      }
      WGSL::Metal::FunctionDefinitionWriter::visit(result->i8, (const WGSL::Type *)a2);
      uint64_t v38 = v7[2].i64[1];
      LOBYTE(v396) = 123;
      uint64_t v39 = *(void *)(v38 + 8);
      if (v39 && (uint64_t v40 = *(unsigned int *)(v38 + 16), v40 < *(_DWORD *)(v39 + 4)) && !*(void *)v38)
      {
        int v213 = *(_DWORD *)(v39 + 16);
        uint64_t v214 = *(void *)(v39 + 8);
        *(_DWORD *)(v38 + 16) = v40 + 1;
        if ((v213 & 4) != 0) {
          *(unsigned char *)(v214 + v40) = 123;
        }
        else {
          *(_WORD *)(v214 + 2 * v40) = 123;
        }
      }
      else
      {
        WTF::StringBuilder::append();
      }
      uint64_t v41 = *a3;
      if (*a3) {
        uint64_t v42 = (uint64_t)(*a3 + 2);
      }
      else {
        uint64_t v42 = 0;
      }
      if (v41)
      {
        uint64_t v43 = (uint64_t)&(*a3)[6 * *v41 + 2];
        if (v42 == v43) {
          goto LABEL_241;
        }
      }
      else
      {
        uint64_t v43 = 0;
        if (!v42) {
          goto LABEL_241;
        }
      }
      uint64_t v77 = *a2;
      uint64_t v78 = *(unsigned int *)(v42 + 16);
      __s[0] = 0;
      int v400 = -1;
      if (v78 != -1)
      {
        ((void (*)(char **, char *, uint64_t))off_1ECABDED0[v78])(&v396, __s, v42);
        int v400 = v78;
      }
      WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v77, __s);
      if (v400 != -1) {
        ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
      }
      int v400 = -1;
      for (uint64_t k = v42 + 24; k != v43; k += 24)
      {
        WTF::StringBuilder::append();
        uint64_t v80 = *a2;
        __s[0] = 0;
        int v400 = -1;
        uint64_t v81 = *(unsigned int *)(k + 16);
        if (v81 != -1)
        {
          ((void (*)(char **, char *, uint64_t))off_1ECABDED0[v81])(&v396, __s, k);
          int v400 = v81;
        }
        WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v80, __s);
        if (v400 != -1) {
          ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
        }
        int v400 = -1;
      }
      goto LABEL_241;
    case 4:
      if (v3 != 4 || *((_DWORD *)a3 + 4) != 10) {
        goto LABEL_521;
      }
      int v44 = (WTF::StringBuilder *)result[2].i64[1];
      uint64_t v45 = *(void *)(*a2 + 48);
      if (v45)
      {
        uint64_t v46 = *((void *)v44 + 1);
        if (!v46)
        {
LABEL_111:
          uint64_t v46 = *(void *)v44;
          if (!*(void *)v44) {
            goto LABEL_116;
          }
        }
      }
      else
      {
        uint64_t v46 = *((void *)v44 + 1);
        if (!v46) {
          goto LABEL_111;
        }
      }
      if ((*(unsigned char *)(v46 + 16) & 4) == 0)
      {
        uint64_t v82 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v44);
        if (!v82) {
          goto LABEL_303;
        }
        unint64_t v84 = (_WORD *)v82;
        if (!v45)
        {
          uint64_t v85 = 0;
LABEL_302:
          int8x16_t v223 = &v84[v85];
          *(_DWORD *)int8x16_t v223 = 8060960;
          v223[2] = 32;
LABEL_303:
          uint64_t v224 = *a2;
          uint64_t v225 = *(unsigned int *)(*a2 + 84);
          if (!v225) {
            return (uint16x8_t *)WTF::StringBuilder::append();
          }
          goto LABEL_304;
        }
LABEL_119:
        uint8x16_t v86 = *(int8x16_t **)(v45 + 8);
        uint64_t v87 = *(unsigned int *)(v45 + 4);
        if ((*(unsigned char *)(v45 + 16) & 4) == 0)
        {
          if (v87)
          {
            if (v87 == 1) {
              _WORD *v84 = v86->i16[0];
            }
            else {
              memcpy(v84, v86, 2 * v87);
            }
          }
          goto LABEL_301;
        }
        unsigned int v191 = &v84[v87];
        if (v87 < 0x40)
        {
          unint64_t v192 = (unint64_t)v84;
        }
        else
        {
          unint64_t v192 = (unint64_t)&v84[v87 & 0xFFFFFFC0];
          long long v193 = 0uLL;
          v194 = (char *)v84;
          do
          {
            v406.val[0] = *v86;
            int8x16_t v195 = v86[1];
            v409.val[0] = v86[2];
            unsigned long long v196 = (unsigned __int128)v86[3];
            v86 += 4;
            unsigned long long v83 = v196;
            v409.val[1] = 0uLL;
            v411.val[0] = v195;
            v406.val[1] = 0uLL;
            uint64_t v197 = v194;
            vst2q_s8(v197, v406);
            v197 += 32;
            v411.val[1] = 0uLL;
            vst2q_s8(v197, v411);
            uint64_t v198 = v194 + 64;
            vst2q_s8(v198, v409);
            unint64_t v199 = v194 + 96;
            vst2q_s8(v199, *(int8x16x2_t *)&v83);
            v194 += 128;
          }
          while (v194 != (char *)v192);
        }
        if ((_WORD *)v192 == v191)
        {
LABEL_301:
          uint64_t v85 = *(unsigned int *)(v45 + 4);
          goto LABEL_302;
        }
        unint64_t v215 = (unint64_t)&v84[v87 - 1] - v192;
        if (v215 < 0xE
          || (v192 < (unint64_t)v86->u64 + (v215 >> 1) + 1
            ? (BOOL v216 = (unint64_t)v86 >= (v215 & 0xFFFFFFFFFFFFFFFELL) + v192 + 2)
            : (BOOL v216 = 1),
              !v216))
        {
          uint64_t v220 = (_WORD *)v192;
          unint64_t v221 = v86;
          goto LABEL_293;
        }
        uint64_t v217 = (v215 >> 1) + 1;
        if (v215 >= 0x3E)
        {
          unint64_t v218 = v217 & 0xFFFFFFFFFFFFFFE0;
          int8x16_t v331 = (uint8x8_t *)&v86[1];
          int8x16_t v332 = (uint16x8_t *)(v192 + 32);
          unint64_t v333 = v217 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v334 = *(uint8x16_t *)v331[-2].i8;
            uint16x8_t v335 = vmovl_u8(*(uint8x8_t *)v334.i8);
            unsigned long long v83 = (unsigned __int128)vmovl_high_u8(v334);
            uint16x8_t v336 = vmovl_u8(*v331);
            uint16x8_t v337 = vmovl_high_u8(*(uint8x16_t *)v331->i8);
            v332[-2] = v335;
            v332[-1] = (uint16x8_t)v83;
            *int8x16_t v332 = v336;
            v332[1] = v337;
            v332 += 4;
            v331 += 4;
            v333 -= 32;
          }
          while (v333);
          if (v217 == v218) {
            goto LABEL_301;
          }
          if ((v217 & 0x18) == 0)
          {
            unint64_t v221 = (int8x16_t *)((char *)v86 + v218);
            uint64_t v220 = (_WORD *)(v192 + 2 * v218);
            do
            {
LABEL_293:
              __int16 v222 = v221->u8[0];
              unint64_t v221 = (int8x16_t *)((char *)v221 + 1);
              *v220++ = v222;
            }
            while (v220 != v191);
            goto LABEL_301;
          }
        }
        else
        {
          unint64_t v218 = 0;
        }
        uint64_t v220 = (_WORD *)(v192 + 2 * (v217 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v221 = (int8x16_t *)((char *)v86 + (v217 & 0xFFFFFFFFFFFFFFF8));
        v338 = (uint8x8_t *)&v86->i8[v218];
        v339 = (unsigned long long *)(v192 + 2 * v218);
        unint64_t v340 = v218 - (v217 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v341 = *v338++;
          unsigned long long v83 = (unsigned __int128)vmovl_u8(v341);
          *v339++ = v83;
          v340 += 8;
        }
        while (v340);
        if (v217 == (v217 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_301;
        }
        goto LABEL_293;
      }
LABEL_116:
      if (!v45)
      {
        uint64_t v182 = MEMORY[0x18530ACF0]();
        if (!v182) {
          goto LABEL_303;
        }
        int8x16_t v183 = (unsigned char *)v182;
        uint64_t v184 = 0;
        goto LABEL_434;
      }
      if ((*(unsigned char *)(v45 + 16) & 4) == 0)
      {
        unint64_t v84 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v44);
        if (!v84) {
          goto LABEL_303;
        }
        goto LABEL_119;
      }
      int8x16_t v185 = (unsigned char *)MEMORY[0x18530ACF0]();
      if (!v185) {
        goto LABEL_303;
      }
      int8x16_t v183 = v185;
      int8x16_t v186 = *(int8x16_t **)(v45 + 8);
      size_t v187 = *(unsigned int *)(v45 + 4);
      if ((*(unsigned char *)(v45 + 16) & 4) != 0)
      {
        if (v187)
        {
          if (v187 == 1) {
            *int8x16_t v185 = v186->i8[0];
          }
          else {
            memcpy(v185, v186, v187);
          }
        }
        goto LABEL_433;
      }
      uint64_t v188 = &v185[v187];
      if (v187 < 0x10)
      {
        unint64_t v189 = (unint64_t)v185;
      }
      else
      {
        unint64_t v189 = (unint64_t)&v185[v187 & 0xFFFFFFF0];
        int16x8_t v190 = (unsigned long long *)v185;
        do
        {
          unsigned long long v83 = (unsigned __int128)vld2q_s8(v186->i8);
          v186 += 2;
          *v190++ = v83;
        }
        while (v190 != (unsigned long long *)v189);
      }
      if ((unsigned char *)v189 == v188)
      {
LABEL_433:
        uint64_t v184 = *(unsigned int *)(v45 + 4);
LABEL_434:
        int8x16_t v330 = &v183[v184];
        v330[2] = 32;
        *(_WORD *)int8x16_t v330 = 31520;
        uint64_t v224 = *a2;
        uint64_t v225 = *(unsigned int *)(*a2 + 84);
        if (!v225) {
          return (uint16x8_t *)WTF::StringBuilder::append();
        }
LABEL_304:
        v226 = (uint64_t *)a3;
        v227 = *(uint64_t **)(v224 + 72);
        v389 = &v227[v225];
        int8x16_t v228 = 0uLL;
        while (1)
        {
          uint64_t v229 = *v227;
          uint64_t v230 = *(void *)(*v227 + 48);
          BOOL v231 = (WTF::StringBuilder *)v7[2].i64[1];
          uint64_t v232 = *((void *)v231 + 1);
          unsigned long long v392 = v83;
          int8x16_t v395 = v228;
          if ((v232 || (uint64_t v232 = *(void *)v231) != 0) && (*(unsigned char *)(v232 + 16) & 4) == 0)
          {
            unint64_t v233 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v231);
            if (v233)
            {
              *unint64_t v233 = 46;
              v235 = (char *)(v233 + 1);
              if (v230)
              {
                __int16 v236 = *(int8x16_t **)(v230 + 8);
                uint64_t v237 = *(unsigned int *)(v230 + 4);
                if ((*(unsigned char *)(v230 + 16) & 4) != 0) {
                  goto LABEL_319;
                }
                goto LABEL_312;
              }
              uint64_t v259 = 0;
LABEL_351:
              v267 = &v235[2 * v259];
              *(_DWORD *)v267 = 3997728;
              *((_WORD *)v267 + 2) = 32;
            }
            goto LABEL_352;
          }
          if (v230) {
            break;
          }
          v249 = (unsigned char *)MEMORY[0x18530ACF0]();
          if (!v249) {
            goto LABEL_352;
          }
          v250 = v249;
          uint64_t v251 = 0;
          unsigned char *v249 = 46;
LABEL_377:
          v283 = &v250[v251];
          v283[3] = 32;
          *(_WORD *)(v283 + 1) = 15648;
          uint64_t v268 = a2[1];
          if (v268) {
            goto LABEL_353;
          }
LABEL_378:
          uint64_t v284 = *v226;
          if (*v226)
          {
            int v285 = *(_DWORD *)(v284 - 8);
            unint64_t v286 = *(WTF::StringImpl **)(v229 + 80);
            unsigned int v287 = *((_DWORD *)v286 + 4);
            if (v287 < 0x100) {
              unsigned int v288 = WTF::StringImpl::hashSlowCase(v286);
            }
            else {
              unsigned int v288 = v287 >> 8;
            }
            for (m = 0; ; unsigned int v288 = m + v290)
            {
              uint64_t v290 = v288 & v285;
              unint64_t v291 = *(WTF **)(v284 + 32 * v290);
              if (v291 != (WTF *)-1)
              {
                if (!v291) {
                  goto LABEL_389;
                }
                if (WTF::equal(v291, *(const WTF::StringImpl **)(v229 + 80), (const WTF::StringImpl *)v234)) {
                  break;
                }
              }
              ++m;
            }
            uint64_t v292 = v284 + 32 * v290;
            __s[0] = 0;
            int v400 = -1;
            uint64_t v293 = *(unsigned int *)(v292 + 24);
            if (v293 == -1) {
              goto LABEL_391;
            }
            ((void (*)(char **, char *, uint64_t))off_1ECABDED0[v293])(&v396, __s, v292 + 8);
          }
          else
          {
LABEL_389:
            LODWORD(v293) = 0;
            *(_DWORD *)__s = 0;
          }
          int v400 = v293;
LABEL_391:
          WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v268, __s);
          if (v400 != -1) {
            ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
          }
          int v400 = -1;
          WTF::StringBuilder::append();
          ++v227;
          unsigned long long v83 = v392;
          int8x16_t v228 = v395;
          if (v227 == v389) {
            return (uint16x8_t *)WTF::StringBuilder::append();
          }
        }
        if ((*(unsigned char *)(v230 + 16) & 4) == 0)
        {
          v238 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v231);
          if (v238)
          {
            _WORD *v238 = 46;
            v235 = (char *)(v238 + 1);
            __int16 v236 = *(int8x16_t **)(v230 + 8);
            uint64_t v237 = *(unsigned int *)(v230 + 4);
            if ((*(unsigned char *)(v230 + 16) & 4) != 0)
            {
LABEL_319:
              if (v237 < 0x40)
              {
                unint64_t v239 = (unint64_t)v235;
                v248 = &v235[2 * v237];
                if (v235 == v248) {
                  goto LABEL_350;
                }
              }
              else
              {
                unint64_t v239 = (unint64_t)&v235[2 * (v237 & 0xFFFFFFC0)];
                unint64_t v240 = v235;
                int8x16_t v241 = v395;
                do
                {
                  v404.val[0] = *v236;
                  int8x16_t v242 = v236[1];
                  v407.val[0] = v236[2];
                  int8x16_t v243 = v236[3];
                  v236 += 4;
                  unsigned long long v244 = (unsigned __int128)v243;
                  v407.val[1] = v395;
                  v410.val[0] = v242;
                  v404.val[1] = v395;
                  v245 = v240;
                  vst2q_s8(v245, v404);
                  v245 += 32;
                  v410.val[1] = v395;
                  vst2q_s8(v245, v410);
                  char v246 = v240 + 64;
                  vst2q_s8(v246, v407);
                  v247 = v240 + 96;
                  vst2q_s8(v247, *(int8x16x2_t *)(&v241 - 1));
                  v240 += 128;
                }
                while (v240 != (char *)v239);
                unsigned long long v392 = v244;
                v248 = &v235[2 * v237];
                if ((char *)v239 == v248) {
                  goto LABEL_350;
                }
              }
              unint64_t v260 = (unint64_t)&v235[2 * v237 - v239 - 2];
              if (v260 < 0xE
                || (v239 < (unint64_t)v236->u64 + (v260 >> 1) + 1
                  ? (BOOL v261 = (unint64_t)v236 >= v239 + (v260 & 0xFFFFFFFFFFFFFFFELL) + 2)
                  : (BOOL v261 = 1),
                    !v261))
              {
                v264 = (char *)v239;
                size_t v265 = v236;
                goto LABEL_344;
              }
              uint64_t v262 = (v260 >> 1) + 1;
              if (v260 < 0x3E)
              {
                unint64_t v263 = 0;
                goto LABEL_397;
              }
              unint64_t v263 = v262 & 0xFFFFFFFFFFFFFFE0;
              v294 = (uint8x8_t *)&v236[1];
              v295 = (uint16x8_t *)(v239 + 32);
              unint64_t v296 = v262 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                uint8x16_t v297 = *(uint8x16_t *)v294[-2].i8;
                uint16x8_t v298 = vmovl_u8(*v294);
                uint16x8_t v299 = vmovl_high_u8(*(uint8x16_t *)v294->i8);
                v295[-2] = vmovl_u8(*(uint8x8_t *)v297.i8);
                v295[-1] = vmovl_high_u8(v297);
                uint16x8_t *v295 = v298;
                v295[1] = v299;
                v295 += 4;
                v294 += 4;
                v296 -= 32;
              }
              while (v296);
              if (v262 == v263) {
                goto LABEL_350;
              }
              if ((v262 & 0x18) != 0)
              {
LABEL_397:
                v264 = (char *)(v239 + 2 * (v262 & 0xFFFFFFFFFFFFFFF8));
                size_t v265 = (int8x16_t *)((char *)v236 + (v262 & 0xFFFFFFFFFFFFFFF8));
                uint8x16_t v300 = (uint8x8_t *)&v236->i8[v263];
                uint16x8_t v301 = (uint16x8_t *)(v239 + 2 * v263);
                unint64_t v302 = v263 - (v262 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint8x8_t v303 = *v300++;
                  *v301++ = vmovl_u8(v303);
                  v302 += 8;
                }
                while (v302);
                if (v262 == (v262 & 0xFFFFFFFFFFFFFFF8)) {
                  goto LABEL_350;
                }
              }
              else
              {
                size_t v265 = (int8x16_t *)((char *)v236 + v263);
                v264 = (char *)(v239 + 2 * v263);
              }
              do
              {
LABEL_344:
                __int16 v266 = v265->u8[0];
                size_t v265 = (int8x16_t *)((char *)v265 + 1);
                *(_WORD *)v264 = v266;
                v264 += 2;
              }
              while (v264 != v248);
              goto LABEL_350;
            }
LABEL_312:
            if (v237)
            {
              if (v237 == 1) {
                *(_WORD *)v235 = v236->i16[0];
              }
              else {
                memcpy(v235, v236, 2 * v237);
              }
            }
LABEL_350:
            uint64_t v259 = *(unsigned int *)(v230 + 4);
            goto LABEL_351;
          }
LABEL_352:
          uint64_t v268 = a2[1];
          if (!v268) {
            goto LABEL_378;
          }
LABEL_353:
          int v269 = *(_DWORD *)(v268 - 8);
          unint64_t v270 = *(WTF::StringImpl **)(v229 + 80);
          unsigned int v271 = *((_DWORD *)v270 + 4);
          if (v271 < 0x100) {
            unsigned int v272 = WTF::StringImpl::hashSlowCase(v270);
          }
          else {
            unsigned int v272 = v271 >> 8;
          }
          for (n = 0; ; unsigned int v272 = n + v274)
          {
            uint64_t v274 = v272 & v269;
            size_t v275 = *(WTF **)(v268 + 16 * v274);
            if (v275 != (WTF *)-1)
            {
              if (!v275)
              {
                uint64_t v268 = 0;
                goto LABEL_378;
              }
              if (WTF::equal(v275, *(const WTF::StringImpl **)(v229 + 80), (const WTF::StringImpl *)v234))
              {
                uint64_t v268 = *(void *)(v268 + 16 * v274 + 8);
                goto LABEL_378;
              }
            }
            ++n;
          }
        }
        size_t v252 = (unsigned char *)MEMORY[0x18530ACF0]();
        if (!v252) {
          goto LABEL_352;
        }
        v250 = v252;
        *size_t v252 = 46;
        unint64_t v253 = v252 + 1;
        v254 = *(int8x16_t **)(v230 + 8);
        size_t v234 = *(unsigned int *)(v230 + 4);
        if ((*(unsigned char *)(v230 + 16) & 4) != 0)
        {
          if (v234)
          {
            if (v234 == 1) {
              *unint64_t v253 = v254->i8[0];
            }
            else {
              memcpy(v253, v254, v234);
            }
          }
          goto LABEL_376;
        }
        if (v234 < 0x10)
        {
          unint64_t v255 = (unint64_t)v253;
          size_t v258 = &v253[v234];
          if (v253 == &v253[v234])
          {
LABEL_376:
            uint64_t v251 = *(unsigned int *)(v230 + 4);
            goto LABEL_377;
          }
        }
        else
        {
          unint64_t v255 = (unint64_t)&v253[v234 & 0xFFFFFFF0];
          uint64_t v256 = (unsigned long long *)v253;
          do
          {
            unsigned long long v257 = (unsigned __int128)vld2q_s8(v254->i8);
            v254 += 2;
            *v256++ = v257;
          }
          while (v256 != (unsigned long long *)v255);
          size_t v258 = &v253[v234];
          if ((unsigned char *)v255 == &v253[v234]) {
            goto LABEL_376;
          }
        }
        size_t v276 = (size_t)&v250[v234 - v255];
        unint64_t v277 = v276 + 1;
        if (v276 + 1 < 8
          || (v255 < (unint64_t)v254->u64 + 2 * v276 + 2
            ? (BOOL v278 = v254 >= (int8x16_t *)&v250[v234 + 1])
            : (BOOL v278 = 1),
              !v278))
        {
          char v280 = (unsigned char *)v255;
          v281 = v254;
          goto LABEL_373;
        }
        if (v277 >= 0x20)
        {
          unint64_t v279 = v277 & 0xFFFFFFFFFFFFFFE0;
          v304 = v254 + 2;
          unint64_t v305 = (int8x16_t *)(v255 + 16);
          unint64_t v306 = v277 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v308 = v304[-2];
            int8x16_t v307 = v304[-1];
            int8x16_t v310 = *v304;
            int8x16_t v309 = v304[1];
            v304 += 4;
            v305[-1] = vuzp1q_s8(v308, v307);
            *unint64_t v305 = vuzp1q_s8(v310, v309);
            v305 += 2;
            v306 -= 32;
          }
          while (v306);
          if (v277 == v279) {
            goto LABEL_376;
          }
          if ((v277 & 0x18) == 0)
          {
            v281 = (int8x16_t *)((char *)v254 + 2 * v279);
            char v280 = (unsigned char *)(v255 + v279);
            do
            {
LABEL_373:
              char v282 = v281->i8[0];
              v281 = (int8x16_t *)((char *)v281 + 2);
              *v280++ = v282;
            }
            while (v280 != v258);
            goto LABEL_376;
          }
        }
        else
        {
          unint64_t v279 = 0;
        }
        char v280 = (unsigned char *)(v255 + (v277 & 0xFFFFFFFFFFFFFFF8));
        v281 = (int8x16_t *)((char *)v254 + 2 * (v277 & 0xFFFFFFFFFFFFFFF8));
        uint16x8_t v311 = (int16x8_t *)((char *)v254 + 2 * v279);
        uint16x8_t v312 = (int8x8_t *)(v255 + v279);
        unint64_t v313 = v279 - (v277 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          int16x8_t v314 = *v311++;
          *v312++ = vmovn_s16(v314);
          v313 += 8;
        }
        while (v313);
        if (v277 == (v277 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_376;
        }
        goto LABEL_373;
      }
      unint64_t v324 = (unint64_t)&v185[v187 - v189];
      if (v324 < 8
        || (v189 < (unint64_t)v186 + 2 * v324 ? (BOOL v325 = v186 >= (int8x16_t *)&v185[v187]) : (BOOL v325 = 1), !v325))
      {
        v327 = (unsigned char *)v189;
        v328 = v186;
        goto LABEL_430;
      }
      if (v324 >= 0x20)
      {
        unint64_t v326 = v324 & 0xFFFFFFFFFFFFFFE0;
        int v378 = v186 + 2;
        uint64_t v379 = (int8x16_t *)(v189 + 16);
        unint64_t v380 = v324 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          int8x16_t v382 = v378[-2];
          int8x16_t v381 = v378[-1];
          int8x16_t v384 = *v378;
          int8x16_t v383 = v378[1];
          v378 += 4;
          unsigned long long v83 = (unsigned __int128)vuzp1q_s8(v382, v381);
          v379[-1] = (int8x16_t)v83;
          *uint64_t v379 = vuzp1q_s8(v384, v383);
          v379 += 2;
          v380 -= 32;
        }
        while (v380);
        if (v324 == v326) {
          goto LABEL_433;
        }
        if ((v324 & 0x18) == 0)
        {
          v328 = (int8x16_t *)((char *)v186 + 2 * v326);
          v327 = (unsigned char *)(v189 + v326);
          do
          {
LABEL_430:
            char v329 = v328->i8[0];
            v328 = (int8x16_t *)((char *)v328 + 2);
            *v327++ = v329;
          }
          while (v327 != v188);
          goto LABEL_433;
        }
      }
      else
      {
        unint64_t v326 = 0;
      }
      v327 = (unsigned char *)(v189 + (v324 & 0xFFFFFFFFFFFFFFF8));
      v328 = (int8x16_t *)((char *)v186 + 2 * (v324 & 0xFFFFFFFFFFFFFFF8));
      uint64_t v385 = (int16x8_t *)((char *)v186 + 2 * v326);
      v386 = (void *)(v189 + v326);
      unint64_t v387 = v326 - (v324 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        int16x8_t v388 = *v385++;
        *((void *)&v83 + 1) = v388.i64[1];
        *(int8x8_t *)&unsigned long long v83 = vmovn_s16(v388);
        *v386++ = v83;
        v387 += 8;
      }
      while (v387);
      if (v324 == (v324 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_433;
      }
      goto LABEL_430;
    case 5:
      if (v3 != 5 || *((_DWORD *)a3 + 4) != 10) {
        goto LABEL_521;
      }
      uint64_t v47 = *((unsigned __int8 *)a2 + 8);
      unint64_t v48 = (WTF::StringBuilder *)result[2].i64[1];
      int v396 = (char *)*a2;
      char v398 = 60;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(v48, (uint64_t *)&v396, &v398);
      uint64_t v49 = (unsigned int *)a2[2];
      if (v49) {
        uint64_t v50 = (const WGSL::Type **)(v49 + 2);
      }
      else {
        uint64_t v50 = 0;
      }
      if (v49)
      {
        uint64_t v51 = (uint64_t)&v49[2 * *v49 + 2];
        if (v50 == (const WGSL::Type **)v51) {
          goto LABEL_126;
        }
      }
      else
      {
        uint64_t v51 = 0;
        if (!v50) {
          goto LABEL_126;
        }
      }
      uint64_t v89 = *v50;
      uint16x8_t v88 = v50 + 1;
      WGSL::Metal::FunctionDefinitionWriter::visit(v7->i8, v89);
      while (v88 != (const WGSL::Type **)v51)
      {
        WTF::StringBuilder::append();
        uint64_t v90 = *v88++;
        WGSL::Metal::FunctionDefinitionWriter::visit(v7->i8, v90);
      }
LABEL_126:
      WTF::StringBuilder::append();
      uint8x8_t v92 = (uint64_t *)*a3;
      if (!*a3)
      {
        size_t v95 = 0;
        int v94 = 0;
LABEL_135:
        if (v92) {
          goto LABEL_136;
        }
        goto LABEL_139;
      }
      uint64_t v93 = *((unsigned int *)v92 - 1);
      int v94 = &v92[4 * v93];
      if (*((_DWORD *)v92 - 3))
      {
        size_t v95 = (uint64_t *)*a3;
        if (v93)
        {
          uint64_t v96 = 32 * v93;
          size_t v95 = v92;
          do
          {
            if ((unint64_t)(*v95 + 1) > 1) {
              goto LABEL_135;
            }
            v95 += 4;
            v96 -= 32;
          }
          while (v96);
          size_t v95 = v94;
          if (!v92) {
            goto LABEL_139;
          }
LABEL_136:
          unsigned int v97 = &v92[4 * *((unsigned int *)v92 - 1)];
          if (v97 == v95) {
            goto LABEL_241;
          }
          goto LABEL_140;
        }
        goto LABEL_135;
      }
      size_t v95 = &v92[4 * v93];
      int v94 = v95;
      if (v92) {
        goto LABEL_136;
      }
LABEL_139:
      unsigned int v97 = 0;
      if (!v95) {
        goto LABEL_241;
      }
LABEL_140:
      char v98 = 1;
      int8x16_t v99 = 0uLL;
      do
      {
        int8x16_t v390 = v91;
        int8x16_t v393 = v99;
        if ((v98 & 1) == 0) {
          WTF::StringBuilder::append();
        }
        uint64_t v100 = (WTF::StringBuilder *)v7[2].i64[1];
        uint64_t v101 = *v95;
        if (*v95)
        {
          uint64_t v102 = *((void *)v100 + 1);
          if (!v102) {
            goto LABEL_148;
          }
        }
        else
        {
          uint64_t v102 = *((void *)v100 + 1);
          if (!v102)
          {
LABEL_148:
            uint64_t v102 = *(void *)v100;
            if (!*(void *)v100) {
              goto LABEL_156;
            }
          }
        }
        if ((*(unsigned char *)(v102 + 16) & 4) == 0)
        {
          unint64_t v103 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v100);
          int8x16_t v104 = v390;
          int8x16_t v105 = v393;
          if (!v103) {
            goto LABEL_193;
          }
          *unint64_t v103 = 46;
          unint64_t v106 = v103 + 1;
          if (!v101)
          {
            uint64_t v129 = 0;
LABEL_192:
            uint64_t v137 = &v106[v129];
            *(_DWORD *)uint64_t v137 = 3997728;
            v137[2] = 32;
LABEL_193:
            uint64_t v138 = *v95;
            int8x16_t v391 = v104;
            int8x16_t v394 = v105;
            if (!*v95) {
              goto LABEL_210;
            }
            goto LABEL_194;
          }
          unsigned int v107 = *(int8x16_t **)(v101 + 8);
          uint64_t v108 = *(unsigned int *)(v101 + 4);
          if ((*(unsigned char *)(v101 + 16) & 4) == 0) {
            goto LABEL_153;
          }
          goto LABEL_160;
        }
LABEL_156:
        if (v101)
        {
          if ((*(unsigned char *)(v101 + 16) & 4) == 0)
          {
            char v109 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v100);
            int8x16_t v104 = v390;
            int8x16_t v105 = v393;
            if (!v109) {
              goto LABEL_193;
            }
            *char v109 = 46;
            unint64_t v106 = v109 + 1;
            unsigned int v107 = *(int8x16_t **)(v101 + 8);
            uint64_t v108 = *(unsigned int *)(v101 + 4);
            if ((*(unsigned char *)(v101 + 16) & 4) == 0)
            {
LABEL_153:
              if (v108)
              {
                if (v108 == 1)
                {
                  _WORD *v106 = v107->i16[0];
                }
                else
                {
                  memcpy(v106, v107, 2 * v108);
                  int8x16_t v104 = v390;
                  int8x16_t v105 = v393;
                }
              }
              goto LABEL_191;
            }
LABEL_160:
            if (v108 < 0x40)
            {
              unint64_t v110 = (unint64_t)v106;
              unint64_t v117 = &v106[v108];
              if (v106 == v117)
              {
LABEL_191:
                uint64_t v129 = *(unsigned int *)(v101 + 4);
                goto LABEL_192;
              }
            }
            else
            {
              unint64_t v110 = (unint64_t)&v106[v108 & 0xFFFFFFC0];
              unsigned int v111 = (char *)v106;
              do
              {
                v403.val[0] = *v107;
                int8x16_t v112 = v107[1];
                v405.val[0] = v107[2];
                int8x16_t v113 = v107[3];
                v107 += 4;
                int8x16_t v104 = v113;
                v405.val[1] = v105;
                v408.val[0] = v112;
                v403.val[1] = v105;
                unsigned int v114 = v111;
                vst2q_s8(v114, v403);
                v114 += 32;
                v408.val[1] = v105;
                vst2q_s8(v114, v408);
                uint64_t v115 = v111 + 64;
                vst2q_s8(v115, v405);
                uint64_t v116 = v111 + 96;
                vst2q_s8(v116, *(int8x16x2_t *)v104.i8);
                v111 += 128;
              }
              while (v111 != (char *)v110);
              unint64_t v117 = &v106[v108];
              if ((_WORD *)v110 == v117) {
                goto LABEL_191;
              }
            }
            unint64_t v130 = (unint64_t)&v106[v108 - 1] - v110;
            if (v130 < 0xE
              || (v110 < (unint64_t)v107->u64 + (v130 >> 1) + 1
                ? (_CF = (unint64_t)v107 >= v110 + (v130 & 0xFFFFFFFFFFFFFFFELL) + 2)
                : (_CF = 1),
                  !_CF))
            {
              int v134 = (_WORD *)v110;
              unsigned int v135 = v107;
              goto LABEL_185;
            }
            uint64_t v132 = (v130 >> 1) + 1;
            if (v130 >= 0x3E)
            {
              unint64_t v133 = v132 & 0xFFFFFFFFFFFFFFE0;
              unint64_t v157 = (uint8x8_t *)&v107[1];
              uint16x8_t v158 = (uint16x8_t *)(v110 + 32);
              unint64_t v159 = v132 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                uint8x16_t v160 = *(uint8x16_t *)v157[-2].i8;
                uint16x8_t v161 = vmovl_u8(*v157);
                uint16x8_t v162 = vmovl_high_u8(*(uint8x16_t *)v157->i8);
                v158[-2] = vmovl_u8(*(uint8x8_t *)v160.i8);
                v158[-1] = vmovl_high_u8(v160);
                *uint16x8_t v158 = v161;
                v158[1] = v162;
                v158 += 4;
                v157 += 4;
                v159 -= 32;
              }
              while (v159);
              if (v132 == v133) {
                goto LABEL_191;
              }
              if ((v132 & 0x18) == 0)
              {
                unsigned int v135 = (int8x16_t *)((char *)v107 + v133);
                int v134 = (_WORD *)(v110 + 2 * v133);
                do
                {
LABEL_185:
                  __int16 v136 = v135->u8[0];
                  unsigned int v135 = (int8x16_t *)((char *)v135 + 1);
                  *v134++ = v136;
                }
                while (v134 != v117);
                goto LABEL_191;
              }
            }
            else
            {
              unint64_t v133 = 0;
            }
            int v134 = (_WORD *)(v110 + 2 * (v132 & 0xFFFFFFFFFFFFFFF8));
            unsigned int v135 = (int8x16_t *)((char *)v107 + (v132 & 0xFFFFFFFFFFFFFFF8));
            v163 = (uint8x8_t *)&v107->i8[v133];
            unint64_t v164 = (uint16x8_t *)(v110 + 2 * v133);
            unint64_t v165 = v133 - (v132 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint8x8_t v166 = *v163++;
              *v164++ = vmovl_u8(v166);
              v165 += 8;
            }
            while (v165);
            if (v132 == (v132 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_191;
            }
            goto LABEL_185;
          }
          int v121 = (unsigned char *)MEMORY[0x18530ACF0]();
          int8x16_t v104 = v390;
          int8x16_t v105 = v393;
          if (!v121) {
            goto LABEL_193;
          }
          int8x16_t v119 = v121;
          *int v121 = 46;
          v122 = v121 + 1;
          int v123 = *(int8x16_t **)(v101 + 8);
          size_t v124 = *(unsigned int *)(v101 + 4);
          if ((*(unsigned char *)(v101 + 16) & 4) != 0)
          {
            if (v124)
            {
              if (v124 == 1)
              {
                unsigned char *v122 = v123->i8[0];
              }
              else
              {
                memcpy(v122, v123, v124);
                int8x16_t v104 = v390;
                int8x16_t v105 = v393;
              }
            }
            goto LABEL_208;
          }
          if (v124 < 0x10)
          {
            unint64_t v125 = (unint64_t)v122;
            size_t v128 = &v122[v124];
            if (v122 == &v122[v124])
            {
LABEL_208:
              uint64_t v120 = *(unsigned int *)(v101 + 4);
              goto LABEL_209;
            }
          }
          else
          {
            unint64_t v125 = (unint64_t)&v122[v124 & 0xFFFFFFF0];
            v126 = (unsigned long long *)v122;
            do
            {
              unsigned long long v127 = (unsigned __int128)vld2q_s8(v123->i8);
              v123 += 2;
              *v126++ = v127;
            }
            while (v126 != (unsigned long long *)v125);
            size_t v128 = &v122[v124];
            if ((unsigned char *)v125 == &v122[v124]) {
              goto LABEL_208;
            }
          }
          size_t v141 = (size_t)&v119[v124 - v125];
          unint64_t v142 = v141 + 1;
          if (v141 + 1 < 8
            || (v125 < (unint64_t)v123->u64 + 2 * v141 + 2
              ? (BOOL v143 = v123 >= (int8x16_t *)&v119[v124 + 1])
              : (BOOL v143 = 1),
                !v143))
          {
            int8x16_t v145 = (unsigned char *)v125;
            uint64_t v146 = v123;
            goto LABEL_205;
          }
          if (v142 >= 0x20)
          {
            unint64_t v144 = v142 & 0xFFFFFFFFFFFFFFE0;
            uint16x8_t v167 = v123 + 2;
            uint16x8_t v168 = (int8x16_t *)(v125 + 16);
            unint64_t v169 = v142 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              int8x16_t v171 = v167[-2];
              int8x16_t v170 = v167[-1];
              int8x16_t v173 = *v167;
              int8x16_t v172 = v167[1];
              v167 += 4;
              v168[-1] = vuzp1q_s8(v171, v170);
              *uint16x8_t v168 = vuzp1q_s8(v173, v172);
              v168 += 2;
              v169 -= 32;
            }
            while (v169);
            if (v142 == v144) {
              goto LABEL_208;
            }
            if ((v142 & 0x18) == 0)
            {
              uint64_t v146 = (int8x16_t *)((char *)v123 + 2 * v144);
              int8x16_t v145 = (unsigned char *)(v125 + v144);
              do
              {
LABEL_205:
                char v147 = v146->i8[0];
                uint64_t v146 = (int8x16_t *)((char *)v146 + 2);
                *v145++ = v147;
              }
              while (v145 != v128);
              goto LABEL_208;
            }
          }
          else
          {
            unint64_t v144 = 0;
          }
          int8x16_t v145 = (unsigned char *)(v125 + (v142 & 0xFFFFFFFFFFFFFFF8));
          uint64_t v146 = (int8x16_t *)((char *)v123 + 2 * (v142 & 0xFFFFFFFFFFFFFFF8));
          BOOL v174 = (int16x8_t *)((char *)v123 + 2 * v144);
          uint64_t v175 = (int8x8_t *)(v125 + v144);
          unint64_t v176 = v144 - (v142 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            int16x8_t v177 = *v174++;
            *v175++ = vmovn_s16(v177);
            v176 += 8;
          }
          while (v176);
          if (v142 == (v142 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_208;
          }
          goto LABEL_205;
        }
        v118 = (unsigned char *)MEMORY[0x18530ACF0]();
        int8x16_t v104 = v390;
        int8x16_t v105 = v393;
        if (!v118) {
          goto LABEL_193;
        }
        int8x16_t v119 = v118;
        uint64_t v120 = 0;
        unsigned char *v118 = 46;
LABEL_209:
        int v148 = &v119[v120];
        v148[3] = 32;
        *(_WORD *)(v148 + 1) = 15648;
        uint64_t v138 = *v95;
        int8x16_t v391 = v104;
        int8x16_t v394 = v105;
        if (!*v95)
        {
LABEL_210:
          unsigned __int8 v139 = 0;
          unint64_t v140 = 0x100000000;
          goto LABEL_211;
        }
LABEL_194:
        unsigned __int8 v139 = *(unsigned __int8 **)(v138 + 8);
        unint64_t v140 = *(unsigned int *)(v138 + 4) | ((unint64_t)((*(_DWORD *)(v138 + 16) >> 2) & 1) << 32);
LABEL_211:
        uint64_t v149 = WGSL::Types::PrimitiveStruct::keys[v47];
        if (!WTF::operator==(v139, v140, *(unsigned __int8 **)v149, *((void *)v149 + 1)))
        {
          unint64_t v150 = (unsigned __int8 *)*((void *)v149 + 3);
          uint64_t v151 = *((void *)v149 + 4);
          v149 += 24;
          if (!WTF::operator==(v139, v140, v150, v151))
          {
            __break(0xC471u);
            JUMPOUT(0x182590A38);
          }
        }
        uint64_t v152 = *((unsigned int *)v149 + 4);
        unint64_t v153 = (_DWORD *)a2[2];
        if (*v153 <= v152)
        {
          __break(0xC471u);
          JUMPOUT(0x182590A58);
        }
        uint64_t v154 = *(void *)&v153[2 * v152 + 2];
        __s[0] = 0;
        int v400 = -1;
        uint64_t v155 = *((unsigned int *)v95 + 6);
        if (v155 != -1)
        {
          ((void (*)(char **, char *, uint64_t *))off_1ECABDED0[v155])(&v396, __s, v95 + 1);
          int v400 = v155;
        }
        WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v154, __s);
        if (v400 != -1) {
          ((void (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
        }
        int v400 = -1;
        unint64_t v156 = v95 + 4;
        size_t v95 = v94;
        int8x16_t v91 = v391;
        int8x16_t v99 = v394;
        if (v156 != v94)
        {
          size_t v95 = v156;
          while ((unint64_t)(*v95 + 1) <= 1)
          {
            v95 += 4;
            if (v95 == v94)
            {
              size_t v95 = v94;
              break;
            }
          }
        }
        char v98 = 0;
      }
      while (v95 != v97);
LABEL_241:
      uint64_t result = (uint16x8_t *)v7[2].i64[1];
      LOBYTE(v396) = 125;
      uint64_t v178 = result->i64[1];
      if (!v178) {
        return (uint16x8_t *)WTF::StringBuilder::append();
      }
      uint64_t v179 = result[1].u32[0];
      if (v179 >= *(_DWORD *)(v178 + 4) || result->i64[0]) {
        return (uint16x8_t *)WTF::StringBuilder::append();
      }
      int v180 = *(_DWORD *)(v178 + 16);
      uint64_t v181 = *(void *)(v178 + 8);
      result[1].i32[0] = v179 + 1;
      if ((v180 & 4) != 0) {
        *(unsigned char *)(v181 + v179) = 125;
      }
      else {
        *(_WORD *)(v181 + 2 * v179) = 125;
      }
      return result;
    case 6:
      if (v3 == 6)
      {
        __break(0xC471u);
        JUMPOUT(0x182590F04);
      }
      goto LABEL_521;
    case 7:
      if (v3 == 7)
      {
        __break(0xC471u);
        JUMPOUT(0x182590F2CLL);
      }
      goto LABEL_521;
    case 8:
      if (v3 == 8)
      {
        __break(0xC471u);
        JUMPOUT(0x182590F54);
      }
      goto LABEL_521;
    case 9:
      if (v3 == 9)
      {
        __break(0xC471u);
        JUMPOUT(0x182590F7CLL);
      }
      goto LABEL_521;
    case 10:
      if (v3 != 10) {
        goto LABEL_521;
      }
      uint64_t v52 = a2[1];
      __s[0] = 0;
      int v400 = -1;
      uint64_t v53 = *((unsigned int *)a3 + 4);
      if (v53 != -1)
      {
        ((void (*)(char **, char *, unsigned int **))off_1ECABDED0[v53])(&v396, __s, a3);
        int v400 = v53;
      }
      uint64_t result = (uint16x8_t *)WGSL::Metal::FunctionDefinitionWriter::serializeConstant(v7, v52, __s);
      if (v400 != -1) {
        return (uint16x8_t *)((uint64_t (*)(char **, char *))off_1ECABDE78[v400])(&v396, __s);
      }
      return result;
    case 11:
      if (v3 == 11)
      {
        __break(0xC471u);
        JUMPOUT(0x18259101CLL);
      }
      goto LABEL_521;
    case 12:
      if (v3 == 12)
      {
        __break(0xC471u);
        JUMPOUT(0x182590FA4);
      }
      goto LABEL_521;
    case 13:
      if (v3 == 13)
      {
        __break(0xC471u);
        JUMPOUT(0x182590FCCLL);
      }
      goto LABEL_521;
    case 14:
      if (v3 == 14)
      {
        __break(0xC471u);
        JUMPOUT(0x182590FF4);
      }
      goto LABEL_521;
    default:
      if (v3)
      {
LABEL_521:
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_522:
        __break(0xC471u);
        JUMPOUT(0x182591040);
      }
      switch(*(unsigned char *)a2)
      {
        case 0:
          if (*((_DWORD *)a3 + 4) != 5) {
            goto LABEL_521;
          }
          unint64_t v8 = (WTF::StringBuilder *)result[2].i64[1];
          *(void *)__s = *a3;
          return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<long long,void>>(v8, (unint64_t *)__s);
        case 1:
          if (*((_DWORD *)a3 + 4) != 3) {
            goto LABEL_521;
          }
          uint16x8_t v200 = (WTF::StringBuilder *)result[2].i64[1];
          *(_DWORD *)__s = *(_DWORD *)a3;
          return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<int,void>>(v200, (unsigned int *)__s);
        case 2:
          if (*((_DWORD *)a3 + 4) != 4) {
            goto LABEL_521;
          }
          int8x16_t v201 = (WTF::StringBuilder *)result[2].i64[1];
          *(_DWORD *)__s = *(_DWORD *)a3;
          LOBYTE(v396) = 117;
          return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<unsigned int,void>,WTF::StringTypeAdapter<char,void>>(v201, (unsigned int *)__s, (char *)&v396);
        case 3:
          if (*((_DWORD *)a3 + 4) != 2) {
            goto LABEL_521;
          }
          WTF::numberToStringWithTrailingPoint();
          int8x16_t v202 = (WTF::StringBuilder *)v7[2].i64[1];
          size_t v203 = strlen(__s);
          int v396 = __s;
          if (v203 >> 31)
          {
            __break(0xC471u);
            JUMPOUT(0x182590074);
          }
          goto LABEL_270;
        case 4:
          if (*((_DWORD *)a3 + 4) != 1) {
            goto LABEL_521;
          }
          _H0 = *(_WORD *)a3;
          __asm { FCVT            D0, H0 }
          WTF::numberToStringWithTrailingPoint();
          uint64_t v209 = (WTF::StringBuilder *)v7[2].i64[1];
          size_t v210 = strlen(__s);
          int v396 = __s;
          if (v210 >> 31)
          {
            __break(0xC471u);
            JUMPOUT(0x182590EB8);
          }
          int v397 = v210;
          char v398 = 104;
          return (uint16x8_t *)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v209, (unint64_t *)&v396, &v398);
        case 5:
          if (*((_DWORD *)a3 + 4)) {
            goto LABEL_521;
          }
          WTF::numberToStringWithTrailingPoint();
          int8x16_t v202 = (WTF::StringBuilder *)v7[2].i64[1];
          size_t v203 = strlen(__s);
          int v396 = __s;
          if (v203 >> 31)
          {
            __break(0xC471u);
            JUMPOUT(0x182590ED8);
          }
LABEL_270:
          int v397 = v203;
          uint64_t result = (uint16x8_t *)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<std::span<char const,18446744073709551615ul>,void>>(v202, (unint64_t *)&v396);
          break;
        case 6:
        case 8:
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
        case 0xD:
          goto LABEL_522;
        case 7:
          if (*((_DWORD *)a3 + 4) != 6) {
            goto LABEL_521;
          }
          uint64_t result = (uint16x8_t *)WTF::StringBuilder::append();
          break;
        default:
          return result;
      }
      return result;
  }
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, const WGSL::Type *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v6 = (void *)*((void *)a3 + 8);
  if ((*(unsigned int (**)(void *))(*v6 + 16))(v6) == 60
    && MEMORY[0x18530AEB0](v6[11], "bitcast", 7))
  {
    WTF::StringBuilder::append();
    WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, *(const WGSL::Type **)(*((void *)a3 + 8) + 24));
    WTF::StringBuilder::append();
    if (*((_DWORD *)a3 + 21))
    {
      (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, **((void **)a3 + 9));
      uint64_t v7 = *((void *)this + 5);
      LOBYTE(v65) = 41;
      uint64_t v8 = *(void *)(v7 + 8);
      if (v8 && (uint64_t v9 = *(unsigned int *)(v7 + 16), v9 < *(_DWORD *)(v8 + 4)) && !*(void *)v7)
      {
        int v53 = *(_DWORD *)(v8 + 16);
        uint64_t v54 = *(void *)(v8 + 8);
        *(_DWORD *)(v7 + 16) = v9 + 1;
        if ((v53 & 4) != 0) {
          *(unsigned char *)(v54 + v9) = 41;
        }
        else {
          *(_WORD *)(v54 + 2 * v9) = 41;
        }
      }
      else
      {
        WTF::StringBuilder::append();
      }
      return;
    }
LABEL_114:
    __break(0xC471u);
    return;
  }
  int v10 = (*(uint64_t (**)(void))(**((void **)a3 + 8) + 16))(*((void *)a3 + 8));
  if (v10 == 59)
  {
    BOOL v11 = 0;
    if (*((unsigned char *)a3 + 88)) {
      goto LABEL_10;
    }
LABEL_22:
    unsigned __int8 v17 = (void *)*((void *)a3 + 8);
    if ((*(unsigned int (**)(void *))(*v17 + 16))(v17) != 22) {
      goto LABEL_74;
    }
    uint64_t v18 = v17[11];
    unint64_t v19 = 0x100000000;
    unsigned int v64 = v17;
    if (v18)
    {
      unsigned int v20 = *(unsigned __int8 **)(v18 + 8);
      unint64_t v19 = *(unsigned int *)(v18 + 4) | ((unint64_t)((*(_DWORD *)(v18 + 16) >> 2) & 1) << 32);
    }
    else
    {
      unsigned int v20 = 0;
    }
    uint64_t v43 = &WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Type const*,WGSL::AST::CallExpression &)::builtinMappings;
    unint64_t v44 = 44;
    do
    {
      uint64_t v45 = &v43[3 * (v44 >> 1)];
      int v46 = WTF::codePointCompare();
      if (v46 >= 0) {
        v44 >>= 1;
      }
      else {
        v44 += ~(v44 >> 1);
      }
      if (v46 < 0) {
        uint64_t v43 = v45 + 3;
      }
    }
    while (v44);
      && WTF::operator==(v20, v19, (unsigned __int8 *)*v43, (uint64_t)v43[1]))
    {
      uint64_t v47 = v43[2];
      if (v47)
      {
        ((void (*)(WGSL::Metal::FunctionDefinitionWriter *, WGSL::AST::CallExpression *))v47)(this, a3);
        return;
      }
    }
    if (!*((unsigned char *)a3 + 88))
    {
      uint64_t v48 = v64[11];
      unint64_t v49 = 0x100000000;
      if (v48)
      {
        uint64_t v50 = *(unsigned __int8 **)(v48 + 8);
        unint64_t v49 = *(unsigned int *)(v48 + 4) | ((unint64_t)((*(_DWORD *)(v48 + 16) >> 2) & 1) << 32);
      }
      else
      {
        uint64_t v50 = 0;
      }
      uint64_t v55 = &WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Type const*,WGSL::AST::CallExpression &)::directMappings;
      unint64_t v56 = 34;
      do
      {
        unsigned int v57 = &v55[4 * (v56 >> 1)];
        int v58 = WTF::codePointCompare();
        if (v58 >= 0) {
          v56 >>= 1;
        }
        else {
          v56 += ~(v56 >> 1);
        }
        if (v58 < 0) {
          uint64_t v55 = v57 + 4;
        }
      }
      while (v56);
      if (v55 != WGSL::Types::PrimitiveStruct::keys
        && WTF::operator==(v50, v49, (unsigned __int8 *)*v55, (uint64_t)v55[1])
        && v55[2])
      {
        goto LABEL_96;
      }
      uint64_t v59 = *((void *)this + 5);
      if (!*(_DWORD *)(v59 + 16) && !*(void *)(v59 + 8))
      {
        uint64_t v61 = (_DWORD *)v64[11];
        if (v61) {
          *v61 += 2;
        }
        uint8x8_t v62 = *(_DWORD **)v59;
        *(void *)uint64_t v59 = v61;
        if (v62)
        {
          if (*v62 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v62 -= 2;
          }
        }
        uint64_t v63 = v64[11];
        if (v63) {
          LODWORD(v63) = *(_DWORD *)(v63 + 4);
        }
        *(_DWORD *)(v59 + 16) = v63;
        goto LABEL_75;
      }
      uint64_t v60 = v64[11];
      if (!v60 || (*(unsigned char *)(v60 + 16) & 4) != 0) {
LABEL_96:
      }
        WTF::StringBuilder::append();
      else {
        WTF::StringBuilder::append();
      }
    }
    else
    {
LABEL_74:
      WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, a2);
    }
LABEL_75:
    WGSL::Metal::visitArguments(this, a3, 0);
    return;
  }
  BOOL v11 = *(_DWORD *)(*(void *)(*((void *)a3 + 8) + 24) + 48) == 4;
  if (*((unsigned char *)a3 + 88)) {
    BOOL v16 = *(_DWORD *)(*(void *)(*((void *)a3 + 8) + 24) + 48) != 4;
  }
  else {
    BOOL v16 = 1;
  }
  if (v16) {
    goto LABEL_22;
  }
LABEL_10:
  WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, a2);
  uint64_t v12 = *((void *)this + 5);
  LOBYTE(v65) = 40;
  uint64_t v13 = *(void *)(v12 + 8);
  if (v13 && (uint64_t v14 = *(unsigned int *)(v12 + 16), v14 < *(_DWORD *)(v13 + 4)) && !*(void *)v12)
  {
    int v51 = *(_DWORD *)(v13 + 16);
    uint64_t v52 = *(void *)(v13 + 8);
    *(_DWORD *)(v12 + 16) = v14 + 1;
    if ((v51 & 4) != 0) {
      *(unsigned char *)(v52 + v14) = 40;
    }
    else {
      *(_WORD *)(v52 + 2 * v14) = 40;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  if (v10 == 59)
  {
    if (*((_DWORD *)a2 + 12) != 3)
    {
      std::__throw_bad_variant_access[abi:sn180100]();
      goto LABEL_114;
    }
    int v15 = *(const WGSL::Type **)a2;
  }
  else
  {
    int v15 = 0;
  }
  WTF::StringBuilder::append();
  ++*((_DWORD *)this + 14);
  uint64_t v21 = *((unsigned int *)a3 + 21);
  if (v21)
  {
    unsigned __int8 v22 = (WGSL::AST::Expression **)*((void *)a3 + 9);
    if (v11)
    {
      uint64_t v23 = 8 * v21;
      do
      {
        uint64_t v24 = *v22;
        uint64_t v25 = (WTF::StringBuilder *)*((void *)this + 5);
        size_t v26 = (4 * *((_DWORD *)this + 14));
        uint64_t v27 = *((void *)v25 + 1);
        if ((v27 || (uint64_t v27 = *(void *)v25) != 0) && (*(unsigned char *)(v27 + 16) & 4) == 0)
        {
          uint64_t v28 = (void *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v25);
          if (v28) {
            BOOL v29 = v26 == 0;
          }
          else {
            BOOL v29 = 1;
          }
          if (!v29) {
            memset_pattern16(v28, asc_1826CF510, 2 * v26);
          }
        }
        else
        {
          uint64_t v30 = (void *)MEMORY[0x18530ACF0]();
          if (v30) {
            BOOL v31 = v26 == 0;
          }
          else {
            BOOL v31 = 1;
          }
          if (!v31) {
            memset(v30, 32, v26);
          }
        }
        (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, WGSL::AST::Expression *))(*(void *)this
                                                                                                 + 208))(this, v24);
        WTF::StringBuilder::append();
        ++v22;
        v23 -= 8;
      }
      while (v23);
    }
    else
    {
      uint64_t v32 = 8 * v21;
      do
      {
        unsigned int v33 = *v22;
        uint8x16_t v34 = (WTF::StringBuilder *)*((void *)this + 5);
        size_t v35 = (4 * *((_DWORD *)this + 14));
        uint64_t v36 = *((void *)v34 + 1);
        if ((v36 || (uint64_t v36 = *(void *)v34) != 0) && (*(unsigned char *)(v36 + 16) & 4) == 0)
        {
          unint64_t v37 = (void *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v34);
          if (v37) {
            BOOL v38 = v35 == 0;
          }
          else {
            BOOL v38 = 1;
          }
          if (!v38) {
            memset_pattern16(v37, asc_1826CF510, 2 * v35);
          }
        }
        else
        {
          uint64_t v39 = (void *)MEMORY[0x18530ACF0]();
          if (v39) {
            BOOL v40 = v35 == 0;
          }
          else {
            BOOL v40 = 1;
          }
          if (!v40) {
            memset(v39, 32, v35);
          }
        }
        WGSL::Metal::FunctionDefinitionWriter::visit(this, v15, v33);
        WTF::StringBuilder::append();
        ++v22;
        v32 -= 8;
      }
      while (v32);
    }
  }
  int v41 = *((_DWORD *)this + 14) - 1;
  *((_DWORD *)this + 14) = v41;
  uint64_t v42 = (WTF::StringBuilder *)*((void *)this + 5);
  int v67 = v41;
  unint64_t v65 = "})";
  int v66 = 2;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v42, &v67, (uint64_t)&v65);
}

uint64_t WGSL::Metal::emitDynamicOffset(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  int v3 = *(const WGSL::Type **)(*((void *)a2 + 8) + 24);
  if (*((_DWORD *)v3 + 12) != 11)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_13;
  }
  unint64_t v6 = *(char *)v3;
  if (v6 > 5)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    unint64_t v7 = v6;
    uint64_t v8 = (&off_1E521DE10)[v7];
    uint64_t v9 = *(void *)((char *)&unk_1826CF5F0 + v7 * 8);
  }
  WTF::StringBuilder::append();
  WGSL::Metal::FunctionDefinitionWriter::visit((char *)this, v3);
  int v10 = (WTF::StringBuilder *)*((void *)this + 5);
  unsigned __int8 v17 = ")(((";
  int v18 = 4;
  int v11 = v9 - 1;
  if (!v9) {
    int v11 = 0;
  }
  int v15 = v8;
  int v16 = v11;
  uint64_t v13 = " uint8_t*)&(";
  int v14 = 12;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v10, (unint64_t *)&v17, (uint64_t)&v15, (uint64_t)&v13);
  if (!*((_DWORD *)a2 + 21)
    || ((*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9)),
        WTF::StringBuilder::append(),
        *((_DWORD *)a2 + 21) <= 1u))
  {
LABEL_13:
    __break(0xC471u);
    JUMPOUT(0x18259198CLL);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8));
  return WTF::StringBuilder::append();
}

void WGSL::Metal::emitArrayLength()
{
}

uint64_t WGSL::Metal::emitAtomicAdd(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_add_explicit";
  int v14 = 25;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicAnd(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_and_explicit";
  int v14 = 25;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicExchange(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_exchange_explicit";
  int v14 = 24;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicLoad(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_load_explicit";
  int v14 = 20;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicMax(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_max_explicit";
  int v14 = 25;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicMin(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_min_explicit";
  int v14 = 25;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicOr(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_or_explicit";
  int v14 = 24;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicStore(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_store_explicit";
  int v14 = 21;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicSub(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_sub_explicit";
  int v14 = 25;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitAtomicXor(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v5 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v13 = "atomic_fetch_xor_explicit";
  int v14 = 25;
  char v12 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v13, &v12);
  uint64_t v6 = *((unsigned int *)a2 + 21);
  if (v6)
  {
    unint64_t v7 = (void *)*((void *)a2 + 9);
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *v7);
    if (v6 != 1)
    {
      uint64_t v8 = v7 + 1;
      uint64_t v9 = 8 * v6 - 8;
      do
      {
        uint64_t v10 = *v8++;
        WTF::StringBuilder::append();
        (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
        v9 -= 8;
      }
      while (v9);
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitDegrees(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = *((void *)this + 5);
  LOBYTE(v15) = 40;
  uint64_t v6 = *(void *)(result + 8);
  if (v6 && (uint64_t v7 = *(unsigned int *)(result + 16), v7 < *(_DWORD *)(v6 + 4)) && !*(void *)result)
  {
    int v10 = *(_DWORD *)(v6 + 16);
    uint64_t v11 = *(void *)(v6 + 8);
    *(_DWORD *)(result + 16) = v7 + 1;
    if ((v10 & 4) != 0) {
      *(unsigned char *)(v11 + v7) = 40;
    }
    else {
      *(_WORD *)(v11 + 2 * v7) = 40;
    }
  }
  else
  {
    uint64_t result = WTF::StringBuilder::append();
  }
  if (*((_DWORD *)a2 + 21))
  {
    uint64_t v8 = (WTF::String *)(*(uint64_t (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    uint64_t v9 = (WTF::StringBuilder *)*((void *)this + 5);
    WTF::String::number(&v12, v8, 57.2957795);
    int v16 = 3;
    uint64_t v14 = v12;
    int v15 = " * ";
    char v13 = 41;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(v9, (unint64_t *)&v15, &v14, &v13);
    uint64_t result = v12;
    uint64_t v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2) {
        return WTF::StringImpl::destroy();
      }
      else {
        *(_DWORD *)result -= 2;
      }
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitDistance(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (!*((_DWORD *)a2 + 21)) {
    goto LABEL_17;
  }
  if (*(_DWORD *)(*(void *)(**((void **)a2 + 9) + 24) + 48))
  {
    (*(void (**)(WGSL::Metal *, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, *((void *)a2 + 8), a3);
    return WGSL::Metal::visitArguments(this, a2, 0);
  }
  WTF::StringBuilder::append();
  if (!*((_DWORD *)a2 + 21))
  {
    __break(0xC471u);
    JUMPOUT(0x18259282CLL);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) <= 1u)
  {
LABEL_17:
    __break(0xC471u);
    JUMPOUT(0x182592824);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8));
  uint64_t result = *((void *)this + 5);
  uint64_t v6 = *(void *)(result + 8);
  if (!v6) {
    return WTF::StringBuilder::append();
  }
  uint64_t v7 = *(unsigned int *)(result + 16);
  if (v7 >= *(_DWORD *)(v6 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v8 = *(_DWORD *)(v6 + 16);
  uint64_t v9 = *(void *)(v6 + 8);
  *(_DWORD *)(result + 16) = v7 + 1;
  if ((v8 & 4) != 0) {
    *(unsigned char *)(v9 + v7) = 41;
  }
  else {
    *(_WORD *)(v9 + 2 * v7) = 41;
  }
  return result;
}

WGSL::Metal *WGSL::Metal::emitLength(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    uint64_t v4 = this;
    WTF::StringBuilder::append();
    return (WGSL::Metal *)WGSL::Metal::visitArguments(v4, a2, 0);
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

uint64_t WGSL::Metal::emitPack2x16Float(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitPack4xI8(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitPack4xI8Clamp(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitPack4xU8(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitPack4xU8Clamp(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

void *WGSL::Metal::emitQuantizeToF16(void *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (!*((_DWORD *)a2 + 21))
  {
    __break(0xC471u);
    return this;
  }
  int v3 = this;
  uint64_t v4 = **((void **)a2 + 9);
  uint64_t v5 = (_DWORD *)MEMORY[0x1E4F30960];
  *MEMORY[0x1E4F30960] += 2;
  uint64_t v6 = *(void *)(v4 + 24);
  if (v6 && *(_DWORD *)(v6 + 48) == 1)
  {
    WTF::String::number((WTF::String *)*(unsigned __int8 *)(v6 + 8));
    uint64_t v7 = v131;
    if (*v5 == 2)
    {
      WTF::StringImpl::destroy();
      int v8 = (WTF::StringBuilder *)v3[5];
      if (!v131)
      {
LABEL_47:
        int v9 = 1;
        goto LABEL_10;
      }
    }
    else
    {
      *v5 -= 2;
      int v8 = (WTF::StringBuilder *)v3[5];
      if (!v131) {
        goto LABEL_47;
      }
    }
  }
  else
  {
    int v8 = (WTF::StringBuilder *)this[5];
    uint64_t v7 = MEMORY[0x1E4F30960];
  }
  int v9 = 0;
LABEL_10:
  uint64_t v10 = *((void *)v8 + 1);
  if ((v10 || (uint64_t v10 = *(void *)v8) != 0) && (*(unsigned char *)(v10 + 16) & 4) == 0
    || (v9 & 1) == 0 && (*(unsigned char *)(v7 + 16) & 4) == 0)
  {
    uint64_t v11 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v8);
    if (!v11) {
      goto LABEL_115;
    }
    *(void *)uint64_t v11 = 0x61006F006C0066;
    *(_WORD *)(v11 + 8) = 116;
    if (v9)
    {
      uint64_t v12 = 0;
      *(void *)(v11 + 10) = 0x6C006100680028;
      *(_WORD *)(v11 + 18) = 102;
      char v13 = (_WORD *)(v11 + 20);
LABEL_89:
      v13[v12] = 40;
      goto LABEL_115;
    }
    unint64_t v19 = (_WORD *)(v11 + 10);
    unsigned int v20 = *(int8x16_t **)(v7 + 8);
    uint64_t v21 = *(unsigned int *)(v7 + 4);
    if ((*(unsigned char *)(v7 + 16) & 4) == 0)
    {
      if (v21)
      {
        if (v21 == 1) {
          *unint64_t v19 = v20->i16[0];
        }
        else {
          memcpy((void *)(v11 + 10), v20, 2 * v21);
        }
      }
      int v53 = &v19[*(unsigned int *)(v7 + 4)];
      *(void *)int v53 = 0x6C006100680028;
      v53[4] = 102;
      char v13 = v53 + 5;
LABEL_66:
      uint64_t v54 = *(int8x16_t **)(v7 + 8);
      uint64_t v55 = *(unsigned int *)(v7 + 4);
      if ((*(unsigned char *)(v7 + 16) & 4) == 0)
      {
        if (v55)
        {
          if (v55 == 1) {
            _WORD *v13 = v54->i16[0];
          }
          else {
            memcpy(v13, v54, 2 * v55);
          }
        }
        goto LABEL_88;
      }
      unint64_t v56 = &v13[v55];
      if (v55 < 0x40)
      {
        unint64_t v57 = (unint64_t)v13;
      }
      else
      {
        unint64_t v57 = (unint64_t)&v13[v55 & 0xFFFFFFC0];
        long long v58 = 0uLL;
        uint64_t v59 = (char *)v13;
        do
        {
          v133.val[0] = *v54;
          int8x16_t v60 = v54[1];
          v135.val[0] = v54[2];
          int8x16_t v61 = v54[3];
          v54 += 4;
          int8x16_t v62 = v61;
          v135.val[1] = 0uLL;
          v137.val[0] = v60;
          v133.val[1] = 0uLL;
          uint64_t v63 = v59;
          vst2q_s8(v63, v133);
          v63 += 32;
          v137.val[1] = 0uLL;
          vst2q_s8(v63, v137);
          unsigned int v64 = v59 + 64;
          vst2q_s8(v64, v135);
          unint64_t v65 = v59 + 96;
          vst2q_s8(v65, *(int8x16x2_t *)(&v58 - 1));
          v59 += 128;
        }
        while (v59 != (char *)v57);
      }
      if ((_WORD *)v57 == v56)
      {
LABEL_88:
        uint64_t v12 = *(unsigned int *)(v7 + 4);
        goto LABEL_89;
      }
      unint64_t v66 = (unint64_t)&v13[v55 - 1] - v57;
      if (v66 < 0xE
        || (v57 < (unint64_t)v54->u64 + (v66 >> 1) + 1
          ? (BOOL v67 = (unint64_t)v54 >= (v66 & 0xFFFFFFFFFFFFFFFELL) + v57 + 2)
          : (BOOL v67 = 1),
            !v67))
      {
        uint64_t v70 = (_WORD *)v57;
        int v71 = v54;
        goto LABEL_85;
      }
      uint64_t v68 = (v66 >> 1) + 1;
      if (v66 >= 0x3E)
      {
        unint64_t v69 = v68 & 0xFFFFFFFFFFFFFFE0;
        int8x16_t v99 = (uint8x8_t *)&v54[1];
        uint64_t v100 = (uint16x8_t *)(v57 + 32);
        unint64_t v101 = v68 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v102 = *(uint8x16_t *)v99[-2].i8;
          uint16x8_t v103 = vmovl_u8(*v99);
          uint16x8_t v104 = vmovl_high_u8(*(uint8x16_t *)v99->i8);
          v100[-2] = vmovl_u8(*(uint8x8_t *)v102.i8);
          v100[-1] = vmovl_high_u8(v102);
          *uint64_t v100 = v103;
          v100[1] = v104;
          v100 += 4;
          v99 += 4;
          v101 -= 32;
        }
        while (v101);
        if (v68 == v69) {
          goto LABEL_88;
        }
        if ((v68 & 0x18) == 0)
        {
          int v71 = (int8x16_t *)((char *)v54 + v69);
          uint64_t v70 = (_WORD *)(v57 + 2 * v69);
          do
          {
LABEL_85:
            __int16 v72 = v71->u8[0];
            int v71 = (int8x16_t *)((char *)v71 + 1);
            *v70++ = v72;
          }
          while (v70 != v56);
          goto LABEL_88;
        }
      }
      else
      {
        unint64_t v69 = 0;
      }
      uint64_t v70 = (_WORD *)(v57 + 2 * (v68 & 0xFFFFFFFFFFFFFFF8));
      int v71 = (int8x16_t *)((char *)v54 + (v68 & 0xFFFFFFFFFFFFFFF8));
      int8x16_t v105 = (uint8x8_t *)&v54->i8[v69];
      unint64_t v106 = (uint16x8_t *)(v57 + 2 * v69);
      unint64_t v107 = v69 - (v68 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint8x8_t v108 = *v105++;
        *v106++ = vmovl_u8(v108);
        v107 += 8;
      }
      while (v107);
      if (v68 == (v68 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_88;
      }
      goto LABEL_85;
    }
    uint64_t v28 = &v19[v21];
    if (v21 < 0x40)
    {
      unint64_t v29 = v11 + 10;
    }
    else
    {
      unint64_t v29 = (unint64_t)&v19[v21 & 0xFFFFFFC0];
      long long v30 = 0uLL;
      BOOL v31 = (char *)(v11 + 10);
      do
      {
        v132.val[0] = *v20;
        int8x16_t v32 = v20[1];
        v134.val[0] = v20[2];
        int8x16_t v33 = v20[3];
        v20 += 4;
        int8x16_t v34 = v33;
        v134.val[1] = 0uLL;
        v136.val[0] = v32;
        v132.val[1] = 0uLL;
        size_t v35 = v31;
        vst2q_s8(v35, v132);
        v35 += 32;
        v136.val[1] = 0uLL;
        vst2q_s8(v35, v136);
        uint64_t v36 = v31 + 64;
        vst2q_s8(v36, v134);
        unint64_t v37 = v31 + 96;
        vst2q_s8(v37, *(int8x16x2_t *)(&v30 - 1));
        v31 += 128;
      }
      while (v31 != (char *)v29);
    }
    if ((_WORD *)v29 == v28)
    {
LABEL_50:
      uint64_t v45 = &v19[*(unsigned int *)(v7 + 4)];
      *(void *)uint64_t v45 = 0x6C006100680028;
      v45[4] = 102;
      char v13 = v45 + 5;
      goto LABEL_66;
    }
    unint64_t v38 = v11 + 2 * v21 - v29 + 8;
    if (v38 < 0xE
      || (v29 < (unint64_t)v20->u64 + (v38 >> 1) + 1
        ? (BOOL v39 = (unint64_t)v20 >= (v38 & 0xFFFFFFFFFFFFFFFELL) + v29 + 2)
        : (BOOL v39 = 1),
          !v39))
    {
      uint64_t v42 = (_WORD *)v29;
      uint64_t v43 = v20;
      goto LABEL_49;
    }
    uint64_t v40 = (v38 >> 1) + 1;
    if (v38 >= 0x3E)
    {
      unint64_t v41 = v40 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v89 = (uint8x8_t *)&v20[1];
      uint64_t v90 = (uint16x8_t *)(v29 + 32);
      unint64_t v91 = v40 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v92 = *(uint8x16_t *)v89[-2].i8;
        uint16x8_t v93 = vmovl_u8(*v89);
        uint16x8_t v94 = vmovl_high_u8(*(uint8x16_t *)v89->i8);
        v90[-2] = vmovl_u8(*(uint8x8_t *)v92.i8);
        v90[-1] = vmovl_high_u8(v92);
        *uint64_t v90 = v93;
        v90[1] = v94;
        v90 += 4;
        v89 += 4;
        v91 -= 32;
      }
      while (v91);
      if (v40 == v41) {
        goto LABEL_50;
      }
      if ((v40 & 0x18) == 0)
      {
        uint64_t v43 = (int8x16_t *)((char *)v20 + v41);
        uint64_t v42 = (_WORD *)(v29 + 2 * v41);
        do
        {
LABEL_49:
          __int16 v44 = v43->u8[0];
          uint64_t v43 = (int8x16_t *)((char *)v43 + 1);
          *v42++ = v44;
        }
        while (v42 != v28);
        goto LABEL_50;
      }
    }
    else
    {
      unint64_t v41 = 0;
    }
    uint64_t v42 = (_WORD *)(v29 + 2 * (v40 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v43 = (int8x16_t *)((char *)v20 + (v40 & 0xFFFFFFFFFFFFFFF8));
    size_t v95 = (uint8x8_t *)&v20->i8[v41];
    uint64_t v96 = (uint16x8_t *)(v29 + 2 * v41);
    unint64_t v97 = v41 - (v40 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v98 = *v95++;
      *v96++ = vmovl_u8(v98);
      v97 += 8;
    }
    while (v97);
    if (v40 == (v40 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  uint64_t v14 = MEMORY[0x18530ACF0]();
  if (!v14) {
    goto LABEL_115;
  }
  uint64_t v15 = v14;
  *(unsigned char *)(v14 + 4) = 116;
  *(_DWORD *)uint64_t v14 = 1634692198;
  int v16 = (unsigned char *)(v14 + 5);
  if (!v9)
  {
    unsigned __int8 v22 = *(int8x16_t **)(v7 + 8);
    size_t v23 = *(unsigned int *)(v7 + 4);
    if ((*(unsigned char *)(v7 + 16) & 4) != 0)
    {
      if (v23)
      {
        if (v23 == 1) {
          *int v16 = v22->i8[0];
        }
        else {
          memcpy((void *)(v14 + 5), v22, v23);
        }
      }
    }
    else
    {
      uint64_t v24 = &v16[v23];
      if (v23 < 0x10)
      {
        unint64_t v25 = v14 + 5;
      }
      else
      {
        unint64_t v25 = (unint64_t)&v16[v23 & 0xFFFFFFF0];
        size_t v26 = (unsigned long long *)(v14 + 5);
        do
        {
          unsigned long long v27 = (unsigned __int128)vld2q_s8(v22->i8);
          v22 += 2;
          *v26++ = v27;
        }
        while (v26 != (unsigned long long *)v25);
      }
      if ((unsigned char *)v25 != v24)
      {
        size_t v46 = v14 + v23;
        unint64_t v47 = v14 + v23 - v25 + 5;
        if (v47 < 8
          || (v25 < (unint64_t)&v22->u64[1] + 2 * v46 + -2 * v25 + 2
            ? (BOOL v48 = (unint64_t)v22 >= v46 + 5)
            : (BOOL v48 = 1),
              !v48))
        {
          uint64_t v50 = (unsigned char *)v25;
          int v51 = v22;
          goto LABEL_62;
        }
        if (v47 >= 0x20)
        {
          unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFE0;
          char v109 = v22 + 2;
          unint64_t v110 = (int8x16_t *)(v25 + 16);
          unint64_t v111 = v47 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v113 = v109[-2];
            int8x16_t v112 = v109[-1];
            int8x16_t v115 = *v109;
            int8x16_t v114 = v109[1];
            v109 += 4;
            v110[-1] = vuzp1q_s8(v113, v112);
            *unint64_t v110 = vuzp1q_s8(v115, v114);
            v110 += 2;
            v111 -= 32;
          }
          while (v111);
          if (v47 == v49) {
            goto LABEL_91;
          }
          if ((v47 & 0x18) == 0)
          {
            int v51 = (int8x16_t *)((char *)v22 + 2 * v49);
            uint64_t v50 = (unsigned char *)(v25 + v49);
            do
            {
LABEL_62:
              char v52 = v51->i8[0];
              int v51 = (int8x16_t *)((char *)v51 + 2);
              *v50++ = v52;
            }
            while (v50 != v24);
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v49 = 0;
        }
        uint64_t v50 = (unsigned char *)(v25 + (v47 & 0xFFFFFFFFFFFFFFF8));
        int v51 = (int8x16_t *)((char *)v22 + 2 * (v47 & 0xFFFFFFFFFFFFFFF8));
        uint64_t v116 = (int16x8_t *)((char *)v22 + 2 * v49);
        unint64_t v117 = (int8x8_t *)(v25 + v49);
        unint64_t v118 = v49 - (v47 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          int16x8_t v119 = *v116++;
          *v117++ = vmovn_s16(v119);
          v118 += 8;
        }
        while (v118);
        if (v47 != (v47 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_62;
        }
      }
    }
LABEL_91:
    uint64_t v73 = *(unsigned int *)(v7 + 4);
    uint64_t v74 = &v16[v73];
    v74[4] = 102;
    *(_DWORD *)uint64_t v74 = 1818322984;
    int v18 = &v16[v73 + 5];
    uint64_t v75 = *(int8x16_t **)(v7 + 8);
    size_t v76 = *(unsigned int *)(v7 + 4);
    if ((*(unsigned char *)(v7 + 16) & 4) != 0)
    {
      if (v76)
      {
        if (v76 == 1) {
          *int v18 = v75->i8[0];
        }
        else {
          memcpy(v18, v75, v76);
        }
      }
      goto LABEL_113;
    }
    uint64_t v77 = &v18[v76];
    if (v76 < 0x10)
    {
      unint64_t v78 = (unint64_t)v18;
    }
    else
    {
      unint64_t v78 = (unint64_t)&v18[v76 & 0xFFFFFFF0];
      uint64_t v79 = (unsigned long long *)v18;
      do
      {
        unsigned long long v80 = (unsigned __int128)vld2q_s8(v75->i8);
        v75 += 2;
        *v79++ = v80;
      }
      while (v79 != (unsigned long long *)v78);
    }
    if ((unsigned char *)v78 == v77)
    {
LABEL_113:
      uint64_t v17 = *(unsigned int *)(v7 + 4);
      goto LABEL_114;
    }
    size_t v81 = v15 + v73 + v76;
    unint64_t v82 = v81 - v78 + 10;
    if (v82 < 8
      || ((unint64_t v83 = v15 + v76 + v73 + 10, v78 < (unint64_t)v75[1].u64 + 2 * v81 + -2 * v78 + 4)
        ? (BOOL v84 = (unint64_t)v75 >= v83)
        : (BOOL v84 = 1),
          !v84))
    {
      uint8x16_t v86 = (unsigned char *)v78;
      uint64_t v87 = v75;
      goto LABEL_110;
    }
    if (v82 >= 0x20)
    {
      unint64_t v85 = v82 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v120 = v75 + 2;
      int v121 = (int8x16_t *)(v78 + 16);
      unint64_t v122 = v82 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v124 = v120[-2];
        int8x16_t v123 = v120[-1];
        int8x16_t v126 = *v120;
        int8x16_t v125 = v120[1];
        v120 += 4;
        v121[-1] = vuzp1q_s8(v124, v123);
        *int v121 = vuzp1q_s8(v126, v125);
        v121 += 2;
        v122 -= 32;
      }
      while (v122);
      if (v82 == v85) {
        goto LABEL_113;
      }
      if ((v82 & 0x18) == 0)
      {
        uint64_t v87 = (int8x16_t *)((char *)v75 + 2 * v85);
        uint8x16_t v86 = (unsigned char *)(v78 + v85);
        do
        {
LABEL_110:
          char v88 = v87->i8[0];
          uint64_t v87 = (int8x16_t *)((char *)v87 + 2);
          *v86++ = v88;
        }
        while (v86 != v77);
        goto LABEL_113;
      }
    }
    else
    {
      unint64_t v85 = 0;
    }
    uint8x16_t v86 = (unsigned char *)(v78 + (v82 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v87 = (int8x16_t *)((char *)v75 + 2 * (v82 & 0xFFFFFFFFFFFFFFF8));
    unsigned long long v127 = (int16x8_t *)((char *)v75 + 2 * v85);
    size_t v128 = (int8x8_t *)(v78 + v85);
    unint64_t v129 = v85 - (v82 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v130 = *v127++;
      *v128++ = vmovn_s16(v130);
      v129 += 8;
    }
    while (v129);
    if (v82 == (v82 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_113;
    }
    goto LABEL_110;
  }
  uint64_t v17 = 0;
  *(unsigned char *)(v14 + 9) = 102;
  *(_DWORD *)int v16 = 1818322984;
  int v18 = (unsigned char *)(v14 + 10);
LABEL_114:
  v18[v17] = 40;
LABEL_115:
  (*(void (**)(void *, uint64_t))(*v3 + 208))(v3, v4);
  this = (void *)WTF::StringBuilder::append();
  if ((v9 & 1) == 0)
  {
    if (*(_DWORD *)v7 == 2) {
      return (void *)WTF::StringImpl::destroy();
    }
    else {
      *(_DWORD *)v7 -= 2;
    }
  }
  return this;
}

uint64_t WGSL::Metal::emitRadians(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = *((void *)this + 5);
  LOBYTE(v15) = 40;
  uint64_t v6 = *(void *)(result + 8);
  if (v6 && (uint64_t v7 = *(unsigned int *)(result + 16), v7 < *(_DWORD *)(v6 + 4)) && !*(void *)result)
  {
    int v10 = *(_DWORD *)(v6 + 16);
    uint64_t v11 = *(void *)(v6 + 8);
    *(_DWORD *)(result + 16) = v7 + 1;
    if ((v10 & 4) != 0) {
      *(unsigned char *)(v11 + v7) = 40;
    }
    else {
      *(_WORD *)(v11 + 2 * v7) = 40;
    }
  }
  else
  {
    uint64_t result = WTF::StringBuilder::append();
  }
  if (*((_DWORD *)a2 + 21))
  {
    int v8 = (WTF::String *)(*(uint64_t (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    int v9 = (WTF::StringBuilder *)*((void *)this + 5);
    WTF::String::number(&v12, v8, 0.0174532925);
    int v16 = 3;
    uint64_t v14 = v12;
    uint64_t v15 = " * ";
    char v13 = 41;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(v9, (unint64_t *)&v15, &v14, &v13);
    uint64_t result = v12;
    uint64_t v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2) {
        return WTF::StringImpl::destroy();
      }
      else {
        *(_DWORD *)result -= 2;
      }
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitStorageBarrier(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitTextureBarrier(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitTextureDimensions(WTF::StringBuilder **this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  v12[1] = a2;
  char v13 = (WGSL::Metal *)this;
  v12[0] = &v13;
  uint64_t v3 = *((void *)a2 + 3);
  if (!v3 || *(_DWORD *)(v3 + 48) != 1) {
    return WGSL::Metal::emitTextureDimensions(WGSL::Metal::FunctionDefinitionWriter *,WGSL::AST::CallExpression &)::$_0::operator()(v12, (uint64_t)"width", 6);
  }
  unsigned int v4 = *(unsigned __int8 *)(v3 + 8);
  uint64_t v5 = this[5];
  WTF::String::number((WTF::String *)*(unsigned __int8 *)(v3 + 8));
  int v16 = "uint";
  int v17 = 4;
  uint64_t v15 = v11;
  char v14 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(v5, (unint64_t *)&v16, (uint64_t *)&v15, &v14);
  if (v11)
  {
    if (*v11 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v11 -= 2;
    }
  }
  WGSL::Metal::emitTextureDimensions(WGSL::Metal::FunctionDefinitionWriter *,WGSL::AST::CallExpression &)::$_0::operator()(v12, (uint64_t)"width", 6);
  WTF::StringBuilder::append();
  WGSL::Metal::emitTextureDimensions(WGSL::Metal::FunctionDefinitionWriter *,WGSL::AST::CallExpression &)::$_0::operator()(v12, (uint64_t)"height", 7);
  if (v4 >= 3)
  {
    WTF::StringBuilder::append();
    WGSL::Metal::emitTextureDimensions(WGSL::Metal::FunctionDefinitionWriter *,WGSL::AST::CallExpression &)::$_0::operator()(v12, (uint64_t)"depth", 6);
  }
  uint64_t result = *((void *)v13 + 5);
  LOBYTE(v16) = 41;
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    return WTF::StringBuilder::append();
  }
  uint64_t v8 = *(unsigned int *)(result + 16);
  if (v8 >= *(_DWORD *)(v7 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v9 = *(_DWORD *)(v7 + 16);
  uint64_t v10 = *(void *)(v7 + 8);
  *(_DWORD *)(result + 16) = v8 + 1;
  if ((v9 & 4) != 0) {
    *(unsigned char *)(v10 + v8) = 41;
  }
  else {
    *(_WORD *)(v10 + 2 * v8) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::emitTextureGather(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t v3 = *((unsigned int *)a2 + 21);
  if (!v3)
  {
    __break(0xC471u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v6 = (void *)*((void *)a2 + 9);
  uint64_t v7 = *v6;
  int v8 = *(_DWORD *)(*(void *)(*v6 + 24) + 48);
  if (v8)
  {
    int v9 = 0;
    int v10 = -1;
    unsigned int v11 = 1;
    char v12 = 1;
    goto LABEL_28;
  }
  if (!*(unsigned char *)(v7 + 56)) {
    goto LABEL_49;
  }
  int v13 = *(_DWORD *)(v7 + 48);
  switch(v13)
  {
    case 5:
      uint64_t v14 = *(void *)(v7 + 32);
      break;
    case 4:
      uint64_t v14 = *(unsigned int *)(v7 + 32);
      break;
    case 3:
      uint64_t v14 = *(int *)(v7 + 32);
      break;
    default:
LABEL_45:
      __break(0xC471u);
      JUMPOUT(0x182593B04);
  }
  int v9 = "x";
  switch(v14)
  {
    case 0:
      break;
    case 1:
      int v9 = "y";
      break;
    case 2:
      int v9 = "z";
      break;
    case 3:
      int v9 = "w";
      break;
    default:
      __break(0xC471u);
      JUMPOUT(0x182593B24);
  }
  if (v3 <= 1)
  {
LABEL_50:
    __break(0xC471u);
    JUMPOUT(0x182593B3CLL);
  }
  uint64_t v15 = *(void *)(v6[1] + 24);
  if (*(_DWORD *)(v15 + 48) != 7)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_45;
  }
  if ((*(unsigned char *)(v15 + 8) & 0xFE) != 2) {
    goto LABEL_26;
  }
  int v16 = *(unsigned __int8 ***)(v6[v3 - 1] + 24);
  if (!v16) {
    goto LABEL_27;
  }
  if (*((_DWORD *)v16 + 12) != 1) {
    goto LABEL_27;
  }
  int v17 = *v16;
  if (!v17) {
    goto LABEL_27;
  }
  while (1)
  {
    int v18 = *((_DWORD *)v17 + 12);
    if (v18 != 10) {
      break;
    }
    int v17 = (unsigned __int8 *)*((void *)v17 + 1);
    if (!v17) {
      goto LABEL_27;
    }
  }
  if (!v18 && *v17 < 3u)
  {
LABEL_26:
    char v12 = 1;
    unsigned int v11 = 2;
    int v10 = 1;
  }
  else
  {
LABEL_27:
    char v12 = 0;
    int v10 = 1;
    unsigned int v11 = 2;
  }
LABEL_28:
  (*(void (**)(WGSL::Metal *))(*(void *)this + 208))(this);
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) > v11)
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v11));
    for (unint64_t i = v11 + 1; i < *((unsigned int *)a2 + 21); ++i)
    {
      WTF::StringBuilder::append();
      if (i >= *((unsigned int *)a2 + 21))
      {
        __break(0xC471u);
        JUMPOUT(0x182593B2CLL);
      }
      (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * i));
    }
  }
  if (v12)
  {
    if (v8) {
      goto LABEL_34;
    }
  }
  else
  {
    WTF::StringBuilder::append();
    if (v8)
    {
LABEL_34:
      uint64_t result = *((void *)this + 5);
      LOBYTE(v28) = 41;
      uint64_t v21 = *(void *)(result + 8);
      if (!v21) {
        return WTF::StringBuilder::append();
      }
      goto LABEL_38;
    }
  }
  unsigned __int8 v22 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v28 = ", component::";
  int v29 = 13;
  size_t v26 = v9;
  int v27 = v10;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v22, (unint64_t *)&v28, (uint64_t)&v26);
  uint64_t result = *((void *)this + 5);
  LOBYTE(v28) = 41;
  uint64_t v21 = *(void *)(result + 8);
  if (!v21) {
    return WTF::StringBuilder::append();
  }
LABEL_38:
  uint64_t v23 = *(unsigned int *)(result + 16);
  if (v23 >= *(_DWORD *)(v21 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v24 = *(_DWORD *)(v21 + 16);
  uint64_t v25 = *(void *)(v21 + 8);
  *(_DWORD *)(result + 16) = v23 + 1;
  if ((v24 & 4) != 0) {
    *(unsigned char *)(v25 + v23) = 41;
  }
  else {
    *(_WORD *)(v25 + 2 * v23) = 41;
  }
  return result;
}

WGSL::Metal *WGSL::Metal::emitTextureGatherCompare(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    unsigned int v4 = this;
    (*(void (**)(WGSL::Metal *, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, **((void **)a2 + 9), a3);
    WTF::StringBuilder::append();
    return (WGSL::Metal *)WGSL::Metal::visitArguments(v4, a2, (WGSL::AST::CallExpression *)1);
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

void WGSL::Metal::emitTextureLoad(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  unsigned int v3 = *((_DWORD *)a2 + 21);
  if (!v3)
  {
    __break(0xC471u);
    JUMPOUT(0x182594250);
  }
  uint64_t v6 = (void *)*((void *)a2 + 9);
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(*v6 + 24);
  if (v8 && !*(_DWORD *)(v8 + 48) && *(unsigned char *)v8 == 10)
  {
    if (v3 > 1)
    {
      uint64_t v9 = v6[1];
      WTF::StringBuilder::append();
      int v10 = *((_DWORD *)this + 14) + 1;
      *((_DWORD *)this + 14) = v10;
      unsigned int v11 = (WTF::StringBuilder *)*((void *)this + 5);
      int v45 = v10;
      uint64_t v43 = "auto __coords = uint2((";
      int v44 = 23;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v11, &v45, (uint64_t)&v43);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v9);
      WTF::StringBuilder::append();
      char v12 = (WTF::StringBuilder *)*((void *)this + 5);
      int v45 = *((_DWORD *)this + 14);
      uint64_t v43 = "auto __y = float(";
      int v44 = 17;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v12, &v45, (uint64_t)&v43);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      int v13 = (WTF::StringBuilder *)*((void *)this + 5);
      int v45 = *((_DWORD *)this + 14);
      uint64_t v43 = "auto __cbcr = float2(";
      int v44 = 21;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v13, &v45, (uint64_t)&v43);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      uint64_t v14 = (WTF::StringBuilder *)*((void *)this + 5);
      int v45 = *((_DWORD *)this + 14);
      uint64_t v43 = "auto __ycbcr = float3(__y, __cbcr);\n";
      int v44 = 36;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v14, &v45, (uint64_t)&v43);
      uint64_t v15 = (WTF::StringBuilder *)*((void *)this + 5);
      int v45 = *((_DWORD *)this + 14);
      uint64_t v43 = "float4(";
      int v44 = 7;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v15, &v45, (uint64_t)&v43);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      int v16 = *((_DWORD *)this + 14) - 1;
      *((_DWORD *)this + 14) = v16;
      int v17 = (WTF::StringBuilder *)*((void *)this + 5);
      int v45 = v16;
      uint64_t v43 = "})";
      int v44 = 2;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v17, &v45, (uint64_t)&v43);
      return;
    }
    __break(0xC471u);
LABEL_54:
    JUMPOUT(0x1825940B4);
  }
  (*(void (**)(WGSL::Metal *, uint64_t, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, v7, a3);
  WTF::StringBuilder::append();
  uint64_t v18 = *((void *)this + 5);
  LOBYTE(v43) = 40;
  uint64_t v19 = *(void *)(v18 + 8);
  if (v19 && (uint64_t v20 = *(unsigned int *)(v18 + 16), v20 < *(_DWORD *)(v19 + 4)) && !*(void *)v18)
  {
    int v37 = *(_DWORD *)(v19 + 16);
    uint64_t v38 = *(void *)(v19 + 8);
    *(_DWORD *)(v18 + 16) = v20 + 1;
    if ((v37 & 4) != 0) {
      *(unsigned char *)(v38 + v20) = 40;
    }
    else {
      *(_WORD *)(v38 + 2 * v20) = 40;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  uint64_t v21 = *((unsigned int *)a2 + 21);
  if (v21 <= 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182594258);
  }
  uint64_t v22 = *(void *)(*(void *)(*((void *)a2 + 9) + 8) + 24);
  if (v22 && *(_DWORD *)(v22 + 48) == 1)
  {
    int v23 = *(unsigned __int8 *)(v22 + 8);
    if (v23 == 2)
    {
      char v24 = 0;
      int v25 = 5;
      size_t v26 = "uint2";
    }
    else
    {
      if (v23 != 3)
      {
        __break(0xC471u);
        JUMPOUT(0x182594248);
      }
      char v24 = 0;
      int v25 = 5;
      size_t v26 = "uint3";
    }
  }
  else
  {
    int v25 = 4;
    size_t v26 = "uint";
    char v24 = 1;
  }
  int v27 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v43 = v26;
  int v44 = v25;
  LOBYTE(v45) = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v27, (unint64_t *)&v43, (char *)&v45);
  if (*((_DWORD *)a2 + 21) < 2u)
  {
    __break(0xC471u);
    JUMPOUT(0x182594260);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8));
  uint64_t v28 = *((void *)this + 5);
  LOBYTE(v43) = 41;
  uint64_t v29 = *(void *)(v28 + 8);
  if (v29 && (uint64_t v30 = *(unsigned int *)(v28 + 16), v30 < *(_DWORD *)(v29 + 4)) && !*(void *)v28)
  {
    int v39 = *(_DWORD *)(v29 + 16);
    uint64_t v40 = *(void *)(v29 + 8);
    *(_DWORD *)(v28 + 16) = v30 + 1;
    if ((v39 & 4) != 0) {
      *(unsigned char *)(v40 + v30) = 41;
    }
    else {
      *(_WORD *)(v40 + 2 * v30) = 41;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  if (v21 != 2)
  {
    if (v24)
    {
      uint64_t v31 = -v21;
      unint64_t v32 = 2;
      while (1)
      {
        if (v31 + v32 != -1)
        {
          WTF::StringBuilder::append();
          if (v32 >= *((unsigned int *)a2 + 21)) {
            goto LABEL_30;
          }
          (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v32));
        }
        ++v32;
        if (!(v31 + v32)) {
          goto LABEL_34;
        }
      }
    }
    unint64_t v33 = 2;
    while (1)
    {
      WTF::StringBuilder::append();
      if (v33 >= *((unsigned int *)a2 + 21)) {
        break;
      }
      (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v33++));
      if (v21 == v33) {
        goto LABEL_34;
      }
    }
LABEL_30:
    __break(0xC471u);
    goto LABEL_54;
  }
LABEL_34:
  uint64_t v34 = *((void *)this + 5);
  LOBYTE(v43) = 41;
  uint64_t v35 = *(void *)(v34 + 8);
  if (v35 && (uint64_t v36 = *(unsigned int *)(v34 + 16), v36 < *(_DWORD *)(v35 + 4)) && !*(void *)v34)
  {
    int v41 = *(_DWORD *)(v35 + 16);
    uint64_t v42 = *(void *)(v35 + 8);
    *(_DWORD *)(v34 + 16) = v36 + 1;
    if ((v41 & 4) != 0) {
      *(unsigned char *)(v42 + v36) = 41;
    }
    else {
      *(_WORD *)(v42 + 2 * v36) = 41;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
}

uint64_t WGSL::Metal::emitTextureNumLayers(uint64_t this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(uint64_t, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, **((void **)a2 + 9), a3);
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

uint64_t WGSL::Metal::emitTextureNumLevels(uint64_t this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(uint64_t, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, **((void **)a2 + 9), a3);
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

uint64_t WGSL::Metal::emitTextureNumSamples(uint64_t this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(uint64_t, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, **((void **)a2 + 9), a3);
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

WGSL::Metal *WGSL::Metal::emitTextureSample(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    unsigned int v4 = this;
    (*(void (**)(WGSL::Metal *, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, **((void **)a2 + 9), a3);
    WTF::StringBuilder::append();
    return (WGSL::Metal *)WGSL::Metal::visitArguments(v4, a2, (WGSL::AST::CallExpression *)1);
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

void WGSL::Metal::emitTextureSampleBaseClampToEdge(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  unsigned int v3 = *((_DWORD *)a2 + 21);
  if (!v3) {
    goto LABEL_12;
  }
  uint64_t v6 = (void *)*((void *)a2 + 9);
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(*v6 + 24);
  if (!v8 || *(_DWORD *)(v8 + 48) != 7)
  {
    if (v3 <= 1)
    {
      __break(0xC471u);
      JUMPOUT(0x18259484CLL);
    }
    if (v3 != 2)
    {
      uint64_t v9 = v6[1];
      uint64_t v10 = v6[2];
      WTF::StringBuilder::append();
      int v11 = *((_DWORD *)this + 14) + 1;
      *((_DWORD *)this + 14) = v11;
      char v12 = (WTF::StringBuilder *)*((void *)this + 5);
      int v21 = v11;
      uint64_t v19 = "auto __coords = (";
      int v20 = 17;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v12, &v21, (uint64_t)&v19);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v10);
      WTF::StringBuilder::append();
      int v13 = (WTF::StringBuilder *)*((void *)this + 5);
      int v21 = *((_DWORD *)this + 14);
      uint64_t v19 = "auto __y = float(";
      int v20 = 17;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v13, &v21, (uint64_t)&v19);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v9);
      WTF::StringBuilder::append();
      uint64_t v14 = (WTF::StringBuilder *)*((void *)this + 5);
      int v21 = *((_DWORD *)this + 14);
      uint64_t v19 = "auto __cbcr = float2(";
      int v20 = 21;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v14, &v21, (uint64_t)&v19);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v9);
      WTF::StringBuilder::append();
      uint64_t v15 = (WTF::StringBuilder *)*((void *)this + 5);
      int v21 = *((_DWORD *)this + 14);
      uint64_t v19 = "auto __ycbcr = float3(__y, __cbcr);\n";
      int v20 = 36;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v15, &v21, (uint64_t)&v19);
      int v16 = (WTF::StringBuilder *)*((void *)this + 5);
      int v21 = *((_DWORD *)this + 14);
      uint64_t v19 = "float4(";
      int v20 = 7;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v16, &v21, (uint64_t)&v19);
      (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v7);
      WTF::StringBuilder::append();
      int v17 = *((_DWORD *)this + 14) - 1;
      *((_DWORD *)this + 14) = v17;
      uint64_t v18 = (WTF::StringBuilder *)*((void *)this + 5);
      int v21 = v17;
      uint64_t v19 = "})";
      int v20 = 2;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v18, &v21, (uint64_t)&v19);
      return;
    }
LABEL_12:
    __break(0xC471u);
    JUMPOUT(0x182594844);
  }
  (*(void (**)(WGSL::Metal *, uint64_t, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, v7, a3);
  WTF::StringBuilder::append();
  WGSL::Metal::visitArguments(this, a2, (WGSL::AST::CallExpression *)1);
}

uint64_t WGSL::Metal::emitTextureSampleBias(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (!*((_DWORD *)a2 + 21))
  {
    __break(0xC471u);
    JUMPOUT(0x182594B70);
  }
  uint64_t v4 = *(void *)(**((void **)a2 + 9) + 24);
  if (*(_DWORD *)(v4 + 48) != 7)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_36;
  }
  int v6 = *(unsigned __int8 *)(v4 + 8);
  if (v6 == 6 || v6 == 3) {
    uint64_t v8 = 4;
  }
  else {
    uint64_t v8 = 3;
  }
  (*(void (**)(WGSL::Metal *))(*(void *)this + 208))(this);
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) < 2u) {
    goto LABEL_36;
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8));
  for (unint64_t i = 2;
        i != v8;
        (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * i++)))
  {
    WTF::StringBuilder::append();
    if (i >= *((unsigned int *)a2 + 21)) {
      goto LABEL_36;
    }
  }
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) <= v8)
  {
LABEL_36:
    __break(0xC471u);
    JUMPOUT(0x182594B60);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v8));
  uint64_t v10 = *((void *)this + 5);
  uint64_t v11 = *(void *)(v10 + 8);
  if (v11 && (uint64_t v12 = *(unsigned int *)(v10 + 16), v12 < *(_DWORD *)(v11 + 4)) && !*(void *)v10)
  {
    int v17 = *(_DWORD *)(v11 + 16);
    uint64_t v18 = *(void *)(v11 + 8);
    *(_DWORD *)(v10 + 16) = v12 + 1;
    if ((v17 & 4) != 0) {
      *(unsigned char *)(v18 + v12) = 41;
    }
    else {
      *(_WORD *)(v18 + 2 * v12) = 41;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  if (*((_DWORD *)a2 + 21) > (v8 + 1))
  {
    unint64_t v13 = v8 + 1;
    do
    {
      WTF::StringBuilder::append();
      if (v13 >= *((unsigned int *)a2 + 21))
      {
        __break(0xC471u);
        JUMPOUT(0x182594B68);
      }
      (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v13++));
    }
    while (v13 < *((unsigned int *)a2 + 21));
  }
  uint64_t result = *((void *)this + 5);
  uint64_t v15 = *(void *)(result + 8);
  if (!v15) {
    return WTF::StringBuilder::append();
  }
  uint64_t v16 = *(unsigned int *)(result + 16);
  if (v16 >= *(_DWORD *)(v15 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v19 = *(_DWORD *)(v15 + 16);
  uint64_t v20 = *(void *)(v15 + 8);
  *(_DWORD *)(result + 16) = v16 + 1;
  if ((v19 & 4) != 0) {
    *(unsigned char *)(v20 + v16) = 41;
  }
  else {
    *(_WORD *)(v20 + 2 * v16) = 41;
  }
  return result;
}

WGSL::Metal *WGSL::Metal::emitTextureSampleCompare(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (*((_DWORD *)a2 + 21))
  {
    uint64_t v4 = this;
    (*(void (**)(WGSL::Metal *, void, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, **((void **)a2 + 9), a3);
    WTF::StringBuilder::append();
    return (WGSL::Metal *)WGSL::Metal::visitArguments(v4, a2, (WGSL::AST::CallExpression *)1);
  }
  else
  {
    __break(0xC471u);
  }
  return this;
}

uint64_t WGSL::Metal::emitTextureSampleGrad(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (!*((_DWORD *)a2 + 21))
  {
    __break(0xC471u);
    JUMPOUT(0x18259503CLL);
  }
  uint64_t v4 = *(void *)(**((void **)a2 + 9) + 24);
  if (*(_DWORD *)(v4 + 48) != 7)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_45;
  }
  switch(*(unsigned char *)(v4 + 8))
  {
    case 1:
    case 2:
    case 7:
      char v6 = 0;
      unsigned int v7 = 3;
      goto LABEL_6;
    case 3:
      char v6 = 0;
      unsigned int v7 = 4;
LABEL_6:
      int v8 = 1;
      uint64_t v9 = 11;
      uint64_t v10 = "gradient2d";
      break;
    case 4:
      char v6 = 0;
      unsigned int v7 = 3;
      int v8 = 1;
      uint64_t v9 = 11;
      uint64_t v10 = "gradient3d";
      break;
    case 5:
      char v6 = 0;
      unsigned int v7 = 3;
      goto LABEL_10;
    case 6:
      char v6 = 0;
      unsigned int v7 = 4;
LABEL_10:
      int v8 = 1;
      uint64_t v9 = 13;
      uint64_t v10 = "gradientcube";
      break;
    default:
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      int v8 = 0;
      unsigned int v7 = 0;
      char v6 = 1;
      break;
  }
  (*(void (**)(WGSL::Metal *))(*(void *)this + 208))(this);
  WTF::StringBuilder::append();
  if (v8)
  {
    if (v7 <= 2) {
      uint64_t v11 = 2;
    }
    else {
      uint64_t v11 = v7;
    }
    if (*((_DWORD *)a2 + 21) < 2u) {
      goto LABEL_46;
    }
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8));
    if ((v6 & 1) == 0)
    {
      unint64_t v12 = 2;
      while (1)
      {
        WTF::StringBuilder::append();
        if (v12 >= *((unsigned int *)a2 + 21)) {
          break;
        }
        (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v12++));
        if (v11 == v12) {
          goto LABEL_21;
        }
      }
LABEL_46:
      __break(0xC471u);
      JUMPOUT(0x182595034);
    }
  }
LABEL_21:
  unint64_t v13 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v29 = ", ";
  int v30 = 2;
  int v27 = v10;
  int v14 = v9 - 1;
  if (!v9) {
    int v14 = 0;
  }
  int v28 = v14;
  char v26 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v13, (unint64_t *)&v29, (uint64_t)&v27, &v26);
  if (*((_DWORD *)a2 + 21) <= v7)
  {
    __break(0xC471u);
    JUMPOUT(0x182595044);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v7));
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) <= v7 + 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18259504CLL);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * (v7 + 1)));
  uint64_t v15 = *((void *)this + 5);
  LOBYTE(v29) = 41;
  uint64_t v16 = *(void *)(v15 + 8);
  if (v16 && (uint64_t v17 = *(unsigned int *)(v15 + 16), v17 < *(_DWORD *)(v16 + 4)) && !*(void *)v15)
  {
    int v22 = *(_DWORD *)(v16 + 16);
    uint64_t v23 = *(void *)(v16 + 8);
    *(_DWORD *)(v15 + 16) = v17 + 1;
    if ((v22 & 4) != 0) {
      *(unsigned char *)(v23 + v17) = 41;
    }
    else {
      *(_WORD *)(v23 + 2 * v17) = 41;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  if (*((_DWORD *)a2 + 21) > v7 + 2)
  {
    unint64_t v18 = v7 + 2;
    while (1)
    {
      WTF::StringBuilder::append();
      if (v18 >= *((unsigned int *)a2 + 21)) {
        break;
      }
      (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v18++));
      if (v18 >= *((unsigned int *)a2 + 21)) {
        goto LABEL_33;
      }
    }
LABEL_45:
    __break(0xC471u);
    JUMPOUT(0x18259502CLL);
  }
LABEL_33:
  uint64_t result = *((void *)this + 5);
  LOBYTE(v29) = 41;
  uint64_t v20 = *(void *)(result + 8);
  if (!v20) {
    return WTF::StringBuilder::append();
  }
  uint64_t v21 = *(unsigned int *)(result + 16);
  if (v21 >= *(_DWORD *)(v20 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v24 = *(_DWORD *)(v20 + 16);
  uint64_t v25 = *(void *)(v20 + 8);
  *(_DWORD *)(result + 16) = v21 + 1;
  if ((v24 & 4) != 0) {
    *(unsigned char *)(v25 + v21) = 41;
  }
  else {
    *(_WORD *)(v25 + 2 * v21) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::emitTextureSampleLevel(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  if (!*((_DWORD *)a2 + 21))
  {
    __break(0xC471u);
    JUMPOUT(0x18259545CLL);
  }
  uint64_t v5 = *(unsigned __int8 **)(**((void **)a2 + 9) + 24);
  if (v5)
  {
    int v6 = *((_DWORD *)v5 + 12);
    if (v6 == 8)
    {
      BOOL v8 = *v5 == 3;
      goto LABEL_12;
    }
    if (v6 == 7)
    {
      int v7 = v5[8];
      BOOL v8 = v7 == 3 || v7 == 6;
      goto LABEL_12;
    }
  }
  else
  {
    int v6 = MEMORY[0x30];
  }
  if (v6 != 9)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_61;
  }
  BOOL v8 = ((*v5 - 2) & 0xFD) == 0;
LABEL_12:
  if (v8) {
    uint64_t v10 = 4;
  }
  else {
    uint64_t v10 = 3;
  }
  (*(void (**)(WGSL::Metal *))(*(void *)this + 208))(this);
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) < 2u) {
    goto LABEL_61;
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8));
  for (unint64_t i = 2;
        i != v10;
        (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * i++)))
  {
    uint64_t v12 = *((void *)this + 5);
    uint64_t v13 = *(void *)(v12 + 8);
    if (v13 && (uint64_t v14 = *(unsigned int *)(v12 + 16), v14 < *(_DWORD *)(v13 + 4)) && !*(void *)v12)
    {
      int v15 = *(_DWORD *)(v13 + 16);
      uint64_t v16 = *(void *)(v13 + 8);
      *(_DWORD *)(v12 + 16) = v14 + 1;
      if ((v15 & 4) != 0) {
        *(unsigned char *)(v16 + v14) = 44;
      }
      else {
        *(_WORD *)(v16 + 2 * v14) = 44;
      }
    }
    else
    {
      WTF::StringBuilder::append();
    }
    if (i >= *((unsigned int *)a2 + 21)) {
      goto LABEL_61;
    }
  }
  WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21) <= v10)
  {
LABEL_61:
    __break(0xC471u);
    JUMPOUT(0x18259544CLL);
  }
  (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v10));
  uint64_t v17 = *((void *)this + 5);
  uint64_t v18 = *(void *)(v17 + 8);
  if (v18 && (uint64_t v19 = *(unsigned int *)(v17 + 16), v19 < *(_DWORD *)(v18 + 4)) && !*(void *)v17)
  {
    int v29 = *(_DWORD *)(v18 + 16);
    uint64_t v30 = *(void *)(v18 + 8);
    *(_DWORD *)(v17 + 16) = v19 + 1;
    if ((v29 & 4) != 0) {
      *(unsigned char *)(v30 + v19) = 41;
    }
    else {
      *(_WORD *)(v30 + 2 * v19) = 41;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  if (*((_DWORD *)a2 + 21) > (v10 + 1))
  {
    unint64_t v20 = v10 + 1;
    do
    {
      uint64_t v21 = *((void *)this + 5);
      uint64_t v22 = *(void *)(v21 + 8);
      if (v22 && (uint64_t v23 = *(unsigned int *)(v21 + 16), v23 < *(_DWORD *)(v22 + 4)) && !*(void *)v21)
      {
        int v24 = *(_DWORD *)(v22 + 16);
        uint64_t v25 = *(void *)(v22 + 8);
        *(_DWORD *)(v21 + 16) = v23 + 1;
        if ((v24 & 4) != 0) {
          *(unsigned char *)(v25 + v23) = 44;
        }
        else {
          *(_WORD *)(v25 + 2 * v23) = 44;
        }
      }
      else
      {
        WTF::StringBuilder::append();
      }
      if (v20 >= *((unsigned int *)a2 + 21))
      {
        __break(0xC471u);
        JUMPOUT(0x182595454);
      }
      (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v20++));
    }
    while (v20 < *((unsigned int *)a2 + 21));
  }
  uint64_t result = *((void *)this + 5);
  uint64_t v27 = *(void *)(result + 8);
  if (!v27) {
    return WTF::StringBuilder::append();
  }
  uint64_t v28 = *(unsigned int *)(result + 16);
  if (v28 >= *(_DWORD *)(v27 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v31 = *(_DWORD *)(v27 + 16);
  uint64_t v32 = *(void *)(v27 + 8);
  *(_DWORD *)(result + 16) = v28 + 1;
  if ((v31 & 4) != 0) {
    *(unsigned char *)(v32 + v28) = 41;
  }
  else {
    *(_WORD *)(v32 + 2 * v28) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::emitTextureStore(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  unsigned int v3 = *((_DWORD *)a2 + 21);
  if (v3 <= 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1825957E4);
  }
  uint64_t v5 = (uint64_t *)*((void *)a2 + 9);
  uint64_t v6 = v5[1];
  uint64_t v7 = *(void *)(v6 + 24);
  if (v7 && *(_DWORD *)(v7 + 48) == 1)
  {
    int v8 = *(unsigned __int8 *)(v7 + 8);
    if (v8 != 2)
    {
      if (v8 != 3)
      {
LABEL_34:
        __break(0xC471u);
        goto LABEL_37;
      }
      int v9 = 5;
      uint64_t v10 = "uint3";
      uint64_t v11 = *v5;
      if (v3 != 3) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v12 = 0;
      uint64_t v13 = 2;
      goto LABEL_13;
    }
    int v9 = 5;
    uint64_t v10 = "uint2";
    uint64_t v11 = *v5;
    if (v3 == 3) {
      goto LABEL_9;
    }
  }
  else
  {
    int v9 = 4;
    uint64_t v10 = "uint";
    uint64_t v11 = *v5;
    if (v3 == 3) {
      goto LABEL_9;
    }
  }
LABEL_11:
  if (v3 <= 2)
  {
    __break(0xC471u);
LABEL_37:
    JUMPOUT(0x1825957DCLL);
  }
  uint64_t v12 = v5[2];
  uint64_t v13 = 3;
LABEL_13:
  uint64_t v14 = v5[v13];
  (*(void (**)(WGSL::Metal *, uint64_t, WGSL::AST::CallExpression *))(*(void *)this + 208))(this, v11, a3);
  WTF::StringBuilder::append();
  (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v14);
  int v15 = (WTF::StringBuilder *)*((void *)this + 5);
  int v31 = ", ";
  int v32 = 2;
  int v29 = v10;
  int v30 = v9;
  char v28 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v15, (unint64_t *)&v31, (uint64_t)&v29, &v28);
  (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v6);
  uint64_t v16 = *((void *)this + 5);
  LOBYTE(v31) = 41;
  uint64_t v17 = *(void *)(v16 + 8);
  if (v17 && (uint64_t v18 = *(unsigned int *)(v16 + 16), v18 < *(_DWORD *)(v17 + 4)) && !*(void *)v16)
  {
    int v24 = *(_DWORD *)(v17 + 16);
    uint64_t v25 = *(void *)(v17 + 8);
    *(_DWORD *)(v16 + 16) = v18 + 1;
    if ((v24 & 4) != 0) {
      *(unsigned char *)(v25 + v18) = 41;
    }
    else {
      *(_WORD *)(v25 + 2 * v18) = 41;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  uint64_t result = *((void *)this + 5);
  if (v12)
  {
    WTF::StringBuilder::append();
    (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v12);
    uint64_t result = *((void *)this + 5);
  }
  LOBYTE(v31) = 41;
  uint64_t v20 = *(void *)(result + 8);
  if (v20 && (uint64_t v21 = *(unsigned int *)(result + 16), v21 < *(_DWORD *)(v20 + 4)) && !*(void *)result)
  {
    int v26 = *(_DWORD *)(v20 + 16);
    uint64_t v27 = *(void *)(v20 + 8);
    *(_DWORD *)(result + 16) = v21 + 1;
    if ((v26 & 4) != 0) {
      *(unsigned char *)(v27 + v21) = 41;
    }
    else {
      *(_WORD *)(v27 + 2 * v21) = 41;
    }
  }
  else
  {
    uint64_t result = WTF::StringBuilder::append();
  }
  uint64_t v22 = *(void *)(v11 + 24);
  if (*(_DWORD *)(v22 + 48) != 8)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_34;
  }
  if (*(unsigned char *)(v22 + 2) == 1)
  {
    uint64_t v23 = (WTF::StringBuilder *)*((void *)this + 5);
    int v31 = ";\n";
    int v32 = 2;
    LODWORD(v29) = *((_DWORD *)this + 14);
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>>(v23, (unint64_t *)&v31, (int *)&v29);
    (*(void (**)(WGSL::Metal *, uint64_t))(*(void *)this + 208))(this, v11);
    return WTF::StringBuilder::append();
  }
  return result;
}

uint64_t WGSL::Metal::emitUnpack2x16Float(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitUnpack4xI8(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitUnpack4xU8(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    return WTF::StringBuilder::append();
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::emitWorkgroupBarrier(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::emitWorkgroupUniformLoad(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  uint64_t result = WTF::StringBuilder::append();
  if (*((_DWORD *)a2 + 21))
  {
    (*(void (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, **((void **)a2 + 9));
    uint64_t result = *((void *)this + 5);
    uint64_t v6 = *(void *)(result + 8);
    if (v6 && (uint64_t v7 = *(unsigned int *)(result + 16), v7 < *(_DWORD *)(v6 + 4)) && !*(void *)result)
    {
      int v8 = *(_DWORD *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 8);
      *(_DWORD *)(result + 16) = v7 + 1;
      if ((v8 & 4) != 0) {
        *(unsigned char *)(v9 + v7) = 41;
      }
      else {
        *(_WORD *)(v9 + 2 * v7) = 41;
      }
    }
    else
    {
      return WTF::StringBuilder::append();
    }
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::visitArguments(WGSL::Metal *this, WGSL::Metal::FunctionDefinitionWriter *a2, WGSL::AST::CallExpression *a3)
{
  unsigned int v3 = a3;
  uint64_t v6 = *((void *)this + 5);
  uint64_t v7 = *(void *)(v6 + 8);
  if (v7 && (uint64_t v8 = *(unsigned int *)(v6 + 16), v8 < *(_DWORD *)(v7 + 4)) && !*(void *)v6)
  {
    int v15 = *(_DWORD *)(v7 + 16);
    uint64_t v16 = *(void *)(v7 + 8);
    *(_DWORD *)(v6 + 16) = v8 + 1;
    if ((v15 & 4) != 0) {
      *(unsigned char *)(v16 + v8) = 40;
    }
    else {
      *(_WORD *)(v16 + 2 * v8) = 40;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  if (*((_DWORD *)a2 + 21) <= v3
    || (result = (*(uint64_t (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v3)), unint64_t v10 = v3 + 1, v11 = *((unsigned int *)a2 + 21), v10 >= v11))
  {
LABEL_12:
    uint64_t result = *((void *)this + 5);
    uint64_t v13 = *(void *)(result + 8);
    if (v13 && (uint64_t v14 = *(unsigned int *)(result + 16), v14 < *(_DWORD *)(v13 + 4)) && !*(void *)result)
    {
      int v17 = *(_DWORD *)(v13 + 16);
      uint64_t v18 = *(void *)(v13 + 8);
      *(_DWORD *)(result + 16) = v14 + 1;
      if ((v17 & 4) != 0) {
        *(unsigned char *)(v18 + v14) = 41;
      }
      else {
        *(_WORD *)(v18 + 2 * v14) = 41;
      }
    }
    else
    {
      return WTF::StringBuilder::append();
    }
  }
  else
  {
    uint64_t v12 = -1;
    while (1)
    {
      if (v12)
      {
        uint64_t result = WTF::StringBuilder::append();
        unint64_t v11 = *((unsigned int *)a2 + 21);
      }
      if (v10 >= v11) {
        break;
      }
      uint64_t result = (*(uint64_t (**)(WGSL::Metal *, void))(*(void *)this + 208))(this, *(void *)(*((void *)a2 + 9) + 8 * v10++));
      unint64_t v11 = *((unsigned int *)a2 + 21);
      --v12;
      if (v10 >= v11) {
        goto LABEL_12;
      }
    }
    __break(0xC471u);
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::UnaryExpression *a2)
{
  uint64_t v4 = *((void *)this + 5);
  uint64_t v5 = *(void *)(v4 + 8);
  if (v5 && (uint64_t v6 = *(unsigned int *)(v4 + 16), v6 < *(_DWORD *)(v5 + 4)) && !*(void *)v4)
  {
    int v25 = *(_DWORD *)(v5 + 16);
    uint64_t v26 = *(void *)(v5 + 8);
    *(_DWORD *)(v4 + 16) = v6 + 1;
    if ((v25 & 4) != 0) {
      *(unsigned char *)(v26 + v6) = 40;
    }
    else {
      *(_WORD *)(v26 + 2 * v6) = 40;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  switch(*((unsigned char *)a2 + 72))
  {
    case 0:
      uint64_t v7 = *((void *)this + 5);
      uint64_t v8 = *(void *)(v7 + 8);
      if (!v8) {
        goto LABEL_25;
      }
      uint64_t v9 = *(unsigned int *)(v7 + 16);
      if (v9 >= *(_DWORD *)(v8 + 4) || *(void *)v7) {
        goto LABEL_25;
      }
      int v29 = *(_DWORD *)(v8 + 16);
      uint64_t v30 = *(void *)(v8 + 8);
      *(_DWORD *)(v7 + 16) = v9 + 1;
      if ((v29 & 4) != 0) {
        *(unsigned char *)(v30 + v9) = 38;
      }
      else {
        *(_WORD *)(v30 + 2 * v9) = 38;
      }
      break;
    case 1:
      uint64_t v10 = *((void *)this + 5);
      uint64_t v11 = *(void *)(v10 + 8);
      if (!v11) {
        goto LABEL_25;
      }
      uint64_t v12 = *(unsigned int *)(v10 + 16);
      if (v12 >= *(_DWORD *)(v11 + 4) || *(void *)v10) {
        goto LABEL_25;
      }
      int v31 = *(_DWORD *)(v11 + 16);
      uint64_t v32 = *(void *)(v11 + 8);
      *(_DWORD *)(v10 + 16) = v12 + 1;
      if ((v31 & 4) != 0) {
        *(unsigned char *)(v32 + v12) = 126;
      }
      else {
        *(_WORD *)(v32 + 2 * v12) = 126;
      }
      break;
    case 2:
      uint64_t v13 = *((void *)this + 5);
      uint64_t v14 = *(void *)(v13 + 8);
      if (!v14) {
        goto LABEL_25;
      }
      uint64_t v15 = *(unsigned int *)(v13 + 16);
      if (v15 >= *(_DWORD *)(v14 + 4) || *(void *)v13) {
        goto LABEL_25;
      }
      int v33 = *(_DWORD *)(v14 + 16);
      uint64_t v34 = *(void *)(v14 + 8);
      *(_DWORD *)(v13 + 16) = v15 + 1;
      if ((v33 & 4) != 0) {
        *(unsigned char *)(v34 + v15) = 42;
      }
      else {
        *(_WORD *)(v34 + 2 * v15) = 42;
      }
      break;
    case 3:
      uint64_t v16 = *((void *)this + 5);
      uint64_t v17 = *(void *)(v16 + 8);
      if (!v17) {
        goto LABEL_25;
      }
      uint64_t v18 = *(unsigned int *)(v16 + 16);
      if (v18 >= *(_DWORD *)(v17 + 4) || *(void *)v16) {
        goto LABEL_25;
      }
      int v35 = *(_DWORD *)(v17 + 16);
      uint64_t v36 = *(void *)(v17 + 8);
      *(_DWORD *)(v16 + 16) = v18 + 1;
      if ((v35 & 4) != 0) {
        *(unsigned char *)(v36 + v18) = 45;
      }
      else {
        *(_WORD *)(v36 + 2 * v18) = 45;
      }
      break;
    case 4:
      uint64_t v19 = *((void *)this + 5);
      uint64_t v20 = *(void *)(v19 + 8);
      if (v20 && (uint64_t v21 = *(unsigned int *)(v19 + 16), v21 < *(_DWORD *)(v20 + 4)) && !*(void *)v19)
      {
        int v37 = *(_DWORD *)(v20 + 16);
        uint64_t v38 = *(void *)(v20 + 8);
        *(_DWORD *)(v19 + 16) = v21 + 1;
        if ((v37 & 4) != 0) {
          *(unsigned char *)(v38 + v21) = 33;
        }
        else {
          *(_WORD *)(v38 + 2 * v21) = 33;
        }
      }
      else
      {
LABEL_25:
        WTF::StringBuilder::append();
      }
      break;
    default:
      break;
  }
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 8));
  uint64_t result = *((void *)this + 5);
  uint64_t v23 = *(void *)(result + 8);
  if (!v23) {
    return WTF::StringBuilder::append();
  }
  uint64_t v24 = *(unsigned int *)(result + 16);
  if (v24 >= *(_DWORD *)(v23 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v27 = *(_DWORD *)(v23 + 16);
  uint64_t v28 = *(void *)(v23 + 8);
  *(_DWORD *)(result + 16) = v24 + 1;
  if ((v27 & 4) != 0) {
    *(unsigned char *)(v28 + v24) = 41;
  }
  else {
    *(_WORD *)(v28 + 2 * v24) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::serializeBinaryExpression(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  if ((a3 - 3) <= 1)
  {
    uint64_t v8 = *(unsigned __int8 **)(a4 + 24);
    if (v8)
    {
      if (*((_DWORD *)v8 + 12) != 1 || (uint64_t v8 = *(unsigned __int8 **)v8) != 0)
      {
        while (1)
        {
          int v9 = *((_DWORD *)v8 + 12);
          if (v9 != 10) {
            break;
          }
          uint64_t v8 = (unsigned __int8 *)*((void *)v8 + 1);
          if (!v8) {
            goto LABEL_13;
          }
        }
        if (!v9 && *v8 <= 2u)
        {
          uint64_t v10 = "__wgslMod";
          if (a3 == 3) {
            uint64_t v10 = "__wgslDiv";
          }
          int v11 = 9;
          goto LABEL_15;
        }
      }
    }
LABEL_13:
    if (a3 == 4)
    {
      uint64_t v10 = "fmod";
      int v11 = 4;
LABEL_15:
      uint64_t v12 = (WTF::StringBuilder *)a1[5];
      int v25 = v10;
      int v26 = v11;
      char v24 = 40;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v12, (unint64_t *)&v25, &v24);
      (*(void (**)(void *, uint64_t))(*a1 + 208))(a1, a2);
LABEL_23:
      WTF::StringBuilder::append();
      goto LABEL_24;
    }
  }
  uint64_t v13 = a1[5];
  LOBYTE(v25) = 40;
  uint64_t v14 = *(void *)(v13 + 8);
  if (v14 && (uint64_t v15 = *(unsigned int *)(v13 + 16), v15 < *(_DWORD *)(v14 + 4)) && !*(void *)v13)
  {
    int v17 = *(_DWORD *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 8);
    *(_DWORD *)(v13 + 16) = v15 + 1;
    if ((v17 & 4) != 0) {
      *(unsigned char *)(v18 + v15) = 40;
    }
    else {
      *(_WORD *)(v18 + 2 * v15) = 40;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  (*(void (**)(void *, uint64_t))(*a1 + 208))(a1, a2);
  uint64_t v16 = 3;
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      goto LABEL_23;
    default:
      break;
  }
LABEL_24:
  (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 208))(a1, a4, v16);
  uint64_t result = a1[5];
  LOBYTE(v25) = 41;
  uint64_t v20 = *(void *)(result + 8);
  if (!v20) {
    return WTF::StringBuilder::append();
  }
  uint64_t v21 = *(unsigned int *)(result + 16);
  if (v21 >= *(_DWORD *)(v20 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v22 = *(_DWORD *)(v20 + 16);
  uint64_t v23 = *(void *)(v20 + 8);
  *(_DWORD *)(result + 16) = v21 + 1;
  if ((v22 & 4) != 0) {
    *(unsigned char *)(v23 + v21) = 41;
  }
  else {
    *(_WORD *)(v23 + 2 * v21) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::BinaryExpression *a2)
{
  return WGSL::Metal::FunctionDefinitionWriter::serializeBinaryExpression(this, *((void *)a2 + 8), *((unsigned __int8 *)a2 + 80), *((void *)a2 + 9));
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(void *a1, uint64_t a2)
{
  WTF::StringBuilder::append();
  (*(void (**)(void *, void))(*a1 + 208))(a1, *(void *)(a2 + 64));
  uint64_t result = a1[5];
  uint64_t v5 = *(void *)(result + 8);
  if (!v5) {
    return WTF::StringBuilder::append();
  }
  uint64_t v6 = *(unsigned int *)(result + 16);
  if (v6 >= *(_DWORD *)(v5 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v7 = *(_DWORD *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 8);
  *(_DWORD *)(result + 16) = v6 + 1;
  if ((v7 & 4) != 0) {
    *(unsigned char *)(v8 + v6) = 41;
  }
  else {
    *(_WORD *)(v8 + 2 * v6) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::IndexAccessExpression *a2)
{
  uint64_t v4 = *((void *)a2 + 8);
  int v5 = *(_DWORD *)(*(void *)(v4 + 24) + 48);
  if (v5 == 11)
  {
    WTF::StringBuilder::append();
    uint64_t v4 = *((void *)a2 + 8);
  }
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 208))(this, v4);
  if (v5 == 11) {
    WTF::StringBuilder::append();
  }
  uint64_t v6 = *((void *)this + 5);
  uint64_t v7 = *(void *)(v6 + 8);
  if (v7 && (uint64_t v8 = *(unsigned int *)(v6 + 16), v8 < *(_DWORD *)(v7 + 4)) && !*(void *)v6)
  {
    int v12 = *(_DWORD *)(v7 + 16);
    uint64_t v13 = *(void *)(v7 + 8);
    *(_DWORD *)(v6 + 16) = v8 + 1;
    if ((v12 & 4) != 0) {
      *(unsigned char *)(v13 + v8) = 91;
    }
    else {
      *(_WORD *)(v13 + 2 * v8) = 91;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 9));
  uint64_t result = *((void *)this + 5);
  uint64_t v10 = *(void *)(result + 8);
  if (!v10) {
    return WTF::StringBuilder::append();
  }
  uint64_t v11 = *(unsigned int *)(result + 16);
  if (v11 >= *(_DWORD *)(v10 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v14 = *(_DWORD *)(v10 + 16);
  uint64_t v15 = *(void *)(v10 + 8);
  *(_DWORD *)(result + 16) = v11 + 1;
  if ((v14 & 4) != 0) {
    *(unsigned char *)(v15 + v11) = 93;
  }
  else {
    *(_WORD *)(v15 + 2 * v11) = 93;
  }
  return result;
}

_WORD *WGSL::Metal::FunctionDefinitionWriter::visit(uint16x8_t *this, WGSL::AST::IdentifierExpression *a2, const WTF::StringImpl *a3)
{
  uint64_t v5 = this[7].i64[1];
  if (v5)
  {
    int v6 = *(_DWORD *)(v5 - 8);
    uint64_t v7 = (WTF::StringImpl *)*((void *)a2 + 11);
    unsigned int v8 = *((_DWORD *)v7 + 4);
    if (v8 < 0x100) {
      unsigned int v9 = WTF::StringImpl::hashSlowCase(v7);
    }
    else {
      unsigned int v9 = v8 >> 8;
    }
    for (i = 0; ; unsigned int v9 = i + v11)
    {
      uint64_t v11 = v9 & v6;
      int v12 = *(WTF **)(v5 + 32 * v11);
      if (v12 != (WTF *)-1)
      {
        if (!v12)
        {
          uint64_t v14 = this[7].i64[1];
          if (!v14) {
            goto LABEL_15;
          }
          uint64_t v15 = *(unsigned int *)(v14 - 4);
          uint64_t v13 = v14 + 32 * v15;
          goto LABEL_14;
        }
        if (WTF::equal(v12, *((const WTF::StringImpl **)a2 + 11), a3)) {
          break;
        }
      }
      ++i;
    }
    uint64_t v13 = v5 + 32 * v11;
    uint64_t v14 = this[7].i64[1];
    if (!v14) {
      goto LABEL_16;
    }
    uint64_t v15 = *(unsigned int *)(v14 - 4);
LABEL_14:
    if (v13 == v14 + 32 * v15) {
      goto LABEL_15;
    }
LABEL_16:
    uint64_t v18 = this[2].i64[1];
    LOBYTE(v31) = 40;
    uint64_t v19 = *(void *)(v18 + 8);
    if (v19 && (uint64_t v20 = *(unsigned int *)(v18 + 16), v20 < *(_DWORD *)(v19 + 4)) && !*(void *)v18)
    {
      int v25 = *(_DWORD *)(v19 + 16);
      uint64_t v26 = *(void *)(v19 + 8);
      *(_DWORD *)(v18 + 16) = v20 + 1;
      if ((v25 & 4) != 0) {
        *(unsigned char *)(v26 + v20) = 40;
      }
      else {
        *(_WORD *)(v26 + 2 * v20) = 40;
      }
    }
    else
    {
      WTF::StringBuilder::append();
    }
    uint64_t v21 = (uint64_t *)*((void *)a2 + 3);
    LOBYTE(v29[0]) = 0;
    int v30 = -1;
    uint64_t v22 = *(unsigned int *)(v13 + 24);
    if (v22 != -1)
    {
      ((void (*)(uint64_t *, unsigned int **, uint64_t))off_1ECABDED0[v22])(&v31, v29, v13 + 8);
      int v30 = v22;
    }
    WGSL::Metal::FunctionDefinitionWriter::serializeConstant(this, v21, v29);
    if (v30 != -1) {
      ((void (*)(uint64_t *, unsigned int **))off_1ECABDE78[v30])(&v31, v29);
    }
    int v30 = -1;
    uint64_t result = (_WORD *)this[2].i64[1];
    LOBYTE(v31) = 41;
    uint64_t v23 = *((void *)result + 1);
    if (v23 && (uint64_t v24 = *((unsigned int *)result + 4), v24 < *(_DWORD *)(v23 + 4)) && !*(void *)result)
    {
      int v27 = *(_DWORD *)(v23 + 16);
      uint64_t v28 = *(void *)(v23 + 8);
      *((_DWORD *)result + 4) = v24 + 1;
      if ((v27 & 4) != 0) {
        *(unsigned char *)(v28 + v24) = 41;
      }
      else {
        *(_WORD *)(v28 + 2 * v24) = 41;
      }
    }
    else
    {
      return (_WORD *)WTF::StringBuilder::append();
    }
  }
  else
  {
LABEL_15:
    uint64_t v16 = (WTF::StringBuilder *)this[2].i64[1];
    uint64_t v31 = *((void *)a2 + 11);
    return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v16, &v31);
  }
  return result;
}

_WORD *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::FieldAccessExpression *a2)
{
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 8));
  uint64_t v4 = *(void *)(*((void *)a2 + 8) + 24);
  if (v4 && *(_DWORD *)(v4 + 48) == 11
    || (v5 = *((void *)this + 5), (uint64_t v6 = *(void *)(v5 + 8)) == 0)
    || (uint64_t v7 = *(unsigned int *)(v5 + 16), v7 >= *(_DWORD *)(v6 + 4))
    || *(void *)v5)
  {
    WTF::StringBuilder::append();
  }
  else
  {
    int v10 = *(_DWORD *)(v6 + 16);
    uint64_t v11 = *(void *)(v6 + 8);
    *(_DWORD *)(v5 + 16) = v7 + 1;
    if ((v10 & 4) != 0) {
      *(unsigned char *)(v11 + v7) = 46;
    }
    else {
      *(_WORD *)(v11 + 2 * v7) = 46;
    }
  }
  unsigned int v8 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v12 = *((void *)a2 + 12);
  return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(v8, &v12);
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::BoolLiteral *a2)
{
  return WTF::StringBuilder::append();
}

uint16x8_t *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::AbstractIntegerLiteral *a2)
{
  uint64_t v4 = (WTF::StringBuilder *)*((void *)this + 5);
  unint64_t v13 = *((void *)a2 + 8);
  uint64_t result = WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<long long,void>>(v4, &v13);
  uint64_t v6 = *((void *)a2 + 3);
  if (*(_DWORD *)(v6 + 48))
  {
    uint64_t v11 = (WGSL::Metal::FunctionDefinitionWriter *)std::__throw_bad_variant_access[abi:sn180100]();
    return (uint16x8_t *)WGSL::Metal::FunctionDefinitionWriter::visit(v11, v12);
  }
  else if (*(unsigned char *)v6 == 2)
  {
    uint64_t result = (uint16x8_t *)*((void *)this + 5);
    char v14 = 117;
    uint64_t v7 = result->i64[1];
    if (v7 && (uint64_t v8 = result[1].u32[0], v8 < *(_DWORD *)(v7 + 4)) && !result->i64[0])
    {
      int v9 = *(_DWORD *)(v7 + 16);
      uint64_t v10 = *(void *)(v7 + 8);
      result[1].i32[0] = v8 + 1;
      if ((v9 & 4) != 0) {
        *(unsigned char *)(v10 + v8) = 117;
      }
      else {
        *(_WORD *)(v10 + 2 * v8) = 117;
      }
    }
    else
    {
      return (uint16x8_t *)WTF::StringBuilder::append();
    }
  }
  return result;
}

uint16x8_t *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Signed32Literal *a2)
{
  int v2 = (WTF::StringBuilder *)*((void *)this + 5);
  unsigned int v4 = *((_DWORD *)a2 + 16);
  return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<int,void>>(v2, &v4);
}

uint16x8_t *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Unsigned32Literal *a2)
{
  int v2 = (WTF::StringBuilder *)*((void *)this + 5);
  unsigned int v5 = *((_DWORD *)a2 + 16);
  char v4 = 117;
  return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<unsigned int,void>,WTF::StringTypeAdapter<char,void>>(v2, &v5, &v4);
}

char *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::AbstractFloatLiteral *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  WTF::numberToStringWithTrailingPoint();
  unsigned int v3 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v4 = strlen(__s);
  uint64_t v6 = __s;
  if (v4 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x182596C04);
  }
  int v7 = v4;
  return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<std::span<char const,18446744073709551615ul>,void>>(v3, (unint64_t *)&v6);
}

char *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Float32Literal *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  WTF::numberToStringWithTrailingPoint();
  unsigned int v3 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v4 = strlen(__s);
  uint64_t v6 = __s;
  if (v4 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x182596CB4);
  }
  int v7 = v4;
  return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<std::span<char const,18446744073709551615ul>,void>>(v3, (unint64_t *)&v6);
}

char *WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::Float16Literal *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  _H0 = *((_WORD *)a2 + 32);
  __asm { FCVT            D0, H0 }
  WTF::numberToStringWithTrailingPoint();
  uint64_t v9 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v10 = strlen(__s);
  uint64_t v12 = __s;
  if (v10 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x182596D64);
  }
  int v13 = v10;
  return WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<std::span<char const,18446744073709551615ul>,void>>(v9, (unint64_t *)&v12);
}

void WGSL::Metal::FunctionDefinitionWriter::visit(uint16x8_t *this, WGSL::AST::AssignmentStatement *a2)
{
  (*(void (**)(uint16x8_t *, void))(this->i64[0] + 208))(this, *((void *)a2 + 3));
  WTF::StringBuilder::append();
  uint64_t v4 = *(void *)(*((void *)a2 + 3) + 24);
  if (v4)
  {
    if (*(_DWORD *)(v4 + 48) == 10)
    {
      unsigned int v5 = *(const WGSL::Type **)(v4 + 8);
      uint64_t v6 = (WGSL::AST::Expression *)*((void *)a2 + 4);
      WGSL::Metal::FunctionDefinitionWriter::visit(this, v5, v6);
    }
    else
    {
      uint64_t v9 = (WGSL::Metal::FunctionDefinitionWriter *)std::__throw_bad_variant_access[abi:sn180100]();
      WGSL::Metal::FunctionDefinitionWriter::visit(v9, v10);
    }
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 4);
    uint64_t v8 = *(void (**)(uint16x8_t *, uint64_t))(this->i64[0] + 208);
    v8(this, v7);
  }
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::CallStatement *a2)
{
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::CompoundAssignmentStatement *a2)
{
  unsigned int v5 = (void *)((char *)a2 + 24);
  uint64_t v4 = *((void *)a2 + 3);
  if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 16))(v4) == 23) {
    uint64_t v4 = *(void *)(v4 + 64);
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 16))(v4) == 20)
  {
    uint64_t v6 = *(void **)(v4 + 64);
    if ((*(unsigned int (**)(void *))(*v6 + 16))(v6) == 22)
    {
      uint64_t result = MEMORY[0x18530AEB0](v6[11], "__unpack", 8);
      if (result)
      {
        if (!*(_DWORD *)(v4 + 84))
        {
          __break(0xC471u);
          return result;
        }
        unsigned int v5 = *(void **)(v4 + 72);
      }
    }
  }
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *v5);
  WTF::StringBuilder::append();
  int v8 = *((unsigned __int8 *)a2 + 40);
  uint64_t v9 = *((void *)a2 + 3);
  uint64_t v10 = *((void *)a2 + 4);
  return WGSL::Metal::FunctionDefinitionWriter::serializeBinaryExpression(this, v9, v8, v10);
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::CompoundStatement *a2)
{
  WTF::StringBuilder::append();
  ++*((_DWORD *)this + 14);
  WGSL::Metal::FunctionDefinitionWriter::visitStatements((uint64_t)this, *((uint64_t **)a2 + 5), *((_DWORD *)a2 + 13));
  int v4 = *((_DWORD *)this + 14) - 1;
  *((_DWORD *)this + 14) = v4;
  unsigned int v5 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v6 = (4 * v4);
  uint64_t v7 = *((void *)v5 + 1);
  if ((v7 || (uint64_t v7 = *(void *)v5) != 0) && (*(unsigned char *)(v7 + 16) & 4) == 0)
  {
    int v8 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v5);
    if (v8)
    {
      uint64_t v9 = v8;
      if (v6)
      {
        memset_pattern16(v8, asc_1826CF510, 2 * v6);
        v9[v6] = 125;
      }
      else
      {
        *int v8 = 125;
      }
    }
  }
  else
  {
    uint64_t v10 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (v10)
    {
      uint64_t v11 = v10;
      if (v6) {
        memset(v10, 32, v6);
      }
      else {
        size_t v6 = 0;
      }
      v11[v6] = 125;
    }
  }
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visitStatements(uint64_t result, uint64_t *a2, unsigned int a3)
{
  if (a3)
  {
    uint64_t v4 = result;
    uint64_t v5 = 8 * a3;
    do
    {
      uint64_t v6 = *a2;
      uint64_t v7 = *(WTF::StringBuilder **)(v4 + 40);
      size_t v8 = (4 * *(_DWORD *)(v4 + 56));
      uint64_t v9 = *((void *)v7 + 1);
      if ((v9 || (uint64_t v9 = *(void *)v7) != 0) && (*(unsigned char *)(v9 + 16) & 4) == 0)
      {
        uint64_t v10 = (void *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v7);
        if (v10) {
          BOOL v11 = v8 == 0;
        }
        else {
          BOOL v11 = 1;
        }
        if (!v11) {
          memset_pattern16(v10, asc_1826CF510, 2 * v8);
        }
      }
      else
      {
        uint64_t v12 = (void *)MEMORY[0x18530ACF0]();
        if (v12) {
          BOOL v13 = v8 == 0;
        }
        else {
          BOOL v13 = 1;
        }
        if (!v13) {
          memset(v12, 32, v8);
        }
      }
      if (!*(unsigned char *)(v4 + 32)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 360))(v4, v6);
      }
      unsigned int v14 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 16))(v6);
      if (v14 <= 0x36 && ((1 << v14) & 0x4C73C000000000) != 0)
      {
        uint64_t v16 = *(void *)(v4 + 40);
        uint64_t v17 = *(void *)(v16 + 8);
        if (v17 && (uint64_t v18 = *(unsigned int *)(v16 + 16), v18 < *(_DWORD *)(v17 + 4)) && !*(void *)v16)
        {
          int v23 = *(_DWORD *)(v17 + 16);
          uint64_t v24 = *(void *)(v17 + 8);
          *(_DWORD *)(v16 + 16) = v18 + 1;
          if ((v23 & 4) != 0) {
            *(unsigned char *)(v24 + v18) = 59;
          }
          else {
            *(_WORD *)(v24 + 2 * v18) = 59;
          }
        }
        else
        {
          WTF::StringBuilder::append();
        }
      }
      uint64_t result = *(void *)(v4 + 40);
      uint64_t v19 = *(void *)(result + 8);
      if (!v19
        || (uint64_t v20 = *(unsigned int *)(result + 16), v20 >= *(_DWORD *)(v19 + 4))
        || *(void *)result)
      {
        uint64_t result = WTF::StringBuilder::append();
      }
      else
      {
        int v21 = *(_DWORD *)(v19 + 16);
        uint64_t v22 = *(void *)(v19 + 8);
        *(_DWORD *)(result + 16) = v20 + 1;
        if ((v21 & 4) != 0) {
          *(unsigned char *)(v22 + v20) = 10;
        }
        else {
          *(_WORD *)(v22 + 2 * v20) = 10;
        }
      }
      ++a2;
      v5 -= 8;
    }
    while (v5);
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::DecrementIncrementStatement *a2)
{
  uint64_t result = (*(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 3));
  if (*((unsigned char *)a2 + 32) == 1)
  {
  }
  else
  {
    if (*((unsigned char *)a2 + 32)) {
      return result;
    }
  }
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::DiscardStatement *a2)
{
  return WTF::StringBuilder::append();
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::IfStatement *a2)
{
  WTF::StringBuilder::append();
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 3));
  WTF::StringBuilder::append();
  uint64_t result = (*(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 400))(this, *((void *)a2 + 4));
  if (*((void *)a2 + 5))
  {
    WTF::StringBuilder::append();
    uint64_t v5 = *((void *)a2 + 5);
    uint64_t v6 = *(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 360);
    return v6(this, v5);
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::PhonyAssignmentStatement *a2)
{
  WTF::StringBuilder::append();
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 3));
  uint64_t result = *((void *)this + 5);
  uint64_t v5 = *(void *)(result + 8);
  if (!v5) {
    return WTF::StringBuilder::append();
  }
  uint64_t v6 = *(unsigned int *)(result + 16);
  if (v6 >= *(_DWORD *)(v5 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v7 = *(_DWORD *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 8);
  *(_DWORD *)(result + 16) = v6 + 1;
  if ((v7 & 4) != 0) {
    *(unsigned char *)(v8 + v6) = 41;
  }
  else {
    *(_WORD *)(v8 + 2 * v6) = 41;
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::ReturnStatement *a2)
{
  uint64_t v5 = *((void *)this + 9);
  if (!v5
    || (*(unsigned __int16 *)(v5 + 121) >= 0x100u ? (BOOL v6 = *(_WORD *)(v5 + 121) == 2) : (BOOL v6 = 0),
        !v6
     || (uint64_t v7 = *(void *)(v5 + 104)) == 0
     || (uint64_t v8 = *(_DWORD **)(v7 + 24)) == 0
     || v8[12] != 4
     || (uint64_t v9 = *(unsigned int *)(*(void *)v8 + 84), !v9)))
  {
LABEL_32:
    uint64_t result = WTF::StringBuilder::append();
    int v22 = 0;
    uint64_t v18 = 0;
    char v23 = 1;
    if (!*((void *)a2 + 3)) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  uint64_t v10 = *(uint64_t **)(*(void *)v8 + 72);
  BOOL v11 = &v10[v9];
  while (1)
  {
    int v2 = (int *)*v10;
    if (*(unsigned __int16 *)(*v10 + 140) >= 0x100u && *(_WORD *)(*v10 + 140) == 0)
    {
      uint64_t v133 = *(void *)v8;
      long long v157 = *(_OWORD *)(*(void *)v8 + 32);
      unint64_t v156 = (const char *)off_1ECABC030;
      uint64_t v18 = *(_DWORD **)(v133 + 48);
      if (v18) {
        *v18 += 2;
      }
      uint16x8_t v158 = v18;
      long long v160 = *((_OWORD *)v2 + 2);
      int v2 = (int *)*((void *)v2 + 6);
      if (v2) {
        *v2 += 2;
      }
      if (v18) {
        *v18 += 2;
      }
      if (v2) {
        goto LABEL_29;
      }
      goto LABEL_187;
    }
    uint64_t v13 = v2[25];
    if (v13) {
      break;
    }
LABEL_12:
    if (++v10 == v11) {
      goto LABEL_32;
    }
  }
  unsigned int v14 = (void *)*((void *)v2 + 11);
  uint64_t v15 = 8 * v13;
  while (1)
  {
    uint64_t v16 = *v14;
    if ((*(unsigned int (**)(void))(*(void *)*v14 + 16))(*v14) == 3 && !*(unsigned char *)(v16 + 24)) {
      break;
    }
    ++v14;
    v15 -= 8;
    if (!v15) {
      goto LABEL_12;
    }
  }
  uint64_t v17 = *(void *)v8;
  long long v157 = *(_OWORD *)(*(void *)v8 + 32);
  unint64_t v156 = (const char *)off_1ECABC030;
  uint64_t v18 = *(_DWORD **)(v17 + 48);
  if (v18) {
    *v18 += 2;
  }
  uint16x8_t v158 = v18;
  long long v160 = *((_OWORD *)v2 + 2);
  int v2 = (int *)*((void *)v2 + 6);
  if (v2) {
    *v2 += 2;
  }
  if (v18) {
    *v18 += 2;
  }
  if (!v2)
  {
LABEL_187:
    unint64_t v159 = off_1ECABC030;
    uint64_t v161 = 0;
    goto LABEL_31;
  }
LABEL_29:
  int v19 = *v2;
  *v2 += 2;
  unint64_t v159 = off_1ECABC030;
  uint64_t v161 = 0;
  if (v19)
  {
    *int v2 = v19;
LABEL_31:
    uint64_t v20 = v18;
    goto LABEL_119;
  }
  WTF::StringImpl::destroy();
  uint64_t v20 = v158;
LABEL_119:
  unint64_t v156 = (const char *)off_1ECABC030;
  uint16x8_t v158 = 0;
  if (v20)
  {
    if (*v20 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v20 -= 2;
    }
  }
  size_t v95 = (WTF::StringBuilder *)*((void *)this + 5);
  uint16x8_t v162 = v18;
  unint64_t v156 = " __wgslFragmentReturnResult = ";
  LODWORD(v157) = 30;
  uint64_t result = (uint64_t)WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v95, (uint64_t *)&v162, (uint64_t)&v156);
  char v23 = 0;
  int v22 = 1;
  if (*((void *)a2 + 3))
  {
LABEL_33:
    uint64_t v24 = *((void *)this + 5);
    LOBYTE(v156) = 32;
    uint64_t v25 = *(void *)(v24 + 8);
    if (v25 && (uint64_t v26 = *(unsigned int *)(v24 + 16), v26 < *(_DWORD *)(v25 + 4)) && !*(void *)v24)
    {
      int v43 = *(_DWORD *)(v25 + 16);
      uint64_t v44 = *(void *)(v25 + 8);
      *(_DWORD *)(v24 + 16) = v26 + 1;
      if ((v43 & 4) != 0) {
        *(unsigned char *)(v44 + v26) = 32;
      }
      else {
        *(_WORD *)(v44 + 2 * v26) = 32;
      }
    }
    else
    {
      WTF::StringBuilder::append();
    }
    uint64_t result = (*(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 3));
  }
LABEL_38:
  if (!v22) {
    goto LABEL_151;
  }
  int v27 = (WTF::StringBuilder *)*((void *)this + 5);
  uint64_t v28 = *((void *)v27 + 1);
  if ((!v28 && (uint64_t v28 = *(void *)v27) == 0 || (*(unsigned char *)(v28 + 16) & 4) != 0) && (!v2 || (v2[4] & 4) != 0))
  {
    uint64_t v34 = MEMORY[0x18530ACF0]();
    if (!v34) {
      goto LABEL_150;
    }
    uint64_t v35 = v34;
    qmemcpy((void *)v34, ";\n__wgslFragmentReturnResult.", 29);
    uint64_t v36 = (unsigned char *)(v34 + 29);
    if (!v2)
    {
      uint64_t v56 = 0;
      qmemcpy((void *)(v34 + 29), " = clamp(__wgslFragmentReturnResult.", 36);
      unint64_t v57 = (unsigned char *)(v34 + 65);
LABEL_149:
      qmemcpy(&v57[v56], ", as_type<float>(__DynamicOffsets[0]), as_type<float>(__DynamicOffsets[1]));\n", 77);
      goto LABEL_150;
    }
    int v37 = (int8x16_t *)*((void *)v2 + 1);
    size_t v38 = v2[1];
    if ((v2[4] & 4) != 0)
    {
      if (v38)
      {
        if (v38 == 1) {
          *uint64_t v36 = v37->i8[0];
        }
        else {
          memcpy((void *)(v34 + 29), v37, v38);
        }
      }
    }
    else
    {
      int v39 = &v36[v38];
      if (v38 < 0x10)
      {
        unint64_t v40 = v34 + 29;
      }
      else
      {
        unint64_t v40 = (unint64_t)&v36[v38 & 0xFFFFFFF0];
        int v41 = (unsigned long long *)(v34 + 29);
        do
        {
          unsigned long long v42 = (unsigned __int128)vld2q_s8(v37->i8);
          v37 += 2;
          *v41++ = v42;
        }
        while (v41 != (unsigned long long *)v40);
      }
      if ((unsigned char *)v40 != v39)
      {
        size_t v88 = v34 + v38;
        unint64_t v89 = v34 + v38 - v40 + 29;
        if (v89 < 8
          || (v40 < (unint64_t)&v37[3].u64[1] + 2 * v88 + -2 * v40 + 2
            ? (BOOL v90 = (unint64_t)v37 >= v88 + 29)
            : (BOOL v90 = 1),
              !v90))
        {
          uint8x16_t v92 = (unsigned char *)v40;
          uint16x8_t v93 = v37;
          goto LABEL_116;
        }
        if (v89 >= 0x20)
        {
          unint64_t v91 = v89 & 0xFFFFFFFFFFFFFFE0;
          int8x16x2_t v134 = v37 + 2;
          int8x16x2_t v135 = (int8x16_t *)(v40 + 16);
          unint64_t v136 = v89 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v138 = v134[-2];
            int8x16_t v137 = v134[-1];
            int8x16_t v140 = *v134;
            int8x16_t v139 = v134[1];
            v134 += 4;
            v135[-1] = vuzp1q_s8(v138, v137);
            *int8x16x2_t v135 = vuzp1q_s8(v140, v139);
            v135 += 2;
            v136 -= 32;
          }
          while (v136);
          if (v89 == v91) {
            goto LABEL_126;
          }
          if ((v89 & 0x18) == 0)
          {
            uint16x8_t v93 = (int8x16_t *)((char *)v37 + 2 * v91);
            uint8x16_t v92 = (unsigned char *)(v40 + v91);
            do
            {
LABEL_116:
              char v94 = v93->i8[0];
              uint16x8_t v93 = (int8x16_t *)((char *)v93 + 2);
              *v92++ = v94;
            }
            while (v92 != v39);
            goto LABEL_126;
          }
        }
        else
        {
          unint64_t v91 = 0;
        }
        uint8x16_t v92 = (unsigned char *)(v40 + (v89 & 0xFFFFFFFFFFFFFFF8));
        uint16x8_t v93 = (int8x16_t *)((char *)v37 + 2 * (v89 & 0xFFFFFFFFFFFFFFF8));
        size_t v141 = (int16x8_t *)((char *)v37 + 2 * v91);
        unint64_t v142 = (int8x8_t *)(v40 + v91);
        unint64_t v143 = v91 - (v89 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          int16x8_t v144 = *v141++;
          *v142++ = vmovn_s16(v144);
          v143 += 8;
        }
        while (v143);
        if (v89 != (v89 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_116;
        }
      }
    }
LABEL_126:
    uint64_t v96 = v2[1];
    qmemcpy(&v36[v96], " = clamp(__wgslFragmentReturnResult.", 36);
    unint64_t v57 = &v36[v96 + 36];
    unint64_t v97 = (int8x16_t *)*((void *)v2 + 1);
    size_t v98 = v2[1];
    if ((v2[4] & 4) != 0)
    {
      if (v98)
      {
        if (v98 == 1) {
          unsigned char *v57 = v97->i8[0];
        }
        else {
          memcpy(v57, v97, v98);
        }
      }
      goto LABEL_148;
    }
    int8x16_t v99 = &v57[v98];
    if (v98 < 0x10)
    {
      unint64_t v100 = (unint64_t)v57;
    }
    else
    {
      unint64_t v100 = (unint64_t)&v57[v98 & 0xFFFFFFF0];
      unint64_t v101 = (unsigned long long *)v57;
      do
      {
        unsigned long long v102 = (unsigned __int128)vld2q_s8(v97->i8);
        v97 += 2;
        *v101++ = v102;
      }
      while (v101 != (unsigned long long *)v100);
    }
    if ((unsigned char *)v100 == v99)
    {
LABEL_148:
      uint64_t v56 = v2[1];
      goto LABEL_149;
    }
    size_t v103 = v35 + v96 + v98;
    unint64_t v104 = v103 - v100 + 65;
    if (v104 < 8
      || ((unint64_t v105 = v35 + v98 + v96 + 65, v100 < (unint64_t)v97[8].u64 + 2 * v103 + -2 * v100 + 2)
        ? (BOOL v106 = (unint64_t)v97 >= v105)
        : (BOOL v106 = 1),
          !v106))
    {
      uint8x8_t v108 = (unsigned char *)v100;
      char v109 = v97;
      goto LABEL_145;
    }
    if (v104 >= 0x20)
    {
      unint64_t v107 = v104 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v145 = v97 + 2;
      uint64_t v146 = (int8x16_t *)(v100 + 16);
      unint64_t v147 = v104 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v149 = v145[-2];
        int8x16_t v148 = v145[-1];
        int8x16_t v151 = *v145;
        int8x16_t v150 = v145[1];
        v145 += 4;
        v146[-1] = vuzp1q_s8(v149, v148);
        *uint64_t v146 = vuzp1q_s8(v151, v150);
        v146 += 2;
        v147 -= 32;
      }
      while (v147);
      if (v104 == v107) {
        goto LABEL_148;
      }
      if ((v104 & 0x18) == 0)
      {
        char v109 = (int8x16_t *)((char *)v97 + 2 * v107);
        uint8x8_t v108 = (unsigned char *)(v100 + v107);
        do
        {
LABEL_145:
          char v110 = v109->i8[0];
          char v109 = (int8x16_t *)((char *)v109 + 2);
          *v108++ = v110;
        }
        while (v108 != v99);
        goto LABEL_148;
      }
    }
    else
    {
      unint64_t v107 = 0;
    }
    uint8x8_t v108 = (unsigned char *)(v100 + (v104 & 0xFFFFFFFFFFFFFFF8));
    char v109 = (int8x16_t *)((char *)v97 + 2 * (v104 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v152 = (int16x8_t *)((char *)v97 + 2 * v107);
    unint64_t v153 = (int8x8_t *)(v100 + v107);
    unint64_t v154 = v107 - (v104 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v155 = *v152++;
      *v153++ = vmovn_s16(v155);
      v154 += 8;
    }
    while (v154);
    if (v104 == (v104 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_148;
    }
    goto LABEL_145;
  }
  uint64_t v29 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v27);
  if (!v29) {
    goto LABEL_150;
  }
  uint64_t v30 = v29;
  *(_OWORD *)uint64_t v29 = xmmword_1826CF490;
  *(_OWORD *)(v29 + 16) = xmmword_1826CF4A0;
  *(_OWORD *)(v29 + 32) = xmmword_1826CF4B0;
  *(void *)(v29 + 48) = 0x74006C00750073;
  *(_WORD *)(v29 + 56) = 46;
  uint64_t v31 = (_WORD *)(v29 + 58);
  if (!v2)
  {
    uint64_t v45 = 0;
    goto LABEL_84;
  }
  uint64_t v32 = (int8x16_t *)*((void *)v2 + 1);
  uint64_t v33 = v2[1];
  if ((v2[4] & 4) != 0)
  {
    size_t v46 = &v31[v33];
    if (v33 < 0x40)
    {
      unint64_t v47 = v29 + 58;
    }
    else
    {
      unint64_t v47 = (unint64_t)&v31[v33 & 0xFFFFFFC0];
      long long v48 = 0uLL;
      unint64_t v49 = (char *)(v29 + 58);
      do
      {
        v164.val[0] = *v32;
        int8x16_t v50 = v32[1];
        v167.val[0] = v32[2];
        int8x16_t v51 = v32[3];
        v32 += 4;
        int8x16_t v52 = v51;
        v167.val[1] = 0uLL;
        v170.val[0] = v50;
        v164.val[1] = 0uLL;
        int v53 = v49;
        vst2q_s8(v53, v164);
        v53 += 32;
        v170.val[1] = 0uLL;
        vst2q_s8(v53, v170);
        uint64_t v54 = v49 + 64;
        vst2q_s8(v54, v167);
        uint64_t v55 = v49 + 96;
        vst2q_s8(v55, *(int8x16x2_t *)(&v48 - 1));
        v49 += 128;
      }
      while (v49 != (char *)v47);
    }
    if ((_WORD *)v47 == v46) {
      goto LABEL_83;
    }
    unint64_t v58 = v29 + 2 * v33 - v47 + 56;
    if (v58 < 0xE
      || (v47 < (unint64_t)v32->u64 + (v58 >> 1) + 1
        ? (BOOL v59 = (unint64_t)v32 >= (v58 & 0xFFFFFFFFFFFFFFFELL) + v47 + 2)
        : (BOOL v59 = 1),
          !v59))
    {
      int8x16_t v62 = (_WORD *)v47;
      uint64_t v63 = v32;
      goto LABEL_80;
    }
    uint64_t v60 = (v58 >> 1) + 1;
    if (v58 >= 0x3E)
    {
      unint64_t v61 = v60 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v113 = (uint8x8_t *)&v32[1];
      int8x16_t v114 = (uint16x8_t *)(v47 + 32);
      unint64_t v115 = v60 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v116 = *(uint8x16_t *)v113[-2].i8;
        uint16x8_t v117 = vmovl_u8(*v113);
        uint16x8_t v118 = vmovl_high_u8(*(uint8x16_t *)v113->i8);
        v114[-2] = vmovl_u8(*(uint8x8_t *)v116.i8);
        v114[-1] = vmovl_high_u8(v116);
        *int8x16_t v114 = v117;
        v114[1] = v118;
        v114 += 4;
        v113 += 4;
        v115 -= 32;
      }
      while (v115);
      if (v60 == v61) {
        goto LABEL_83;
      }
      if ((v60 & 0x18) == 0)
      {
        uint64_t v63 = (int8x16_t *)((char *)v32 + v61);
        int8x16_t v62 = (_WORD *)(v47 + 2 * v61);
        goto LABEL_80;
      }
    }
    else
    {
      unint64_t v61 = 0;
    }
    int8x16_t v62 = (_WORD *)(v47 + 2 * (v60 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v63 = (int8x16_t *)((char *)v32 + (v60 & 0xFFFFFFFFFFFFFFF8));
    int16x8_t v119 = (uint8x8_t *)&v32->i8[v61];
    uint64_t v120 = (uint16x8_t *)(v47 + 2 * v61);
    unint64_t v121 = v61 - (v60 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v122 = *v119++;
      *v120++ = vmovl_u8(v122);
      v121 += 8;
    }
    while (v121);
    if (v60 == (v60 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_83;
    }
    do
    {
LABEL_80:
      __int16 v64 = v63->u8[0];
      uint64_t v63 = (int8x16_t *)((char *)v63 + 1);
      *v62++ = v64;
    }
    while (v62 != v46);
    goto LABEL_83;
  }
  if (v33)
  {
    if (v33 == 1) {
      *uint64_t v31 = v32->i16[0];
    }
    else {
      memcpy((void *)(v29 + 58), v32, 2 * v33);
    }
  }
LABEL_83:
  uint64_t v45 = v2[1];
LABEL_84:
  unint64_t v65 = &v31[v45];
  *(_OWORD *)unint64_t v65 = xmmword_1826CF4C0;
  *((_OWORD *)v65 + 1) = xmmword_1826CF4D0;
  *((_OWORD *)v65 + 2) = xmmword_1826CF4E0;
  *((_OWORD *)v65 + 3) = xmmword_1826CF4F0;
  *((void *)v65 + 8) = 0x2E0074006C0075;
  unint64_t v66 = v65 + 36;
  if (v2)
  {
    BOOL v67 = (int8x16_t *)*((void *)v2 + 1);
    uint64_t v68 = v2[1];
    if ((v2[4] & 4) == 0)
    {
      if (v68)
      {
        if (v68 == 1) {
          _WORD *v66 = v67->i16[0];
        }
        else {
          memcpy(v66, v67, 2 * v68);
        }
      }
      goto LABEL_103;
    }
    uint64_t v70 = &v66[v68];
    if (v68 < 0x40)
    {
      unint64_t v71 = (unint64_t)v66;
    }
    else
    {
      unint64_t v71 = (unint64_t)&v66[v68 & 0xFFFFFFC0];
      long long v72 = 0uLL;
      uint64_t v73 = (char *)v66;
      do
      {
        v165.val[0] = *v67;
        int8x16_t v74 = v67[1];
        v168.val[0] = v67[2];
        int8x16_t v75 = v67[3];
        v67 += 4;
        int8x16_t v76 = v75;
        v168.val[1] = 0uLL;
        v171.val[0] = v74;
        v165.val[1] = 0uLL;
        uint64_t v77 = v73;
        vst2q_s8(v77, v165);
        v77 += 32;
        v171.val[1] = 0uLL;
        vst2q_s8(v77, v171);
        unint64_t v78 = v73 + 64;
        vst2q_s8(v78, v168);
        uint64_t v79 = v73 + 96;
        vst2q_s8(v79, *(int8x16x2_t *)(&v72 - 1));
        v73 += 128;
      }
      while (v73 != (char *)v71);
    }
    if ((_WORD *)v71 != v70)
    {
      unint64_t v80 = v30 + 2 * (v45 + v68) - v71 + 128;
      if (v80 < 0xE
        || v71 < (unint64_t)v67->u64 + (v80 >> 1) + 1
        && (unint64_t)v67 < (v80 & 0xFFFFFFFFFFFFFFFELL) + v71 + 2)
      {
        size_t v81 = (_WORD *)v71;
        unint64_t v82 = v67;
        goto LABEL_100;
      }
      uint64_t v111 = (v80 >> 1) + 1;
      if (v80 < 0x3E)
      {
        unint64_t v112 = 0;
        goto LABEL_176;
      }
      unint64_t v112 = v111 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v123 = (uint8x8_t *)&v67[1];
      int8x16_t v124 = (uint16x8_t *)(v71 + 32);
      unint64_t v125 = v111 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v126 = *(uint8x16_t *)v123[-2].i8;
        uint16x8_t v127 = vmovl_u8(*v123);
        uint16x8_t v128 = vmovl_high_u8(*(uint8x16_t *)v123->i8);
        v124[-2] = vmovl_u8(*(uint8x8_t *)v126.i8);
        v124[-1] = vmovl_high_u8(v126);
        uint16x8_t *v124 = v127;
        v124[1] = v128;
        v124 += 4;
        v123 += 4;
        v125 -= 32;
      }
      while (v125);
      if (v111 == v112) {
        goto LABEL_103;
      }
      if ((v111 & 0x18) != 0)
      {
LABEL_176:
        size_t v81 = (_WORD *)(v71 + 2 * (v111 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v82 = (int8x16_t *)((char *)v67 + (v111 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v129 = (uint8x8_t *)&v67->i8[v112];
        int16x8_t v130 = (uint16x8_t *)(v71 + 2 * v112);
        unint64_t v131 = v112 - (v111 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v132 = *v129++;
          *v130++ = vmovl_u8(v132);
          v131 += 8;
        }
        while (v131);
        if (v111 == (v111 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_103;
        }
      }
      else
      {
        unint64_t v82 = (int8x16_t *)((char *)v67 + v112);
        size_t v81 = (_WORD *)(v71 + 2 * v112);
      }
      do
      {
LABEL_100:
        __int16 v83 = v82->u8[0];
        unint64_t v82 = (int8x16_t *)((char *)v82 + 1);
        *v81++ = v83;
      }
      while (v81 != v70);
    }
LABEL_103:
    uint64_t v69 = v2[1];
  }
  else
  {
    uint64_t v69 = 0;
  }
  v163.val[0] = *(int8x16_t *)", as_type<float>(__DynamicOffsets[0]), as_type<float>(__DynamicOffsets[1]));\n";
  v166.val[0] = *(int8x16_t *)"s[0]), as_type<float>(__DynamicOffsets[1]));\n";
  BOOL v84 = (char *)&v66[v69];
  v169.val[1] = 0uLL;
  v169.val[0] = *(int8x16_t *)"loat>(__DynamicOffsets[1]));\n";
  v166.val[1] = 0u;
  v172.val[0] = *(int8x16_t *)"(__DynamicOffsets[0]), as_type<float>(__DynamicOffsets[1]));\n";
  v163.val[1] = 0u;
  unint64_t v85 = v84;
  vst2q_s8(v85, v163);
  v85 += 32;
  v172.val[1] = 0u;
  vst2q_s8(v85, v172);
  uint8x16_t v86 = v84 + 64;
  vst2q_s8(v86, v166);
  uint64_t v87 = v84 + 96;
  vst2q_s8(v87, v169);
  *((_OWORD *)v84 + 8) = xmmword_1826CF500;
  *((void *)v84 + 18) = 0x3B00290029005DLL;
  *((_WORD *)v84 + 76) = 10;
LABEL_150:
  uint64_t result = WTF::StringBuilder::append();
LABEL_151:
  if (v23) {
    return result;
  }
  if (!v2) {
    goto LABEL_155;
  }
  if (*v2 == 2)
  {
    uint64_t result = WTF::StringImpl::destroy();
    if (!v18) {
      return result;
    }
    goto LABEL_158;
  }
  *v2 -= 2;
LABEL_155:
  if (v18)
  {
LABEL_158:
    if (*v18 == 2) {
      return WTF::StringImpl::destroy();
    }
    else {
      *v18 -= 2;
    }
  }
  return result;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::ForStatement *a2)
{
  WTF::StringBuilder::append();
  if (*((void *)a2 + 3)) {
    (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *))(*(void *)this + 360))(this);
  }
  uint64_t v4 = *((void *)this + 5);
  uint64_t v5 = *(void *)(v4 + 8);
  if (v5 && (uint64_t v6 = *(unsigned int *)(v4 + 16), v6 < *(_DWORD *)(v5 + 4)) && !*(void *)v4)
  {
    int v18 = *(_DWORD *)(v5 + 16);
    uint64_t v19 = *(void *)(v5 + 8);
    *(_DWORD *)(v4 + 16) = v6 + 1;
    if ((v18 & 4) != 0) {
      *(unsigned char *)(v19 + v6) = 59;
    }
    else {
      *(_WORD *)(v19 + 2 * v6) = 59;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  uint64_t v7 = *((void *)a2 + 4);
  uint64_t v8 = *((void *)this + 5);
  if (v7)
  {
    uint64_t v9 = *(void *)(v8 + 8);
    if (v9 && (uint64_t v10 = *(unsigned int *)(v8 + 16), v10 < *(_DWORD *)(v9 + 4)) && !*(void *)v8)
    {
      int v22 = *(_DWORD *)(v9 + 16);
      uint64_t v23 = *(void *)(v9 + 8);
      *(_DWORD *)(v8 + 16) = v10 + 1;
      if ((v22 & 4) != 0) {
        *(unsigned char *)(v23 + v10) = 32;
      }
      else {
        *(_WORD *)(v23 + 2 * v10) = 32;
      }
    }
    else
    {
      WTF::StringBuilder::append();
    }
    (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 208))(this, v7);
    uint64_t v8 = *((void *)this + 5);
  }
  uint64_t v11 = *(void *)(v8 + 8);
  if (v11 && (uint64_t v12 = *(unsigned int *)(v8 + 16), v12 < *(_DWORD *)(v11 + 4)) && !*(void *)v8)
  {
    int v20 = *(_DWORD *)(v11 + 16);
    uint64_t v21 = *(void *)(v11 + 8);
    *(_DWORD *)(v8 + 16) = v12 + 1;
    if ((v20 & 4) != 0) {
      *(unsigned char *)(v21 + v12) = 59;
    }
    else {
      *(_WORD *)(v21 + 2 * v12) = 59;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  uint64_t v13 = *((void *)a2 + 5);
  uint64_t v14 = *((void *)this + 5);
  if (v13)
  {
    uint64_t v15 = *(void *)(v14 + 8);
    if (v15 && (uint64_t v16 = *(unsigned int *)(v14 + 16), v16 < *(_DWORD *)(v15 + 4)) && !*(void *)v14)
    {
      int v24 = *(_DWORD *)(v15 + 16);
      uint64_t v25 = *(void *)(v15 + 8);
      *(_DWORD *)(v14 + 16) = v16 + 1;
      if ((v24 & 4) != 0) {
        *(unsigned char *)(v25 + v16) = 32;
      }
      else {
        *(_WORD *)(v25 + 2 * v16) = 32;
      }
    }
    else
    {
      WTF::StringBuilder::append();
    }
    (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 360))(this, v13);
  }
  WTF::StringBuilder::append();
  return (*(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 400))(this, *((void *)a2 + 6));
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::LoopStatement *a2)
{
  WTF::StringBuilder::append();
  if (*((unsigned char *)a2 + 104))
  {
    uint64_t v4 = (WTF::StringBuilder *)*((void *)this + 5);
    uint64_t v23 = "BOOL __continuing = false;\n";
    int v24 = 27;
    int v22 = *((_DWORD *)this + 14);
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>>(v4, (unint64_t *)&v23, &v22);
  }
  if (*((unsigned char *)a2 + 96)) {
    uint64_t v5 = (char *)a2 + 56;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *((void *)this + 11);
  *((void *)this + 11) = v5;
  ++*((_DWORD *)this + 14);
  WGSL::Metal::FunctionDefinitionWriter::visitStatements((uint64_t)this, *((uint64_t **)a2 + 5), *((_DWORD *)a2 + 13));
  if (*((unsigned char *)a2 + 96))
  {
    uint64_t v7 = (WTF::StringBuilder *)*((void *)this + 5);
    size_t v8 = (4 * *((_DWORD *)this + 14));
    uint64_t v9 = *((void *)v7 + 1);
    if ((v9 || (uint64_t v9 = *(void *)v7) != 0) && (*(unsigned char *)(v9 + 16) & 4) == 0)
    {
      uint64_t v10 = (void *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v7);
      if (v10) {
        BOOL v11 = v8 == 0;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11) {
        memset_pattern16(v10, asc_1826CF510, 2 * v8);
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x18530ACF0]();
      if (v12) {
        BOOL v13 = v8 == 0;
      }
      else {
        BOOL v13 = 1;
      }
      if (!v13) {
        memset(v12, 32, v8);
      }
    }
    if (!*((unsigned char *)a2 + 96))
    {
      __break(1u);
      return;
    }
    (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, char *))(*(void *)this + 560))(this, (char *)a2 + 56);
  }
  int v14 = *((_DWORD *)this + 14) - 1;
  *((_DWORD *)this + 14) = v14;
  *((void *)this + 11) = v6;
  uint64_t v15 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v16 = (4 * v14);
  uint64_t v17 = *((void *)v15 + 1);
  if ((v17 || (uint64_t v17 = *(void *)v15) != 0) && (*(unsigned char *)(v17 + 16) & 4) == 0)
  {
    int v18 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v15);
    if (v18)
    {
      uint64_t v19 = v18;
      if (v16) {
        memset_pattern16(v18, asc_1826CF510, 2 * v16);
      }
      else {
        size_t v16 = 0;
      }
      v19[v16] = 125;
    }
  }
  else
  {
    int v20 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (v20)
    {
      uint64_t v21 = v20;
      if (v16) {
        memset(v20, 32, v16);
      }
      else {
        size_t v16 = 0;
      }
      v21[v16] = 125;
    }
  }
}

void WGSL::Metal::FunctionDefinitionWriter::visit(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  WTF::StringBuilder::append();
  ++*(_DWORD *)(a1 + 56);
  WGSL::Metal::FunctionDefinitionWriter::visitStatements(a1, *(uint64_t **)a2, *(_DWORD *)(a2 + 12));
  uint64_t v5 = *(void *)(a2 + 32);
  int v6 = *(_DWORD *)(a1 + 56);
  if (v5)
  {
    uint64_t v7 = *(WTF::StringBuilder **)(a1 + 40);
    int v14 = *(_DWORD *)(a1 + 56);
    uint64_t v12 = "if (";
    int v13 = 4;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v7, &v14, (uint64_t)&v12);
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 208))(a1, v5);
    WTF::StringBuilder::append();
    int v8 = *(_DWORD *)(a1 + 56) + 1;
    *(_DWORD *)(a1 + 56) = v8;
    uint64_t v9 = *(WTF::StringBuilder **)(a1 + 40);
    int v14 = v8;
    uint64_t v12 = "break;\n";
    int v13 = 7;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v9, &v14, (uint64_t)&v12);
    int v6 = *(_DWORD *)(a1 + 56) - 1;
  }
  int v10 = v6 - 1;
  *(_DWORD *)(a1 + 56) = v10;
  BOOL v11 = *(WTF::StringBuilder **)(a1 + 40);
  int v14 = v10;
  uint64_t v12 = "}\n";
  int v13 = 2;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v11, &v14, (uint64_t)&v12);
  *(void *)(a1 + 88) = v4;
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::WhileStatement *a2)
{
  WTF::StringBuilder::append();
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 3));
  WTF::StringBuilder::append();
  uint64_t v4 = *((void *)a2 + 4);
  uint64_t v5 = *(uint64_t (**)(WGSL::Metal::FunctionDefinitionWriter *, uint64_t))(*(void *)this + 400);
  return v5(this, v4);
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::SwitchStatement *a2)
{
  WTF::StringBuilder::append();
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 208))(this, *((void *)a2 + 4));
  WTF::StringBuilder::append();
  uint64_t v4 = *((unsigned int *)a2 + 17);
  if (v4)
  {
    uint64_t v5 = *((void *)a2 + 7);
    uint64_t v6 = 24 * v4;
    do
    {
      WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::AST::SwitchStatement &)::$_0::operator()((uint64_t)this, v5, 0);
      v5 += 24;
      v6 -= 24;
    }
    while (v6);
  }
  WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::AST::SwitchStatement &)::$_0::operator()((uint64_t)this, (uint64_t)a2 + 72, 1);
  uint64_t v7 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v8 = (4 * *((_DWORD *)this + 14));
  uint64_t v9 = *((void *)v7 + 1);
  if (!v9 && (uint64_t v9 = *(void *)v7) == 0 || (*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    uint64_t v21 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (v21)
    {
      *uint64_t v21 = 10;
      int v22 = v21 + 1;
      if (v8) {
        memset(v21 + 1, 32, v8);
      }
      else {
        size_t v8 = 0;
      }
      v22[v8] = 125;
    }
LABEL_25:
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int v10 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v7);
  if (!v10) {
    goto LABEL_25;
  }
  *int v10 = 10;
  BOOL v11 = v10 + 1;
  if (!v8)
  {
    *BOOL v11 = 125;
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_26;
    }
LABEL_10:
    if (!*((unsigned char *)a2 + 25)) {
      return;
    }
    uint64_t v12 = (WTF::StringBuilder *)*((void *)this + 5);
    char v34 = 10;
    int v33 = *((_DWORD *)this + 14);
    uint64_t v31 = "if (__continuing) {";
    int v32 = 19;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v12, &v34, &v33, (uint64_t)&v31);
    int v13 = *((_DWORD *)this + 14) + 1;
    *((_DWORD *)this + 14) = v13;
    int v14 = (WTF::StringBuilder *)*((void *)this + 5);
    char v34 = 10;
    int v33 = v13;
    uint64_t v31 = "break;";
    int v32 = 6;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v14, &v34, &v33, (uint64_t)&v31);
    int v15 = *((_DWORD *)this + 14) - 1;
    *((_DWORD *)this + 14) = v15;
    size_t v16 = (WTF::StringBuilder *)*((void *)this + 5);
    size_t v17 = (4 * v15);
    uint64_t v18 = *((void *)v16 + 1);
    if ((v18 || (uint64_t v18 = *(void *)v16) != 0) && (*(unsigned char *)(v18 + 16) & 4) == 0)
    {
      uint64_t v19 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v16);
      if (v19)
      {
        *uint64_t v19 = 10;
        int v20 = v19 + 1;
        if (!v17)
        {
LABEL_16:
          size_t v17 = 0;
LABEL_32:
          v20[v17] = 125;
          return;
        }
LABEL_31:
        memset_pattern16(v20, asc_1826CF510, 2 * v17);
        goto LABEL_32;
      }
      return;
    }
    uint64_t v23 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!v23) {
      return;
    }
    *uint64_t v23 = 10;
    int v24 = v23 + 1;
    if (!v17) {
      goto LABEL_22;
    }
    goto LABEL_35;
  }
  memset_pattern16(v10 + 1, asc_1826CF510, 2 * v8);
  v11[v8] = 125;
  if (!*((unsigned char *)a2 + 24)) {
    goto LABEL_10;
  }
LABEL_26:
  uint64_t v25 = (WTF::StringBuilder *)*((void *)this + 5);
  char v34 = 10;
  int v33 = *((_DWORD *)this + 14);
  uint64_t v31 = "if (__continuing) {";
  int v32 = 19;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v25, &v34, &v33, (uint64_t)&v31);
  ++*((_DWORD *)this + 14);
  (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *, void))(*(void *)this + 560))(this, *((void *)this + 11));
  int v26 = *((_DWORD *)this + 14) - 1;
  *((_DWORD *)this + 14) = v26;
  int v27 = (WTF::StringBuilder *)*((void *)this + 5);
  size_t v17 = (4 * v26);
  uint64_t v28 = *((void *)v27 + 1);
  if (!v28 && (uint64_t v28 = *(void *)v27) == 0 || (*(unsigned char *)(v28 + 16) & 4) != 0)
  {
    uint64_t v30 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!v30) {
      return;
    }
    *uint64_t v30 = 10;
    int v24 = v30 + 1;
    if (!v17)
    {
LABEL_22:
      size_t v17 = 0;
LABEL_36:
      v24[v17] = 125;
      return;
    }
LABEL_35:
    memset(v24, 32, v17);
    goto LABEL_36;
  }
  uint64_t v29 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v27);
  if (v29)
  {
    *uint64_t v29 = 10;
    int v20 = v29 + 1;
    if (!v17) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::AST::SwitchStatement &)::$_0::operator()(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = *(unsigned int *)(a2 + 12);
  if (v6)
  {
    uint64_t v7 = *(uint64_t **)a2;
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *v7;
      int v10 = *(WTF::StringBuilder **)(a1 + 40);
      char v27 = 10;
      int v26 = *(_DWORD *)(a1 + 56);
      int v24 = "case ";
      int v25 = 5;
      WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v10, &v27, &v26, (uint64_t)&v24);
      (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 208))(a1, v9);
      uint64_t v11 = *(void *)(a1 + 40);
      LOBYTE(v24) = 58;
      uint64_t v12 = *(void *)(v11 + 8);
      if (!v12 || (uint64_t v13 = *(unsigned int *)(v11 + 16), v13 >= *(_DWORD *)(v12 + 4)) || *(void *)v11)
      {
        WTF::StringBuilder::append();
      }
      else
      {
        int v14 = *(_DWORD *)(v12 + 16);
        uint64_t v15 = *(void *)(v12 + 8);
        *(_DWORD *)(v11 + 16) = v13 + 1;
        if ((v14 & 4) != 0) {
          *(unsigned char *)(v15 + v13) = 58;
        }
        else {
          *(_WORD *)(v15 + 2 * v13) = 58;
        }
      }
      ++v7;
      v8 -= 8;
    }
    while (v8);
  }
  if (a3)
  {
    size_t v16 = *(WTF::StringBuilder **)(a1 + 40);
    char v27 = 10;
    int v26 = *(_DWORD *)(a1 + 56);
    int v24 = "default:";
    int v25 = 8;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v16, &v27, &v26, (uint64_t)&v24);
  }
  uint64_t v17 = *(void *)(a1 + 40);
  LOBYTE(v24) = 32;
  uint64_t v18 = *(void *)(v17 + 8);
  if (v18 && (uint64_t v19 = *(unsigned int *)(v17 + 16), v19 < *(_DWORD *)(v18 + 4)) && !*(void *)v17)
  {
    int v22 = *(_DWORD *)(v18 + 16);
    uint64_t v23 = *(void *)(v18 + 8);
    *(_DWORD *)(v17 + 16) = v19 + 1;
    if ((v22 & 4) != 0) {
      *(unsigned char *)(v23 + v19) = 32;
    }
    else {
      *(_WORD *)(v23 + 2 * v19) = 32;
    }
  }
  else
  {
    WTF::StringBuilder::append();
  }
  (*(void (**)(uint64_t, void))(*(void *)a1 + 400))(a1, *(void *)(a2 + 16));
  int v20 = *(_DWORD *)(a1 + 56) + 1;
  *(_DWORD *)(a1 + 56) = v20;
  uint64_t v21 = *(WTF::StringBuilder **)(a1 + 40);
  char v27 = 10;
  int v26 = v20;
  int v24 = "break;";
  int v25 = 6;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v21, &v27, &v26, (uint64_t)&v24);
  --*(_DWORD *)(a1 + 56);
}

uint64_t WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::BreakStatement *a2)
{
  return WTF::StringBuilder::append();
}

void WGSL::Metal::FunctionDefinitionWriter::visit(WGSL::Metal::FunctionDefinitionWriter *this, WGSL::AST::ContinueStatement *a2)
{
  if (*((unsigned char *)a2 + 24))
  {
    WTF::StringBuilder::append();
    unsigned int v3 = (WTF::StringBuilder *)*((void *)this + 5);
    int v13 = *((_DWORD *)this + 14);
    uint64_t v11 = "break";
    int v12 = 5;
    WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v3, &v13, (uint64_t)&v11);
  }
  else
  {
    if (*((void *)this + 11))
    {
      (*(void (**)(WGSL::Metal::FunctionDefinitionWriter *))(*(void *)this + 560))(this);
      uint64_t v4 = (WTF::StringBuilder *)*((void *)this + 5);
      size_t v5 = (4 * *((_DWORD *)this + 14));
      uint64_t v6 = *((void *)v4 + 1);
      if ((v6 || (uint64_t v6 = *(void *)v4) != 0) && (*(unsigned char *)(v6 + 16) & 4) == 0)
      {
        uint64_t v7 = (void *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(v4);
        if (v7) {
          BOOL v8 = v5 == 0;
        }
        else {
          BOOL v8 = 1;
        }
        if (!v8) {
          memset_pattern16(v7, asc_1826CF510, 2 * v5);
        }
      }
      else
      {
        uint64_t v9 = (void *)MEMORY[0x18530ACF0]();
        if (v9) {
          BOOL v10 = v5 == 0;
        }
        else {
          BOOL v10 = 1;
        }
        if (!v10) {
          memset(v9, 32, v5);
        }
      }
    }
    WTF::StringBuilder::append();
  }
}

void WGSL::Metal::FunctionDefinitionWriter::~FunctionDefinitionWriter(WGSL::Metal::FunctionDefinitionWriter *this, void *a2)
{
  WGSL::Metal::FunctionDefinitionWriter::~FunctionDefinitionWriter(this, a2);
  JUMPOUT(0x18530AFF0);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  char v10;

  *(void *)this = &unk_1ECABDC40;
  unsigned int v3 = *((void *)this + 15);
  if (v3)
  {
    uint64_t v4 = *(unsigned int *)(v3 - 4);
    if (v4)
    {
      size_t v5 = *((void *)this + 15);
      do
      {
        uint64_t v6 = *(_DWORD **)v5;
        if (*(void *)v5 != -1)
        {
          uint64_t v7 = *(unsigned int *)(v5 + 24);
          if (v7 != -1)
          {
            ((void (*)(char *, uint64_t))off_1ECABDE78[v7])(&v10, v5 + 8);
            uint64_t v6 = *(_DWORD **)v5;
          }
          *(_DWORD *)(v5 + 24) = -1;
          *(void *)size_t v5 = 0;
          if (v6)
          {
            if (*v6 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v6 -= 2;
            }
          }
        }
        v5 += 32;
        --v4;
      }
      while (v4);
    }
    WTF::fastFree((WTF *)(v3 - 16), a2);
  }
  BOOL v8 = *((void *)this + 12);
  if (v8) {
    WTF::fastFree((WTF *)(v8 - 16), a2);
  }
  *(void *)this = &unk_1ECABB740;
  if (*((unsigned char *)this + 32))
  {
    uint64_t v9 = (_DWORD *)*((void *)this + 1);
    *((void *)this + 1) = 0;
    if (v9)
    {
      if (*v9 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v9 -= 2;
      }
    }
  }
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(WTF::StringBuilder *a1, unint64_t *a2, uint64_t *a3, char *a4)
{
  uint64_t v7 = *a3;
  uint64_t v8 = *((void *)a1 + 1);
  if ((!v8 && (uint64_t v8 = *(void *)a1) == 0 || (*(unsigned char *)(v8 + 16) & 4) != 0) && (!v7 || (*(unsigned char *)(v7 + 16) & 4) != 0))
  {
    uint64_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    int v24 = result;
    unint64_t v25 = a2[1];
    uint64_t v26 = v25;
    uint64_t v27 = *a3;
    char v28 = *a4;
    if (v25)
    {
      uint64_t v29 = (unsigned char *)*a2;
      if (v25 != 1)
      {
        uint64_t result = memcpy(result, v29, a2[1]);
        uint64_t v30 = &v24[v26];
        if (v27)
        {
LABEL_17:
          uint64_t v31 = *(int8x16_t **)(v27 + 8);
          size_t v32 = *(unsigned int *)(v27 + 4);
          if ((*(unsigned char *)(v27 + 16) & 4) != 0)
          {
            if (v32)
            {
              if (v32 == 1) {
                *uint64_t v30 = v31->i8[0];
              }
              else {
                uint64_t result = memcpy(v30, v31, v32);
              }
            }
            goto LABEL_81;
          }
          int v33 = &v30[v32];
          if (v32 < 0x10)
          {
            unint64_t v34 = (unint64_t)v30;
          }
          else
          {
            unint64_t v34 = (unint64_t)&v30[v32 & 0xFFFFFFF0];
            uint64_t v35 = (unsigned long long *)v30;
            do
            {
              unsigned long long v36 = (unsigned __int128)vld2q_s8(v31->i8);
              v31 += 2;
              *v35++ = v36;
            }
            while (v35 != (unsigned long long *)v34);
          }
          if ((unsigned char *)v34 == v33)
          {
LABEL_81:
            v30[*(unsigned int *)(v27 + 4)] = v28;
            return result;
          }
          unint64_t v60 = (unint64_t)&v24[v32 + v26];
          unint64_t v61 = v60 - v34;
          if (v60 - v34 < 8
            || (v34 < (unint64_t)v31 + 2 * v61 ? (BOOL v62 = (unint64_t)v31 >= v60) : (BOOL v62 = 1), !v62))
          {
            __int16 v64 = (unsigned char *)v34;
            unint64_t v65 = v31;
            goto LABEL_70;
          }
          if (v61 >= 0x20)
          {
            unint64_t v63 = v61 & 0xFFFFFFFFFFFFFFE0;
            unint64_t v89 = v31 + 2;
            BOOL v90 = (int8x16_t *)(v34 + 16);
            unint64_t v91 = v61 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              int8x16_t v93 = v89[-2];
              int8x16_t v92 = v89[-1];
              int8x16_t v95 = *v89;
              int8x16_t v94 = v89[1];
              v89 += 4;
              v90[-1] = vuzp1q_s8(v93, v92);
              *BOOL v90 = vuzp1q_s8(v95, v94);
              v90 += 2;
              v91 -= 32;
            }
            while (v91);
            if (v61 == v63) {
              goto LABEL_81;
            }
            if ((v61 & 0x18) == 0)
            {
              unint64_t v65 = (int8x16_t *)((char *)v31 + 2 * v63);
              __int16 v64 = (unsigned char *)(v34 + v63);
              do
              {
LABEL_70:
                char v66 = v65->i8[0];
                unint64_t v65 = (int8x16_t *)((char *)v65 + 2);
                *v64++ = v66;
              }
              while (v64 != v33);
              goto LABEL_81;
            }
          }
          else
          {
            unint64_t v63 = 0;
          }
          __int16 v64 = (unsigned char *)(v34 + (v61 & 0xFFFFFFFFFFFFFFF8));
          unint64_t v65 = (int8x16_t *)((char *)v31 + 2 * (v61 & 0xFFFFFFFFFFFFFFF8));
          uint64_t v96 = (int16x8_t *)((char *)v31 + 2 * v63);
          unint64_t v97 = (int8x8_t *)(v34 + v63);
          unint64_t v98 = v63 - (v61 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            int16x8_t v99 = *v96++;
            *v97++ = vmovn_s16(v99);
            v98 += 8;
          }
          while (v98);
          if (v61 == (v61 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_81;
          }
          goto LABEL_70;
        }
LABEL_45:
        *uint64_t v30 = v28;
        return result;
      }
      *uint64_t result = *v29;
    }
    uint64_t v30 = &result[v25];
    if (v27) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
  uint64_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (result)
  {
    unint64_t v11 = *a2;
    unint64_t v10 = a2[1];
    uint64_t v12 = *a3;
    __int16 v13 = *a4;
    int v14 = &result[2 * v10];
    if ((v10 & 0xFFFFFFC0) != 0)
    {
      unint64_t v15 = (unint64_t)&result[2 * (v10 & 0xFFFFFFC0)];
      long long v16 = 0uLL;
      uint64_t v17 = result;
      do
      {
        v100.val[0] = *(int8x16_t *)v11;
        int8x16_t v18 = *(int8x16_t *)(v11 + 16);
        v102.val[0] = *(int8x16_t *)(v11 + 32);
        long long v19 = *(_OWORD *)(v11 + 48);
        v11 += 64;
        long long v20 = v19;
        v102.val[1] = 0uLL;
        v104.val[0] = v18;
        v100.val[1] = 0uLL;
        uint64_t v21 = v17;
        vst2q_s8(v21, v100);
        v21 += 32;
        v104.val[1] = 0uLL;
        vst2q_s8(v21, v104);
        int v22 = v17 + 64;
        vst2q_s8(v22, v102);
        uint64_t v23 = v17 + 96;
        vst2q_s8(v23, *(int8x16x2_t *)(&v16 - 1));
        v17 += 128;
      }
      while (v17 != (char *)v15);
      unint64_t v10 = v10;
      if ((_WORD *)v15 == v14)
      {
LABEL_33:
        if (!v12)
        {
          _WORD *v14 = v13;
          return result;
        }
        uint64_t v44 = *(int8x16_t **)(v12 + 8);
        uint64_t v45 = *(unsigned int *)(v12 + 4);
        if ((*(unsigned char *)(v12 + 16) & 4) == 0)
        {
          if (v45)
          {
            if (v45 == 1) {
              _WORD *v14 = v44->i16[0];
            }
            else {
              uint64_t result = memcpy(v14, v44, 2 * v45);
            }
          }
          goto LABEL_58;
        }
        size_t v46 = &v14[v45];
        if (v45 < 0x40)
        {
          unint64_t v47 = (unint64_t)&result[2 * v10];
          if (v14 == v46)
          {
LABEL_58:
            v14[*(unsigned int *)(v12 + 4)] = v13;
            return result;
          }
        }
        else
        {
          unint64_t v47 = (unint64_t)&v14[v45 & 0xFFFFFFC0];
          long long v48 = 0uLL;
          unint64_t v49 = &result[2 * v10];
          do
          {
            v101.val[0] = *v44;
            int8x16_t v50 = v44[1];
            v103.val[0] = v44[2];
            int8x16_t v51 = v44[3];
            v44 += 4;
            int8x16_t v52 = v51;
            v103.val[1] = 0uLL;
            v105.val[0] = v50;
            v101.val[1] = 0uLL;
            int v53 = v49;
            vst2q_s8(v53, v101);
            v53 += 32;
            v105.val[1] = 0uLL;
            vst2q_s8(v53, v105);
            uint64_t v54 = v49 + 64;
            vst2q_s8(v54, v103);
            uint64_t v55 = v49 + 96;
            vst2q_s8(v55, *(int8x16x2_t *)(&v48 - 1));
            v49 += 128;
          }
          while (v49 != (char *)v47);
          if ((_WORD *)v47 == v46) {
            goto LABEL_58;
          }
        }
        unint64_t v56 = (unint64_t)&result[2 * v10 + 2 * v45 - v47 - 2];
        if (v56 < 0xE
          || v47 < (unint64_t)v44->u64 + (v56 >> 1) + 1
          && (unint64_t)v44 < (v56 & 0xFFFFFFFFFFFFFFFELL) + v47 + 2)
        {
          unint64_t v57 = (_WORD *)v47;
          unint64_t v58 = v44;
          goto LABEL_55;
        }
        uint64_t v77 = (v56 >> 1) + 1;
        if (v56 >= 0x3E)
        {
          unint64_t v78 = v77 & 0xFFFFFFFFFFFFFFE0;
          uint64_t v79 = (uint8x8_t *)&v44[1];
          unint64_t v80 = (uint16x8_t *)(v47 + 32);
          unint64_t v81 = v77 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v82 = *(uint8x16_t *)v79[-2].i8;
            uint16x8_t v83 = vmovl_u8(*v79);
            uint16x8_t v84 = vmovl_high_u8(*(uint8x16_t *)v79->i8);
            v80[-2] = vmovl_u8(*(uint8x8_t *)v82.i8);
            v80[-1] = vmovl_high_u8(v82);
            *unint64_t v80 = v83;
            v80[1] = v84;
            v80 += 4;
            v79 += 4;
            v81 -= 32;
          }
          while (v81);
          if (v77 == v78) {
            goto LABEL_58;
          }
          if ((v77 & 0x18) == 0)
          {
            unint64_t v58 = (int8x16_t *)((char *)v44 + v78);
            unint64_t v57 = (_WORD *)(v47 + 2 * v78);
            do
            {
LABEL_55:
              __int16 v59 = v58->u8[0];
              unint64_t v58 = (int8x16_t *)((char *)v58 + 1);
              *v57++ = v59;
            }
            while (v57 != v46);
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v78 = 0;
        }
        unint64_t v57 = (_WORD *)(v47 + 2 * (v77 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v58 = (int8x16_t *)((char *)v44 + (v77 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v85 = (uint8x8_t *)&v44->i8[v78];
        uint8x16_t v86 = (uint16x8_t *)(v47 + 2 * v78);
        unint64_t v87 = v78 - (v77 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v88 = *v85++;
          *v86++ = vmovl_u8(v88);
          v87 += 8;
        }
        while (v87);
        if (v77 == (v77 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_58;
        }
        goto LABEL_55;
      }
    }
    else
    {
      unint64_t v15 = (unint64_t)result;
      unint64_t v10 = v10;
      if (result == (unsigned char *)v14) {
        goto LABEL_33;
      }
    }
    unint64_t v37 = (unint64_t)&result[2 * v10 - v15 - 2];
    if (v37 < 0xE
      || (v15 < v11 + (v37 >> 1) + 1 ? (BOOL v38 = v11 >= (v37 & 0xFFFFFFFFFFFFFFFELL) + v15 + 2) : (BOOL v38 = 1), !v38))
    {
      int v41 = (_WORD *)v15;
      unsigned long long v42 = (unsigned __int8 *)v11;
      goto LABEL_32;
    }
    uint64_t v39 = (v37 >> 1) + 1;
    if (v37 >= 0x3E)
    {
      unint64_t v40 = v39 & 0xFFFFFFFFFFFFFFE0;
      BOOL v67 = (uint8x8_t *)(v11 + 16);
      uint64_t v68 = (uint16x8_t *)(v15 + 32);
      unint64_t v69 = v39 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v70 = *(uint8x16_t *)v67[-2].i8;
        uint16x8_t v71 = vmovl_u8(*v67);
        uint16x8_t v72 = vmovl_high_u8(*(uint8x16_t *)v67->i8);
        v68[-2] = vmovl_u8(*(uint8x8_t *)v70.i8);
        v68[-1] = vmovl_high_u8(v70);
        *uint64_t v68 = v71;
        v68[1] = v72;
        v68 += 4;
        v67 += 4;
        v69 -= 32;
      }
      while (v69);
      if (v39 == v40) {
        goto LABEL_33;
      }
      if ((v39 & 0x18) == 0)
      {
        unsigned long long v42 = (unsigned __int8 *)(v11 + v40);
        int v41 = (_WORD *)(v15 + 2 * v40);
        goto LABEL_32;
      }
    }
    else
    {
      unint64_t v40 = 0;
    }
    int v41 = (_WORD *)(v15 + 2 * (v39 & 0xFFFFFFFFFFFFFFF8));
    unsigned long long v42 = (unsigned __int8 *)(v11 + (v39 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v73 = (uint8x8_t *)(v11 + v40);
    int8x16_t v74 = (uint16x8_t *)(v15 + 2 * v40);
    unint64_t v75 = v40 - (v39 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v76 = *v73++;
      *v74++ = vmovl_u8(v76);
      v75 += 8;
    }
    while (v75);
    if (v39 == (v39 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_33;
    }
    do
    {
LABEL_32:
      __int16 v43 = *v42++;
      *v41++ = v43;
    }
    while (v41 != v14);
    goto LABEL_33;
  }
  return result;
}

uint64_t WGSL::Metal::emitTextureDimensions(WGSL::Metal::FunctionDefinitionWriter *,WGSL::AST::CallExpression &)::$_0::operator()(void **a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3 = a1[1];
  if (!*((_DWORD *)v3 + 21)) {
    goto LABEL_14;
  }
  (*(void (**)(void, void))(*(void *)**a1 + 208))(**a1, *(void *)v3[9]);
  uint64_t v7 = *(WTF::StringBuilder **)(**a1 + 40);
  int8x16_t v18 = ".get_";
  int v19 = 5;
  unint64_t v8 = a3 - 1;
  if (!a3) {
    unint64_t v8 = 0;
  }
  uint64_t v16 = a2;
  if (v8 >> 31)
  {
LABEL_14:
    __break(0xC471u);
    JUMPOUT(0x1825997B8);
  }
  int v17 = v8;
  char v15 = 40;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(v7, (unint64_t *)&v18, (uint64_t)&v16, &v15);
  uint64_t v9 = a1[1];
  if (*((_DWORD *)v9 + 21) >= 2u) {
    (*(void (**)(void, void))(*(void *)**a1 + 208))(**a1, *(void *)(v9[9] + 8));
  }
  uint64_t result = *(void *)(**a1 + 40);
  LOBYTE(v18) = 41;
  uint64_t v11 = *(void *)(result + 8);
  if (!v11) {
    return WTF::StringBuilder::append();
  }
  uint64_t v12 = *(unsigned int *)(result + 16);
  if (v12 >= *(_DWORD *)(v11 + 4) || *(void *)result) {
    return WTF::StringBuilder::append();
  }
  int v13 = *(_DWORD *)(v11 + 16);
  uint64_t v14 = *(void *)(v11 + 8);
  *(_DWORD *)(result + 16) = v12 + 1;
  if ((v13 & 4) != 0) {
    *(unsigned char *)(v14 + v12) = 41;
  }
  else {
    *(_WORD *)(v14 + 2 * v12) = 41;
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(WTF::StringBuilder *a1, unint64_t *a2, uint64_t a3, char *a4)
{
  uint64_t v7 = *((void *)a1 + 1);
  if (!v7 && (uint64_t v7 = *(void *)a1) == 0 || (*(unsigned char *)(v7 + 16) & 4) != 0)
  {
    uint64_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    int v24 = result;
    unint64_t v25 = a2[1];
    uint64_t v26 = v25;
    uint64_t v27 = *(unsigned char **)a3;
    size_t v28 = *(unsigned int *)(a3 + 8);
    char v29 = *a4;
    if (v25)
    {
      uint64_t v30 = (unsigned char *)*a2;
      if (v25 != 1)
      {
        uint64_t result = memcpy(result, v30, a2[1]);
        uint64_t v31 = &v24[v26];
        if (!v28) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
      *uint64_t result = *v30;
    }
    uint64_t v31 = &result[v25];
    if (!v28) {
      goto LABEL_21;
    }
LABEL_17:
    if (v28 == 1)
    {
      *uint64_t v31 = *v27;
      v31[v28] = v29;
      return result;
    }
    uint64_t result = memcpy(v31, v27, v28);
LABEL_21:
    v31[v28] = v29;
    return result;
  }
  uint64_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (result)
  {
    unint64_t v10 = *a2;
    unint64_t v9 = a2[1];
    unint64_t v11 = *(void *)a3;
    uint64_t v12 = *(unsigned int *)(a3 + 8);
    __int16 v13 = *a4;
    unint64_t v14 = (unint64_t)&result[2 * v9];
    if ((v9 & 0xFFFFFFC0) != 0)
    {
      unint64_t v15 = (unint64_t)&result[2 * (a2[1] & 0xFFFFFFC0)];
      long long v16 = 0uLL;
      int v17 = result;
      do
      {
        v74.val[0] = *(int8x16_t *)v10;
        int8x16_t v18 = *(int8x16_t *)(v10 + 16);
        v76.val[0] = *(int8x16_t *)(v10 + 32);
        long long v19 = *(_OWORD *)(v10 + 48);
        v10 += 64;
        long long v20 = v19;
        v76.val[1] = 0uLL;
        v78.val[0] = v18;
        v74.val[1] = 0uLL;
        uint64_t v21 = v17;
        vst2q_s8(v21, v74);
        v21 += 32;
        v78.val[1] = 0uLL;
        vst2q_s8(v21, v78);
        int v22 = v17 + 64;
        vst2q_s8(v22, v76);
        uint64_t v23 = v17 + 96;
        vst2q_s8(v23, *(int8x16x2_t *)(&v16 - 1));
        v17 += 128;
      }
      while (v17 != (char *)v15);
      unint64_t v9 = v9;
      if (v15 == v14)
      {
LABEL_33:
        uint64_t v39 = (_WORD *)(v14 + 2 * v12);
        if ((v12 & 0xFFFFFFC0) != 0)
        {
          unint64_t v40 = v14 + 2 * (v12 & 0xFFFFFFC0);
          long long v41 = 0uLL;
          do
          {
            v75.val[0] = *(int8x16_t *)v11;
            int8x16_t v42 = *(int8x16_t *)(v11 + 16);
            v77.val[0] = *(int8x16_t *)(v11 + 32);
            long long v43 = *(_OWORD *)(v11 + 48);
            v11 += 64;
            long long v44 = v43;
            v77.val[1] = 0uLL;
            v79.val[0] = v42;
            v75.val[1] = 0uLL;
            uint64_t v45 = (char *)v14;
            vst2q_s8(v45, v75);
            v45 += 32;
            v79.val[1] = 0uLL;
            vst2q_s8(v45, v79);
            size_t v46 = (char *)(v14 + 64);
            vst2q_s8(v46, v77);
            unint64_t v47 = (char *)(v14 + 96);
            vst2q_s8(v47, *(int8x16x2_t *)(&v41 - 1));
            v14 += 128;
          }
          while (v14 != v40);
          unint64_t v14 = v40;
        }
        if ((_WORD *)v14 == v39) {
          goto LABEL_43;
        }
        unint64_t v48 = (unint64_t)&result[2 * v9 + 2 * v12 - v14 - 2];
        if (v48 < 0xE || v14 < v11 + (v48 >> 1) + 1 && v11 < (v48 & 0xFFFFFFFFFFFFFFFELL) + v14 + 2)
        {
          unint64_t v49 = (_WORD *)v14;
          int8x16_t v50 = (unsigned __int8 *)v11;
          goto LABEL_42;
        }
        uint64_t v52 = (v48 >> 1) + 1;
        if (v48 >= 0x3E)
        {
          unint64_t v53 = v52 & 0xFFFFFFFFFFFFFFE0;
          __int16 v64 = (uint8x8_t *)(v11 + 16);
          unint64_t v65 = (uint16x8_t *)(v14 + 32);
          unint64_t v66 = v52 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v67 = *(uint8x16_t *)v64[-2].i8;
            uint16x8_t v68 = vmovl_u8(*v64);
            uint16x8_t v69 = vmovl_high_u8(*(uint8x16_t *)v64->i8);
            v65[-2] = vmovl_u8(*(uint8x8_t *)v67.i8);
            v65[-1] = vmovl_high_u8(v67);
            uint16x8_t *v65 = v68;
            v65[1] = v69;
            v65 += 4;
            v64 += 4;
            v66 -= 32;
          }
          while (v66);
          if (v52 == v53) {
            goto LABEL_43;
          }
          if ((v52 & 0x18) == 0)
          {
            int8x16_t v50 = (unsigned __int8 *)(v11 + v53);
            unint64_t v49 = (_WORD *)(v14 + 2 * v53);
            do
            {
LABEL_42:
              __int16 v51 = *v50++;
              *v49++ = v51;
            }
            while (v49 != v39);
LABEL_43:
            *uint64_t v39 = v13;
            return result;
          }
        }
        else
        {
          unint64_t v53 = 0;
        }
        unint64_t v49 = (_WORD *)(v14 + 2 * (v52 & 0xFFFFFFFFFFFFFFF8));
        int8x16_t v50 = (unsigned __int8 *)(v11 + (v52 & 0xFFFFFFFFFFFFFFF8));
        uint8x16_t v70 = (uint8x8_t *)(v11 + v53);
        uint16x8_t v71 = (uint16x8_t *)(v14 + 2 * v53);
        unint64_t v72 = v53 - (v52 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v73 = *v70++;
          *v71++ = vmovl_u8(v73);
          v72 += 8;
        }
        while (v72);
        if (v52 == (v52 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_43;
        }
        goto LABEL_42;
      }
    }
    else
    {
      unint64_t v15 = (unint64_t)result;
      unint64_t v9 = a2[1];
      if (result == (unsigned char *)v14) {
        goto LABEL_33;
      }
    }
    unint64_t v32 = (unint64_t)&result[2 * v9 - v15 - 2];
    if (v32 < 0xE
      || (v15 < v10 + (v32 >> 1) + 1 ? (BOOL v33 = v10 >= (v32 & 0xFFFFFFFFFFFFFFFELL) + v15 + 2) : (BOOL v33 = 1), !v33))
    {
      unsigned long long v36 = (_WORD *)v15;
      unint64_t v37 = (unsigned __int8 *)v10;
      goto LABEL_32;
    }
    uint64_t v34 = (v32 >> 1) + 1;
    if (v32 >= 0x3E)
    {
      unint64_t v35 = v34 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v54 = (uint8x8_t *)(v10 + 16);
      uint64_t v55 = (uint16x8_t *)(v15 + 32);
      unint64_t v56 = v34 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v57 = *(uint8x16_t *)v54[-2].i8;
        uint16x8_t v58 = vmovl_u8(*v54);
        uint16x8_t v59 = vmovl_high_u8(*(uint8x16_t *)v54->i8);
        v55[-2] = vmovl_u8(*(uint8x8_t *)v57.i8);
        v55[-1] = vmovl_high_u8(v57);
        uint16x8_t *v55 = v58;
        v55[1] = v59;
        v55 += 4;
        v54 += 4;
        v56 -= 32;
      }
      while (v56);
      if (v34 == v35) {
        goto LABEL_33;
      }
      if ((v34 & 0x18) == 0)
      {
        unint64_t v37 = (unsigned __int8 *)(v10 + v35);
        unsigned long long v36 = (_WORD *)(v15 + 2 * v35);
        goto LABEL_32;
      }
    }
    else
    {
      unint64_t v35 = 0;
    }
    unsigned long long v36 = (_WORD *)(v15 + 2 * (v34 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v37 = (unsigned __int8 *)(v10 + (v34 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v60 = (uint8x8_t *)(v10 + v35);
    unint64_t v61 = (uint16x8_t *)(v15 + 2 * v35);
    unint64_t v62 = v35 - (v34 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v63 = *v60++;
      *v61++ = vmovl_u8(v63);
      v62 += 8;
    }
    while (v62);
    if (v34 == (v34 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_33;
    }
    do
    {
LABEL_32:
      __int16 v38 = *v37++;
      *v36++ = v38;
    }
    while (v36 != (_WORD *)v14);
    goto LABEL_33;
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 1);
  if (!v5 && (uint64_t v5 = *(void *)a1) == 0 || (*(unsigned char *)(v5 + 16) & 4) != 0)
  {
    uint64_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    uint64_t v21 = result;
    unint64_t v22 = a2[1];
    uint64_t v23 = v22;
    int v24 = *(unsigned char **)a3;
    size_t v25 = *(unsigned int *)(a3 + 8);
    if (v22)
    {
      uint64_t v26 = (unsigned char *)*a2;
      if (v22 != 1)
      {
        uint64_t result = memcpy(result, v26, a2[1]);
        if (!v25) {
          return result;
        }
        goto LABEL_17;
      }
      *uint64_t result = *v26;
    }
    if (!v25) {
      return result;
    }
LABEL_17:
    uint64_t result = &v21[v23];
    if (v25 == 1)
    {
      *uint64_t result = *v24;
    }
    else
    {
      return memcpy(result, v24, v25);
    }
    return result;
  }
  uint64_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  unint64_t v8 = *a2;
  unint64_t v7 = a2[1];
  unint64_t v9 = *(void *)a3;
  uint64_t v10 = *(unsigned int *)(a3 + 8);
  unint64_t v11 = (unint64_t)&result[2 * v7];
  if ((v7 & 0xFFFFFFC0) == 0)
  {
    unint64_t v12 = (unint64_t)result;
    unint64_t v7 = a2[1];
    if (result == (unsigned char *)v11) {
      goto LABEL_33;
    }
LABEL_23:
    unint64_t v27 = (unint64_t)&result[2 * v7 - v12 - 2];
    if (v27 < 0xE
      || (v12 < v8 + (v27 >> 1) + 1 ? (BOOL v28 = v8 >= (v27 & 0xFFFFFFFFFFFFFFFELL) + v12 + 2) : (BOOL v28 = 1), !v28))
    {
      uint64_t v31 = (_WORD *)v12;
      unint64_t v32 = (unsigned __int8 *)v8;
      goto LABEL_32;
    }
    uint64_t v29 = (v27 >> 1) + 1;
    if (v27 >= 0x3E)
    {
      unint64_t v30 = v29 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v49 = (uint8x8_t *)(v8 + 16);
      int8x16_t v50 = (uint16x8_t *)(v12 + 32);
      unint64_t v51 = v29 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v52 = *(uint8x16_t *)v49[-2].i8;
        uint16x8_t v53 = vmovl_u8(*v49);
        uint16x8_t v54 = vmovl_high_u8(*(uint8x16_t *)v49->i8);
        v50[-2] = vmovl_u8(*(uint8x8_t *)v52.i8);
        v50[-1] = vmovl_high_u8(v52);
        *int8x16_t v50 = v53;
        v50[1] = v54;
        v50 += 4;
        v49 += 4;
        v51 -= 32;
      }
      while (v51);
      if (v29 == v30) {
        goto LABEL_33;
      }
      if ((v29 & 0x18) == 0)
      {
        unint64_t v32 = (unsigned __int8 *)(v8 + v30);
        uint64_t v31 = (_WORD *)(v12 + 2 * v30);
        goto LABEL_32;
      }
    }
    else
    {
      unint64_t v30 = 0;
    }
    uint64_t v31 = (_WORD *)(v12 + 2 * (v29 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v32 = (unsigned __int8 *)(v8 + (v29 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v55 = (uint8x8_t *)(v8 + v30);
    unint64_t v56 = (uint16x8_t *)(v12 + 2 * v30);
    unint64_t v57 = v30 - (v29 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v58 = *v55++;
      *v56++ = vmovl_u8(v58);
      v57 += 8;
    }
    while (v57);
    if (v29 == (v29 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_33;
    }
    do
    {
LABEL_32:
      __int16 v33 = *v32++;
      *v31++ = v33;
    }
    while (v31 != (_WORD *)v11);
    goto LABEL_33;
  }
  unint64_t v12 = (unint64_t)&result[2 * (a2[1] & 0xFFFFFFC0)];
  long long v13 = 0uLL;
  unint64_t v14 = result;
  do
  {
    v70.val[0] = *(int8x16_t *)v8;
    int8x16_t v15 = *(int8x16_t *)(v8 + 16);
    v72.val[0] = *(int8x16_t *)(v8 + 32);
    long long v16 = *(_OWORD *)(v8 + 48);
    v8 += 64;
    long long v17 = v16;
    v72.val[1] = 0uLL;
    v74.val[0] = v15;
    v70.val[1] = 0uLL;
    int8x16_t v18 = v14;
    vst2q_s8(v18, v70);
    v18 += 32;
    v74.val[1] = 0uLL;
    vst2q_s8(v18, v74);
    long long v19 = v14 + 64;
    vst2q_s8(v19, v72);
    long long v20 = v14 + 96;
    vst2q_s8(v20, *(int8x16x2_t *)(&v13 - 1));
    v14 += 128;
  }
  while (v14 != (char *)v12);
  unint64_t v7 = v7;
  if (v12 != v11) {
    goto LABEL_23;
  }
LABEL_33:
  uint64_t v34 = (_WORD *)(v11 + 2 * v10);
  if ((v10 & 0xFFFFFFC0) != 0)
  {
    unint64_t v35 = v11 + 2 * (v10 & 0xFFFFFFC0);
    long long v36 = 0uLL;
    do
    {
      v71.val[0] = *(int8x16_t *)v9;
      int8x16_t v37 = *(int8x16_t *)(v9 + 16);
      v73.val[0] = *(int8x16_t *)(v9 + 32);
      long long v38 = *(_OWORD *)(v9 + 48);
      v9 += 64;
      long long v39 = v38;
      v73.val[1] = 0uLL;
      v75.val[0] = v37;
      v71.val[1] = 0uLL;
      unint64_t v40 = (char *)v11;
      vst2q_s8(v40, v71);
      v40 += 32;
      v75.val[1] = 0uLL;
      vst2q_s8(v40, v75);
      long long v41 = (char *)(v11 + 64);
      vst2q_s8(v41, v73);
      int8x16_t v42 = (char *)(v11 + 96);
      vst2q_s8(v42, *(int8x16x2_t *)(&v36 - 1));
      v11 += 128;
    }
    while (v11 != v35);
    unint64_t v11 = v35;
  }
  if ((_WORD *)v11 != v34)
  {
    unint64_t v43 = (unint64_t)&result[2 * v7 + 2 * v10 - v11 - 2];
    if (v43 < 0xE || v11 < v9 + (v43 >> 1) + 1 && v9 < (v43 & 0xFFFFFFFFFFFFFFFELL) + v11 + 2)
    {
      long long v44 = (_WORD *)v11;
      uint64_t v45 = (unsigned __int8 *)v9;
      goto LABEL_42;
    }
    uint64_t v47 = (v43 >> 1) + 1;
    if (v43 >= 0x3E)
    {
      unint64_t v48 = v47 & 0xFFFFFFFFFFFFFFE0;
      uint16x8_t v59 = (uint8x8_t *)(v9 + 16);
      unint64_t v60 = (uint16x8_t *)(v11 + 32);
      unint64_t v61 = v47 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v62 = *(uint8x16_t *)v59[-2].i8;
        uint16x8_t v63 = vmovl_u8(*v59);
        uint16x8_t v64 = vmovl_high_u8(*(uint8x16_t *)v59->i8);
        v60[-2] = vmovl_u8(*(uint8x8_t *)v62.i8);
        v60[-1] = vmovl_high_u8(v62);
        *unint64_t v60 = v63;
        v60[1] = v64;
        v60 += 4;
        v59 += 4;
        v61 -= 32;
      }
      while (v61);
      if (v47 == v48) {
        return result;
      }
      if ((v47 & 0x18) == 0)
      {
        uint64_t v45 = (unsigned __int8 *)(v9 + v48);
        long long v44 = (_WORD *)(v11 + 2 * v48);
        do
        {
LABEL_42:
          __int16 v46 = *v45++;
          *v44++ = v46;
        }
        while (v44 != v34);
        return result;
      }
    }
    else
    {
      unint64_t v48 = 0;
    }
    long long v44 = (_WORD *)(v11 + 2 * (v47 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v45 = (unsigned __int8 *)(v9 + (v47 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v65 = (uint8x8_t *)(v9 + v48);
    unint64_t v66 = (uint16x8_t *)(v11 + 2 * v48);
    unint64_t v67 = v48 - (v47 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v68 = *v65++;
      *v66++ = vmovl_u8(v68);
      v67 += 8;
    }
    while (v67);
    if (v47 != (v47 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_42;
    }
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, int *a2, uint64_t a3, int *a4, uint64_t a5)
{
  uint64_t v9 = *((void *)a1 + 1);
  if (!v9 && (uint64_t v9 = *(void *)a1) == 0 || (*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    unint64_t v22 = (char *)MEMORY[0x18530ACF0]();
    if (!v22) {
      return;
    }
    uint64_t v23 = v22;
    int v24 = *a2;
    size_t v25 = *(unsigned char **)a3;
    size_t v26 = *(unsigned int *)(a3 + 8);
    int v27 = *a4;
    BOOL v28 = *(char **)a5;
    size_t v29 = *(unsigned int *)(a5 + 8);
    uint64_t v30 = (4 * v24);
    if (v30)
    {
      memset(v22, 32, (4 * v24));
      uint64_t v31 = &v23[v30];
      if (!v26) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v31 = v22;
      if (!v26) {
        goto LABEL_15;
      }
    }
    if (v26 != 1)
    {
      memcpy(v31, v25, v26);
      unint64_t v32 = &v31[v26];
      size_t v33 = (4 * v27);
      if (v33)
      {
LABEL_16:
        memset(v32, 32, v33);
        if (!v29) {
          return;
        }
LABEL_20:
        uint64_t v34 = &v32[v33];
        if (v29 == 1)
        {
          *uint64_t v34 = *v28;
        }
        else
        {
          memcpy(v34, v28, v29);
        }
        return;
      }
LABEL_19:
      size_t v33 = 0;
      if (!v29) {
        return;
      }
      goto LABEL_20;
    }
    *uint64_t v31 = *v25;
LABEL_15:
    unint64_t v32 = &v31[v26];
    size_t v33 = (4 * v27);
    if (v33) {
      goto LABEL_16;
    }
    goto LABEL_19;
  }
  uint64_t v10 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!v10) {
    return;
  }
  unint64_t v11 = v10;
  int v12 = *a2;
  unint64_t v13 = *(void *)a3;
  uint64_t v14 = *(unsigned int *)(a3 + 8);
  int v15 = *a4;
  unint64_t v16 = *(void *)a5;
  uint64_t v17 = *(unsigned int *)(a5 + 8);
  uint64_t v18 = (4 * v12);
  if (v18)
  {
    memset_pattern16(v10, asc_1826CF510, 2 * (4 * v12));
    unint64_t v19 = (unint64_t)&v11[2 * v18];
    long long v20 = (char *)(v19 + 2 * v14);
    uint64_t v21 = v14 & 0xFFFFFFC0;
    if ((v14 & 0xFFFFFFC0) == 0) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = (unint64_t)v10;
    long long v20 = &v10[2 * v14];
    uint64_t v21 = v14 & 0xFFFFFFC0;
    if ((v14 & 0xFFFFFFC0) == 0) {
      goto LABEL_29;
    }
  }
  unint64_t v35 = v19 + 2 * v21;
  long long v36 = 0uLL;
  do
  {
    v89.val[0] = *(int8x16_t *)v13;
    int8x16_t v37 = *(int8x16_t *)(v13 + 16);
    v91.val[0] = *(int8x16_t *)(v13 + 32);
    long long v38 = *(_OWORD *)(v13 + 48);
    v13 += 64;
    long long v39 = v38;
    v91.val[1] = 0uLL;
    v93.val[0] = v37;
    v89.val[1] = 0uLL;
    unint64_t v40 = (char *)v19;
    vst2q_s8(v40, v89);
    v40 += 32;
    v93.val[1] = 0uLL;
    vst2q_s8(v40, v93);
    long long v41 = (char *)(v19 + 64);
    vst2q_s8(v41, v91);
    int8x16_t v42 = (char *)(v19 + 96);
    vst2q_s8(v42, *(int8x16x2_t *)(&v36 - 1));
    v19 += 128;
  }
  while (v19 != v35);
  unint64_t v19 = v35;
LABEL_29:
  if ((char *)v19 == v20) {
    goto LABEL_35;
  }
  unint64_t v43 = (unint64_t)&v11[2 * v18 + 2 * v14 - v19 - 2];
  if (v43 < 0xE || v19 < v13 + (v43 >> 1) + 1 && v13 < (v43 & 0xFFFFFFFFFFFFFFFELL) + v19 + 2)
  {
    long long v44 = (char *)v19;
    uint64_t v45 = (unsigned __int8 *)v13;
    goto LABEL_34;
  }
  uint64_t v66 = (v43 >> 1) + 1;
  if (v43 >= 0x3E)
  {
    unint64_t v67 = v66 & 0xFFFFFFFFFFFFFFE0;
    int8x16x2_t v78 = (uint8x8_t *)(v13 + 16);
    int8x16x2_t v79 = (uint16x8_t *)(v19 + 32);
    unint64_t v80 = v66 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v81 = *(uint8x16_t *)v78[-2].i8;
      uint16x8_t v82 = vmovl_u8(*v78);
      uint16x8_t v83 = vmovl_high_u8(*(uint8x16_t *)v78->i8);
      v79[-2] = vmovl_u8(*(uint8x8_t *)v81.i8);
      v79[-1] = vmovl_high_u8(v81);
      *int8x16x2_t v79 = v82;
      v79[1] = v83;
      v79 += 4;
      v78 += 4;
      v80 -= 32;
    }
    while (v80);
    if (v66 == v67) {
      goto LABEL_35;
    }
    if ((v66 & 0x18) == 0)
    {
      uint64_t v45 = (unsigned __int8 *)(v13 + v67);
      long long v44 = (char *)(v19 + 2 * v67);
      do
      {
LABEL_34:
        __int16 v46 = *v45++;
        *(_WORD *)long long v44 = v46;
        v44 += 2;
      }
      while (v44 != v20);
      goto LABEL_35;
    }
  }
  else
  {
    unint64_t v67 = 0;
  }
  long long v44 = (char *)(v19 + 2 * (v66 & 0xFFFFFFFFFFFFFFF8));
  uint64_t v45 = (unsigned __int8 *)(v13 + (v66 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v84 = (uint8x8_t *)(v13 + v67);
  unint64_t v85 = (uint16x8_t *)(v19 + 2 * v67);
  unint64_t v86 = v67 - (v66 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v87 = *v84++;
    *v85++ = vmovl_u8(v87);
    v86 += 8;
  }
  while (v86);
  if (v66 != (v66 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_34;
  }
LABEL_35:
  uint64_t v47 = (4 * v15);
  if (v47)
  {
    memset_pattern16(v20, asc_1826CF510, 2 * v47);
    unint64_t v48 = (unint64_t)&v20[2 * v47];
    unint64_t v49 = (char *)(v48 + 2 * v17);
    uint64_t v50 = v17 & 0xFFFFFFC0;
    if ((v17 & 0xFFFFFFC0) == 0) {
      goto LABEL_42;
    }
LABEL_39:
    unint64_t v51 = v48 + 2 * v50;
    long long v52 = 0uLL;
    do
    {
      v90.val[0] = *(int8x16_t *)v16;
      int8x16_t v53 = *(int8x16_t *)(v16 + 16);
      v92.val[0] = *(int8x16_t *)(v16 + 32);
      long long v54 = *(_OWORD *)(v16 + 48);
      v16 += 64;
      long long v55 = v54;
      v92.val[1] = 0uLL;
      v94.val[0] = v53;
      v90.val[1] = 0uLL;
      unint64_t v56 = (char *)v48;
      vst2q_s8(v56, v90);
      v56 += 32;
      v94.val[1] = 0uLL;
      vst2q_s8(v56, v94);
      unint64_t v57 = (char *)(v48 + 64);
      vst2q_s8(v57, v92);
      uint8x8_t v58 = (char *)(v48 + 96);
      vst2q_s8(v58, *(int8x16x2_t *)(&v52 - 1));
      v48 += 128;
    }
    while (v48 != v51);
    unint64_t v48 = v51;
    goto LABEL_42;
  }
  uint64_t v47 = 0;
  unint64_t v48 = (unint64_t)v20;
  unint64_t v49 = &v20[2 * v17];
  uint64_t v50 = v17 & 0xFFFFFFC0;
  if ((v17 & 0xFFFFFFC0) != 0) {
    goto LABEL_39;
  }
LABEL_42:
  if ((char *)v48 == v49) {
    return;
  }
  unint64_t v59 = (unint64_t)&v11[2 * v18 + 2 * v47 + 2 * v14 + 2 * v17 - v48 - 2];
  if (v59 < 0xE
    || (v48 < v16 + (v59 >> 1) + 1 ? (BOOL v60 = v16 >= (v59 & 0xFFFFFFFFFFFFFFFELL) + v48 + 2) : (BOOL v60 = 1), !v60))
  {
    uint16x8_t v63 = (char *)v48;
    uint16x8_t v64 = (unsigned __int8 *)v16;
    goto LABEL_52;
  }
  uint64_t v61 = (v59 >> 1) + 1;
  if (v59 >= 0x3E)
  {
    unint64_t v62 = v61 & 0xFFFFFFFFFFFFFFE0;
    uint8x8_t v68 = (uint8x8_t *)(v16 + 16);
    uint16x8_t v69 = (uint16x8_t *)(v48 + 32);
    unint64_t v70 = v61 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v71 = *(uint8x16_t *)v68[-2].i8;
      uint16x8_t v72 = vmovl_u8(*v68);
      uint16x8_t v73 = vmovl_high_u8(*(uint8x16_t *)v68->i8);
      v69[-2] = vmovl_u8(*(uint8x8_t *)v71.i8);
      v69[-1] = vmovl_high_u8(v71);
      *uint16x8_t v69 = v72;
      v69[1] = v73;
      v69 += 4;
      v68 += 4;
      v70 -= 32;
    }
    while (v70);
    if (v61 == v62) {
      return;
    }
    if ((v61 & 0x18) == 0)
    {
      uint16x8_t v64 = (unsigned __int8 *)(v16 + v62);
      uint16x8_t v63 = (char *)(v48 + 2 * v62);
      do
      {
LABEL_52:
        __int16 v65 = *v64++;
        *(_WORD *)uint16x8_t v63 = v65;
        v63 += 2;
      }
      while (v63 != v49);
      return;
    }
  }
  else
  {
    unint64_t v62 = 0;
  }
  uint16x8_t v63 = (char *)(v48 + 2 * (v61 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v64 = (unsigned __int8 *)(v16 + (v61 & 0xFFFFFFFFFFFFFFF8));
  int8x16x2_t v74 = (uint8x8_t *)(v16 + v62);
  int8x16x2_t v75 = (uint16x8_t *)(v48 + 2 * v62);
  unint64_t v76 = v62 - (v61 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v77 = *v74++;
    *v75++ = vmovl_u8(v77);
    v76 += 8;
  }
  while (v76);
  if (v61 != (v61 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_52;
  }
}

uint16x8_t WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(char *a1, unint64_t a2, unsigned int a3, int a4, unint64_t a5, unsigned int a6, int a7, uint64_t a8, unint64_t a9, unsigned int a10)
{
  int v15 = &a1[2 * a3];
  if ((a3 & 0xFFFFFFC0) == 0)
  {
    unint64_t v16 = (unint64_t)a1;
    uint64_t v25 = a3;
    if (a1 == v15) {
      goto LABEL_17;
    }
LABEL_7:
    unint64_t v26 = (unint64_t)&a1[2 * v25 - v16 - 2];
    if (v26 < 0xE
      || (v16 < a2 + (v26 >> 1) + 1 ? (BOOL v27 = a2 >= (v26 & 0xFFFFFFFFFFFFFFFELL) + v16 + 2) : (BOOL v27 = 1), !v27))
    {
      uint64_t v30 = (char *)v16;
      uint64_t v31 = (unsigned __int8 *)a2;
      goto LABEL_16;
    }
    uint64_t v28 = (v26 >> 1) + 1;
    if (v26 >= 0x3E)
    {
      unint64_t v29 = v28 & 0xFFFFFFFFFFFFFFE0;
      uint8x16_t v71 = (uint8x8_t *)(a2 + 16);
      uint16x8_t v72 = (uint16x8_t *)(v16 + 32);
      unint64_t v73 = v28 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v74 = *(uint8x16_t *)v71[-2].i8;
        uint16x8_t v75 = vmovl_u8(*(uint8x8_t *)v74.i8);
        uint16x8_t result = vmovl_high_u8(v74);
        uint16x8_t v76 = vmovl_u8(*v71);
        uint16x8_t v77 = vmovl_high_u8(*(uint8x16_t *)v71->i8);
        v72[-2] = v75;
        v72[-1] = result;
        *uint16x8_t v72 = v76;
        v72[1] = v77;
        v72 += 4;
        v71 += 4;
        v73 -= 32;
      }
      while (v73);
      if (v28 == v29) {
        goto LABEL_17;
      }
      if ((v28 & 0x18) == 0)
      {
        uint64_t v31 = (unsigned __int8 *)(a2 + v29);
        uint64_t v30 = (char *)(v16 + 2 * v29);
        goto LABEL_16;
      }
    }
    else
    {
      unint64_t v29 = 0;
    }
    uint64_t v30 = (char *)(v16 + 2 * (v28 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v31 = (unsigned __int8 *)(a2 + (v28 & 0xFFFFFFFFFFFFFFF8));
    int8x16x2_t v78 = (uint8x8_t *)(a2 + v29);
    int8x16x2_t v79 = (uint16x8_t *)(v16 + 2 * v29);
    unint64_t v80 = v29 - (v28 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v81 = *v78++;
      uint16x8_t result = vmovl_u8(v81);
      *v79++ = result;
      v80 += 8;
    }
    while (v80);
    if (v28 == (v28 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_17;
    }
    do
    {
LABEL_16:
      __int16 v32 = *v31++;
      *(_WORD *)uint64_t v30 = v32;
      v30 += 2;
    }
    while (v30 != v15);
    goto LABEL_17;
  }
  unint64_t v16 = (unint64_t)&a1[2 * (a3 & 0xFFFFFFC0)];
  long long v17 = 0uLL;
  uint64_t v18 = a1;
  do
  {
    v104.val[0] = *(int8x16_t *)a2;
    int8x16_t v19 = *(int8x16_t *)(a2 + 16);
    v107.val[0] = *(int8x16_t *)(a2 + 32);
    uint16x8_t v20 = *(uint16x8_t *)(a2 + 48);
    a2 += 64;
    uint16x8_t result = v20;
    v107.val[1] = 0uLL;
    v110.val[0] = v19;
    v104.val[1] = 0uLL;
    unint64_t v22 = v18;
    vst2q_s8(v22, v104);
    v22 += 32;
    v110.val[1] = 0uLL;
    vst2q_s8(v22, v110);
    uint64_t v23 = v18 + 64;
    vst2q_s8(v23, v107);
    int v24 = v18 + 96;
    vst2q_s8(v24, *(int8x16x2_t *)(&v17 - 1));
    v18 += 128;
  }
  while (v18 != (char *)v16);
  uint64_t v25 = a3;
  if ((char *)v16 != v15) {
    goto LABEL_7;
  }
LABEL_17:
  uint64_t v33 = (4 * a4);
  if (v33)
  {
    memset_pattern16(v15, asc_1826CF510, 2 * (4 * a4));
    unint64_t v34 = (unint64_t)&v15[2 * v33];
    unint64_t v35 = (char *)(v34 + 2 * a6);
    uint64_t v36 = a6 & 0xFFFFFFC0;
    if ((a6 & 0xFFFFFFC0) == 0) {
      goto LABEL_24;
    }
  }
  else
  {
    unint64_t v34 = (unint64_t)&a1[2 * a3];
    unint64_t v35 = &v15[2 * a6];
    uint64_t v36 = a6 & 0xFFFFFFC0;
    if ((a6 & 0xFFFFFFC0) == 0) {
      goto LABEL_24;
    }
  }
  unint64_t v37 = v34 + 2 * v36;
  long long v38 = 0uLL;
  do
  {
    v105.val[0] = *(int8x16_t *)a5;
    int8x16_t v39 = *(int8x16_t *)(a5 + 16);
    v108.val[0] = *(int8x16_t *)(a5 + 32);
    uint16x8_t v40 = *(uint16x8_t *)(a5 + 48);
    a5 += 64;
    uint16x8_t result = v40;
    v108.val[1] = 0uLL;
    v111.val[0] = v39;
    v105.val[1] = 0uLL;
    long long v41 = (char *)v34;
    vst2q_s8(v41, v105);
    v41 += 32;
    v111.val[1] = 0uLL;
    vst2q_s8(v41, v111);
    int8x16_t v42 = (char *)(v34 + 64);
    vst2q_s8(v42, v108);
    unint64_t v43 = (char *)(v34 + 96);
    vst2q_s8(v43, *(int8x16x2_t *)result.i8);
    v34 += 128;
  }
  while (v34 != v37);
  unint64_t v34 = v37;
LABEL_24:
  uint64_t v44 = 8 * (a4 & 0x3FFFFFFF);
  if ((char *)v34 == v35) {
    goto LABEL_35;
  }
  unint64_t v45 = (unint64_t)&a1[2 * v25 + 2 * a6 + v44 - v34 - 2];
  if (v45 < 0xE || (v34 < a5 + (v45 >> 1) + 1 ? (BOOL v46 = a5 >= (v45 & 0xFFFFFFFFFFFFFFFELL) + v34 + 2) : (BOOL v46 = 1), !v46))
  {
    unint64_t v49 = (char *)v34;
    uint64_t v50 = (unsigned __int8 *)a5;
    goto LABEL_34;
  }
  uint64_t v47 = (v45 >> 1) + 1;
  if (v45 >= 0x3E)
  {
    unint64_t v48 = v47 & 0xFFFFFFFFFFFFFFE0;
    uint16x8_t v82 = (uint8x8_t *)(a5 + 16);
    uint16x8_t v83 = (uint16x8_t *)(v34 + 32);
    unint64_t v84 = v47 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v85 = *(uint8x16_t *)v82[-2].i8;
      uint16x8_t v86 = vmovl_u8(*(uint8x8_t *)v85.i8);
      uint16x8_t result = vmovl_high_u8(v85);
      uint16x8_t v87 = vmovl_u8(*v82);
      uint16x8_t v88 = vmovl_high_u8(*(uint8x16_t *)v82->i8);
      v83[-2] = v86;
      v83[-1] = result;
      *uint16x8_t v83 = v87;
      v83[1] = v88;
      v83 += 4;
      v82 += 4;
      v84 -= 32;
    }
    while (v84);
    if (v47 == v48) {
      goto LABEL_35;
    }
    if ((v47 & 0x18) == 0)
    {
      uint64_t v50 = (unsigned __int8 *)(a5 + v48);
      unint64_t v49 = (char *)(v34 + 2 * v48);
      do
      {
LABEL_34:
        __int16 v51 = *v50++;
        *(_WORD *)unint64_t v49 = v51;
        v49 += 2;
      }
      while (v49 != v35);
      goto LABEL_35;
    }
  }
  else
  {
    unint64_t v48 = 0;
  }
  unint64_t v49 = (char *)(v34 + 2 * (v47 & 0xFFFFFFFFFFFFFFF8));
  uint64_t v50 = (unsigned __int8 *)(a5 + (v47 & 0xFFFFFFFFFFFFFFF8));
  int8x16x2_t v89 = (uint8x8_t *)(a5 + v48);
  int8x16x2_t v90 = (uint16x8_t *)(v34 + 2 * v48);
  unint64_t v91 = v48 - (v47 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v92 = *v89++;
    uint16x8_t result = vmovl_u8(v92);
    *v90++ = result;
    v91 += 8;
  }
  while (v91);
  if (v47 != (v47 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_34;
  }
LABEL_35:
  uint64_t v53 = (4 * a7);
  if (v53)
  {
    memset_pattern16(v35, asc_1826CF510, 2 * (4 * a7));
    unint64_t v54 = (unint64_t)&v35[2 * v53];
    long long v55 = (char *)(v54 + 2 * a10);
    uint64_t v56 = a10 & 0xFFFFFFC0;
    if ((a10 & 0xFFFFFFC0) == 0) {
      goto LABEL_42;
    }
  }
  else
  {
    unint64_t v54 = (unint64_t)v35;
    long long v55 = &v35[2 * a10];
    uint64_t v56 = a10 & 0xFFFFFFC0;
    if ((a10 & 0xFFFFFFC0) == 0) {
      goto LABEL_42;
    }
  }
  unint64_t v57 = v54 + 2 * v56;
  long long v58 = 0uLL;
  do
  {
    v106.val[0] = *(int8x16_t *)a9;
    int8x16_t v59 = *(int8x16_t *)(a9 + 16);
    v109.val[0] = *(int8x16_t *)(a9 + 32);
    uint16x8_t v60 = *(uint16x8_t *)(a9 + 48);
    a9 += 64;
    uint16x8_t result = v60;
    v109.val[1] = 0uLL;
    v112.val[0] = v59;
    v106.val[1] = 0uLL;
    uint64_t v61 = (char *)v54;
    vst2q_s8(v61, v106);
    v61 += 32;
    v112.val[1] = 0uLL;
    vst2q_s8(v61, v112);
    unint64_t v62 = (char *)(v54 + 64);
    vst2q_s8(v62, v109);
    uint16x8_t v63 = (char *)(v54 + 96);
    vst2q_s8(v63, *(int8x16x2_t *)result.i8);
    v54 += 128;
  }
  while (v54 != v57);
  unint64_t v54 = v57;
LABEL_42:
  if ((char *)v54 == v55) {
    return result;
  }
  unint64_t v64 = (unint64_t)&a1[8 * (a7 & 0x3FFFFFFF) + 2 * v25 + 2 * a6 + 2 * a10 + v44 - v54 - 2];
  if (v64 < 0xE || (v54 < a9 + (v64 >> 1) + 1 ? (BOOL v65 = a9 >= (v64 & 0xFFFFFFFFFFFFFFFELL) + v54 + 2) : (BOOL v65 = 1), !v65))
  {
    uint8x8_t v68 = (char *)v54;
    uint16x8_t v69 = (unsigned __int8 *)a9;
    goto LABEL_52;
  }
  uint64_t v66 = (v64 >> 1) + 1;
  if (v64 >= 0x3E)
  {
    unint64_t v67 = v66 & 0xFFFFFFFFFFFFFFE0;
    int8x16x2_t v93 = (uint8x8_t *)(a9 + 16);
    int8x16x2_t v94 = (uint16x8_t *)(v54 + 32);
    unint64_t v95 = v66 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v96 = *(uint8x16_t *)v93[-2].i8;
      uint16x8_t v97 = vmovl_u8(*(uint8x8_t *)v96.i8);
      uint16x8_t result = vmovl_high_u8(v96);
      uint16x8_t v98 = vmovl_u8(*v93);
      uint16x8_t v99 = vmovl_high_u8(*(uint8x16_t *)v93->i8);
      v94[-2] = v97;
      v94[-1] = result;
      uint16x8_t *v94 = v98;
      v94[1] = v99;
      v94 += 4;
      v93 += 4;
      v95 -= 32;
    }
    while (v95);
    if (v66 == v67) {
      return result;
    }
    if ((v66 & 0x18) == 0)
    {
      uint16x8_t v69 = (unsigned __int8 *)(a9 + v67);
      uint8x8_t v68 = (char *)(v54 + 2 * v67);
      do
      {
LABEL_52:
        __int16 v70 = *v69++;
        *(_WORD *)uint8x8_t v68 = v70;
        v68 += 2;
      }
      while (v68 != v55);
      return result;
    }
  }
  else
  {
    unint64_t v67 = 0;
  }
  uint8x8_t v68 = (char *)(v54 + 2 * (v66 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v69 = (unsigned __int8 *)(a9 + (v66 & 0xFFFFFFFFFFFFFFF8));
  int8x16x2_t v100 = (uint8x8_t *)(a9 + v67);
  int8x16x2_t v101 = (uint16x8_t *)(v54 + 2 * v67);
  unint64_t v102 = v67 - (v66 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v103 = *v100++;
    uint16x8_t result = vmovl_u8(v103);
    *v101++ = result;
    v102 += 8;
  }
  while (v102);
  if (v66 != (v66 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_52;
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a1 + 1);
  if (!v5 && (uint64_t v5 = *(void *)a1) == 0 || (*(unsigned char *)(v5 + 16) & 4) != 0)
  {
    int v15 = (char *)MEMORY[0x18530ACF0]();
    if (!v15) {
      return;
    }
    unint64_t v16 = v15;
    int v17 = *a2;
    uint64_t v18 = *(char **)a3;
    size_t v19 = *(unsigned int *)(a3 + 8);
    uint64_t v20 = (4 * *a2);
    if (v20)
    {
      memset(v15, 32, (4 * v17));
      if (!v19) {
        return;
      }
    }
    else
    {
      uint64_t v20 = 0;
      if (!v19) {
        return;
      }
    }
    uint64_t v21 = &v16[v20];
    if (v19 == 1)
    {
      *uint64_t v21 = *v18;
    }
    else
    {
      memcpy(v21, v18, v19);
    }
    return;
  }
  uint64_t v6 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!v6) {
    return;
  }
  unint64_t v7 = v6;
  int v8 = *a2;
  unint64_t v9 = *(void *)a3;
  uint64_t v10 = *(unsigned int *)(a3 + 8);
  uint64_t v11 = (4 * v8);
  if (v11)
  {
    memset_pattern16(v6, asc_1826CF510, 2 * (4 * v8));
    unint64_t v12 = (unint64_t)&v7[2 * v11];
    unint64_t v13 = (char *)(v12 + 2 * v10);
    uint64_t v14 = v10 & 0xFFFFFFC0;
    if ((v10 & 0xFFFFFFC0) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v22 = v12 + 2 * v14;
    long long v23 = 0uLL;
    do
    {
      v47.val[0] = *(int8x16_t *)v9;
      int8x16_t v24 = *(int8x16_t *)(v9 + 16);
      v48.val[0] = *(int8x16_t *)(v9 + 32);
      long long v25 = *(_OWORD *)(v9 + 48);
      v9 += 64;
      long long v26 = v25;
      v48.val[1] = 0uLL;
      v49.val[0] = v24;
      v47.val[1] = 0uLL;
      BOOL v27 = (char *)v12;
      vst2q_s8(v27, v47);
      v27 += 32;
      v49.val[1] = 0uLL;
      vst2q_s8(v27, v49);
      uint64_t v28 = (char *)(v12 + 64);
      vst2q_s8(v28, v48);
      unint64_t v29 = (char *)(v12 + 96);
      vst2q_s8(v29, *(int8x16x2_t *)(&v23 - 1));
      v12 += 128;
    }
    while (v12 != v22);
    unint64_t v12 = v22;
    goto LABEL_22;
  }
  uint64_t v11 = 0;
  unint64_t v12 = (unint64_t)v6;
  unint64_t v13 = &v6[2 * v10];
  uint64_t v14 = v10 & 0xFFFFFFC0;
  if ((v10 & 0xFFFFFFC0) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  if ((char *)v12 == v13) {
    return;
  }
  unint64_t v30 = (unint64_t)&v7[2 * v11 + 2 * v10 - v12 - 2];
  if (v30 < 0xE || v12 < v9 + (v30 >> 1) + 1 && v9 < (v30 & 0xFFFFFFFFFFFFFFFELL) + v12 + 2)
  {
    uint64_t v31 = (char *)v12;
    __int16 v32 = (unsigned __int8 *)v9;
    goto LABEL_27;
  }
  uint64_t v34 = (v30 >> 1) + 1;
  if (v30 >= 0x3E)
  {
    unint64_t v35 = v34 & 0xFFFFFFFFFFFFFFE0;
    uint64_t v36 = (uint8x8_t *)(v9 + 16);
    unint64_t v37 = (uint16x8_t *)(v12 + 32);
    unint64_t v38 = v34 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v39 = *(uint8x16_t *)v36[-2].i8;
      uint16x8_t v40 = vmovl_u8(*v36);
      uint16x8_t v41 = vmovl_high_u8(*(uint8x16_t *)v36->i8);
      v37[-2] = vmovl_u8(*(uint8x8_t *)v39.i8);
      v37[-1] = vmovl_high_u8(v39);
      *unint64_t v37 = v40;
      v37[1] = v41;
      v37 += 4;
      v36 += 4;
      v38 -= 32;
    }
    while (v38);
    if (v34 == v35) {
      return;
    }
    if ((v34 & 0x18) == 0)
    {
      __int16 v32 = (unsigned __int8 *)(v9 + v35);
      uint64_t v31 = (char *)(v12 + 2 * v35);
      do
      {
LABEL_27:
        __int16 v33 = *v32++;
        *(_WORD *)uint64_t v31 = v33;
        v31 += 2;
      }
      while (v31 != v13);
      return;
    }
  }
  else
  {
    unint64_t v35 = 0;
  }
  uint64_t v31 = (char *)(v12 + 2 * (v34 & 0xFFFFFFFFFFFFFFF8));
  __int16 v32 = (unsigned __int8 *)(v9 + (v34 & 0xFFFFFFFFFFFFFFF8));
  int8x16_t v42 = (uint8x8_t *)(v9 + v35);
  unint64_t v43 = (uint16x8_t *)(v12 + 2 * v35);
  unint64_t v44 = v35 - (v34 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v45 = *v42++;
    *v43++ = vmovl_u8(v45);
    v44 += 8;
  }
  while (v44);
  if (v34 != (v34 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_27;
  }
}

double WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, int *a2, unint64_t *a3, int *a4, unint64_t *a5, int *a6, unint64_t *a7)
{
  uint64_t v13 = *((void *)a1 + 1);
  if ((v13 || (uint64_t v13 = *(void *)a1) != 0) && (*(unsigned char *)(v13 + 16) & 4) == 0)
  {
    uint64_t v14 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (v14)
    {
      int v17 = v14;
      int v18 = *a2;
      unint64_t v20 = *a3;
      unint64_t v19 = a3[1];
      int v21 = *a4;
      unint64_t v23 = *a5;
      unint64_t v22 = a5[1];
      int v24 = *a6;
      unint64_t v26 = *a7;
      unint64_t v25 = a7[1];
      uint64_t v27 = (4 * v18);
      if (v27) {
        memset_pattern16(v14, asc_1826CF510, 2 * (4 * v18));
      }
      else {
        uint64_t v27 = 0;
      }
      *(void *)&double result = WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(&v17[2 * v27], v20, v19, v21, v23, v22, v24, v15, v26, v25).u64[0];
    }
    return result;
  }
  uint64_t v28 = (unsigned char *)MEMORY[0x18530ACF0]();
  if (!v28) {
    return result;
  }
  unint64_t v29 = v28;
  int v30 = *a2;
  uint64_t v31 = (unsigned char *)*a3;
  size_t v32 = *((unsigned int *)a3 + 2);
  int v33 = *a4;
  uint64_t v34 = (unsigned char *)*a5;
  size_t v35 = *((unsigned int *)a5 + 2);
  int v36 = *a6;
  unint64_t v37 = (char *)*a7;
  size_t v38 = *((unsigned int *)a7 + 2);
  uint64_t v39 = (4 * v30);
  if (v39)
  {
    memset(v28, 32, (4 * v30));
    v29 += v39;
    if (!v32)
    {
LABEL_14:
      uint16x8_t v40 = &v29[v32];
      size_t v41 = (4 * v33);
      if (v41) {
        goto LABEL_15;
      }
LABEL_18:
      if (!v35) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else if (!v32)
  {
    goto LABEL_14;
  }
  if (v32 == 1)
  {
    *unint64_t v29 = *v31;
    goto LABEL_14;
  }
  memcpy(v29, v31, v32);
  uint16x8_t v40 = &v29[v32];
  size_t v41 = (4 * v33);
  if (!v41) {
    goto LABEL_18;
  }
LABEL_15:
  memset(v40, 32, v41);
  v40 += v41;
  if (!v35)
  {
LABEL_21:
    int8x16_t v42 = &v40[v35];
    size_t v43 = (4 * v36);
    if (v43) {
      goto LABEL_22;
    }
    goto LABEL_25;
  }
LABEL_19:
  if (v35 == 1)
  {
    unsigned char *v40 = *v34;
    goto LABEL_21;
  }
  memcpy(v40, v34, v35);
  int8x16_t v42 = &v40[v35];
  size_t v43 = (4 * v36);
  if (v43)
  {
LABEL_22:
    memset(v42, 32, v43);
    if (!v38) {
      return result;
    }
    goto LABEL_26;
  }
LABEL_25:
  size_t v43 = 0;
  if (!v38) {
    return result;
  }
LABEL_26:
  unint64_t v44 = &v42[v43];
  if (v38 == 1)
  {
    char *v44 = *v37;
  }
  else
  {
    memcpy(v44, v37, v38);
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, int *a2, unint64_t *a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v9 = *a4;
  uint64_t v10 = *((void *)a1 + 1);
  if ((v10 || (uint64_t v10 = *(void *)a1) != 0) && (*(unsigned char *)(v10 + 16) & 4) == 0 || v9 && (*(unsigned char *)(v9 + 16) & 4) == 0)
  {
    uint64_t v11 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (v11)
    {
      int v12 = *a2;
      unint64_t v13 = *a3;
      unint64_t v14 = a3[1];
      uint64_t v15 = *a4;
      unint64_t v16 = *a5;
      unint64_t v17 = a5[1];
      WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v11, v12, v13, v14, v15, v16, v17);
    }
    return;
  }
  int v18 = (char *)MEMORY[0x18530ACF0]();
  if (!v18) {
    return;
  }
  unint64_t v19 = v18;
  int v20 = *a2;
  int v21 = (char *)*a3;
  size_t v22 = *((unsigned int *)a3 + 2);
  uint64_t v23 = *a4;
  int v24 = (char *)*a5;
  size_t v25 = *((unsigned int *)a5 + 2);
  uint64_t v26 = (4 * v20);
  if (v26)
  {
    memset(v18, 32, (4 * v20));
    uint64_t v27 = &v19[v26];
    if (!v22)
    {
LABEL_17:
      uint64_t v28 = &v27[v22];
      if (v23) {
        goto LABEL_18;
      }
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v27 = v18;
    if (!v22) {
      goto LABEL_17;
    }
  }
  if (v22 == 1)
  {
    *uint64_t v27 = *v21;
    goto LABEL_17;
  }
  memcpy(v27, v21, v22);
  uint64_t v28 = &v27[v22];
  if (v23)
  {
LABEL_18:
    unint64_t v29 = *(int8x16_t **)(v23 + 8);
    size_t v30 = *(unsigned int *)(v23 + 4);
    if ((*(unsigned char *)(v23 + 16) & 4) != 0)
    {
      if (v30)
      {
        if (v30 == 1) {
          char *v28 = v29->i8[0];
        }
        else {
          memcpy(v28, v29, v30);
        }
      }
    }
    else
    {
      uint64_t v31 = &v28[v30];
      if (v30 < 0x10)
      {
        unint64_t v32 = (unint64_t)v28;
      }
      else
      {
        unint64_t v32 = (unint64_t)&v28[v30 & 0xFFFFFFF0];
        int v33 = (unsigned long long *)v28;
        do
        {
          unsigned long long v34 = (unsigned __int128)vld2q_s8(v29->i8);
          v29 += 2;
          *v33++ = v34;
        }
        while (v33 != (unsigned long long *)v32);
      }
      if ((char *)v32 != v31)
      {
        size_t v36 = (size_t)&v19[v30 + v26 + v22];
        unint64_t v37 = v36 - v32;
        if (v36 - v32 < 8
          || (v32 < (unint64_t)v29 + 2 * v37 ? (BOOL v38 = (unint64_t)v29 >= v36) : (BOOL v38 = 1), !v38))
        {
          uint16x8_t v40 = (char *)v32;
          size_t v41 = v29;
          goto LABEL_40;
        }
        if (v37 >= 0x20)
        {
          unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v44 = v29 + 2;
          uint8x8_t v45 = (int8x16_t *)(v32 + 16);
          unint64_t v46 = v37 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v48 = v44[-2];
            int8x16_t v47 = v44[-1];
            int8x16_t v50 = *v44;
            int8x16_t v49 = v44[1];
            v44 += 4;
            v45[-1] = vuzp1q_s8(v48, v47);
            int8x16_t *v45 = vuzp1q_s8(v50, v49);
            v45 += 2;
            v46 -= 32;
          }
          while (v46);
          if (v37 == v39) {
            goto LABEL_43;
          }
          if ((v37 & 0x18) == 0)
          {
            size_t v41 = (int8x16_t *)((char *)v29 + 2 * v39);
            uint16x8_t v40 = (char *)(v32 + v39);
            do
            {
LABEL_40:
              char v42 = v41->i8[0];
              size_t v41 = (int8x16_t *)((char *)v41 + 2);
              *v40++ = v42;
            }
            while (v40 != v31);
            goto LABEL_43;
          }
        }
        else
        {
          unint64_t v39 = 0;
        }
        uint16x8_t v40 = (char *)(v32 + (v37 & 0xFFFFFFFFFFFFFFF8));
        size_t v41 = (int8x16_t *)((char *)v29 + 2 * (v37 & 0xFFFFFFFFFFFFFFF8));
        __int16 v51 = (int16x8_t *)((char *)v29 + 2 * v39);
        long long v52 = (int8x8_t *)(v32 + v39);
        unint64_t v53 = v39 - (v37 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          int16x8_t v54 = *v51++;
          *v52++ = vmovn_s16(v54);
          v53 += 8;
        }
        while (v53);
        if (v37 != (v37 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_40;
        }
      }
    }
LABEL_43:
    uint64_t v35 = *(unsigned int *)(v23 + 4);
    if (!v25) {
      return;
    }
    goto LABEL_44;
  }
LABEL_24:
  uint64_t v35 = 0;
  if (!v25) {
    return;
  }
LABEL_44:
  size_t v43 = &v28[v35];
  if (v25 == 1)
  {
    char *v43 = *v24;
  }
  else
  {
    memcpy(v43, v24, v25);
  }
}

uint16x8_t WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(char *__b, int a2, unint64_t a3, unsigned int a4, uint64_t a5, unint64_t a6, unsigned int a7)
{
  uint64_t v14 = (4 * a2);
  if (v14)
  {
    memset_pattern16(__b, asc_1826CF510, 2 * (4 * a2));
    unint64_t v16 = &__b[2 * v14];
    unint64_t v17 = &v16[2 * a4];
    uint64_t v18 = a4 & 0xFFFFFFC0;
    if ((a4 & 0xFFFFFFC0) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v16 = __b;
    unint64_t v17 = &__b[2 * a4];
    uint64_t v18 = a4 & 0xFFFFFFC0;
    if ((a4 & 0xFFFFFFC0) == 0) {
      goto LABEL_8;
    }
  }
  unint64_t v19 = &v16[2 * v18];
  long long v20 = 0uLL;
  do
  {
    v103.val[0] = *(int8x16_t *)a3;
    int8x16_t v21 = *(int8x16_t *)(a3 + 16);
    v106.val[0] = *(int8x16_t *)(a3 + 32);
    uint16x8_t v22 = *(uint16x8_t *)(a3 + 48);
    a3 += 64;
    uint16x8_t result = v22;
    v106.val[1] = 0uLL;
    v109.val[0] = v21;
    v103.val[1] = 0uLL;
    uint64_t v23 = v16;
    vst2q_s8(v23, v103);
    v23 += 32;
    v109.val[1] = 0uLL;
    vst2q_s8(v23, v109);
    int v24 = v16 + 64;
    vst2q_s8(v24, v106);
    size_t v25 = v16 + 96;
    vst2q_s8(v25, *(int8x16x2_t *)result.i8);
    v16 += 128;
  }
  while (v16 != v19);
  unint64_t v16 = v19;
LABEL_8:
  uint64_t v26 = 8 * (a2 & 0x3FFFFFFF);
  if (v16 == v17) {
    goto LABEL_19;
  }
  unint64_t v27 = &__b[2 * a4 + v26] - v16 - 2;
  if (v27 < 0xE
    || ((unint64_t)v16 < a3 + (v27 >> 1) + 1
      ? (BOOL v28 = a3 >= (unint64_t)&v16[(v27 & 0xFFFFFFFFFFFFFFFELL) + 2])
      : (BOOL v28 = 1),
        !v28))
  {
    uint64_t v31 = v16;
    unint64_t v32 = (unsigned __int8 *)a3;
    goto LABEL_18;
  }
  uint64_t v29 = (v27 >> 1) + 1;
  if (v27 >= 0x3E)
  {
    unint64_t v30 = v29 & 0xFFFFFFFFFFFFFFE0;
    __int16 v70 = (uint8x8_t *)(a3 + 16);
    uint8x16_t v71 = (uint16x8_t *)(v16 + 32);
    unint64_t v72 = v29 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v73 = *(uint8x16_t *)v70[-2].i8;
      uint16x8_t v74 = vmovl_u8(*(uint8x8_t *)v73.i8);
      uint16x8_t result = vmovl_high_u8(v73);
      uint16x8_t v75 = vmovl_u8(*v70);
      uint16x8_t v76 = vmovl_high_u8(*(uint8x16_t *)v70->i8);
      v71[-2] = v74;
      v71[-1] = result;
      *uint8x16_t v71 = v75;
      v71[1] = v76;
      v71 += 4;
      v70 += 4;
      v72 -= 32;
    }
    while (v72);
    if (v29 == v30) {
      goto LABEL_19;
    }
    if ((v29 & 0x18) == 0)
    {
      unint64_t v32 = (unsigned __int8 *)(a3 + v30);
      uint64_t v31 = &v16[2 * v30];
      do
      {
LABEL_18:
        __int16 v33 = *v32++;
        *(_WORD *)uint64_t v31 = v33;
        v31 += 2;
      }
      while (v31 != v17);
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v30 = 0;
  }
  uint64_t v31 = &v16[2 * (v29 & 0xFFFFFFFFFFFFFFF8)];
  unint64_t v32 = (unsigned __int8 *)(a3 + (v29 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v77 = (uint8x8_t *)(a3 + v30);
  int8x16x2_t v78 = (uint16x8_t *)&v16[2 * v30];
  unint64_t v79 = v30 - (v29 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v80 = *v77++;
    uint16x8_t result = vmovl_u8(v80);
    *v78++ = result;
    v79 += 8;
  }
  while (v79);
  if (v29 != (v29 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_18;
  }
LABEL_19:
  if (!a5)
  {
    uint64_t v36 = 0;
    unint64_t v37 = (unint64_t)v17;
    BOOL v38 = &v17[2 * a7];
    uint64_t v39 = a7 & 0xFFFFFFC0;
    if ((a7 & 0xFFFFFFC0) == 0) {
      goto LABEL_48;
    }
    goto LABEL_45;
  }
  unsigned long long v34 = *(char **)(a5 + 8);
  uint64_t v35 = *(unsigned int *)(a5 + 4);
  if ((*(unsigned char *)(a5 + 16) & 4) != 0)
  {
    uint16x8_t v40 = &v17[2 * v35];
    if (v35 < 0x40)
    {
      unint64_t v41 = (unint64_t)v17;
      if (v17 == v40) {
        goto LABEL_44;
      }
    }
    else
    {
      unint64_t v41 = (unint64_t)&v17[2 * (v35 & 0xFFFFFFC0)];
      long long v42 = 0uLL;
      size_t v43 = v17;
      do
      {
        v104.val[0] = *(int8x16_t *)v34;
        int8x16_t v44 = *((int8x16_t *)v34 + 1);
        v107.val[0] = (int8x16_t)*((_OWORD *)v34 + 2);
        uint16x8_t v45 = *((uint16x8_t *)v34 + 3);
        v34 += 64;
        uint16x8_t result = v45;
        v107.val[1] = 0uLL;
        v110.val[0] = v44;
        v104.val[1] = 0uLL;
        unint64_t v46 = v43;
        vst2q_s8(v46, v104);
        v46 += 32;
        v110.val[1] = 0uLL;
        vst2q_s8(v46, v110);
        int8x16_t v47 = v43 + 64;
        vst2q_s8(v47, v107);
        int8x16_t v48 = v43 + 96;
        vst2q_s8(v48, *(int8x16x2_t *)result.i8);
        v43 += 128;
      }
      while (v43 != (char *)v41);
      if ((char *)v41 == v40) {
        goto LABEL_44;
      }
    }
    unint64_t v49 = (unint64_t)&__b[2 * v35 + 2 * a4 + v26 - v41 - 2];
    if (v49 < 0xE
      || (v41 < (unint64_t)&v34[(v49 >> 1) + 1]
        ? (BOOL v50 = (unint64_t)v34 >= (v49 & 0xFFFFFFFFFFFFFFFELL) + v41 + 2)
        : (BOOL v50 = 1),
          !v50))
    {
      unint64_t v53 = (char *)v41;
      int16x8_t v54 = v34;
      goto LABEL_41;
    }
    uint64_t v51 = (v49 >> 1) + 1;
    if (v49 >= 0x3E)
    {
      unint64_t v52 = v51 & 0xFFFFFFFFFFFFFFE0;
      uint8x8_t v92 = (uint8x8_t *)(v34 + 16);
      int8x16x2_t v93 = (uint16x8_t *)(v41 + 32);
      unint64_t v94 = v51 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v95 = *(uint8x16_t *)v92[-2].i8;
        uint16x8_t v96 = vmovl_u8(*(uint8x8_t *)v95.i8);
        uint16x8_t result = vmovl_high_u8(v95);
        uint16x8_t v97 = vmovl_u8(*v92);
        uint16x8_t v98 = vmovl_high_u8(*(uint8x16_t *)v92->i8);
        v93[-2] = v96;
        v93[-1] = result;
        *int8x16x2_t v93 = v97;
        v93[1] = v98;
        v93 += 4;
        v92 += 4;
        v94 -= 32;
      }
      while (v94);
      if (v51 == v52) {
        goto LABEL_44;
      }
      if ((v51 & 0x18) == 0)
      {
        int16x8_t v54 = &v34[v52];
        unint64_t v53 = (char *)(v41 + 2 * v52);
        goto LABEL_41;
      }
    }
    else
    {
      unint64_t v52 = 0;
    }
    unint64_t v53 = (char *)(v41 + 2 * (v51 & 0xFFFFFFFFFFFFFFF8));
    int16x8_t v54 = &v34[v51 & 0xFFFFFFFFFFFFFFF8];
    uint16x8_t v99 = (uint8x8_t *)&v34[v52];
    int8x16x2_t v100 = (uint16x8_t *)(v41 + 2 * v52);
    unint64_t v101 = v52 - (v51 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v102 = *v99++;
      uint16x8_t result = vmovl_u8(v102);
      *v100++ = result;
      v101 += 8;
    }
    while (v101);
    if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_44;
    }
    do
    {
LABEL_41:
      __int16 v55 = *v54++;
      *(_WORD *)unint64_t v53 = v55;
      v53 += 2;
    }
    while (v53 != v40);
    goto LABEL_44;
  }
  if (v35)
  {
    if (v35 == 1) {
      *(_WORD *)unint64_t v17 = *(_WORD *)v34;
    }
    else {
      memcpy(v17, v34, 2 * v35);
    }
  }
LABEL_44:
  uint64_t v36 = *(unsigned int *)(a5 + 4);
  unint64_t v37 = (unint64_t)&v17[2 * v36];
  BOOL v38 = (char *)(v37 + 2 * a7);
  uint64_t v39 = a7 & 0xFFFFFFC0;
  if ((a7 & 0xFFFFFFC0) == 0) {
    goto LABEL_48;
  }
LABEL_45:
  unint64_t v56 = v37 + 2 * v39;
  long long v57 = 0uLL;
  do
  {
    v105.val[0] = *(int8x16_t *)a6;
    int8x16_t v58 = *(int8x16_t *)(a6 + 16);
    v108.val[0] = *(int8x16_t *)(a6 + 32);
    uint16x8_t v59 = *(uint16x8_t *)(a6 + 48);
    a6 += 64;
    uint16x8_t result = v59;
    v108.val[1] = 0uLL;
    v111.val[0] = v58;
    v105.val[1] = 0uLL;
    uint16x8_t v60 = (char *)v37;
    vst2q_s8(v60, v105);
    v60 += 32;
    v111.val[1] = 0uLL;
    vst2q_s8(v60, v111);
    uint64_t v61 = (char *)(v37 + 64);
    vst2q_s8(v61, v108);
    unint64_t v62 = (char *)(v37 + 96);
    vst2q_s8(v62, *(int8x16x2_t *)result.i8);
    v37 += 128;
  }
  while (v37 != v56);
  unint64_t v37 = v56;
LABEL_48:
  if ((char *)v37 == v38) {
    return result;
  }
  unint64_t v63 = (unint64_t)&__b[2 * v36 + 2 * a4 + 2 * a7 + v26 - v37 - 2];
  if (v63 < 0xE || (v37 < a6 + (v63 >> 1) + 1 ? (BOOL v64 = a6 >= (v63 & 0xFFFFFFFFFFFFFFFELL) + v37 + 2) : (BOOL v64 = 1), !v64))
  {
    unint64_t v67 = (char *)v37;
    uint8x8_t v68 = (unsigned __int8 *)a6;
    goto LABEL_58;
  }
  uint64_t v65 = (v63 >> 1) + 1;
  if (v63 >= 0x3E)
  {
    unint64_t v66 = v65 & 0xFFFFFFFFFFFFFFE0;
    uint8x8_t v81 = (uint8x8_t *)(a6 + 16);
    uint16x8_t v82 = (uint16x8_t *)(v37 + 32);
    unint64_t v83 = v65 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v84 = *(uint8x16_t *)v81[-2].i8;
      uint16x8_t v85 = vmovl_u8(*(uint8x8_t *)v84.i8);
      uint16x8_t result = vmovl_high_u8(v84);
      uint16x8_t v86 = vmovl_u8(*v81);
      uint16x8_t v87 = vmovl_high_u8(*(uint8x16_t *)v81->i8);
      v82[-2] = v85;
      v82[-1] = result;
      *uint16x8_t v82 = v86;
      v82[1] = v87;
      v82 += 4;
      v81 += 4;
      v83 -= 32;
    }
    while (v83);
    if (v65 == v66) {
      return result;
    }
    if ((v65 & 0x18) == 0)
    {
      uint8x8_t v68 = (unsigned __int8 *)(a6 + v66);
      unint64_t v67 = (char *)(v37 + 2 * v66);
      do
      {
LABEL_58:
        __int16 v69 = *v68++;
        *(_WORD *)unint64_t v67 = v69;
        v67 += 2;
      }
      while (v67 != v38);
      return result;
    }
  }
  else
  {
    unint64_t v66 = 0;
  }
  unint64_t v67 = (char *)(v37 + 2 * (v65 & 0xFFFFFFFFFFFFFFF8));
  uint8x8_t v68 = (unsigned __int8 *)(a6 + (v65 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v88 = (uint8x8_t *)(a6 + v66);
  int8x16x2_t v89 = (uint16x8_t *)(v37 + 2 * v66);
  unint64_t v90 = v66 - (v65 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v91 = *v88++;
    uint16x8_t result = vmovl_u8(v91);
    *v89++ = result;
    v90 += 8;
  }
  while (v90);
  if (v65 != (v65 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_58;
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(WTF::StringBuilder *a1, unsigned char *a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  if (*a3)
  {
    uint64_t v6 = *((void *)a1 + 1);
    if (!v6)
    {
LABEL_5:
      uint64_t v6 = *(void *)a1;
      if (!*(void *)a1) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v6 = *((void *)a1 + 1);
    if (!v6) {
      goto LABEL_5;
    }
  }
  if ((*(unsigned char *)(v6 + 16) & 4) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (!v5 || (*(unsigned char *)(v5 + 16) & 4) != 0)
  {
    uint16x8_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    int v12 = result;
    uint64_t v13 = *a3;
    *result++ = *a2;
    if (!v13) {
      return result;
    }
    unint64_t v10 = *(void *)(v13 + 8);
    size_t v14 = *(unsigned int *)(v13 + 4);
    if ((*(unsigned char *)(v13 + 16) & 4) != 0)
    {
      if (!v14) {
        return result;
      }
      if (v14 == 1)
      {
        *uint16x8_t result = *(unsigned char *)v10;
        return result;
      }
      goto LABEL_52;
    }
    uint64_t v15 = &result[v14];
    if (v14 >= 0x10)
    {
      unint64_t v16 = &result[v14 & 0xFFFFFFF0];
      do
      {
        unsigned long long v17 = (unsigned __int128)vld2q_s8((const char *)v10);
        v10 += 32;
        *(_OWORD *)uint16x8_t result = v17;
        result += 16;
      }
      while (result != v16);
      uint16x8_t result = v16;
    }
    if (result == v15) {
      return result;
    }
    uint64_t v18 = &v12[v14];
    size_t v19 = &v12[v14] - result;
    unint64_t v20 = v19 + 1;
    if (v19 + 1 < 8
      || ((unint64_t v21 = (unint64_t)(v18 + 1), (unint64_t)result < v10 + 2 * v19 + 2)
        ? (BOOL v22 = v10 >= v21)
        : (BOOL v22 = 1),
          !v22))
    {
      uint16x8_t v40 = result;
      unint64_t v41 = (char *)v10;
      goto LABEL_56;
    }
    if (v20 >= 0x20)
    {
      unint64_t v23 = v20 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v53 = (int8x16_t *)(v10 + 32);
      int16x8_t v54 = (int8x16_t *)(result + 16);
      unint64_t v55 = v20 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v57 = v53[-2];
        int8x16_t v56 = v53[-1];
        int8x16_t v59 = *v53;
        int8x16_t v58 = v53[1];
        v53 += 4;
        v54[-1] = vuzp1q_s8(v57, v56);
        *int16x8_t v54 = vuzp1q_s8(v59, v58);
        v54 += 2;
        v55 -= 32;
      }
      while (v55);
      if (v20 == v23) {
        return result;
      }
      if ((v20 & 0x18) == 0)
      {
        unint64_t v41 = (char *)(v10 + 2 * v23);
        uint16x8_t v40 = &result[v23];
        goto LABEL_56;
      }
    }
    else
    {
      unint64_t v23 = 0;
    }
    uint16x8_t v40 = &result[v20 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v41 = (char *)(v10 + 2 * (v20 & 0xFFFFFFFFFFFFFFF8));
    uint16x8_t v60 = (int16x8_t *)(v10 + 2 * v23);
    uint64_t v61 = (int8x8_t *)&result[v23];
    unint64_t v62 = v23 - (v20 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v63 = *v60++;
      *v61++ = vmovn_s16(v63);
      v62 += 8;
    }
    while (v62);
    if (v20 == (v20 & 0xFFFFFFFFFFFFFFF8)) {
      return result;
    }
    do
    {
LABEL_56:
      char v42 = *v41;
      v41 += 2;
      *v40++ = v42;
    }
    while (v40 != v15);
    return result;
  }
LABEL_9:
  uint16x8_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  int v8 = result;
  uint64_t v9 = *a3;
  *(_WORD *)uint16x8_t result = (char)*a2;
  result += 2;
  if (!v9) {
    return result;
  }
  unint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(unsigned int *)(v9 + 4);
  if ((*(unsigned char *)(v9 + 16) & 4) == 0)
  {
    if (!v11) {
      return result;
    }
    if (v11 == 1)
    {
      *(_WORD *)uint16x8_t result = *(_WORD *)v10;
      return result;
    }
    size_t v14 = 2 * v11;
LABEL_52:
    return memcpy(result, (const void *)v10, v14);
  }
  int v24 = &result[2 * v11];
  if (v11 >= 0x40)
  {
    size_t v25 = &result[2 * (v11 & 0xFFFFFFC0)];
    long long v26 = 0uLL;
    do
    {
      v65.val[0] = *(int8x16_t *)v10;
      int8x16_t v27 = *(int8x16_t *)(v10 + 16);
      v66.val[0] = *(int8x16_t *)(v10 + 32);
      long long v28 = *(_OWORD *)(v10 + 48);
      v10 += 64;
      long long v29 = v28;
      v66.val[1] = 0uLL;
      v67.val[0] = v27;
      v65.val[1] = 0uLL;
      unint64_t v30 = result;
      vst2q_s8(v30, v65);
      v30 += 32;
      v67.val[1] = 0uLL;
      vst2q_s8(v30, v67);
      uint64_t v31 = result + 64;
      vst2q_s8(v31, v66);
      unint64_t v32 = result + 96;
      vst2q_s8(v32, *(int8x16x2_t *)(&v26 - 1));
      result += 128;
    }
    while (result != v25);
    uint16x8_t result = v25;
  }
  if (result != (unsigned char *)v24)
  {
    unint64_t v33 = &v8[2 * v11] - result;
    if (v33 < 0xE
      || ((unint64_t)result < v10 + (v33 >> 1) + 1
        ? (BOOL v34 = v10 >= (unint64_t)&result[(v33 & 0xFFFFFFFFFFFFFFFELL) + 2])
        : (BOOL v34 = 1),
          !v34))
    {
      unint64_t v37 = result;
      BOOL v38 = (unsigned __int8 *)v10;
      goto LABEL_49;
    }
    uint64_t v35 = (v33 >> 1) + 1;
    if (v33 >= 0x3E)
    {
      unint64_t v36 = v35 & 0xFFFFFFFFFFFFFFE0;
      size_t v43 = (uint8x8_t *)(v10 + 16);
      int8x16_t v44 = (uint16x8_t *)(result + 32);
      unint64_t v45 = v35 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v46 = *(uint8x16_t *)v43[-2].i8;
        uint16x8_t v47 = vmovl_u8(*v43);
        uint16x8_t v48 = vmovl_high_u8(*(uint8x16_t *)v43->i8);
        v44[-2] = vmovl_u8(*(uint8x8_t *)v46.i8);
        v44[-1] = vmovl_high_u8(v46);
        uint16x8_t *v44 = v47;
        v44[1] = v48;
        v44 += 4;
        v43 += 4;
        v45 -= 32;
      }
      while (v45);
      if (v35 == v36) {
        return result;
      }
      if ((v35 & 0x18) == 0)
      {
        BOOL v38 = (unsigned __int8 *)(v10 + v36);
        unint64_t v37 = &result[2 * v36];
        goto LABEL_49;
      }
    }
    else
    {
      unint64_t v36 = 0;
    }
    unint64_t v37 = &result[2 * (v35 & 0xFFFFFFFFFFFFFFF8)];
    BOOL v38 = (unsigned __int8 *)(v10 + (v35 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v49 = (uint8x8_t *)(v10 + v36);
    BOOL v50 = (uint16x8_t *)&result[2 * v36];
    unint64_t v51 = v36 - (v35 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v52 = *v49++;
      *v50++ = vmovl_u8(v52);
      v51 += 8;
    }
    while (v51);
    if (v35 == (v35 & 0xFFFFFFFFFFFFFFF8)) {
      return result;
    }
    do
    {
LABEL_49:
      __int16 v39 = *v38++;
      *v37++ = v39;
    }
    while (v37 != v24);
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, char *a2, int *a3, uint64_t a4, int *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v13 = *a6;
  uint64_t v14 = *((void *)a1 + 1);
  if ((!v14 && (uint64_t v14 = *(void *)a1) == 0 || (*(unsigned char *)(v14 + 16) & 4) != 0)
    && (!v13 || (*(unsigned char *)(v13 + 16) & 4) != 0))
  {
    unint64_t v30 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!v30) {
      return;
    }
    uint64_t v31 = v30;
    char v32 = *a2;
    int v33 = *a3;
    BOOL v34 = *(unsigned char **)a4;
    size_t v35 = *(unsigned int *)(a4 + 8);
    int v36 = *a5;
    uint64_t v37 = *a6;
    BOOL v38 = *(unsigned char **)a7;
    size_t v39 = *(unsigned int *)(a7 + 8);
    *unint64_t v30 = v32;
    uint16x8_t v40 = v30 + 1;
    uint64_t v41 = (4 * v33);
    if (v41)
    {
      memset(v30 + 1, 32, (4 * v33));
      v40 += v41;
      if (!v35) {
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v41 = 0;
      if (!v35) {
        goto LABEL_46;
      }
    }
    if (v35 != 1)
    {
      memcpy(v40, v34, v35);
      uint16x8_t v74 = &v40[v35];
      size_t v75 = (4 * v36);
      if (v75)
      {
LABEL_47:
        memset(v74, 32, v75);
        v74 += v75;
        if (v37) {
          goto LABEL_48;
        }
        goto LABEL_55;
      }
LABEL_54:
      size_t v75 = 0;
      if (v37)
      {
LABEL_48:
        uint16x8_t v76 = *(int8x16_t **)(v37 + 8);
        size_t v77 = *(unsigned int *)(v37 + 4);
        if ((*(unsigned char *)(v37 + 16) & 4) != 0)
        {
          if (v77)
          {
            if (v77 == 1) {
              *uint16x8_t v74 = v76->i8[0];
            }
            else {
              memcpy(v74, v76, v77);
            }
          }
        }
        else
        {
          int8x16x2_t v78 = &v74[v77];
          if (v77 < 0x10)
          {
            unint64_t v79 = (unint64_t)v74;
          }
          else
          {
            unint64_t v79 = (unint64_t)&v74[v77 & 0xFFFFFFF0];
            uint8x8_t v80 = (unsigned long long *)v74;
            do
            {
              unsigned long long v81 = (unsigned __int128)vld2q_s8(v76->i8);
              v76 += 2;
              *v80++ = v81;
            }
            while (v80 != (unsigned long long *)v79);
          }
          if ((unsigned char *)v79 != v78)
          {
            size_t v105 = (size_t)&v31[v77 + v41 + v75 + v35 - v79];
            unint64_t v106 = v105 + 1;
            if (v105 + 1 < 8
              || (v79 < (unint64_t)v76->u64 + 2 * v105 + 2
                ? (BOOL v107 = v76 >= (int8x16_t *)&v31[v77 + 1 + v75 + v41 + v35])
                : (BOOL v107 = 1),
                  !v107))
            {
              int8x16x2_t v109 = (unsigned char *)v79;
              int8x16x2_t v110 = v76;
              goto LABEL_100;
            }
            if (v106 >= 0x20)
            {
              unint64_t v108 = v106 & 0xFFFFFFFFFFFFFFE0;
              unint64_t v143 = v76 + 2;
              int16x8_t v144 = (int8x16_t *)(v79 + 16);
              unint64_t v145 = v106 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                int8x16_t v147 = v143[-2];
                int8x16_t v146 = v143[-1];
                int8x16_t v149 = *v143;
                int8x16_t v148 = v143[1];
                v143 += 4;
                v144[-1] = vuzp1q_s8(v147, v146);
                int8x16_t *v144 = vuzp1q_s8(v149, v148);
                v144 += 2;
                v145 -= 32;
              }
              while (v145);
              if (v106 == v108) {
                goto LABEL_119;
              }
              if ((v106 & 0x18) == 0)
              {
                int8x16x2_t v110 = (int8x16_t *)((char *)v76 + 2 * v108);
                int8x16x2_t v109 = (unsigned char *)(v79 + v108);
                do
                {
LABEL_100:
                  char v111 = v110->i8[0];
                  int8x16x2_t v110 = (int8x16_t *)((char *)v110 + 2);
                  *v109++ = v111;
                }
                while (v109 != v78);
                goto LABEL_119;
              }
            }
            else
            {
              unint64_t v108 = 0;
            }
            int8x16x2_t v109 = (unsigned char *)(v79 + (v106 & 0xFFFFFFFFFFFFFFF8));
            int8x16x2_t v110 = (int8x16_t *)((char *)v76 + 2 * (v106 & 0xFFFFFFFFFFFFFFF8));
            int8x16_t v150 = (int16x8_t *)((char *)v76 + 2 * v108);
            int8x16_t v151 = (int8x8_t *)(v79 + v108);
            unint64_t v152 = v108 - (v106 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              int16x8_t v153 = *v150++;
              *v151++ = vmovn_s16(v153);
              v152 += 8;
            }
            while (v152);
            if (v106 != (v106 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_100;
            }
          }
        }
LABEL_119:
        uint64_t v82 = *(unsigned int *)(v37 + 4);
        if (!v39) {
          return;
        }
        goto LABEL_120;
      }
LABEL_55:
      uint64_t v82 = 0;
      if (!v39) {
        return;
      }
LABEL_120:
      uint8x8_t v132 = &v74[v82];
      if (v39 == 1)
      {
        unsigned char *v132 = *v38;
      }
      else
      {
        memcpy(v132, v38, v39);
      }
      return;
    }
    unsigned char *v40 = *v34;
LABEL_46:
    uint16x8_t v74 = &v40[v35];
    size_t v75 = (4 * v36);
    if (v75) {
      goto LABEL_47;
    }
    goto LABEL_54;
  }
  uint64_t v15 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!v15) {
    return;
  }
  unint64_t v16 = v15;
  __int16 v17 = *a2;
  int v18 = *a3;
  unint64_t v19 = *(void *)a4;
  uint64_t v20 = *(unsigned int *)(a4 + 8);
  int v21 = *a5;
  uint64_t v22 = *a6;
  unint64_t v23 = *(void *)a7;
  uint64_t v24 = *(unsigned int *)(a7 + 8);
  *uint64_t v15 = v17;
  size_t v25 = v15 + 1;
  uint64_t v26 = (4 * v18);
  if (v26)
  {
    memset_pattern16(v15 + 1, asc_1826CF510, 2 * (4 * v18));
    unint64_t v27 = (unint64_t)&v25[v26];
    long long v28 = (_WORD *)(v27 + 2 * v20);
    uint64_t v29 = v20 & 0xFFFFFFC0;
    if ((v20 & 0xFFFFFFC0) == 0) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v26 = 0;
    unint64_t v27 = (unint64_t)(v15 + 1);
    long long v28 = &v25[v20];
    uint64_t v29 = v20 & 0xFFFFFFC0;
    if ((v20 & 0xFFFFFFC0) == 0) {
      goto LABEL_18;
    }
  }
  unint64_t v42 = v27 + 2 * v29;
  long long v43 = 0uLL;
  do
  {
    v155.val[0] = *(int8x16_t *)v19;
    int8x16_t v44 = *(int8x16_t *)(v19 + 16);
    v158.val[0] = *(int8x16_t *)(v19 + 32);
    long long v45 = *(_OWORD *)(v19 + 48);
    v19 += 64;
    long long v46 = v45;
    v158.val[1] = 0uLL;
    v161.val[0] = v44;
    v155.val[1] = 0uLL;
    uint16x8_t v47 = (char *)v27;
    vst2q_s8(v47, v155);
    v47 += 32;
    v161.val[1] = 0uLL;
    vst2q_s8(v47, v161);
    uint16x8_t v48 = (char *)(v27 + 64);
    vst2q_s8(v48, v158);
    unint64_t v49 = (char *)(v27 + 96);
    vst2q_s8(v49, *(int8x16x2_t *)(&v43 - 1));
    v27 += 128;
  }
  while (v27 != v42);
  unint64_t v27 = v42;
LABEL_18:
  if ((_WORD *)v27 == v28) {
    goto LABEL_29;
  }
  unint64_t v50 = (unint64_t)&v16[v26 + v20] - v27;
  if (v50 < 0xE
    || (v27 < v19 + (v50 >> 1) + 1 ? (BOOL v51 = v19 >= (v50 & 0xFFFFFFFFFFFFFFFELL) + v27 + 2) : (BOOL v51 = 1), !v51))
  {
    int16x8_t v54 = (_WORD *)v27;
    unint64_t v55 = (unsigned __int8 *)v19;
    goto LABEL_28;
  }
  uint64_t v52 = (v50 >> 1) + 1;
  if (v50 >= 0x3E)
  {
    unint64_t v53 = v52 & 0xFFFFFFFFFFFFFFE0;
    int8x16x2_t v112 = (uint8x8_t *)(v19 + 16);
    int8x16_t v113 = (uint16x8_t *)(v27 + 32);
    unint64_t v114 = v52 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v115 = *(uint8x16_t *)v112[-2].i8;
      uint16x8_t v116 = vmovl_u8(*v112);
      uint16x8_t v117 = vmovl_high_u8(*(uint8x16_t *)v112->i8);
      v113[-2] = vmovl_u8(*(uint8x8_t *)v115.i8);
      v113[-1] = vmovl_high_u8(v115);
      *int8x16_t v113 = v116;
      v113[1] = v117;
      v113 += 4;
      v112 += 4;
      v114 -= 32;
    }
    while (v114);
    if (v52 == v53) {
      goto LABEL_29;
    }
    if ((v52 & 0x18) == 0)
    {
      unint64_t v55 = (unsigned __int8 *)(v19 + v53);
      int16x8_t v54 = (_WORD *)(v27 + 2 * v53);
      do
      {
LABEL_28:
        __int16 v56 = *v55++;
        *v54++ = v56;
      }
      while (v54 != v28);
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v53 = 0;
  }
  int16x8_t v54 = (_WORD *)(v27 + 2 * (v52 & 0xFFFFFFFFFFFFFFF8));
  unint64_t v55 = (unsigned __int8 *)(v19 + (v52 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v118 = (uint8x8_t *)(v19 + v53);
  int16x8_t v119 = (uint16x8_t *)(v27 + 2 * v53);
  unint64_t v120 = v53 - (v52 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v121 = *v118++;
    *v119++ = vmovl_u8(v121);
    v120 += 8;
  }
  while (v120);
  if (v52 != (v52 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_28;
  }
LABEL_29:
  uint64_t v57 = (4 * v21);
  if (v57)
  {
    memset_pattern16(v28, asc_1826CF510, 2 * v57);
    v28 += v57;
    if (v22) {
      goto LABEL_31;
    }
LABEL_36:
    uint64_t v60 = 0;
    unint64_t v61 = (unint64_t)v28;
    unint64_t v62 = &v28[v24];
    uint64_t v63 = v24 & 0xFFFFFFC0;
    if ((v24 & 0xFFFFFFC0) != 0) {
      goto LABEL_74;
    }
    goto LABEL_77;
  }
  uint64_t v57 = 0;
  if (!v22) {
    goto LABEL_36;
  }
LABEL_31:
  int8x16_t v58 = *(int8x16_t **)(v22 + 8);
  uint64_t v59 = *(unsigned int *)(v22 + 4);
  if ((*(unsigned char *)(v22 + 16) & 4) != 0)
  {
    BOOL v64 = &v28[v59];
    if (v59 < 0x40)
    {
      unint64_t v65 = (unint64_t)v28;
      if (v28 == v64) {
        goto LABEL_73;
      }
    }
    else
    {
      unint64_t v65 = (unint64_t)&v28[v59 & 0xFFFFFFC0];
      long long v66 = 0uLL;
      int8x16x2_t v67 = (char *)v28;
      do
      {
        v156.val[0] = *v58;
        int8x16_t v68 = v58[1];
        v159.val[0] = v58[2];
        int8x16_t v69 = v58[3];
        v58 += 4;
        int8x16_t v70 = v69;
        v159.val[1] = 0uLL;
        v162.val[0] = v68;
        v156.val[1] = 0uLL;
        uint8x16_t v71 = v67;
        vst2q_s8(v71, v156);
        v71 += 32;
        v162.val[1] = 0uLL;
        vst2q_s8(v71, v162);
        unint64_t v72 = v67 + 64;
        vst2q_s8(v72, v159);
        uint8x16_t v73 = v67 + 96;
        vst2q_s8(v73, *(int8x16x2_t *)(&v66 - 1));
        v67 += 128;
      }
      while (v67 != (char *)v65);
      if ((_WORD *)v65 == v64) {
        goto LABEL_73;
      }
    }
    unint64_t v83 = (unint64_t)&v16[v26 + v59 + v57 + v20] - v65;
    if (v83 < 0xE
      || (v65 < (unint64_t)v58->u64 + (v83 >> 1) + 1
        ? (BOOL v84 = (unint64_t)v58 >= (v83 & 0xFFFFFFFFFFFFFFFELL) + v65 + 2)
        : (BOOL v84 = 1),
          !v84))
    {
      uint16x8_t v87 = (_WORD *)v65;
      uint16x8_t v88 = v58;
      goto LABEL_70;
    }
    uint64_t v85 = (v83 >> 1) + 1;
    if (v83 >= 0x3E)
    {
      unint64_t v86 = v85 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v133 = (uint8x8_t *)&v58[1];
      int8x16x2_t v134 = (uint16x8_t *)(v65 + 32);
      unint64_t v135 = v85 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v136 = *(uint8x16_t *)v133[-2].i8;
        uint16x8_t v137 = vmovl_u8(*v133);
        uint16x8_t v138 = vmovl_high_u8(*(uint8x16_t *)v133->i8);
        v134[-2] = vmovl_u8(*(uint8x8_t *)v136.i8);
        v134[-1] = vmovl_high_u8(v136);
        *int8x16x2_t v134 = v137;
        v134[1] = v138;
        v134 += 4;
        v133 += 4;
        v135 -= 32;
      }
      while (v135);
      if (v85 == v86) {
        goto LABEL_73;
      }
      if ((v85 & 0x18) == 0)
      {
        uint16x8_t v88 = (int8x16_t *)((char *)v58 + v86);
        uint16x8_t v87 = (_WORD *)(v65 + 2 * v86);
        goto LABEL_70;
      }
    }
    else
    {
      unint64_t v86 = 0;
    }
    uint16x8_t v87 = (_WORD *)(v65 + 2 * (v85 & 0xFFFFFFFFFFFFFFF8));
    uint16x8_t v88 = (int8x16_t *)((char *)v58 + (v85 & 0xFFFFFFFFFFFFFFF8));
    int8x16_t v139 = (uint8x8_t *)&v58->i8[v86];
    int8x16_t v140 = (uint16x8_t *)(v65 + 2 * v86);
    unint64_t v141 = v86 - (v85 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v142 = *v139++;
      *v140++ = vmovl_u8(v142);
      v141 += 8;
    }
    while (v141);
    if (v85 == (v85 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_73;
    }
    do
    {
LABEL_70:
      __int16 v89 = v88->u8[0];
      uint16x8_t v88 = (int8x16_t *)((char *)v88 + 1);
      *v87++ = v89;
    }
    while (v87 != v64);
    goto LABEL_73;
  }
  if (v59)
  {
    if (v59 == 1) {
      _WORD *v28 = v58->i16[0];
    }
    else {
      memcpy(v28, v58, 2 * v59);
    }
  }
LABEL_73:
  uint64_t v60 = *(unsigned int *)(v22 + 4);
  unint64_t v61 = (unint64_t)&v28[v60];
  unint64_t v62 = (_WORD *)(v61 + 2 * v24);
  uint64_t v63 = v24 & 0xFFFFFFC0;
  if ((v24 & 0xFFFFFFC0) != 0)
  {
LABEL_74:
    unint64_t v90 = v61 + 2 * v63;
    long long v91 = 0uLL;
    do
    {
      v157.val[0] = *(int8x16_t *)v23;
      int8x16_t v92 = *(int8x16_t *)(v23 + 16);
      v160.val[0] = *(int8x16_t *)(v23 + 32);
      long long v93 = *(_OWORD *)(v23 + 48);
      v23 += 64;
      long long v94 = v93;
      v160.val[1] = 0uLL;
      v163.val[0] = v92;
      v157.val[1] = 0uLL;
      uint8x16_t v95 = (char *)v61;
      vst2q_s8(v95, v157);
      v95 += 32;
      v163.val[1] = 0uLL;
      vst2q_s8(v95, v163);
      uint16x8_t v96 = (char *)(v61 + 64);
      vst2q_s8(v96, v160);
      uint16x8_t v97 = (char *)(v61 + 96);
      vst2q_s8(v97, *(int8x16x2_t *)(&v91 - 1));
      v61 += 128;
    }
    while (v61 != v90);
    unint64_t v61 = v90;
  }
LABEL_77:
  if ((_WORD *)v61 == v62) {
    return;
  }
  unint64_t v98 = (unint64_t)&v16[v60 + v26 + v57 + v20 + v24] - v61;
  if (v98 < 0xE
    || (v61 < v23 + (v98 >> 1) + 1 ? (BOOL v99 = v23 >= (v98 & 0xFFFFFFFFFFFFFFFELL) + v61 + 2) : (BOOL v99 = 1), !v99))
  {
    uint8x8_t v102 = (_WORD *)v61;
    int8x16x2_t v103 = (unsigned __int8 *)v23;
    goto LABEL_87;
  }
  uint64_t v100 = (v98 >> 1) + 1;
  if (v98 >= 0x3E)
  {
    unint64_t v101 = v100 & 0xFFFFFFFFFFFFFFE0;
    uint8x8_t v122 = (uint8x8_t *)(v23 + 16);
    int8x16_t v123 = (uint16x8_t *)(v61 + 32);
    unint64_t v124 = v100 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v125 = *(uint8x16_t *)v122[-2].i8;
      uint16x8_t v126 = vmovl_u8(*v122);
      uint16x8_t v127 = vmovl_high_u8(*(uint8x16_t *)v122->i8);
      v123[-2] = vmovl_u8(*(uint8x8_t *)v125.i8);
      v123[-1] = vmovl_high_u8(v125);
      *int8x16_t v123 = v126;
      v123[1] = v127;
      v123 += 4;
      v122 += 4;
      v124 -= 32;
    }
    while (v124);
    if (v100 == v101) {
      return;
    }
    if ((v100 & 0x18) == 0)
    {
      int8x16x2_t v103 = (unsigned __int8 *)(v23 + v101);
      uint8x8_t v102 = (_WORD *)(v61 + 2 * v101);
      do
      {
LABEL_87:
        __int16 v104 = *v103++;
        *v102++ = v104;
      }
      while (v102 != v62);
      return;
    }
  }
  else
  {
    unint64_t v101 = 0;
  }
  uint8x8_t v102 = (_WORD *)(v61 + 2 * (v100 & 0xFFFFFFFFFFFFFFF8));
  int8x16x2_t v103 = (unsigned __int8 *)(v23 + (v100 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v128 = (uint8x8_t *)(v23 + v101);
  unint64_t v129 = (uint16x8_t *)(v61 + 2 * v101);
  unint64_t v130 = v101 - (v100 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v131 = *v128++;
    *v129++ = vmovl_u8(v131);
    v130 += 8;
  }
  while (v130);
  if (v100 != (v100 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_87;
  }
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, int *a2, char *a3, char *a4, uint64_t *a5, unint64_t *a6, uint64_t *a7, unint64_t *a8)
{
  uint64_t v15 = *a5;
  uint64_t v16 = *a7;
  uint64_t v17 = *((void *)a1 + 1);
  if ((v17 || (uint64_t v17 = *(void *)a1) != 0) && (*(unsigned char *)(v17 + 16) & 4) == 0
    || v15 && (*(unsigned char *)(v15 + 16) & 4) == 0
    || v16 && (*(unsigned char *)(v16 + 16) & 4) == 0)
  {
    int v18 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (v18)
    {
      unint64_t v19 = v18;
      int v20 = *a2;
      __int16 v21 = *a3;
      __int16 v22 = *a4;
      uint64_t v23 = *a5;
      unint64_t v25 = *a6;
      unint64_t v24 = a6[1];
      uint64_t v26 = *a7;
      unint64_t v28 = *a8;
      unint64_t v27 = a8[1];
      uint64_t v29 = (4 * v20);
      if (v29) {
        memset_pattern16(v18, asc_1826CF510, 2 * (4 * v20));
      }
      else {
        uint64_t v29 = 0;
      }
      unint64_t v42 = &v19[2 * v29];
      *(_WORD *)unint64_t v42 = v21;
      *((_WORD *)v42 + 1) = v22;
      WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v42 + 4, v23, v25, v24, v26, v28, v27);
    }
  }
  else
  {
    unint64_t v30 = (char *)MEMORY[0x18530ACF0]();
    if (v30)
    {
      uint64_t v31 = v30;
      int v32 = *a2;
      char v33 = *a3;
      char v34 = *a4;
      uint64_t v35 = *a5;
      uint64_t v37 = (__int8 *)*a6;
      unint64_t v36 = a6[1];
      uint64_t v38 = *a7;
      uint16x8_t v40 = (__int8 *)*a8;
      unint64_t v39 = a8[1];
      uint64_t v41 = (4 * *a2);
      if (v41) {
        memset(v30, 32, (4 * v32));
      }
      else {
        uint64_t v41 = 0;
      }
      long long v43 = &v31[v41];
      char *v43 = v33;
      v43[1] = v34;
      WTF::stringTypeAdapterAccumulator<unsigned char,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((int8x16_t *)&v31[v41 + 2], v35, v37, v36, v38, v40, v39);
    }
  }
}

int8x16_t *WTF::stringTypeAdapterAccumulator<unsigned char,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(int8x16_t *__dst, uint64_t a2, __int8 *__src, unsigned int a4, uint64_t a5, __int8 *a6, unsigned int a7)
{
  int v12 = __dst;
  if (a2)
  {
    uint64_t v14 = *(int8x16_t **)(a2 + 8);
    size_t v15 = *(unsigned int *)(a2 + 4);
    if ((*(unsigned char *)(a2 + 16) & 4) != 0)
    {
      if (v15)
      {
        if (v15 == 1) {
          __dst->i8[0] = v14->i8[0];
        }
        else {
          __dst = (int8x16_t *)memcpy(__dst, v14, v15);
        }
      }
LABEL_26:
      uint64_t v20 = *(unsigned int *)(a2 + 4);
      __int16 v21 = (int8x16_t *)((char *)v12 + v20);
      if (!a4) {
        goto LABEL_29;
      }
      goto LABEL_27;
    }
    uint64_t v16 = (int8x16_t *)((char *)__dst + v15);
    if (v15 < 0x10)
    {
      uint64_t v17 = __dst;
      if (__dst == v16) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v17 = (int8x16_t *)((char *)__dst + (v15 & 0xFFFFFFF0));
      int v18 = (unsigned long long *)__dst;
      do
      {
        unsigned long long v19 = (unsigned __int128)vld2q_s8(v14->i8);
        v14 += 2;
        *v18++ = v19;
      }
      while (v18 != (unsigned long long *)v17);
      if (v17 == v16) {
        goto LABEL_26;
      }
    }
    unint64_t v22 = &__dst->i8[v15] - (__int8 *)v17;
    if (v22 < 8
      || (v17 < (int8x16_t *)((char *)v14 + 2 * v22) ? (BOOL v23 = v14 >= (int8x16_t *)&__dst->i8[v15]) : (BOOL v23 = 1), !v23))
    {
      unint64_t v25 = v17;
      uint64_t v26 = v14;
      goto LABEL_23;
    }
    if (v22 >= 0x20)
    {
      unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v44 = v14 + 2;
      long long v45 = v17 + 1;
      unint64_t v46 = v22 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v48 = v44[-2];
        int8x16_t v47 = v44[-1];
        int8x16_t v50 = *v44;
        int8x16_t v49 = v44[1];
        v44 += 4;
        v45[-1] = vuzp1q_s8(v48, v47);
        int8x16_t *v45 = vuzp1q_s8(v50, v49);
        v45 += 2;
        v46 -= 32;
      }
      while (v46);
      if (v22 == v24) {
        goto LABEL_26;
      }
      if ((v22 & 0x18) == 0)
      {
        uint64_t v26 = (int8x16_t *)((char *)v14 + 2 * v24);
        unint64_t v25 = (int8x16_t *)((char *)v17 + v24);
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v24 = 0;
    }
    unint64_t v25 = (int8x16_t *)((char *)v17 + (v22 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v26 = (int8x16_t *)((char *)v14 + 2 * (v22 & 0xFFFFFFFFFFFFFFF8));
    BOOL v51 = (int16x8_t *)((char *)v14 + 2 * v24);
    uint64_t v52 = (int8x8_t *)&v17->i8[v24];
    unint64_t v53 = v24 - (v22 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v54 = *v51++;
      *v52++ = vmovn_s16(v54);
      v53 += 8;
    }
    while (v53);
    if (v22 == (v22 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_26;
    }
    do
    {
LABEL_23:
      __int8 v27 = v26->i8[0];
      uint64_t v26 = (int8x16_t *)((char *)v26 + 2);
      v25->i8[0] = v27;
      unint64_t v25 = (int8x16_t *)((char *)v25 + 1);
    }
    while (v25 != v16);
    goto LABEL_26;
  }
  uint64_t v20 = 0;
  __int16 v21 = __dst;
  if (!a4)
  {
LABEL_29:
    uint64_t v28 = a4;
    uint64_t v29 = &v21->i8[a4];
    if (a5) {
      goto LABEL_30;
    }
    goto LABEL_37;
  }
LABEL_27:
  if (a4 == 1)
  {
    v21->i8[0] = *__src;
    goto LABEL_29;
  }
  __dst = (int8x16_t *)memcpy(v21, __src, a4);
  uint64_t v28 = a4;
  uint64_t v29 = &v21->i8[a4];
  if (a5)
  {
LABEL_30:
    unint64_t v30 = *(int8x16_t **)(a5 + 8);
    size_t v31 = *(unsigned int *)(a5 + 4);
    if ((*(unsigned char *)(a5 + 16) & 4) != 0)
    {
      if (v31)
      {
        if (v31 == 1) {
          *uint64_t v29 = v30->i8[0];
        }
        else {
          __dst = (int8x16_t *)memcpy(v29, v30, v31);
        }
      }
LABEL_55:
      uint64_t v36 = *(unsigned int *)(a5 + 4);
      if (!a7) {
        return __dst;
      }
      goto LABEL_56;
    }
    int v32 = &v29[v31];
    if (v31 < 0x10)
    {
      unint64_t v33 = (unint64_t)v29;
      if (v29 == v32) {
        goto LABEL_55;
      }
    }
    else
    {
      unint64_t v33 = (unint64_t)&v29[v31 & 0xFFFFFFF0];
      char v34 = (unsigned long long *)v29;
      do
      {
        unsigned long long v35 = (unsigned __int128)vld2q_s8(v30->i8);
        v30 += 2;
        *v34++ = v35;
      }
      while (v34 != (unsigned long long *)v33);
      if ((__int8 *)v33 == v32) {
        goto LABEL_55;
      }
    }
    uint64_t v37 = (int8x16_t *)((char *)v12 + v20 + v31 + v28);
    unint64_t v38 = (unint64_t)v37 - v33;
    if ((unint64_t)v37 - v33 < 8
      || (v33 < (unint64_t)v30 + 2 * v38 ? (BOOL v39 = v30 >= v37) : (BOOL v39 = 1), !v39))
    {
      uint64_t v41 = (__int8 *)v33;
      unint64_t v42 = v30;
      goto LABEL_52;
    }
    if (v38 >= 0x20)
    {
      unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v55 = v30 + 2;
      __int16 v56 = (int8x16_t *)(v33 + 16);
      unint64_t v57 = v38 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v59 = v55[-2];
        int8x16_t v58 = v55[-1];
        int8x16_t v61 = *v55;
        int8x16_t v60 = v55[1];
        v55 += 4;
        v56[-1] = vuzp1q_s8(v59, v58);
        int8x16_t *v56 = vuzp1q_s8(v61, v60);
        v56 += 2;
        v57 -= 32;
      }
      while (v57);
      if (v38 == v40) {
        goto LABEL_55;
      }
      if ((v38 & 0x18) == 0)
      {
        unint64_t v42 = (int8x16_t *)((char *)v30 + 2 * v40);
        uint64_t v41 = (__int8 *)(v33 + v40);
        goto LABEL_52;
      }
    }
    else
    {
      unint64_t v40 = 0;
    }
    uint64_t v41 = (__int8 *)(v33 + (v38 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v42 = (int8x16_t *)((char *)v30 + 2 * (v38 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v62 = (int16x8_t *)((char *)v30 + 2 * v40);
    uint64_t v63 = (int8x8_t *)(v33 + v40);
    unint64_t v64 = v40 - (v38 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v65 = *v62++;
      *v63++ = vmovn_s16(v65);
      v64 += 8;
    }
    while (v64);
    if (v38 == (v38 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_55;
    }
    do
    {
LABEL_52:
      char v43 = v42->i8[0];
      unint64_t v42 = (int8x16_t *)((char *)v42 + 2);
      *v41++ = v43;
    }
    while (v41 != v32);
    goto LABEL_55;
  }
LABEL_37:
  uint64_t v36 = 0;
  if (!a7) {
    return __dst;
  }
LABEL_56:
  __dst = (int8x16_t *)&v29[v36];
  if (a7 == 1)
  {
    __dst->i8[0] = *a6;
  }
  else
  {
    return (int8x16_t *)memcpy(__dst, a6, a7);
  }
  return __dst;
}

uint16x8_t WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(char *__dst, uint64_t a2, unint64_t a3, unsigned int a4, uint64_t a5, unint64_t a6, unsigned int a7)
{
  if (!a2)
  {
    uint64_t v16 = 0;
    uint64_t v17 = __dst;
    int v18 = &__dst[2 * a4];
    uint64_t v19 = a4 & 0xFFFFFFC0;
    if ((a4 & 0xFFFFFFC0) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  uint64_t v14 = *(char **)(a2 + 8);
  uint64_t v15 = *(unsigned int *)(a2 + 4);
  if ((*(unsigned char *)(a2 + 16) & 4) != 0)
  {
    uint64_t v20 = &__dst[2 * v15];
    if (v15 < 0x40)
    {
      __int16 v21 = __dst;
      if (__dst == v20) {
        goto LABEL_26;
      }
    }
    else
    {
      __int16 v21 = &__dst[2 * (v15 & 0xFFFFFFC0)];
      long long v22 = 0uLL;
      BOOL v23 = __dst;
      do
      {
        v130.val[0] = *(int8x16_t *)v14;
        int8x16_t v24 = *((int8x16_t *)v14 + 1);
        v134.val[0] = (int8x16_t)*((_OWORD *)v14 + 2);
        uint16x8_t v25 = *((uint16x8_t *)v14 + 3);
        v14 += 64;
        uint16x8_t result = v25;
        v134.val[1] = 0uLL;
        v138.val[0] = v24;
        v130.val[1] = 0uLL;
        __int8 v27 = v23;
        vst2q_s8(v27, v130);
        v27 += 32;
        v138.val[1] = 0uLL;
        vst2q_s8(v27, v138);
        uint64_t v28 = v23 + 64;
        vst2q_s8(v28, v134);
        uint64_t v29 = v23 + 96;
        vst2q_s8(v29, *(int8x16x2_t *)(&v22 - 1));
        v23 += 128;
      }
      while (v23 != v21);
      if (v21 == v20) {
        goto LABEL_26;
      }
    }
    unint64_t v30 = &__dst[2 * v15] - v21 - 2;
    if (v30 < 0xE
      || (v21 < &v14[(v30 >> 1) + 1] ? (BOOL v31 = v14 >= &v21[(v30 & 0xFFFFFFFFFFFFFFFELL) + 2]) : (BOOL v31 = 1), !v31))
    {
      char v34 = v21;
      unsigned long long v35 = v14;
      goto LABEL_23;
    }
    uint64_t v32 = (v30 >> 1) + 1;
    if (v30 >= 0x3E)
    {
      unint64_t v33 = v32 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v108 = (uint8x8_t *)(v14 + 16);
      int8x16x2_t v109 = (uint16x8_t *)(v21 + 32);
      unint64_t v110 = v32 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v111 = *(uint8x16_t *)v108[-2].i8;
        uint16x8_t v112 = vmovl_u8(*(uint8x8_t *)v111.i8);
        uint16x8_t result = vmovl_high_u8(v111);
        uint16x8_t v113 = vmovl_u8(*v108);
        uint16x8_t v114 = vmovl_high_u8(*(uint8x16_t *)v108->i8);
        v109[-2] = v112;
        v109[-1] = result;
        *int8x16x2_t v109 = v113;
        v109[1] = v114;
        v109 += 4;
        v108 += 4;
        v110 -= 32;
      }
      while (v110);
      if (v32 == v33) {
        goto LABEL_26;
      }
      if ((v32 & 0x18) == 0)
      {
        unsigned long long v35 = &v14[v33];
        char v34 = &v21[2 * v33];
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v33 = 0;
    }
    char v34 = &v21[2 * (v32 & 0xFFFFFFFFFFFFFFF8)];
    unsigned long long v35 = &v14[v32 & 0xFFFFFFFFFFFFFFF8];
    uint8x16_t v115 = (uint8x8_t *)&v14[v33];
    uint16x8_t v116 = (uint16x8_t *)&v21[2 * v33];
    unint64_t v117 = v33 - (v32 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v118 = *v115++;
      uint16x8_t result = vmovl_u8(v118);
      *v116++ = result;
      v117 += 8;
    }
    while (v117);
    if (v32 == (v32 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_26;
    }
    do
    {
LABEL_23:
      __int16 v36 = *v35++;
      *(_WORD *)char v34 = v36;
      v34 += 2;
    }
    while (v34 != v20);
    goto LABEL_26;
  }
  if (v15)
  {
    if (v15 == 1) {
      *(_WORD *)__dst = *(_WORD *)v14;
    }
    else {
      memcpy(__dst, v14, 2 * v15);
    }
  }
LABEL_26:
  uint64_t v16 = *(unsigned int *)(a2 + 4);
  uint64_t v17 = &__dst[2 * v16];
  int v18 = &v17[2 * a4];
  uint64_t v19 = a4 & 0xFFFFFFC0;
  if ((a4 & 0xFFFFFFC0) == 0) {
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v37 = &v17[2 * v19];
  long long v38 = 0uLL;
  do
  {
    v131.val[0] = *(int8x16_t *)a3;
    int8x16_t v39 = *(int8x16_t *)(a3 + 16);
    v135.val[0] = *(int8x16_t *)(a3 + 32);
    uint16x8_t v40 = *(uint16x8_t *)(a3 + 48);
    a3 += 64;
    uint16x8_t result = v40;
    v135.val[1] = 0uLL;
    v139.val[0] = v39;
    v131.val[1] = 0uLL;
    uint64_t v41 = v17;
    vst2q_s8(v41, v131);
    v41 += 32;
    v139.val[1] = 0uLL;
    vst2q_s8(v41, v139);
    unint64_t v42 = v17 + 64;
    vst2q_s8(v42, v135);
    char v43 = v17 + 96;
    vst2q_s8(v43, *(int8x16x2_t *)result.i8);
    v17 += 128;
  }
  while (v17 != v37);
  uint64_t v17 = v37;
LABEL_30:
  if (v17 == v18) {
    goto LABEL_36;
  }
  unint64_t v44 = &__dst[2 * v16 + 2 * a4] - v17 - 2;
  if (v44 < 0xE
    || (unint64_t)v17 < a3 + (v44 >> 1) + 1 && a3 < (unint64_t)&v17[(v44 & 0xFFFFFFFFFFFFFFFELL) + 2])
  {
    long long v45 = v17;
    unint64_t v46 = (unsigned __int8 *)a3;
    goto LABEL_35;
  }
  uint64_t v63 = (v44 >> 1) + 1;
  if (v44 >= 0x3E)
  {
    unint64_t v64 = v63 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v86 = (uint8x8_t *)(a3 + 16);
    uint16x8_t v87 = (uint16x8_t *)(v17 + 32);
    unint64_t v88 = v63 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v89 = *(uint8x16_t *)v86[-2].i8;
      uint16x8_t v90 = vmovl_u8(*(uint8x8_t *)v89.i8);
      uint16x8_t result = vmovl_high_u8(v89);
      uint16x8_t v91 = vmovl_u8(*v86);
      uint16x8_t v92 = vmovl_high_u8(*(uint8x16_t *)v86->i8);
      v87[-2] = v90;
      v87[-1] = result;
      *uint16x8_t v87 = v91;
      v87[1] = v92;
      v87 += 4;
      v86 += 4;
      v88 -= 32;
    }
    while (v88);
    if (v63 == v64) {
      goto LABEL_36;
    }
    if ((v63 & 0x18) == 0)
    {
      unint64_t v46 = (unsigned __int8 *)(a3 + v64);
      long long v45 = &v17[2 * v64];
      do
      {
LABEL_35:
        __int16 v47 = *v46++;
        *(_WORD *)long long v45 = v47;
        v45 += 2;
      }
      while (v45 != v18);
      goto LABEL_36;
    }
  }
  else
  {
    unint64_t v64 = 0;
  }
  long long v45 = &v17[2 * (v63 & 0xFFFFFFFFFFFFFFF8)];
  unint64_t v46 = (unsigned __int8 *)(a3 + (v63 & 0xFFFFFFFFFFFFFFF8));
  long long v93 = (uint8x8_t *)(a3 + v64);
  long long v94 = (uint16x8_t *)&v17[2 * v64];
  unint64_t v95 = v64 - (v63 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v96 = *v93++;
    uint16x8_t result = vmovl_u8(v96);
    *v94++ = result;
    v95 += 8;
  }
  while (v95);
  if (v63 != (v63 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_35;
  }
LABEL_36:
  if (!a5)
  {
    uint64_t v50 = 0;
    unint64_t v51 = (unint64_t)v18;
    uint64_t v52 = &v18[2 * a7];
    uint64_t v53 = a7 & 0xFFFFFFC0;
    if ((a7 & 0xFFFFFFC0) == 0) {
      goto LABEL_67;
    }
    goto LABEL_64;
  }
  int8x16_t v48 = *(char **)(a5 + 8);
  uint64_t v49 = *(unsigned int *)(a5 + 4);
  if ((*(unsigned char *)(a5 + 16) & 4) != 0)
  {
    int16x8_t v54 = &v18[2 * v49];
    if (v49 < 0x40)
    {
      unint64_t v55 = (unint64_t)v18;
      if (v18 == v54) {
        goto LABEL_63;
      }
    }
    else
    {
      unint64_t v55 = (unint64_t)&v18[2 * (v49 & 0xFFFFFFC0)];
      long long v56 = 0uLL;
      unint64_t v57 = v18;
      do
      {
        v132.val[0] = *(int8x16_t *)v48;
        int8x16_t v58 = *((int8x16_t *)v48 + 1);
        v136.val[0] = (int8x16_t)*((_OWORD *)v48 + 2);
        uint16x8_t v59 = *((uint16x8_t *)v48 + 3);
        v48 += 64;
        uint16x8_t result = v59;
        v136.val[1] = 0uLL;
        v140.val[0] = v58;
        v132.val[1] = 0uLL;
        int8x16_t v60 = v57;
        vst2q_s8(v60, v132);
        v60 += 32;
        v140.val[1] = 0uLL;
        vst2q_s8(v60, v140);
        int8x16_t v61 = v57 + 64;
        vst2q_s8(v61, v136);
        unint64_t v62 = v57 + 96;
        vst2q_s8(v62, *(int8x16x2_t *)result.i8);
        v57 += 128;
      }
      while (v57 != (char *)v55);
      if ((char *)v55 == v54) {
        goto LABEL_63;
      }
    }
    unint64_t v65 = (unint64_t)&__dst[2 * v16 + 2 * v49 + 2 * a4 - v55 - 2];
    if (v65 < 0xE
      || (v55 < (unint64_t)&v48[(v65 >> 1) + 1]
        ? (BOOL v66 = (unint64_t)v48 >= (v65 & 0xFFFFFFFFFFFFFFFELL) + v55 + 2)
        : (BOOL v66 = 1),
          !v66))
    {
      int8x16_t v69 = (char *)v55;
      int8x16_t v70 = v48;
      goto LABEL_60;
    }
    uint64_t v67 = (v65 >> 1) + 1;
    if (v65 >= 0x3E)
    {
      unint64_t v68 = v67 & 0xFFFFFFFFFFFFFFE0;
      int16x8_t v119 = (uint8x8_t *)(v48 + 16);
      unint64_t v120 = (uint16x8_t *)(v55 + 32);
      unint64_t v121 = v67 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v122 = *(uint8x16_t *)v119[-2].i8;
        uint16x8_t v123 = vmovl_u8(*(uint8x8_t *)v122.i8);
        uint16x8_t result = vmovl_high_u8(v122);
        uint16x8_t v124 = vmovl_u8(*v119);
        uint16x8_t v125 = vmovl_high_u8(*(uint8x16_t *)v119->i8);
        v120[-2] = v123;
        v120[-1] = result;
        uint16x8_t *v120 = v124;
        v120[1] = v125;
        v120 += 4;
        v119 += 4;
        v121 -= 32;
      }
      while (v121);
      if (v67 == v68) {
        goto LABEL_63;
      }
      if ((v67 & 0x18) == 0)
      {
        int8x16_t v70 = &v48[v68];
        int8x16_t v69 = (char *)(v55 + 2 * v68);
        goto LABEL_60;
      }
    }
    else
    {
      unint64_t v68 = 0;
    }
    int8x16_t v69 = (char *)(v55 + 2 * (v67 & 0xFFFFFFFFFFFFFFF8));
    int8x16_t v70 = &v48[v67 & 0xFFFFFFFFFFFFFFF8];
    uint16x8_t v126 = (uint8x8_t *)&v48[v68];
    uint16x8_t v127 = (uint16x8_t *)(v55 + 2 * v68);
    unint64_t v128 = v68 - (v67 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v129 = *v126++;
      uint16x8_t result = vmovl_u8(v129);
      *v127++ = result;
      v128 += 8;
    }
    while (v128);
    if (v67 == (v67 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_63;
    }
    do
    {
LABEL_60:
      __int16 v71 = *v70++;
      *(_WORD *)int8x16_t v69 = v71;
      v69 += 2;
    }
    while (v69 != v54);
    goto LABEL_63;
  }
  if (v49)
  {
    if (v49 == 1) {
      *(_WORD *)int v18 = *(_WORD *)v48;
    }
    else {
      memcpy(v18, v48, 2 * v49);
    }
  }
LABEL_63:
  uint64_t v50 = *(unsigned int *)(a5 + 4);
  unint64_t v51 = (unint64_t)&v18[2 * v50];
  uint64_t v52 = (char *)(v51 + 2 * a7);
  uint64_t v53 = a7 & 0xFFFFFFC0;
  if ((a7 & 0xFFFFFFC0) == 0) {
    goto LABEL_67;
  }
LABEL_64:
  unint64_t v72 = v51 + 2 * v53;
  long long v73 = 0uLL;
  do
  {
    v133.val[0] = *(int8x16_t *)a6;
    int8x16_t v74 = *(int8x16_t *)(a6 + 16);
    v137.val[0] = *(int8x16_t *)(a6 + 32);
    uint16x8_t v75 = *(uint16x8_t *)(a6 + 48);
    a6 += 64;
    uint16x8_t result = v75;
    v137.val[1] = 0uLL;
    v141.val[0] = v74;
    v133.val[1] = 0uLL;
    uint16x8_t v76 = (char *)v51;
    vst2q_s8(v76, v133);
    v76 += 32;
    v141.val[1] = 0uLL;
    vst2q_s8(v76, v141);
    size_t v77 = (char *)(v51 + 64);
    vst2q_s8(v77, v137);
    int8x16x2_t v78 = (char *)(v51 + 96);
    vst2q_s8(v78, *(int8x16x2_t *)result.i8);
    v51 += 128;
  }
  while (v51 != v72);
  unint64_t v51 = v72;
LABEL_67:
  if ((char *)v51 == v52) {
    return result;
  }
  unint64_t v79 = (unint64_t)&__dst[2 * v16 + 2 * v50 + 2 * a4 + 2 * a7 - v51 - 2];
  if (v79 < 0xE || (v51 < a6 + (v79 >> 1) + 1 ? (BOOL v80 = a6 >= (v79 & 0xFFFFFFFFFFFFFFFELL) + v51 + 2) : (BOOL v80 = 1), !v80))
  {
    unint64_t v83 = (char *)v51;
    BOOL v84 = (unsigned __int8 *)a6;
    goto LABEL_77;
  }
  uint64_t v81 = (v79 >> 1) + 1;
  if (v79 >= 0x3E)
  {
    unint64_t v82 = v81 & 0xFFFFFFFFFFFFFFE0;
    uint16x8_t v97 = (uint8x8_t *)(a6 + 16);
    unint64_t v98 = (uint16x8_t *)(v51 + 32);
    unint64_t v99 = v81 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v100 = *(uint8x16_t *)v97[-2].i8;
      uint16x8_t v101 = vmovl_u8(*(uint8x8_t *)v100.i8);
      uint16x8_t result = vmovl_high_u8(v100);
      uint16x8_t v102 = vmovl_u8(*v97);
      uint16x8_t v103 = vmovl_high_u8(*(uint8x16_t *)v97->i8);
      v98[-2] = v101;
      v98[-1] = result;
      uint16x8_t *v98 = v102;
      v98[1] = v103;
      v98 += 4;
      v97 += 4;
      v99 -= 32;
    }
    while (v99);
    if (v81 == v82) {
      return result;
    }
    if ((v81 & 0x18) == 0)
    {
      BOOL v84 = (unsigned __int8 *)(a6 + v82);
      unint64_t v83 = (char *)(v51 + 2 * v82);
      do
      {
LABEL_77:
        __int16 v85 = *v84++;
        *(_WORD *)unint64_t v83 = v85;
        v83 += 2;
      }
      while (v83 != v52);
      return result;
    }
  }
  else
  {
    unint64_t v82 = 0;
  }
  unint64_t v83 = (char *)(v51 + 2 * (v81 & 0xFFFFFFFFFFFFFFF8));
  BOOL v84 = (unsigned __int8 *)(a6 + (v81 & 0xFFFFFFFFFFFFFFF8));
  __int16 v104 = (uint8x8_t *)(a6 + v82);
  size_t v105 = (uint16x8_t *)(v51 + 2 * v82);
  unint64_t v106 = v82 - (v81 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v107 = *v104++;
    uint16x8_t result = vmovl_u8(v107);
    *v105++ = result;
    v106 += 8;
  }
  while (v106);
  if (v81 != (v81 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_77;
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, int *a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, unint64_t *a7)
{
  uint64_t v13 = *a4;
  uint64_t v14 = *a6;
  uint64_t v15 = *((void *)a1 + 1);
  if ((v15 || (uint64_t v15 = *(void *)a1) != 0) && (*(unsigned char *)(v15 + 16) & 4) == 0
    || v13 && (*(unsigned char *)(v13 + 16) & 4) == 0
    || v14 && (*(unsigned char *)(v14 + 16) & 4) == 0)
  {
    uint64_t v16 = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!v16) {
      return;
    }
    uint64_t v17 = v16;
    int v18 = *a2;
    unint64_t v19 = *(void *)a3;
    uint64_t v20 = *(unsigned int *)(a3 + 8);
    uint64_t v21 = *a4;
    unint64_t v22 = *a5;
    unint64_t v23 = a5[1];
    uint64_t v24 = *a6;
    unint64_t v25 = *a7;
    unint64_t v26 = a7[1];
    uint64_t v27 = (4 * v18);
    if (v27)
    {
      memset_pattern16(v16, asc_1826CF510, 2 * (4 * v18));
      unint64_t v28 = (unint64_t)&v17[2 * v27];
      uint64_t v29 = (char *)(v28 + 2 * v20);
      uint64_t v30 = v20 & 0xFFFFFFC0;
      if ((v20 & 0xFFFFFFC0) == 0) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v28 = (unint64_t)v16;
      uint64_t v29 = &v16[2 * v20];
      uint64_t v30 = v20 & 0xFFFFFFC0;
      if ((v20 & 0xFFFFFFC0) == 0) {
        goto LABEL_21;
      }
    }
    unint64_t v43 = v28 + 2 * v30;
    long long v44 = 0uLL;
    do
    {
      v68.val[0] = *(int8x16_t *)v19;
      int8x16_t v45 = *(int8x16_t *)(v19 + 16);
      v69.val[0] = *(int8x16_t *)(v19 + 32);
      long long v46 = *(_OWORD *)(v19 + 48);
      v19 += 64;
      long long v47 = v46;
      v69.val[1] = 0uLL;
      v70.val[0] = v45;
      v68.val[1] = 0uLL;
      int8x16_t v48 = (char *)v28;
      vst2q_s8(v48, v68);
      v48 += 32;
      v70.val[1] = 0uLL;
      vst2q_s8(v48, v70);
      uint64_t v49 = (char *)(v28 + 64);
      vst2q_s8(v49, v69);
      uint64_t v50 = (char *)(v28 + 96);
      vst2q_s8(v50, *(int8x16x2_t *)(&v44 - 1));
      v28 += 128;
    }
    while (v28 != v43);
    unint64_t v28 = v43;
LABEL_21:
    if ((char *)v28 == v29) {
      goto LABEL_27;
    }
    unint64_t v51 = (unint64_t)&v17[2 * v27 + 2 * v20 - v28 - 2];
    if (v51 < 0xE || v28 < v19 + (v51 >> 1) + 1 && v19 < (v51 & 0xFFFFFFFFFFFFFFFELL) + v28 + 2)
    {
      uint64_t v52 = (char *)v28;
      uint64_t v53 = (unsigned __int8 *)v19;
      goto LABEL_26;
    }
    uint64_t v55 = (v51 >> 1) + 1;
    if (v51 >= 0x3E)
    {
      unint64_t v56 = v55 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v57 = (uint8x8_t *)(v19 + 16);
      int8x16_t v58 = (uint16x8_t *)(v28 + 32);
      unint64_t v59 = v55 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v60 = *(uint8x16_t *)v57[-2].i8;
        uint16x8_t v61 = vmovl_u8(*v57);
        uint16x8_t v62 = vmovl_high_u8(*(uint8x16_t *)v57->i8);
        v58[-2] = vmovl_u8(*(uint8x8_t *)v60.i8);
        v58[-1] = vmovl_high_u8(v60);
        uint16x8_t *v58 = v61;
        v58[1] = v62;
        v58 += 4;
        v57 += 4;
        v59 -= 32;
      }
      while (v59);
      if (v55 == v56) {
        goto LABEL_27;
      }
      if ((v55 & 0x18) == 0)
      {
        uint64_t v53 = (unsigned __int8 *)(v19 + v56);
        uint64_t v52 = (char *)(v28 + 2 * v56);
        do
        {
LABEL_26:
          __int16 v54 = *v53++;
          *(_WORD *)uint64_t v52 = v54;
          v52 += 2;
        }
        while (v52 != v29);
        goto LABEL_27;
      }
    }
    else
    {
      unint64_t v56 = 0;
    }
    uint64_t v52 = (char *)(v28 + 2 * (v55 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v53 = (unsigned __int8 *)(v19 + (v55 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v63 = (uint8x8_t *)(v19 + v56);
    unint64_t v64 = (uint16x8_t *)(v28 + 2 * v56);
    unint64_t v65 = v56 - (v55 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v66 = *v63++;
      *v64++ = vmovl_u8(v66);
      v65 += 8;
    }
    while (v65);
    if (v55 != (v55 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_26;
    }
LABEL_27:
    WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v29, v21, v22, v23, v24, v25, v26);
    return;
  }
  BOOL v31 = (unsigned char *)MEMORY[0x18530ACF0]();
  if (!v31) {
    return;
  }
  uint64_t v32 = v31;
  int v33 = *a2;
  char v34 = *(unsigned char **)a3;
  size_t v35 = *(unsigned int *)(a3 + 8);
  uint64_t v36 = *a4;
  long long v38 = (__int8 *)*a5;
  unint64_t v37 = a5[1];
  uint64_t v39 = *a6;
  uint64_t v41 = (__int8 *)*a7;
  unint64_t v40 = a7[1];
  uint64_t v42 = (4 * v33);
  if (v42)
  {
    memset(v31, 32, (4 * v33));
    v32 += v42;
    if (!v35) {
      goto LABEL_36;
    }
LABEL_33:
    if (v35 == 1) {
      unsigned char *v32 = *v34;
    }
    else {
      memcpy(v32, v34, v35);
    }
    goto LABEL_36;
  }
  if (v35) {
    goto LABEL_33;
  }
LABEL_36:
  WTF::stringTypeAdapterAccumulator<unsigned char,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((int8x16_t *)&v32[v35], v36, v38, v37, v39, v41, v40);
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<unsigned char,void>>(WTF::StringBuilder *a1, unint64_t *a2, unsigned __int8 *a3)
{
  int v5 = 0;
  unsigned int v6 = *a3;
  int v7 = -1;
  do
  {
    ++v5;
    --v7;
    BOOL v8 = v6 > 9;
    v6 /= 0xAu;
  }
  while (v8);
  uint64_t v9 = *((void *)a1 + 1);
  if (!v9 && (uint64_t v9 = *(void *)a1) == 0 || (*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    uint16x8_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (result)
    {
      uint64_t v24 = result;
      unint64_t v25 = a2[1];
      uint64_t v26 = v25;
      unsigned __int8 v27 = *a3;
      if (v25)
      {
        unint64_t v28 = (unsigned char *)*a2;
        if (v25 == 1) {
          *uint16x8_t result = *v28;
        }
        else {
          uint16x8_t result = memcpy(result, v28, a2[1]);
        }
      }
      uint64_t v29 = 0;
      do
      {
        unsigned int v30 = v27;
        v67[v29-- + 3] = (v27 % 0xAu) | 0x30;
        v27 /= 0xAu;
      }
      while (v30 > 9);
      if (v29 + 5 <= 4) {
        return memcpy(&v24[v26], &v67[v29 + 4], -v29);
      }
    }
    return result;
  }
  uint16x8_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  unint64_t v12 = *a2;
  unint64_t v11 = a2[1];
  unsigned __int8 v13 = *a3;
  uint64_t v14 = &result[2 * v11];
  if ((v11 & 0xFFFFFFC0) == 0)
  {
    unint64_t v15 = (unint64_t)result;
    unint64_t v11 = a2[1];
    if (result == (unsigned char *)v14) {
      goto LABEL_32;
    }
LABEL_22:
    unint64_t v31 = (unint64_t)&result[2 * v11 - v15 - 2];
    if (v31 < 0xE
      || (v15 < v12 + (v31 >> 1) + 1 ? (BOOL v32 = v12 >= (v31 & 0xFFFFFFFFFFFFFFFELL) + v15 + 2) : (BOOL v32 = 1), !v32))
    {
      size_t v35 = (_WORD *)v15;
      uint64_t v36 = (unsigned __int8 *)v12;
      goto LABEL_31;
    }
    uint64_t v33 = (v31 >> 1) + 1;
    if (v31 >= 0x3E)
    {
      unint64_t v34 = v33 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v57 = (uint8x8_t *)(v12 + 16);
      int8x16_t v58 = (uint16x8_t *)(v15 + 32);
      unint64_t v59 = v33 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v60 = *(uint8x16_t *)v57[-2].i8;
        uint16x8_t v61 = vmovl_u8(*v57);
        uint16x8_t v62 = vmovl_high_u8(*(uint8x16_t *)v57->i8);
        v58[-2] = vmovl_u8(*(uint8x8_t *)v60.i8);
        v58[-1] = vmovl_high_u8(v60);
        uint16x8_t *v58 = v61;
        v58[1] = v62;
        v58 += 4;
        v57 += 4;
        v59 -= 32;
      }
      while (v59);
      if (v33 == v34) {
        goto LABEL_32;
      }
      if ((v33 & 0x18) == 0)
      {
        uint64_t v36 = (unsigned __int8 *)(v12 + v34);
        size_t v35 = (_WORD *)(v15 + 2 * v34);
        goto LABEL_31;
      }
    }
    else
    {
      unint64_t v34 = 0;
    }
    size_t v35 = (_WORD *)(v15 + 2 * (v33 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v36 = (unsigned __int8 *)(v12 + (v33 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v63 = (uint8x8_t *)(v12 + v34);
    unint64_t v64 = (uint16x8_t *)(v15 + 2 * v34);
    unint64_t v65 = v34 - (v33 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v66 = *v63++;
      *v64++ = vmovl_u8(v66);
      v65 += 8;
    }
    while (v65);
    if (v33 == (v33 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_32;
    }
    do
    {
LABEL_31:
      __int16 v37 = *v36++;
      *v35++ = v37;
    }
    while (v35 != v14);
    goto LABEL_32;
  }
  unint64_t v15 = (unint64_t)&result[2 * (a2[1] & 0xFFFFFFC0)];
  long long v16 = 0uLL;
  uint64_t v17 = result;
  do
  {
    v69.val[0] = *(int8x16_t *)v12;
    int8x16_t v18 = *(int8x16_t *)(v12 + 16);
    v70.val[0] = *(int8x16_t *)(v12 + 32);
    long long v19 = *(_OWORD *)(v12 + 48);
    v12 += 64;
    long long v20 = v19;
    v70.val[1] = 0uLL;
    v71.val[0] = v18;
    v69.val[1] = 0uLL;
    uint64_t v21 = v17;
    vst2q_s8(v21, v69);
    v21 += 32;
    v71.val[1] = 0uLL;
    vst2q_s8(v21, v71);
    unint64_t v22 = v17 + 64;
    vst2q_s8(v22, v70);
    unint64_t v23 = v17 + 96;
    vst2q_s8(v23, *(int8x16x2_t *)(&v16 - 1));
    v17 += 128;
  }
  while (v17 != (char *)v15);
  unint64_t v11 = v11;
  if ((_WORD *)v15 != v14) {
    goto LABEL_22;
  }
LABEL_32:
  uint64_t v38 = 0;
  uint64_t v39 = 4;
  uint64_t v40 = 1;
  do
  {
    uint64_t v41 = v39;
    uint64_t v42 = v38;
    uint64_t v43 = v40;
    unsigned int v44 = v13;
    v68[--v39] = (v13 % 0xAu) | 0x30;
    ++v38;
    ++v40;
    v13 /= 0xAu;
  }
  while (v44 > 9);
  if (v41 <= 4)
  {
    unint64_t v45 = v42 + 1;
    if ((unint64_t)(v42 + 1) < 8)
    {
      uint64_t v46 = v39;
      goto LABEL_56;
    }
    if (v45 >= 0x20)
    {
      unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v48 = (uint16x8_t *)&result[2 * v11 + 32];
      unint64_t v49 = v43 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v50 = (uint8x8_t *)&v68[-v42 + 19];
      do
      {
        uint8x16_t v51 = *(uint8x16_t *)v50[-2].i8;
        uint16x8_t v52 = vmovl_u8(*v50);
        uint16x8_t v53 = vmovl_high_u8(*(uint8x16_t *)v50->i8);
        v48[-2] = vmovl_u8(*(uint8x8_t *)v51.i8);
        v48[-1] = vmovl_high_u8(v51);
        uint16x8_t *v48 = v52;
        v48[1] = v53;
        v48 += 4;
        v50 += 4;
        v49 -= 32;
      }
      while (v49);
      if (v45 == v47) {
        return result;
      }
      if ((v45 & 0x18) == 0)
      {
        v14 += v47;
        uint64_t v46 = v39 + v47;
        do
LABEL_56:
          *v14++ = v68[v46++];
        while (v46 != 4);
        return result;
      }
    }
    else
    {
      unint64_t v47 = 0;
    }
    uint64_t v46 = v39 + (v45 & 0xFFFFFFFFFFFFFFF8);
    v14 += v45 & 0xFFFFFFFFFFFFFFF8;
    __int16 v54 = (uint16x8_t *)&result[2 * v47 + 2 * v11];
    unint64_t v55 = v47 - (v43 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v56 = &v68[v47];
    do
    {
      *v54++ = vmovl_u8(*(uint8x8_t *)&v56[v39]);
      v56 += 8;
      v55 += 8;
    }
    while (v55);
    if (v45 != (v45 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_56;
    }
  }
  return result;
}

_DWORD *WTF::HashMapTranslator<WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::String>>::translate<WTF::String const&,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::HashTableAddResult<WTF::HashTableIterator<WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>,WTF::String,WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::ConstantValue>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>> WTF::HashMap<WTF::String,WGSL::ConstantValue,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::ConstantValue>,WTF::HashTableTraits>::inlineAdd<WTF::String const&,WGSL::ConstantValue const&>(WTF::String const&,WGSL::ConstantValue const&)::{lambda(void)#1}>(uint64_t a1, _DWORD **a2, uint64_t *a3)
{
  int v5 = *a2;
  if (*a2) {
    *v5 += 2;
  }
  uint16x8_t result = *(_DWORD **)a1;
  *(void *)a1 = v5;
  if (result)
  {
    if (*result == 2) {
      uint16x8_t result = (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  uint64_t v7 = *a3;
  v10[0] = 0;
  int v11 = -1;
  uint64_t v8 = *(unsigned int *)(v7 + 16);
  if (v8 == -1)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 24);
    if (v9 != -1)
    {
      uint16x8_t result = (_DWORD *)((uint64_t (*)(uint64_t *, uint64_t))off_1ECABDE78[v9])(&v12, a1 + 8);
      *(_DWORD *)(a1 + 24) = -1;
    }
  }
  else
  {
    ((void (*)(uint64_t *, unsigned char *))off_1ECABDED0[v8])(&v12, v10);
    int v11 = v8;
    uint64_t v12 = a1 + 8;
    uint16x8_t result = (_DWORD *)((uint64_t (*)(uint64_t *, uint64_t, unsigned char *))off_1ECABDF28[v8])(&v12, a1 + 8, v10);
  }
  if (v11 != -1) {
    return (_DWORD *)((uint64_t (*)(uint64_t *, unsigned char *))off_1ECABDE78[v11])(&v12, v10);
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = *a3;
  if ((*a3 & 0x8000000000000000) != 0)
  {
    unint64_t v10 = -(uint64_t)v7;
    int v11 = 1;
    do
    {
      ++v11;
      BOOL v12 = v10 >= 0xA;
      v10 /= 0xAuLL;
    }
    while (v12);
  }
  else
  {
    int v8 = 0;
    do
    {
      ++v8;
      BOOL v9 = v7 > 9;
      v7 /= 0xAuLL;
    }
    while (v9);
  }
  uint64_t v13 = *((void *)a1 + 1);
  if ((v13 || (uint64_t v13 = *(void *)a1) != 0) && (*(unsigned char *)(v13 + 16) & 4) == 0)
  {
    unint64_t v14 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (v14)
    {
      unint64_t v15 = *a2;
      unint64_t v16 = a2[1];
      unint64_t v17 = *a3;
      unint64_t v18 = *a4;
      unint64_t v19 = a4[1];
      WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(v14, v15, v16, v17, v18, v19);
    }
    return;
  }
  long long v20 = (unsigned char *)MEMORY[0x18530ACF0]();
  if (!v20) {
    return;
  }
  uint64_t v21 = v20;
  unint64_t v22 = a2[1];
  uint64_t v23 = v22;
  unint64_t v24 = *a3;
  unint64_t v25 = (char *)*a4;
  size_t v26 = *((unsigned int *)a4 + 2);
  if (!v22)
  {
LABEL_18:
    unint64_t v28 = &v20[v22];
    uint64_t v29 = 0;
    if ((v24 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
LABEL_24:
    unint64_t v33 = -(uint64_t)v24;
    do
    {
      v38[v29-- + 24] = (v33 % 0xA) | 0x30;
      BOOL v9 = v33 > 9;
      v33 /= 0xAuLL;
    }
    while (v9);
    uint64_t v34 = v29 + 24;
    unint64_t v31 = &v38[v29 + 24];
    *unint64_t v31 = 45;
    if (v29 + 26 > 26) {
      goto LABEL_31;
    }
    if (v34 <= 24) {
      uint64_t v34 = 24;
    }
    size_t v32 = v34 - v29 - 23;
    goto LABEL_30;
  }
  unsigned __int8 v27 = (unsigned char *)*a2;
  if (v22 == 1)
  {
    *long long v20 = *v27;
    goto LABEL_18;
  }
  memcpy(v20, v27, a2[1]);
  unint64_t v28 = &v21[v23];
  uint64_t v29 = 0;
  if ((v24 & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
LABEL_19:
  unint64_t v30 = v24;
  do
  {
    v38[v29-- + 24] = (v30 % 0xA) | 0x30;
    BOOL v9 = v30 > 9;
    v30 /= 0xAuLL;
  }
  while (v9);
  if (v29 + 26 > 25) {
    goto LABEL_31;
  }
  unint64_t v31 = &v38[v29 + 25];
  size_t v32 = -v29;
LABEL_30:
  memcpy(v28, v31, v32);
LABEL_31:
  if ((v24 & 0x8000000000000000) != 0)
  {
    unint64_t v36 = -(uint64_t)v24;
    unsigned int v35 = 1;
    do
    {
      ++v35;
      BOOL v12 = v36 >= 0xA;
      v36 /= 0xAuLL;
    }
    while (v12);
  }
  else
  {
    unsigned int v35 = 0;
    do
    {
      ++v35;
      BOOL v9 = v24 > 9;
      v24 /= 0xAuLL;
    }
    while (v9);
  }
  if (v26)
  {
    __int16 v37 = &v28[v35];
    if (v26 == 1)
    {
      *__int16 v37 = *v25;
    }
    else
    {
      memcpy(v37, v25, v26);
    }
  }
}

uint16x8_t WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(unint64_t a1, unint64_t a2, unsigned int a3, unint64_t a4, unint64_t a5, unsigned int a6)
{
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  unsigned int v6 = (_WORD *)(a1 + 2 * a3);
  if ((a3 & 0xFFFFFFC0) == 0)
  {
    unint64_t v7 = a1;
    uint64_t v16 = a3;
    if ((_WORD *)a1 == v6) {
      goto LABEL_17;
    }
LABEL_7:
    unint64_t v17 = a1 + 2 * v16 - v7 - 2;
    if (v17 < 0xE || (v7 < a2 + (v17 >> 1) + 1 ? (BOOL v18 = a2 >= (v17 & 0xFFFFFFFFFFFFFFFELL) + v7 + 2) : (BOOL v18 = 1), !v18))
    {
      uint64_t v21 = (_WORD *)v7;
      unint64_t v22 = (unsigned __int8 *)a2;
      goto LABEL_16;
    }
    uint64_t v19 = (v17 >> 1) + 1;
    if (v17 >= 0x3E)
    {
      unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v44 = (uint8x8_t *)(a2 + 16);
      unint64_t v45 = (uint16x8_t *)(v7 + 32);
      unint64_t v46 = v19 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v47 = *(uint8x16_t *)v44[-2].i8;
        uint16x8_t v48 = vmovl_u8(*(uint8x8_t *)v47.i8);
        uint16x8_t result = vmovl_high_u8(v47);
        uint16x8_t v49 = vmovl_u8(*v44);
        uint16x8_t v50 = vmovl_high_u8(*(uint8x16_t *)v44->i8);
        v45[-2] = v48;
        v45[-1] = result;
        uint16x8_t *v45 = v49;
        v45[1] = v50;
        v45 += 4;
        v44 += 4;
        v46 -= 32;
      }
      while (v46);
      if (v19 == v20) {
        goto LABEL_17;
      }
      if ((v19 & 0x18) == 0)
      {
        unint64_t v22 = (unsigned __int8 *)(a2 + v20);
        uint64_t v21 = (_WORD *)(v7 + 2 * v20);
        goto LABEL_16;
      }
    }
    else
    {
      unint64_t v20 = 0;
    }
    uint64_t v21 = (_WORD *)(v7 + 2 * (v19 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v22 = (unsigned __int8 *)(a2 + (v19 & 0xFFFFFFFFFFFFFFF8));
    uint8x16_t v51 = (uint8x8_t *)(a2 + v20);
    uint16x8_t v52 = (uint16x8_t *)(v7 + 2 * v20);
    unint64_t v53 = v20 - (v19 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v54 = *v51++;
      uint16x8_t result = vmovl_u8(v54);
      *v52++ = result;
      v53 += 8;
    }
    while (v53);
    if (v19 == (v19 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_17;
    }
    do
    {
LABEL_16:
      __int16 v23 = *v22++;
      *v21++ = v23;
    }
    while (v21 != v6);
    goto LABEL_17;
  }
  unint64_t v7 = a1 + 2 * (a3 & 0xFFFFFFC0);
  long long v8 = 0uLL;
  BOOL v9 = (char *)a1;
  do
  {
    v111.val[0] = *(int8x16_t *)a2;
    int8x16_t v10 = *(int8x16_t *)(a2 + 16);
    v113.val[0] = *(int8x16_t *)(a2 + 32);
    uint16x8_t v11 = *(uint16x8_t *)(a2 + 48);
    a2 += 64;
    uint16x8_t result = v11;
    v113.val[1] = 0uLL;
    v115.val[0] = v10;
    v111.val[1] = 0uLL;
    uint64_t v13 = v9;
    vst2q_s8(v13, v111);
    v13 += 32;
    v115.val[1] = 0uLL;
    vst2q_s8(v13, v115);
    unint64_t v14 = v9 + 64;
    vst2q_s8(v14, v113);
    unint64_t v15 = v9 + 96;
    vst2q_s8(v15, *(int8x16x2_t *)(&v8 - 1));
    v9 += 128;
  }
  while (v9 != (char *)v7);
  uint64_t v16 = a3;
  if ((_WORD *)v7 != v6) {
    goto LABEL_7;
  }
LABEL_17:
  if ((a4 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 25;
    uint64_t v26 = 1;
    unint64_t v27 = a4;
    do
    {
      uint64_t v28 = v25;
      uint64_t v29 = v24;
      uint64_t v30 = v26;
      v108[--v25] = (v27 % 0xA) | 0x30;
      ++v24;
      ++v26;
      BOOL v31 = v27 > 9;
      v27 /= 0xAuLL;
    }
    while (v31);
    if (v28 > 25) {
      goto LABEL_67;
    }
    unint64_t v32 = v29 + 1;
    if ((unint64_t)(v29 + 1) < 8)
    {
      uint64_t v33 = v25;
      uint64_t v34 = v6;
      goto LABEL_63;
    }
    if (v32 >= 0x20)
    {
      unint64_t v43 = v32 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v55 = (uint16x8_t *)(a1 + 2 * v16 + 32);
      unint64_t v56 = v30 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v57 = (uint8x8_t *)&v108[-v29 + 40];
      do
      {
        uint8x16_t v58 = *(uint8x16_t *)v57[-2].i8;
        uint16x8_t v59 = vmovl_u8(*(uint8x8_t *)v58.i8);
        uint16x8_t result = vmovl_high_u8(v58);
        uint16x8_t v60 = vmovl_u8(*v57);
        uint16x8_t v61 = vmovl_high_u8(*(uint8x16_t *)v57->i8);
        v55[-2] = v59;
        v55[-1] = result;
        uint16x8_t *v55 = v60;
        v55[1] = v61;
        v55 += 4;
        v57 += 4;
        v56 -= 32;
      }
      while (v56);
      if (v32 == v43) {
        goto LABEL_67;
      }
      if ((v32 & 0x18) == 0)
      {
        uint64_t v34 = &v6[v43];
        uint64_t v33 = v25 + v43;
        do
LABEL_63:
          *v34++ = v108[v33++];
        while (v33 != 25);
        goto LABEL_67;
      }
    }
    else
    {
      unint64_t v43 = 0;
    }
    uint64_t v33 = v25 + (v32 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = &v6[v32 & 0xFFFFFFFFFFFFFFF8];
    uint16x8_t v62 = (uint16x8_t *)(a1 + 2 * v43 + 2 * v16);
    unint64_t v63 = v43 - (v30 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v64 = &v108[v43];
    do
    {
      uint16x8_t result = vmovl_u8(*(uint8x8_t *)&v64[v25]);
      *v62++ = result;
      v64 += 8;
      v63 += 8;
    }
    while (v63);
    if (v32 == (v32 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_67;
    }
    goto LABEL_63;
  }
  uint64_t v35 = 0;
  unint64_t v36 = -(uint64_t)a4;
  do
  {
    v108[v35-- + 24] = (v36 % 0xA) | 0x30;
    BOOL v31 = v36 > 9;
    v36 /= 0xAuLL;
  }
  while (v31);
  v108[v35 + 24] = 45;
  if (v35 + 26 > 26) {
    goto LABEL_67;
  }
  uint64_t v37 = v35 + 24;
  uint64_t v38 = 24;
  if (v35 + 24 > 24) {
    uint64_t v38 = v35 + 24;
  }
  unint64_t v39 = v38 - v35 - 23;
  uint64_t v40 = (_WORD *)(a1 + 2 * a3);
  if (v39 < 8) {
    goto LABEL_66;
  }
  uint64_t v41 = -23 - v35;
  if (v39 < 0x20)
  {
    uint64_t v42 = 0;
LABEL_55:
    v37 += v39 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = &v6[v39 & 0xFFFFFFFFFFFFFFF8];
    long long v73 = (uint16x8_t *)(a1 + 2 * v42 + 2 * v16);
    uint64_t v74 = v35 + 24;
    BOOL v31 = v35 + 24 <= 24;
    uint64_t v75 = 24;
    if (!v31) {
      uint64_t v75 = v74;
    }
    uint64_t v76 = v42 - ((v75 + v41) & 0xFFFFFFFFFFFFFFF8);
    size_t v77 = (uint8x8_t *)&v108[v42 + v74];
    do
    {
      uint8x8_t v78 = *v77++;
      uint16x8_t result = vmovl_u8(v78);
      *v73++ = result;
      v76 += 8;
    }
    while (v76);
    if (v39 == (v39 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_67;
    }
    do
    {
LABEL_66:
      *v40++ = v108[v37];
      BOOL v31 = v37++ < 24;
    }
    while (v31);
    goto LABEL_67;
  }
  uint64_t v42 = v39 & 0xFFFFFFFFFFFFFFE0;
  unint64_t v65 = (uint16x8_t *)(a1 + 2 * v16 + 32);
  uint64_t v66 = v35 + 24;
  if (v35 + 24 <= 24) {
    uint64_t v66 = 24;
  }
  unint64_t v67 = (v66 + v41) & 0xFFFFFFFFFFFFFFE0;
  int8x16x2_t v68 = (uint8x8_t *)((char *)&vars0 + v35 + 7);
  do
  {
    uint8x16_t v69 = *(uint8x16_t *)v68[-2].i8;
    uint16x8_t v70 = vmovl_u8(*(uint8x8_t *)v69.i8);
    uint16x8_t result = vmovl_high_u8(v69);
    uint16x8_t v71 = vmovl_u8(*v68);
    uint16x8_t v72 = vmovl_high_u8(*(uint8x16_t *)v68->i8);
    v65[-2] = v70;
    v65[-1] = result;
    uint16x8_t *v65 = v71;
    v65[1] = v72;
    v65 += 4;
    v68 += 4;
    v67 -= 32;
  }
  while (v67);
  if (v39 != v42)
  {
    if ((v39 & 0x18) == 0)
    {
      uint64_t v40 = &v6[v42];
      v37 += v42;
      goto LABEL_66;
    }
    goto LABEL_55;
  }
LABEL_67:
  if ((a4 & 0x8000000000000000) != 0)
  {
    unint64_t v80 = -(uint64_t)a4;
    unsigned int v79 = 1;
    do
    {
      ++v79;
      BOOL v18 = v80 >= 0xA;
      v80 /= 0xAuLL;
    }
    while (v18);
  }
  else
  {
    unsigned int v79 = 0;
    do
    {
      ++v79;
      BOOL v31 = a4 > 9;
      a4 /= 0xAuLL;
    }
    while (v31);
  }
  unint64_t v81 = (unint64_t)&v6[v79];
  unint64_t v82 = (_WORD *)(v81 + 2 * a6);
  if ((a6 & 0xFFFFFFC0) != 0)
  {
    unint64_t v83 = v81 + 2 * (a6 & 0xFFFFFFC0);
    long long v84 = 0uLL;
    do
    {
      v112.val[0] = *(int8x16_t *)a5;
      int8x16_t v85 = *(int8x16_t *)(a5 + 16);
      v114.val[0] = *(int8x16_t *)(a5 + 32);
      uint16x8_t v86 = *(uint16x8_t *)(a5 + 48);
      a5 += 64;
      uint16x8_t result = v86;
      v114.val[1] = 0uLL;
      v116.val[0] = v85;
      v112.val[1] = 0uLL;
      uint16x8_t v87 = (char *)v81;
      vst2q_s8(v87, v112);
      v87 += 32;
      v116.val[1] = 0uLL;
      vst2q_s8(v87, v116);
      unint64_t v88 = (char *)(v81 + 64);
      vst2q_s8(v88, v114);
      uint8x16_t v89 = (char *)(v81 + 96);
      vst2q_s8(v89, *(int8x16x2_t *)result.i8);
      v81 += 128;
    }
    while (v81 != v83);
    unint64_t v81 = v83;
  }
  if ((_WORD *)v81 != v82)
  {
    unint64_t v90 = a1 + 2 * (v16 + v79 + a6) - v81 - 2;
    if (v90 < 0xE
      || (v81 < a5 + (v90 >> 1) + 1 ? (BOOL v91 = a5 >= (v90 & 0xFFFFFFFFFFFFFFFELL) + v81 + 2) : (BOOL v91 = 1), !v91))
    {
      long long v94 = (_WORD *)v81;
      unint64_t v95 = (unsigned __int8 *)a5;
      goto LABEL_87;
    }
    uint64_t v92 = (v90 >> 1) + 1;
    if (v90 >= 0x3E)
    {
      unint64_t v93 = v92 & 0xFFFFFFFFFFFFFFE0;
      uint16x8_t v97 = (uint8x8_t *)(a5 + 16);
      unint64_t v98 = (uint16x8_t *)(v81 + 32);
      unint64_t v99 = v92 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v100 = *(uint8x16_t *)v97[-2].i8;
        uint16x8_t v101 = vmovl_u8(*(uint8x8_t *)v100.i8);
        uint16x8_t result = vmovl_high_u8(v100);
        uint16x8_t v102 = vmovl_u8(*v97);
        uint16x8_t v103 = vmovl_high_u8(*(uint8x16_t *)v97->i8);
        v98[-2] = v101;
        v98[-1] = result;
        uint16x8_t *v98 = v102;
        v98[1] = v103;
        v98 += 4;
        v97 += 4;
        v99 -= 32;
      }
      while (v99);
      if (v92 == v93) {
        return result;
      }
      if ((v92 & 0x18) == 0)
      {
        unint64_t v95 = (unsigned __int8 *)(a5 + v93);
        long long v94 = (_WORD *)(v81 + 2 * v93);
        do
        {
LABEL_87:
          __int16 v96 = *v95++;
          *v94++ = v96;
        }
        while (v94 != v82);
        return result;
      }
    }
    else
    {
      unint64_t v93 = 0;
    }
    long long v94 = (_WORD *)(v81 + 2 * (v92 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v95 = (unsigned __int8 *)(a5 + (v92 & 0xFFFFFFFFFFFFFFF8));
    __int16 v104 = (uint8x8_t *)(a5 + v93);
    size_t v105 = (uint16x8_t *)(v81 + 2 * v93);
    unint64_t v106 = v93 - (v92 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v107 = *v104++;
      uint16x8_t result = vmovl_u8(v107);
      *v105++ = result;
      v106 += 8;
    }
    while (v106);
    if (v92 != (v92 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_87;
    }
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *((void *)a1 + 1);
  if (!v7 && (uint64_t v7 = *(void *)a1) == 0 || (*(unsigned char *)(v7 + 16) & 4) != 0)
  {
    uint16x8_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    uint64_t v25 = result;
    unint64_t v26 = a2[1];
    uint64_t v27 = v26;
    uint64_t v28 = *(unsigned char **)a3;
    size_t v29 = *(unsigned int *)(a3 + 8);
    uint64_t v30 = *(unsigned char **)a4;
    size_t v31 = *(unsigned int *)(a4 + 8);
    if (v26)
    {
      unint64_t v32 = (unsigned char *)*a2;
      if (v26 != 1)
      {
        uint16x8_t result = memcpy(result, v32, a2[1]);
        uint64_t v33 = &v25[v27];
        if (!v29) {
          goto LABEL_19;
        }
LABEL_17:
        if (v29 != 1)
        {
          uint16x8_t result = memcpy(v33, v28, v29);
          if (!v31) {
            return result;
          }
          goto LABEL_22;
        }
        *uint64_t v33 = *v28;
LABEL_19:
        if (!v31) {
          return result;
        }
LABEL_22:
        uint16x8_t result = &v33[v29];
        if (v31 == 1)
        {
          *uint16x8_t result = *v30;
        }
        else
        {
          return memcpy(result, v30, v31);
        }
        return result;
      }
      *uint16x8_t result = *v32;
    }
    uint64_t v33 = &result[v26];
    if (!v29) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  uint16x8_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  unint64_t v10 = *a2;
  unint64_t v9 = a2[1];
  unint64_t v11 = *(void *)a3;
  uint64_t v12 = *(unsigned int *)(a3 + 8);
  unint64_t v13 = *(void *)a4;
  uint64_t v14 = *(unsigned int *)(a4 + 8);
  unint64_t v15 = (unint64_t)&result[2 * v9];
  if ((v9 & 0xFFFFFFC0) == 0)
  {
    unint64_t v16 = (unint64_t)result;
    unint64_t v9 = a2[1];
    if (result == (unsigned char *)v15) {
      goto LABEL_38;
    }
LABEL_28:
    unint64_t v34 = (unint64_t)&result[2 * v9 - v16 - 2];
    if (v34 < 0xE
      || (v16 < v10 + (v34 >> 1) + 1 ? (BOOL v35 = v10 >= (v34 & 0xFFFFFFFFFFFFFFFELL) + v16 + 2) : (BOOL v35 = 1), !v35))
    {
      uint64_t v38 = (_WORD *)v16;
      unint64_t v39 = (unsigned __int8 *)v10;
      goto LABEL_37;
    }
    uint64_t v36 = (v34 >> 1) + 1;
    if (v34 >= 0x3E)
    {
      unint64_t v37 = v36 & 0xFFFFFFFFFFFFFFE0;
      uint16x8_t v72 = (uint8x8_t *)(v10 + 16);
      long long v73 = (uint16x8_t *)(v16 + 32);
      unint64_t v74 = v36 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v75 = *(uint8x16_t *)v72[-2].i8;
        uint16x8_t v76 = vmovl_u8(*v72);
        uint16x8_t v77 = vmovl_high_u8(*(uint8x16_t *)v72->i8);
        v73[-2] = vmovl_u8(*(uint8x8_t *)v75.i8);
        v73[-1] = vmovl_high_u8(v75);
        *long long v73 = v76;
        v73[1] = v77;
        v73 += 4;
        v72 += 4;
        v74 -= 32;
      }
      while (v74);
      if (v36 == v37) {
        goto LABEL_38;
      }
      if ((v36 & 0x18) == 0)
      {
        unint64_t v39 = (unsigned __int8 *)(v10 + v37);
        uint64_t v38 = (_WORD *)(v16 + 2 * v37);
        goto LABEL_37;
      }
    }
    else
    {
      unint64_t v37 = 0;
    }
    uint64_t v38 = (_WORD *)(v16 + 2 * (v36 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v39 = (unsigned __int8 *)(v10 + (v36 & 0xFFFFFFFFFFFFFFF8));
    uint8x8_t v78 = (uint8x8_t *)(v10 + v37);
    unsigned int v79 = (uint16x8_t *)(v16 + 2 * v37);
    unint64_t v80 = v37 - (v36 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v81 = *v78++;
      *v79++ = vmovl_u8(v81);
      v80 += 8;
    }
    while (v80);
    if (v36 == (v36 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_38;
    }
    do
    {
LABEL_37:
      __int16 v40 = *v39++;
      *v38++ = v40;
    }
    while (v38 != (_WORD *)v15);
    goto LABEL_38;
  }
  unint64_t v16 = (unint64_t)&result[2 * (a2[1] & 0xFFFFFFC0)];
  long long v17 = 0uLL;
  BOOL v18 = result;
  do
  {
    v103.val[0] = *(int8x16_t *)v10;
    int8x16_t v19 = *(int8x16_t *)(v10 + 16);
    v106.val[0] = *(int8x16_t *)(v10 + 32);
    long long v20 = *(_OWORD *)(v10 + 48);
    v10 += 64;
    long long v21 = v20;
    v106.val[1] = 0uLL;
    v109.val[0] = v19;
    v103.val[1] = 0uLL;
    unint64_t v22 = v18;
    vst2q_s8(v22, v103);
    v22 += 32;
    v109.val[1] = 0uLL;
    vst2q_s8(v22, v109);
    __int16 v23 = v18 + 64;
    vst2q_s8(v23, v106);
    uint64_t v24 = v18 + 96;
    vst2q_s8(v24, *(int8x16x2_t *)(&v17 - 1));
    v18 += 128;
  }
  while (v18 != (char *)v16);
  unint64_t v9 = v9;
  if (v16 != v15) {
    goto LABEL_28;
  }
LABEL_38:
  unint64_t v41 = v15 + 2 * v12;
  if ((v12 & 0xFFFFFFC0) != 0)
  {
    unint64_t v42 = v15 + 2 * (v12 & 0xFFFFFFC0);
    long long v43 = 0uLL;
    do
    {
      v104.val[0] = *(int8x16_t *)v11;
      int8x16_t v44 = *(int8x16_t *)(v11 + 16);
      v107.val[0] = *(int8x16_t *)(v11 + 32);
      long long v45 = *(_OWORD *)(v11 + 48);
      v11 += 64;
      long long v46 = v45;
      v107.val[1] = 0uLL;
      v110.val[0] = v44;
      v104.val[1] = 0uLL;
      uint8x16_t v47 = (char *)v15;
      vst2q_s8(v47, v104);
      v47 += 32;
      v110.val[1] = 0uLL;
      vst2q_s8(v47, v110);
      uint16x8_t v48 = (char *)(v15 + 64);
      vst2q_s8(v48, v107);
      uint16x8_t v49 = (char *)(v15 + 96);
      vst2q_s8(v49, *(int8x16x2_t *)(&v43 - 1));
      v15 += 128;
    }
    while (v15 != v42);
    unint64_t v15 = v42;
  }
  if (v15 != v41)
  {
    unint64_t v50 = (unint64_t)&result[2 * v9 + 2 * v12 - v15 - 2];
    if (v50 < 0xE || v15 < v11 + (v50 >> 1) + 1 && v11 < (v50 & 0xFFFFFFFFFFFFFFFELL) + v15 + 2)
    {
      uint8x16_t v51 = (_WORD *)v15;
      uint16x8_t v52 = (unsigned __int8 *)v11;
      goto LABEL_47;
    }
    uint64_t v70 = (v50 >> 1) + 1;
    if (v50 >= 0x3E)
    {
      unint64_t v71 = v70 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v92 = (uint8x8_t *)(v11 + 16);
      unint64_t v93 = (uint16x8_t *)(v15 + 32);
      unint64_t v94 = v70 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v95 = *(uint8x16_t *)v92[-2].i8;
        uint16x8_t v96 = vmovl_u8(*v92);
        uint16x8_t v97 = vmovl_high_u8(*(uint8x16_t *)v92->i8);
        v93[-2] = vmovl_u8(*(uint8x8_t *)v95.i8);
        v93[-1] = vmovl_high_u8(v95);
        *unint64_t v93 = v96;
        v93[1] = v97;
        v93 += 4;
        v92 += 4;
        v94 -= 32;
      }
      while (v94);
      if (v70 == v71) {
        goto LABEL_48;
      }
      if ((v70 & 0x18) == 0)
      {
        uint16x8_t v52 = (unsigned __int8 *)(v11 + v71);
        uint8x16_t v51 = (_WORD *)(v15 + 2 * v71);
        do
        {
LABEL_47:
          __int16 v53 = *v52++;
          *v51++ = v53;
        }
        while (v51 != (_WORD *)v41);
        goto LABEL_48;
      }
    }
    else
    {
      unint64_t v71 = 0;
    }
    uint8x16_t v51 = (_WORD *)(v15 + 2 * (v70 & 0xFFFFFFFFFFFFFFF8));
    uint16x8_t v52 = (unsigned __int8 *)(v11 + (v70 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v98 = (uint8x8_t *)(v11 + v71);
    unint64_t v99 = (uint16x8_t *)(v15 + 2 * v71);
    unint64_t v100 = v71 - (v70 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v101 = *v98++;
      *v99++ = vmovl_u8(v101);
      v100 += 8;
    }
    while (v100);
    if (v70 != (v70 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_47;
    }
  }
LABEL_48:
  uint8x8_t v54 = (_WORD *)(v41 + 2 * v14);
  if ((v14 & 0xFFFFFFC0) != 0)
  {
    unint64_t v55 = v41 + 2 * (v14 & 0xFFFFFFC0);
    long long v56 = 0uLL;
    do
    {
      v105.val[0] = *(int8x16_t *)v13;
      int8x16_t v57 = *(int8x16_t *)(v13 + 16);
      v108.val[0] = *(int8x16_t *)(v13 + 32);
      long long v58 = *(_OWORD *)(v13 + 48);
      v13 += 64;
      long long v59 = v58;
      v108.val[1] = 0uLL;
      v111.val[0] = v57;
      v105.val[1] = 0uLL;
      uint16x8_t v60 = (char *)v41;
      vst2q_s8(v60, v105);
      v60 += 32;
      v111.val[1] = 0uLL;
      vst2q_s8(v60, v111);
      uint16x8_t v61 = (char *)(v41 + 64);
      vst2q_s8(v61, v108);
      uint16x8_t v62 = (char *)(v41 + 96);
      vst2q_s8(v62, *(int8x16x2_t *)(&v56 - 1));
      v41 += 128;
    }
    while (v41 != v55);
    unint64_t v41 = v55;
  }
  if ((_WORD *)v41 != v54)
  {
    unint64_t v63 = (unint64_t)&result[2 * v9 + 2 * v12 + 2 * v14 - v41 - 2];
    if (v63 < 0xE
      || (v41 < v13 + (v63 >> 1) + 1 ? (BOOL v64 = v13 >= (v63 & 0xFFFFFFFFFFFFFFFELL) + v41 + 2) : (BOOL v64 = 1), !v64))
    {
      unint64_t v67 = (_WORD *)v41;
      int8x16x2_t v68 = (unsigned __int8 *)v13;
      goto LABEL_62;
    }
    uint64_t v65 = (v63 >> 1) + 1;
    if (v63 >= 0x3E)
    {
      unint64_t v66 = v65 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v82 = (uint8x8_t *)(v13 + 16);
      unint64_t v83 = (uint16x8_t *)(v41 + 32);
      unint64_t v84 = v65 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v85 = *(uint8x16_t *)v82[-2].i8;
        uint16x8_t v86 = vmovl_u8(*v82);
        uint16x8_t v87 = vmovl_high_u8(*(uint8x16_t *)v82->i8);
        v83[-2] = vmovl_u8(*(uint8x8_t *)v85.i8);
        v83[-1] = vmovl_high_u8(v85);
        *unint64_t v83 = v86;
        v83[1] = v87;
        v83 += 4;
        v82 += 4;
        v84 -= 32;
      }
      while (v84);
      if (v65 == v66) {
        return result;
      }
      if ((v65 & 0x18) == 0)
      {
        int8x16x2_t v68 = (unsigned __int8 *)(v13 + v66);
        unint64_t v67 = (_WORD *)(v41 + 2 * v66);
        do
        {
LABEL_62:
          __int16 v69 = *v68++;
          *v67++ = v69;
        }
        while (v67 != v54);
        return result;
      }
    }
    else
    {
      unint64_t v66 = 0;
    }
    unint64_t v67 = (_WORD *)(v41 + 2 * (v65 & 0xFFFFFFFFFFFFFFF8));
    int8x16x2_t v68 = (unsigned __int8 *)(v13 + (v65 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v88 = (uint8x8_t *)(v13 + v66);
    uint8x16_t v89 = (uint16x8_t *)(v41 + 2 * v66);
    unint64_t v90 = v66 - (v65 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v91 = *v88++;
      *v89++ = vmovl_u8(v91);
      v90 += 8;
    }
    while (v90);
    if (v65 != (v65 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_62;
    }
  }
  return result;
}

uint16x8_t *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<int,void>>(WTF::StringBuilder *a1, unsigned int *a2)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = *a2;
  if ((*a2 & 0x80000000) != 0)
  {
    unsigned int v6 = -v3;
    int v7 = 1;
    do
    {
      ++v7;
      BOOL v8 = v6 >= 0xA;
      v6 /= 0xAu;
    }
    while (v8);
  }
  else
  {
    int v4 = 0;
    do
    {
      ++v4;
      BOOL v5 = v3 > 9;
      v3 /= 0xAu;
    }
    while (v5);
  }
  uint64_t v9 = *((void *)a1 + 1);
  if (!v9 && (uint64_t v9 = *(void *)a1) == 0 || (*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    uint16x8_t result = (uint16x8_t *)MEMORY[0x18530ACF0]();
    if (result)
    {
      unsigned int v21 = *a2;
      if ((*a2 & 0x80000000) != 0)
      {
        uint64_t v23 = 0;
        unsigned int v24 = -v21;
        do
        {
          v57[v23-- + 12] = (v24 % 0xA) | 0x30;
          BOOL v5 = v24 > 9;
          v24 /= 0xAu;
        }
        while (v5);
        uint64_t v25 = v23 + 12;
        unint64_t v26 = &v57[v23 + 12];
        *unint64_t v26 = 45;
        if (v23 + 14 <= 14)
        {
          if (v25 <= 12) {
            uint64_t v25 = 12;
          }
          return (uint16x8_t *)memcpy(result, v26, v25 - v23 - 11);
        }
      }
      else
      {
        uint64_t v22 = 0;
        do
        {
          v57[v22-- + 12] = (v21 % 0xA) | 0x30;
          BOOL v5 = v21 > 9;
          v21 /= 0xAu;
        }
        while (v5);
        if (v22 + 14 <= 13) {
          return (uint16x8_t *)memcpy(result, &v57[v22 + 13], -v22);
        }
      }
    }
    return result;
  }
  uint16x8_t result = (uint16x8_t *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  unsigned int v11 = *a2;
  if ((*a2 & 0x80000000) != 0)
  {
    uint64_t v27 = 0;
    unsigned int v28 = -v11;
    do
    {
      v57[v27-- + 12] = (v28 % 0xA) | 0x30;
      BOOL v5 = v28 > 9;
      v28 /= 0xAu;
    }
    while (v5);
    v57[v27 + 12] = 45;
    if (v27 + 14 > 14) {
      return result;
    }
    uint64_t v29 = v27 + 12;
    uint64_t v30 = 12;
    if (v27 + 12 > 12) {
      uint64_t v30 = v27 + 12;
    }
    unint64_t v31 = v30 - v27 - 11;
    if (v31 >= 8)
    {
      uint64_t v32 = -11 - v27;
      if (v31 >= 0x20)
      {
        unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFE0;
        int8x16_t v44 = result + 2;
        uint64_t v45 = v27 + 12;
        if (v27 + 12 <= 12) {
          uint64_t v45 = 12;
        }
        unint64_t v46 = (v45 + v32) & 0xFFFFFFFFFFFFFFE0;
        uint8x16_t v47 = (uint8x8_t *)((char *)&v59 + v27 + 7);
        do
        {
          uint8x16_t v48 = *(uint8x16_t *)v47[-2].i8;
          uint16x8_t v49 = vmovl_u8(*v47);
          uint16x8_t v50 = vmovl_high_u8(*(uint8x16_t *)v47->i8);
          v44[-2] = vmovl_u8(*(uint8x8_t *)v48.i8);
          v44[-1] = vmovl_high_u8(v48);
          uint16x8_t *v44 = v49;
          v44[1] = v50;
          v44 += 4;
          v47 += 4;
          v46 -= 32;
        }
        while (v46);
        if (v31 == v33) {
          return result;
        }
        if ((v31 & 0x18) == 0)
        {
          uint16x8_t result = (uint16x8_t *)((char *)result + 2 * v33);
          v29 += v33;
          goto LABEL_63;
        }
      }
      else
      {
        unint64_t v33 = 0;
      }
      v29 += v31 & 0xFFFFFFFFFFFFFFF8;
      uint8x16_t v51 = (uint16x8_t *)((char *)result + 2 * v33);
      uint64_t v52 = v27 + 12;
      BOOL v5 = v27 + 12 <= 12;
      uint64_t v53 = 12;
      if (!v5) {
        uint64_t v53 = v52;
      }
      unint64_t v54 = v33 - ((v53 + v32) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v55 = (uint8x8_t *)&v57[v33 + v52];
      do
      {
        uint8x8_t v56 = *v55++;
        *v51++ = vmovl_u8(v56);
        v54 += 8;
      }
      while (v54);
      uint16x8_t result = (uint16x8_t *)((char *)result + 2 * (v31 & 0xFFFFFFFFFFFFFFF8));
      if (v31 == (v31 & 0xFFFFFFFFFFFFFFF8)) {
        return result;
      }
    }
    do
    {
LABEL_63:
      result->i16[0] = v57[v29];
      uint16x8_t result = (uint16x8_t *)((char *)result + 2);
      BOOL v5 = v29++ < 12;
    }
    while (v5);
    return result;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 13;
  uint64_t v14 = 1;
  do
  {
    uint64_t v15 = v13;
    uint64_t v16 = v12;
    uint64_t v17 = v14;
    v57[--v13] = (v11 % 0xA) | 0x30;
    ++v12;
    ++v14;
    BOOL v5 = v11 > 9;
    v11 /= 0xAu;
  }
  while (v5);
  if (v15 <= 13)
  {
    unint64_t v18 = v16 + 1;
    if ((unint64_t)(v16 + 1) < 8)
    {
      uint64_t v19 = v13;
      long long v20 = result;
      goto LABEL_60;
    }
    if (v18 >= 0x20)
    {
      unint64_t v34 = v18 & 0xFFFFFFFFFFFFFFE0;
      BOOL v35 = result + 2;
      unint64_t v36 = v17 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v37 = (uint8x8_t *)&v57[-v16 + 28];
      do
      {
        uint8x16_t v38 = *(uint8x16_t *)v37[-2].i8;
        uint16x8_t v39 = vmovl_u8(*v37);
        uint16x8_t v40 = vmovl_high_u8(*(uint8x16_t *)v37->i8);
        v35[-2] = vmovl_u8(*(uint8x8_t *)v38.i8);
        v35[-1] = vmovl_high_u8(v38);
        *BOOL v35 = v39;
        v35[1] = v40;
        v35 += 4;
        v37 += 4;
        v36 -= 32;
      }
      while (v36);
      if (v18 == v34) {
        return result;
      }
      if ((v18 & 0x18) == 0)
      {
        long long v20 = (uint16x8_t *)((char *)result + 2 * v34);
        uint64_t v19 = v13 + v34;
        do
        {
LABEL_60:
          v20->i16[0] = v57[v19];
          long long v20 = (uint16x8_t *)((char *)v20 + 2);
          ++v19;
        }
        while (v19 != 13);
        return result;
      }
    }
    else
    {
      unint64_t v34 = 0;
    }
    uint64_t v19 = v13 + (v18 & 0xFFFFFFFFFFFFFFF8);
    long long v20 = (uint16x8_t *)((char *)result + 2 * (v18 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v41 = v34 - (v17 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v42 = &v57[v34];
    long long v43 = (uint16x8_t *)((char *)result + 2 * v34);
    do
    {
      *v43++ = vmovl_u8(*(uint8x8_t *)&v42[v13]);
      v42 += 8;
      v41 += 8;
    }
    while (v41);
    if (v18 != (v18 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_60;
    }
  }
  return result;
}

_WORD *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>(WTF::StringBuilder *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (*a2)
  {
    uint64_t v4 = *((void *)a1 + 1);
    if (!v4)
    {
LABEL_5:
      uint64_t v4 = *(void *)a1;
      if (!*(void *)a1) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 1);
    if (!v4) {
      goto LABEL_5;
    }
  }
  if ((*(unsigned char *)(v4 + 16) & 4) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (v3 && (*(unsigned char *)(v3 + 16) & 4) == 0)
  {
LABEL_9:
    uint16x8_t result = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!result) {
      return result;
    }
    uint64_t v6 = *a2;
    if (!*a2) {
      return result;
    }
    int v7 = *(int8x16_t **)(v6 + 8);
    uint64_t v8 = *(unsigned int *)(v6 + 4);
    if ((*(unsigned char *)(v6 + 16) & 4) == 0)
    {
      if (!v8) {
        return result;
      }
      if (v8 == 1)
      {
        *uint16x8_t result = v7->i16[0];
        return result;
      }
      size_t v10 = 2 * v8;
LABEL_44:
      return memcpy(result, v7, v10);
    }
    uint64_t v15 = &result[v8];
    if (v8 < 0x40)
    {
      unint64_t v16 = (unint64_t)result;
      if (result == v15) {
        return result;
      }
    }
    else
    {
      unint64_t v16 = (unint64_t)&result[v8 & 0xFFFFFFC0];
      long long v17 = 0uLL;
      unint64_t v18 = (char *)result;
      do
      {
        v60.val[0] = *v7;
        int8x16_t v19 = v7[1];
        v61.val[0] = v7[2];
        int8x16_t v20 = v7[3];
        v7 += 4;
        int8x16_t v21 = v20;
        v61.val[1] = 0uLL;
        v62.val[0] = v19;
        v60.val[1] = 0uLL;
        uint64_t v22 = v18;
        vst2q_s8(v22, v60);
        v22 += 32;
        v62.val[1] = 0uLL;
        vst2q_s8(v22, v62);
        uint64_t v23 = v18 + 64;
        vst2q_s8(v23, v61);
        unsigned int v24 = v18 + 96;
        vst2q_s8(v24, *(int8x16x2_t *)(&v17 - 1));
        v18 += 128;
      }
      while (v18 != (char *)v16);
      if ((_WORD *)v16 == v15) {
        return result;
      }
    }
    unint64_t v25 = (unint64_t)&result[v8 - 1] - v16;
    if (v25 < 0xE
      || (v16 < (unint64_t)v7->u64 + (v25 >> 1) + 1
        ? (BOOL v26 = (unint64_t)v7 >= (v25 & 0xFFFFFFFFFFFFFFFELL) + v16 + 2)
        : (BOOL v26 = 1),
          !v26))
    {
      uint64_t v29 = (_WORD *)v16;
      uint64_t v30 = v7;
      goto LABEL_41;
    }
    uint64_t v27 = (v25 >> 1) + 1;
    if (v25 >= 0x3E)
    {
      unint64_t v28 = v27 & 0xFFFFFFFFFFFFFFE0;
      uint8x16_t v38 = (uint8x8_t *)&v7[1];
      uint16x8_t v39 = (uint16x8_t *)(v16 + 32);
      unint64_t v40 = v27 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v41 = *(uint8x16_t *)v38[-2].i8;
        uint16x8_t v42 = vmovl_u8(*v38);
        uint16x8_t v43 = vmovl_high_u8(*(uint8x16_t *)v38->i8);
        v39[-2] = vmovl_u8(*(uint8x8_t *)v41.i8);
        v39[-1] = vmovl_high_u8(v41);
        *uint16x8_t v39 = v42;
        v39[1] = v43;
        v39 += 4;
        v38 += 4;
        v40 -= 32;
      }
      while (v40);
      if (v27 == v28) {
        return result;
      }
      if ((v27 & 0x18) == 0)
      {
        uint64_t v30 = (int8x16_t *)((char *)v7 + v28);
        uint64_t v29 = (_WORD *)(v16 + 2 * v28);
        goto LABEL_41;
      }
    }
    else
    {
      unint64_t v28 = 0;
    }
    uint64_t v29 = (_WORD *)(v16 + 2 * (v27 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v30 = (int8x16_t *)((char *)v7 + (v27 & 0xFFFFFFFFFFFFFFF8));
    int8x16_t v44 = (uint8x8_t *)&v7->i8[v28];
    uint64_t v45 = (uint16x8_t *)(v16 + 2 * v28);
    unint64_t v46 = v28 - (v27 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v47 = *v44++;
      *v45++ = vmovl_u8(v47);
      v46 += 8;
    }
    while (v46);
    if (v27 == (v27 & 0xFFFFFFFFFFFFFFF8)) {
      return result;
    }
    do
    {
LABEL_41:
      __int16 v31 = v30->u8[0];
      uint64_t v30 = (int8x16_t *)((char *)v30 + 1);
      *v29++ = v31;
    }
    while (v29 != v15);
    return result;
  }
  uint16x8_t result = (_WORD *)MEMORY[0x18530ACF0]();
  if (!result) {
    return result;
  }
  uint64_t v9 = *a2;
  if (!*a2) {
    return result;
  }
  int v7 = *(int8x16_t **)(v9 + 8);
  size_t v10 = *(unsigned int *)(v9 + 4);
  if ((*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    if (!v10) {
      return result;
    }
    if (v10 == 1)
    {
      *(unsigned char *)uint16x8_t result = v7->i8[0];
      return result;
    }
    goto LABEL_44;
  }
  unsigned int v11 = (char *)result + v10;
  if (v10 < 0x10)
  {
    unint64_t v12 = (unint64_t)result;
  }
  else
  {
    unint64_t v12 = (unint64_t)result + (v10 & 0xFFFFFFF0);
    uint64_t v13 = (unsigned long long *)result;
    do
    {
      unsigned long long v14 = (unsigned __int128)vld2q_s8(v7->i8);
      v7 += 2;
      *v13++ = v14;
    }
    while (v13 != (unsigned long long *)v12);
  }
  if ((unsigned char *)v12 != v11)
  {
    unint64_t v32 = (unint64_t)result + v10 - v12;
    if (v32 < 8
      || (v12 < (unint64_t)v7 + 2 * v32 ? (BOOL v33 = v7 >= (int8x16_t *)((char *)result + v10)) : (BOOL v33 = 1), !v33))
    {
      BOOL v35 = (unsigned char *)v12;
      unint64_t v36 = v7;
      goto LABEL_58;
    }
    if (v32 >= 0x20)
    {
      unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFE0;
      uint8x16_t v48 = v7 + 2;
      uint16x8_t v49 = (int8x16_t *)(v12 + 16);
      unint64_t v50 = v32 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v52 = v48[-2];
        int8x16_t v51 = v48[-1];
        int8x16_t v54 = *v48;
        int8x16_t v53 = v48[1];
        v48 += 4;
        v49[-1] = vuzp1q_s8(v52, v51);
        *uint16x8_t v49 = vuzp1q_s8(v54, v53);
        v49 += 2;
        v50 -= 32;
      }
      while (v50);
      if (v32 == v34) {
        return result;
      }
      if ((v32 & 0x18) == 0)
      {
        unint64_t v36 = (int8x16_t *)((char *)v7 + 2 * v34);
        BOOL v35 = (unsigned char *)(v12 + v34);
        goto LABEL_58;
      }
    }
    else
    {
      unint64_t v34 = 0;
    }
    BOOL v35 = (unsigned char *)(v12 + (v32 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v36 = (int8x16_t *)((char *)v7 + 2 * (v32 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v55 = (int16x8_t *)((char *)v7 + 2 * v34);
    uint8x8_t v56 = (int8x8_t *)(v12 + v34);
    unint64_t v57 = v34 - (v32 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v58 = *v55++;
      *v56++ = vmovn_s16(v58);
      v57 += 8;
    }
    while (v57);
    if (v32 == (v32 & 0xFFFFFFFFFFFFFFF8)) {
      return result;
    }
    do
    {
LABEL_58:
      char v37 = v36->i8[0];
      unint64_t v36 = (int8x16_t *)((char *)v36 + 2);
      *v35++ = v37;
    }
    while (v35 != v11);
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<char,void>>(WTF::StringBuilder *a1, unint64_t *a2, char *a3)
{
  uint64_t v5 = *((void *)a1 + 1);
  if (!v5 && (uint64_t v5 = *(void *)a1) == 0 || (*(unsigned char *)(v5 + 16) & 4) != 0)
  {
    uint16x8_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    int8x16_t v20 = result;
    unint64_t v21 = a2[1];
    uint64_t v22 = v21;
    char v23 = *a3;
    if (v21)
    {
      unsigned int v24 = (unsigned char *)*a2;
      if (v21 == 1)
      {
        *uint16x8_t result = *v24;
        result[1] = v23;
        return result;
      }
      uint16x8_t result = memcpy(result, v24, a2[1]);
    }
    v20[v22] = v23;
    return result;
  }
  uint16x8_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (result)
  {
    unint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    __int16 v9 = *a3;
    size_t v10 = &result[2 * v8];
    if ((v8 & 0xFFFFFFC0) != 0)
    {
      unint64_t v11 = (unint64_t)&result[2 * (a2[1] & 0xFFFFFFC0)];
      long long v12 = 0uLL;
      uint64_t v13 = result;
      do
      {
        v42.val[0] = *(int8x16_t *)v7;
        int8x16_t v14 = *(int8x16_t *)(v7 + 16);
        v43.val[0] = *(int8x16_t *)(v7 + 32);
        long long v15 = *(_OWORD *)(v7 + 48);
        v7 += 64;
        long long v16 = v15;
        v43.val[1] = 0uLL;
        v44.val[0] = v14;
        v42.val[1] = 0uLL;
        long long v17 = v13;
        vst2q_s8(v17, v42);
        v17 += 32;
        v44.val[1] = 0uLL;
        vst2q_s8(v17, v44);
        unint64_t v18 = v13 + 64;
        vst2q_s8(v18, v43);
        int8x16_t v19 = v13 + 96;
        vst2q_s8(v19, *(int8x16x2_t *)(&v12 - 1));
        v13 += 128;
      }
      while (v13 != (char *)v11);
      if ((_WORD *)v11 == v10) {
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t v11 = (unint64_t)result;
      if (result == (unsigned char *)v10)
      {
LABEL_28:
        *size_t v10 = v9;
        return result;
      }
    }
    unint64_t v25 = (unint64_t)&result[2 * v8 - v11 - 2];
    if (v25 < 0xE
      || (v11 < v7 + (v25 >> 1) + 1 ? (BOOL v26 = v7 >= (v25 & 0xFFFFFFFFFFFFFFFELL) + v11 + 2) : (BOOL v26 = 1), !v26))
    {
      uint64_t v29 = (_WORD *)v11;
      uint64_t v30 = (unsigned __int8 *)v7;
      goto LABEL_27;
    }
    uint64_t v27 = (v25 >> 1) + 1;
    if (v25 >= 0x3E)
    {
      unint64_t v28 = v27 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v32 = (uint8x8_t *)(v7 + 16);
      BOOL v33 = (uint16x8_t *)(v11 + 32);
      unint64_t v34 = v27 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v35 = *(uint8x16_t *)v32[-2].i8;
        uint16x8_t v36 = vmovl_u8(*v32);
        uint16x8_t v37 = vmovl_high_u8(*(uint8x16_t *)v32->i8);
        v33[-2] = vmovl_u8(*(uint8x8_t *)v35.i8);
        v33[-1] = vmovl_high_u8(v35);
        *BOOL v33 = v36;
        v33[1] = v37;
        v33 += 4;
        v32 += 4;
        v34 -= 32;
      }
      while (v34);
      if (v27 == v28) {
        goto LABEL_28;
      }
      if ((v27 & 0x18) == 0)
      {
        uint64_t v30 = (unsigned __int8 *)(v7 + v28);
        uint64_t v29 = (_WORD *)(v11 + 2 * v28);
        do
        {
LABEL_27:
          __int16 v31 = *v30++;
          *v29++ = v31;
        }
        while (v29 != v10);
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t v28 = 0;
    }
    uint64_t v29 = (_WORD *)(v11 + 2 * (v27 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v30 = (unsigned __int8 *)(v7 + (v27 & 0xFFFFFFFFFFFFFFF8));
    uint8x16_t v38 = (uint8x8_t *)(v7 + v28);
    uint16x8_t v39 = (uint16x8_t *)(v11 + 2 * v28);
    unint64_t v40 = v28 - (v27 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v41 = *v38++;
      *v39++ = vmovl_u8(v41);
      v40 += 8;
    }
    while (v40);
    if (v27 == (v27 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  return result;
}

_WORD *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WGSL::Type,void>>(WTF::StringBuilder *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (*a2)
  {
    uint64_t v4 = *((void *)a1 + 1);
    if (!v4)
    {
LABEL_5:
      uint64_t v4 = *(void *)a1;
      if (!*(void *)a1) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 1);
    if (!v4) {
      goto LABEL_5;
    }
  }
  if ((*(unsigned char *)(v4 + 16) & 4) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (v3 && (*(unsigned char *)(v3 + 16) & 4) == 0)
  {
LABEL_9:
    uint16x8_t result = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!result) {
      return result;
    }
    uint64_t v6 = *a2;
    if (!v6) {
      return result;
    }
    uint64_t v7 = *(unsigned int *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    unint64_t v8 = *(int8x16_t **)(v6 + 8);
    if ((*(unsigned char *)(v6 + 16) & 4) == 0)
    {
      if (!v7) {
        goto LABEL_56;
      }
      if (v7 == 1)
      {
        *uint16x8_t result = v8->i16[0];
        goto LABEL_56;
      }
      size_t v9 = 2 * v7;
LABEL_44:
      uint16x8_t result = memcpy(result, v8, v9);
      goto LABEL_56;
    }
    int8x16_t v14 = &result[v7];
    if (v7 < 0x40)
    {
      unint64_t v15 = (unint64_t)result;
      if (result == v14) {
        goto LABEL_56;
      }
    }
    else
    {
      unint64_t v15 = (unint64_t)&result[v7 & 0xFFFFFFC0];
      long long v16 = 0uLL;
      long long v17 = (char *)result;
      do
      {
        v59.val[0] = *v8;
        int8x16_t v18 = v8[1];
        v60.val[0] = v8[2];
        int8x16_t v19 = v8[3];
        v8 += 4;
        int8x16_t v20 = v19;
        v60.val[1] = 0uLL;
        v61.val[0] = v18;
        v59.val[1] = 0uLL;
        unint64_t v21 = v17;
        vst2q_s8(v21, v59);
        v21 += 32;
        v61.val[1] = 0uLL;
        vst2q_s8(v21, v61);
        uint64_t v22 = v17 + 64;
        vst2q_s8(v22, v60);
        char v23 = v17 + 96;
        vst2q_s8(v23, *(int8x16x2_t *)(&v16 - 1));
        v17 += 128;
      }
      while (v17 != (char *)v15);
      if ((_WORD *)v15 == v14) {
        goto LABEL_56;
      }
    }
    unint64_t v24 = (unint64_t)&result[v7 - 1] - v15;
    if (v24 < 0xE
      || (v15 < (unint64_t)v8->u64 + (v24 >> 1) + 1
        ? (BOOL v25 = (unint64_t)v8 >= (v24 & 0xFFFFFFFFFFFFFFFELL) + v15 + 2)
        : (BOOL v25 = 1),
          !v25))
    {
      unint64_t v28 = (_WORD *)v15;
      uint64_t v29 = v8;
      goto LABEL_41;
    }
    uint64_t v26 = (v24 >> 1) + 1;
    if (v24 >= 0x3E)
    {
      unint64_t v27 = v26 & 0xFFFFFFFFFFFFFFE0;
      uint16x8_t v37 = (uint8x8_t *)&v8[1];
      uint8x16_t v38 = (uint16x8_t *)(v15 + 32);
      unint64_t v39 = v26 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v40 = *(uint8x16_t *)v37[-2].i8;
        uint16x8_t v41 = vmovl_u8(*v37);
        uint16x8_t v42 = vmovl_high_u8(*(uint8x16_t *)v37->i8);
        v38[-2] = vmovl_u8(*(uint8x8_t *)v40.i8);
        v38[-1] = vmovl_high_u8(v40);
        *uint8x16_t v38 = v41;
        v38[1] = v42;
        v38 += 4;
        v37 += 4;
        v39 -= 32;
      }
      while (v39);
      if (v26 == v27) {
        goto LABEL_56;
      }
      if ((v26 & 0x18) == 0)
      {
        uint64_t v29 = (int8x16_t *)((char *)v8 + v27);
        unint64_t v28 = (_WORD *)(v15 + 2 * v27);
        goto LABEL_41;
      }
    }
    else
    {
      unint64_t v27 = 0;
    }
    unint64_t v28 = (_WORD *)(v15 + 2 * (v26 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v29 = (int8x16_t *)((char *)v8 + (v26 & 0xFFFFFFFFFFFFFFF8));
    int8x16x2_t v43 = (uint8x8_t *)&v8->i8[v27];
    int8x16x2_t v44 = (uint16x8_t *)(v15 + 2 * v27);
    unint64_t v45 = v27 - (v26 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v46 = *v43++;
      *v44++ = vmovl_u8(v46);
      v45 += 8;
    }
    while (v45);
    if (v26 == (v26 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_56;
    }
    do
    {
LABEL_41:
      __int16 v30 = v29->u8[0];
      uint64_t v29 = (int8x16_t *)((char *)v29 + 1);
      *v28++ = v30;
    }
    while (v28 != v14);
    goto LABEL_56;
  }
  uint16x8_t result = (_WORD *)MEMORY[0x18530ACF0]();
  if (!result) {
    return result;
  }
  uint64_t v6 = *a2;
  if (!v6) {
    return result;
  }
  size_t v9 = *(unsigned int *)(v6 + 4);
  *(_DWORD *)v6 += 2;
  unint64_t v8 = *(int8x16_t **)(v6 + 8);
  if ((*(unsigned char *)(v6 + 16) & 4) != 0)
  {
    if (!v9) {
      goto LABEL_56;
    }
    if (v9 == 1)
    {
      *(unsigned char *)uint16x8_t result = v8->i8[0];
      goto LABEL_56;
    }
    goto LABEL_44;
  }
  size_t v10 = (_WORD *)((char *)result + v9);
  if (v9 < 0x10)
  {
    unint64_t v11 = (unint64_t)result;
    if (result == v10) {
      goto LABEL_56;
    }
LABEL_46:
    unint64_t v31 = (unint64_t)result + v9 - v11;
    if (v31 < 8
      || (v11 < (unint64_t)v8 + 2 * v31 ? (BOOL v32 = v8 >= (int8x16_t *)((char *)result + v9)) : (BOOL v32 = 1), !v32))
    {
      unint64_t v34 = (unsigned char *)v11;
      uint8x16_t v35 = v8;
      goto LABEL_55;
    }
    if (v31 >= 0x20)
    {
      unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFE0;
      uint8x8_t v47 = v8 + 2;
      uint8x16_t v48 = (int8x16_t *)(v11 + 16);
      unint64_t v49 = v31 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v51 = v47[-2];
        int8x16_t v50 = v47[-1];
        int8x16_t v53 = *v47;
        int8x16_t v52 = v47[1];
        v47 += 4;
        v48[-1] = vuzp1q_s8(v51, v50);
        int8x16_t *v48 = vuzp1q_s8(v53, v52);
        v48 += 2;
        v49 -= 32;
      }
      while (v49);
      if (v31 == v33) {
        goto LABEL_56;
      }
      if ((v31 & 0x18) == 0)
      {
        uint8x16_t v35 = (int8x16_t *)((char *)v8 + 2 * v33);
        unint64_t v34 = (unsigned char *)(v11 + v33);
        goto LABEL_55;
      }
    }
    else
    {
      unint64_t v33 = 0;
    }
    unint64_t v34 = (unsigned char *)(v11 + (v31 & 0xFFFFFFFFFFFFFFF8));
    uint8x16_t v35 = (int8x16_t *)((char *)v8 + 2 * (v31 & 0xFFFFFFFFFFFFFFF8));
    int8x16_t v54 = (int16x8_t *)((char *)v8 + 2 * v33);
    unint64_t v55 = (int8x8_t *)(v11 + v33);
    unint64_t v56 = v33 - (v31 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v57 = *v54++;
      *v55++ = vmovn_s16(v57);
      v56 += 8;
    }
    while (v56);
    if (v31 == (v31 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_56;
    }
    do
    {
LABEL_55:
      char v36 = v35->i8[0];
      uint8x16_t v35 = (int8x16_t *)((char *)v35 + 2);
      *v34++ = v36;
    }
    while (v34 != (unsigned char *)v10);
    goto LABEL_56;
  }
  unint64_t v11 = (unint64_t)result + (v9 & 0xFFFFFFF0);
  long long v12 = (unsigned long long *)result;
  do
  {
    unsigned long long v13 = (unsigned __int128)vld2q_s8(v8->i8);
    v8 += 2;
    *v12++ = v13;
  }
  while (v12 != (unsigned long long *)v11);
  if ((_WORD *)v11 != v10) {
    goto LABEL_46;
  }
LABEL_56:
  if (*(_DWORD *)v6 == 2)
  {
    return (_WORD *)WTF::StringImpl::destroy();
  }
  else
  {
    *(_DWORD *)v6 -= 2;
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<char,void>>(WTF::StringBuilder *a1, uint64_t *a2, char *a3)
{
  uint64_t v5 = *a2;
  if (*a2)
  {
    uint64_t v6 = *((void *)a1 + 1);
    if (!v6)
    {
LABEL_5:
      uint64_t v6 = *(void *)a1;
      if (!*(void *)a1) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v6 = *((void *)a1 + 1);
    if (!v6) {
      goto LABEL_5;
    }
  }
  if ((*(unsigned char *)(v6 + 16) & 4) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (!v5 || (*(unsigned char *)(v5 + 16) & 4) != 0)
  {
    uint16x8_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    unsigned long long v13 = result;
    uint64_t v14 = *a2;
    char v15 = *a3;
    if (!v14)
    {
      *uint16x8_t result = v15;
      return result;
    }
    long long v16 = *(int8x16_t **)(v14 + 8);
    size_t v17 = *(unsigned int *)(v14 + 4);
    if ((*(unsigned char *)(v14 + 16) & 4) != 0)
    {
      if (v17)
      {
        if (v17 != 1)
        {
          uint16x8_t result = memcpy(result, v16, v17);
          v13[*(unsigned int *)(v14 + 4)] = v15;
          return result;
        }
        *uint16x8_t result = v16->i8[0];
      }
LABEL_33:
      result[*(unsigned int *)(v14 + 4)] = v15;
      return result;
    }
    int8x16_t v18 = &result[v17];
    if (v17 < 0x10)
    {
      unint64_t v19 = (unint64_t)result;
    }
    else
    {
      unint64_t v19 = (unint64_t)&result[v17 & 0xFFFFFFF0];
      int8x16_t v20 = (unsigned long long *)result;
      do
      {
        unsigned long long v21 = (unsigned __int128)vld2q_s8(v16->i8);
        v16 += 2;
        *v20++ = v21;
      }
      while (v20 != (unsigned long long *)v19);
    }
    if ((unsigned char *)v19 == v18) {
      goto LABEL_33;
    }
    unint64_t v39 = (unint64_t)&result[v17 - v19];
    if (v39 < 8 || (v19 < (unint64_t)v16 + 2 * v39 ? (BOOL v40 = v16 >= (int8x16_t *)&result[v17]) : (BOOL v40 = 1), !v40))
    {
      uint16x8_t v42 = (unsigned char *)v19;
      int8x16x2_t v43 = v16;
      goto LABEL_59;
    }
    if (v39 >= 0x20)
    {
      unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v55 = v16 + 2;
      unint64_t v56 = (int8x16_t *)(v19 + 16);
      unint64_t v57 = v39 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v59 = v55[-2];
        int8x16_t v58 = v55[-1];
        int8x16_t v61 = *v55;
        int8x16_t v60 = v55[1];
        v55 += 4;
        v56[-1] = vuzp1q_s8(v59, v58);
        int8x16_t *v56 = vuzp1q_s8(v61, v60);
        v56 += 2;
        v57 -= 32;
      }
      while (v57);
      if (v39 == v41) {
        goto LABEL_33;
      }
      if ((v39 & 0x18) == 0)
      {
        int8x16x2_t v43 = (int8x16_t *)((char *)v16 + 2 * v41);
        uint16x8_t v42 = (unsigned char *)(v19 + v41);
        do
        {
LABEL_59:
          char v44 = v43->i8[0];
          int8x16x2_t v43 = (int8x16_t *)((char *)v43 + 2);
          *v42++ = v44;
        }
        while (v42 != v18);
        goto LABEL_33;
      }
    }
    else
    {
      unint64_t v41 = 0;
    }
    uint16x8_t v42 = (unsigned char *)(v19 + (v39 & 0xFFFFFFFFFFFFFFF8));
    int8x16x2_t v43 = (int8x16_t *)((char *)v16 + 2 * (v39 & 0xFFFFFFFFFFFFFFF8));
    int8x16x2_t v62 = (int16x8_t *)((char *)v16 + 2 * v41);
    unint64_t v63 = (int8x8_t *)(v19 + v41);
    unint64_t v64 = v41 - (v39 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v65 = *v62++;
      *v63++ = vmovn_s16(v65);
      v64 += 8;
    }
    while (v64);
    if (v39 == (v39 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_33;
    }
    goto LABEL_59;
  }
LABEL_9:
  uint16x8_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (result)
  {
    unint64_t v8 = result;
    uint64_t v9 = *a2;
    __int16 v10 = *a3;
    if (!v9)
    {
      *(_WORD *)uint16x8_t result = v10;
      return result;
    }
    unint64_t v11 = *(int8x16_t **)(v9 + 8);
    uint64_t v12 = *(unsigned int *)(v9 + 4);
    if ((*(unsigned char *)(v9 + 16) & 4) == 0)
    {
      if (v12)
      {
        if (v12 == 1)
        {
          *(_WORD *)uint16x8_t result = v11->i16[0];
          *(_WORD *)&result[2 * *(unsigned int *)(v9 + 4)] = v10;
          return result;
        }
        uint16x8_t result = memcpy(result, v11, 2 * v12);
      }
      goto LABEL_47;
    }
    uint64_t v22 = &result[2 * v12];
    if (v12 < 0x40)
    {
      unint64_t v23 = (unint64_t)result;
      if (result == v22)
      {
LABEL_47:
        *(_WORD *)&v8[2 * *(unsigned int *)(v9 + 4)] = v10;
        return result;
      }
    }
    else
    {
      unint64_t v23 = (unint64_t)&result[2 * (v12 & 0xFFFFFFC0)];
      long long v24 = 0uLL;
      BOOL v25 = result;
      do
      {
        v66.val[0] = *v11;
        int8x16_t v26 = v11[1];
        v67.val[0] = v11[2];
        int8x16_t v27 = v11[3];
        v11 += 4;
        int8x16_t v28 = v27;
        v67.val[1] = 0uLL;
        v68.val[0] = v26;
        v66.val[1] = 0uLL;
        uint64_t v29 = v25;
        vst2q_s8(v29, v66);
        v29 += 32;
        v68.val[1] = 0uLL;
        vst2q_s8(v29, v68);
        __int16 v30 = v25 + 64;
        vst2q_s8(v30, v67);
        unint64_t v31 = v25 + 96;
        vst2q_s8(v31, *(int8x16x2_t *)(&v24 - 1));
        v25 += 128;
      }
      while (v25 != (char *)v23);
      if ((unsigned char *)v23 == v22) {
        goto LABEL_47;
      }
    }
    unint64_t v32 = (unint64_t)&result[2 * v12 - v23 - 2];
    if (v32 < 0xE
      || (v23 < (unint64_t)v11->u64 + (v32 >> 1) + 1
        ? (BOOL v33 = (unint64_t)v11 >= (v32 & 0xFFFFFFFFFFFFFFFELL) + v23 + 2)
        : (BOOL v33 = 1),
          !v33))
    {
      char v36 = (_WORD *)v23;
      uint16x8_t v37 = v11;
      goto LABEL_44;
    }
    uint64_t v34 = (v32 >> 1) + 1;
    if (v32 >= 0x3E)
    {
      unint64_t v35 = v34 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v45 = (uint8x8_t *)&v11[1];
      uint8x8_t v46 = (uint16x8_t *)(v23 + 32);
      unint64_t v47 = v34 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v48 = *(uint8x16_t *)v45[-2].i8;
        uint16x8_t v49 = vmovl_u8(*v45);
        uint16x8_t v50 = vmovl_high_u8(*(uint8x16_t *)v45->i8);
        v46[-2] = vmovl_u8(*(uint8x8_t *)v48.i8);
        v46[-1] = vmovl_high_u8(v48);
        *uint8x8_t v46 = v49;
        v46[1] = v50;
        v46 += 4;
        v45 += 4;
        v47 -= 32;
      }
      while (v47);
      if (v34 == v35) {
        goto LABEL_47;
      }
      if ((v34 & 0x18) == 0)
      {
        uint16x8_t v37 = (int8x16_t *)((char *)v11 + v35);
        char v36 = (_WORD *)(v23 + 2 * v35);
        do
        {
LABEL_44:
          __int16 v38 = v37->u8[0];
          uint16x8_t v37 = (int8x16_t *)((char *)v37 + 1);
          *v36++ = v38;
        }
        while (v36 != (_WORD *)v22);
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v35 = 0;
    }
    char v36 = (_WORD *)(v23 + 2 * (v34 & 0xFFFFFFFFFFFFFFF8));
    uint16x8_t v37 = (int8x16_t *)((char *)v11 + (v34 & 0xFFFFFFFFFFFFFFF8));
    int8x16_t v51 = (uint8x8_t *)&v11->i8[v35];
    int8x16_t v52 = (uint16x8_t *)(v23 + 2 * v35);
    unint64_t v53 = v35 - (v34 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v54 = *v51++;
      *v52++ = vmovl_u8(v54);
      v53 += 8;
    }
    while (v53);
    if (v34 == (v34 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_47;
    }
    goto LABEL_44;
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>>(WTF::StringBuilder *a1, unint64_t *a2, int *a3)
{
  uint64_t v5 = *((void *)a1 + 1);
  if ((v5 || (uint64_t v5 = *(void *)a1) != 0) && (*(unsigned char *)(v5 + 16) & 4) == 0)
  {
    uint64_t v6 = WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!v6) {
      return;
    }
    uint64_t v7 = (char *)v6;
    unint64_t v8 = *a2;
    unint64_t v9 = a2[1];
    int v10 = *a3;
    unint64_t v11 = (char *)(v6 + 2 * v9);
    if ((v9 & 0xFFFFFFC0) != 0)
    {
      unint64_t v12 = (unint64_t)&v7[2 * (a2[1] & 0xFFFFFFC0)];
      long long v13 = 0uLL;
      uint64_t v14 = v7;
      do
      {
        v46.val[0] = *(int8x16_t *)v8;
        int8x16_t v15 = *(int8x16_t *)(v8 + 16);
        v47.val[0] = *(int8x16_t *)(v8 + 32);
        long long v16 = *(_OWORD *)(v8 + 48);
        v8 += 64;
        long long v17 = v16;
        v47.val[1] = 0uLL;
        v48.val[0] = v15;
        v46.val[1] = 0uLL;
        int8x16_t v18 = v14;
        vst2q_s8(v18, v46);
        v18 += 32;
        v48.val[1] = 0uLL;
        vst2q_s8(v18, v48);
        unint64_t v19 = v14 + 64;
        vst2q_s8(v19, v47);
        int8x16_t v20 = v14 + 96;
        vst2q_s8(v20, *(int8x16x2_t *)(&v13 - 1));
        v14 += 128;
      }
      while (v14 != (char *)v12);
      if ((char *)v12 == v11)
      {
LABEL_31:
        if (4 * v10)
        {
          memset_pattern16(v11, asc_1826CF510, 2 * (4 * v10));
        }
        return;
      }
    }
    else
    {
      unint64_t v12 = (unint64_t)v7;
      if (v7 == v11) {
        goto LABEL_31;
      }
    }
    unint64_t v28 = (unint64_t)&v7[2 * v9 - v12 - 2];
    if (v28 < 0xE
      || (v12 < v8 + (v28 >> 1) + 1 ? (BOOL v29 = v8 >= (v28 & 0xFFFFFFFFFFFFFFFELL) + v12 + 2) : (BOOL v29 = 1), !v29))
    {
      unint64_t v32 = (char *)v12;
      BOOL v33 = (unsigned __int8 *)v8;
      goto LABEL_30;
    }
    uint64_t v30 = (v28 >> 1) + 1;
    if (v28 >= 0x3E)
    {
      unint64_t v31 = v30 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v35 = (uint8x8_t *)(v8 + 16);
      char v36 = (uint16x8_t *)(v12 + 32);
      unint64_t v37 = v30 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v38 = *(uint8x16_t *)v35[-2].i8;
        uint16x8_t v39 = vmovl_u8(*v35);
        uint16x8_t v40 = vmovl_high_u8(*(uint8x16_t *)v35->i8);
        v36[-2] = vmovl_u8(*(uint8x8_t *)v38.i8);
        v36[-1] = vmovl_high_u8(v38);
        *char v36 = v39;
        v36[1] = v40;
        v36 += 4;
        v35 += 4;
        v37 -= 32;
      }
      while (v37);
      if (v30 == v31) {
        goto LABEL_31;
      }
      if ((v30 & 0x18) == 0)
      {
        BOOL v33 = (unsigned __int8 *)(v8 + v31);
        unint64_t v32 = (char *)(v12 + 2 * v31);
        goto LABEL_30;
      }
    }
    else
    {
      unint64_t v31 = 0;
    }
    unint64_t v32 = (char *)(v12 + 2 * (v30 & 0xFFFFFFFFFFFFFFF8));
    BOOL v33 = (unsigned __int8 *)(v8 + (v30 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v41 = (uint8x8_t *)(v8 + v31);
    uint16x8_t v42 = (uint16x8_t *)(v12 + 2 * v31);
    unint64_t v43 = v31 - (v30 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v44 = *v41++;
      *v42++ = vmovl_u8(v44);
      v43 += 8;
    }
    while (v43);
    if (v30 == (v30 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_31;
    }
    do
    {
LABEL_30:
      __int16 v34 = *v33++;
      *(_WORD *)unint64_t v32 = v34;
      v32 += 2;
    }
    while (v32 != v11);
    goto LABEL_31;
  }
  unsigned long long v21 = (unsigned char *)MEMORY[0x18530ACF0]();
  if (!v21) {
    return;
  }
  uint64_t v22 = v21;
  unint64_t v23 = a2[1];
  uint64_t v24 = v23;
  int v25 = *a3;
  if (v23)
  {
    int8x16_t v26 = (unsigned char *)*a2;
    if (v23 != 1)
    {
      memcpy(v21, v26, a2[1]);
      size_t v27 = (4 * v25);
      if (!v27) {
        return;
      }
      goto LABEL_17;
    }
    *unsigned long long v21 = *v26;
  }
  size_t v27 = (4 * v25);
  if (!v27) {
    return;
  }
LABEL_17:
  memset(&v22[v24], 32, v27);
}

uint16x8_t *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<long long,void>>(WTF::StringBuilder *a1, unint64_t *a2)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    unint64_t v6 = -(uint64_t)v3;
    int v7 = 1;
    do
    {
      ++v7;
      BOOL v8 = v6 >= 0xA;
      v6 /= 0xAuLL;
    }
    while (v8);
  }
  else
  {
    int v4 = 0;
    do
    {
      ++v4;
      BOOL v5 = v3 > 9;
      v3 /= 0xAuLL;
    }
    while (v5);
  }
  uint64_t v9 = *((void *)a1 + 1);
  if (!v9 && (uint64_t v9 = *(void *)a1) == 0 || (*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    uint16x8_t result = (uint16x8_t *)MEMORY[0x18530ACF0]();
    if (result)
    {
      unint64_t v21 = *a2;
      if ((*a2 & 0x8000000000000000) != 0)
      {
        uint64_t v23 = 0;
        unint64_t v24 = -(uint64_t)v21;
        do
        {
          v57[v23-- + 24] = (v24 % 0xA) | 0x30;
          BOOL v5 = v24 > 9;
          v24 /= 0xAuLL;
        }
        while (v5);
        uint64_t v25 = v23 + 24;
        int8x16_t v26 = &v57[v23 + 24];
        *int8x16_t v26 = 45;
        if (v23 + 26 <= 26)
        {
          if (v25 <= 24) {
            uint64_t v25 = 24;
          }
          return (uint16x8_t *)memcpy(result, v26, v25 - v23 - 23);
        }
      }
      else
      {
        uint64_t v22 = 0;
        do
        {
          v57[v22-- + 24] = (v21 % 0xA) | 0x30;
          BOOL v5 = v21 > 9;
          v21 /= 0xAuLL;
        }
        while (v5);
        if (v22 + 26 <= 25) {
          return (uint16x8_t *)memcpy(result, &v57[v22 + 25], -v22);
        }
      }
    }
    return result;
  }
  uint16x8_t result = (uint16x8_t *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  unint64_t v11 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    uint64_t v27 = 0;
    unint64_t v28 = -(uint64_t)v11;
    do
    {
      v57[v27-- + 24] = (v28 % 0xA) | 0x30;
      BOOL v5 = v28 > 9;
      v28 /= 0xAuLL;
    }
    while (v5);
    v57[v27 + 24] = 45;
    if (v27 + 26 > 26) {
      return result;
    }
    uint64_t v29 = v27 + 24;
    uint64_t v30 = 24;
    if (v27 + 24 > 24) {
      uint64_t v30 = v27 + 24;
    }
    unint64_t v31 = v30 - v27 - 23;
    if (v31 >= 8)
    {
      uint64_t v32 = -23 - v27;
      if (v31 >= 0x20)
      {
        unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFE0;
        uint8x8_t v44 = result + 2;
        uint64_t v45 = v27 + 24;
        if (v27 + 24 <= 24) {
          uint64_t v45 = 24;
        }
        unint64_t v46 = (v45 + v32) & 0xFFFFFFFFFFFFFFE0;
        int8x16x2_t v47 = (uint8x8_t *)((char *)&v59 + v27 + 7);
        do
        {
          uint8x16_t v48 = *(uint8x16_t *)v47[-2].i8;
          uint16x8_t v49 = vmovl_u8(*v47);
          uint16x8_t v50 = vmovl_high_u8(*(uint8x16_t *)v47->i8);
          v44[-2] = vmovl_u8(*(uint8x8_t *)v48.i8);
          v44[-1] = vmovl_high_u8(v48);
          uint16x8_t *v44 = v49;
          v44[1] = v50;
          v44 += 4;
          v47 += 4;
          v46 -= 32;
        }
        while (v46);
        if (v31 == v33) {
          return result;
        }
        if ((v31 & 0x18) == 0)
        {
          uint16x8_t result = (uint16x8_t *)((char *)result + 2 * v33);
          v29 += v33;
          goto LABEL_63;
        }
      }
      else
      {
        unint64_t v33 = 0;
      }
      v29 += v31 & 0xFFFFFFFFFFFFFFF8;
      int8x16_t v51 = (uint16x8_t *)((char *)result + 2 * v33);
      uint64_t v52 = v27 + 24;
      BOOL v5 = v27 + 24 <= 24;
      uint64_t v53 = 24;
      if (!v5) {
        uint64_t v53 = v52;
      }
      unint64_t v54 = v33 - ((v53 + v32) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v55 = (uint8x8_t *)&v57[v33 + v52];
      do
      {
        uint8x8_t v56 = *v55++;
        *v51++ = vmovl_u8(v56);
        v54 += 8;
      }
      while (v54);
      uint16x8_t result = (uint16x8_t *)((char *)result + 2 * (v31 & 0xFFFFFFFFFFFFFFF8));
      if (v31 == (v31 & 0xFFFFFFFFFFFFFFF8)) {
        return result;
      }
    }
    do
    {
LABEL_63:
      result->i16[0] = v57[v29];
      uint16x8_t result = (uint16x8_t *)((char *)result + 2);
      BOOL v5 = v29++ < 24;
    }
    while (v5);
    return result;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 25;
  uint64_t v14 = 1;
  do
  {
    uint64_t v15 = v13;
    uint64_t v16 = v12;
    uint64_t v17 = v14;
    v57[--v13] = (v11 % 0xA) | 0x30;
    ++v12;
    ++v14;
    BOOL v5 = v11 > 9;
    v11 /= 0xAuLL;
  }
  while (v5);
  if (v15 <= 25)
  {
    unint64_t v18 = v16 + 1;
    if ((unint64_t)(v16 + 1) < 8)
    {
      uint64_t v19 = v13;
      int8x16_t v20 = result;
      goto LABEL_60;
    }
    if (v18 >= 0x20)
    {
      unint64_t v34 = v18 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v35 = result + 2;
      unint64_t v36 = v17 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v37 = (uint8x8_t *)&v57[-v16 + 40];
      do
      {
        uint8x16_t v38 = *(uint8x16_t *)v37[-2].i8;
        uint16x8_t v39 = vmovl_u8(*v37);
        uint16x8_t v40 = vmovl_high_u8(*(uint8x16_t *)v37->i8);
        v35[-2] = vmovl_u8(*(uint8x8_t *)v38.i8);
        v35[-1] = vmovl_high_u8(v38);
        *unint64_t v35 = v39;
        v35[1] = v40;
        v35 += 4;
        v37 += 4;
        v36 -= 32;
      }
      while (v36);
      if (v18 == v34) {
        return result;
      }
      if ((v18 & 0x18) == 0)
      {
        int8x16_t v20 = (uint16x8_t *)((char *)result + 2 * v34);
        uint64_t v19 = v13 + v34;
        do
        {
LABEL_60:
          v20->i16[0] = v57[v19];
          int8x16_t v20 = (uint16x8_t *)((char *)v20 + 2);
          ++v19;
        }
        while (v19 != 25);
        return result;
      }
    }
    else
    {
      unint64_t v34 = 0;
    }
    uint64_t v19 = v13 + (v18 & 0xFFFFFFFFFFFFFFF8);
    int8x16_t v20 = (uint16x8_t *)((char *)result + 2 * (v18 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v41 = v34 - (v17 & 0xFFFFFFFFFFFFFFF8);
    uint16x8_t v42 = &v57[v34];
    unint64_t v43 = (uint16x8_t *)((char *)result + 2 * v34);
    do
    {
      *v43++ = vmovl_u8(*(uint8x8_t *)&v42[v13]);
      v42 += 8;
      v41 += 8;
    }
    while (v41);
    if (v18 != (v18 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_60;
    }
  }
  return result;
}

uint16x8_t *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<unsigned int,void>,WTF::StringTypeAdapter<char,void>>(WTF::StringBuilder *a1, unsigned int *a2, char *a3)
{
  int v5 = 0;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  unsigned int v6 = *a2;
  do
  {
    ++v5;
    BOOL v7 = v6 > 9;
    v6 /= 0xAu;
  }
  while (v7);
  uint64_t v8 = *((void *)a1 + 1);
  if ((v8 || (uint64_t v8 = *(void *)a1) != 0) && (*(unsigned char *)(v8 + 16) & 4) == 0)
  {
    uint16x8_t result = (uint16x8_t *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!result) {
      return result;
    }
    uint64_t v10 = 0;
    unsigned int v11 = *a2;
    uint64_t v12 = 13;
    uint64_t v13 = 1;
    __int16 v14 = *a3;
    unsigned int v15 = *a2;
    do
    {
      uint64_t v16 = v12;
      uint64_t v17 = v10;
      uint64_t v18 = v13;
      v39[--v12] = (v15 % 0xA) | 0x30;
      ++v10;
      ++v13;
      BOOL v7 = v15 > 9;
      v15 /= 0xAu;
    }
    while (v7);
    if (v16 > 13) {
      goto LABEL_33;
    }
    unint64_t v19 = v17 + 1;
    if ((unint64_t)(v17 + 1) < 8)
    {
      uint64_t v20 = v12;
      unint64_t v21 = (char *)result;
      goto LABEL_32;
    }
    if (v19 >= 0x20)
    {
      unint64_t v28 = v19 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v29 = result + 2;
      unint64_t v30 = v18 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v31 = (uint8x8_t *)&v39[-v17 + 28];
      do
      {
        uint8x16_t v32 = *(uint8x16_t *)v31[-2].i8;
        uint16x8_t v33 = vmovl_u8(*v31);
        uint16x8_t v34 = vmovl_high_u8(*(uint8x16_t *)v31->i8);
        v29[-2] = vmovl_u8(*(uint8x8_t *)v32.i8);
        v29[-1] = vmovl_high_u8(v32);
        *uint64_t v29 = v33;
        v29[1] = v34;
        v29 += 4;
        v31 += 4;
        v30 -= 32;
      }
      while (v30);
      if (v19 == v28) {
        goto LABEL_33;
      }
      if ((v19 & 0x18) == 0)
      {
        unint64_t v21 = &result->i8[2 * v28];
        uint64_t v20 = v12 + v28;
        do
        {
LABEL_32:
          *(_WORD *)unint64_t v21 = v39[v20];
          v21 += 2;
          ++v20;
        }
        while (v20 != 13);
LABEL_33:
        int v38 = 0;
        do
        {
          ++v38;
          BOOL v7 = v11 > 9;
          v11 /= 0xAu;
        }
        while (v7);
        result->i16[v38] = v14;
        return result;
      }
    }
    else
    {
      unint64_t v28 = 0;
    }
    uint64_t v20 = v12 + (v19 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v21 = &result->i8[2 * (v19 & 0xFFFFFFFFFFFFFFF8)];
    unint64_t v35 = v28 - (v18 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v36 = &v39[v28];
    unint64_t v37 = (uint16x8_t *)((char *)result + 2 * v28);
    do
    {
      *v37++ = vmovl_u8(*(uint8x8_t *)&v36[v12]);
      v36 += 8;
      v35 += 8;
    }
    while (v35);
    if (v19 == (v19 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  uint16x8_t result = (uint16x8_t *)MEMORY[0x18530ACF0]();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = 0;
    unsigned int v24 = *a2;
    char v25 = *a3;
    unsigned int v26 = v24;
    do
    {
      v39[v23-- + 12] = (v26 % 0xA) | 0x30;
      BOOL v7 = v26 > 9;
      v26 /= 0xAu;
    }
    while (v7);
    if (v23 + 14 <= 13) {
      uint16x8_t result = (uint16x8_t *)memcpy(result, &v39[v23 + 13], -v23);
    }
    int v27 = 0;
    do
    {
      ++v27;
      BOOL v7 = v24 > 9;
      v24 /= 0xAu;
    }
    while (v7);
    v22->i8[v27] = v25;
  }
  return result;
}

char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<std::span<char const,18446744073709551615ul>,void>>(WTF::StringBuilder *a1, unint64_t *a2)
{
  uint64_t v3 = *((void *)a1 + 1);
  if ((v3 || (uint64_t v3 = *(void *)a1) != 0) && (*(unsigned char *)(v3 + 16) & 4) == 0)
  {
    uint16x8_t result = (char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
    if (!result) {
      return result;
    }
    unint64_t v5 = *a2;
    unint64_t v6 = a2[1];
    BOOL v7 = &result[2 * v6];
    if ((v6 & 0xFFFFFFC0) != 0)
    {
      unint64_t v8 = (unint64_t)&result[2 * (a2[1] & 0xFFFFFFC0)];
      long long v9 = 0uLL;
      uint64_t v10 = result;
      do
      {
        v37.val[0] = *(int8x16_t *)v5;
        int8x16_t v11 = *(int8x16_t *)(v5 + 16);
        v38.val[0] = *(int8x16_t *)(v5 + 32);
        long long v12 = *(_OWORD *)(v5 + 48);
        v5 += 64;
        long long v13 = v12;
        v38.val[1] = 0uLL;
        v39.val[0] = v11;
        v37.val[1] = 0uLL;
        __int16 v14 = v10;
        vst2q_s8(v14, v37);
        v14 += 32;
        v39.val[1] = 0uLL;
        vst2q_s8(v14, v39);
        unsigned int v15 = v10 + 64;
        vst2q_s8(v15, v38);
        uint64_t v16 = v10 + 96;
        vst2q_s8(v16, *(int8x16x2_t *)(&v9 - 1));
        v10 += 128;
      }
      while (v10 != (char *)v8);
      if ((char *)v8 == v7) {
        return result;
      }
    }
    else
    {
      unint64_t v8 = (unint64_t)result;
      if (result == v7) {
        return result;
      }
    }
    unint64_t v19 = (unint64_t)&result[2 * v6 - v8 - 2];
    if (v19 < 0xE || (v8 < v5 + (v19 >> 1) + 1 ? (BOOL v20 = v5 >= (v19 & 0xFFFFFFFFFFFFFFFELL) + v8 + 2) : (BOOL v20 = 1), !v20))
    {
      uint64_t v23 = (char *)v8;
      unsigned int v24 = (unsigned __int8 *)v5;
      goto LABEL_27;
    }
    uint64_t v21 = (v19 >> 1) + 1;
    if (v19 >= 0x3E)
    {
      unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v26 = (uint8x8_t *)(v5 + 16);
      int v27 = (uint16x8_t *)(v8 + 32);
      unint64_t v28 = v21 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v29 = *(uint8x16_t *)v26[-2].i8;
        uint16x8_t v30 = vmovl_u8(*v26);
        uint16x8_t v31 = vmovl_high_u8(*(uint8x16_t *)v26->i8);
        v27[-2] = vmovl_u8(*(uint8x8_t *)v29.i8);
        v27[-1] = vmovl_high_u8(v29);
        *int v27 = v30;
        v27[1] = v31;
        v27 += 4;
        v26 += 4;
        v28 -= 32;
      }
      while (v28);
      if (v21 == v22) {
        return result;
      }
      if ((v21 & 0x18) == 0)
      {
        unsigned int v24 = (unsigned __int8 *)(v5 + v22);
        uint64_t v23 = (char *)(v8 + 2 * v22);
        goto LABEL_27;
      }
    }
    else
    {
      unint64_t v22 = 0;
    }
    uint64_t v23 = (char *)(v8 + 2 * (v21 & 0xFFFFFFFFFFFFFFF8));
    unsigned int v24 = (unsigned __int8 *)(v5 + (v21 & 0xFFFFFFFFFFFFFFF8));
    uint8x16_t v32 = (uint8x8_t *)(v5 + v22);
    uint16x8_t v33 = (uint16x8_t *)(v8 + 2 * v22);
    unint64_t v34 = v22 - (v21 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v35 = *v32++;
      *v33++ = vmovl_u8(v35);
      v34 += 8;
    }
    while (v34);
    if (v21 == (v21 & 0xFFFFFFFFFFFFFFF8)) {
      return result;
    }
    do
    {
LABEL_27:
      __int16 v25 = *v24++;
      *(_WORD *)uint64_t v23 = v25;
      v23 += 2;
    }
    while (v23 != v7);
    return result;
  }
  uint16x8_t result = (char *)MEMORY[0x18530ACF0]();
  if (result)
  {
    unint64_t v17 = a2[1];
    if (v17)
    {
      uint64_t v18 = (char *)*a2;
      if (v17 == 1)
      {
        *uint16x8_t result = *v18;
      }
      else
      {
        return (char *)memcpy(result, v18, v17);
      }
    }
  }
  return result;
}

unsigned char *WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *((void *)a1 + 1);
  if ((!v6 && (uint64_t v6 = *(void *)a1) == 0 || (*(unsigned char *)(v6 + 16) & 4) != 0) && (!v5 || (*(unsigned char *)(v5 + 16) & 4) != 0))
  {
    uint16x8_t result = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!result) {
      return result;
    }
    __int16 v14 = result;
    uint64_t v15 = *a2;
    uint64_t v16 = *(unsigned char **)a3;
    size_t v17 = *(unsigned int *)(a3 + 8);
    if (!v15)
    {
      uint64_t v38 = 0;
      if (!v17) {
        return result;
      }
LABEL_80:
      uint16x8_t result = &v14[v38];
      if (v17 == 1)
      {
        *uint16x8_t result = *v16;
      }
      else
      {
        return memcpy(result, v16, v17);
      }
      return result;
    }
    uint64_t v18 = *(int8x16_t **)(v15 + 8);
    size_t v19 = *(unsigned int *)(v15 + 4);
    if ((*(unsigned char *)(v15 + 16) & 4) != 0)
    {
      if (v19)
      {
        if (v19 == 1) {
          *uint16x8_t result = v18->i8[0];
        }
        else {
          uint16x8_t result = memcpy(result, v18, v19);
        }
      }
    }
    else
    {
      BOOL v20 = &result[v19];
      if (v19 < 0x10)
      {
        unint64_t v21 = (unint64_t)result;
      }
      else
      {
        unint64_t v21 = (unint64_t)&result[v19 & 0xFFFFFFF0];
        unint64_t v22 = (unsigned long long *)result;
        do
        {
          unsigned long long v23 = (unsigned __int128)vld2q_s8(v18->i8);
          v18 += 2;
          *v22++ = v23;
        }
        while (v22 != (unsigned long long *)v21);
      }
      if ((unsigned char *)v21 != v20)
      {
        unint64_t v60 = (unint64_t)&result[v19 - v21];
        if (v60 < 8
          || (v21 < (unint64_t)v18 + 2 * v60 ? (BOOL v61 = v18 >= (int8x16_t *)&result[v19]) : (BOOL v61 = 1), !v61))
        {
          unint64_t v63 = (unsigned char *)v21;
          unint64_t v64 = v18;
          goto LABEL_68;
        }
        if (v60 >= 0x20)
        {
          unint64_t v62 = v60 & 0xFFFFFFFFFFFFFFE0;
          uint16x8_t v86 = v18 + 2;
          uint16x8_t v87 = (int8x16_t *)(v21 + 16);
          unint64_t v88 = v60 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v90 = v86[-2];
            int8x16_t v89 = v86[-1];
            int8x16_t v92 = *v86;
            int8x16_t v91 = v86[1];
            v86 += 4;
            v87[-1] = vuzp1q_s8(v90, v89);
            *uint16x8_t v87 = vuzp1q_s8(v92, v91);
            v87 += 2;
            v88 -= 32;
          }
          while (v88);
          if (v60 == v62) {
            goto LABEL_79;
          }
          if ((v60 & 0x18) == 0)
          {
            unint64_t v64 = (int8x16_t *)((char *)v18 + 2 * v62);
            unint64_t v63 = (unsigned char *)(v21 + v62);
            do
            {
LABEL_68:
              char v65 = v64->i8[0];
              unint64_t v64 = (int8x16_t *)((char *)v64 + 2);
              *v63++ = v65;
            }
            while (v63 != v20);
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v62 = 0;
        }
        unint64_t v63 = (unsigned char *)(v21 + (v60 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v64 = (int8x16_t *)((char *)v18 + 2 * (v60 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v93 = (int16x8_t *)((char *)v18 + 2 * v62);
        unint64_t v94 = (int8x8_t *)(v21 + v62);
        unint64_t v95 = v62 - (v60 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          int16x8_t v96 = *v93++;
          *v94++ = vmovn_s16(v96);
          v95 += 8;
        }
        while (v95);
        if (v60 != (v60 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_68;
        }
      }
    }
LABEL_79:
    uint64_t v38 = *(unsigned int *)(v15 + 4);
    if (!v17) {
      return result;
    }
    goto LABEL_80;
  }
  uint16x8_t result = (unsigned char *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!result) {
    return result;
  }
  unint64_t v8 = result;
  uint64_t v9 = *a2;
  unint64_t v10 = *(void *)a3;
  uint64_t v11 = *(unsigned int *)(a3 + 8);
  if (!v9)
  {
    uint64_t v24 = 0;
    unint64_t v25 = (unint64_t)result;
    unsigned int v26 = &result[2 * v11];
    uint64_t v27 = v11 & 0xFFFFFFC0;
    if ((v11 & 0xFFFFFFC0) != 0) {
      goto LABEL_45;
    }
    goto LABEL_48;
  }
  long long v12 = *(int8x16_t **)(v9 + 8);
  uint64_t v13 = *(unsigned int *)(v9 + 4);
  if ((*(unsigned char *)(v9 + 16) & 4) != 0)
  {
    unint64_t v28 = &result[2 * v13];
    if (v13 < 0x40)
    {
      unint64_t v29 = (unint64_t)result;
      if (result == v28) {
        goto LABEL_44;
      }
    }
    else
    {
      unint64_t v29 = (unint64_t)&result[2 * (v13 & 0xFFFFFFC0)];
      long long v30 = 0uLL;
      uint16x8_t v31 = result;
      do
      {
        v98.val[0] = *v12;
        int8x16_t v32 = v12[1];
        v100.val[0] = v12[2];
        int8x16_t v33 = v12[3];
        v12 += 4;
        int8x16_t v34 = v33;
        v100.val[1] = 0uLL;
        v102.val[0] = v32;
        v98.val[1] = 0uLL;
        uint8x8_t v35 = v31;
        vst2q_s8(v35, v98);
        v35 += 32;
        v102.val[1] = 0uLL;
        vst2q_s8(v35, v102);
        unint64_t v36 = v31 + 64;
        vst2q_s8(v36, v100);
        int8x16x2_t v37 = v31 + 96;
        vst2q_s8(v37, *(int8x16x2_t *)(&v30 - 1));
        v31 += 128;
      }
      while (v31 != (char *)v29);
      if ((unsigned char *)v29 == v28) {
        goto LABEL_44;
      }
    }
    unint64_t v39 = (unint64_t)&result[2 * v13 - v29 - 2];
    if (v39 < 0xE
      || (v29 < (unint64_t)v12->u64 + (v39 >> 1) + 1
        ? (BOOL v40 = (unint64_t)v12 >= (v39 & 0xFFFFFFFFFFFFFFFELL) + v29 + 2)
        : (BOOL v40 = 1),
          !v40))
    {
      unint64_t v43 = (_WORD *)v29;
      uint8x8_t v44 = v12;
      goto LABEL_41;
    }
    uint64_t v41 = (v39 >> 1) + 1;
    if (v39 >= 0x3E)
    {
      unint64_t v42 = v41 & 0xFFFFFFFFFFFFFFE0;
      uint16x8_t v76 = (uint8x8_t *)&v12[1];
      uint16x8_t v77 = (uint16x8_t *)(v29 + 32);
      unint64_t v78 = v41 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v79 = *(uint8x16_t *)v76[-2].i8;
        uint16x8_t v80 = vmovl_u8(*v76);
        uint16x8_t v81 = vmovl_high_u8(*(uint8x16_t *)v76->i8);
        v77[-2] = vmovl_u8(*(uint8x8_t *)v79.i8);
        v77[-1] = vmovl_high_u8(v79);
        uint16x8_t *v77 = v80;
        v77[1] = v81;
        v77 += 4;
        v76 += 4;
        v78 -= 32;
      }
      while (v78);
      if (v41 == v42) {
        goto LABEL_44;
      }
      if ((v41 & 0x18) == 0)
      {
        uint8x8_t v44 = (int8x16_t *)((char *)v12 + v42);
        unint64_t v43 = (_WORD *)(v29 + 2 * v42);
        goto LABEL_41;
      }
    }
    else
    {
      unint64_t v42 = 0;
    }
    unint64_t v43 = (_WORD *)(v29 + 2 * (v41 & 0xFFFFFFFFFFFFFFF8));
    uint8x8_t v44 = (int8x16_t *)((char *)v12 + (v41 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v82 = (uint8x8_t *)&v12->i8[v42];
    unint64_t v83 = (uint16x8_t *)(v29 + 2 * v42);
    unint64_t v84 = v42 - (v41 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v85 = *v82++;
      *v83++ = vmovl_u8(v85);
      v84 += 8;
    }
    while (v84);
    if (v41 == (v41 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_44;
    }
    do
    {
LABEL_41:
      __int16 v45 = v44->u8[0];
      uint8x8_t v44 = (int8x16_t *)((char *)v44 + 1);
      *v43++ = v45;
    }
    while (v43 != (_WORD *)v28);
    goto LABEL_44;
  }
  if (v13)
  {
    if (v13 == 1) {
      *(_WORD *)uint16x8_t result = v12->i16[0];
    }
    else {
      uint16x8_t result = memcpy(result, v12, 2 * v13);
    }
  }
LABEL_44:
  uint64_t v24 = *(unsigned int *)(v9 + 4);
  unint64_t v25 = (unint64_t)&v8[2 * v24];
  unsigned int v26 = (_WORD *)(v25 + 2 * v11);
  uint64_t v27 = v11 & 0xFFFFFFC0;
  if ((v11 & 0xFFFFFFC0) != 0)
  {
LABEL_45:
    unint64_t v46 = v25 + 2 * v27;
    long long v47 = 0uLL;
    do
    {
      v99.val[0] = *(int8x16_t *)v10;
      int8x16_t v48 = *(int8x16_t *)(v10 + 16);
      v101.val[0] = *(int8x16_t *)(v10 + 32);
      long long v49 = *(_OWORD *)(v10 + 48);
      v10 += 64;
      long long v50 = v49;
      v101.val[1] = 0uLL;
      v103.val[0] = v48;
      v99.val[1] = 0uLL;
      int8x16_t v51 = (char *)v25;
      vst2q_s8(v51, v99);
      v51 += 32;
      v103.val[1] = 0uLL;
      vst2q_s8(v51, v103);
      uint64_t v52 = (char *)(v25 + 64);
      vst2q_s8(v52, v101);
      uint64_t v53 = (char *)(v25 + 96);
      vst2q_s8(v53, *(int8x16x2_t *)(&v47 - 1));
      v25 += 128;
    }
    while (v25 != v46);
    unint64_t v25 = v46;
  }
LABEL_48:
  if ((_WORD *)v25 == v26) {
    return result;
  }
  unint64_t v54 = (unint64_t)&v8[2 * v24 + 2 * v11 - v25 - 2];
  if (v54 < 0xE || v25 < v10 + (v54 >> 1) + 1 && v10 < (v54 & 0xFFFFFFFFFFFFFFFELL) + v25 + 2)
  {
    unint64_t v55 = (_WORD *)v25;
    uint8x8_t v56 = (unsigned __int8 *)v10;
    goto LABEL_53;
  }
  uint64_t v58 = (v54 >> 1) + 1;
  if (v54 >= 0x3E)
  {
    unint64_t v59 = v58 & 0xFFFFFFFFFFFFFFE0;
    int8x16x2_t v66 = (uint8x8_t *)(v10 + 16);
    int8x16x2_t v67 = (uint16x8_t *)(v25 + 32);
    unint64_t v68 = v58 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v69 = *(uint8x16_t *)v66[-2].i8;
      uint16x8_t v70 = vmovl_u8(*v66);
      uint16x8_t v71 = vmovl_high_u8(*(uint8x16_t *)v66->i8);
      v67[-2] = vmovl_u8(*(uint8x8_t *)v69.i8);
      v67[-1] = vmovl_high_u8(v69);
      *int8x16x2_t v67 = v70;
      v67[1] = v71;
      v67 += 4;
      v66 += 4;
      v68 -= 32;
    }
    while (v68);
    if (v58 == v59) {
      return result;
    }
    if ((v58 & 0x18) == 0)
    {
      uint8x8_t v56 = (unsigned __int8 *)(v10 + v59);
      unint64_t v55 = (_WORD *)(v25 + 2 * v59);
      do
      {
LABEL_53:
        __int16 v57 = *v56++;
        *v55++ = v57;
      }
      while (v55 != v26);
      return result;
    }
  }
  else
  {
    unint64_t v59 = 0;
  }
  unint64_t v55 = (_WORD *)(v25 + 2 * (v58 & 0xFFFFFFFFFFFFFFF8));
  uint8x8_t v56 = (unsigned __int8 *)(v10 + (v58 & 0xFFFFFFFFFFFFFFF8));
  uint16x8_t v72 = (uint8x8_t *)(v10 + v59);
  long long v73 = (uint16x8_t *)(v25 + 2 * v59);
  unint64_t v74 = v59 - (v58 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v75 = *v72++;
    *v73++ = vmovl_u8(v75);
    v74 += 8;
  }
  while (v74);
  if (v58 != (v58 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_53;
  }
  return result;
}

void WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<char,void>,WTF::StringTypeAdapter<WTF::Indentation<4u>,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>(WTF::StringBuilder *a1, unsigned char *a2, int *a3, uint64_t a4)
{
  uint64_t v7 = *((void *)a1 + 1);
  if (!v7 && (uint64_t v7 = *(void *)a1) == 0 || (*(unsigned char *)(v7 + 16) & 4) != 0)
  {
    size_t v19 = (unsigned char *)MEMORY[0x18530ACF0]();
    if (!v19) {
      return;
    }
    int v20 = *a3;
    unint64_t v21 = *(unsigned char **)a4;
    size_t v22 = *(unsigned int *)(a4 + 8);
    *size_t v19 = *a2;
    unsigned long long v23 = v19 + 1;
    uint64_t v24 = (4 * v20);
    if (v24)
    {
      memset(v19 + 1, 32, (4 * v20));
      if (!v22) {
        return;
      }
    }
    else
    {
      uint64_t v24 = 0;
      if (!v22) {
        return;
      }
    }
    unint64_t v25 = &v23[v24];
    if (v22 == 1)
    {
      unsigned char *v25 = *v21;
    }
    else
    {
      memcpy(v25, v21, v22);
    }
    return;
  }
  unint64_t v8 = (_WORD *)WTF::StringBuilder::extendBufferForAppendingWithUpconvert(a1);
  if (!v8) {
    return;
  }
  uint64_t v9 = v8;
  __int16 v10 = (char)*a2;
  int v11 = *a3;
  unint64_t v12 = *(void *)a4;
  uint64_t v13 = *(unsigned int *)(a4 + 8);
  *unint64_t v8 = v10;
  __int16 v14 = v8 + 1;
  uint64_t v15 = (4 * v11);
  if (v15)
  {
    memset_pattern16(v8 + 1, asc_1826CF510, 2 * (4 * v11));
    unint64_t v16 = (unint64_t)&v14[v15];
    size_t v17 = (_WORD *)(v16 + 2 * v13);
    uint64_t v18 = v13 & 0xFFFFFFC0;
    if ((v13 & 0xFFFFFFC0) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v26 = v16 + 2 * v18;
    long long v27 = 0uLL;
    do
    {
      v52.val[0] = *(int8x16_t *)v12;
      int8x16_t v28 = *(int8x16_t *)(v12 + 16);
      v53.val[0] = *(int8x16_t *)(v12 + 32);
      long long v29 = *(_OWORD *)(v12 + 48);
      v12 += 64;
      long long v30 = v29;
      v53.val[1] = 0uLL;
      v54.val[0] = v28;
      v52.val[1] = 0uLL;
      uint16x8_t v31 = (char *)v16;
      vst2q_s8(v31, v52);
      v31 += 32;
      v54.val[1] = 0uLL;
      vst2q_s8(v31, v54);
      int8x16_t v32 = (char *)(v16 + 64);
      vst2q_s8(v32, v53);
      int8x16_t v33 = (char *)(v16 + 96);
      vst2q_s8(v33, *(int8x16x2_t *)(&v27 - 1));
      v16 += 128;
    }
    while (v16 != v26);
    unint64_t v16 = v26;
    goto LABEL_22;
  }
  uint64_t v15 = 0;
  unint64_t v16 = (unint64_t)(v8 + 1);
  size_t v17 = &v14[v13];
  uint64_t v18 = v13 & 0xFFFFFFC0;
  if ((v13 & 0xFFFFFFC0) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  if ((_WORD *)v16 == v17) {
    return;
  }
  unint64_t v34 = (unint64_t)&v9[v15 + v13] - v16;
  if (v34 < 0xE
    || (v16 < v12 + (v34 >> 1) + 1 ? (BOOL v35 = v12 >= (v34 & 0xFFFFFFFFFFFFFFFELL) + v16 + 2) : (BOOL v35 = 1), !v35))
  {
    uint64_t v38 = (_WORD *)v16;
    unint64_t v39 = (unsigned __int8 *)v12;
    goto LABEL_32;
  }
  uint64_t v36 = (v34 >> 1) + 1;
  if (v34 >= 0x3E)
  {
    unint64_t v37 = v36 & 0xFFFFFFFFFFFFFFE0;
    uint64_t v41 = (uint8x8_t *)(v12 + 16);
    unint64_t v42 = (uint16x8_t *)(v16 + 32);
    unint64_t v43 = v36 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v44 = *(uint8x16_t *)v41[-2].i8;
      uint16x8_t v45 = vmovl_u8(*v41);
      uint16x8_t v46 = vmovl_high_u8(*(uint8x16_t *)v41->i8);
      v42[-2] = vmovl_u8(*(uint8x8_t *)v44.i8);
      v42[-1] = vmovl_high_u8(v44);
      *unint64_t v42 = v45;
      v42[1] = v46;
      v42 += 4;
      v41 += 4;
      v43 -= 32;
    }
    while (v43);
    if (v36 == v37) {
      return;
    }
    if ((v36 & 0x18) == 0)
    {
      unint64_t v39 = (unsigned __int8 *)(v12 + v37);
      uint64_t v38 = (_WORD *)(v16 + 2 * v37);
      do
      {
LABEL_32:
        __int16 v40 = *v39++;
        *v38++ = v40;
      }
      while (v38 != v17);
      return;
    }
  }
  else
  {
    unint64_t v37 = 0;
  }
  uint64_t v38 = (_WORD *)(v16 + 2 * (v36 & 0xFFFFFFFFFFFFFFF8));
  unint64_t v39 = (unsigned __int8 *)(v12 + (v36 & 0xFFFFFFFFFFFFFFF8));
  long long v47 = (uint8x8_t *)(v12 + v37);
  int8x16_t v48 = (uint16x8_t *)(v16 + 2 * v37);
  unint64_t v49 = v37 - (v36 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v50 = *v47++;
    *v48++ = vmovl_u8(v50);
    v49 += 8;
  }
  while (v49);
  if (v36 != (v36 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_32;
  }
}

uint64_t WGSL::OverloadResolver::resolve@<X0>(uint64_t this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(unsigned int *)(*(void *)(this + 8) + 12);
  if (v4)
  {
    uint64_t v5 = this;
    uint64_t v6 = 10 * v4;
    uint64_t v7 = (_DWORD *)WTF::fastMalloc((WTF *)(40 * v4 + 8));
    __int16 v10 = (WTF *)v7;
    *uint64_t v7 = v4;
    int v11 = v7 + 2;
    unint64_t v12 = v7 + 2;
    if ((unint64_t)(40 * v4 - 40) < 0x28) {
      goto LABEL_207;
    }
    unint64_t v13 = (v6 * 4 - 40) / 0x28uLL + 1;
    unint64_t v12 = &v11[10 * (v13 & 0xFFFFFFFFFFFFFFELL)];
    __int16 v14 = v7 + 10;
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFFFELL;
    do
    {
      *(v14 - 32) = 0;
      v14[8] = 0;
      unsigned char *v14 = 0;
      v14[40] = 0;
      v14 += 80;
      v15 -= 2;
    }
    while (v15);
    if (v13 != (v13 & 0xFFFFFFFFFFFFFFELL))
    {
LABEL_207:
      do
      {
        *unint64_t v12 = 0;
        v12[32] = 0;
        v12 += 40;
      }
      while (v12 != (unsigned char *)&v11[v6]);
    }
    unint64_t v16 = *(uint64_t **)(v5 + 8);
    unint64_t v17 = *((unsigned int *)v16 + 3);
    if (v17)
    {
      for (unint64_t i = 0; i < v17; ++i)
      {
        if (i >= v17) {
          goto LABEL_189;
        }
        uint64_t v19 = *v16;
        uint64_t v20 = *v16 + 88 * i;
        unint64_t v21 = (unsigned int *)(v20 + 60);
        if (*(_DWORD *)(v20 + 60) != *(_DWORD *)(*(void *)(v5 + 16) + 12)
          || *(_DWORD *)(*(void *)(v5 + 24) + 12) > *(_DWORD *)(v20 + 12))
        {
          goto LABEL_14;
        }
        int8x16_t v32 = *(unsigned int **)(v5 + 32);
        if (v32)
        {
          uint64_t v33 = *v32;
          if (v33)
          {
            unint64_t v34 = v9;
            bzero(v32 + 2, 8 * v33);
            uint64_t v9 = v34;
          }
        }
        BOOL v35 = *(unsigned int **)(v5 + 40);
        if (!v35) {
          goto LABEL_49;
        }
        uint64_t v36 = *v35;
        if (!v36) {
          goto LABEL_49;
        }
        unint64_t v37 = v35 + 1;
        if (v36 == 1)
        {
          uint64_t v38 = *v35;
        }
        else
        {
          v37 += 8 * (v36 & 0xFFFFFFFE);
          uint64_t v38 = v36 & 1;
          unint64_t v39 = v35 + 4;
          uint64_t v40 = v36 & 0xFFFFFFFE;
          do
          {
            *(v39 - 12) = 0;
            *(v39 - 4) = 0;
            *(v39 - 8) = 0;
            *unint64_t v39 = 0;
            v39 += 16;
            v40 -= 2;
          }
          while (v40);
          if ((v36 & 0xFFFFFFFE) == v36) {
            goto LABEL_49;
          }
        }
        unint64_t v41 = v38 + 1;
        do
        {
          *unint64_t v37 = 0;
          v37[4] = 0;
          --v41;
          v37 += 8;
        }
        while (v41 > 1);
LABEL_49:
        uint64_t v42 = *(void *)(v5 + 24);
        if (*(_DWORD *)(v42 + 12))
        {
          unint64_t v43 = 0;
          uint64_t v44 = *(unsigned int *)(v20 + 12);
          while (1)
          {
            if (v43 == v44)
            {
              __break(0xC471u);
              JUMPOUT(0x1825A1904);
            }
            uint64_t v45 = *(void *)(*(void *)v20 + 8 * v43);
            uint64_t v46 = *(void *)(*(void *)v42 + 8 * v43);
            if (BYTE4(v45)) {
              break;
            }
LABEL_73:
            unint64_t v49 = *(_DWORD **)(v5 + 32);
            if (*v49 <= v45)
            {
              __break(0xC471u);
              JUMPOUT(0x1825A1888);
            }
            *(void *)&v49[2 * v45 + 2] = v46;
            ++v43;
            uint64_t v42 = *(void *)(v5 + 24);
            if (v43 >= *(unsigned int *)(v42 + 12)) {
              goto LABEL_75;
            }
          }
          if (v46)
          {
            uint64_t v47 = v46;
            while (1)
            {
              int v48 = *(_DWORD *)(v47 + 48);
              if (v48 != 10) {
                break;
              }
              uint64_t v47 = *(void *)(v47 + 8);
              if (!v47) {
                goto LABEL_14;
              }
            }
            if (!v48)
            {
              switch(*(unsigned char *)v47)
              {
                case 0:
                  if (BYTE4(v45) < 2u) {
                    break;
                  }
                  goto LABEL_73;
                case 1:
                  if ((v45 & 0x400000000) == 0) {
                    break;
                  }
                  goto LABEL_73;
                case 2:
                  if ((v45 & 0x800000000) == 0) {
                    break;
                  }
                  goto LABEL_73;
                case 3:
                  if ((v45 & 0x7000000000) == 0) {
                    break;
                  }
                  goto LABEL_73;
                case 4:
                  if ((v45 & 0x4000000000) == 0) {
                    break;
                  }
                  goto LABEL_73;
                case 5:
                  if ((v45 & 0x2000000000) == 0) {
                    break;
                  }
                  goto LABEL_73;
                case 7:
                  if ((v45 & 0x100000000) != 0) {
                    goto LABEL_73;
                  }
                  break;
                default:
                  break;
              }
            }
          }
LABEL_14:
          int v22 = 0;
          v3 &= 0xFFFFFFFFFFFFFF00;
          char v23 = 1;
          goto LABEL_15;
        }
LABEL_75:
        int8x16x2_t v98 = v9;
        uint64_t v50 = *(unsigned int *)(*(void *)(v5 + 16) + 12);
        if (!v50)
        {
          uint16x8_t v76 = 0;
          uint8x8_t v75 = 0;
          uint64_t v77 = ((uint64_t (*)(uint64_t, unint64_t))WGSL::OverloadResolver::materialize)(v5, v19 + 88 * i + 80);
          if (!v77) {
            goto LABEL_140;
          }
LABEL_138:
          int v2 = v75;
          char v23 = 0;
          int v22 = 1;
          uint64_t v102 = v77;
          uint64_t v9 = v76;
          uint64_t v3 = v20;
          goto LABEL_15;
        }
        int8x16x2_t v101 = (WTF *)WTF::fastMalloc((WTF *)(4 * v50 + 4));
        *(_DWORD *)int8x16x2_t v101 = v50;
        uint64_t v51 = *(unsigned int *)(*(void *)(v5 + 16) + 12);
        if (!v51)
        {
          uint8x8_t v75 = 0;
          uint16x8_t v76 = v101;
          uint64_t v77 = ((uint64_t (*)(uint64_t, unint64_t))WGSL::OverloadResolver::materialize)(v5, v19 + 88 * i + 80);
          if (!v77) {
            goto LABEL_140;
          }
          goto LABEL_138;
        }
        int8x16x2_t v100 = (WTF *)WTF::fastMalloc((WTF *)(8 * v51 + 8));
        *(_DWORD *)int8x16x2_t v100 = v51;
        uint64_t v52 = *(void *)(v5 + 16);
        if (!*(_DWORD *)(v52 + 12)) {
          goto LABEL_135;
        }
        int16x8_t v96 = v10;
        uint64_t v53 = 0;
        unint64_t v54 = 0;
        int8x16x2_t v103 = (void *)(v20 + 48);
        do
        {
          if (v54 >= *v21)
          {
            __break(0xC471u);
            JUMPOUT(0x1825A18FCLL);
          }
          if ((((uint64_t (*)(uint64_t, uint64_t, void))WGSL::OverloadResolver::unify)(v5, *v103 + v53, *(void *)(*(void *)v52 + 8 * v54)) & 1) == 0)
          {
            v3 &= 0xFFFFFFFFFFFFFF00;
            __int16 v10 = v96;
            uint8x8_t v75 = v100;
            uint16x8_t v76 = v101;
            goto LABEL_145;
          }
          ++v54;
          uint64_t v52 = *(void *)(v5 + 16);
          unint64_t v56 = *(unsigned int *)(v52 + 12);
          v53 += 8;
        }
        while (v54 < v56);
        if (!v56) {
          goto LABEL_134;
        }
        unint64_t v57 = 0;
        int8x16x2_t v99 = v2;
        do
        {
          if (v57 >= *v21)
          {
            __break(0xC471u);
            JUMPOUT(0x1825A190CLL);
          }
          uint64_t v58 = (WGSL *)(*(void *)v52 + 8 * v57);
          unint64_t v59 = (unsigned int ***)(*v103 + 8 * v57);
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_88:
                uint64_t v58 = *(WGSL **)v58;
                unint64_t v60 = *v59;
                if (!*v59) {
                  goto LABEL_92;
                }
                unsigned int v61 = *((_DWORD *)v60 + 6);
                if (v61 != 5) {
                  break;
                }
                if (*((_DWORD *)v58 + 12) != 10) {
                  goto LABEL_188;
                }
LABEL_87:
                unint64_t v59 = (unsigned int ***)(v60 + 1);
                uint64_t v58 = (WGSL *)((char *)v58 + 8);
              }
              if (v61 == 6)
              {
                if (*((_DWORD *)v58 + 12) != 11) {
                  goto LABEL_188;
                }
                goto LABEL_87;
              }
              if (v61 == 9)
              {
                uint16x8_t v71 = *v60;
                uint16x8_t v72 = *(_DWORD **)(v5 + 32);
                if (*v72 <= v71)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825A18A8);
                }
                long long v73 = *(const WGSL::Type **)&v72[2 * v71 + 2];
                if (BYTE4(v71))
                {
                  long long v73 = (const WGSL::Type *)WGSL::satisfyOrPromote((uint64_t)v73, BYTE4(v71), *(void **)v5);
                  if (!v73)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825A18C8);
                  }
                }
                goto LABEL_130;
              }
LABEL_92:
              if (!v58 || *((_DWORD *)v58 + 12) != 10) {
                break;
              }
              uint64_t v58 = (WGSL *)((char *)v58 + 8);
            }
            if (!v60) {
              break;
            }
            unsigned int v62 = *((_DWORD *)v60 + 6);
            switch(v62)
            {
              case 0u:
                if (*((_DWORD *)v58 + 12) != 1) {
                  goto LABEL_188;
                }
                unint64_t v59 = (unsigned int ***)(v60 + 1);
                break;
              case 1u:
                if (*((_DWORD *)v58 + 12) != 2) {
                  goto LABEL_188;
                }
                unint64_t v59 = (unsigned int ***)(v60 + 2);
                break;
              case 2u:
                if (*((_DWORD *)v58 + 12) != 7) {
                  goto LABEL_188;
                }
                unint64_t v59 = (unsigned int ***)(v60 + 1);
                break;
              case 7u:
                unint64_t v59 = (unsigned int ***)v60;
                if (*((_DWORD *)v58 + 12) != 3) {
                  goto LABEL_188;
                }
                goto LABEL_88;
              case 8u:
                unint64_t v59 = (unsigned int ***)v60;
                if (*((_DWORD *)v58 + 12) != 12) {
                  goto LABEL_188;
                }
                goto LABEL_88;
              default:
                goto LABEL_110;
            }
          }
          unsigned int v62 = MEMORY[0x18];
LABEL_110:
          if (v62 == 3)
          {
            int v63 = 0;
            goto LABEL_131;
          }
          if (v60 && v62 == 4)
          {
            uint64_t v64 = *(unsigned int *)v60;
            unsigned int v65 = *((_DWORD *)v60 + 1);
            if (v65 != 1)
            {
              if (!v65)
              {
                int8x16x2_t v66 = *(_DWORD **)(v5 + 40);
                if (*v66 <= v64)
                {
                  __break(0xC471u);
                }
                else
                {
                  uint64_t v64 = *(void *)&v66[2 * v64 + 1];
                  if ((v64 & 0xFF00000000) != 0) {
                    goto LABEL_118;
                  }
                }
                __break(1u);
              }
LABEL_188:
              std::__throw_bad_variant_access[abi:sn180100]();
LABEL_189:
              __break(0xC471u);
              JUMPOUT(0x1825A18F4);
            }
LABEL_118:
            int8x16x2_t v67 = *(unsigned int **)v5;
            int v68 = 1 << v64;
            if ((v68 & 0x14493) != 0)
            {
              unint64_t v60 = (unsigned int **)(v67 + 20);
            }
            else
            {
              BOOL v69 = (v68 & 0x2924) == 0;
              uint16x8_t v70 = (unsigned int **)(v67 + 16);
              unint64_t v60 = (unsigned int **)(v67 + 18);
              if (!v69) {
                unint64_t v60 = v70;
              }
            }
          }
          else if (v62 != 10)
          {
            goto LABEL_188;
          }
          long long v73 = (const WGSL::Type *)*v60;
LABEL_130:
          int v63 = WGSL::conversionRank(v58, v73, v55);
          int v2 = v99;
          if (v63 == -1)
          {
            __break(0xC471u);
            JUMPOUT(0x1825A1828);
          }
LABEL_131:
          if (v57 >= *(unsigned int *)v101)
          {
            __break(0xC471u);
            JUMPOUT(0x1825A1848);
          }
          *((_DWORD *)v101 + v57 + 1) = v63;
          uint64_t v74 = ((uint64_t (*)(uint64_t))WGSL::OverloadResolver::materialize)(v5);
          if (v57 >= *(unsigned int *)v100)
          {
            __break(0xC471u);
            JUMPOUT(0x1825A1868);
          }
          *((void *)v100 + ++v57) = v74;
          uint64_t v52 = *(void *)(v5 + 16);
        }
        while (v57 < *(unsigned int *)(v52 + 12));
LABEL_134:
        __int16 v10 = v96;
LABEL_135:
        uint8x8_t v75 = v100;
        uint16x8_t v76 = v101;
        uint64_t v77 = ((uint64_t (*)(uint64_t, unint64_t))WGSL::OverloadResolver::materialize)(v5, v19 + 88 * i + 80);
        if (v77) {
          goto LABEL_138;
        }
LABEL_140:
        v3 &= 0xFFFFFFFFFFFFFF00;
        if (!v75)
        {
          if (v76) {
            goto LABEL_142;
          }
          goto LABEL_143;
        }
LABEL_145:
        WTF::fastFree(v75, v8);
        if (v76) {
LABEL_142:
        }
          WTF::fastFree(v76, v8);
LABEL_143:
        int v22 = 0;
        char v23 = 1;
        uint64_t v9 = v98;
LABEL_15:
        if (i >= *(unsigned int *)v10)
        {
          __break(0xC471u);
          JUMPOUT(0x1825A1808);
        }
        uint64_t v24 = &v11[10 * i];
        if (*((unsigned __int8 *)v24 + 32) != v22)
        {
          if (!*((unsigned char *)v24 + 32))
          {
            *(void *)uint64_t v24 = v3;
            *((void *)v24 + 1) = v9;
            *((void *)v24 + 2) = v2;
            *((void *)v24 + 3) = v102;
            *((unsigned char *)v24 + 32) = 1;
            int v2 = 0;
            uint64_t v9 = 0;
            if ((v23 & 1) == 0) {
              goto LABEL_31;
            }
            goto LABEL_10;
          }
          long long v27 = (WTF *)*((void *)v24 + 2);
          *((void *)v24 + 2) = 0;
          if (v27)
          {
            int8x16_t v28 = v9;
            WTF::fastFree(v27, v8);
            uint64_t v9 = v28;
          }
          long long v29 = (WTF *)*((void *)v24 + 1);
          *((void *)v24 + 1) = 0;
          if (v29)
          {
            long long v30 = v9;
            WTF::fastFree(v29, v8);
            uint64_t v9 = v30;
          }
          *((unsigned char *)v24 + 32) = 0;
LABEL_30:
          if ((v23 & 1) == 0) {
            goto LABEL_31;
          }
          goto LABEL_10;
        }
        if (!*((unsigned char *)v24 + 32)) {
          goto LABEL_30;
        }
        unint64_t v25 = (WTF *)*((void *)v24 + 1);
        *(void *)uint64_t v24 = v3;
        *((void *)v24 + 1) = v9;
        if (v25) {
          WTF::fastFree(v25, v8);
        }
        unint64_t v26 = (WTF *)*((void *)v24 + 2);
        *((void *)v24 + 2) = v2;
        if (v26) {
          WTF::fastFree(v26, v8);
        }
        int v2 = 0;
        uint64_t v9 = 0;
        *((void *)v24 + 3) = v102;
        if ((v23 & 1) == 0)
        {
LABEL_31:
          if (v2)
          {
            uint16x8_t v31 = v9;
            WTF::fastFree(v2, v8);
            uint64_t v9 = v31;
          }
          if (v9)
          {
            WTF::fastFree(v9, v8);
            int v2 = 0;
            uint64_t v9 = 0;
          }
          else
          {
            int v2 = 0;
          }
        }
LABEL_10:
        unint64_t v16 = *(uint64_t **)(v5 + 8);
        unint64_t v17 = *((unsigned int *)v16 + 3);
      }
    }
    v104[0] = 0;
    char v107 = 0;
    if (!*(_DWORD *)v10) {
      goto LABEL_167;
    }
    unint64_t v78 = &v11[10 * *(unsigned int *)v10];
    do
    {
      if (*((unsigned char *)v11 + 32))
      {
        if (v107)
        {
          uint8x16_t v79 = (unsigned int *)*((void *)v11 + 1);
          if (v79)
          {
            unsigned int v82 = *v79;
            uint16x8_t v80 = v79 + 1;
            uint64_t v81 = v82;
            if (v82)
            {
              unint64_t v83 = 0;
              char v84 = 0;
              uint8x8_t v85 = v105;
              uint64_t v86 = 4 * v81;
              while (1)
              {
                if (4 * *(unsigned int *)v105 == v83)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825A17E8);
                }
                unsigned int v87 = v80[v83 / 4];
                unsigned int v88 = *(_DWORD *)((char *)v105 + v83 + 4);
                if (v87 > v88) {
                  break;
                }
                v84 |= v87 < v88;
                v83 += 4;
                if (v86 == v83)
                {
                  if (v84)
                  {
                    int8x16_t v89 = (WTF *)v106;
                    int8x16x2_t v105 = 0;
                    *(void *)&long long v106 = 0;
                    std::__optional_storage_base<WGSL::ViableOverload,false>::__assign_from[abi:sn180100]<std::__optional_copy_assign_base<WGSL::ViableOverload,false> const&>((uint64_t)v104, v11);
                    if (v89) {
                      WTF::fastFree(v89, v90);
                    }
                    WTF::fastFree(v85, v90);
                  }
                  break;
                }
              }
            }
          }
        }
        else
        {
          std::__optional_storage_base<WGSL::ViableOverload,false>::__assign_from[abi:sn180100]<std::__optional_copy_assign_base<WGSL::ViableOverload,false> const&>((uint64_t)v104, v11);
        }
      }
      v11 += 10;
    }
    while (v11 != v78);
    if (v107)
    {
      *(_OWORD *)a2 = v106;
      *(unsigned char *)(a2 + 16) = 1;
      if (v105) {
        WTF::fastFree(v105, v8);
      }
    }
    else
    {
LABEL_167:
      *(unsigned char *)a2 = 0;
      *(unsigned char *)(a2 + 16) = 0;
    }
    uint64_t v91 = *(unsigned int *)v10;
    if (v91)
    {
      uint64_t v92 = 40 * v91;
      unint64_t v93 = (char *)v10 + 24;
      do
      {
        if (v93[16])
        {
          unint64_t v94 = *(WTF **)v93;
          *(void *)unint64_t v93 = 0;
          if (v94) {
            WTF::fastFree(v94, v8);
          }
          unint64_t v95 = (WTF *)*((void *)v93 - 1);
          *((void *)v93 - 1) = 0;
          if (v95) {
            WTF::fastFree(v95, v8);
          }
        }
        v93 += 40;
        v92 -= 40;
      }
      while (v92);
    }
    return WTF::fastFree(v10, v8);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 16) = 0;
  }
  return this;
}

uint64_t WGSL::OverloadResolver::materialize(uint64_t a1, uint64_t a2, int a3)
{
  if (a3 != 1)
  {
    if (!a3)
    {
      uint64_t v3 = *(_DWORD **)(a1 + 40);
      if (*v3 <= a2)
      {
        __break(0xC471u);
      }
      else
      {
        a2 = *(void *)&v3[2 * a2 + 1];
        if ((a2 & 0xFF00000000) != 0) {
          return a2;
        }
      }
      __break(1u);
    }
    std::__throw_bad_variant_access[abi:sn180100]();
    JUMPOUT(0x1825A22BCLL);
  }
  return a2;
}

uint64_t WGSL::OverloadResolver::unify(uint64_t a1, unsigned int a2, int a3, int a4)
{
  if (a3)
  {
    if (a3 == 1)
    {
      return a2 == a4;
    }
    else
    {
      uint64_t v10 = std::__throw_bad_variant_access[abi:sn180100]();
      return WGSL::resolveOverloads(v10);
    }
  }
  else
  {
    uint64_t v5 = *(unsigned int **)(a1 + 40);
    if (*v5 <= a2)
    {
      __break(0xC471u);
      JUMPOUT(0x1825A2A9CLL);
    }
    uint64_t v6 = &v5[2 * a2];
    uint64_t v9 = *(void *)(v6 + 1);
    uint64_t v7 = v6 + 1;
    int v8 = v9;
    if ((v9 & 0xFF00000000) != 0)
    {
      return v8 == a4;
    }
    else
    {
      *uint64_t v7 = a4;
      uint64_t result = 1;
      *((unsigned char *)v7 + 4) = 1;
    }
  }
  return result;
}

WTF *WGSL::resolveOverloads@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned int v6 = *((_DWORD *)a2 + 3);
  if (!v6)
  {
    unint64_t v12 = 0;
    uint64_t v34 = a1;
    BOOL v35 = a2;
    uint64_t v36 = a3;
    uint64_t v37 = a4;
    uint64_t v38 = 0;
    goto LABEL_40;
  }
  uint64_t v7 = *a2;
  unint64_t v8 = 88 * v6 - 88;
  if (v8 < 0x58)
  {
    unsigned int v9 = 0;
    unsigned int v10 = 0;
    uint64_t v11 = *a2;
LABEL_22:
    uint64_t v20 = v7 + 88 * v6;
    do
    {
      if (v9 <= *(_DWORD *)(v11 + 12)) {
        unsigned int v9 = *(_DWORD *)(v11 + 12);
      }
      if (v10 <= *(_DWORD *)(v11 + 36)) {
        unsigned int v10 = *(_DWORD *)(v11 + 36);
      }
      v11 += 88;
    }
    while (v11 != v20);
    goto LABEL_28;
  }
  unsigned int v13 = 0;
  unsigned int v14 = 0;
  unsigned int v15 = 0;
  unsigned int v16 = 0;
  unint64_t v17 = v8 / 0x58 + 1;
  uint64_t v11 = v7 + 88 * (v17 & 0x7FFFFFFFFFFFFFELL);
  uint64_t v18 = (unsigned int *)(v7 + 100);
  uint64_t v19 = v17 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    if (v13 <= *(v18 - 22)) {
      unsigned int v13 = *(v18 - 22);
    }
    if (v14 <= *v18) {
      unsigned int v14 = *v18;
    }
    if (v15 <= *(v18 - 16)) {
      unsigned int v15 = *(v18 - 16);
    }
    if (v16 <= v18[6]) {
      unsigned int v16 = v18[6];
    }
    v18 += 44;
    v19 -= 2;
  }
  while (v19);
  if (v15 <= v16) {
    unsigned int v10 = v16;
  }
  else {
    unsigned int v10 = v15;
  }
  if (v13 <= v14) {
    unsigned int v9 = v14;
  }
  else {
    unsigned int v9 = v13;
  }
  if (v17 != (v17 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_22;
  }
LABEL_28:
  uint64_t v34 = a1;
  BOOL v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  if (v9)
  {
    unint64_t v21 = (WTF *)WTF::fastMalloc((WTF *)(8 * v9 + 8));
    *(_DWORD *)unint64_t v21 = v9;
    uint64_t v38 = v21;
    if (v10) {
      goto LABEL_30;
    }
LABEL_36:
    unint64_t v12 = 0;
    goto LABEL_40;
  }
  uint64_t v38 = 0;
  if (!v10) {
    goto LABEL_36;
  }
LABEL_30:
  int v22 = (_DWORD *)WTF::fastMalloc((WTF *)((8 * v10) | 4));
  unint64_t v12 = (WTF *)v22;
  *int v22 = v10;
  char v23 = v22 + 1;
  uint64_t v24 = (v10 - 1) & 0x1FFFFFFFFFFFFFFFLL;
  if (!v24)
  {
    long long v27 = v22 + 1;
LABEL_38:
    long long v30 = &v23[2 * v10];
    do
    {
      *long long v27 = 0;
      v27[4] = 0;
      v27 += 8;
    }
    while (v27 != v30);
    goto LABEL_40;
  }
  uint64_t v25 = v24 + 1;
  uint64_t v26 = (v24 + 1) & 0x3FFFFFFFFFFFFFFELL;
  long long v27 = &v23[2 * v26];
  int8x16_t v28 = v22 + 4;
  uint64_t v29 = v26;
  do
  {
    *(v28 - 12) = 0;
    *(v28 - 4) = 0;
    *(v28 - 8) = 0;
    unsigned char *v28 = 0;
    v28 += 16;
    v29 -= 2;
  }
  while (v29);
  if (v25 != v26) {
    goto LABEL_38;
  }
LABEL_40:
  unint64_t v39 = v12;
  WGSL::OverloadResolver::resolve((uint64_t)&v34, a5);
  int8x16_t v32 = v39;
  unint64_t v39 = 0;
  if (v32) {
    WTF::fastFree(v32, v31);
  }
  uint64_t result = v38;
  uint64_t v38 = 0;
  if (result) {
    return (WTF *)WTF::fastFree(result, v31);
  }
  return result;
}

uint64_t std::__optional_storage_base<WGSL::ViableOverload,false>::__assign_from[abi:sn180100]<std::__optional_copy_assign_base<WGSL::ViableOverload,false> const&>(uint64_t result, void *a2)
{
  uint64_t v3 = result;
  if (*(unsigned __int8 *)(result + 32) == *((unsigned __int8 *)a2 + 32))
  {
    if (!*(unsigned char *)(result + 32)) {
      return result;
    }
    *(void *)uint64_t result = *a2;
    uint64_t v4 = (unsigned int *)a2[1];
    if (!v4)
    {
      uint64_t v7 = 0;
      goto LABEL_30;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = *v4;
    uint64_t v7 = (_DWORD *)WTF::fastMalloc((WTF *)(4 * v6 + 4));
    *uint64_t v7 = v6;
    if (!v6) {
      goto LABEL_30;
    }
    unint64_t v8 = v7 + 1;
    unint64_t v9 = (v6 - 1) & 0x3FFFFFFFFFFFFFFFLL;
    if (v9 < 7)
    {
      unsigned int v10 = v4 + 1;
    }
    else
    {
      unsigned int v10 = v4 + 1;
      if ((unint64_t)((char *)v7 - (char *)v4) >= 0x20)
      {
        uint64_t v11 = 0;
        unint64_t v12 = v9 + 1;
        uint64_t v13 = v12 & 0x7FFFFFFFFFFFFFF8;
        unint64_t v8 = (_DWORD *)((char *)v8 + v13 * 4);
        unsigned int v10 = &v5[v13];
        uint64_t v14 = v12 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          unsigned int v15 = &v7[v11];
          long long v16 = *(_OWORD *)&v4[v11 + 5];
          *(_OWORD *)(v15 + 1) = *(_OWORD *)&v4[v11 + 1];
          *(_OWORD *)(v15 + 5) = v16;
          v11 += 8;
          v14 -= 8;
        }
        while (v14);
        if (v12 == (v12 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_30:
          int8x16_t v32 = *(WTF **)(v3 + 8);
          *(void *)(v3 + 8) = v7;
          if (v32) {
            WTF::fastFree(v32, a2);
          }
          uint64_t v33 = (unsigned int *)a2[2];
          if (!v33)
          {
            uint64_t result = 0;
            goto LABEL_43;
          }
          uint64_t v34 = v33 + 2;
          uint64_t v35 = *v33;
          uint64_t result = WTF::fastMalloc((WTF *)(8 * v35 + 8));
          *(_DWORD *)uint64_t result = v35;
          if (v35)
          {
            uint64_t v36 = (void *)(result + 8);
            unint64_t v37 = (v35 - 1) & 0x1FFFFFFFFFFFFFFFLL;
            if (v37 < 7)
            {
              uint64_t v38 = v33 + 2;
            }
            else
            {
              uint64_t v38 = v33 + 2;
              if ((unint64_t)(result - (void)v33) >= 0x20)
              {
                uint64_t v39 = 0;
                unint64_t v40 = v37 + 1;
                uint64_t v41 = 2 * (v40 & 0x3FFFFFFFFFFFFFFCLL);
                uint64_t v36 = (void *)((char *)v36 + v41 * 4);
                uint64_t v38 = &v34[v41];
                uint64_t v42 = v40 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  uint64_t v43 = result + v39 * 4;
                  long long v44 = *(_OWORD *)&v33[v39 + 6];
                  *(_OWORD *)(v43 + 8) = *(_OWORD *)&v33[v39 + 2];
                  *(_OWORD *)(v43 + 24) = v44;
                  v39 += 8;
                  v42 -= 4;
                }
                while (v42);
                if (v40 == (v40 & 0x3FFFFFFFFFFFFFFCLL)) {
                  goto LABEL_43;
                }
              }
            }
            do
            {
              uint64_t v45 = *(void *)v38;
              v38 += 2;
              *v36++ = v45;
            }
            while (v38 != &v34[2 * v35]);
          }
LABEL_43:
          uint64_t v46 = *(WTF **)(v3 + 16);
          *(void *)(v3 + 16) = result;
          if (v46) {
            uint64_t result = WTF::fastFree(v46, a2);
          }
          *(void *)(v3 + 24) = a2[3];
          return result;
        }
      }
    }
    do
    {
      int v31 = *v10++;
      *v8++ = v31;
    }
    while (v10 != &v5[v6]);
    goto LABEL_30;
  }
  if (!*(unsigned char *)(result + 32))
  {
    *(void *)uint64_t result = *a2;
    uint64_t v18 = (unsigned int *)a2[1];
    if (!v18)
    {
      unint64_t v21 = 0;
      goto LABEL_48;
    }
    uint64_t v19 = v18 + 1;
    uint64_t v20 = *v18;
    unint64_t v21 = (_DWORD *)WTF::fastMalloc((WTF *)(4 * v20 + 4));
    *unint64_t v21 = v20;
    if (!v20) {
      goto LABEL_48;
    }
    int v22 = v21 + 1;
    unint64_t v23 = (v20 - 1) & 0x3FFFFFFFFFFFFFFFLL;
    if (v23 < 7)
    {
      uint64_t v24 = v18 + 1;
    }
    else
    {
      uint64_t v24 = v18 + 1;
      if ((unint64_t)((char *)v21 - (char *)v18) >= 0x20)
      {
        uint64_t v25 = 0;
        unint64_t v26 = v23 + 1;
        uint64_t v27 = v26 & 0x7FFFFFFFFFFFFFF8;
        int v22 = (_DWORD *)((char *)v22 + v27 * 4);
        uint64_t v24 = &v19[v27];
        uint64_t v28 = v26 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          uint64_t v29 = &v21[v25];
          long long v30 = *(_OWORD *)&v18[v25 + 5];
          *(_OWORD *)(v29 + 1) = *(_OWORD *)&v18[v25 + 1];
          *(_OWORD *)(v29 + 5) = v30;
          v25 += 8;
          v28 -= 8;
        }
        while (v28);
        if (v26 == (v26 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_48:
          *(void *)(v3 + 8) = v21;
          int v48 = (unsigned int *)a2[2];
          if (v48)
          {
            unint64_t v49 = v48 + 2;
            uint64_t v50 = *v48;
            uint64_t result = WTF::fastMalloc((WTF *)(8 * v50 + 8));
            *(_DWORD *)uint64_t result = v50;
            if (v50)
            {
              uint64_t v51 = (void *)(result + 8);
              unint64_t v52 = (v50 - 1) & 0x1FFFFFFFFFFFFFFFLL;
              if (v52 < 7)
              {
                uint64_t v53 = v48 + 2;
              }
              else
              {
                uint64_t v53 = v48 + 2;
                if ((unint64_t)(result - (void)v48) >= 0x20)
                {
                  uint64_t v54 = 0;
                  unint64_t v55 = v52 + 1;
                  uint64_t v56 = 2 * (v55 & 0x3FFFFFFFFFFFFFFCLL);
                  uint64_t v51 = (void *)((char *)v51 + v56 * 4);
                  uint64_t v53 = &v49[v56];
                  uint64_t v57 = v55 & 0x3FFFFFFFFFFFFFFCLL;
                  do
                  {
                    uint64_t v58 = result + v54 * 4;
                    long long v59 = *(_OWORD *)&v48[v54 + 6];
                    *(_OWORD *)(v58 + 8) = *(_OWORD *)&v48[v54 + 2];
                    *(_OWORD *)(v58 + 24) = v59;
                    v54 += 8;
                    v57 -= 4;
                  }
                  while (v57);
                  if (v55 == (v55 & 0x3FFFFFFFFFFFFFFCLL)) {
                    goto LABEL_59;
                  }
                }
              }
              do
              {
                uint64_t v60 = *(void *)v53;
                v53 += 2;
                *v51++ = v60;
              }
              while (v53 != &v49[2 * v50]);
            }
          }
          else
          {
            uint64_t result = 0;
          }
LABEL_59:
          uint64_t v61 = a2[3];
          *(void *)(v3 + 16) = result;
          *(void *)(v3 + 24) = v61;
          *(unsigned char *)(v3 + 32) = 1;
          return result;
        }
      }
    }
    do
    {
      int v47 = *v24++;
      *v22++ = v47;
    }
    while (v24 != &v19[v20]);
    goto LABEL_48;
  }
  unint64_t v17 = *(WTF **)(result + 16);
  *(void *)(v3 + 16) = 0;
  if (v17) {
    WTF::fastFree(v17, a2);
  }
  uint64_t result = *(void *)(v3 + 8);
  *(void *)(v3 + 8) = 0;
  if (result) {
    uint64_t result = WTF::fastFree((WTF *)result, a2);
  }
  *(unsigned char *)(v3 + 32) = 0;
  return result;
}

void WGSL::parse<WGSL::Lexer<unsigned char>>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = 0;
  long long v36 = 0u;
  long long v35 = 0u;
  uint64_t v3 = *a1;
  if (*a1)
  {
    uint64_t v4 = *(unsigned __int8 **)(v3 + 8);
    uint64_t v5 = *(unsigned int *)(v3 + 4);
    *(void *)&long long v35 = v4;
    *((void *)&v35 + 1) = v5;
    if (v5) {
      unsigned __int8 v6 = *v4;
    }
    else {
      unsigned __int8 v6 = 0;
    }
  }
  else
  {
    unsigned __int8 v6 = 0;
    long long v35 = 0uLL;
  }
  v34[0] = v6;
  *(void *)&long long v36 = 1;
  DWORD2(v36) = 0;
  v23[0] = a1;
  v23[1] = a1 + 39;
  v23[2] = v34;
  WGSL::Lexer<unsigned char>::lex(v34, (uint64_t)&v24);
  uint64_t v27 = 0;
  int v28 = 0;
  if (!v26)
  {
    __break(0xC471u);
    return;
  }
  int v29 = *(_DWORD *)v24;
  long long v30 = *(_OWORD *)((char *)v24 + 4);
  int v7 = *(_DWORD *)v24;
  if (*(_DWORD *)v24 <= 8u)
  {
    if (((1 << v7) & 0x38) != 0)
    {
      unint64_t v8 = (_DWORD *)*((void *)v24 + 3);
LABEL_15:
      int v31 = v8;
      goto LABEL_16;
    }
    if (((1 << v7) & 0xC4) != 0)
    {
      int v31 = (_DWORD *)*((void *)v24 + 3);
      goto LABEL_16;
    }
    if (v7 == 8)
    {
      int v31 = 0;
      unint64_t v8 = (_DWORD *)*((void *)v24 + 3);
      if (v8) {
        *v8 += 2;
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v32 = v30;
  int v33 = DWORD2(v30);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShader((uint64_t)&v20, (uint64_t)v23);
  if (v22)
  {
    unsigned int v10 = v20;
    if (v20)
    {
      *v20 += 2;
      long long v19 = v21;
      uint64_t v11 = WTF::fastMalloc((WTF *)0x18);
      *v10 += 2;
    }
    else
    {
      long long v19 = v21;
      uint64_t v11 = WTF::fastMalloc((WTF *)0x18);
    }
    *(void *)uint64_t v11 = v10;
    *(_OWORD *)(v11 + 8) = v19;
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = 0x100000001;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 32) = 1;
    if (v10)
    {
      int v12 = *v10 - 2;
      if (*v10 == 2)
      {
        WTF::StringImpl::destroy();
        int v13 = *v10 - 2;
        if (*v10 != 2)
        {
LABEL_22:
          *unsigned int v10 = v13;
          if (v29 != 8) {
            goto LABEL_33;
          }
LABEL_26:
          uint64_t v14 = v31;
          int v31 = 0;
          if (v14)
          {
            if (*v14 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v14 -= 2;
            }
          }
          goto LABEL_33;
        }
      }
      else
      {
        *unsigned int v10 = v12;
        int v13 = v12 - 2;
        if (v13) {
          goto LABEL_22;
        }
      }
      WTF::StringImpl::destroy();
      if (v29 != 8) {
        goto LABEL_33;
      }
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 32) = 0;
  }
  if (v29 == 8) {
    goto LABEL_26;
  }
LABEL_33:
  unsigned int v15 = v24;
  if (v26)
  {
    uint64_t v16 = 32 * v26;
    unint64_t v17 = (_DWORD **)((char *)v24 + 24);
    do
    {
      if (*((_DWORD *)v17 - 6) == 8)
      {
        uint64_t v18 = *v17;
        *unint64_t v17 = 0;
        if (v18)
        {
          if (*v18 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v18 -= 2;
          }
        }
      }
      v17 += 4;
      v16 -= 32;
    }
    while (v16);
    unsigned int v15 = v24;
  }
  if (v15)
  {
    uint64_t v24 = 0;
    int v25 = 0;
    WTF::fastFree(v15, v9);
  }
}

void WGSL::parse<WGSL::Lexer<char16_t>>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = 0;
  long long v36 = 0u;
  long long v35 = 0u;
  uint64_t v3 = *a1;
  if (*a1)
  {
    uint64_t v4 = *(unsigned __int16 **)(v3 + 8);
    uint64_t v5 = *(unsigned int *)(v3 + 4);
    *(void *)&long long v35 = v4;
    *((void *)&v35 + 1) = v5;
    if (v5) {
      unsigned __int16 v6 = *v4;
    }
    else {
      unsigned __int16 v6 = 0;
    }
  }
  else
  {
    unsigned __int16 v6 = 0;
    long long v35 = 0uLL;
  }
  unsigned __int16 v34 = v6;
  *(void *)&long long v36 = 1;
  DWORD2(v36) = 0;
  v23[0] = a1;
  v23[1] = a1 + 39;
  v23[2] = &v34;
  WGSL::Lexer<char16_t>::lex(&v34, (uint64_t)&v24);
  uint64_t v27 = 0;
  int v28 = 0;
  if (!v26)
  {
    __break(0xC471u);
    return;
  }
  int v29 = *(_DWORD *)v24;
  long long v30 = *(_OWORD *)((char *)v24 + 4);
  int v7 = *(_DWORD *)v24;
  if (*(_DWORD *)v24 <= 8u)
  {
    if (((1 << v7) & 0x38) != 0)
    {
      unint64_t v8 = (_DWORD *)*((void *)v24 + 3);
LABEL_15:
      int v31 = v8;
      goto LABEL_16;
    }
    if (((1 << v7) & 0xC4) != 0)
    {
      int v31 = (_DWORD *)*((void *)v24 + 3);
      goto LABEL_16;
    }
    if (v7 == 8)
    {
      int v31 = 0;
      unint64_t v8 = (_DWORD *)*((void *)v24 + 3);
      if (v8) {
        *v8 += 2;
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v32 = v30;
  int v33 = DWORD2(v30);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseShader((uint64_t)&v20, (uint64_t)v23);
  if (v22)
  {
    unsigned int v10 = v20;
    if (v20)
    {
      *v20 += 2;
      long long v19 = v21;
      uint64_t v11 = WTF::fastMalloc((WTF *)0x18);
      *v10 += 2;
    }
    else
    {
      long long v19 = v21;
      uint64_t v11 = WTF::fastMalloc((WTF *)0x18);
    }
    *(void *)uint64_t v11 = v10;
    *(_OWORD *)(v11 + 8) = v19;
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = 0x100000001;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 32) = 1;
    if (v10)
    {
      int v12 = *v10 - 2;
      if (*v10 == 2)
      {
        WTF::StringImpl::destroy();
        int v13 = *v10 - 2;
        if (*v10 != 2)
        {
LABEL_22:
          *unsigned int v10 = v13;
          if (v29 != 8) {
            goto LABEL_33;
          }
LABEL_26:
          uint64_t v14 = v31;
          int v31 = 0;
          if (v14)
          {
            if (*v14 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v14 -= 2;
            }
          }
          goto LABEL_33;
        }
      }
      else
      {
        *unsigned int v10 = v12;
        int v13 = v12 - 2;
        if (v13) {
          goto LABEL_22;
        }
      }
      WTF::StringImpl::destroy();
      if (v29 != 8) {
        goto LABEL_33;
      }
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 32) = 0;
  }
  if (v29 == 8) {
    goto LABEL_26;
  }
LABEL_33:
  unsigned int v15 = v24;
  if (v26)
  {
    uint64_t v16 = 32 * v26;
    unint64_t v17 = (_DWORD **)((char *)v24 + 24);
    do
    {
      if (*((_DWORD *)v17 - 6) == 8)
      {
        uint64_t v18 = *v17;
        *unint64_t v17 = 0;
        if (v18)
        {
          if (*v18 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v18 -= 2;
          }
        }
      }
      v17 += 4;
      v16 -= 32;
    }
    while (v16);
    unsigned int v15 = v24;
  }
  if (v15)
  {
    uint64_t v24 = 0;
    int v25 = 0;
    WTF::fastFree(v15, v9);
  }
}

__n128 WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShader(uint64_t a1, uint64_t a2)
{
  uint64_t v430 = *(void *)(a2 + 88);
  uint64_t v429 = *(unsigned int *)(a2 + 96);
  uint64_t v3 = *(unsigned int *)(a2 + 36);
  *(void *)v439 = 0;
  *(void *)&v439[8] = 0;
  *(void *)&v439[16] = v441;
  result.n128_u64[0] = 16;
  uint64_t v440 = 16;
  unint64_t v5 = v3 - 1;
  if (v3 == 1) {
    goto LABEL_70;
  }
  int v6 = 0;
  unint64_t v7 = 0;
  while (2)
  {
    unint64_t v8 = *(unsigned int *)(a2 + 36);
    if (v7 >= v8)
    {
      __break(0xC471u);
      JUMPOUT(0x1825A7130);
    }
    uint64_t v9 = *(void *)(a2 + 24);
    unsigned int v10 = (_DWORD *)(v9 + 32 * v7);
    switch(*v10)
    {
      case 8:
      case 0x22:
        unint64_t v24 = v7 + 1;
        if (v7 + 1 >= v8)
        {
          __break(0xC471u);
          JUMPOUT(0x1825A7158);
        }
        int v25 = (_DWORD *)(v9 + 32 * v24);
        if (*v25 != 55) {
          goto LABEL_6;
        }
        uint64_t v26 = *(void *)v439;
        unint64_t v27 = *(void *)&v439[8];
        if (*(void *)v439)
        {
          if (*(void *)&v439[8] + 1 != *(void *)v439) {
            goto LABEL_60;
          }
          uint64_t v28 = v440;
          int v29 = *(char **)&v439[16];
          unint64_t v30 = v440 + ((unint64_t)v440 >> 2);
          if (v30 < 0x10) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v28 = v440;
          if (!*(void *)&v439[8])
          {
            if (v440) {
              goto LABEL_60;
            }
            unint64_t v27 = 0;
            int v29 = *(char **)&v439[16];
LABEL_45:
            *(void *)&v439[16] = v441;
            LODWORD(v440) = 16;
            int v31 = v441;
            if (*(void *)v439 > v27) {
              goto LABEL_46;
            }
            goto LABEL_54;
          }
          if (*(void *)&v439[8] != v440 - 1) {
            goto LABEL_60;
          }
          int v29 = *(char **)&v439[16];
          unint64_t v30 = v440 + ((unint64_t)v440 >> 2);
          if (v30 < 0x10) {
            goto LABEL_45;
          }
        }
        if (v30 >= 0xFFFFFFF)
        {
          __break(0xC471u);
          JUMPOUT(0x1825A7198);
        }
        int v32 = v30 + 1;
        int v31 = (_DWORD *)WTF::fastMalloc((WTF *)(16 * (v30 + 1)));
        LODWORD(v440) = v32;
        *(void *)&v439[16] = v31;
        uint64_t v26 = *(void *)v439;
        unint64_t v27 = *(void *)&v439[8];
        if (*(void *)v439 > *(void *)&v439[8])
        {
LABEL_46:
          memcpy(v31, v29, 16 * v27);
          memcpy((void *)(*(void *)&v439[16] + 16 * (*(void *)v439 - v28 + v440)), &v29[16 * *(void *)v439], 16 * v28 - 16 * *(void *)v439);
          *(void *)v439 = *(void *)v439 - v28 + v440;
          if (v441 == (_DWORD *)v29) {
            goto LABEL_60;
          }
          goto LABEL_55;
        }
LABEL_54:
        memcpy(&v31[4 * v26], &v29[16 * v26], 16 * v27 - 16 * v26);
        if (v441 == (_DWORD *)v29) {
          goto LABEL_60;
        }
LABEL_55:
        if (v29)
        {
          if (*(char **)&v439[16] == v29)
          {
            *(void *)&v439[16] = 0;
            LODWORD(v440) = 0;
          }
          WTF::fastFree((WTF *)v29, (void *)a2);
        }
LABEL_60:
        uint64_t v33 = *(void *)&v439[8];
        uint64_t v34 = *(void *)&v439[16] + 16 * *(void *)&v439[8];
        *(void *)uint64_t v34 = v25;
        *(_DWORD *)(v34 + 8) = v6;
        if (v33 == v440 - 1) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v33 + 1;
        }
        *(void *)&v439[8] = v35;
        unint64_t v7 = v24;
LABEL_6:
        if (++v7 < v5) {
          continue;
        }
        long long v36 = *(WTF **)&v439[16];
        if (v441 != *(_DWORD **)&v439[16] && *(void *)&v439[16] != 0)
        {
          *(void *)&v439[16] = 0;
          LODWORD(v440) = 0;
          WTF::fastFree(v36, (void *)a2);
        }
LABEL_70:
        uint64_t v38 = (_OWORD *)(a2 + 60);
        uint64_t v39 = (uint64_t *)(a2 + 80);
        v431 = (__n128 *)(a1 + 8);
LABEL_72:
        while (2)
        {
          unsigned int v40 = *(_DWORD *)(a2 + 56);
          if (v40 == 18)
          {
            unsigned int v82 = *(_DWORD *)(a2 + 36);
            unsigned int v83 = *(_DWORD *)(a2 + 40) + 1;
            while (1)
            {
              *(_DWORD *)(a2 + 40) = v83;
              if (v82 <= v83)
              {
                __break(0xC471u);
                JUMPOUT(0x1825A70E0);
              }
              uint64_t v85 = *(void *)(a2 + 24);
              uint64_t v86 = v85 + 32 * v83;
              unsigned int v87 = *(_DWORD *)v86;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v86;
              *uint64_t v38 = *(_OWORD *)(v86 + 4);
              unsigned int v88 = *(_DWORD *)v86;
              if (v88 > 8) {
                goto LABEL_151;
              }
              if (((1 << v88) & 0x38) != 0) {
                break;
              }
              if (((1 << v88) & 0xC4) != 0)
              {
                *uint64_t v39 = *(void *)(v85 + 32 * v83 + 24);
              }
              else if (v88 == 8)
              {
                *uint64_t v39 = 0;
                int8x16_t v89 = *(_DWORD **)(v85 + 32 * v83 + 24);
                if (v89) {
                  *v89 += 2;
                }
                goto LABEL_160;
              }
LABEL_151:
              int v84 = *(_DWORD *)(a2 + 68);
              *(void *)(a2 + 88) = *(void *)(a2 + 60);
              *(_DWORD *)(a2 + 96) = v84;
              ++v83;
              if (v87 != 82)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseDiagnostic((uint64_t)v439, a2);
                if (v442)
                {
                  if (v442 != 1) {
                    goto LABEL_917;
                  }
                  uint64_t v90 = *(void *)v439;
                  if (*(void *)v439) {
                    **(_DWORD **)v439 += 2;
                  }
                  char v91 = 0;
                  __n128 result = *(__n128 *)&v439[8];
                  __n128 *v431 = *(__n128 *)&v439[8];
                  *(void *)a1 = v90;
                  *(unsigned char *)(a1 + 24) = 1;
                  uint64_t v92 = v442;
                  if (v442 == -1) {
                    goto LABEL_167;
                  }
                  goto LABEL_166;
                }
                if (*(_DWORD *)(a2 + 56) != 73)
                {
                  *(_DWORD *)v465 = *(_DWORD *)(a2 + 56);
                  int v467 = 1;
                  WGSL::toString();
                  if (v467 != 1) {
                    goto LABEL_917;
                  }
                  WGSL::toString();
                  v472 = "Expected a ";
                  v473.n128_u64[0] = 12;
                  v468 = ", but got a ";
                  v469.n128_u64[0] = 13;
                  WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v472, (uint64_t *)&v438, (uint64_t)&v468, (uint64_t *)&v437, &v462);
                  if (!v462)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825A7180);
                  }
                  unint64_t v145 = v437;
                  v437 = 0;
                  if (v145)
                  {
                    if (*v145 != 2)
                    {
                      *v145 -= 2;
                      goto LABEL_283;
                    }
                    WTF::StringImpl::destroy();
                    int8x16_t v146 = v438;
                    v438 = 0;
                    if (v146)
                    {
LABEL_302:
                      if (*v146 == 2) {
                        WTF::StringImpl::destroy();
                      }
                      else {
                        *v146 -= 2;
                      }
                    }
                  }
                  else
                  {
LABEL_283:
                    int8x16_t v146 = v438;
                    v438 = 0;
                    if (v146) {
                      goto LABEL_302;
                    }
                  }
                  unint64_t v158 = v429 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v429) << 32);
                  *(void *)a1 = v462;
                  *(void *)(a1 + 8) = v430;
                  *(void *)(a1 + 16) = v158;
                  *(unsigned char *)(a1 + 24) = 1;
                  if (v467 == -1)
                  {
                    char v91 = 0;
                    uint64_t v92 = v442;
                    if (v442 != -1) {
                      goto LABEL_166;
                    }
                  }
                  else
                  {
                    ((void (*)(const char **, unsigned char *))off_1ECABDF90[v467])(&v472, v465);
                    char v91 = 0;
                    uint64_t v92 = v442;
                    if (v442 != -1) {
                      goto LABEL_166;
                    }
                  }
                  goto LABEL_167;
                }
                *(_OWORD *)&v465[4] = *v38;
                *(_DWORD *)v465 = 73;
                int v467 = 0;
                unsigned int v101 = *(_DWORD *)(a2 + 36);
                unsigned int v102 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v102;
                  if (v101 <= v102)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825A7110);
                  }
                  uint64_t v104 = *(void *)(a2 + 24);
                  uint64_t v105 = v104 + 32 * v102;
                  unsigned int v106 = *(_DWORD *)v105;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v105;
                  *uint64_t v38 = *(_OWORD *)(v105 + 4);
                  unsigned int v107 = *(_DWORD *)v105;
                  if (v107 <= 8)
                  {
                    if (((1 << v107) & 0x38) != 0)
                    {
                      int8x16x2_t v108 = *(_DWORD **)(v104 + 32 * v102 + 24);
                      goto LABEL_195;
                    }
                    if (((1 << v107) & 0xC4) != 0)
                    {
                      *uint64_t v39 = *(void *)(v104 + 32 * v102 + 24);
                    }
                    else if (v107 == 8)
                    {
                      *uint64_t v39 = 0;
                      int8x16x2_t v108 = *(_DWORD **)(v104 + 32 * v102 + 24);
                      if (v108) {
                        *v108 += 2;
                      }
LABEL_195:
                      *uint64_t v39 = (uint64_t)v108;
                    }
                  }
                  int v103 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v103;
                  ++v102;
                  if (v106 == 82) {
                    continue;
                  }
                  break;
                }
                int8x16_t v147 = *(void **)(a2 + 8);
                *(void *)v465 = v430;
                *(_DWORD *)&v465[8] = v429;
                *(_DWORD *)&v465[12] = v103 - v429;
                int8x16_t v148 = WGSL::AST::Builder::construct<WGSL::AST::DiagnosticDirective,WGSL::SourceSpan,WGSL::AST::Diagnostic,void>(v147, v465, (uint64_t)v439);
                uint64_t v149 = *(void *)a2;
                unint64_t v150 = *(unsigned int *)(*(void *)a2 + 92);
                if (v150 == *(_DWORD *)(*(void *)a2 + 88))
                {
                  v428 = v148;
                  unint64_t v151 = v150 + (v150 >> 2);
                  if (v151 >= 0x10) {
                    unint64_t v152 = v151 + 1;
                  }
                  else {
                    unint64_t v152 = 16;
                  }
                  if (v152 <= v150 + 1) {
                    unint64_t v153 = v150 + 1;
                  }
                  else {
                    unint64_t v153 = v152;
                  }
                  if (v153 >> 29)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825A7188);
                  }
                  unint64_t v154 = *(void **)(v149 + 80);
                  int8x16x2_t v155 = (void *)WTF::fastMalloc((WTF *)(8 * v153));
                  *(_DWORD *)(v149 + 88) = v153;
                  *(void *)(v149 + 80) = v155;
                  memcpy(v155, v154, 8 * v150);
                  if (v154)
                  {
                    if (*(void **)(v149 + 80) == v154)
                    {
                      *(void *)(v149 + 80) = 0;
                      *(_DWORD *)(v149 + 88) = 0;
                    }
                    WTF::fastFree((WTF *)v154, v156);
                  }
                  uint64_t v157 = *(unsigned int *)(v149 + 92);
                  *(void *)(*(void *)(v149 + 80) + 8 * v157) = v428;
                  *(_DWORD *)(v149 + 92) = v157 + 1;
                  char v91 = 1;
                  uint64_t v92 = v442;
                  if (v442 == -1) {
                    goto LABEL_167;
                  }
LABEL_166:
                  ((void (*)(unsigned char *, unsigned char *))off_1ECABDFC8[v92])(v465, v439);
                }
                else
                {
                  *(void *)(*(void *)(v149 + 80) + 8 * v150) = v148;
                  *(_DWORD *)(v149 + 92) = v150 + 1;
                  char v91 = 1;
                  uint64_t v92 = v442;
                  if (v442 != -1) {
                    goto LABEL_166;
                  }
                }
LABEL_167:
                if ((v91 & 1) == 0) {
                  return result;
                }
                goto LABEL_72;
              }
            }
            int8x16_t v89 = *(_DWORD **)(v85 + 32 * v83 + 24);
LABEL_160:
            *uint64_t v39 = (uint64_t)v89;
            goto LABEL_151;
          }
          if (v40 != 21)
          {
            if (v40 == 29)
            {
              uint64_t v41 = *(void *)(a2 + 88);
              uint64_t v42 = *(unsigned int *)(a2 + 96);
              unsigned int v43 = *(_DWORD *)(a2 + 36);
              unsigned int v44 = *(_DWORD *)(a2 + 40) + 1;
              while (1)
              {
                *(_DWORD *)(a2 + 40) = v44;
                if (v43 <= v44)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825A70D8);
                }
                uint64_t v46 = *(void *)(a2 + 24);
                uint64_t v47 = v46 + 32 * v44;
                unsigned int v48 = *(_DWORD *)v47;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v47;
                *uint64_t v38 = *(_OWORD *)(v47 + 4);
                unsigned int v49 = *(_DWORD *)v47;
                if (v49 > 8) {
                  goto LABEL_77;
                }
                if (((1 << v49) & 0x38) != 0) {
                  break;
                }
                if (((1 << v49) & 0xC4) != 0)
                {
                  *uint64_t v39 = *(void *)(v46 + 32 * v44 + 24);
                }
                else if (v49 == 8)
                {
                  *uint64_t v39 = 0;
                  uint64_t v50 = *(_DWORD **)(v46 + 32 * v44 + 24);
                  if (v50) {
                    *v50 += 2;
                  }
                  goto LABEL_86;
                }
LABEL_77:
                int v45 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v45;
                ++v44;
                if (v48 != 82)
                {
                  while (1)
                  {
                    if (v48 != 8)
                    {
                      *(_DWORD *)v439 = v48;
                      v441[0] = 1;
                      WGSL::toString();
                      if (v441[0] != 1) {
                        goto LABEL_917;
                      }
                      WGSL::toString();
                      v472 = "Expected a ";
                      v473.n128_u64[0] = 12;
                      v468 = ", but got a ";
                      v469.n128_u64[0] = 13;
                      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v472, (uint64_t *)&v453, (uint64_t)&v468, (uint64_t *)&v450, &v462);
                      if (!v462)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825A7118);
                      }
                      uint64_t v61 = v450;
                      v450 = 0;
                      if (v61)
                      {
                        if (*(_DWORD *)v61 != 2)
                        {
                          *(_DWORD *)v61 -= 2;
                          goto LABEL_109;
                        }
                        WTF::StringImpl::destroy();
                        unsigned int v62 = v453;
                        v453 = 0;
                        if (v62)
                        {
LABEL_127:
                          if (*(_DWORD *)v62 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v62 -= 2;
                          }
                        }
                      }
                      else
                      {
LABEL_109:
                        unsigned int v62 = v453;
                        v453 = 0;
                        if (v62) {
                          goto LABEL_127;
                        }
                      }
                      unint64_t v71 = v42 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v42) << 32);
                      *(void *)v465 = v462;
                      goto LABEL_131;
                    }
                    *(_DWORD *)v439 = 8;
                    *(_OWORD *)&v439[4] = *v38;
                    unint64_t v52 = (_DWORD *)*v39;
                    if (*v39) {
                      *v52 += 2;
                    }
                    uint64_t v440 = (uint64_t)v52;
                    v441[0] = 0;
                    unsigned int v53 = *(_DWORD *)(a2 + 36);
                    unsigned int v54 = *(_DWORD *)(a2 + 40) + 1;
                    do
                    {
                      *(_DWORD *)(a2 + 40) = v54;
                      if (v53 <= v54) {
                        goto LABEL_918;
                      }
                      uint64_t v56 = *(void *)(a2 + 24);
                      uint64_t v57 = v56 + 32 * v54;
                      unsigned int v58 = *(_DWORD *)v57;
                      *(_DWORD *)(a2 + 56) = *(_DWORD *)v57;
                      *uint64_t v38 = *(_OWORD *)(v57 + 4);
                      unsigned int v59 = *(_DWORD *)v57;
                      if (v59 <= 8)
                      {
                        if (((1 << v59) & 0x38) != 0)
                        {
                          uint64_t v60 = *(_DWORD **)(v56 + 32 * v54 + 24);
LABEL_103:
                          *uint64_t v39 = (uint64_t)v60;
                          goto LABEL_94;
                        }
                        if (((1 << v59) & 0xC4) != 0)
                        {
                          *uint64_t v39 = *(void *)(v56 + 32 * v54 + 24);
                          goto LABEL_94;
                        }
                        if (v59 == 8)
                        {
                          *uint64_t v39 = 0;
                          uint64_t v60 = *(_DWORD **)(v56 + 32 * v54 + 24);
                          if (v60) {
                            *v60 += 2;
                          }
                          goto LABEL_103;
                        }
                      }
LABEL_94:
                      int v55 = *(_DWORD *)(a2 + 68);
                      *(void *)(a2 + 88) = *(void *)(a2 + 60);
                      *(_DWORD *)(a2 + 96) = v55;
                      ++v54;
                    }
                    while (v58 == 82);
                    if (WGSL::parseLanguageFeature(&v440))
                    {
                      if (*(_DWORD *)(a2 + 56) != 48)
                      {
                        int v51 = 4;
                        goto LABEL_132;
                      }
                      unsigned int v63 = *(_DWORD *)(a2 + 36);
                      unsigned int v64 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v64;
                        if (v63 <= v64)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A70D0);
                        }
                        uint64_t v66 = *(void *)(a2 + 24);
                        uint64_t v67 = v66 + 32 * v64;
                        unsigned int v68 = *(_DWORD *)v67;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v67;
                        *uint64_t v38 = *(_OWORD *)(v67 + 4);
                        unsigned int v69 = *(_DWORD *)v67;
                        if (v69 > 8) {
                          goto LABEL_115;
                        }
                        if (((1 << v69) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v69) & 0xC4) != 0)
                        {
                          *uint64_t v39 = *(void *)(v66 + 32 * v64 + 24);
                        }
                        else if (v69 == 8)
                        {
                          *uint64_t v39 = 0;
                          uint16x8_t v70 = *(_DWORD **)(v66 + 32 * v64 + 24);
                          if (v70) {
                            *v70 += 2;
                          }
                          goto LABEL_124;
                        }
LABEL_115:
                        int v65 = *(_DWORD *)(a2 + 68);
                        result.n128_u64[0] = *(void *)(a2 + 60);
                        *(void *)(a2 + 88) = result.n128_u64[0];
                        *(_DWORD *)(a2 + 96) = v65;
                        ++v64;
                        if (v68 != 82)
                        {
                          int v51 = 0;
                          goto LABEL_132;
                        }
                      }
                      uint16x8_t v70 = *(_DWORD **)(v66 + 32 * v64 + 24);
LABEL_124:
                      *uint64_t v39 = (uint64_t)v70;
                      goto LABEL_115;
                    }
                    WTF::StringImpl::createWithoutCopyingNonEmpty();
                    unint64_t v71 = v42 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v42) << 32);
LABEL_131:
                    *(void *)&v465[8] = v41;
                    *(void *)&v465[16] = v71;
                    int v51 = 1;
                    LOBYTE(v466) = 1;
LABEL_132:
                    if (v441[0] != -1) {
                      ((void (*)(const char **, unsigned char *))off_1ECABDF90[v441[0]])(&v472, v439);
                    }
                    if (v51)
                    {
                      if (v51 != 4)
                      {
                        if ((_BYTE)v466)
                        {
                          int8x16x2_t v416 = *(char **)v465;
LABEL_915:
                          if (v416) {
                            goto LABEL_906;
                          }
LABEL_916:
                          __n128 result = *(__n128 *)&v465[8];
                          __n128 *v431 = *(__n128 *)&v465[8];
                          *(void *)a1 = 0;
                          *(unsigned char *)(a1 + 24) = 1;
                          return result;
                        }
                        goto LABEL_72;
                      }
                      if (*(_DWORD *)(a2 + 56) == 73)
                      {
LABEL_171:
                        unsigned int v93 = *(_DWORD *)(a2 + 36);
                        unsigned int v94 = *(_DWORD *)(a2 + 40) + 1;
                        while (1)
                        {
                          *(_DWORD *)(a2 + 40) = v94;
                          if (v93 <= v94)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825A7100);
                          }
                          uint64_t v96 = *(void *)(a2 + 24);
                          uint64_t v97 = v96 + 32 * v94;
                          unsigned int v98 = *(_DWORD *)v97;
                          *(_DWORD *)(a2 + 56) = *(_DWORD *)v97;
                          *uint64_t v38 = *(_OWORD *)(v97 + 4);
                          unsigned int v99 = *(_DWORD *)v97;
                          if (v99 > 8) {
                            goto LABEL_173;
                          }
                          if (((1 << v99) & 0x38) != 0) {
                            break;
                          }
                          if (((1 << v99) & 0xC4) != 0)
                          {
                            *uint64_t v39 = *(void *)(v96 + 32 * v94 + 24);
                          }
                          else if (v99 == 8)
                          {
                            *uint64_t v39 = 0;
                            int8x16x2_t v100 = *(_DWORD **)(v96 + 32 * v94 + 24);
                            if (v100) {
                              *v100 += 2;
                            }
                            goto LABEL_182;
                          }
LABEL_173:
                          int v95 = *(_DWORD *)(a2 + 68);
                          result.n128_u64[0] = *(void *)(a2 + 60);
                          *(void *)(a2 + 88) = result.n128_u64[0];
                          *(_DWORD *)(a2 + 96) = v95;
                          ++v94;
                          if (v98 != 82) {
                            goto LABEL_72;
                          }
                        }
                        int8x16x2_t v100 = *(_DWORD **)(v96 + 32 * v94 + 24);
LABEL_182:
                        *uint64_t v39 = (uint64_t)v100;
                        goto LABEL_173;
                      }
                      WGSL::toString();
                      WGSL::toString();
                      *(void *)v439 = "Expected a ";
                      *(void *)&v439[8] = 12;
                      v472 = ", but got a ";
                      v473.n128_u64[0] = 13;
                      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v446, (uint64_t)&v472, (uint64_t *)&v443, &v468);
                      if (!v468)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825A7238);
                      }
                      int8x16x2_t v414 = v443;
                      v443 = 0;
                      if (v414)
                      {
                        if (*(_DWORD *)v414 != 2)
                        {
                          *(_DWORD *)v414 -= 2;
                          goto LABEL_898;
                        }
                        WTF::StringImpl::destroy();
                        int8x16x2_t v415 = v446;
                        v446 = 0;
                        if (v415)
                        {
LABEL_911:
                          if (*v415 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v415 -= 2;
                          }
                        }
                      }
                      else
                      {
LABEL_898:
                        int8x16x2_t v415 = v446;
                        v446 = 0;
                        if (v415) {
                          goto LABEL_911;
                        }
                      }
                      unint64_t v419 = v42 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v42) << 32);
                      int8x16x2_t v416 = (char *)v468;
                      *(void *)&v465[8] = v41;
                      *(void *)&v465[16] = v419;
                      LOBYTE(v466) = 1;
                      goto LABEL_915;
                    }
                    unsigned int v48 = *(_DWORD *)(a2 + 56);
                    if (v48 == 73) {
                      goto LABEL_171;
                    }
                  }
                }
              }
              uint64_t v50 = *(_DWORD **)(v46 + 32 * v44 + 24);
LABEL_86:
              *uint64_t v39 = (uint64_t)v50;
              goto LABEL_77;
            }
            int8x16x2_t v159 = (__n128 *)&v434;
            int8x16x2_t v160 = off_1ECABE5E0;
LABEL_311:
            while (2)
            {
              if (v40 != 73)
              {
                if (v40 == 1)
                {
                  *(unsigned char *)a1 = 0;
                  *(unsigned char *)(a1 + 24) = 0;
                  return result;
                }
                int8x16x2_t v161 = *(const char **)(a2 + 88);
                uint64_t v162 = *(unsigned int *)(a2 + 96);
                int v163 = *(_DWORD *)(a2 + 56);
                if (v163 != 10)
                {
                  if (v163 == 14)
                  {
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseConstAssert((uint64_t)v439, a2);
                    uint64_t v174 = v440;
                    if (v440)
                    {
                      if (v440 != 1) {
                        goto LABEL_917;
                      }
                      uint64_t v175 = *(const char **)v439;
                      if (*(void *)v439) {
                        **(_DWORD **)v439 += 2;
                      }
                      __n128 *v159 = *(__n128 *)&v439[8];
                    }
                    else
                    {
                      uint64_t v175 = *(const char **)v439;
                    }
                    v433 = v175;
                    unsigned int v436 = v174;
                    ((void (*)(unsigned char *, unsigned char *))off_1ECABE1B0[v174])(v465, v439);
                    goto LABEL_862;
                  }
                  if (v163 == 13)
                  {
                    *(void *)v465 = 0;
                    *(void *)&v465[8] = 0;
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableWithAttributes((uint64_t)v439, a2, (uint64_t *)v465);
                    if (*(void *)v465) {
                      WTF::fastFree(*(WTF **)v465, v164);
                    }
                    uint64_t v165 = v440;
                    if (v440)
                    {
                      if (v440 != 1) {
                        goto LABEL_917;
                      }
                      int8x16x2_t v166 = *(const char **)v439;
                      if (*(void *)v439) {
                        **(_DWORD **)v439 += 2;
                      }
                      __n128 *v159 = *(__n128 *)&v439[8];
LABEL_410:
                      v433 = v166;
                      unsigned int v436 = v165;
LABEL_484:
                      ((void (*)(unsigned char *, unsigned char *))off_1ECABDFD8[v165])(v465, v439);
                      int8x16x2_t v160 = off_1ECABE5E0;
                      goto LABEL_862;
                    }
                    if (*(_DWORD *)(a2 + 56) == 73)
                    {
                      unsigned int v187 = *(_DWORD *)(a2 + 36);
                      unsigned int v188 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v188;
                        if (v187 <= v188)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A7138);
                        }
                        uint64_t v190 = *(void *)(a2 + 24);
                        uint64_t v191 = v190 + 32 * v188;
                        unsigned int v192 = *(_DWORD *)v191;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v191;
                        *uint64_t v38 = *(_OWORD *)(v191 + 4);
                        unsigned int v193 = *(_DWORD *)v191;
                        if (v193 > 8) {
                          goto LABEL_368;
                        }
                        if (((1 << v193) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v193) & 0xC4) != 0)
                        {
                          *uint64_t v39 = *(void *)(v190 + 32 * v188 + 24);
                        }
                        else if (v193 == 8)
                        {
                          *uint64_t v39 = 0;
                          v194 = *(_DWORD **)(v190 + 32 * v188 + 24);
                          if (v194) {
                            *v194 += 2;
                          }
                          goto LABEL_377;
                        }
LABEL_368:
                        int v189 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v189;
                        ++v188;
                        if (v192 != 82)
                        {
                          int8x16x2_t v166 = *(const char **)v439;
                          goto LABEL_410;
                        }
                      }
                      v194 = *(_DWORD **)(v190 + 32 * v188 + 24);
LABEL_377:
                      *uint64_t v39 = (uint64_t)v194;
                      goto LABEL_368;
                    }
                    WGSL::toString();
                    WGSL::toString();
                    *(void *)v465 = "Expected a ";
                    *(void *)&v465[8] = 12;
                    v472 = ", but got a ";
                    v473.n128_u64[0] = 13;
                    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v465, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v453, &v468);
                    if (!v468)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825A71C0);
                    }
                    int v205 = v453;
                    v453 = 0;
                    if (v205)
                    {
                      if (*(_DWORD *)v205 != 2)
                      {
                        *(_DWORD *)v205 -= 2;
                        goto LABEL_401;
                      }
                      WTF::StringImpl::destroy();
                      unsigned int v206 = v462;
                      v462 = 0;
                      if (v206)
                      {
LABEL_480:
                        if (*(_DWORD *)v206 == 2) {
                          WTF::StringImpl::destroy();
                        }
                        else {
                          *(_DWORD *)v206 -= 2;
                        }
                      }
                    }
                    else
                    {
LABEL_401:
                      unsigned int v206 = v462;
                      v462 = 0;
                      if (v206) {
                        goto LABEL_480;
                      }
                    }
                    unint64_t v248 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                    v433 = v468;
                    v434 = v161;
                    unint64_t v435 = v248;
                    unsigned int v436 = 1;
                    goto LABEL_484;
                  }
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v446, a2);
                  if (v448)
                  {
                    if (v448 == 1)
                    {
                      uint64_t v184 = (const char *)v446;
                      if (v446) {
                        *v446 += 2;
                      }
                      __n128 result = v447;
                      __n128 *v159 = v447;
                      v433 = v184;
                      unsigned int v436 = 1;
                      uint64_t v185 = v448;
                      if (v448 != -1) {
                        goto LABEL_861;
                      }
                      goto LABEL_862;
                    }
                    goto LABEL_917;
                  }
                  switch(*(_DWORD *)(a2 + 56))
                  {
                    case 0x17:
                      unint64_t v219 = *(const char **)(a2 + 88);
                      uint64_t v423 = *(unsigned int *)(a2 + 96);
                      unsigned int v220 = *(_DWORD *)(a2 + 36);
                      unsigned int v221 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v221;
                        if (v220 <= v221)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A7148);
                        }
                        uint64_t v223 = *(void *)(a2 + 24);
                        uint64_t v224 = v223 + 32 * v221;
                        unsigned int v225 = *(_DWORD *)v224;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v224;
                        *uint64_t v38 = *(_OWORD *)(v224 + 4);
                        unsigned int v226 = *(_DWORD *)v224;
                        if (v226 > 8) {
                          goto LABEL_432;
                        }
                        if (((1 << v226) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v226) & 0xC4) != 0)
                        {
                          *uint64_t v39 = *(void *)(v223 + 32 * v221 + 24);
                        }
                        else if (v226 == 8)
                        {
                          *uint64_t v39 = 0;
                          v227 = *(_DWORD **)(v223 + 32 * v221 + 24);
                          if (v227) {
                            *v227 += 2;
                          }
                          goto LABEL_441;
                        }
LABEL_432:
                        int v222 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v222;
                        ++v221;
                        if (v225 != 82)
                        {
                          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v465, a2);
                          if (v467)
                          {
                            if (v467 == 1)
                            {
                              v238 = *(const char **)v465;
                              if (*(void *)v465) {
                                **(_DWORD **)v465 += 2;
                              }
                              __n128 v454 = *(__n128 *)&v465[8];
                              v453 = v238;
                              LODWORD(v455) = 1;
                              goto LABEL_852;
                            }
                            goto LABEL_917;
                          }
                          int8x16x2_t v421 = v219;
                          if (*(_DWORD *)(a2 + 56) != 67)
                          {
                            WGSL::toString();
                            WGSL::toString();
                            *(void *)v439 = "Expected a ";
                            *(void *)&v439[8] = 12;
                            v472 = ", but got a ";
                            v473.n128_u64[0] = 13;
                            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v450, &v468);
                            if (!v468)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825A71E0);
                            }
                            int v269 = v450;
                            v450 = 0;
                            if (v269)
                            {
                              if (*(_DWORD *)v269 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v269 -= 2;
                              }
                            }
                            unsigned int v352 = v462;
                            v462 = 0;
                            if (v352)
                            {
                              if (*(_DWORD *)v352 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v352 -= 2;
                              }
                            }
                            unint64_t v354 = v423 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v423) << 32);
                            v453 = v468;
                            v454.n128_u64[0] = (unint64_t)v219;
                            v454.n128_u64[1] = v354;
                            LODWORD(v455) = 1;
                            goto LABEL_852;
                          }
                          unsigned int v253 = *(_DWORD *)(a2 + 36);
                          unsigned int v254 = *(_DWORD *)(a2 + 40) + 1;
                          while (2)
                          {
                            *(_DWORD *)(a2 + 40) = v254;
                            if (v253 <= v254)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825A71A0);
                            }
                            uint64_t v256 = *(void *)(a2 + 24);
                            uint64_t v257 = v256 + 32 * v254;
                            unsigned int v258 = *(_DWORD *)v257;
                            *(_DWORD *)(a2 + 56) = *(_DWORD *)v257;
                            *uint64_t v38 = *(_OWORD *)(v257 + 4);
                            unsigned int v259 = *(_DWORD *)v257;
                            if (v259 <= 8)
                            {
                              if (((1 << v259) & 0x38) != 0)
                              {
                                unint64_t v260 = *(_DWORD **)(v256 + 32 * v254 + 24);
                                goto LABEL_520;
                              }
                              if (((1 << v259) & 0xC4) != 0)
                              {
                                *uint64_t v39 = *(void *)(v256 + 32 * v254 + 24);
                              }
                              else if (v259 == 8)
                              {
                                *uint64_t v39 = 0;
                                unint64_t v260 = *(_DWORD **)(v256 + 32 * v254 + 24);
                                if (v260) {
                                  *v260 += 2;
                                }
LABEL_520:
                                *uint64_t v39 = (uint64_t)v260;
                              }
                            }
                            int v255 = *(_DWORD *)(a2 + 68);
                            *(void *)(a2 + 88) = *(void *)(a2 + 60);
                            *(_DWORD *)(a2 + 96) = v255;
                            ++v254;
                            if (v258 == 82) {
                              continue;
                            }
                            break;
                          }
                          unsigned int v271 = 0;
                          unsigned int v272 = 0;
                          v443 = 0;
                          v444.n128_u64[0] = 0;
                          while (2)
                          {
                            if (*(_DWORD *)(a2 + 56) == 68)
                            {
                              uint64_t v350 = v159;
                              v453 = (const char *)v160;
                              LODWORD(v455) = 1;
                              int8x16x2_t v160 = off_1ECABE5E0;
                              goto LABEL_767;
                            }
                            int8x16x2_t v426 = *(const char **)(a2 + 88);
                            uint64_t v273 = *(unsigned int *)(a2 + 96);
                            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v472, a2);
                            if (v474)
                            {
                              if (v474 == 1)
                              {
                                uint64_t v274 = v472;
                                if (v472) {
                                  *(_DWORD *)v472 += 2;
                                }
                                __n128 v463 = v473;
                                v462 = v274;
                                unsigned int v464 = 1;
                                uint64_t v275 = 1;
                                goto LABEL_591;
                              }
                              goto LABEL_917;
                            }
                            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v439, a2);
                            if (v441[0])
                            {
                              if (v441[0] != 1) {
                                goto LABEL_917;
                              }
                              unint64_t v277 = *(const char **)v439;
                              if (*(void *)v439) {
                                **(_DWORD **)v439 += 2;
                              }
                              __n128 v463 = *(__n128 *)&v439[8];
                              v462 = v277;
LABEL_587:
                              unsigned int v464 = 1;
                              goto LABEL_588;
                            }
                            if (*(_DWORD *)(a2 + 56) != 47)
                            {
                              WGSL::toString();
                              WGSL::toString();
                              v468 = "Expected a ";
                              v469.n128_u64[0] = 12;
                              v450 = ", but got a ";
                              *(void *)&long long v451 = 13;
                              WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v468, (uint64_t *)&v457, (uint64_t)&v450, (uint64_t *)&v471, &v460);
                              if (!(void)v460)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825A71F0);
                              }
                              unint64_t v286 = v471;
                              v471 = 0;
                              if (v286)
                              {
                                if (*(_DWORD *)v286 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *(_DWORD *)v286 -= 2;
                                }
                              }
                              unint64_t v291 = v457;
                              v457 = 0;
                              if (v291)
                              {
                                if (*(_DWORD *)v291 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *(_DWORD *)v291 -= 2;
                                }
                              }
                              unint64_t v292 = v273 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v273) << 32);
                              v462 = (const char *)v460;
                              v463.n128_u64[0] = (unint64_t)v426;
                              v463.n128_u64[1] = v292;
                              goto LABEL_587;
                            }
                            unsigned int v278 = *(_DWORD *)(a2 + 36);
                            unsigned int v279 = *(_DWORD *)(a2 + 40) + 1;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v279;
                              if (v278 <= v279)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825A71B0);
                              }
                              uint64_t v281 = *(void *)(a2 + 24);
                              uint64_t v282 = v281 + 32 * v279;
                              unsigned int v283 = *(_DWORD *)v282;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v282;
                              *uint64_t v38 = *(_OWORD *)(v282 + 4);
                              unsigned int v284 = *(_DWORD *)v282;
                              if (v284 <= 8)
                              {
                                if (((1 << v284) & 0x38) != 0)
                                {
                                  int v285 = *(_DWORD **)(v281 + 32 * v279 + 24);
                                  goto LABEL_569;
                                }
                                if (((1 << v284) & 0xC4) != 0)
                                {
                                  *uint64_t v39 = *(void *)(v281 + 32 * v279 + 24);
                                }
                                else if (v284 == 8)
                                {
                                  *uint64_t v39 = 0;
                                  int v285 = *(_DWORD **)(v281 + 32 * v279 + 24);
                                  if (v285) {
                                    *v285 += 2;
                                  }
LABEL_569:
                                  *uint64_t v39 = (uint64_t)v285;
                                }
                              }
                              int v280 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v280;
                              ++v279;
                              if (v283 == 82) {
                                continue;
                              }
                              break;
                            }
                            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName((uint64_t)&v468, a2);
                            if (!v470)
                            {
                              uint64_t v289 = *(void **)(a2 + 8);
                              unsigned int v290 = *(_DWORD *)(a2 + 96) - v273;
                              v450 = v426;
                              *(void *)&long long v451 = __PAIR64__(v290, v273);
                              LOBYTE(v460) = 0;
                              v462 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::Parameter,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WGSL::AST::ParameterRole,void>(v289, &v450, (uint64_t)v439, (uint64_t *)&v468, (uint64_t *)&v472, (char *)&v460);
                              unsigned int v464 = 0;
                              uint64_t v288 = v470;
                              if (v470 != -1) {
                                goto LABEL_580;
                              }
                              goto LABEL_588;
                            }
                            if (v470 != 1) {
                              goto LABEL_917;
                            }
                            unsigned int v287 = v468;
                            if (v468) {
                              *(_DWORD *)v468 += 2;
                            }
                            __n128 v463 = v469;
                            v462 = v287;
                            unsigned int v464 = 1;
                            uint64_t v288 = 1;
LABEL_580:
                            ((void (*)(const char **, const char **))off_1ECABE170[v288])(&v450, &v468);
LABEL_588:
                            if (v441[0] != -1) {
                              ((void (*)(const char **, unsigned char *))off_1ECABDF80[v441[0]])(&v468, v439);
                            }
                            uint64_t v275 = v474;
                            if (v474 != -1) {
LABEL_591:
                            }
                              ((void (*)(unsigned char *, const char **))off_1ECABE5D0[v275])(v439, &v472);
                            if (!v464)
                            {
                              if (v272 == v444.n128_u32[0])
                              {
                                v294 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v443, v272 + 1, (unint64_t)&v462);
                                __int32 v295 = v444.n128_i32[1];
                                unsigned int v271 = (WTF *)v443;
                                *(void *)&v443[8 * v444.n128_u32[1]] = *v294;
                              }
                              else
                              {
                                *((void *)v271 + v272) = v462;
                                __int32 v295 = v444.n128_i32[1];
                              }
                              unsigned int v272 = v295 + 1;
                              v444.n128_u32[1] = v295 + 1;
                              if ((v295 + 1) >= 0x100)
                              {
                                WTF::String::number((WTF::String *)0xFF);
                                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"function cannot have more than ", 32, (uint64_t *)&v461, (int8x16_t *)" parameters", 12, v439);
                                unint64_t v304 = v423 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v423) << 32);
                                int8x16x2_t v160 = *(uint64_t (***)())v439;
                                v454.n128_u64[0] = (unint64_t)v421;
                                v454.n128_u64[1] = v304;
                                *(void *)v439 = 0;
                                unint64_t v305 = v461;
                                v461 = 0;
                                if (v305)
                                {
                                  if (*v305 == 2)
                                  {
                                    WTF::StringImpl::destroy();
                                    int v293 = 1;
                                    goto LABEL_616;
                                  }
                                  *v305 -= 2;
                                }
                                int v293 = 1;
                                goto LABEL_616;
                              }
                              if (*(_DWORD *)(a2 + 56) != 48)
                              {
                                int v293 = 7;
                                goto LABEL_616;
                              }
                              unsigned int v296 = *(_DWORD *)(a2 + 36);
                              unsigned int v297 = *(_DWORD *)(a2 + 40) + 1;
                              while (2)
                              {
                                *(_DWORD *)(a2 + 40) = v297;
                                if (v296 <= v297)
                                {
                                  __break(0xC471u);
                                  JUMPOUT(0x1825A7168);
                                }
                                uint64_t v299 = *(void *)(a2 + 24);
                                uint64_t v300 = v299 + 32 * v297;
                                unsigned int v301 = *(_DWORD *)v300;
                                *(_DWORD *)(a2 + 56) = *(_DWORD *)v300;
                                *uint64_t v38 = *(_OWORD *)(v300 + 4);
                                unsigned int v302 = *(_DWORD *)v300;
                                if (v302 <= 8)
                                {
                                  if (((1 << v302) & 0x38) != 0)
                                  {
                                    uint8x8_t v303 = *(_DWORD **)(v299 + 32 * v297 + 24);
                                    goto LABEL_613;
                                  }
                                  if (((1 << v302) & 0xC4) != 0)
                                  {
                                    *uint64_t v39 = *(void *)(v299 + 32 * v297 + 24);
                                  }
                                  else if (v302 == 8)
                                  {
                                    *uint64_t v39 = 0;
                                    uint8x8_t v303 = *(_DWORD **)(v299 + 32 * v297 + 24);
                                    if (v303) {
                                      *v303 += 2;
                                    }
LABEL_613:
                                    *uint64_t v39 = (uint64_t)v303;
                                  }
                                }
                                int v298 = *(_DWORD *)(a2 + 68);
                                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                                *(_DWORD *)(a2 + 96) = v298;
                                ++v297;
                                if (v301 != 82)
                                {
                                  int v293 = 0;
                                  goto LABEL_616;
                                }
                                continue;
                              }
                            }
                            if (v464 != 1) {
                              goto LABEL_917;
                            }
                            int8x16x2_t v160 = (uint64_t (**)())v462;
                            if (v462) {
                              *(_DWORD *)v462 += 2;
                            }
                            __n128 v454 = v463;
                            int v293 = 1;
LABEL_616:
                            if (v464 != -1) {
                              ((void (*)(unsigned char *, const char **))off_1ECABE3E0[v464])(v439, &v462);
                            }
                            if (!v293) {
                              continue;
                            }
                            break;
                          }
                          if (v293 != 7)
                          {
                            v453 = (const char *)v160;
                            LODWORD(v455) = 1;
                            int8x16x2_t v160 = off_1ECABE5E0;
                            if (!v271) {
                              goto LABEL_852;
                            }
                            goto LABEL_851;
                          }
                          uint64_t v350 = v159;
                          v453 = (const char *)v160;
                          LODWORD(v455) = 1;
                          int8x16x2_t v160 = off_1ECABE5E0;
                          if (*(_DWORD *)(a2 + 56) != 68)
                          {
                            WGSL::toString();
                            WGSL::toString();
                            *(void *)v439 = "Expected a ";
                            *(void *)&v439[8] = 12;
                            v472 = ", but got a ";
                            v473.n128_u64[0] = 13;
                            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v450, &v468);
                            if (!v468)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825A7208);
                            }
                            uint64_t v351 = v450;
                            v450 = 0;
                            if (v351)
                            {
                              if (*(_DWORD *)v351 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v351 -= 2;
                              }
                            }
                            int8x16x2_t v410 = v462;
                            v462 = 0;
                            if (v410)
                            {
                              if (*(_DWORD *)v410 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v410 -= 2;
                              }
                            }
                            unint64_t v411 = v423 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v423) << 32);
                            v453 = v468;
                            v454.n128_u64[0] = (unint64_t)v421;
                            v454.n128_u64[1] = v411;
                            LODWORD(v455) = 1;
                            if (v271) {
                              goto LABEL_851;
                            }
                            goto LABEL_852;
                          }
LABEL_767:
                          unsigned int v364 = *(_DWORD *)(a2 + 36);
                          LODWORD(v365) = *(_DWORD *)(a2 + 40);
                          unsigned int v366 = v365 + 2;
                          int8x16x2_t v159 = v350;
                          while (2)
                          {
                            uint64_t v365 = (v365 + 1);
                            *(_DWORD *)(a2 + 40) = v365;
                            if (v364 <= v365)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825A7218);
                            }
                            unsigned int v368 = v366;
                            uint64_t v369 = *(void *)(a2 + 24);
                            uint64_t v370 = v369 + 32 * v365;
                            unsigned int v371 = *(_DWORD *)v370;
                            *(_DWORD *)(a2 + 56) = *(_DWORD *)v370;
                            *uint64_t v38 = *(_OWORD *)(v370 + 4);
                            unsigned int v372 = *(_DWORD *)v370;
                            if (v372 <= 8)
                            {
                              if (((1 << v372) & 0x38) != 0)
                              {
                                uint64_t v373 = *(_DWORD **)(v369 + 32 * v365 + 24);
                                goto LABEL_778;
                              }
                              if (((1 << v372) & 0xC4) != 0)
                              {
                                *uint64_t v39 = *(void *)(v369 + 32 * v365 + 24);
                              }
                              else if (v372 == 8)
                              {
                                *uint64_t v39 = 0;
                                uint64_t v373 = *(_DWORD **)(v369 + 32 * v365 + 24);
                                if (v373) {
                                  *v373 += 2;
                                }
LABEL_778:
                                *uint64_t v39 = (uint64_t)v373;
                              }
                            }
                            int v367 = *(_DWORD *)(a2 + 68);
                            *(void *)(a2 + 88) = *(void *)(a2 + 60);
                            *(_DWORD *)(a2 + 96) = v367;
                            unsigned int v366 = v368 + 1;
                            if (v371 == 82) {
                              continue;
                            }
                            break;
                          }
                          uint64_t v374 = 0;
                          v468 = 0;
                          v469.n128_u64[0] = 0;
                          v462 = 0;
                          if (v371 != 39) {
                            goto LABEL_780;
                          }
                          while (2)
                          {
                            *(_DWORD *)(a2 + 40) = v368;
                            if (v364 <= v368)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825A7220);
                            }
                            uint64_t v378 = v369 + 32 * v368;
                            unsigned int v379 = *(_DWORD *)v378;
                            *(_DWORD *)(a2 + 56) = *(_DWORD *)v378;
                            *uint64_t v38 = *(_OWORD *)(v378 + 4);
                            unsigned int v380 = *(_DWORD *)v378;
                            if (v380 <= 8)
                            {
                              if (((1 << v380) & 0x38) != 0)
                              {
                                int8x16_t v381 = *(_DWORD **)(v369 + 32 * v368 + 24);
                                goto LABEL_795;
                              }
                              if (((1 << v380) & 0xC4) != 0)
                              {
                                *uint64_t v39 = *(void *)(v369 + 32 * v368 + 24);
                              }
                              else if (v380 == 8)
                              {
                                *uint64_t v39 = 0;
                                int8x16_t v381 = *(_DWORD **)(v369 + 32 * v368 + 24);
                                if (v381) {
                                  *v381 += 2;
                                }
LABEL_795:
                                *uint64_t v39 = (uint64_t)v381;
                              }
                            }
                            int v377 = *(_DWORD *)(a2 + 68);
                            *(void *)(a2 + 88) = *(void *)(a2 + 60);
                            *(_DWORD *)(a2 + 96) = v377;
                            ++v368;
                            if (v379 == 82) {
                              continue;
                            }
                            break;
                          }
                          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(v439, a2);
                          if (!v440)
                          {
                            uint64_t v374 = *(WTF **)v439;
                            v468 = *(const char **)v439;
                            v469.n128_u64[0] = *(void *)&v439[8];
                            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName((uint64_t)&v472, a2);
                            uint64_t v389 = v474;
                            if (v474)
                            {
                              if (v474 != 1) {
                                goto LABEL_917;
                              }
                              int8x16_t v390 = v472;
                              if (v472) {
                                *(_DWORD *)v472 += 2;
                              }
                              __n128 v454 = v473;
                              v453 = v390;
                              LODWORD(v455) = 1;
                            }
                            else
                            {
                              v462 = v472;
                            }
                            ((void (*)(const char **, const char **))off_1ECABE170[v389])(&v450, &v472);
                            if (!v389)
                            {
LABEL_780:
                              WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement((uint64_t)v439, a2);
                              uint64_t v375 = v440;
                              if (v440)
                              {
                                if (v440 != 1) {
                                  goto LABEL_917;
                                }
                                int v376 = *(const char **)v439;
                                if (*(void *)v439) {
                                  **(_DWORD **)v439 += 2;
                                }
                                __n128 v454 = *(__n128 *)&v439[8];
                                v453 = v376;
                                LODWORD(v455) = 1;
                              }
                              else
                              {
                                unint64_t v387 = *(void **)(a2 + 8);
                                unsigned int v388 = *(_DWORD *)(a2 + 96) - v423;
                                v472 = v421;
                                v473.n128_u64[0] = __PAIR64__(v388, v423);
                                v453 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::Function,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::Parameter,0ul>,WGSL::AST::Expression *,std::reference_wrapper<WGSL::AST::CompoundStatement>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v387, &v472, (uint64_t)v465, (uint64_t *)&v443, (uint64_t *)&v462, v439, (uint64_t *)&v446, (uint64_t *)&v468);
                                LODWORD(v455) = 0;
                                uint64_t v374 = (WTF *)v468;
                              }
                              ((void (*)(const char **, unsigned char *))off_1ECABE5C0[v375])(&v472, v439);
                            }
                            if (v374)
                            {
                              v468 = 0;
                              v469.n128_u32[0] = 0;
                              WTF::fastFree(v374, v276);
                            }
                            unsigned int v271 = (WTF *)v443;
                            if (v443) {
                              goto LABEL_851;
                            }
                            goto LABEL_852;
                          }
                          if (v440 != 1) {
                            goto LABEL_917;
                          }
                          int8x16_t v382 = *(char **)v439;
                          if (*(void *)v439)
                          {
                            int v383 = **(_DWORD **)v439;
                            **(_DWORD **)v439 += 2;
                            __n128 v454 = *(__n128 *)&v439[8];
                            v453 = v382;
                            LODWORD(v455) = 1;
                            if (v383)
                            {
                              *(_DWORD *)int8x16_t v382 = v383;
                              unsigned int v271 = (WTF *)v443;
                              if (!v443) {
                                goto LABEL_852;
                              }
LABEL_851:
                              v443 = 0;
                              v444.n128_u32[0] = 0;
                              WTF::fastFree(v271, v276);
                              goto LABEL_852;
                            }
                            WTF::StringImpl::destroy();
                            unsigned int v271 = (WTF *)v443;
                            if (v443) {
                              goto LABEL_851;
                            }
                          }
                          else
                          {
                            __n128 v454 = *(__n128 *)&v439[8];
                            v453 = 0;
                            LODWORD(v455) = 1;
                            unsigned int v271 = (WTF *)v443;
                            if (v443) {
                              goto LABEL_851;
                            }
                          }
LABEL_852:
                          if (v467 != -1) {
                            ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v467])(v439, v465);
                          }
                          uint64_t v400 = v455;
                          if (!v455)
                          {
                            uint64_t v401 = v453;
                            goto LABEL_860;
                          }
                          if (v455 != 1) {
                            goto LABEL_917;
                          }
                          uint64_t v401 = v453;
                          if (v453) {
                            *(_DWORD *)v453 += 2;
                          }
                          __n128 *v159 = v454;
LABEL_860:
                          v433 = v401;
                          unsigned int v436 = v400;
                          ((void (*)(unsigned char *, const char **))off_1ECABE5E0[v400])(v439, &v453);
                          uint64_t v185 = v448;
                          if (v448 != -1) {
LABEL_861:
                          }
                            ((void (*)(unsigned char *, _DWORD **))off_1ECABE5D0[v185])(v439, &v446);
LABEL_862:
                          unsigned int v402 = v436;
                          if (!v436)
                          {
                            uint64_t v405 = *(void *)a2;
                            uint64_t v406 = *(unsigned int *)(*(void *)a2 + 76);
                            if (v406 == *(_DWORD *)(*(void *)a2 + 72))
                            {
                              int8x16x2_t v407 = (const char **)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v405 + 64, v406 + 1, (unint64_t)&v433);
                              uint64_t v406 = *(unsigned int *)(v405 + 76);
                              uint64_t v408 = *(void *)(v405 + 64);
                              int8x16x2_t v409 = *v407;
                            }
                            else
                            {
                              uint64_t v408 = *(void *)(v405 + 64);
                              int8x16x2_t v409 = v433;
                            }
                            *(void *)(v408 + 8 * v406) = v409;
                            ++*(_DWORD *)(v405 + 76);
                            uint64_t v404 = v436;
                            if (v436 != -1) {
                              goto LABEL_867;
                            }
                            goto LABEL_868;
                          }
                          if (v436 != 1)
                          {
LABEL_917:
                            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_918:
                            __break(0xC471u);
                            JUMPOUT(0x1825A70C0);
                          }
                          int8x16x2_t v403 = v433;
                          if (v433) {
                            *(_DWORD *)v433 += 2;
                          }
                          __n128 result = *v159;
                          __n128 *v431 = *v159;
                          *(void *)a1 = v403;
                          *(unsigned char *)(a1 + 24) = 1;
                          uint64_t v404 = v436;
                          if (v436 != -1) {
LABEL_867:
                          }
                            ((void (*)(unsigned char *, const char **))off_1ECABE5E0[v404])(v439, &v433);
LABEL_868:
                          if (v402) {
                            return result;
                          }
                          unsigned int v40 = *(_DWORD *)(a2 + 56);
                          goto LABEL_311;
                        }
                      }
                      v227 = *(_DWORD **)(v223 + 32 * v221 + 24);
LABEL_441:
                      *uint64_t v39 = (uint64_t)v227;
                      goto LABEL_432;
                    case 0x1C:
                    case 0x22:
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableWithAttributes((uint64_t)v439, a2, (uint64_t *)&v446);
                      uint64_t v195 = v440;
                      if (v440)
                      {
                        if (v440 != 1) {
                          goto LABEL_917;
                        }
                        unsigned long long v196 = *(const char **)v439;
                        if (*(void *)v439) {
                          **(_DWORD **)v439 += 2;
                        }
                        __n128 *v159 = *(__n128 *)&v439[8];
LABEL_535:
                        v433 = v196;
                        unsigned int v436 = v195;
LABEL_729:
                        ((void (*)(unsigned char *, unsigned char *))off_1ECABDFD8[v195])(v465, v439);
                        int8x16x2_t v160 = off_1ECABE5E0;
                        uint64_t v185 = v448;
                        if (v448 != -1) {
                          goto LABEL_861;
                        }
                        goto LABEL_862;
                      }
                      if (*(_DWORD *)(a2 + 56) != 73)
                      {
                        WGSL::toString();
                        WGSL::toString();
                        *(void *)v465 = "Expected a ";
                        *(void *)&v465[8] = 12;
                        v472 = ", but got a ";
                        v473.n128_u64[0] = 13;
                        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v465, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v453, &v468);
                        if (!v468)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A71D8);
                        }
                        size_t v252 = v453;
                        v453 = 0;
                        if (v252)
                        {
                          if (*(_DWORD *)v252 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v252 -= 2;
                          }
                        }
                        uint64_t v347 = v462;
                        v462 = 0;
                        if (v347)
                        {
                          if (*(_DWORD *)v347 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v347 -= 2;
                          }
                        }
                        unint64_t v348 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                        v433 = v468;
                        v434 = v161;
                        unint64_t v435 = v348;
                        unsigned int v436 = 1;
                        goto LABEL_729;
                      }
                      unsigned int v240 = *(_DWORD *)(a2 + 36);
                      unsigned int v241 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v241;
                        if (v240 <= v241)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A7170);
                        }
                        uint64_t v243 = *(void *)(a2 + 24);
                        uint64_t v244 = v243 + 32 * v241;
                        unsigned int v245 = *(_DWORD *)v244;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v244;
                        *uint64_t v38 = *(_OWORD *)(v244 + 4);
                        unsigned int v246 = *(_DWORD *)v244;
                        if (v246 > 8) {
                          goto LABEL_469;
                        }
                        if (((1 << v246) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v246) & 0xC4) != 0)
                        {
                          *uint64_t v39 = *(void *)(v243 + 32 * v241 + 24);
                        }
                        else if (v246 == 8)
                        {
                          *uint64_t v39 = 0;
                          v247 = *(_DWORD **)(v243 + 32 * v241 + 24);
                          if (v247) {
                            *v247 += 2;
                          }
                          goto LABEL_478;
                        }
LABEL_469:
                        int v242 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v242;
                        ++v241;
                        if (v245 != 82)
                        {
                          unsigned long long v196 = *(const char **)v439;
                          goto LABEL_535;
                        }
                      }
                      v247 = *(_DWORD **)(v243 + 32 * v241 + 24);
LABEL_478:
                      *uint64_t v39 = (uint64_t)v247;
                      goto LABEL_469;
                    case 0x1F:
                      unint64_t v228 = *(void *)(a2 + 88);
                      uint64_t v424 = *(unsigned int *)(a2 + 96);
                      unsigned int v229 = *(_DWORD *)(a2 + 36);
                      unsigned int v230 = *(_DWORD *)(a2 + 40) + 1;
                      break;
                    default:
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      unint64_t v237 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                      v434 = v161;
                      unint64_t v435 = v237;
                      unsigned int v436 = 1;
                      uint64_t v185 = v448;
                      if (v448 == -1) {
                        goto LABEL_862;
                      }
                      goto LABEL_861;
                  }
                  while (2)
                  {
                    *(_DWORD *)(a2 + 40) = v230;
                    if (v229 <= v230)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825A7150);
                    }
                    uint64_t v232 = *(void *)(a2 + 24);
                    uint64_t v233 = v232 + 32 * v230;
                    unsigned int v234 = *(_DWORD *)v233;
                    *(_DWORD *)(a2 + 56) = *(_DWORD *)v233;
                    *uint64_t v38 = *(_OWORD *)(v233 + 4);
                    unsigned int v235 = *(_DWORD *)v233;
                    if (v235 <= 8)
                    {
                      if (((1 << v235) & 0x38) != 0)
                      {
                        __int16 v236 = *(_DWORD **)(v232 + 32 * v230 + 24);
                        goto LABEL_453;
                      }
                      if (((1 << v235) & 0xC4) != 0)
                      {
                        *uint64_t v39 = *(void *)(v232 + 32 * v230 + 24);
                      }
                      else if (v235 == 8)
                      {
                        *uint64_t v39 = 0;
                        __int16 v236 = *(_DWORD **)(v232 + 32 * v230 + 24);
                        if (v236) {
                          *v236 += 2;
                        }
LABEL_453:
                        *uint64_t v39 = (uint64_t)v236;
                      }
                    }
                    int v231 = *(_DWORD *)(a2 + 68);
                    *(void *)(a2 + 88) = *(void *)(a2 + 60);
                    *(_DWORD *)(a2 + 96) = v231;
                    ++v230;
                    if (v234 != 82)
                    {
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v465, a2);
                      if (v467)
                      {
                        if (v467 != 1) {
                          goto LABEL_917;
                        }
                        unint64_t v239 = *(const char **)v465;
                        if (*(void *)v465) {
                          **(_DWORD **)v465 += 2;
                        }
                        __n128 v444 = *(__n128 *)&v465[8];
                        v443 = v239;
                        unsigned int v445 = 1;
                        goto LABEL_836;
                      }
                      if (*(_DWORD *)(a2 + 56) != 43)
                      {
                        WGSL::toString();
                        WGSL::toString();
                        *(void *)v439 = "Expected a ";
                        *(void *)&v439[8] = 12;
                        v472 = ", but got a ";
                        v473.n128_u64[0] = 13;
                        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v460, &v468);
                        if (!v468)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A71E8);
                        }
                        unint64_t v270 = (_DWORD *)v460;
                        *(void *)&long long v460 = 0;
                        if (v270)
                        {
                          if (*v270 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v270 -= 2;
                          }
                        }
                        int8x16_t v353 = v462;
                        v462 = 0;
                        if (v353)
                        {
                          if (*(_DWORD *)v353 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v353 -= 2;
                          }
                        }
                        unint64_t v355 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                        v443 = v468;
                        v444.n128_u64[0] = v228;
                        v444.n128_u64[1] = v355;
                        unsigned int v445 = 1;
                        goto LABEL_836;
                      }
                      unsigned int v261 = *(_DWORD *)(a2 + 36);
                      unsigned int v262 = *(_DWORD *)(a2 + 40) + 1;
                      while (2)
                      {
                        *(_DWORD *)(a2 + 40) = v262;
                        if (v261 <= v262)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A71A8);
                        }
                        uint64_t v264 = *(void *)(a2 + 24);
                        uint64_t v265 = v264 + 32 * v262;
                        unsigned int v266 = *(_DWORD *)v265;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v265;
                        *uint64_t v38 = *(_OWORD *)(v265 + 4);
                        unsigned int v267 = *(_DWORD *)v265;
                        if (v267 <= 8)
                        {
                          if (((1 << v267) & 0x38) != 0)
                          {
                            uint64_t v268 = *(_DWORD **)(v264 + 32 * v262 + 24);
                            goto LABEL_533;
                          }
                          if (((1 << v267) & 0xC4) != 0)
                          {
                            *uint64_t v39 = *(void *)(v264 + 32 * v262 + 24);
                          }
                          else if (v267 == 8)
                          {
                            *uint64_t v39 = 0;
                            uint64_t v268 = *(_DWORD **)(v264 + 32 * v262 + 24);
                            if (v268) {
                              *v268 += 2;
                            }
LABEL_533:
                            *uint64_t v39 = (uint64_t)v268;
                          }
                        }
                        int v263 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v263;
                        ++v262;
                        if (v266 == 82) {
                          continue;
                        }
                        break;
                      }
                      unint64_t v420 = v228;
                      int8x16x2_t v422 = 0;
                      unsigned int v425 = 0;
                      uint64_t v458 = 0;
                      v457 = 0;
                      v456 = 0;
                      int v427 = v445;
                      while (2)
                      {
                        if (*(_DWORD *)(a2 + 56) == 44)
                        {
                          unint64_t v349 = v420;
                          goto LABEL_752;
                        }
                        unint64_t v309 = *(void *)(a2 + 88);
                        uint64_t v310 = *(unsigned int *)(a2 + 96);
                        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v472, a2);
                        if (v474)
                        {
                          if (v474 != 1) {
                            goto LABEL_917;
                          }
                          uint16x8_t v311 = v472;
                          if (v472) {
                            *(_DWORD *)v472 += 2;
                          }
                          __n128 v463 = v473;
                          v462 = v311;
                          unsigned int v464 = 1;
                          uint64_t v312 = 1;
                          goto LABEL_672;
                        }
                        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v439, a2);
                        if (v441[0])
                        {
                          if (v441[0] != 1) {
                            goto LABEL_917;
                          }
                          unint64_t v313 = *(const char **)v439;
                          if (*(void *)v439) {
                            **(_DWORD **)v439 += 2;
                          }
                          __n128 v463 = *(__n128 *)&v439[8];
                          v462 = v313;
                          goto LABEL_668;
                        }
                        if (*(_DWORD *)(a2 + 56) != 47)
                        {
                          WGSL::toString();
                          WGSL::toString();
                          v468 = "Expected a ";
                          v469.n128_u64[0] = 12;
                          *(void *)&long long v460 = ", but got a ";
                          *((void *)&v460 + 1) = 13;
                          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v468, (uint64_t *)&v461, (uint64_t)&v460, (uint64_t *)&v459, &v471);
                          if (!v471)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825A71F8);
                          }
                          unint64_t v322 = v459;
                          v459 = 0;
                          if (v322)
                          {
                            if (*v322 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v322 -= 2;
                            }
                          }
                          v327 = v461;
                          v461 = 0;
                          if (v327)
                          {
                            if (*v327 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v327 -= 2;
                            }
                          }
                          unint64_t v328 = v310 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v310) << 32);
                          v462 = v471;
                          v463.n128_u64[0] = v309;
                          v463.n128_u64[1] = v328;
LABEL_668:
                          unsigned int v464 = 1;
                          goto LABEL_669;
                        }
                        unsigned int v314 = *(_DWORD *)(a2 + 36);
                        unsigned int v315 = *(_DWORD *)(a2 + 40) + 1;
LABEL_642:
                        *(_DWORD *)(a2 + 40) = v315;
                        if (v314 <= v315)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A71B8);
                        }
                        uint64_t v317 = *(void *)(a2 + 24);
                        uint64_t v318 = v317 + 32 * v315;
                        unsigned int v319 = *(_DWORD *)v318;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v318;
                        *uint64_t v38 = *(_OWORD *)(v318 + 4);
                        unsigned int v320 = *(_DWORD *)v318;
                        if (v320 <= 8)
                        {
                          if (((1 << v320) & 0x38) != 0)
                          {
                            uint16x8_t v321 = *(_DWORD **)(v317 + 32 * v315 + 24);
                            goto LABEL_650;
                          }
                          if (((1 << v320) & 0xC4) != 0)
                          {
                            *uint64_t v39 = *(void *)(v317 + 32 * v315 + 24);
                          }
                          else if (v320 == 8)
                          {
                            *uint64_t v39 = 0;
                            uint16x8_t v321 = *(_DWORD **)(v317 + 32 * v315 + 24);
                            if (v321) {
                              *v321 += 2;
                            }
LABEL_650:
                            *uint64_t v39 = (uint64_t)v321;
                          }
                        }
                        int v316 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v316;
                        ++v315;
                        if (v319 != 82)
                        {
                          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName((uint64_t)&v468, a2);
                          if (v470)
                          {
                            if (v470 != 1) {
                              goto LABEL_917;
                            }
                            v323 = v468;
                            if (v468) {
                              *(_DWORD *)v468 += 2;
                            }
                            __n128 v463 = v469;
                            v462 = v323;
                            unsigned int v464 = 1;
                            uint64_t v324 = 1;
LABEL_661:
                            ((void (*)(long long *, const char **))off_1ECABE170[v324])(&v460, &v468);
                          }
                          else
                          {
                            BOOL v325 = *(void **)(a2 + 8);
                            unsigned int v326 = *(_DWORD *)(a2 + 96) - v310;
                            *(void *)&long long v460 = v309;
                            *((void *)&v460 + 1) = __PAIR64__(v326, v310);
                            v462 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::StructureMember,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v325, &v460, (uint64_t)v439, (uint64_t *)&v468, (uint64_t *)&v472);
                            unsigned int v464 = 0;
                            uint64_t v324 = v470;
                            if (v470 != -1) {
                              goto LABEL_661;
                            }
                          }
LABEL_669:
                          if (v441[0] != -1) {
                            ((void (*)(const char **, unsigned char *))off_1ECABDF80[v441[0]])(&v468, v439);
                          }
                          uint64_t v312 = v474;
                          if (v474 != -1) {
LABEL_672:
                          }
                            ((void (*)(unsigned char *, const char **))off_1ECABE5D0[v312])(v439, &v472);
                          if (v464)
                          {
                            if (v464 != 1) {
                              goto LABEL_917;
                            }
                            int8x16x2_t v160 = (uint64_t (**)())v462;
                            if (v462) {
                              *(_DWORD *)v462 += 2;
                            }
                            __n128 v444 = v463;
                            int v427 = 1;
                            int v306 = 1;
                            uint64_t v307 = 1;
                            goto LABEL_625;
                          }
                          WTF::HashTable<WTF::String,WTF::String,WTF::IdentityExtractor,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String>>::add((uint64_t)v439, (uint64_t *)&v456, (const WTF::StringImpl **)v462 + 6);
                          if (!v439[16])
                          {
                            __n128 v454 = *((__n128 *)v462 + 2);
                            v453 = (const char *)off_1ECABC030;
                            int8x16_t v331 = (_DWORD *)*((void *)v462 + 6);
                            if (v331) {
                              *v331 += 2;
                            }
                            v455 = v331;
                            long long v451 = *(_OWORD *)&v465[8];
                            v450 = (const char *)off_1ECABC030;
                            uint64_t v332 = (uint64_t)v466;
                            if (v466)
                            {
                              *v466 += 2;
                              int8x16_t v331 = v455;
                            }
                            v452 = (_DWORD *)v332;
                            WTF::tryMakeString<WTF::ASCIILiteral,WGSL::AST::Identifier,WTF::ASCIILiteral,WGSL::AST::Identifier,char>((uint64_t)&v472, (int8x16_t *)"duplicate member '", 19, (uint64_t)v331, (int8x16_t *)"' in struct '", 14, v332, 39);
                            int8x16x2_t v160 = (uint64_t (**)())v472;
                            if (!v472)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825A7200);
                            }
                            unint64_t v333 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                            v444.n128_u64[0] = v420;
                            v444.n128_u64[1] = v333;
                            uint8x16_t v334 = v452;
                            v450 = (const char *)off_1ECABC030;
                            v452 = 0;
                            if (v334)
                            {
                              if (*v334 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *v334 -= 2;
                              }
                            }
                            unsigned int v343 = v455;
                            v453 = (const char *)off_1ECABC030;
                            v455 = 0;
                            if (!v343) {
                              goto LABEL_712;
                            }
LABEL_709:
                            if (*v343 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v343 -= 2;
                            }
                            goto LABEL_712;
                          }
                          if (v425 == v458)
                          {
                            char v329 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v457, v425 + 1, (unint64_t)&v462);
                            int v330 = HIDWORD(v458);
                            int8x16x2_t v422 = v457;
                            *((void *)v457 + HIDWORD(v458)) = *v329;
                          }
                          else
                          {
                            *((void *)v422 + v425) = v462;
                            int v330 = HIDWORD(v458);
                          }
                          HIDWORD(v458) = v330 + 1;
                          unsigned int v425 = v330 + 1;
                          if ((v330 + 1) < 0x400)
                          {
                            if (*(_DWORD *)(a2 + 56) != 48)
                            {
                              int v306 = 7;
                              uint64_t v307 = v464;
                              if (v464 == -1) {
                                goto LABEL_626;
                              }
                              goto LABEL_625;
                            }
                            unsigned int v335 = *(_DWORD *)(a2 + 36);
                            unsigned int v336 = *(_DWORD *)(a2 + 40) + 1;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v336;
                              if (v335 <= v336)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825A7178);
                              }
                              uint64_t v338 = *(void *)(a2 + 24);
                              uint64_t v339 = v338 + 32 * v336;
                              unsigned int v340 = *(_DWORD *)v339;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v339;
                              *uint64_t v38 = *(_OWORD *)(v339 + 4);
                              unsigned int v341 = *(_DWORD *)v339;
                              if (v341 <= 8)
                              {
                                if (((1 << v341) & 0x38) != 0)
                                {
                                  unsigned int v342 = *(_DWORD **)(v338 + 32 * v336 + 24);
                                  goto LABEL_702;
                                }
                                if (((1 << v341) & 0xC4) != 0)
                                {
                                  *uint64_t v39 = *(void *)(v338 + 32 * v336 + 24);
                                }
                                else if (v341 == 8)
                                {
                                  *uint64_t v39 = 0;
                                  unsigned int v342 = *(_DWORD **)(v338 + 32 * v336 + 24);
                                  if (v342) {
                                    *v342 += 2;
                                  }
LABEL_702:
                                  *uint64_t v39 = (uint64_t)v342;
                                }
                              }
                              int v337 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v337;
                              ++v336;
                              if (v340 != 82)
                              {
                                int v306 = 0;
                                uint64_t v307 = v464;
                                if (v464 == -1) {
                                  goto LABEL_626;
                                }
LABEL_625:
                                ((void (*)(unsigned char *, const char **))off_1ECABE388[v307])(v439, &v462);
                                goto LABEL_626;
                              }
                              continue;
                            }
                          }
                          WTF::String::number((WTF::String *)0x3FF);
                          WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"struct cannot have more than ", 30, (uint64_t *)&v449, (int8x16_t *)" members", 9, &v472);
                          unint64_t v344 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                          int8x16x2_t v160 = (uint64_t (**)())v472;
                          v444.n128_u64[0] = v420;
                          v444.n128_u64[1] = v344;
                          v472 = 0;
                          unsigned int v343 = v449;
                          v449 = 0;
                          if (v343) {
                            goto LABEL_709;
                          }
LABEL_712:
                          int v427 = 1;
                          int v306 = 1;
                          uint64_t v307 = v464;
                          if (v464 != -1) {
                            goto LABEL_625;
                          }
LABEL_626:
                          if (v306)
                          {
                            unint64_t v349 = v420;
                            if (v306 != 7)
                            {
                              v443 = (const char *)v160;
                              unsigned int v445 = v427;
LABEL_805:
                              int8x16x2_t v160 = off_1ECABE5E0;
                              goto LABEL_824;
                            }
LABEL_752:
                            v443 = (const char *)v160;
                            unsigned int v445 = v427;
                            if (!v425)
                            {
                              WTF::StringImpl::createWithoutCopyingNonEmpty();
                              unint64_t v384 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                              v444.n128_u64[0] = v349;
                              v444.n128_u64[1] = v384;
                              unsigned int v445 = 1;
                              goto LABEL_805;
                            }
                            if (*(_DWORD *)(a2 + 56) != 44)
                            {
                              WGSL::toString();
                              WGSL::toString();
                              *(void *)v439 = "Expected a ";
                              *(void *)&v439[8] = 12;
                              v472 = ", but got a ";
                              v473.n128_u64[0] = 13;
                              WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v460, &v468);
                              if (!v468)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825A7228);
                              }
                              uint64_t v385 = (_DWORD *)v460;
                              *(void *)&long long v460 = 0;
                              int8x16x2_t v160 = off_1ECABE5E0;
                              if (v385)
                              {
                                if (*v385 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *v385 -= 2;
                                }
                              }
                              int8x16_t v391 = v462;
                              v462 = 0;
                              if (v391)
                              {
                                if (*(_DWORD *)v391 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *(_DWORD *)v391 -= 2;
                                }
                              }
                              unint64_t v392 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                              v443 = v468;
                              v444.n128_u64[0] = v349;
                              v444.n128_u64[1] = v392;
                              unsigned int v445 = 1;
LABEL_824:
                              uint64_t v393 = (uint64_t)v456;
                              if (v456)
                              {
                                uint64_t v394 = *((unsigned int *)v456 - 1);
                                if (v394)
                                {
                                  int8x16_t v395 = v456;
                                  do
                                  {
                                    int v396 = *v395;
                                    if (*v395 != (_DWORD *)-1)
                                    {
                                      char *v395 = 0;
                                      if (v396)
                                      {
                                        if (*v396 == 2) {
                                          WTF::StringImpl::destroy();
                                        }
                                        else {
                                          *v396 -= 2;
                                        }
                                      }
                                    }
                                    ++v395;
                                    --v394;
                                  }
                                  while (v394);
                                }
                                WTF::fastFree((WTF *)(v393 - 16), v308);
                              }
                              int v397 = v457;
                              if (v457)
                              {
                                v457 = 0;
                                LODWORD(v458) = 0;
                                WTF::fastFree(v397, v308);
                              }
LABEL_836:
                              if (v467 != -1) {
                                ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v467])(v439, v465);
                              }
                              uint64_t v398 = v445;
                              if (v445)
                              {
                                if (v445 != 1) {
                                  goto LABEL_917;
                                }
                                v399 = v443;
                                if (v443) {
                                  *(_DWORD *)v443 += 2;
                                }
                                __n128 *v159 = v444;
                              }
                              else
                              {
                                v399 = v443;
                              }
                              v433 = v399;
                              unsigned int v436 = v398;
                              ((void (*)(unsigned char *, const char **))off_1ECABE398[v398])(v439, &v443);
                              uint64_t v185 = v448;
                              if (v448 != -1) {
                                goto LABEL_861;
                              }
                              goto LABEL_862;
                            }
                            unsigned int v356 = *(_DWORD *)(a2 + 36);
                            unsigned int v357 = *(_DWORD *)(a2 + 40) + 1;
                            int8x16x2_t v160 = off_1ECABE5E0;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v357;
                              if (v356 <= v357)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825A7210);
                              }
                              uint64_t v359 = *(void *)(a2 + 24);
                              uint64_t v360 = v359 + 32 * v357;
                              unsigned int v361 = *(_DWORD *)v360;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v360;
                              *uint64_t v38 = *(_OWORD *)(v360 + 4);
                              unsigned int v362 = *(_DWORD *)v360;
                              if (v362 <= 8)
                              {
                                if (((1 << v362) & 0x38) != 0)
                                {
                                  uint16x8_t v363 = *(_DWORD **)(v359 + 32 * v357 + 24);
                                  goto LABEL_765;
                                }
                                if (((1 << v362) & 0xC4) != 0)
                                {
                                  *uint64_t v39 = *(void *)(v359 + 32 * v357 + 24);
                                }
                                else if (v362 == 8)
                                {
                                  *uint64_t v39 = 0;
                                  uint16x8_t v363 = *(_DWORD **)(v359 + 32 * v357 + 24);
                                  if (v363) {
                                    *v363 += 2;
                                  }
LABEL_765:
                                  *uint64_t v39 = (uint64_t)v363;
                                }
                              }
                              int v358 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v358;
                              ++v357;
                              if (v361 != 82)
                              {
                                v386 = *(void **)(a2 + 8);
                                *(void *)v439 = v349;
                                *(_DWORD *)&v439[8] = v424;
                                *(_DWORD *)&v439[12] = v358 - v424;
                                LOBYTE(v472) = 0;
                                v443 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::Structure,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::StructureMember,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WGSL::AST::StructureRole,void>(v386, v439, (uint64_t)v465, (uint64_t *)&v457, (uint64_t *)&v446, (char *)&v472);
                                unsigned int v445 = 0;
                                goto LABEL_824;
                              }
                              continue;
                            }
                          }
                          continue;
                        }
                        goto LABEL_642;
                      }
                    }
                    continue;
                  }
                }
                unsigned int v176 = *(_DWORD *)(a2 + 36);
                unsigned int v177 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v177;
                  if (v176 <= v177)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825A7128);
                  }
                  uint64_t v179 = *(void *)(a2 + 24);
                  uint64_t v180 = v179 + 32 * v177;
                  unsigned int v181 = *(_DWORD *)v180;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v180;
                  *uint64_t v38 = *(_OWORD *)(v180 + 4);
                  unsigned int v182 = *(_DWORD *)v180;
                  if (v182 <= 8)
                  {
                    if (((1 << v182) & 0x38) != 0)
                    {
                      int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                      goto LABEL_351;
                    }
                    if (((1 << v182) & 0xC4) != 0)
                    {
                      *uint64_t v39 = *(void *)(v179 + 32 * v177 + 24);
                    }
                    else if (v182 == 8)
                    {
                      *uint64_t v39 = 0;
                      int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                      if (v183) {
                        *v183 += 2;
                      }
LABEL_351:
                      *uint64_t v39 = (uint64_t)v183;
                    }
                  }
                  int v178 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v178;
                  ++v177;
                  if (v181 == 82) {
                    continue;
                  }
                  break;
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v439, a2);
                if (v441[0])
                {
                  if (v441[0] != 1) {
                    goto LABEL_917;
                  }
                  int8x16_t v186 = *(const char **)v439;
                  if (*(void *)v439) {
                    **(_DWORD **)v439 += 2;
                  }
                  __n128 v473 = *(__n128 *)&v439[8];
                  v472 = v186;
                  goto LABEL_490;
                }
                if (*(_DWORD *)(a2 + 56) == 49)
                {
                  unsigned int v197 = *(_DWORD *)(a2 + 36);
                  unsigned int v198 = *(_DWORD *)(a2 + 40) + 1;
                  while (1)
                  {
                    *(_DWORD *)(a2 + 40) = v198;
                    if (v197 <= v198)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825A7140);
                    }
                    uint64_t v200 = *(void *)(a2 + 24);
                    uint64_t v201 = v200 + 32 * v198;
                    unsigned int v202 = *(_DWORD *)v201;
                    *(_DWORD *)(a2 + 56) = *(_DWORD *)v201;
                    *uint64_t v38 = *(_OWORD *)(v201 + 4);
                    unsigned int v203 = *(_DWORD *)v201;
                    if (v203 > 8) {
                      goto LABEL_387;
                    }
                    if (((1 << v203) & 0x38) != 0) {
                      break;
                    }
                    if (((1 << v203) & 0xC4) != 0)
                    {
                      *uint64_t v39 = *(void *)(v200 + 32 * v198 + 24);
                    }
                    else if (v203 == 8)
                    {
                      *uint64_t v39 = 0;
                      v204 = *(_DWORD **)(v200 + 32 * v198 + 24);
                      if (v204) {
                        *v204 += 2;
                      }
                      goto LABEL_396;
                    }
LABEL_387:
                    int v199 = *(_DWORD *)(a2 + 68);
                    *(void *)(a2 + 88) = *(void *)(a2 + 60);
                    *(_DWORD *)(a2 + 96) = v199;
                    ++v198;
                    if (v202 != 82)
                    {
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName((uint64_t)v465, a2);
                      if (v466)
                      {
                        if (v466 != 1) {
                          goto LABEL_917;
                        }
                        int8x16_t v186 = *(const char **)v465;
                        if (*(void *)v465) {
                          **(_DWORD **)v465 += 2;
                        }
                        __n128 v473 = *(__n128 *)&v465[8];
                        v472 = v186;
                        unsigned int v474 = 1;
                        uint64_t v209 = 1;
                        uint64_t v210 = v466;
                        if (v466 != -1) {
                          goto LABEL_722;
                        }
                        goto LABEL_491;
                      }
                      if (*(_DWORD *)(a2 + 56) != 73)
                      {
                        WGSL::toString();
                        WGSL::toString();
                        v468 = "Expected a ";
                        v469.n128_u64[0] = 12;
                        v462 = ", but got a ";
                        v463.n128_u64[0] = 13;
                        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v468, (uint64_t *)&v450, (uint64_t)&v462, (uint64_t *)&v446, &v453);
                        if (!v453)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A71D0);
                        }
                        v250 = v446;
                        v446 = 0;
                        if (v250)
                        {
                          if (*v250 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v250 -= 2;
                          }
                        }
                        v345 = v450;
                        v450 = 0;
                        if (v345)
                        {
                          if (*(_DWORD *)v345 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v345 -= 2;
                          }
                        }
                        int8x16_t v186 = v453;
                        unint64_t v346 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                        v472 = v453;
                        v473.n128_u64[0] = (unint64_t)v161;
                        v473.n128_u64[1] = v346;
                        unsigned int v474 = 1;
                        uint64_t v209 = 1;
                        uint64_t v210 = v466;
                        if (v466 == -1) {
                          goto LABEL_491;
                        }
                        goto LABEL_722;
                      }
                      unsigned int v211 = *(_DWORD *)(a2 + 36);
                      unsigned int v212 = *(_DWORD *)(a2 + 40) + 1;
                      while (2)
                      {
                        *(_DWORD *)(a2 + 40) = v212;
                        if (v211 <= v212)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825A7160);
                        }
                        uint64_t v214 = *(void *)(a2 + 24);
                        uint64_t v215 = v214 + 32 * v212;
                        unsigned int v216 = *(_DWORD *)v215;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v215;
                        *uint64_t v38 = *(_OWORD *)(v215 + 4);
                        unsigned int v217 = *(_DWORD *)v215;
                        if (v217 <= 8)
                        {
                          if (((1 << v217) & 0x38) != 0)
                          {
                            unint64_t v218 = *(_DWORD **)(v214 + 32 * v212 + 24);
                            goto LABEL_429;
                          }
                          if (((1 << v217) & 0xC4) != 0)
                          {
                            *uint64_t v39 = *(void *)(v214 + 32 * v212 + 24);
                          }
                          else if (v217 == 8)
                          {
                            *uint64_t v39 = 0;
                            unint64_t v218 = *(_DWORD **)(v214 + 32 * v212 + 24);
                            if (v218) {
                              *v218 += 2;
                            }
LABEL_429:
                            *uint64_t v39 = (uint64_t)v218;
                          }
                        }
                        int v213 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v213;
                        ++v212;
                        if (v216 != 82)
                        {
                          uint64_t v251 = *(void **)(a2 + 8);
                          v468 = v161;
                          v469.n128_u32[0] = v162;
                          v469.n128_u32[1] = v213 - v162;
                          int8x16_t v186 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::TypeAlias,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,void>(v251, &v468, (uint64_t)v439, (uint64_t *)v465);
                          uint64_t v209 = 0;
                          v472 = v186;
                          unsigned int v474 = 0;
                          uint64_t v210 = v466;
                          if (v466 == -1) {
                            goto LABEL_491;
                          }
LABEL_722:
                          ((void (*)(const char **, unsigned char *))off_1ECABE170[v210])(&v468, v465);
LABEL_491:
                          if (v441[0] != -1) {
                            ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v441[0]])(v465, v439);
                          }
                          if (v209)
                          {
                            if (v186) {
                              *(_DWORD *)v186 += 2;
                            }
                            __n128 *v159 = v473;
                          }
                          v433 = v186;
                          unsigned int v436 = v209;
                          ((void (*)(unsigned char *, const char **))off_1ECABE5E0[v209])(v439, &v472);
                          goto LABEL_862;
                        }
                        continue;
                      }
                    }
                  }
                  v204 = *(_DWORD **)(v200 + 32 * v198 + 24);
LABEL_396:
                  *uint64_t v39 = (uint64_t)v204;
                  goto LABEL_387;
                }
                WGSL::toString();
                WGSL::toString();
                *(void *)v465 = "Expected a ";
                *(void *)&v465[8] = 12;
                v468 = ", but got a ";
                v469.n128_u64[0] = 13;
                WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v465, (uint64_t *)&v453, (uint64_t)&v468, (uint64_t *)&v450, &v462);
                if (!v462)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825A71C8);
                }
                unint64_t v207 = v450;
                v450 = 0;
                if (v207)
                {
                  if (*(_DWORD *)v207 != 2)
                  {
                    *(_DWORD *)v207 -= 2;
                    goto LABEL_407;
                  }
                  WTF::StringImpl::destroy();
                  BOOL v208 = v453;
                  v453 = 0;
                  if (v208)
                  {
LABEL_486:
                    if (*(_DWORD *)v208 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *(_DWORD *)v208 -= 2;
                    }
                  }
                }
                else
                {
LABEL_407:
                  BOOL v208 = v453;
                  v453 = 0;
                  if (v208) {
                    goto LABEL_486;
                  }
                }
                int8x16_t v186 = v462;
                unint64_t v249 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                v472 = v462;
                v473.n128_u64[0] = (unint64_t)v161;
                v473.n128_u64[1] = v249;
LABEL_490:
                unsigned int v474 = 1;
                uint64_t v209 = 1;
                goto LABEL_491;
              }
              unsigned int v167 = *(_DWORD *)(a2 + 36);
              unsigned int v168 = *(_DWORD *)(a2 + 40) + 1;
LABEL_326:
              *(_DWORD *)(a2 + 40) = v168;
              if (v167 <= v168)
              {
                __break(0xC471u);
                JUMPOUT(0x1825A7108);
              }
              uint64_t v170 = *(void *)(a2 + 24);
              uint64_t v171 = v170 + 32 * v168;
              unsigned int v40 = *(_DWORD *)v171;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v171;
              *uint64_t v38 = *(_OWORD *)(v171 + 4);
              unsigned int v172 = *(_DWORD *)v171;
              if (v172 <= 8)
              {
                if (((1 << v172) & 0x38) != 0)
                {
                  int8x16_t v173 = *(_DWORD **)(v170 + 32 * v168 + 24);
                  goto LABEL_334;
                }
                if (((1 << v172) & 0xC4) != 0)
                {
                  *uint64_t v39 = *(void *)(v170 + 32 * v168 + 24);
                }
                else if (v172 == 8)
                {
                  *uint64_t v39 = 0;
                  int8x16_t v173 = *(_DWORD **)(v170 + 32 * v168 + 24);
                  if (v173) {
                    *v173 += 2;
                  }
LABEL_334:
                  *uint64_t v39 = (uint64_t)v173;
                }
              }
              int v169 = *(_DWORD *)(a2 + 68);
              result.n128_u64[0] = *(void *)(a2 + 60);
              *(void *)(a2 + 88) = result.n128_u64[0];
              *(_DWORD *)(a2 + 96) = v169;
              ++v168;
              if (v40 != 82) {
                continue;
              }
              goto LABEL_326;
            }
          }
          uint64_t v72 = *(void *)(a2 + 88);
          uint64_t v73 = *(unsigned int *)(a2 + 96);
          unsigned int v74 = *(_DWORD *)(a2 + 36);
          unsigned int v75 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v75;
            if (v74 <= v75)
            {
              __break(0xC471u);
              JUMPOUT(0x1825A70E8);
            }
            uint64_t v77 = *(void *)(a2 + 24);
            uint64_t v78 = v77 + 32 * v75;
            unsigned int v79 = *(_DWORD *)v78;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v78;
            *uint64_t v38 = *(_OWORD *)(v78 + 4);
            unsigned int v80 = *(_DWORD *)v78;
            if (v80 <= 8)
            {
              if (((1 << v80) & 0x38) != 0)
              {
                uint64_t v81 = *(_DWORD **)(v77 + 32 * v75 + 24);
                goto LABEL_148;
              }
              if (((1 << v80) & 0xC4) != 0)
              {
                *uint64_t v39 = *(void *)(v77 + 32 * v75 + 24);
              }
              else if (v80 == 8)
              {
                *uint64_t v39 = 0;
                uint64_t v81 = *(_DWORD **)(v77 + 32 * v75 + 24);
                if (v81) {
                  *v81 += 2;
                }
LABEL_148:
                *uint64_t v39 = (uint64_t)v81;
              }
            }
            int v76 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v76;
            ++v75;
            if (v79 == 82) {
              continue;
            }
            break;
          }
          while (2)
          {
            if (v79 != 8)
            {
              *(_DWORD *)v439 = v79;
              v441[0] = 1;
              WGSL::toString();
              if (v441[0] != 1) {
                goto LABEL_917;
              }
              WGSL::toString();
              v472 = "Expected a ";
              v473.n128_u64[0] = 12;
              v468 = ", but got a ";
              v469.n128_u64[0] = 13;
              WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v472, (uint64_t *)&v453, (uint64_t)&v468, (uint64_t *)&v450, &v462);
              if (!v462)
              {
                __break(0xC471u);
                JUMPOUT(0x1825A7120);
              }
              uint16x8_t v127 = v450;
              v450 = 0;
              if (v127)
              {
                if (*(_DWORD *)v127 == 2)
                {
                  WTF::StringImpl::destroy();
                  unint64_t v128 = v453;
                  v453 = 0;
                  if (!v128)
                  {
LABEL_244:
                    unint64_t v133 = v73 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v73) << 32);
                    *(void *)v465 = v462;
                    goto LABEL_256;
                  }
LABEL_241:
                  if (*(_DWORD *)v128 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *(_DWORD *)v128 -= 2;
                  }
                  goto LABEL_244;
                }
                *(_DWORD *)v127 -= 2;
              }
              unint64_t v128 = v453;
              v453 = 0;
              if (!v128) {
                goto LABEL_244;
              }
              goto LABEL_241;
            }
            *(_DWORD *)v439 = 8;
            *(_OWORD *)&v439[4] = *v38;
            uint64_t v117 = *v39;
            if (*v39) {
              *(_DWORD *)v117 += 2;
            }
            uint64_t v440 = v117;
            v441[0] = 0;
            unsigned int v118 = *(_DWORD *)(a2 + 36);
            LODWORD(v119) = *(_DWORD *)(a2 + 40);
            unsigned int v120 = v119 + 2;
            while (2)
            {
              uint64_t v119 = (v119 + 1);
              *(_DWORD *)(a2 + 40) = v119;
              if (v118 <= v119)
              {
                __break(0xC471u);
                JUMPOUT(0x1825A70C8);
              }
              unsigned int v112 = v120;
              uint64_t v122 = *(void *)(a2 + 24);
              uint64_t v123 = v122 + 32 * v119;
              unsigned int v124 = *(_DWORD *)v123;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v123;
              *uint64_t v38 = *(_OWORD *)(v123 + 4);
              unsigned int v125 = *(_DWORD *)v123;
              if (v125 <= 8)
              {
                if (((1 << v125) & 0x38) != 0)
                {
                  uint16x8_t v126 = *(_DWORD **)(v122 + 32 * v119 + 24);
                  goto LABEL_225;
                }
                if (((1 << v125) & 0xC4) != 0)
                {
                  *uint64_t v39 = *(void *)(v122 + 32 * v119 + 24);
                }
                else if (v125 == 8)
                {
                  *uint64_t v39 = 0;
                  uint16x8_t v126 = *(_DWORD **)(v122 + 32 * v119 + 24);
                  if (v126) {
                    *v126 += 2;
                  }
LABEL_225:
                  *uint64_t v39 = (uint64_t)v126;
                }
              }
              int v121 = *(_DWORD *)(a2 + 68);
              result.n128_u64[0] = *(void *)(a2 + 60);
              *(void *)(a2 + 88) = result.n128_u64[0];
              *(_DWORD *)(a2 + 96) = v121;
              unsigned int v120 = v112 + 1;
              if (v124 == 82) {
                continue;
              }
              break;
            }
            if (!v117) {
              goto LABEL_255;
            }
            uint64_t v129 = *(void *)(v117 + 8);
            int v130 = *(_DWORD *)(v117 + 4);
            if ((char *)v129 == "f16" || v130 != 3)
            {
              BOOL v135 = (char *)v129 == "f16" && v130 == 3;
              if (v135)
              {
                int8x16x2_t v109 = &(&WGSL::parseExtension(WTF::String const&)::__entries)[3 * !v135];
                goto LABEL_197;
              }
            }
            else
            {
              if ((*(unsigned char *)(v117 + 16) & 4) == 0)
              {
                if (*(_WORD *)v129 != 102) {
                  goto LABEL_255;
                }
                int v131 = *(_DWORD *)(v129 + 2);
                BOOL v12 = v131 == 3538993;
                BOOL v132 = v131 != 3538993;
                if (!v12) {
                  goto LABEL_255;
                }
LABEL_196:
                int8x16x2_t v109 = &(&WGSL::parseExtension(WTF::String const&)::__entries)[3 * v132];
LABEL_197:
                *(unsigned char *)(*(void *)a2 + 32) |= *((unsigned char *)v109 + 16);
                if (v124 != 48)
                {
                  int v110 = 4;
                  goto LABEL_257;
                }
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v112;
                  if (v118 <= v112)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825A70F0);
                  }
                  uint64_t v113 = v122 + 32 * v112;
                  unsigned int v114 = *(_DWORD *)v113;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v113;
                  *uint64_t v38 = *(_OWORD *)(v113 + 4);
                  unsigned int v115 = *(_DWORD *)v113;
                  if (v115 <= 8)
                  {
                    if (((1 << v115) & 0x38) != 0)
                    {
                      int8x16x2_t v116 = *(_DWORD **)(v122 + 32 * v112 + 24);
                      goto LABEL_209;
                    }
                    if (((1 << v115) & 0xC4) != 0)
                    {
                      *uint64_t v39 = *(void *)(v122 + 32 * v112 + 24);
                    }
                    else if (v115 == 8)
                    {
                      *uint64_t v39 = 0;
                      int8x16x2_t v116 = *(_DWORD **)(v122 + 32 * v112 + 24);
                      if (v116) {
                        *v116 += 2;
                      }
LABEL_209:
                      *uint64_t v39 = (uint64_t)v116;
                    }
                  }
                  int v111 = *(_DWORD *)(a2 + 68);
                  result.n128_u64[0] = *(void *)(a2 + 60);
                  *(void *)(a2 + 88) = result.n128_u64[0];
                  *(_DWORD *)(a2 + 96) = v111;
                  ++v112;
                  if (v114 != 82)
                  {
                    int v110 = 0;
                    goto LABEL_257;
                  }
                  continue;
                }
              }
              if (*(unsigned char *)v129 == 102)
              {
                int v136 = *(unsigned __int16 *)(v129 + 1);
                BOOL v12 = v136 == 13873;
                BOOL v132 = v136 != 13873;
                if (v12) {
                  goto LABEL_196;
                }
              }
            }
LABEL_255:
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            unint64_t v133 = v73 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v73) << 32);
LABEL_256:
            *(void *)&v465[8] = v72;
            *(void *)&v465[16] = v133;
            int v110 = 1;
            LOBYTE(v466) = 1;
LABEL_257:
            if (v441[0] != -1) {
              ((void (*)(const char **, unsigned char *))off_1ECABDF90[v441[0]])(&v472, v439);
            }
            if (!v110)
            {
              unsigned int v79 = *(_DWORD *)(a2 + 56);
              if (v79 != 73) {
                continue;
              }
LABEL_264:
              unsigned int v137 = *(_DWORD *)(a2 + 36);
              unsigned int v138 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v138;
                if (v137 <= v138)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825A70F8);
                }
                uint64_t v140 = *(void *)(a2 + 24);
                uint64_t v141 = v140 + 32 * v138;
                unsigned int v142 = *(_DWORD *)v141;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v141;
                *uint64_t v38 = *(_OWORD *)(v141 + 4);
                unsigned int v143 = *(_DWORD *)v141;
                if (v143 <= 8)
                {
                  if (((1 << v143) & 0x38) != 0)
                  {
                    int16x8_t v144 = *(_DWORD **)(v140 + 32 * v138 + 24);
                    goto LABEL_275;
                  }
                  if (((1 << v143) & 0xC4) != 0)
                  {
                    *uint64_t v39 = *(void *)(v140 + 32 * v138 + 24);
                  }
                  else if (v143 == 8)
                  {
                    *uint64_t v39 = 0;
                    int16x8_t v144 = *(_DWORD **)(v140 + 32 * v138 + 24);
                    if (v144) {
                      *v144 += 2;
                    }
LABEL_275:
                    *uint64_t v39 = (uint64_t)v144;
                  }
                }
                int v139 = *(_DWORD *)(a2 + 68);
                result.n128_u64[0] = *(void *)(a2 + 60);
                *(void *)(a2 + 88) = result.n128_u64[0];
                *(_DWORD *)(a2 + 96) = v139;
                ++v138;
                if (v142 != 82) {
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (v110 != 4)
          {
            if ((_BYTE)v466)
            {
              int8x16x2_t v416 = *(char **)v465;
              goto LABEL_905;
            }
            continue;
          }
          break;
        }
        if (*(_DWORD *)(a2 + 56) == 73) {
          goto LABEL_264;
        }
        WGSL::toString();
        WGSL::toString();
        *(void *)v439 = "Expected a ";
        *(void *)&v439[8] = 12;
        v472 = ", but got a ";
        v473.n128_u64[0] = 13;
        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v446, (uint64_t)&v472, (uint64_t *)&v443, &v468);
        if (!v468)
        {
          __break(0xC471u);
          JUMPOUT(0x1825A7230);
        }
        int v412 = v443;
        v443 = 0;
        if (v412)
        {
          if (*(_DWORD *)v412 != 2)
          {
            *(_DWORD *)v412 -= 2;
            goto LABEL_892;
          }
          WTF::StringImpl::destroy();
          int8x16x2_t v413 = v446;
          v446 = 0;
          if (v413)
          {
LABEL_901:
            if (*v413 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v413 -= 2;
            }
          }
        }
        else
        {
LABEL_892:
          int8x16x2_t v413 = v446;
          v446 = 0;
          if (v413) {
            goto LABEL_901;
          }
        }
        unint64_t v417 = v73 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v73) << 32);
        int8x16x2_t v416 = (char *)v468;
        *(void *)&v465[8] = v72;
        *(void *)&v465[16] = v417;
        LOBYTE(v466) = 1;
LABEL_905:
        if (!v416) {
          goto LABEL_916;
        }
LABEL_906:
        int v418 = *(_DWORD *)v416;
        *(_DWORD *)v416 += 2;
        __n128 result = *(__n128 *)&v465[8];
        __n128 *v431 = *(__n128 *)&v465[8];
        *(void *)a1 = v416;
        *(unsigned char *)(a1 + 24) = 1;
        *(void *)v465 = 0;
        if (v418) {
          *(_DWORD *)int8x16x2_t v416 = v418;
        }
        else {
          WTF::StringImpl::destroy();
        }
        return result;
      case 0x25:
      case 0x41:
        uint64_t v23 = *(void *)&v439[8];
        if (*(void *)v439 != *(void *)&v439[8])
        {
          while (1)
          {
            if (v23)
            {
              --v23;
              if (*(_DWORD *)(*(void *)&v439[16] + 16 * v23 + 8) != v6) {
                goto LABEL_6;
              }
            }
            else
            {
              uint64_t v23 = v440 - 1;
              if (*(_DWORD *)(*(void *)&v439[16] + 16 * v23 + 8) != v6) {
                goto LABEL_6;
              }
            }
            *(void *)&v439[8] = v23;
            if (*(void *)v439 == v23) {
              goto LABEL_6;
            }
          }
        }
        goto LABEL_6;
      case 0x2B:
      case 0x2F:
      case 0x31:
      case 0x49:
        *(void *)v439 = 0;
        *(void *)&v439[8] = 0;
        uint64_t v11 = *(WTF **)&v439[16];
        BOOL v12 = v441 == *(_DWORD **)&v439[16] || *(void *)&v439[16] == 0;
        if (!v12)
        {
          *(void *)&v439[16] = 0;
          LODWORD(v440) = 0;
          WTF::fastFree(v11, (void *)a2);
        }
        int v6 = 0;
        goto LABEL_6;
      case 0x2D:
      case 0x43:
        ++v6;
        goto LABEL_6;
      case 0x2E:
      case 0x44:
        for (uint64_t i = *(void *)&v439[8]; *(void *)v439 != i; *(void *)&v439[8] = i)
        {
          if (i)
          {
            --i;
            if (*(_DWORD *)(*(void *)&v439[16] + 16 * i + 8) != v6) {
              break;
            }
          }
          else
          {
            uint64_t i = v440 - 1;
            if (*(_DWORD *)(*(void *)&v439[16] + 16 * i + 8) != v6) {
              break;
            }
          }
        }
        if (v6) {
          --v6;
        }
        else {
          int v6 = 0;
        }
        goto LABEL_6;
      case 0x33:
      case 0x34:
      case 0x35:
      case 0x36:
        uint64_t v13 = *(void *)&v439[8];
        if (*(void *)v439 != *(void *)&v439[8])
        {
          uint64_t v14 = v440;
          if (*(void *)&v439[8]) {
            uint64_t v14 = *(void *)&v439[8];
          }
          uint64_t v15 = v14 - 1;
          uint64_t v16 = *(void *)&v439[16];
          if (*(_DWORD *)(*(void *)&v439[16] + 16 * v15 + 8) == v6)
          {
            if (v8 <= v7)
            {
              __break(0xC471u);
              JUMPOUT(0x1825A7190);
            }
            unint64_t v17 = (_DWORD *)(v9 + 32 * v7);
            int v18 = *v17 - 52;
            if (v18 <= 2)
            {
              int v19 = dword_1826CF660[v18];
              *unint64_t v17 = 51;
              v17[8] = v19;
              uint64_t v20 = v440;
              if (v13) {
                uint64_t v20 = v13;
              }
              uint64_t v15 = v20 - 1;
            }
            long long v21 = *(_DWORD **)(v16 + 16 * v15);
            *(void *)&v439[8] = v15;
            *long long v21 = 83;
            *unsigned int v10 = 84;
          }
        }
        goto LABEL_6;
      default:
        goto LABEL_6;
    }
  }
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 36);
  for (unsigned int i = *(_DWORD *)(result + 40) + 1; ; ++i)
  {
    *(_DWORD *)(result + 40) = i;
    if (v1 <= i) {
      break;
    }
    uint64_t v4 = *(void *)(result + 24);
    uint64_t v5 = v4 + 32 * i;
    unsigned int v6 = *(_DWORD *)v5;
    *(_DWORD *)(result + 56) = *(_DWORD *)v5;
    *(_OWORD *)(result + 60) = *(_OWORD *)(v5 + 4);
    unsigned int v7 = *(_DWORD *)v5;
    if (v7 <= 8)
    {
      if (((1 << v7) & 0x38) != 0)
      {
        unint64_t v8 = *(_DWORD **)(v4 + 32 * i + 24);
LABEL_12:
        *(void *)(result + 80) = v8;
        goto LABEL_3;
      }
      if (((1 << v7) & 0xC4) != 0)
      {
        *(void *)(result + 80) = *(void *)(v4 + 32 * i + 24);
      }
      else if (v7 == 8)
      {
        *(void *)(result + 80) = 0;
        unint64_t v8 = *(_DWORD **)(v4 + 32 * i + 24);
        if (v8) {
          *v8 += 2;
        }
        goto LABEL_12;
      }
    }
LABEL_3:
    int v3 = *(_DWORD *)(result + 68);
    *(void *)(result + 88) = *(void *)(result + 60);
    *(_DWORD *)(result + 96) = v3;
    if (v6 != 82) {
      return result;
    }
  }
  __break(0xC471u);
  return result;
}

void WGSL::Parser<WGSL::Lexer<unsigned char>>::parseDiagnostic(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 67)
  {
    WGSL::toString();
    WGSL::toString();
    unsigned int v49 = "Expected a ";
    *(void *)uint64_t v50 = 12;
    unsigned int v63 = ", but got a ";
    *(void *)&long long v64 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v49, (uint64_t *)&v68, (uint64_t)&v63, (uint64_t *)&v67, &v56);
    if (!v56)
    {
      __break(0xC471u);
      JUMPOUT(0x1825A7B68);
    }
    uint64_t v15 = v67;
    uint64_t v67 = 0;
    if (v15)
    {
      if (*v15 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t v16 = v68;
        unsigned int v68 = 0;
        if (!v16)
        {
LABEL_43:
          unint64_t v28 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v56;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v28;
          *(_DWORD *)(a1 + 80) = 1;
          return;
        }
LABEL_40:
        if (*v16 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v16 -= 2;
        }
        goto LABEL_43;
      }
      *v15 -= 2;
    }
    uint64_t v16 = v68;
    unsigned int v68 = 0;
    if (!v16) {
      goto LABEL_43;
    }
    goto LABEL_40;
  }
  unsigned int v6 = (_OWORD *)(a2 + 60);
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v8;
    if (v7 <= v8) {
      goto LABEL_110;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = v10 + 32 * v8;
    unsigned int v12 = *(_DWORD *)v11;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v11;
    *unsigned int v6 = *(_OWORD *)(v11 + 4);
    unsigned int v13 = *(_DWORD *)v11;
    if (v13 <= 8)
    {
      if (((1 << v13) & 0x38) != 0)
      {
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v14;
        goto LABEL_4;
      }
      if (((1 << v13) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v10 + 32 * v8 + 24);
        goto LABEL_4;
      }
      if (v13 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
        if (v14) {
          *v14 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v9 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v9;
    ++v8;
  }
  while (v12 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v63, a2);
  if (v66)
  {
    if (v66 != 1) {
      goto LABEL_105;
    }
    unint64_t v17 = v63;
    if (v63) {
      *(_DWORD *)v63 += 2;
    }
    *(_OWORD *)(a1 + 8) = v64;
    *(void *)a1 = v17;
LABEL_69:
    *(_DWORD *)(a1 + 80) = 1;
    goto LABEL_70;
  }
  int v18 = WGSL::parseSeverityControl(&v65);
  if (!v18)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v29 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
LABEL_68:
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v29;
    goto LABEL_69;
  }
  if (*(_DWORD *)(a2 + 56) != 48)
  {
    WGSL::toString();
    WGSL::toString();
    unsigned int v49 = "Expected a ";
    *(void *)uint64_t v50 = 12;
    uint64_t v56 = ", but got a ";
    *(void *)&long long v57 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v49, (uint64_t *)&v61, (uint64_t)&v56, (uint64_t *)&v60, &v62);
    if (!v62) {
      goto LABEL_110;
    }
    unint64_t v30 = v60;
    uint64_t v60 = 0;
    if (v30)
    {
      if (*v30 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v30 -= 2;
      }
    }
    long long v36 = v61;
    uint64_t v61 = 0;
    if (v36)
    {
      if (*v36 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v36 -= 2;
      }
    }
    unint64_t v29 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)a1 = v62;
    goto LABEL_68;
  }
  int v19 = v18;
  unsigned int v20 = *(_DWORD *)(a2 + 36);
  unsigned int v21 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v21;
    if (v20 <= v21)
    {
      __break(0xC471u);
      JUMPOUT(0x1825A7B60);
    }
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v24 = v23 + 32 * v21;
    unsigned int v25 = *(_DWORD *)v24;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v24;
    *unsigned int v6 = *(_OWORD *)(v24 + 4);
    unsigned int v26 = *(_DWORD *)v24;
    if (v26 <= 8)
    {
      if (((1 << v26) & 0x38) != 0)
      {
        unint64_t v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
LABEL_38:
        *(void *)(a2 + 80) = v27;
        goto LABEL_29;
      }
      if (((1 << v26) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v23 + 32 * v21 + 24);
        goto LABEL_29;
      }
      if (v26 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unint64_t v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        if (v27) {
          *v27 += 2;
        }
        goto LABEL_38;
      }
    }
LABEL_29:
    int v22 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v22;
    ++v21;
  }
  while (v25 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v56, a2);
  if (v59)
  {
    if (v59 == 1)
    {
      int v31 = v56;
      if (v56) {
        *(_DWORD *)v56 += 2;
      }
      *(_OWORD *)(a1 + 8) = v57;
      *(void *)a1 = v31;
      int v32 = 1;
      *(_DWORD *)(a1 + 80) = 1;
      goto LABEL_54;
    }
LABEL_105:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_110:
    __break(0xC471u);
    JUMPOUT(0x1825A7B58);
  }
  int v33 = *(_DWORD *)(a2 + 56);
  if (v33 != 69) {
    goto LABEL_74;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
  uint64_t v34 = WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v49, a2);
  if (!v51)
  {
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL3AST10IdentifierENS8_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(v34, &v49);
    int v33 = *(_DWORD *)(a2 + 56);
LABEL_74:
    if (v33 == 48)
    {
      WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
      int v33 = *(_DWORD *)(a2 + 56);
    }
    if (v33 != 68)
    {
      WGSL::toString();
      WGSL::toString();
      WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v49, (uint64_t *)&v55, (uint64_t *)&v54);
      int v45 = v54;
      unsigned int v54 = 0;
      if (v45)
      {
        if (*v45 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v45 -= 2;
        }
      }
      uint64_t v47 = v55;
      int v55 = 0;
      if (v47)
      {
        if (*v47 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v47 -= 2;
        }
      }
      unint64_t v48 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
      *(void *)a1 = v49;
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v48;
      *(_DWORD *)(a1 + 80) = 1;
      int v32 = v59;
      if (v59 != -1) {
        goto LABEL_54;
      }
      goto LABEL_70;
    }
    unsigned int v37 = *(_DWORD *)(a2 + 36);
    unsigned int v38 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v38;
      if (v37 <= v38)
      {
        __break(0xC471u);
        JUMPOUT(0x1825A7B70);
      }
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v41 = v40 + 32 * v38;
      unsigned int v42 = *(_DWORD *)v41;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v41;
      *unsigned int v6 = *(_OWORD *)(v41 + 4);
      unsigned int v43 = *(_DWORD *)v41;
      if (v43 > 8) {
        goto LABEL_79;
      }
      if (((1 << v43) & 0x38) != 0) {
        break;
      }
      if (((1 << v43) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v40 + 32 * v38 + 24);
      }
      else if (v43 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v44 = *(_DWORD **)(v40 + 32 * v38 + 24);
        if (v44) {
          *v44 += 2;
        }
        goto LABEL_88;
      }
LABEL_79:
      int v39 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v39;
      ++v38;
      if (v42 != 82)
      {
        LOBYTE(v49) = *v19;
        *(_OWORD *)&v50[8] = v57;
        uint64_t v46 = v58;
        uint64_t v58 = 0;
        *(void *)uint64_t v50 = off_1ECABC030;
        uint64_t v51 = v46;
        char v52 = 0;
        char v53 = 0;
        std::experimental::fundamentals_v3::expected<WGSL::AST::Diagnostic,WGSL::CompilationMessage>::expected(a1, (uint64_t)&v49);
        WGSL::AST::Diagnostic::~Diagnostic((WGSL::AST::Diagnostic *)&v49);
        int v32 = v59;
        if (v59 == -1) {
          goto LABEL_70;
        }
LABEL_54:
        ((void (*)(const char **, const char **))off_1ECABDF80[v32])(&v49, &v56);
        goto LABEL_70;
      }
    }
    unsigned int v44 = *(_DWORD **)(v40 + 32 * v38 + 24);
LABEL_88:
    *(void *)(a2 + 80) = v44;
    goto LABEL_79;
  }
  if (v51 != 1) {
    goto LABEL_105;
  }
  uint64_t v35 = v49;
  if (!v49)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v50;
    *(void *)a1 = 0;
    *(_DWORD *)(a1 + 80) = 1;
    int v32 = v59;
    if (v59 == -1) {
      goto LABEL_70;
    }
    goto LABEL_54;
  }
  *(_DWORD *)v49 += 2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v50;
  *(void *)a1 = v35;
  *(_DWORD *)(a1 + 80) = 1;
  unsigned int v49 = 0;
  if (*(_DWORD *)v35 == 2)
  {
    WTF::StringImpl::destroy();
    int v32 = v59;
    if (v59 == -1) {
      goto LABEL_70;
    }
    goto LABEL_54;
  }
  *(_DWORD *)v35 -= 2;
  int v32 = v59;
  if (v59 != -1) {
    goto LABEL_54;
  }
LABEL_70:
  if (v66 != -1) {
    ((void (*)(const char **, const char **))off_1ECABDF80[v66])(&v49, &v63);
  }
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType(uint64_t result, uint64_t a2, int a3)
{
  int v3 = *(_DWORD *)(a2 + 56);
  if (v3 == a3)
  {
    *(_DWORD *)__n128 result = a3;
    *(_OWORD *)(result + 4) = *(_OWORD *)(a2 + 60);
    *(_DWORD *)(result + 32) = 0;
    unsigned int v4 = *(_DWORD *)(a2 + 36);
    for (unsigned int i = *(_DWORD *)(a2 + 40) + 1; ; ++i)
    {
      *(_DWORD *)(a2 + 40) = i;
      if (v4 <= i)
      {
        __break(0xC471u);
        return result;
      }
      uint64_t v7 = *(void *)(a2 + 24);
      uint64_t v8 = v7 + 32 * i;
      unsigned int v9 = *(_DWORD *)v8;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v8;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v8 + 4);
      unsigned int v10 = *(_DWORD *)v8;
      if (v10 <= 8)
      {
        if (((1 << v10) & 0x38) != 0)
        {
          uint64_t v11 = *(_DWORD **)(v7 + 32 * i + 24);
LABEL_13:
          *(void *)(a2 + 80) = v11;
          goto LABEL_4;
        }
        if (((1 << v10) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v7 + 32 * i + 24);
        }
        else if (v10 == 8)
        {
          *(void *)(a2 + 80) = 0;
          uint64_t v11 = *(_DWORD **)(v7 + 32 * i + 24);
          if (v11) {
            *v11 += 2;
          }
          goto LABEL_13;
        }
      }
LABEL_4:
      int v6 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v6;
      if (v9 != 82) {
        return result;
      }
    }
  }
  *(_DWORD *)__n128 result = v3;
  *(_DWORD *)(result + 32) = 1;
  return result;
}

unint64_t *WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(void *a1, uint64_t *a2, uint64_t *a3)
{
  v6[0] = (unint64_t)"Expected a ";
  v6[1] = 12;
  v5[0] = ", but got a ";
  v5[1] = 13;
  __n128 result = WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(v6, a2, (uint64_t)v5, a3, a1);
  if (!*a1) {
    __break(0xC471u);
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::DiagnosticDirective,WGSL::SourceSpan,WGSL::AST::Diagnostic,void>(void *this, _OWORD *a2, uint64_t a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x67uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABDFB0;
  *(unsigned char *)(v6 + 24) = *(unsigned char *)a3;
  *(void *)(v6 + 32) = &unk_1ECABC008;
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(a3 + 16);
  *(void *)(v6 + 32) = off_1ECABC030;
  uint64_t v7 = *(void *)(a3 + 32);
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(v6 + 64) = 0;
  *(void *)(v6 + 56) = v7;
  *(unsigned char *)(v6 + 96) = 0;
  if (*(unsigned char *)(a3 + 72))
  {
    *(void *)(v6 + 64) = &unk_1ECABC008;
    *(_OWORD *)(v6 + 72) = *(_OWORD *)(a3 + 48);
    *(void *)(v6 + 64) = off_1ECABC030;
    uint64_t v8 = *(void *)(a3 + 64);
    *(void *)(a3 + 64) = 0;
    *(void *)(v6 + 88) = v8;
    *(unsigned char *)(v6 + 96) = 1;
  }
  *v5 += 104;
  unint64_t v9 = *((unsigned int *)v5 + 11);
  if (v9 != *((_DWORD *)v5 + 10))
  {
    uint64_t v16 = (void *)(v5[4] + 8 * v9);
LABEL_19:
    *uint64_t v16 = v6;
    *((_DWORD *)v5 + 11) = v9 + 1;
    return (void *)v6;
  }
  unint64_t v10 = v9 + (v9 >> 2);
  if (v10 >= 0x10) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = 16;
  }
  if (v11 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!(v12 >> 29))
  {
    unsigned int v13 = (void *)v5[4];
    uint64_t v14 = (void *)WTF::fastMalloc((WTF *)(8 * v12));
    *((_DWORD *)v5 + 10) = v12;
    v5[4] = v14;
    memcpy(v14, v13, 8 * v9);
    if (v13)
    {
      if ((void *)v5[4] == v13)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v13, v15);
    }
    unint64_t v9 = *((unsigned int *)v5 + 11);
    uint64_t v16 = (void *)(v5[4] + 8 * v9);
    goto LABEL_19;
  }
  __break(0xC471u);
  return this;
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 8)
  {
    int v23 = *(_DWORD *)(a2 + 56);
    int v26 = 1;
    WGSL::toString();
    WGSL::toString();
    v28[0] = (unint64_t)"Expected a ";
    v28[1] = 12;
    v27[0] = ", but got a ";
    v27[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(v28, (uint64_t *)&v21, (uint64_t)v27, (uint64_t *)&v20, &v22);
    if (!v22)
    {
      __break(0xC471u);
LABEL_31:
      JUMPOUT(0x1825A8130);
    }
    uint64_t v15 = v20;
    unsigned int v20 = 0;
    if (v15)
    {
      if (*v15 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t v16 = v21;
        unsigned int v21 = 0;
        if (!v16)
        {
LABEL_27:
          unint64_t v18 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v22;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v18;
          uint64_t v17 = 1;
          *(_DWORD *)(a1 + 32) = 1;
          return ((uint64_t (*)(unint64_t *, int *))off_1ECABDF90[v17])(v28, &v23);
        }
LABEL_24:
        if (*v16 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v16 -= 2;
        }
        goto LABEL_27;
      }
      *v15 -= 2;
    }
    uint64_t v16 = v21;
    unsigned int v21 = 0;
    if (!v16) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  int v23 = 8;
  long long v24 = *(_OWORD *)(a2 + 60);
  uint64_t v6 = *(_DWORD **)(a2 + 80);
  if (v6) {
    *v6 += 2;
  }
  unsigned int v25 = v6;
  int v26 = 0;
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v8;
    if (v7 <= v8)
    {
      __break(0xC471u);
      goto LABEL_31;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = v10 + 32 * v8;
    unsigned int v12 = *(_DWORD *)v11;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v11;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v11 + 4);
    unsigned int v13 = *(_DWORD *)v11;
    if (v13 > 8) {
      goto LABEL_6;
    }
    if (((1 << v13) & 0x38) != 0)
    {
      uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
LABEL_15:
      *(void *)(a2 + 80) = v14;
      goto LABEL_6;
    }
    if (((1 << v13) & 0xC4) != 0)
    {
      *(void *)(a2 + 80) = *(void *)(v10 + 32 * v8 + 24);
      goto LABEL_6;
    }
    if (v13 == 8)
    {
      *(void *)(a2 + 80) = 0;
      uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
      if (v14) {
        *v14 += 2;
      }
      goto LABEL_15;
    }
LABEL_6:
    int v9 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v9;
    ++v8;
  }
  while (v12 == 82);
  uint64_t v17 = 0;
  unsigned int v25 = 0;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5 | ((unint64_t)(v9 - v5) << 32);
  *(void *)a1 = off_1ECABC030;
  *(void *)(a1 + 24) = v6;
  *(_DWORD *)(a1 + 32) = 0;
  return ((uint64_t (*)(unint64_t *, int *))off_1ECABDF90[v17])(v28, &v23);
}

uint64_t std::experimental::fundamentals_v3::expected<WGSL::AST::Diagnostic,WGSL::CompilationMessage>::expected(uint64_t result, uint64_t a2)
{
  *(unsigned char *)__n128 result = *(unsigned char *)a2;
  *(void *)(result + 8) = &unk_1ECABC008;
  *(_OWORD *)(result + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(result + 8) = off_1ECABC030;
  uint64_t v2 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  *(void *)(result + 32) = v2;
  *(unsigned char *)(result + 72) = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    *(void *)(result + 40) = &unk_1ECABC008;
    *(_OWORD *)(result + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(result + 40) = off_1ECABC030;
    uint64_t v3 = *(void *)(a2 + 64);
    *(void *)(a2 + 64) = 0;
    *(void *)(result + 64) = v3;
    *(unsigned char *)(result + 72) = 1;
  }
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void WGSL::AST::Diagnostic::~Diagnostic(WGSL::AST::Diagnostic *this)
{
  if (!*((unsigned char *)this + 72)
    || (*((void *)this + 5) = off_1ECABC030, uint64_t v2 = (_DWORD *)*((void *)this + 8), *((void *)this + 8) = 0, !v2))
  {
LABEL_5:
    *((void *)this + 1) = off_1ECABC030;
    uint64_t v3 = (_DWORD *)*((void *)this + 4);
    *((void *)this + 4) = 0;
    if (!v3) {
      return;
    }
    goto LABEL_6;
  }
  if (*v2 != 2)
  {
    *v2 -= 2;
    goto LABEL_5;
  }
  WTF::StringImpl::destroy();
  *((void *)this + 1) = off_1ECABC030;
  uint64_t v3 = (_DWORD *)*((void *)this + 4);
  *((void *)this + 4) = 0;
  if (!v3) {
    return;
  }
LABEL_6:
  if (*v3 == 2) {
    WTF::StringImpl::destroy();
  }
  else {
    *v3 -= 2;
  }
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL3AST10IdentifierENS8_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, void *a2)
{
  *a2 = off_1ECABC030;
  __n128 result = (_DWORD *)a2[3];
  a2[3] = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL3AST10IdentifierENS8_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _DWORD **a2)
{
  __n128 result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

unint64_t *WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>@<X0>(unint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  unint64_t v6 = result[1];
  BOOL v7 = v6 != 0;
  unint64_t v8 = v6 - 1;
  if (v7) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = 0;
  }
  if (v9 >> 31
    || ((v10 = *(void *)(a3 + 8), BOOL v7 = v10 != 0, v11 = v10 - 1, v7) ? (v12 = v11) : (v12 = 0), v12 >> 31))
  {
    __break(0xC471u);
    JUMPOUT(0x1825A8440);
  }
  uint64_t v13 = *a2;
  uint64_t v14 = *a4;
  if (*a2)
  {
    int v15 = *(_DWORD *)(v13 + 4);
    if (v14) {
      goto LABEL_11;
    }
  }
  else
  {
    int v15 = 0;
    if (v14)
    {
LABEL_11:
      int v16 = *(_DWORD *)(v14 + 4);
      if (((v16 | v12) & 0x80000000) != 0) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
  }
  int v16 = 0;
  if ((v12 & 0x80000000) != 0)
  {
LABEL_23:
    *a5 = 0;
    return result;
  }
LABEL_15:
  BOOL v17 = __OFADD__(v12, v16);
  int v18 = v12 + v16;
  char v19 = v17;
  if (v15 < 0) {
    goto LABEL_23;
  }
  if (v19) {
    goto LABEL_23;
  }
  BOOL v17 = __OFADD__(v15, v18);
  int v20 = v15 + v18;
  if (v17) {
    goto LABEL_23;
  }
  BOOL v17 = __OFADD__(v9, v20);
  uint64_t v21 = (v9 + v20);
  if (v17) {
    goto LABEL_23;
  }
  unint64_t v22 = *result;
  int v23 = *(__int8 **)a3;
  if (v13)
  {
    unsigned int v24 = *(_DWORD *)(v13 + 16);
    int v25 = (v24 >> 2) & 1;
    if (!v14 || (v24 & 4) == 0) {
      goto LABEL_30;
    }
  }
  else if (!v14)
  {
    int v25 = 1;
    uint64_t v26 = v21;
    unint64_t v27 = v22;
    return (unint64_t *)WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(v26, v25, v27, v9, v13, v23, v12, v14, a5);
  }
  int v25 = (*(unsigned __int8 *)(v14 + 16) >> 2) & 1;
LABEL_30:
  uint64_t v26 = v21;
  unint64_t v27 = v22;
  return (unint64_t *)WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(v26, v25, v27, v9, v13, v23, v12, v14, a5);
}

uint64_t WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>@<X0>(uint64_t result@<X0>, int a2@<W1>, unint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, __int8 *a6@<X5>, unsigned int a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  int v15 = result;
  if (!a2)
  {
    if (!result) {
      goto LABEL_9;
    }
    if (result > 0x7FFFFFEF) {
      goto LABEL_8;
    }
    __n128 result = WTF::tryFastCompactMalloc((WTF *)(2 * result + 20));
    uint64_t v17 = v45;
    if (!v45) {
      goto LABEL_27;
    }
    unint64_t v18 = v45 + 20;
    *(_DWORD *)uint64_t v45 = 2;
    *(_DWORD *)(v45 + 4) = v15;
    *(void *)(v45 + 8) = v45 + 20;
    *(_DWORD *)(v45 + 16) = 0;
    char v19 = (char *)(v45 + 20 + 2 * a4);
    if ((a4 & 0xFFFFFFC0) != 0)
    {
      unint64_t v20 = v18 + 2 * (a4 & 0xFFFFFFC0);
      long long v21 = 0uLL;
      do
      {
        v46.val[0] = *(int8x16_t *)a3;
        int8x16_t v22 = *(int8x16_t *)(a3 + 16);
        v47.val[0] = *(int8x16_t *)(a3 + 32);
        long long v23 = *(_OWORD *)(a3 + 48);
        a3 += 64;
        long long v24 = v23;
        v47.val[1] = 0uLL;
        v48.val[0] = v22;
        v46.val[1] = 0uLL;
        int v25 = (char *)v18;
        vst2q_s8(v25, v46);
        v25 += 32;
        v48.val[1] = 0uLL;
        vst2q_s8(v25, v48);
        uint64_t v26 = (char *)(v18 + 64);
        vst2q_s8(v26, v47);
        unint64_t v27 = (char *)(v18 + 96);
        vst2q_s8(v27, *(int8x16x2_t *)(&v21 - 1));
        v18 += 128;
      }
      while (v18 != v20);
      unint64_t v18 = v20;
    }
    if ((char *)v18 == v19)
    {
LABEL_26:
      __n128 result = (uint64_t)WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(v19, a5, (unint64_t)a6, a7, a8);
      goto LABEL_27;
    }
    unint64_t v28 = v45 + 2 * a4 - v18 + 18;
    if (v28 < 0xE
      || (v18 < a3 + (v28 >> 1) + 1 ? (BOOL v29 = a3 >= (v28 & 0xFFFFFFFFFFFFFFFELL) + v18 + 2) : (BOOL v29 = 1), !v29))
    {
      int v32 = (char *)v18;
      int v33 = (unsigned __int8 *)a3;
      goto LABEL_25;
    }
    uint64_t v30 = (v28 >> 1) + 1;
    if (v28 >= 0x3E)
    {
      unint64_t v31 = v30 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v35 = (uint8x8_t *)(a3 + 16);
      long long v36 = (uint16x8_t *)(v18 + 32);
      unint64_t v37 = v30 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v38 = *(uint8x16_t *)v35[-2].i8;
        uint16x8_t v39 = vmovl_u8(*v35);
        uint16x8_t v40 = vmovl_high_u8(*(uint8x16_t *)v35->i8);
        v36[-2] = vmovl_u8(*(uint8x8_t *)v38.i8);
        v36[-1] = vmovl_high_u8(v38);
        *long long v36 = v39;
        v36[1] = v40;
        v36 += 4;
        v35 += 4;
        v37 -= 32;
      }
      while (v37);
      if (v30 == v31) {
        goto LABEL_26;
      }
      if ((v30 & 0x18) == 0)
      {
        int v33 = (unsigned __int8 *)(a3 + v31);
        int v32 = (char *)(v18 + 2 * v31);
        do
        {
LABEL_25:
          __int16 v34 = *v33++;
          *(_WORD *)int v32 = v34;
          v32 += 2;
        }
        while (v32 != v19);
        goto LABEL_26;
      }
    }
    else
    {
      unint64_t v31 = 0;
    }
    int v32 = (char *)(v18 + 2 * (v30 & 0xFFFFFFFFFFFFFFF8));
    int v33 = (unsigned __int8 *)(a3 + (v30 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v41 = (uint8x8_t *)(a3 + v31);
    unsigned int v42 = (uint16x8_t *)(v18 + 2 * v31);
    unint64_t v43 = v31 - (v30 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v44 = *v41++;
      *v42++ = vmovl_u8(v44);
      v43 += 8;
    }
    while (v43);
    if (v30 == (v30 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (!result)
  {
LABEL_9:
    uint64_t v17 = MEMORY[0x1E4F30960];
    *MEMORY[0x1E4F30960] += 2;
    goto LABEL_27;
  }
  if ((result & 0x80000000) != 0)
  {
LABEL_8:
    uint64_t v17 = 0;
    goto LABEL_27;
  }
  __n128 result = WTF::tryFastCompactMalloc((WTF *)(result + 20));
  uint64_t v17 = v45;
  if (v45)
  {
    *(_DWORD *)uint64_t v45 = 2;
    *(_DWORD *)(v45 + 4) = v15;
    *(void *)(v45 + 8) = v45 + 20;
    *(_DWORD *)(v45 + 16) = 4;
    __n128 result = (uint64_t)WTF::stringTypeAdapterAccumulator<unsigned char,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>((int8x16_t *)(v45 + 20), (__int8 *)a3, a4, a5, a6, a7, a8);
  }
LABEL_27:
  *a9 = v17;
  return result;
}

int8x16_t *WTF::stringTypeAdapterAccumulator<unsigned char,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(int8x16_t *__dst, __int8 *a2, unsigned int a3, uint64_t a4, __int8 *__src, unsigned int a6, uint64_t a7)
{
  unint64_t v12 = __dst;
  if (!a3)
  {
LABEL_4:
    uint64_t v13 = a3;
    uint64_t v14 = &__dst->i8[a3];
    if (a4) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  if (a3 == 1)
  {
    __dst->i8[0] = *a2;
    goto LABEL_4;
  }
  __dst = (int8x16_t *)memcpy(__dst, a2, a3);
  uint64_t v13 = a3;
  uint64_t v14 = &v12->i8[a3];
  if (a4)
  {
LABEL_5:
    int v15 = *(int8x16_t **)(a4 + 8);
    size_t v16 = *(unsigned int *)(a4 + 4);
    if ((*(unsigned char *)(a4 + 16) & 4) != 0)
    {
      if (v16)
      {
        if (v16 == 1) {
          __int8 *v14 = v15->i8[0];
        }
        else {
          __dst = (int8x16_t *)memcpy(v14, v15, v16);
        }
      }
LABEL_30:
      uint64_t v21 = *(unsigned int *)(a4 + 4);
      int8x16_t v22 = &v14[v21];
      if (!a6) {
        goto LABEL_33;
      }
      goto LABEL_31;
    }
    uint64_t v17 = &v14[v16];
    if (v16 < 0x10)
    {
      unint64_t v18 = (unint64_t)v14;
      if (v14 == v17) {
        goto LABEL_30;
      }
    }
    else
    {
      unint64_t v18 = (unint64_t)&v14[v16 & 0xFFFFFFF0];
      char v19 = (unsigned long long *)v14;
      do
      {
        unsigned long long v20 = (unsigned __int128)vld2q_s8(v15->i8);
        v15 += 2;
        *v19++ = v20;
      }
      while (v19 != (unsigned long long *)v18);
      if ((__int8 *)v18 == v17) {
        goto LABEL_30;
      }
    }
    long long v23 = (int8x16_t *)((char *)v12 + v16 + v13);
    unint64_t v24 = (unint64_t)v23 - v18;
    if ((unint64_t)v23 - v18 < 8
      || (v18 < (unint64_t)v15 + 2 * v24 ? (BOOL v25 = v15 >= v23) : (BOOL v25 = 1), !v25))
    {
      unint64_t v27 = (__int8 *)v18;
      unint64_t v28 = v15;
      goto LABEL_27;
    }
    if (v24 >= 0x20)
    {
      unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v42 = v15 + 2;
      unint64_t v43 = (int8x16_t *)(v18 + 16);
      unint64_t v44 = v24 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v46 = v42[-2];
        int8x16_t v45 = v42[-1];
        int8x16_t v48 = *v42;
        int8x16_t v47 = v42[1];
        v42 += 4;
        v43[-1] = vuzp1q_s8(v46, v45);
        int8x16_t *v43 = vuzp1q_s8(v48, v47);
        v43 += 2;
        v44 -= 32;
      }
      while (v44);
      if (v24 == v26) {
        goto LABEL_30;
      }
      if ((v24 & 0x18) == 0)
      {
        unint64_t v28 = (int8x16_t *)((char *)v15 + 2 * v26);
        unint64_t v27 = (__int8 *)(v18 + v26);
        goto LABEL_27;
      }
    }
    else
    {
      unint64_t v26 = 0;
    }
    unint64_t v27 = (__int8 *)(v18 + (v24 & 0xFFFFFFFFFFFFFFF8));
    unint64_t v28 = (int8x16_t *)((char *)v15 + 2 * (v24 & 0xFFFFFFFFFFFFFFF8));
    unsigned int v49 = (int16x8_t *)((char *)v15 + 2 * v26);
    uint64_t v50 = (int8x8_t *)(v18 + v26);
    unint64_t v51 = v26 - (v24 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v52 = *v49++;
      *v50++ = vmovn_s16(v52);
      v51 += 8;
    }
    while (v51);
    if (v24 == (v24 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_30;
    }
    do
    {
LABEL_27:
      char v29 = v28->i8[0];
      unint64_t v28 = (int8x16_t *)((char *)v28 + 2);
      *v27++ = v29;
    }
    while (v27 != v17);
    goto LABEL_30;
  }
LABEL_12:
  uint64_t v21 = 0;
  int8x16_t v22 = v14;
  if (!a6)
  {
LABEL_33:
    if (!a7) {
      return __dst;
    }
    goto LABEL_36;
  }
LABEL_31:
  if (a6 == 1)
  {
    *int8x16_t v22 = *__src;
    goto LABEL_33;
  }
  __dst = (int8x16_t *)memcpy(v22, __src, a6);
  if (!a7) {
    return __dst;
  }
LABEL_36:
  __dst = (int8x16_t *)&v22[a6];
  uint64_t v30 = *(int8x16_t **)(a7 + 8);
  size_t v31 = *(unsigned int *)(a7 + 4);
  if ((*(unsigned char *)(a7 + 16) & 4) != 0)
  {
    if (v31)
    {
      if (v31 == 1)
      {
        __dst->i8[0] = v30->i8[0];
      }
      else
      {
        return (int8x16_t *)memcpy(__dst, v30, v31);
      }
    }
  }
  else
  {
    int v32 = (int8x16_t *)((char *)__dst + v31);
    if (v31 >= 0x10)
    {
      int v33 = (int8x16_t *)((char *)__dst + (v31 & 0xFFFFFFF0));
      do
      {
        unsigned long long v34 = (unsigned __int128)vld2q_s8(v30->i8);
        v30 += 2;
        *__dst++ = (int8x16_t)v34;
      }
      while (__dst != v33);
      __dst = v33;
    }
    if (__dst != v32)
    {
      unint64_t v35 = &v12->i8[v21 + v31 + v13 + a6] - (__int8 *)__dst;
      if (v35 < 8
        || ((long long v36 = (int8x16_t *)((char *)v12 + v21 + v31 + a6 + v13),
             __dst < (int8x16_t *)((char *)v30 + 2 * ((char *)v36 - (char *)__dst)))
          ? (BOOL v37 = v30 >= v36)
          : (BOOL v37 = 1),
            !v37))
      {
        uint16x8_t v39 = __dst;
        uint16x8_t v40 = v30;
        goto LABEL_54;
      }
      if (v35 >= 0x20)
      {
        unint64_t v38 = v35 & 0xFFFFFFFFFFFFFFE0;
        char v53 = v30 + 2;
        unsigned int v54 = __dst + 1;
        unint64_t v55 = v35 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          int8x16_t v57 = v53[-2];
          int8x16_t v56 = v53[-1];
          int8x16_t v59 = *v53;
          int8x16_t v58 = v53[1];
          v53 += 4;
          v54[-1] = vuzp1q_s8(v57, v56);
          *unsigned int v54 = vuzp1q_s8(v59, v58);
          v54 += 2;
          v55 -= 32;
        }
        while (v55);
        if (v35 == v38) {
          return __dst;
        }
        if ((v35 & 0x18) == 0)
        {
          uint16x8_t v40 = (int8x16_t *)((char *)v30 + 2 * v38);
          uint16x8_t v39 = (int8x16_t *)((char *)__dst + v38);
          do
          {
LABEL_54:
            __int8 v41 = v40->i8[0];
            uint16x8_t v40 = (int8x16_t *)((char *)v40 + 2);
            v39->i8[0] = v41;
            uint16x8_t v39 = (int8x16_t *)((char *)v39 + 1);
          }
          while (v39 != v32);
          return __dst;
        }
      }
      else
      {
        unint64_t v38 = 0;
      }
      uint16x8_t v39 = (int8x16_t *)((char *)__dst + (v35 & 0xFFFFFFFFFFFFFFF8));
      uint16x8_t v40 = (int8x16_t *)((char *)v30 + 2 * (v35 & 0xFFFFFFFFFFFFFFF8));
      uint64_t v60 = (int16x8_t *)((char *)v30 + 2 * v38);
      uint64_t v61 = (int8x8_t *)&__dst->i8[v38];
      unint64_t v62 = v38 - (v35 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        int16x8_t v63 = *v60++;
        *v61++ = vmovn_s16(v63);
        v62 += 8;
      }
      while (v62);
      if (v35 != (v35 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_54;
      }
    }
  }
  return __dst;
}

char *WTF::stringTypeAdapterAccumulator<char16_t,WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(char *__dst, uint64_t a2, unint64_t a3, unsigned int a4, uint64_t a5)
{
  if (!a2)
  {
    uint64_t v12 = 0;
    uint64_t v13 = __dst;
    __n128 result = &__dst[2 * a4];
    uint64_t v15 = a4 & 0xFFFFFFC0;
    if ((a4 & 0xFFFFFFC0) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  uint64_t v10 = *(int8x16_t **)(a2 + 8);
  uint64_t v11 = *(unsigned int *)(a2 + 4);
  if ((*(unsigned char *)(a2 + 16) & 4) != 0)
  {
    size_t v16 = &__dst[2 * v11];
    if (v11 < 0x40)
    {
      uint64_t v17 = __dst;
      if (__dst == v16) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v17 = &__dst[2 * (v11 & 0xFFFFFFC0)];
      long long v18 = 0uLL;
      char v19 = __dst;
      do
      {
        v96.val[0] = *v10;
        int8x16_t v20 = v10[1];
        v99.val[0] = v10[2];
        int8x16_t v21 = v10[3];
        v10 += 4;
        int8x16_t v22 = v21;
        v99.val[1] = 0uLL;
        v102.val[0] = v20;
        v96.val[1] = 0uLL;
        long long v23 = v19;
        vst2q_s8(v23, v96);
        v23 += 32;
        v102.val[1] = 0uLL;
        vst2q_s8(v23, v102);
        unint64_t v24 = v19 + 64;
        vst2q_s8(v24, v99);
        BOOL v25 = v19 + 96;
        vst2q_s8(v25, *(int8x16x2_t *)(&v18 - 1));
        v19 += 128;
      }
      while (v19 != v17);
      if (v17 == v16) {
        goto LABEL_26;
      }
    }
    unint64_t v26 = &__dst[2 * v11] - v17 - 2;
    if (v26 < 0xE
      || (v17 < &v10->i8[(v26 >> 1) + 1]
        ? (BOOL v27 = v10 >= (int8x16_t *)&v17[(v26 & 0xFFFFFFFFFFFFFFFELL) + 2])
        : (BOOL v27 = 1),
          !v27))
    {
      uint64_t v30 = v17;
      size_t v31 = v10;
      goto LABEL_23;
    }
    uint64_t v28 = (v26 >> 1) + 1;
    if (v26 >= 0x3E)
    {
      unint64_t v29 = v28 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v75 = (uint8x8_t *)&v10[1];
      int v76 = (uint16x8_t *)(v17 + 32);
      unint64_t v77 = v28 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v78 = *(uint8x16_t *)v75[-2].i8;
        uint16x8_t v79 = vmovl_u8(*v75);
        uint16x8_t v80 = vmovl_high_u8(*(uint8x16_t *)v75->i8);
        v76[-2] = vmovl_u8(*(uint8x8_t *)v78.i8);
        v76[-1] = vmovl_high_u8(v78);
        *int v76 = v79;
        v76[1] = v80;
        v76 += 4;
        v75 += 4;
        v77 -= 32;
      }
      while (v77);
      if (v28 == v29) {
        goto LABEL_26;
      }
      if ((v28 & 0x18) == 0)
      {
        size_t v31 = (int8x16_t *)((char *)v10 + v29);
        uint64_t v30 = &v17[2 * v29];
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v29 = 0;
    }
    uint64_t v30 = &v17[2 * (v28 & 0xFFFFFFFFFFFFFFF8)];
    size_t v31 = (int8x16_t *)((char *)v10 + (v28 & 0xFFFFFFFFFFFFFFF8));
    uint64_t v81 = (uint8x8_t *)&v10->i8[v29];
    unsigned int v82 = (uint16x8_t *)&v17[2 * v29];
    unint64_t v83 = v29 - (v28 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v84 = *v81++;
      *v82++ = vmovl_u8(v84);
      v83 += 8;
    }
    while (v83);
    if (v28 == (v28 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_26;
    }
    do
    {
LABEL_23:
      __int16 v32 = v31->u8[0];
      size_t v31 = (int8x16_t *)((char *)v31 + 1);
      *(_WORD *)uint64_t v30 = v32;
      v30 += 2;
    }
    while (v30 != v16);
    goto LABEL_26;
  }
  if (v11)
  {
    if (v11 == 1) {
      *(_WORD *)__dst = v10->i16[0];
    }
    else {
      memcpy(__dst, v10, 2 * v11);
    }
  }
LABEL_26:
  uint64_t v12 = *(unsigned int *)(a2 + 4);
  uint64_t v13 = &__dst[2 * v12];
  __n128 result = &v13[2 * a4];
  uint64_t v15 = a4 & 0xFFFFFFC0;
  if ((a4 & 0xFFFFFFC0) == 0) {
    goto LABEL_30;
  }
LABEL_27:
  int v33 = &v13[2 * v15];
  long long v34 = 0uLL;
  do
  {
    v97.val[0] = *(int8x16_t *)a3;
    int8x16_t v35 = *(int8x16_t *)(a3 + 16);
    v100.val[0] = *(int8x16_t *)(a3 + 32);
    long long v36 = *(_OWORD *)(a3 + 48);
    a3 += 64;
    long long v37 = v36;
    v100.val[1] = 0uLL;
    v103.val[0] = v35;
    v97.val[1] = 0uLL;
    unint64_t v38 = v13;
    vst2q_s8(v38, v97);
    v38 += 32;
    v103.val[1] = 0uLL;
    vst2q_s8(v38, v103);
    uint16x8_t v39 = v13 + 64;
    vst2q_s8(v39, v100);
    uint16x8_t v40 = v13 + 96;
    vst2q_s8(v40, *(int8x16x2_t *)(&v34 - 1));
    v13 += 128;
  }
  while (v13 != v33);
  uint64_t v13 = v33;
LABEL_30:
  if (v13 == result) {
    goto LABEL_36;
  }
  unint64_t v41 = &__dst[2 * v12 + 2 * a4] - v13 - 2;
  if (v41 < 0xE
    || (unint64_t)v13 < a3 + (v41 >> 1) + 1 && a3 < (unint64_t)&v13[(v41 & 0xFFFFFFFFFFFFFFFELL) + 2])
  {
    unsigned int v42 = v13;
    unint64_t v43 = (unsigned __int8 *)a3;
    goto LABEL_35;
  }
  uint64_t v60 = (v41 >> 1) + 1;
  if (v41 >= 0x3E)
  {
    unint64_t v61 = v60 & 0xFFFFFFFFFFFFFFE0;
    uint64_t v65 = (uint8x8_t *)(a3 + 16);
    int v66 = (uint16x8_t *)(v13 + 32);
    unint64_t v67 = v60 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      uint8x16_t v68 = *(uint8x16_t *)v65[-2].i8;
      uint16x8_t v69 = vmovl_u8(*v65);
      uint16x8_t v70 = vmovl_high_u8(*(uint8x16_t *)v65->i8);
      v66[-2] = vmovl_u8(*(uint8x8_t *)v68.i8);
      v66[-1] = vmovl_high_u8(v68);
      uint16x8_t *v66 = v69;
      v66[1] = v70;
      v66 += 4;
      v65 += 4;
      v67 -= 32;
    }
    while (v67);
    if (v60 == v61) {
      goto LABEL_36;
    }
    if ((v60 & 0x18) == 0)
    {
      unint64_t v43 = (unsigned __int8 *)(a3 + v61);
      unsigned int v42 = &v13[2 * v61];
      do
      {
LABEL_35:
        __int16 v44 = *v43++;
        *(_WORD *)unsigned int v42 = v44;
        v42 += 2;
      }
      while (v42 != result);
      goto LABEL_36;
    }
  }
  else
  {
    unint64_t v61 = 0;
  }
  unsigned int v42 = &v13[2 * (v60 & 0xFFFFFFFFFFFFFFF8)];
  unint64_t v43 = (unsigned __int8 *)(a3 + (v60 & 0xFFFFFFFFFFFFFFF8));
  unint64_t v71 = (uint8x8_t *)(a3 + v61);
  uint64_t v72 = (uint16x8_t *)&v13[2 * v61];
  unint64_t v73 = v61 - (v60 & 0xFFFFFFFFFFFFFFF8);
  do
  {
    uint8x8_t v74 = *v71++;
    *v72++ = vmovl_u8(v74);
    v73 += 8;
  }
  while (v73);
  if (v60 != (v60 & 0xFFFFFFFFFFFFFFF8)) {
    goto LABEL_35;
  }
LABEL_36:
  if (!a5) {
    return result;
  }
  int8x16_t v45 = *(int8x16_t **)(a5 + 8);
  uint64_t v46 = *(unsigned int *)(a5 + 4);
  if ((*(unsigned char *)(a5 + 16) & 4) == 0)
  {
    if (v46)
    {
      if (v46 == 1)
      {
        *(_WORD *)__n128 result = v45->i16[0];
      }
      else
      {
        return (char *)memcpy(result, v45, 2 * v46);
      }
    }
    return result;
  }
  int8x16_t v47 = &result[2 * v46];
  if (v46 >= 0x40)
  {
    int8x16_t v48 = &result[2 * (v46 & 0xFFFFFFC0)];
    long long v49 = 0uLL;
    do
    {
      v98.val[0] = *v45;
      int8x16_t v50 = v45[1];
      v101.val[0] = v45[2];
      int8x16_t v51 = v45[3];
      v45 += 4;
      int8x16_t v52 = v51;
      v101.val[1] = 0uLL;
      v104.val[0] = v50;
      v98.val[1] = 0uLL;
      char v53 = result;
      vst2q_s8(v53, v98);
      v53 += 32;
      v104.val[1] = 0uLL;
      vst2q_s8(v53, v104);
      unsigned int v54 = result + 64;
      vst2q_s8(v54, v101);
      unint64_t v55 = result + 96;
      vst2q_s8(v55, *(int8x16x2_t *)(&v49 - 1));
      result += 128;
    }
    while (result != v48);
    __n128 result = v48;
  }
  if (result != v47)
  {
    unint64_t v56 = &__dst[2 * v12 + 2 * v46 + 2 * a4] - result - 2;
    if (v56 < 0xE
      || (result < &v45->i8[(v56 >> 1) + 1]
        ? (BOOL v57 = v45 >= (int8x16_t *)&result[(v56 & 0xFFFFFFFFFFFFFFFELL) + 2])
        : (BOOL v57 = 1),
          !v57))
    {
      unint64_t v62 = result;
      int16x8_t v63 = v45;
      goto LABEL_57;
    }
    uint64_t v58 = (v56 >> 1) + 1;
    if (v56 >= 0x3E)
    {
      unint64_t v59 = v58 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v85 = (uint8x8_t *)&v45[1];
      uint64_t v86 = (uint16x8_t *)(result + 32);
      unint64_t v87 = v58 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v88 = *(uint8x16_t *)v85[-2].i8;
        uint16x8_t v89 = vmovl_u8(*v85);
        uint16x8_t v90 = vmovl_high_u8(*(uint8x16_t *)v85->i8);
        v86[-2] = vmovl_u8(*(uint8x8_t *)v88.i8);
        v86[-1] = vmovl_high_u8(v88);
        uint16x8_t *v86 = v89;
        v86[1] = v90;
        v86 += 4;
        v85 += 4;
        v87 -= 32;
      }
      while (v87);
      if (v58 == v59) {
        return result;
      }
      if ((v58 & 0x18) == 0)
      {
        int16x8_t v63 = (int8x16_t *)((char *)v45 + v59);
        unint64_t v62 = &result[2 * v59];
        goto LABEL_57;
      }
    }
    else
    {
      unint64_t v59 = 0;
    }
    unint64_t v62 = &result[2 * (v58 & 0xFFFFFFFFFFFFFFF8)];
    int16x8_t v63 = (int8x16_t *)((char *)v45 + (v58 & 0xFFFFFFFFFFFFFFF8));
    char v91 = (uint8x8_t *)&v45->i8[v59];
    uint64_t v92 = (uint16x8_t *)&result[2 * v59];
    unint64_t v93 = v59 - (v58 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v94 = *v91++;
      *v92++ = vmovl_u8(v94);
      v93 += 8;
    }
    while (v93);
    if (v58 == (v58 & 0xFFFFFFFFFFFFFFF8)) {
      return result;
    }
    do
    {
LABEL_57:
      __int16 v64 = v63->u8[0];
      int16x8_t v63 = (int8x16_t *)((char *)v63 + 1);
      *(_WORD *)unint64_t v62 = v64;
      v62 += 2;
    }
    while (v62 != v47);
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL5TokenENS8_9TokenTypeEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 8)
  {
    uint64_t v2 = *(_DWORD **)(a2 + 24);
    *(void *)(a2 + 24) = 0;
    if (v2)
    {
      if (*v2 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v2 -= 2;
      }
    }
  }
}

void WGSL::AST::DiagnosticDirective::~DiagnosticDirective(WGSL::AST::DiagnosticDirective *this)
{
  if (!*((unsigned char *)this + 96)
    || (*((void *)this + 8) = off_1ECABC030, uint64_t v2 = (_DWORD *)*((void *)this + 11), *((void *)this + 11) = 0, !v2))
  {
LABEL_5:
    *((void *)this + 4) = off_1ECABC030;
    uint64_t v3 = (_DWORD *)*((void *)this + 7);
    *((void *)this + 7) = 0;
    if (!v3) {
      return;
    }
    goto LABEL_6;
  }
  if (*v2 != 2)
  {
    *v2 -= 2;
    goto LABEL_5;
  }
  WTF::StringImpl::destroy();
  *((void *)this + 4) = off_1ECABC030;
  uint64_t v3 = (_DWORD *)*((void *)this + 7);
  *((void *)this + 7) = 0;
  if (!v3) {
    return;
  }
LABEL_6:
  if (*v3 == 2) {
    WTF::StringImpl::destroy();
  }
  else {
    *v3 -= 2;
  }
}

{
  _DWORD *v2;
  _DWORD *v3;
  uint64_t vars8;

  if (*((unsigned char *)this + 96))
  {
    *((void *)this + 8) = off_1ECABC030;
    uint64_t v2 = (_DWORD *)*((void *)this + 11);
    *((void *)this + 11) = 0;
    if (v2)
    {
      if (*v2 == 2)
      {
        WTF::StringImpl::destroy();
        *((void *)this + 4) = off_1ECABC030;
        uint64_t v3 = (_DWORD *)*((void *)this + 7);
        *((void *)this + 7) = 0;
        if (v3)
        {
LABEL_6:
          if (*v3 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v3 -= 2;
          }
        }
LABEL_9:
        JUMPOUT(0x18530AFF0);
      }
      *v2 -= 2;
    }
  }
  *((void *)this + 4) = off_1ECABC030;
  uint64_t v3 = (_DWORD *)*((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v3) {
    goto LABEL_6;
  }
  goto LABEL_9;
}

uint64_t WGSL::AST::DiagnosticDirective::kind(WGSL::AST::DiagnosticDirective *this)
{
  return 17;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL3AST10DiagnosticENS8_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 72)
    || (*(void *)(a2 + 40) = off_1ECABC030, uint64_t v3 = *(_DWORD **)(a2 + 64), *(void *)(a2 + 64) = 0, !v3))
  {
LABEL_5:
    *(void *)(a2 + 8) = off_1ECABC030;
    __n128 result = *(_DWORD **)(a2 + 32);
    *(void *)(a2 + 32) = 0;
    if (!result) {
      return result;
    }
    goto LABEL_6;
  }
  if (*v3 != 2)
  {
    *v3 -= 2;
    goto LABEL_5;
  }
  WTF::StringImpl::destroy();
  *(void *)(a2 + 8) = off_1ECABC030;
  __n128 result = *(_DWORD **)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  if (!result) {
    return result;
  }
LABEL_6:
  if (*result == 2)
  {
    return (_DWORD *)WTF::StringImpl::destroy();
  }
  else
  {
    *result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL3AST10DiagnosticENS8_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _DWORD **a2)
{
  __n128 result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

_DWORD *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseConstAssert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 14)
  {
    WGSL::toString();
    WGSL::toString();
    int8x16_t v35 = "Expected a ";
    *(void *)&long long v36 = 12;
    *(void *)&long long v41 = ", but got a ";
    *((void *)&v41 + 1) = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v35, (uint64_t *)&v39, (uint64_t)&v41, (uint64_t *)&v38, v40);
    if (!v40[0])
    {
      __break(0xC471u);
      JUMPOUT(0x1825A96F8);
    }
    uint64_t v15 = v38;
    unint64_t v38 = 0;
    if (v15)
    {
      if (*v15 == 2)
      {
        WTF::StringImpl::destroy();
        __n128 result = v39;
        uint16x8_t v39 = 0;
        if (!result)
        {
LABEL_42:
          unint64_t v27 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v40[0];
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v27;
          *(_DWORD *)(a1 + 24) = 1;
          return result;
        }
LABEL_39:
        if (*result == 2) {
          __n128 result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_42;
      }
      *v15 -= 2;
    }
    __n128 result = v39;
    uint16x8_t v39 = 0;
    if (!result) {
      goto LABEL_42;
    }
    goto LABEL_39;
  }
  unint64_t v6 = (_OWORD *)(a2 + 60);
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v8;
    if (v7 <= v8) {
      goto LABEL_59;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = v10 + 32 * v8;
    unsigned int v12 = *(_DWORD *)v11;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v11;
    *unint64_t v6 = *(_OWORD *)(v11 + 4);
    unsigned int v13 = *(_DWORD *)v11;
    if (v13 <= 8)
    {
      if (((1 << v13) & 0x38) != 0)
      {
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v14;
        goto LABEL_4;
      }
      if (((1 << v13) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v10 + 32 * v8 + 24);
        goto LABEL_4;
      }
      if (v13 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
        if (v14) {
          *v14 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v9 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v9;
    ++v8;
  }
  while (v12 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v35, a2);
  uint64_t v17 = v37;
  if (v37)
  {
    if (v37 == 1)
    {
      long long v18 = v35;
      if (v35) {
        *(_DWORD *)v35 += 2;
      }
      *(_OWORD *)(a1 + 8) = v36;
      *(void *)a1 = v18;
LABEL_56:
      *(_DWORD *)(a1 + 24) = 1;
      return (_DWORD *)((uint64_t (*)(long long *, const char **))off_1ECABE170[v17])(&v41, &v35);
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_59:
    __break(0xC471u);
LABEL_63:
    JUMPOUT(0x1825A96E8);
  }
  if (*(_DWORD *)(a2 + 56) != 73)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)&long long v41 = "Expected a ";
    *((void *)&v41 + 1) = 12;
    v40[0] = ", but got a ";
    v40[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v41, (uint64_t *)&v33, (uint64_t)v40, (uint64_t *)&v32, &v34);
    if (!v34)
    {
      __break(0xC471u);
      goto LABEL_63;
    }
    uint64_t v28 = v32;
    __int16 v32 = 0;
    if (v28)
    {
      if (*v28 == 2)
      {
        WTF::StringImpl::destroy();
        unint64_t v29 = v33;
        int v33 = 0;
        if (!v29)
        {
LABEL_55:
          unint64_t v31 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v34;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v31;
          goto LABEL_56;
        }
LABEL_52:
        if (*v29 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v29 -= 2;
        }
        goto LABEL_55;
      }
      *v28 -= 2;
    }
    unint64_t v29 = v33;
    int v33 = 0;
    if (!v29) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
  unsigned int v19 = *(_DWORD *)(a2 + 36);
  unsigned int v20 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v20;
    if (v19 <= v20)
    {
      __break(0xC471u);
      JUMPOUT(0x1825A96F0);
    }
    uint64_t v22 = *(void *)(a2 + 24);
    uint64_t v23 = v22 + 32 * v20;
    unsigned int v24 = *(_DWORD *)v23;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v23;
    *unint64_t v6 = *(_OWORD *)(v23 + 4);
    unsigned int v25 = *(_DWORD *)v23;
    if (v25 <= 8)
    {
      if (((1 << v25) & 0x38) != 0)
      {
        unint64_t v26 = *(_DWORD **)(v22 + 32 * v20 + 24);
LABEL_37:
        *(void *)(a2 + 80) = v26;
        goto LABEL_28;
      }
      if (((1 << v25) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v22 + 32 * v20 + 24);
        goto LABEL_28;
      }
      if (v25 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unint64_t v26 = *(_DWORD **)(v22 + 32 * v20 + 24);
        if (v26) {
          *v26 += 2;
        }
        goto LABEL_37;
      }
    }
LABEL_28:
    int v21 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v21;
    ++v20;
  }
  while (v24 == 82);
  uint64_t v30 = *(void **)(a2 + 8);
  *(void *)&long long v41 = v4;
  DWORD2(v41) = v5;
  HIDWORD(v41) = v21 - v5;
  __n128 result = WGSL::AST::Builder::construct<WGSL::AST::ConstAssert,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v30, &v41, &v35);
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 24) = 0;
  if (v17 != -1) {
    return (_DWORD *)((uint64_t (*)(long long *, const char **))off_1ECABE170[v17])(&v41, &v35);
  }
  return result;
}

void *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(void *result, uint64_t a2)
{
  uint64_t v3 = (WTF **)result;
  uint64_t v4 = 0;
  unsigned int v5 = 0;
  size_t v16 = 0;
  uint64_t v17 = 0;
  unint64_t v6 = result + 1;
  do
  {
    if (*(_DWORD *)(a2 + 56) != 40)
    {
      *uint64_t v3 = v4;
      *((_DWORD *)v3 + 2) = v17;
      *((_DWORD *)v3 + 3) = v5;
      *((_DWORD *)v3 + 6) = 0;
      return result;
    }
    __n128 result = WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttribute((uint64_t)&v13, a2);
    unsigned int v8 = v15;
    if (v15)
    {
      if (v15 != 1)
      {
        uint64_t v12 = std::__throw_bad_variant_access[abi:sn180100]();
        return (void *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableWithAttributes(v12);
      }
      int v9 = v13;
      if (v13) {
        *(_DWORD *)v13 += 2;
      }
      *unint64_t v6 = v14;
      *uint64_t v3 = v9;
      *((_DWORD *)v3 + 6) = 1;
      uint64_t v10 = v15;
      if (v15 != -1) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v5 != v17)
      {
        *((void *)v4 + v5++) = v13;
        HIDWORD(v17) = v5;
        uint64_t v10 = v15;
        if (v15 == -1) {
          continue;
        }
LABEL_14:
        __n128 result = (void *)((uint64_t (*)(char *, WTF **))off_1ECABE378[v10])(&v18, &v13);
        continue;
      }
      __n128 result = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v16, v5 + 1, (unint64_t)&v13);
      int v11 = HIDWORD(v17);
      uint64_t v4 = v16;
      *((void *)v16 + HIDWORD(v17)) = *result;
      unsigned int v5 = v11 + 1;
      HIDWORD(v17) = v11 + 1;
      uint64_t v10 = v15;
      if (v15 != -1) {
        goto LABEL_14;
      }
    }
  }
  while (!v8);
  __n128 result = v16;
  if (v16) {
    return (void *)WTF::fastFree(v16, v7);
  }
  return result;
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableWithAttributes(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = *(unsigned int *)(a2 + 96);
  uint64_t v7 = *(unsigned int *)(a2 + 56);
  *(_OWORD *)int8x16_t v146 = *(_OWORD *)(a2 + 60);
  if (v7 > 0x22) {
    goto LABEL_24;
  }
  if (((1 << v7) & 0x414002000) == 0)
  {
    if (v7 == 8)
    {
      unsigned int v19 = *(int **)(a2 + 80);
      if (v19)
      {
        int v20 = *v19;
        *v19 += 2;
        int v135 = 8;
        int v137 = 1;
        if (v20) {
          *unsigned int v19 = v20;
        }
        else {
          WTF::StringImpl::destroy();
        }
LABEL_72:
        memset(v146, 0, 20);
        v146[20] = 1;
        WTF::StringBuilder::append();
        WGSL::toString();
        unsigned int v138 = v130;
        *(void *)uint64_t v141 = ", ";
        *(_DWORD *)&v141[8] = 2;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((WTF::StringBuilder *)v146, (uint64_t *)&v138, (uint64_t)v141);
        int8x16_t v45 = v130;
        int v130 = 0;
        if (v45)
        {
          if (*(_DWORD *)v45 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *(_DWORD *)v45 -= 2;
          }
        }
        WGSL::TemplateTypes<(WGSL::TokenType)28,(WGSL::TokenType)26,(WGSL::TokenType)34>::appendNameTo((uint64_t)v146);
        WGSL::toString();
        *(void *)uint64_t v141 = "], but got a ";
        *(_DWORD *)&v141[8] = 13;
        unsigned int v138 = v130;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>((WTF::StringBuilder *)v146, (unint64_t *)v141, (uint64_t *)&v138);
        uint64_t v46 = v130;
        int v130 = 0;
        if (v46)
        {
          if (*(_DWORD *)v46 == 2)
          {
            WTF::StringImpl::destroy();
            int8x16_t v47 = *(_DWORD **)v146;
            if (!*(void *)v146) {
              goto LABEL_82;
            }
            goto LABEL_83;
          }
          *(_DWORD *)v46 -= 2;
        }
        int8x16_t v47 = *(_DWORD **)v146;
        if (!*(void *)v146)
        {
LABEL_82:
          WTF::StringBuilder::shrinkToFit((WTF::StringBuilder *)v146);
          WTF::StringBuilder::reifyString((WTF::StringBuilder *)v146);
          int8x16_t v47 = *(_DWORD **)v146;
          if (!*(void *)v146) {
            goto LABEL_84;
          }
        }
LABEL_83:
        *v47 += 2;
LABEL_84:
        unint64_t v48 = v6 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v6) << 32);
        *(void *)a1 = v47;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = v48;
        *(_DWORD *)(a1 + 24) = 1;
        long long v49 = *(_DWORD **)&v146[8];
        *(void *)&v146[8] = 0;
        if (v49)
        {
          if (*v49 == 2)
          {
            WTF::StringImpl::destroy();
            int8x16_t v50 = *(_DWORD **)v146;
            *(void *)int8x16_t v146 = 0;
            if (!v50)
            {
LABEL_92:
              uint64_t v51 = 1;
              return ((uint64_t (*)(unsigned char *, int *))off_1ECABDF90[v51])(v146, &v135);
            }
LABEL_90:
            if (*v50 == 2)
            {
              WTF::StringImpl::destroy();
              uint64_t v51 = 1;
              return ((uint64_t (*)(unsigned char *, int *))off_1ECABDF90[v51])(v146, &v135);
            }
            *v50 -= 2;
            goto LABEL_92;
          }
          *v49 -= 2;
        }
        int8x16_t v50 = *(_DWORD **)v146;
        *(void *)int8x16_t v146 = 0;
        if (!v50) {
          goto LABEL_92;
        }
        goto LABEL_90;
      }
    }
LABEL_24:
    int v135 = v7;
    int v137 = 1;
    goto LABEL_72;
  }
  int v9 = (_OWORD *)(a2 + 60);
  unsigned int v10 = *(_DWORD *)(a2 + 36);
  unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v11;
    if (v10 <= v11)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AAB6CLL);
    }
    uint64_t v13 = *(void *)(a2 + 24);
    uint64_t v14 = v13 + 32 * v11;
    unsigned int v15 = *(_DWORD *)v14;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
    *int v9 = *(_OWORD *)(v14 + 4);
    unsigned int v16 = *(_DWORD *)v14;
    if (v16 <= 8)
    {
      if (((1 << v16) & 0x38) != 0)
      {
        uint64_t v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_14:
        *(void *)(a2 + 80) = v17;
        goto LABEL_5;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
        goto LABEL_5;
      }
      if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_14;
      }
    }
LABEL_5:
    int v12 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v12;
    ++v11;
  }
  while (v15 == 82);
  int v135 = v7;
  long long v136 = *(_OWORD *)v146;
  int v137 = 0;
  switch(v7)
  {
    case 0xD:
      int v18 = 0;
      char v127 = 1;
      char v134 = 0;
      unint64_t v133 = 0;
      if (*(_DWORD *)(a2 + 56) == 83) {
        goto LABEL_26;
      }
      goto LABEL_54;
    case 0x1C:
      char v127 = 0;
      int v18 = 2;
      char v134 = 2;
      unint64_t v133 = 0;
      if (*(_DWORD *)(a2 + 56) == 83) {
        goto LABEL_26;
      }
      goto LABEL_54;
    case 0x1A:
      char v127 = 1;
      int v18 = 1;
      char v134 = 1;
      unint64_t v133 = 0;
      if (*(_DWORD *)(a2 + 56) == 83) {
        goto LABEL_26;
      }
LABEL_54:
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v146, a2);
      unsigned int v38 = v148;
      if (!v148) {
        goto LABEL_198;
      }
LABEL_55:
      if (v38 == 1)
      {
        uint64_t v39 = *(void *)v146;
        if (*(void *)v146) {
          **(_DWORD **)v146 += 2;
        }
        *(_OWORD *)(a1 + 8) = *(_OWORD *)&v146[8];
        *(void *)a1 = v39;
        int v40 = 1;
        *(_DWORD *)(a1 + 24) = 1;
        goto LABEL_59;
      }
      goto LABEL_275;
  }
  char v127 = 0;
  int v18 = 3;
  char v134 = 3;
  unint64_t v133 = 0;
  if (*(_DWORD *)(a2 + 56) != 83) {
    goto LABEL_54;
  }
LABEL_26:
  uint64_t v21 = *(void *)(a2 + 88);
  uint64_t v22 = *(unsigned int *)(a2 + 96);
  unsigned int v23 = *(_DWORD *)(a2 + 36);
  unsigned int v24 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v24;
    if (v23 <= v24)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AAB74);
    }
    uint64_t v26 = *(void *)(a2 + 24);
    uint64_t v27 = v26 + 32 * v24;
    unsigned int v28 = *(_DWORD *)v27;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v27;
    *int v9 = *(_OWORD *)(v27 + 4);
    unsigned int v29 = *(_DWORD *)v27;
    if (v29 <= 8)
    {
      if (((1 << v29) & 0x38) != 0)
      {
        uint64_t v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
        goto LABEL_37;
      }
      if (((1 << v29) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v26 + 32 * v24 + 24);
      }
      else if (v29 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
        if (v30) {
          *v30 += 2;
        }
LABEL_37:
        *(void *)(a2 + 80) = v30;
      }
    }
    uint64_t v25 = *(unsigned int *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v25;
    ++v24;
    if (v28 == 82) {
      continue;
    }
    break;
  }
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v125 = v22;
  uint64_t v126 = v21;
  if (v28 != 8)
  {
    *(_DWORD *)int8x16_t v146 = v28;
    unsigned int v148 = 1;
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v141 = "Expected a ";
    *(void *)&v141[8] = 12;
    unsigned int v138 = ", but got a ";
    *(void *)&long long v139 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v141, v149, (uint64_t)&v138, (uint64_t *)&v145, v150);
    if (!v150[0])
    {
      __break(0xC471u);
      JUMPOUT(0x1825AABACLL);
    }
    long long v41 = v145;
    unint64_t v145 = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
      {
        WTF::StringImpl::destroy();
        unsigned int v42 = (_DWORD *)v149[0];
        v149[0] = 0;
        if (!v42)
        {
LABEL_98:
          unint64_t v44 = v25 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v25) << 32);
          *(void *)uint64_t v141 = v150[0];
LABEL_99:
          *(void *)&v141[8] = v31;
          *(void *)&v141[16] = v44;
          int v52 = 1;
          int v142 = 1;
          uint64_t v53 = v148;
          if (v148 == -1) {
            goto LABEL_101;
          }
          goto LABEL_100;
        }
LABEL_95:
        if (*v42 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v42 -= 2;
        }
        goto LABEL_98;
      }
      *(_DWORD *)v41 -= 2;
    }
    unsigned int v42 = (_DWORD *)v149[0];
    v149[0] = 0;
    if (!v42) {
      goto LABEL_98;
    }
    goto LABEL_95;
  }
  *(_DWORD *)int8x16_t v146 = 8;
  *(_OWORD *)&v146[4] = *v9;
  __int16 v32 = *(_DWORD **)(a2 + 80);
  if (v32) {
    *v32 += 2;
  }
  int8x16_t v147 = v32;
  unsigned int v148 = 0;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v24;
    if (v23 <= v24)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AAB7CLL);
    }
    uint64_t v34 = v26 + 32 * v24;
    unsigned int v35 = *(_DWORD *)v34;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v34;
    *int v9 = *(_OWORD *)(v34 + 4);
    unsigned int v36 = *(_DWORD *)v34;
    if (v36 <= 8)
    {
      if (((1 << v36) & 0x38) != 0)
      {
        unsigned int v37 = *(_DWORD **)(v26 + 32 * v24 + 24);
        goto LABEL_52;
      }
      if (((1 << v36) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v26 + 32 * v24 + 24);
      }
      else if (v36 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v37 = *(_DWORD **)(v26 + 32 * v24 + 24);
        if (v37) {
          *v37 += 2;
        }
LABEL_52:
        *(void *)(a2 + 80) = v37;
      }
    }
    int v33 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v33;
    ++v24;
    if (v35 == 82) {
      continue;
    }
    break;
  }
  unint64_t v43 = WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WGSL::AddressSpace> [6]>::tryGet<WTF::String>((unsigned __int8 ***)WGSL::parseAddressSpace(WTF::String const&)::__map, (uint64_t *)&v147);
  if (!v43 || *(unsigned char *)v43 == 1)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v44 = v25 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v25) << 32);
    goto LABEL_99;
  }
  int v52 = 0;
  v141[0] = *(unsigned char *)v43;
  int v142 = 0;
  uint64_t v53 = v148;
  if (v148 != -1)
  {
LABEL_100:
    ((void (*)(const char **, unsigned char *))off_1ECABDF90[v53])(&v138, v146);
    int v52 = v142;
  }
LABEL_101:
  if (v52)
  {
    if (v52 != 1) {
      goto LABEL_275;
    }
    unsigned int v54 = *(const char **)v141;
    if (*(void *)v141) {
      **(_DWORD **)v141 += 2;
    }
    long long v131 = *(_OWORD *)&v141[8];
    int v130 = v54;
    int v55 = 1;
    int v132 = 1;
    goto LABEL_191;
  }
  int v56 = *(_DWORD *)(a2 + 56);
  if (v56 != 48)
  {
    if (v141[0] >= 5u) {
      char v65 = 1;
    }
    else {
      char v65 = 0x10001uLL >> (8 * v141[0]);
    }
    LOBYTE(v144) = v65;
    if (v56 != 84) {
      goto LABEL_180;
    }
LABEL_124:
    unsigned int v66 = *(_DWORD *)(a2 + 36);
    unsigned int v67 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v67;
      if (v66 <= v67)
      {
        __break(0xC471u);
        JUMPOUT(0x1825AAB94);
      }
      uint64_t v69 = *(void *)(a2 + 24);
      uint64_t v70 = v69 + 32 * v67;
      unsigned int v71 = *(_DWORD *)v70;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v70;
      *int v9 = *(_OWORD *)(v70 + 4);
      unsigned int v72 = *(_DWORD *)v70;
      if (v72 > 8) {
        goto LABEL_126;
      }
      if (((1 << v72) & 0x38) != 0) {
        break;
      }
      if (((1 << v72) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v69 + 32 * v67 + 24);
      }
      else if (v72 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unint64_t v73 = *(_DWORD **)(v69 + 32 * v67 + 24);
        if (v73) {
          *v73 += 2;
        }
        goto LABEL_135;
      }
LABEL_126:
      int v68 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v68;
      ++v67;
      if (v71 != 82)
      {
        uint8x8_t v74 = *(void **)(a2 + 8);
        *(void *)int8x16_t v146 = v126;
        *(_DWORD *)&v146[8] = v125;
        *(_DWORD *)&v146[12] = v68 - v125;
        int v130 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::VariableQualifier,WGSL::SourceSpan,WGSL::AddressSpace &,WGSL::AccessMode &,void>(v74, v146, v141, (char *)&v144);
        int v132 = 0;
        int v55 = v142;
        if (v142 == -1) {
          goto LABEL_192;
        }
LABEL_191:
        ((void (*)(unsigned char *, unsigned char *))off_1ECABE3D0[v55])(v146, v141);
        goto LABEL_192;
      }
    }
    unint64_t v73 = *(_DWORD **)(v69 + 32 * v67 + 24);
LABEL_135:
    *(void *)(a2 + 80) = v73;
    goto LABEL_126;
  }
  if (v141[0] != 3)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v75 = v125 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v125) << 32);
    goto LABEL_190;
  }
  unsigned int v57 = *(_DWORD *)(a2 + 36);
  unsigned int v58 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v58;
    if (v57 <= v58)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AAB9CLL);
    }
    uint64_t v60 = *(void *)(a2 + 24);
    uint64_t v61 = v60 + 32 * v58;
    unsigned int v62 = *(_DWORD *)v61;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v61;
    *int v9 = *(_OWORD *)(v61 + 4);
    unsigned int v63 = *(_DWORD *)v61;
    if (v63 <= 8)
    {
      if (((1 << v63) & 0x38) != 0)
      {
        __int16 v64 = *(_DWORD **)(v60 + 32 * v58 + 24);
        goto LABEL_119;
      }
      if (((1 << v63) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v60 + 32 * v58 + 24);
      }
      else if (v63 == 8)
      {
        *(void *)(a2 + 80) = 0;
        __int16 v64 = *(_DWORD **)(v60 + 32 * v58 + 24);
        if (v64) {
          *v64 += 2;
        }
LABEL_119:
        *(void *)(a2 + 80) = v64;
      }
    }
    uint64_t v59 = *(unsigned int *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v59;
    ++v58;
    if (v62 == 82) {
      continue;
    }
    break;
  }
  uint64_t v76 = *(void *)(a2 + 88);
  if (v62 != 8)
  {
    *(_DWORD *)int8x16_t v146 = v62;
    unsigned int v148 = 1;
    WGSL::toString();
    if (v148 != 1) {
      goto LABEL_275;
    }
    WGSL::toString();
    v150[0] = (uint64_t)"Expected a ";
    v150[1] = 12;
    v149[0] = (uint64_t)", but got a ";
    v149[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v150, (uint64_t *)&v144, (uint64_t)v149, (uint64_t *)&v143, &v145);
    if (!v145) {
      goto LABEL_290;
    }
    unint64_t v83 = v143;
    unsigned int v143 = 0;
    if (v83)
    {
      if (*v83 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v83 -= 2;
      }
    }
    unint64_t v87 = v144;
    int16x8_t v144 = 0;
    if (v87)
    {
      if (*v87 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v87 -= 2;
      }
    }
    unint64_t v86 = v59 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v59) << 32);
    unsigned int v138 = v145;
    goto LABEL_170;
  }
  *(_DWORD *)int8x16_t v146 = 8;
  *(_OWORD *)&v146[4] = *v9;
  unint64_t v77 = *(_DWORD **)(a2 + 80);
  if (v77) {
    *v77 += 2;
  }
  int8x16_t v147 = v77;
  unsigned int v148 = 0;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v58;
    if (v57 <= v58)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AABA4);
    }
    uint64_t v79 = v60 + 32 * v58;
    unsigned int v80 = *(_DWORD *)v79;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v79;
    *int v9 = *(_OWORD *)(v79 + 4);
    unsigned int v81 = *(_DWORD *)v79;
    if (v81 <= 8)
    {
      if (((1 << v81) & 0x38) != 0)
      {
        unsigned int v82 = *(_DWORD **)(v60 + 32 * v58 + 24);
        goto LABEL_155;
      }
      if (((1 << v81) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v60 + 32 * v58 + 24);
      }
      else if (v81 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v82 = *(_DWORD **)(v60 + 32 * v58 + 24);
        if (v82) {
          *v82 += 2;
        }
LABEL_155:
        *(void *)(a2 + 80) = v82;
      }
    }
    int v78 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v78;
    ++v58;
    if (v80 == 82) {
      continue;
    }
    break;
  }
  uint8x8_t v84 = WGSL::parseAccessMode((uint64_t *)&v147);
  if (v84)
  {
    int v85 = 0;
    LOBYTE(v138) = *v84;
    int v140 = 0;
    goto LABEL_171;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  unint64_t v86 = v59 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v59) << 32);
LABEL_170:
  *(void *)&long long v139 = v76;
  *((void *)&v139 + 1) = v86;
  int v85 = 1;
  int v140 = 1;
LABEL_171:
  if (v148 != -1)
  {
    ((void (*)(uint64_t *, unsigned char *))off_1ECABDF90[v148])(v150, v146);
    int v85 = v140;
  }
  if (!v85)
  {
    LOBYTE(v144) = (_BYTE)v138;
    if (*(_DWORD *)(a2 + 56) != 84)
    {
LABEL_180:
      WGSL::toString();
      WGSL::toString();
      *(void *)int8x16_t v146 = "Expected a ";
      *(void *)&v146[8] = 12;
      unsigned int v138 = ", but got a ";
      *(void *)&long long v139 = 13;
      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v146, v149, (uint64_t)&v138, (uint64_t *)&v145, v150);
      if (!v150[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1825AABB4);
      }
      uint16x8_t v90 = v145;
      unint64_t v145 = 0;
      if (v90)
      {
        if (*(_DWORD *)v90 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *(_DWORD *)v90 -= 2;
        }
      }
      char v91 = (_DWORD *)v149[0];
      v149[0] = 0;
      if (v91)
      {
        if (*v91 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v91 -= 2;
        }
      }
      unint64_t v75 = v125 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v125) << 32);
      int v130 = (const char *)v150[0];
LABEL_190:
      *(void *)&long long v131 = v126;
      *((void *)&v131 + 1) = v75;
      int v132 = 1;
      int v55 = v142;
      if (v142 == -1) {
        goto LABEL_192;
      }
      goto LABEL_191;
    }
    goto LABEL_124;
  }
  if (v85 != 1) {
    goto LABEL_275;
  }
  uint8x16_t v88 = (char *)v138;
  if (v138)
  {
    int v89 = *(_DWORD *)v138;
    *(_DWORD *)v138 += 2;
    long long v131 = v139;
    int v130 = v88;
    int v132 = 1;
    unsigned int v138 = 0;
    if (v89)
    {
      *(_DWORD *)uint8x16_t v88 = v89;
      int v55 = v142;
      if (v142 != -1) {
        goto LABEL_191;
      }
    }
    else
    {
      WTF::StringImpl::destroy();
      int v55 = v142;
      if (v142 != -1) {
        goto LABEL_191;
      }
    }
  }
  else
  {
    long long v131 = v139;
    int v130 = 0;
    int v132 = 1;
    int v55 = v142;
    if (v142 != -1) {
      goto LABEL_191;
    }
  }
LABEL_192:
  if (v132)
  {
    if (v132 == 1)
    {
      uint64_t v92 = (char *)v130;
      if (v130)
      {
        int v93 = *(_DWORD *)v130;
        *(_DWORD *)v130 += 2;
        *(_OWORD *)(a1 + 8) = v131;
        *(void *)a1 = v92;
        *(_DWORD *)(a1 + 24) = 1;
        int v130 = 0;
        if (v93) {
          *(_DWORD *)uint64_t v92 = v93;
        }
        else {
          WTF::StringImpl::destroy();
        }
      }
      else
      {
        *(_OWORD *)(a1 + 8) = v131;
        *(void *)a1 = 0;
        *(_DWORD *)(a1 + 24) = 1;
      }
      goto LABEL_264;
    }
LABEL_275:
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_290;
  }
  unint64_t v133 = v130;
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v146, a2);
  unsigned int v38 = v148;
  if (v148) {
    goto LABEL_55;
  }
LABEL_198:
  int v130 = 0;
  int v94 = *(_DWORD *)(a2 + 56);
  if (v94 != 47)
  {
    int8x16x2_t v103 = a3;
    uint64_t v104 = 0;
    v150[0] = 0;
    if ((v127 & 1) == 0) {
      goto LABEL_224;
    }
    goto LABEL_212;
  }
  unsigned int v95 = *(_DWORD *)(a2 + 36);
  unsigned int v96 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v96;
    if (v95 <= v96)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AAB84);
    }
    uint64_t v98 = *(void *)(a2 + 24);
    uint64_t v99 = v98 + 32 * v96;
    unsigned int v100 = *(_DWORD *)v99;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v99;
    *int v9 = *(_OWORD *)(v99 + 4);
    unsigned int v101 = *(_DWORD *)v99;
    if (v101 <= 8)
    {
      if (((1 << v101) & 0x38) != 0)
      {
        int8x16x2_t v102 = *(_DWORD **)(v98 + 32 * v96 + 24);
        goto LABEL_210;
      }
      if (((1 << v101) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v98 + 32 * v96 + 24);
      }
      else if (v101 == 8)
      {
        *(void *)(a2 + 80) = 0;
        int8x16x2_t v102 = *(_DWORD **)(v98 + 32 * v96 + 24);
        if (v102) {
          *v102 += 2;
        }
LABEL_210:
        *(void *)(a2 + 80) = v102;
      }
    }
    int v97 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v97;
    ++v96;
    if (v100 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName((uint64_t)v141, a2);
  if (v142)
  {
    if (v142 == 1)
    {
      unsigned int v106 = *(_DWORD **)v141;
      if (*(void *)v141)
      {
        int v107 = **(_DWORD **)v141;
        **(_DWORD **)v141 += 2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)&v141[8];
        *(void *)a1 = v106;
        *(_DWORD *)(a1 + 24) = 1;
        *(void *)uint64_t v141 = 0;
        if (!v107) {
          goto LABEL_241;
        }
        goto LABEL_221;
      }
      long long v124 = *(_OWORD *)&v141[8];
      goto LABEL_271;
    }
    goto LABEL_275;
  }
  int8x16x2_t v103 = a3;
  uint64_t v104 = *(void *)v141;
  int v130 = *(const char **)v141;
  int v94 = *(_DWORD *)(a2 + 56);
  v150[0] = 0;
  if ((v127 & 1) == 0)
  {
LABEL_224:
    if (v94 == 49) {
      goto LABEL_225;
    }
    BOOL v116 = 0;
    if (v104)
    {
LABEL_252:
      unsigned int v118 = *(void **)(a2 + 8);
      int v119 = *(_DWORD *)(a2 + 96) - v6;
      *(void *)uint64_t v141 = v5;
      *(_DWORD *)&v141[8] = v6;
      *(_DWORD *)&v141[12] = v119;
      *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::Variable,WGSL::SourceSpan,WGSL::AST::VariableFlavor &,WGSL::AST::Identifier,WGSL::AST::VariableQualifier *,WGSL::AST::Expression *,WGSL::AST::Expression *,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v118, v141, &v134, (uint64_t)v146, (uint64_t *)&v133, (uint64_t *)&v130, v150, v103);
      *(_DWORD *)(a1 + 24) = 0;
      int v40 = v148;
      if (v148 != -1) {
        goto LABEL_59;
      }
      goto LABEL_264;
    }
LABEL_247:
    if (v116) {
      goto LABEL_252;
    }
    if (v18 == 3)
    {
      int64x2_t v117 = vdupq_n_s64(4uLL);
      v117.i64[0] = (uint64_t)"var";
      goto LABEL_255;
    }
    if (v18 != 1)
    {
      if (!v18)
      {
        __break(0xC471u);
        JUMPOUT(0x1825AAB64);
      }
      int64x2_t v117 = vdupq_n_s64(9uLL);
      v117.i64[0] = (uint64_t)"override";
LABEL_255:
      *(int64x2_t *)uint64_t v141 = v117;
      unsigned int v138 = " declaration requires a type or initializer";
      *(void *)&long long v139 = 44;
      WTF::tryMakeString<WTF::ASCIILiteral,WTF::ASCIILiteral>(v141, (uint64_t)&v138, v149);
      if (!v149[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1825AABC4);
      }
      unint64_t v120 = v6 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v6) << 32);
      *(void *)a1 = v149[0];
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v120;
      *(_DWORD *)(a1 + 24) = 1;
      int v40 = v148;
      if (v148 != -1) {
        goto LABEL_59;
      }
      goto LABEL_264;
    }
LABEL_290:
    __break(0xC471u);
    JUMPOUT(0x1825AAB44);
  }
LABEL_212:
  if (v94 != 49)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v141 = "Expected a ";
    *(void *)&v141[8] = 12;
    unsigned int v138 = ", but got a ";
    *(void *)&long long v139 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v141, (uint64_t *)&v129, (uint64_t)&v138, (uint64_t *)&v128, v149);
    if (!v149[0])
    {
      __break(0xC471u);
      JUMPOUT(0x1825AABBCLL);
    }
    uint64_t v105 = v128;
    unint64_t v128 = 0;
    if (v105)
    {
      if (*v105 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v105 -= 2;
      }
    }
    int v121 = v129;
    uint64_t v129 = 0;
    if (v121)
    {
      if (*v121 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v121 -= 2;
      }
    }
    unint64_t v122 = v6 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v6) << 32);
    *(void *)a1 = v149[0];
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v122;
    *(_DWORD *)(a1 + 24) = 1;
    int v40 = v148;
    if (v148 != -1) {
      goto LABEL_59;
    }
    goto LABEL_264;
  }
LABEL_225:
  unsigned int v108 = *(_DWORD *)(a2 + 36);
  unsigned int v109 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v109;
    if (v108 <= v109)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AAB8CLL);
    }
    uint64_t v111 = *(void *)(a2 + 24);
    uint64_t v112 = v111 + 32 * v109;
    unsigned int v113 = *(_DWORD *)v112;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v112;
    *int v9 = *(_OWORD *)(v112 + 4);
    unsigned int v114 = *(_DWORD *)v112;
    if (v114 <= 8)
    {
      if (((1 << v114) & 0x38) != 0)
      {
        unsigned int v115 = *(_DWORD **)(v111 + 32 * v109 + 24);
        goto LABEL_236;
      }
      if (((1 << v114) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v111 + 32 * v109 + 24);
      }
      else if (v114 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v115 = *(_DWORD **)(v111 + 32 * v109 + 24);
        if (v115) {
          *v115 += 2;
        }
LABEL_236:
        *(void *)(a2 + 80) = v115;
      }
    }
    int v110 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v110;
    ++v109;
    if (v113 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)v141, a2);
  if (!v142)
  {
    v150[0] = *(void *)v141;
    BOOL v116 = *(void *)v141 != 0;
    if (v104) {
      goto LABEL_252;
    }
    goto LABEL_247;
  }
  if (v142 != 1) {
    goto LABEL_275;
  }
  unsigned int v106 = *(_DWORD **)v141;
  if (*(void *)v141)
  {
    int v107 = **(_DWORD **)v141;
    **(_DWORD **)v141 += 2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)&v141[8];
    *(void *)a1 = v106;
    *(_DWORD *)(a1 + 24) = 1;
    if (!v107)
    {
LABEL_241:
      WTF::StringImpl::destroy();
      int v40 = v148;
      if (v148 == -1) {
        goto LABEL_264;
      }
LABEL_59:
      ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v40])(v141, v146);
      goto LABEL_264;
    }
LABEL_221:
    _DWORD *v106 = v107;
    int v40 = v148;
    if (v148 == -1) {
      goto LABEL_264;
    }
    goto LABEL_59;
  }
  long long v124 = *(_OWORD *)&v141[8];
LABEL_271:
  *(_OWORD *)(a1 + 8) = v124;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 24) = 1;
  int v40 = v148;
  if (v148 != -1) {
    goto LABEL_59;
  }
LABEL_264:
  uint64_t v51 = 0;
  return ((uint64_t (*)(void, void))off_1ECABDF90[v51])(v146, &v135);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST8VariableEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  __n128 result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

_DWORD *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 48) = v6 + 1;
  if ((v6 + 1) >= 0x10)
  {
    WTF::String::number((WTF::String *)0xF);
    WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"composite type may not be nested more than ", 44, (uint64_t *)&v17, (int8x16_t *)" levels", 8, &v13);
    unint64_t v11 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v11;
    *(_DWORD *)(a1 + 24) = 1;
    uint64_t v13 = 0;
    __n128 result = v17;
    uint64_t v17 = 0;
    if (result)
    {
      if (*result == 2) {
        __n128 result = (_DWORD *)WTF::StringImpl::destroy();
      }
      else {
        *result -= 2;
      }
    }
    goto LABEL_15;
  }
  if (*(_DWORD *)(a2 + 56) != 8)
  {
    __n128 result = (_DWORD *)WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v10 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_15;
  }
  __n128 result = (_DWORD *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v13, a2);
  if (!v16)
  {
    if (MEMORY[0x18530AEB0](v15, "array", 5))
    {
      __n128 result = (_DWORD *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseArrayType(a1, a2);
      uint64_t v9 = v16;
      if (v16 == -1) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    __n128 result = WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeNameAfterIdentifier(a1, a2, (uint64_t)&v13, v4, v5);
    uint64_t v9 = v16;
    if (v16 != -1) {
LABEL_14:
    }
      __n128 result = (_DWORD *)((uint64_t (*)(char *, _DWORD **))off_1ECABDF80[v9])(&v18, &v13);
LABEL_15:
    *(_DWORD *)(a2 + 48) = v6;
    return result;
  }
  if (v16 == 1)
  {
    unsigned int v8 = v13;
    if (v13) {
      *v13 += 2;
    }
    *(_OWORD *)(a1 + 8) = v14;
    *(void *)a1 = v8;
    *(_DWORD *)(a1 + 24) = 1;
    uint64_t v9 = v16;
    if (v16 == -1) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  int v12 = (WGSL::AST::Builder *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_DWORD *)WGSL::AST::Builder::construct<WGSL::AST::TypeAlias,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,void>(v12);
}

void *WGSL::AST::Builder::construct<WGSL::AST::TypeAlias,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x3FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  uint64_t v9 = *a4;
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)uint64_t v8 = &unk_1ECABE150;
  *(void *)(v8 + 24) = &unk_1ECABC008;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a3 + 8);
  *(void *)(v8 + 24) = off_1ECABC030;
  uint64_t v10 = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(v8 + 48) = v10;
  *(void *)(v8 + 56) = v9;
  *v7 += 64;
  unint64_t v11 = *((unsigned int *)v7 + 11);
  if (v11 != *((_DWORD *)v7 + 10))
  {
    char v18 = (void *)(v7[4] + 8 * v11);
LABEL_17:
    *char v18 = v8;
    *((_DWORD *)v7 + 11) = v11 + 1;
    return (void *)v8;
  }
  unint64_t v12 = v11 + (v11 >> 2);
  if (v12 >= 0x10) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = 16;
  }
  if (v13 <= v11 + 1) {
    unint64_t v14 = v11 + 1;
  }
  else {
    unint64_t v14 = v13;
  }
  if (!(v14 >> 29))
  {
    uint64_t v15 = (void *)v7[4];
    unsigned int v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
    *((_DWORD *)v7 + 10) = v14;
    v7[4] = v16;
    memcpy(v16, v15, 8 * v11);
    if (v15)
    {
      if ((void *)v7[4] == v15)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v15, v17);
    }
    unint64_t v11 = *((unsigned int *)v7 + 11);
    char v18 = (void *)(v7[4] + 8 * v11);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseArrayType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v56 = 0;
  unsigned int v57 = 0;
  int v6 = v5;
  if (*(_DWORD *)(a2 + 56) != 83)
  {
LABEL_78:
    unint64_t v43 = *(void **)(a2 + 8);
    *(void *)int8x16_t v47 = v4;
    *(_DWORD *)&v47[8] = v5;
    *(_DWORD *)&v47[12] = v6 - v5;
    __n128 result = WGSL::AST::Builder::construct<WGSL::AST::ArrayTypeExpression,WGSL::SourceSpan,WGSL::AST::Expression *&,WGSL::AST::Expression *&,void>(v43, v47, (uint64_t *)&v57, (uint64_t *)&v56);
    *(void *)a1 = result;
    *(_DWORD *)(a1 + 24) = 0;
    return result;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  uint64_t v8 = (_OWORD *)(a2 + 60);
  unsigned int v9 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v7 <= v9) {
      goto LABEL_80;
    }
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = v11 + 32 * v9;
    unsigned int v13 = *(_DWORD *)v12;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v12;
    *uint64_t v8 = *(_OWORD *)(v12 + 4);
    unsigned int v14 = *(_DWORD *)v12;
    if (v14 <= 8)
    {
      if (((1 << v14) & 0x38) != 0)
      {
        uint64_t v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v15;
        goto LABEL_4;
      }
      if (((1 << v14) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v11 + 32 * v9 + 24);
        goto LABEL_4;
      }
      if (v14 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
        if (v15) {
          *v15 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v10 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v10;
    ++v9;
  }
  while (v13 == 82);
  __n128 result = WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName((uint64_t)&v53, a2);
  if (v55)
  {
    if (v55 == 1)
    {
      uint64_t v17 = v53;
      if (v53) {
        *v53 += 2;
      }
      *(_OWORD *)(a1 + 8) = v54;
      *(void *)a1 = v17;
      int v18 = 1;
      *(_DWORD *)(a1 + 24) = 1;
      goto LABEL_74;
    }
    goto LABEL_79;
  }
  unsigned int v57 = v53;
  int v19 = *(_DWORD *)(a2 + 56);
  if (v19 != 48) {
    goto LABEL_48;
  }
  unsigned int v20 = *(_DWORD *)(a2 + 36);
  unsigned int v21 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v21;
    if (v20 <= v21)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AB4C0);
    }
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v24 = v23 + 32 * v21;
    unsigned int v25 = *(_DWORD *)v24;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v24;
    *uint64_t v8 = *(_OWORD *)(v24 + 4);
    unsigned int v26 = *(_DWORD *)v24;
    if (v26 <= 8)
    {
      if (((1 << v26) & 0x38) != 0)
      {
        uint64_t v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        goto LABEL_31;
      }
      if (((1 << v26) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v23 + 32 * v21 + 24);
      }
      else if (v26 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        if (v27) {
          *v27 += 2;
        }
LABEL_31:
        *(void *)(a2 + 80) = v27;
      }
    }
    int v22 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v22;
    ++v21;
    if (v25 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression(v47, a2);
  if (!v48)
  {
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAdditiveExpressionPostUnary((uint64_t)&v50, a2, v47);
    uint64_t v29 = v52;
    if (v52)
    {
      if (v52 != 1) {
        goto LABEL_79;
      }
      uint64_t v31 = v50;
      if (v50) {
        *(_DWORD *)v50 += 2;
      }
      *(_OWORD *)(a1 + 8) = v51;
      *(void *)a1 = v31;
      *(_DWORD *)(a1 + 24) = 1;
    }
    else
    {
      int v56 = v50;
    }
    __n128 result = (void *)((uint64_t (*)(void *, const char **))off_1ECABE170[v29])(v58, &v50);
    int v30 = v48;
    if (v48 != -1) {
      goto LABEL_44;
    }
    goto LABEL_45;
  }
  if (v48 != 1)
  {
LABEL_79:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_80:
    __break(0xC471u);
LABEL_84:
    JUMPOUT(0x1825AB4B8);
  }
  uint64_t v28 = *(void *)v47;
  if (*(void *)v47) {
    **(_DWORD **)v47 += 2;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v47[8];
  *(void *)a1 = v28;
  LODWORD(v29) = 1;
  *(_DWORD *)(a1 + 24) = 1;
  int v30 = 1;
LABEL_44:
  __n128 result = (void *)((uint64_t (*)(const char **, unsigned char *))off_1ECABE170[v30])(&v50, v47);
LABEL_45:
  if (v29)
  {
    int v18 = 1;
    goto LABEL_74;
  }
  int v19 = *(_DWORD *)(a2 + 56);
LABEL_48:
  if (v19 == 84)
  {
    *(_DWORD *)int8x16_t v47 = 84;
    *(_OWORD *)&v47[4] = *v8;
    int v49 = 0;
    unsigned int v32 = *(_DWORD *)(a2 + 36);
    unsigned int v33 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v33;
      if (v32 <= v33)
      {
        __break(0xC471u);
        JUMPOUT(0x1825AB4C8);
      }
      uint64_t v35 = *(void *)(a2 + 24);
      uint64_t v36 = v35 + 32 * v33;
      unsigned int v37 = *(_DWORD *)v36;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v36;
      *uint64_t v8 = *(_OWORD *)(v36 + 4);
      unsigned int v38 = *(_DWORD *)v36;
      if (v38 > 8) {
        goto LABEL_51;
      }
      if (((1 << v38) & 0x38) != 0) {
        break;
      }
      if (((1 << v38) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v35 + 32 * v33 + 24);
      }
      else if (v38 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
        if (v39) {
          *v39 += 2;
        }
        goto LABEL_60;
      }
LABEL_51:
      int v34 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v34;
      ++v33;
      if (v37 != 82)
      {
        int v18 = 0;
        goto LABEL_73;
      }
    }
    uint64_t v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
LABEL_60:
    *(void *)(a2 + 80) = v39;
    goto LABEL_51;
  }
  *(_DWORD *)int8x16_t v47 = v19;
  int v49 = 1;
  WGSL::toString();
  WGSL::toString();
  int8x16_t v50 = "Expected a ";
  *(void *)&long long v51 = 12;
  v58[0] = ", but got a ";
  v58[1] = 13;
  WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v50, (uint64_t *)&v45, (uint64_t)v58, (uint64_t *)&v44, &v46);
  if (!v46)
  {
    __break(0xC471u);
    goto LABEL_84;
  }
  int v40 = v44;
  unint64_t v44 = 0;
  if (!v40) {
    goto LABEL_65;
  }
  if (*v40 == 2)
  {
    WTF::StringImpl::destroy();
    long long v41 = v45;
    int8x16_t v45 = 0;
    if (!v41) {
      goto LABEL_72;
    }
    goto LABEL_69;
  }
  *v40 -= 2;
LABEL_65:
  long long v41 = v45;
  int8x16_t v45 = 0;
  if (v41)
  {
LABEL_69:
    if (*v41 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v41 -= 2;
    }
  }
LABEL_72:
  unint64_t v42 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
  *(void *)a1 = v46;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v42;
  int v18 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_73:
  __n128 result = (void *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDF90[v18])(&v50, v47);
LABEL_74:
  if (v55 != -1) {
    __n128 result = (void *)((uint64_t (*)(unsigned char *, _DWORD **))off_1ECABE170[v55])(v47, &v53);
  }
  if (!v18)
  {
    int v6 = *(_DWORD *)(a2 + 96);
    goto LABEL_78;
  }
  return result;
}

void *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeNameAfterIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, unsigned int a5)
{
  if (*(_DWORD *)(a2 + 56) != 83)
  {
    unsigned int v16 = *(void **)(a2 + 8);
    unsigned int v17 = *(_DWORD *)(a2 + 96) - a5;
    unsigned int v52 = a4;
    *(void *)&long long v53 = __PAIR64__(v17, a5);
    __n128 result = WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v16, &v52, a3);
    *(void *)a1 = result;
    *(_DWORD *)(a1 + 24) = 0;
    return result;
  }
  unsigned int v7 = (_OWORD *)(a2 + 60);
  unsigned int v8 = *(_DWORD *)(a2 + 36);
  unsigned int v9 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v8 <= v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1825ABA08);
    }
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = v11 + 32 * v9;
    unsigned int v13 = *(_DWORD *)v12;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v12;
    *unsigned int v7 = *(_OWORD *)(v12 + 4);
    unsigned int v14 = *(_DWORD *)v12;
    if (v14 <= 8)
    {
      if (((1 << v14) & 0x38) != 0)
      {
        uint64_t v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v15;
        goto LABEL_4;
      }
      if (((1 << v14) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v11 + 32 * v9 + 24);
        goto LABEL_4;
      }
      if (v14 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
        if (v15) {
          *v15 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v10 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v10;
    ++v9;
  }
  while (v13 == 82);
  int v19 = 0;
  unsigned int v20 = 0;
  int v55 = 0;
  uint64_t v56 = 0;
  uint64_t v45 = a5;
  while (1)
  {
    __n128 result = (void *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeName(&v52, a2);
    if (!v54)
    {
      if (v20 == v56)
      {
        __n128 result = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v55, v20 + 1, (unint64_t)&v52);
        int v25 = HIDWORD(v56);
        int v19 = v55;
        *((void *)v55 + HIDWORD(v56)) = *result;
        unsigned int v20 = v25 + 1;
        HIDWORD(v56) = v25 + 1;
        if (*(_DWORD *)(a2 + 56) != 48) {
          goto LABEL_27;
        }
      }
      else
      {
        *((void *)v19 + v20) = v52;
        unsigned int v20 = ++HIDWORD(v56);
        if (*(_DWORD *)(a2 + 56) != 48)
        {
LABEL_27:
          int v23 = 4;
          uint64_t v24 = v54;
          if (v54 == -1) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
      }
      unsigned int v26 = *(_DWORD *)(a2 + 36);
      unsigned int v27 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v27;
        if (v26 <= v27) {
          goto LABEL_75;
        }
        uint64_t v29 = *(void *)(a2 + 24);
        uint64_t v30 = v29 + 32 * v27;
        unsigned int v31 = *(_DWORD *)v30;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v30;
        *unsigned int v7 = *(_OWORD *)(v30 + 4);
        unsigned int v32 = *(_DWORD *)v30;
        if (v32 > 8) {
          goto LABEL_32;
        }
        if (((1 << v32) & 0x38) != 0) {
          break;
        }
        if (((1 << v32) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v29 + 32 * v27 + 24);
        }
        else if (v32 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v33 = *(_DWORD **)(v29 + 32 * v27 + 24);
          if (v33) {
            *v33 += 2;
          }
          goto LABEL_41;
        }
LABEL_32:
        int v28 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v28;
        ++v27;
        if (v31 != 82)
        {
          int v23 = 0;
          uint64_t v24 = v54;
          if (v54 == -1) {
            goto LABEL_22;
          }
LABEL_21:
          __n128 result = (void *)((uint64_t (*)(void *, const char **))off_1ECABE170[v24])(v57, &v52);
          goto LABEL_22;
        }
      }
      unsigned int v33 = *(_DWORD **)(v29 + 32 * v27 + 24);
LABEL_41:
      *(void *)(a2 + 80) = v33;
      goto LABEL_32;
    }
    if (v54 != 1)
    {
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_75:
      __break(0xC471u);
      goto LABEL_79;
    }
    int v22 = v52;
    if (v52) {
      *(_DWORD *)v52 += 2;
    }
    *(_OWORD *)(a1 + 8) = v53;
    *(void *)a1 = v22;
    int v23 = 1;
    *(_DWORD *)(a1 + 24) = 1;
    uint64_t v24 = v54;
    if (v54 != -1) {
      goto LABEL_21;
    }
LABEL_22:
    if (v23) {
      break;
    }
    if (*(_DWORD *)(a2 + 56) == 84) {
      goto LABEL_46;
    }
  }
  if (v23 != 4) {
    goto LABEL_59;
  }
  if (*(_DWORD *)(a2 + 56) != 84)
  {
    WGSL::toString();
    WGSL::toString();
    unsigned int v52 = "Expected a ";
    *(void *)&long long v53 = 12;
    v57[0] = ", but got a ";
    v57[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v52, (uint64_t *)&v50, (uint64_t)v57, (uint64_t *)&v49, &v51);
    if (v51)
    {
      unint64_t v43 = v49;
      int v49 = 0;
      if (v43)
      {
        if (*v43 == 2)
        {
          WTF::StringImpl::destroy();
          __n128 result = v50;
          int8x16_t v50 = 0;
          if (!result) {
            goto LABEL_72;
          }
LABEL_69:
          if (*(_DWORD *)result == 2) {
            __n128 result = (void *)WTF::StringImpl::destroy();
          }
          else {
            *(_DWORD *)result -= 2;
          }
LABEL_72:
          unint64_t v44 = v45 | ((unint64_t)(*(_DWORD *)(a2 + 96) - a5) << 32);
          *(void *)a1 = v51;
          *(void *)(a1 + 8) = a4;
          *(void *)(a1 + 16) = v44;
          *(_DWORD *)(a1 + 24) = 1;
          if (v19) {
            goto LABEL_60;
          }
          return result;
        }
        *v43 -= 2;
      }
      __n128 result = v50;
      int8x16_t v50 = 0;
      if (!result) {
        goto LABEL_72;
      }
      goto LABEL_69;
    }
    __break(0xC471u);
LABEL_79:
    JUMPOUT(0x1825ABA00);
  }
LABEL_46:
  unsigned int v34 = *(_DWORD *)(a2 + 36);
  unsigned int v35 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v35;
    if (v34 <= v35)
    {
      __break(0xC471u);
      JUMPOUT(0x1825ABA10);
    }
    uint64_t v37 = *(void *)(a2 + 24);
    uint64_t v38 = v37 + 32 * v35;
    unsigned int v39 = *(_DWORD *)v38;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
    *unsigned int v7 = *(_OWORD *)(v38 + 4);
    unsigned int v40 = *(_DWORD *)v38;
    if (v40 <= 8)
    {
      if (((1 << v40) & 0x38) != 0)
      {
        long long v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
LABEL_57:
        *(void *)(a2 + 80) = v41;
        goto LABEL_48;
      }
      if (((1 << v40) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v37 + 32 * v35 + 24);
        goto LABEL_48;
      }
      if (v40 == 8)
      {
        *(void *)(a2 + 80) = 0;
        long long v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
        if (v41) {
          *v41 += 2;
        }
        goto LABEL_57;
      }
    }
LABEL_48:
    int v36 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v36;
    ++v35;
  }
  while (v39 == 82);
  unint64_t v42 = *(void **)(a2 + 8);
  unsigned int v52 = a4;
  LODWORD(v53) = a5;
  DWORD1(v53) = v36 - a5;
  __n128 result = WGSL::AST::Builder::construct<WGSL::AST::ElaboratedTypeExpression,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(v42, &v52, a3, (uint64_t *)&v55);
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 24) = 0;
  int v19 = v55;
LABEL_59:
  if (v19)
  {
LABEL_60:
    int v55 = 0;
    LODWORD(v56) = 0;
    return (void *)WTF::fastFree(v19, v21);
  }
  return result;
}

void WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v6 + 1;
  if ((v6 + 1) >= 0x81)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v7 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v7;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_44;
  }
  int v8 = *(_DWORD *)(a2 + 56);
  int v9 = v8 - 36;
  if ((v8 - 36) > 0x2A || ((1 << (v8 - 36)) & 0x50000800021) == 0)
  {
    switch(v8)
    {
      case 2:
        *(_DWORD *)uint64_t v141 = 2;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v12 = *(_DWORD *)(a2 + 36);
        unsigned int v13 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v13;
          if (v12 <= v13)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA10);
          }
          uint64_t v15 = *(void *)(a2 + 24);
          uint64_t v16 = v15 + 32 * v13;
          unsigned int v17 = *(_DWORD *)v16;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v16;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v16 + 4);
          unsigned int v18 = *(_DWORD *)v16;
          if (v18 > 8) {
            goto LABEL_12;
          }
          if (((1 << v18) & 0x38) != 0) {
            break;
          }
          if (((1 << v18) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v15 + 32 * v13 + 24);
          }
          else if (v18 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int v19 = *(_DWORD **)(v15 + 32 * v13 + 24);
            if (v19) {
              *v19 += 2;
            }
            goto LABEL_21;
          }
LABEL_12:
          int v14 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v14;
          ++v13;
          if (v17 != 82)
          {
            int8x16x2_t v103 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v14 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::AbstractFloatLiteral,WGSL::SourceSpan,double &,void>(v103, &v138, &v142);
            goto LABEL_162;
          }
        }
        int v19 = *(_DWORD **)(v15 + 32 * v13 + 24);
LABEL_21:
        *(void *)(a2 + 80) = v19;
        goto LABEL_12;
      case 3:
        *(_DWORD *)uint64_t v141 = 3;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v48 = *(_DWORD *)(a2 + 36);
        unsigned int v49 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v49;
          if (v48 <= v49)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA28);
          }
          uint64_t v51 = *(void *)(a2 + 24);
          uint64_t v52 = v51 + 32 * v49;
          unsigned int v53 = *(_DWORD *)v52;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v52;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v52 + 4);
          unsigned int v54 = *(_DWORD *)v52;
          if (v54 > 8) {
            goto LABEL_71;
          }
          if (((1 << v54) & 0x38) != 0) {
            break;
          }
          if (((1 << v54) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v51 + 32 * v49 + 24);
          }
          else if (v54 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int v55 = *(_DWORD **)(v51 + 32 * v49 + 24);
            if (v55) {
              *v55 += 2;
            }
            goto LABEL_80;
          }
LABEL_71:
          int v50 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v50;
          ++v49;
          if (v53 != 82)
          {
            uint64_t v104 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v50 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::AbstractIntegerLiteral,WGSL::SourceSpan,long long &,void>(v104, &v138, &v142);
            goto LABEL_162;
          }
        }
        int v55 = *(_DWORD **)(v51 + 32 * v49 + 24);
LABEL_80:
        *(void *)(a2 + 80) = v55;
        goto LABEL_71;
      case 4:
        *(_DWORD *)uint64_t v141 = 4;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v32 = *(_DWORD *)(a2 + 36);
        unsigned int v33 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v33;
          if (v32 <= v33)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA18);
          }
          uint64_t v35 = *(void *)(a2 + 24);
          uint64_t v36 = v35 + 32 * v33;
          unsigned int v37 = *(_DWORD *)v36;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v36;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v36 + 4);
          unsigned int v38 = *(_DWORD *)v36;
          if (v38 > 8) {
            goto LABEL_47;
          }
          if (((1 << v38) & 0x38) != 0) {
            break;
          }
          if (((1 << v38) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v35 + 32 * v33 + 24);
          }
          else if (v38 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
            if (v39) {
              *v39 += 2;
            }
            goto LABEL_56;
          }
LABEL_47:
          int v34 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v34;
          ++v33;
          if (v37 != 82)
          {
            unsigned int v100 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v34 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Signed32Literal,WGSL::SourceSpan,long long &,void>(v100, &v138, &v142);
            goto LABEL_162;
          }
        }
        unsigned int v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
LABEL_56:
        *(void *)(a2 + 80) = v39;
        goto LABEL_47;
      case 5:
        *(_DWORD *)uint64_t v141 = 5;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v67 = *(_DWORD *)(a2 + 36);
        unsigned int v68 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v68;
          if (v67 <= v68)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA38);
          }
          uint64_t v70 = *(void *)(a2 + 24);
          uint64_t v71 = v70 + 32 * v68;
          unsigned int v72 = *(_DWORD *)v71;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v71;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v71 + 4);
          unsigned int v73 = *(_DWORD *)v71;
          if (v73 > 8) {
            goto LABEL_102;
          }
          if (((1 << v73) & 0x38) != 0) {
            break;
          }
          if (((1 << v73) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v70 + 32 * v68 + 24);
          }
          else if (v73 == 8)
          {
            *(void *)(a2 + 80) = 0;
            uint8x8_t v74 = *(_DWORD **)(v70 + 32 * v68 + 24);
            if (v74) {
              *v74 += 2;
            }
            goto LABEL_111;
          }
LABEL_102:
          int v69 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v69;
          ++v68;
          if (v72 != 82)
          {
            unsigned int v106 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v69 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Unsigned32Literal,WGSL::SourceSpan,long long &,void>(v106, &v138, &v142);
            goto LABEL_162;
          }
        }
        uint8x8_t v74 = *(_DWORD **)(v70 + 32 * v68 + 24);
LABEL_111:
        *(void *)(a2 + 80) = v74;
        goto LABEL_102;
      case 6:
        *(_DWORD *)uint64_t v141 = 6;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v75 = *(_DWORD *)(a2 + 36);
        unsigned int v76 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v76;
          if (v75 <= v76)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA40);
          }
          uint64_t v78 = *(void *)(a2 + 24);
          uint64_t v79 = v78 + 32 * v76;
          unsigned int v80 = *(_DWORD *)v79;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v79;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v79 + 4);
          unsigned int v81 = *(_DWORD *)v79;
          if (v81 > 8) {
            goto LABEL_114;
          }
          if (((1 << v81) & 0x38) != 0) {
            break;
          }
          if (((1 << v81) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v78 + 32 * v76 + 24);
          }
          else if (v81 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v82 = *(_DWORD **)(v78 + 32 * v76 + 24);
            if (v82) {
              *v82 += 2;
            }
            goto LABEL_123;
          }
LABEL_114:
          int v77 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v77;
          ++v76;
          if (v80 != 82)
          {
            int v107 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v77 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Float32Literal,WGSL::SourceSpan,double &,void>(v107, &v138, (double *)&v142);
            goto LABEL_162;
          }
        }
        unsigned int v82 = *(_DWORD **)(v78 + 32 * v76 + 24);
LABEL_123:
        *(void *)(a2 + 80) = v82;
        goto LABEL_114;
      case 7:
        *(_DWORD *)uint64_t v141 = 7;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v40 = *(_DWORD *)(a2 + 36);
        unsigned int v41 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v41;
          if (v40 <= v41)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA20);
          }
          uint64_t v43 = *(void *)(a2 + 24);
          uint64_t v44 = v43 + 32 * v41;
          unsigned int v45 = *(_DWORD *)v44;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v44;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v44 + 4);
          unsigned int v46 = *(_DWORD *)v44;
          if (v46 > 8) {
            goto LABEL_59;
          }
          if (((1 << v46) & 0x38) != 0) {
            break;
          }
          if (((1 << v46) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v43 + 32 * v41 + 24);
          }
          else if (v46 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int8x16_t v47 = *(_DWORD **)(v43 + 32 * v41 + 24);
            if (v47) {
              *v47 += 2;
            }
            goto LABEL_68;
          }
LABEL_59:
          int v42 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v42;
          ++v41;
          if (v45 != 82)
          {
            int8x16x2_t v102 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v42 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Float16Literal,WGSL::SourceSpan,double &,void>(v102, &v138, &v142);
            goto LABEL_162;
          }
        }
        int8x16_t v47 = *(_DWORD **)(v43 + 32 * v41 + 24);
LABEL_68:
        *(void *)(a2 + 80) = v47;
        goto LABEL_59;
      case 8:
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v141, a2);
        if (v143)
        {
          if (v143 != 1) {
            goto LABEL_216;
          }
          uint64_t v56 = *(void **)v141;
          if (*(void *)v141) {
            **(_DWORD **)v141 += 2;
          }
          long long v132 = *(_OWORD *)&v141[8];
          long long v131 = v56;
          int v133 = 1;
          uint64_t v57 = v143;
          if (v143 == -1) {
            goto LABEL_163;
          }
LABEL_206:
          ((void (*)(const char **, unsigned char *))off_1ECABDF80[v57])(&v138, v141);
          goto LABEL_163;
        }
        if (MEMORY[0x18530AEB0](v142, "array", 5))
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseArrayType((uint64_t)&v138, a2);
        }
        else
        {
          if ((*(_DWORD *)(a2 + 56) | 0x10) != 0x53)
          {
            uint64_t v129 = *(void **)(a2 + 8);
            unsigned int v130 = *(_DWORD *)(a2 + 96) - v5;
            unsigned int v138 = v4;
            *(void *)&long long v139 = __PAIR64__(v130, v5);
            long long v131 = WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v129, &v138, (uint64_t)v141);
            int v133 = 0;
            uint64_t v57 = v143;
            if (v143 == -1) {
              goto LABEL_163;
            }
            goto LABEL_206;
          }
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeNameAfterIdentifier((uint64_t)&v138, a2, (uint64_t)v141, v4, v5);
        }
        uint64_t v120 = v140;
        if (v140)
        {
          if (v140 != 1) {
            goto LABEL_216;
          }
          int v121 = v138;
          if (v138) {
            *(_DWORD *)v138 += 2;
          }
          long long v132 = v139;
          long long v131 = v121;
          int v133 = 1;
          goto LABEL_205;
        }
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseArgumentExpressionList(&v135, a2);
        if (v137)
        {
          if (v137 != 1) {
            goto LABEL_216;
          }
          uint64_t v123 = v135;
          if (v135) {
            *(_DWORD *)v135 += 2;
          }
          long long v132 = v136;
          long long v131 = v123;
          int v124 = 1;
          int v133 = 1;
        }
        else
        {
          uint64_t v125 = *(void **)(a2 + 8);
          unsigned int v126 = *(_DWORD *)(a2 + 96) - v5;
          *(void *)&long long v134 = v4;
          *((void *)&v134 + 1) = __PAIR64__(v126, v5);
          long long v131 = WGSL::AST::Builder::construct<WGSL::AST::CallExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(v125, &v134, (uint64_t *)&v138, (uint64_t *)&v135);
          int v133 = 0;
          int v124 = v137;
          if (v137 == -1) {
            goto LABEL_205;
          }
        }
        ((void (*)(long long *, const char **))off_1ECABE040[v124])(&v134, &v135);
LABEL_205:
        ((void (*)(const char **, const char **))off_1ECABE170[v120])(&v135, &v138);
        uint64_t v57 = v143;
        if (v143 == -1) {
          goto LABEL_163;
        }
        goto LABEL_206;
      case 22:
        unsigned int v58 = *(_DWORD *)(a2 + 36);
        unsigned int v59 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v59;
          if (v58 <= v59)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA30);
          }
          uint64_t v61 = *(void *)(a2 + 24);
          uint64_t v62 = v61 + 32 * v59;
          unsigned int v63 = *(_DWORD *)v62;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v62;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v62 + 4);
          unsigned int v64 = *(_DWORD *)v62;
          if (v64 > 8) {
            goto LABEL_89;
          }
          if (((1 << v64) & 0x38) != 0) {
            break;
          }
          if (((1 << v64) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v61 + 32 * v59 + 24);
          }
          else if (v64 == 8)
          {
            *(void *)(a2 + 80) = 0;
            char v65 = *(_DWORD **)(v61 + 32 * v59 + 24);
            if (v65) {
              *v65 += 2;
            }
            goto LABEL_98;
          }
LABEL_89:
          int v60 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v60;
          ++v59;
          if (v63 != 82)
          {
            uint64_t v105 = *(void **)(a2 + 8);
            *(void *)uint64_t v141 = v4;
            *(_DWORD *)&v141[8] = v5;
            *(_DWORD *)&v141[12] = v60 - v5;
            LOBYTE(v138) = 0;
LABEL_161:
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::BoolLiteral,WGSL::SourceSpan,BOOL,void>(v105, v141, (char *)&v138);
LABEL_162:
            long long v131 = v101;
            int v133 = 0;
LABEL_163:
            if (!v133)
            {
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parsePostfixExpression(a1, a2, v131, (unint64_t)v4, v5);
              int v111 = 0;
LABEL_169:
              ((void (*)(unsigned char *, void **))off_1ECABE170[v111])(v141, &v131);
              goto LABEL_44;
            }
            if (v133 == 1)
            {
              int v110 = v131;
              if (v131) {
                *(_DWORD *)v131 += 2;
              }
              *(_OWORD *)(a1 + 8) = v132;
              *(void *)a1 = v110;
              int v111 = 1;
              *(_DWORD *)(a1 + 24) = 1;
              goto LABEL_169;
            }
LABEL_216:
            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_217:
            __break(0xC471u);
            JUMPOUT(0x1825ACA00);
          }
        }
        char v65 = *(_DWORD **)(v61 + 32 * v59 + 24);
LABEL_98:
        *(void *)(a2 + 80) = v65;
        goto LABEL_89;
      case 33:
        unsigned int v92 = *(_DWORD *)(a2 + 36);
        unsigned int v93 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v93;
          if (v92 <= v93)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA50);
          }
          uint64_t v95 = *(void *)(a2 + 24);
          uint64_t v96 = v95 + 32 * v93;
          unsigned int v97 = *(_DWORD *)v96;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v96;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v96 + 4);
          unsigned int v98 = *(_DWORD *)v96;
          if (v98 > 8) {
            goto LABEL_138;
          }
          if (((1 << v98) & 0x38) != 0) {
            break;
          }
          if (((1 << v98) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v95 + 32 * v93 + 24);
          }
          else if (v98 == 8)
          {
            *(void *)(a2 + 80) = 0;
            uint64_t v99 = *(_DWORD **)(v95 + 32 * v93 + 24);
            if (v99) {
              *v99 += 2;
            }
            goto LABEL_147;
          }
LABEL_138:
          int v94 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v94;
          ++v93;
          if (v97 != 82)
          {
            uint64_t v105 = *(void **)(a2 + 8);
            *(void *)uint64_t v141 = v4;
            *(_DWORD *)&v141[8] = v5;
            *(_DWORD *)&v141[12] = v94 - v5;
            LOBYTE(v138) = 1;
            goto LABEL_161;
          }
        }
        uint64_t v99 = *(_DWORD **)(v95 + 32 * v93 + 24);
LABEL_147:
        *(void *)(a2 + 80) = v99;
        goto LABEL_138;
      case 67:
        unsigned int v83 = *(_DWORD *)(a2 + 36);
        uint8x8_t v84 = (_OWORD *)(a2 + 60);
        unsigned int v85 = *(_DWORD *)(a2 + 40) + 1;
        break;
      default:
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        unint64_t v66 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
        *(void *)&long long v132 = v4;
        *((void *)&v132 + 1) = v66;
        int v133 = 1;
        goto LABEL_163;
    }
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v85;
      if (v83 <= v85)
      {
        __break(0xC471u);
        JUMPOUT(0x1825ACA48);
      }
      uint64_t v87 = *(void *)(a2 + 24);
      uint64_t v88 = v87 + 32 * v85;
      unsigned int v89 = *(_DWORD *)v88;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v88;
      _OWORD *v84 = *(_OWORD *)(v88 + 4);
      unsigned int v90 = *(_DWORD *)v88;
      if (v90 > 8) {
        goto LABEL_126;
      }
      if (((1 << v90) & 0x38) != 0) {
        break;
      }
      if (((1 << v90) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v87 + 32 * v85 + 24);
      }
      else if (v90 == 8)
      {
        *(void *)(a2 + 80) = 0;
        char v91 = *(_DWORD **)(v87 + 32 * v85 + 24);
        if (v91) {
          *v91 += 2;
        }
        goto LABEL_135;
      }
LABEL_126:
      int v86 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v86;
      ++v85;
      if (v89 != 82)
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression(v141, a2);
        uint64_t v108 = v142;
        if (v142)
        {
          if (v142 != 1) {
            goto LABEL_216;
          }
          unsigned int v109 = *(void **)v141;
          if (*(void *)v141) {
            **(_DWORD **)v141 += 2;
          }
          long long v132 = *(_OWORD *)&v141[8];
LABEL_197:
          long long v131 = v109;
          int v133 = v108;
LABEL_213:
          ((void (*)(const char **, unsigned char *))off_1ECABE170[v108])(&v138, v141);
          goto LABEL_163;
        }
        if (*(_DWORD *)(a2 + 56) != 68)
        {
          WGSL::toString();
          WGSL::toString();
          unsigned int v138 = "Expected a ";
          *(void *)&long long v139 = 12;
          int v135 = ", but got a ";
          *(void *)&long long v136 = 13;
          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v138, (uint64_t *)&v145, (uint64_t)&v135, (uint64_t *)&v144, &v134);
          if (!(void)v134)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA60);
          }
          unint64_t v122 = v144;
          int16x8_t v144 = 0;
          if (v122)
          {
            if (*v122 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v122 -= 2;
            }
          }
          char v127 = v145;
          unint64_t v145 = 0;
          if (v127)
          {
            if (*v127 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v127 -= 2;
            }
          }
          unint64_t v128 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          long long v131 = (void *)v134;
          *(void *)&long long v132 = v4;
          *((void *)&v132 + 1) = v128;
          int v133 = 1;
          goto LABEL_213;
        }
        unsigned int v112 = *(_DWORD *)(a2 + 36);
        unsigned int v113 = *(_DWORD *)(a2 + 40) + 1;
        while (2)
        {
          *(_DWORD *)(a2 + 40) = v113;
          if (v112 <= v113)
          {
            __break(0xC471u);
            JUMPOUT(0x1825ACA58);
          }
          uint64_t v115 = *(void *)(a2 + 24);
          uint64_t v116 = v115 + 32 * v113;
          unsigned int v117 = *(_DWORD *)v116;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v116;
          _OWORD *v84 = *(_OWORD *)(v116 + 4);
          unsigned int v118 = *(_DWORD *)v116;
          if (v118 <= 8)
          {
            if (((1 << v118) & 0x38) != 0)
            {
              int v119 = *(_DWORD **)(v115 + 32 * v113 + 24);
              goto LABEL_184;
            }
            if (((1 << v118) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v115 + 32 * v113 + 24);
            }
            else if (v118 == 8)
            {
              *(void *)(a2 + 80) = 0;
              int v119 = *(_DWORD **)(v115 + 32 * v113 + 24);
              if (v119) {
                *v119 += 2;
              }
LABEL_184:
              *(void *)(a2 + 80) = v119;
            }
          }
          int v114 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v114;
          ++v113;
          if (v117 != 82)
          {
            unsigned int v109 = *(void **)v141;
            goto LABEL_197;
          }
          continue;
        }
      }
    }
    char v91 = *(_DWORD **)(v87 + 32 * v85 + 24);
LABEL_135:
    *(void *)(a2 + 80) = v91;
    goto LABEL_126;
  }
  char v11 = 0;
  switch(v9)
  {
    case 0:
      goto LABEL_25;
    case 5:
      char v11 = 4;
      goto LABEL_25;
    case 23:
      char v11 = 3;
      goto LABEL_25;
    case 40:
      char v11 = 2;
      goto LABEL_25;
    case 42:
      char v11 = 1;
LABEL_25:
      LOBYTE(v135) = v11;
      unsigned int v20 = *(_DWORD *)(a2 + 36);
      unsigned int v21 = *(_DWORD *)(a2 + 40) + 1;
      break;
    default:
      goto LABEL_217;
  }
  do
  {
    *(_DWORD *)(a2 + 40) = v21;
    if (v20 <= v21)
    {
      __break(0xC471u);
      JUMPOUT(0x1825ACA08);
    }
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v24 = v23 + 32 * v21;
    unsigned int v25 = *(_DWORD *)v24;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v24;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v24 + 4);
    unsigned int v26 = *(_DWORD *)v24;
    if (v26 <= 8)
    {
      if (((1 << v26) & 0x38) != 0)
      {
        unsigned int v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
LABEL_36:
        *(void *)(a2 + 80) = v27;
        goto LABEL_27;
      }
      if (((1 << v26) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v23 + 32 * v21 + 24);
        goto LABEL_27;
      }
      if (v26 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        if (v27) {
          *v27 += 2;
        }
        goto LABEL_36;
      }
    }
LABEL_27:
    int v22 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v22;
    ++v21;
  }
  while (v25 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression(v141, a2);
  if (!v142)
  {
    uint64_t v30 = *(void **)(a2 + 8);
    unsigned int v31 = *(_DWORD *)(a2 + 96) - v5;
    unsigned int v138 = v4;
    *(void *)&long long v139 = __PAIR64__(v31, v5);
    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::UnaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::UnaryOperation &,void>(v30, &v138, v141, (char *)&v135);
    *(_DWORD *)(a1 + 24) = 0;
    int v29 = v142;
    if (v142 != -1) {
      goto LABEL_43;
    }
    goto LABEL_44;
  }
  if (v142 != 1) {
    goto LABEL_216;
  }
  uint64_t v28 = *(void *)v141;
  if (*(void *)v141) {
    **(_DWORD **)v141 += 2;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v141[8];
  *(void *)a1 = v28;
  int v29 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_43:
  ((void (*)(const char **, unsigned char *))off_1ECABE170[v29])(&v138, v141);
LABEL_44:
  *(_DWORD *)(a2 + 44) = v6;
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAdditiveExpressionPostUnary(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a2 + 88);
  unsigned int v29 = *(_DWORD *)(a2 + 96);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseMultiplicativeExpressionPostUnary(&v38, a2, a3);
  uint64_t v7 = v40;
  if (!v40)
  {
    *a3 = v38;
    int v9 = (_OWORD *)(a1 + 8);
    uint64_t v28 = v7;
LABEL_10:
    int v12 = *(_DWORD *)(a2 + 56);
    if ((v12 - 59) > 0x11 || ((1 << (v12 - 59)) & 0x28809) == 0)
    {
      *(void *)a1 = *a3;
      *(_DWORD *)(a1 + 24) = 0;
LABEL_41:
      uint64_t v7 = v28;
      return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v7])(&v34, &v38);
    }
    uint64_t result = WGSL::toBinaryOperation(v12);
    char v37 = result;
    unsigned int v15 = *(_DWORD *)(a2 + 36);
    unsigned int v16 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v16;
      if (v15 <= v16) {
        goto LABEL_44;
      }
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v19 = v18 + 32 * v16;
      unsigned int v20 = *(_DWORD *)v19;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v19;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v19 + 4);
      unsigned int v21 = *(_DWORD *)v19;
      if (v21 > 8) {
        goto LABEL_16;
      }
      if (((1 << v21) & 0x38) != 0) {
        break;
      }
      if (((1 << v21) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v18 + 32 * v16 + 24);
      }
      else if (v21 == 8)
      {
        *(void *)(a2 + 80) = 0;
        int v22 = *(_DWORD **)(v18 + 32 * v16 + 24);
        if (v22) {
          *v22 += 2;
        }
        goto LABEL_25;
      }
LABEL_16:
      int v17 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v17;
      ++v16;
      if (v20 != 82)
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression(&v34, a2);
        if (v36)
        {
          if (v36 != 1) {
            goto LABEL_43;
          }
          uint64_t v23 = v34;
          if (v34) {
            *v34 += 2;
          }
          *int v9 = v35;
          *(void *)a1 = v23;
          int v10 = 1;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v11 = 1;
LABEL_8:
          ((void (*)(_DWORD **, _DWORD **))off_1ECABE170[v11])(&v31, &v34);
        }
        else
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseMultiplicativeExpressionPostUnary(&v31, a2, &v34);
          int v10 = v33;
          if (v33)
          {
            if (v33 != 1) {
              goto LABEL_43;
            }
            uint64_t v24 = v31;
            if (v31) {
              *v31 += 2;
            }
            *int v9 = v32;
            *(void *)a1 = v24;
            *(_DWORD *)(a1 + 24) = 1;
            uint64_t v25 = 1;
          }
          else
          {
            unsigned int v26 = *(void **)(a2 + 8);
            unsigned int v27 = *(_DWORD *)(a2 + 96) - v29;
            *(void *)&long long v30 = v6;
            *((void *)&v30 + 1) = __PAIR64__(v27, v29);
            *a3 = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v26, &v30, a3, &v31, &v37);
            uint64_t v25 = v33;
            if (v33 == -1)
            {
              uint64_t v11 = v36;
              if (v36 != -1) {
                goto LABEL_8;
              }
              goto LABEL_9;
            }
          }
          ((void (*)(long long *, _DWORD **))off_1ECABE170[v25])(&v30, &v31);
          uint64_t v11 = v36;
          if (v36 != -1) {
            goto LABEL_8;
          }
        }
LABEL_9:
        if (v10) {
          goto LABEL_41;
        }
        goto LABEL_10;
      }
    }
    int v22 = *(_DWORD **)(v18 + 32 * v16 + 24);
LABEL_25:
    *(void *)(a2 + 80) = v22;
    goto LABEL_16;
  }
  if (v40 == 1)
  {
    int v8 = v38;
    if (v38) {
      *v38 += 2;
    }
    *(_OWORD *)(a1 + 8) = v39;
    *(void *)a1 = v8;
    *(_DWORD *)(a1 + 24) = 1;
    return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v7])(&v34, &v38);
  }
LABEL_43:
  uint64_t result = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_44:
  __break(0xC471u);
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ArrayTypeExpression,WGSL::SourceSpan,WGSL::AST::Expression *&,WGSL::AST::Expression *&,void>(void *this, _OWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x4FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  uint64_t v9 = *a3;
  uint64_t v10 = *a4;
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)uint64_t v8 = &unk_1ECABD308;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = v10;
  *v7 += 80;
  unint64_t v11 = *((unsigned int *)v7 + 11);
  if (v11 != *((_DWORD *)v7 + 10))
  {
    uint64_t v18 = (void *)(v7[4] + 8 * v11);
LABEL_17:
    *uint64_t v18 = v8;
    *((_DWORD *)v7 + 11) = v11 + 1;
    return (void *)v8;
  }
  unint64_t v12 = v11 + (v11 >> 2);
  if (v12 >= 0x10) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = 16;
  }
  if (v13 <= v11 + 1) {
    unint64_t v14 = v11 + 1;
  }
  else {
    unint64_t v14 = v13;
  }
  if (!(v14 >> 29))
  {
    unsigned int v15 = (void *)v7[4];
    unsigned int v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
    *((_DWORD *)v7 + 10) = v14;
    v7[4] = v16;
    memcpy(v16, v15, 8 * v11);
    if (v15)
    {
      if ((void *)v7[4] == v15)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v15, v17);
    }
    unint64_t v11 = *((unsigned int *)v7 + 11);
    uint64_t v18 = (void *)(v7[4] + 8 * v11);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::UnaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::UnaryOperation &,void>(void *this, _OWORD *a2, void *a3, char *a4)
{
  uint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x4FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  char v9 = *a4;
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)uint64_t v8 = off_1ECABC248;
  *(void *)(v8 + 64) = *a3;
  *(unsigned char *)(v8 + 72) = v9;
  *v7 += 80;
  unint64_t v10 = *((unsigned int *)v7 + 11);
  if (v10 != *((_DWORD *)v7 + 10))
  {
    int v17 = (void *)(v7[4] + 8 * v10);
LABEL_17:
    *int v17 = v8;
    *((_DWORD *)v7 + 11) = v10 + 1;
    return (void *)v8;
  }
  unint64_t v11 = v10 + (v10 >> 2);
  if (v11 >= 0x10) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = 16;
  }
  if (v12 <= v10 + 1) {
    unint64_t v13 = v10 + 1;
  }
  else {
    unint64_t v13 = v12;
  }
  if (!(v13 >> 29))
  {
    unint64_t v14 = (void *)v7[4];
    unsigned int v15 = (void *)WTF::fastMalloc((WTF *)(8 * v13));
    *((_DWORD *)v7 + 10) = v13;
    v7[4] = v15;
    memcpy(v15, v14, 8 * v10);
    if (v14)
    {
      if ((void *)v7[4] == v14)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v14, v16);
    }
    unint64_t v10 = *((unsigned int *)v7 + 11);
    int v17 = (void *)(v7[4] + 8 * v10);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

__n128 WGSL::Parser<WGSL::Lexer<unsigned char>>::parsePostfixExpression(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, unsigned int a5)
{
  unsigned int v6 = a4;
  uint64_t v7 = a3;
  uint64_t v47 = *(unsigned int *)(a2 + 96);
  uint64_t v48 = *(void *)(a2 + 88);
  unint64_t v10 = (_OWORD *)(a2 + 60);
  unsigned int v58 = a3;
  unint64_t v11 = HIDWORD(a4);
  unsigned int v49 = (__n128 *)(a1 + 8);
  while (2)
  {
    while (1)
    {
      int v15 = *(_DWORD *)(a2 + 56);
      if (v15 == 69) {
        break;
      }
      if (v15 != 45)
      {
        *(void *)a1 = v7;
        *(_DWORD *)(a1 + 24) = 0;
        return result;
      }
      unsigned int v16 = *(_DWORD *)(a2 + 36);
      unsigned int v17 = *(_DWORD *)(a2 + 40) + 1;
      do
      {
        *(_DWORD *)(a2 + 40) = v17;
        if (v16 <= v17) {
          goto LABEL_80;
        }
        uint64_t v19 = *(void *)(a2 + 24);
        uint64_t v20 = v19 + 32 * v17;
        unsigned int v21 = *(_DWORD *)v20;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v20;
        *unint64_t v10 = *(_OWORD *)(v20 + 4);
        unsigned int v22 = *(_DWORD *)v20;
        if (v22 <= 8)
        {
          if (((1 << v22) & 0x38) != 0)
          {
            uint64_t v23 = *(_DWORD **)(v19 + 32 * v17 + 24);
LABEL_18:
            *(void *)(a2 + 80) = v23;
            goto LABEL_9;
          }
          if (((1 << v22) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v19 + 32 * v17 + 24);
            goto LABEL_9;
          }
          if (v22 == 8)
          {
            *(void *)(a2 + 80) = 0;
            uint64_t v23 = *(_DWORD **)(v19 + 32 * v17 + 24);
            if (v23) {
              *v23 += 2;
            }
            goto LABEL_18;
          }
        }
LABEL_9:
        int v18 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v18;
        ++v17;
      }
      while (v21 == 82);
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression(&v55, a2);
      if (v57)
      {
        if (v57 == 1)
        {
          unsigned int v33 = v55;
          if (v55) {
            *v55 += 2;
          }
          char v13 = 0;
          __n128 result = v56;
          *unsigned int v49 = v56;
          *(void *)a1 = v33;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v14 = v57;
          if (v57 == -1) {
            goto LABEL_4;
          }
          goto LABEL_3;
        }
LABEL_76:
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_80:
        __break(0xC471u);
        JUMPOUT(0x1825AD76CLL);
      }
      if (*(_DWORD *)(a2 + 56) != 46)
      {
        *(_DWORD *)unsigned int v53 = *(_DWORD *)(a2 + 56);
        int v54 = 1;
        WGSL::toString();
        if (v54 != 1) {
          goto LABEL_76;
        }
        WGSL::toString();
        v60[0] = (unint64_t)"Expected a ";
        v60[1] = 12;
        v59[0] = ", but got a ";
        v59[1] = 13;
        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(v60, (uint64_t *)&v51, (uint64_t)v59, (uint64_t *)&v50, &v52);
        if (!v52) {
          goto LABEL_80;
        }
        int v42 = v50;
        int v50 = 0;
        if (v42)
        {
          if (*v42 != 2)
          {
            *v42 -= 2;
            goto LABEL_58;
          }
          WTF::StringImpl::destroy();
          uint64_t v43 = v51;
          uint64_t v51 = 0;
          if (v43)
          {
LABEL_61:
            if (*v43 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v43 -= 2;
            }
          }
        }
        else
        {
LABEL_58:
          uint64_t v43 = v51;
          uint64_t v51 = 0;
          if (v43) {
            goto LABEL_61;
          }
        }
        unint64_t v44 = v47 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v47) << 32);
        *(void *)a1 = v52;
        *(void *)(a1 + 8) = v48;
        *(void *)(a1 + 16) = v44;
        *(_DWORD *)(a1 + 24) = 1;
        if (v54 != -1) {
          ((void (*)(unint64_t *, unsigned char *))off_1ECABDF90[v54])(v60, v53);
        }
        char v13 = 0;
        uint64_t v14 = v57;
        if (v57 == -1) {
          goto LABEL_4;
        }
LABEL_3:
        ((void (*)(unsigned char *, _DWORD **))off_1ECABE170[v14])(v53, &v55);
        goto LABEL_4;
      }
      *(_OWORD *)&v53[4] = *v10;
      *(_DWORD *)unsigned int v53 = 46;
      int v54 = 0;
      unsigned int v34 = *(_DWORD *)(a2 + 36);
      unsigned int v35 = *(_DWORD *)(a2 + 40) + 1;
      while (2)
      {
        *(_DWORD *)(a2 + 40) = v35;
        if (v34 <= v35)
        {
          __break(0xC471u);
          JUMPOUT(0x1825AD77CLL);
        }
        uint64_t v37 = *(void *)(a2 + 24);
        uint64_t v38 = v37 + 32 * v35;
        unsigned int v39 = *(_DWORD *)v38;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
        *unint64_t v10 = *(_OWORD *)(v38 + 4);
        unsigned int v40 = *(_DWORD *)v38;
        if (v40 <= 8)
        {
          if (((1 << v40) & 0x38) != 0)
          {
            unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
            goto LABEL_52;
          }
          if (((1 << v40) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v37 + 32 * v35 + 24);
          }
          else if (v40 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
            if (v41) {
              *v41 += 2;
            }
LABEL_52:
            *(void *)(a2 + 80) = v41;
          }
        }
        int v36 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v36;
        ++v35;
        if (v39 == 82) {
          continue;
        }
        break;
      }
      *(_DWORD *)unsigned int v53 = v6;
      *(_DWORD *)&v53[4] = v11;
      *(_DWORD *)&v53[8] = a5;
      *(_DWORD *)&v53[12] = v36 - a5;
      uint64_t v7 = WGSL::AST::Builder::construct<WGSL::AST::IndexAccessExpression,WGSL::SourceSpan &,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,void>(*(void **)(a2 + 8), v53, &v58, &v55);
      unsigned int v58 = v7;
      char v13 = 1;
      uint64_t v14 = v57;
      if (v57 != -1) {
        goto LABEL_3;
      }
LABEL_4:
      if ((v13 & 1) == 0) {
        return result;
      }
    }
    unsigned int v24 = *(_DWORD *)(a2 + 36);
    unsigned int v25 = *(_DWORD *)(a2 + 40) + 1;
    do
    {
      *(_DWORD *)(a2 + 40) = v25;
      if (v24 <= v25)
      {
        __break(0xC471u);
        JUMPOUT(0x1825AD774);
      }
      uint64_t v27 = *(void *)(a2 + 24);
      uint64_t v28 = v27 + 32 * v25;
      unsigned int v29 = *(_DWORD *)v28;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v28;
      *unint64_t v10 = *(_OWORD *)(v28 + 4);
      unsigned int v30 = *(_DWORD *)v28;
      if (v30 <= 8)
      {
        if (((1 << v30) & 0x38) != 0)
        {
          unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
LABEL_30:
          *(void *)(a2 + 80) = v31;
          goto LABEL_21;
        }
        if (((1 << v30) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v27 + 32 * v25 + 24);
          goto LABEL_21;
        }
        if (v30 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
          if (v31) {
            *v31 += 2;
          }
          goto LABEL_30;
        }
      }
LABEL_21:
      int v26 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v26;
      ++v25;
    }
    while (v29 == 82);
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v53, a2);
    if (!v54)
    {
      unsigned int v32 = *(_DWORD *)(a2 + 96) - a5;
      int v55 = (_DWORD *)__PAIR64__(v11, v6);
      v56.n128_u64[0] = __PAIR64__(v32, a5);
      uint64_t v7 = WGSL::AST::Builder::construct<WGSL::AST::FieldAccessExpression,WGSL::SourceSpan &,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::Identifier,void>(*(void **)(a2 + 8), &v55, &v58, (uint64_t)v53);
      unsigned int v58 = v7;
      if (v54 != -1) {
        ((void (*)(_DWORD **, unsigned char *))off_1ECABDF80[v54])(&v55, v53);
      }
      continue;
    }
    break;
  }
  if (v54 != 1) {
    goto LABEL_76;
  }
  unsigned int v45 = *(_DWORD **)v53;
  if (*(void *)v53)
  {
    int v46 = **(_DWORD **)v53;
    **(_DWORD **)v53 += 2;
    __n128 result = *(__n128 *)&v53[8];
    *unsigned int v49 = *(__n128 *)&v53[8];
    *(void *)a1 = v45;
    *(_DWORD *)(a1 + 24) = 1;
    *(void *)unsigned int v53 = 0;
    if (v46) {
      _DWORD *v45 = v46;
    }
    else {
      WTF::StringImpl::destroy();
    }
  }
  else
  {
    __n128 result = *(__n128 *)&v53[8];
    *unsigned int v49 = *(__n128 *)&v53[8];
    *(void *)a1 = 0;
    *(_DWORD *)(a1 + 24) = 1;
  }
  return result;
}

void WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression(uint64_t a1, uint64_t a2)
{
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression((uint64_t)&v31, a2);
  if (!v33)
  {
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 - 36) <= 0x2C && ((1 << (v5 - 36)) & 0x100010000001) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 96);
      uint64_t v27 = *(int **)(a2 + 88);
      char v37 = WGSL::toBinaryOperation(v5);
      int v8 = *(_DWORD *)(a2 + 56);
LABEL_14:
      if (*(_DWORD *)(a2 + 56) == v8)
      {
        unsigned int v10 = *(_DWORD *)(a2 + 36);
        unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v11;
          if (v10 <= v11) {
            goto LABEL_63;
          }
          uint64_t v13 = *(void *)(a2 + 24);
          uint64_t v14 = v13 + 32 * v11;
          unsigned int v15 = *(_DWORD *)v14;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
          unsigned int v16 = *(_DWORD *)v14;
          if (v16 > 8) {
            goto LABEL_17;
          }
          if (((1 << v16) & 0x38) != 0) {
            break;
          }
          if (((1 << v16) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
          }
          else if (v16 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
            if (v17) {
              *v17 += 2;
            }
            goto LABEL_26;
          }
LABEL_17:
          int v12 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v12;
          ++v11;
          if (v15 != 82)
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression((uint64_t)&v34, a2);
            unsigned int v18 = v36;
            if (v36)
            {
              if (v36 != 1) {
                goto LABEL_62;
              }
              uint64_t v19 = v34;
              if (v34) {
                *v34 += 2;
              }
              *(_OWORD *)(a1 + 8) = v35;
              *(void *)a1 = v19;
              *(_DWORD *)(a1 + 24) = 1;
              uint64_t v9 = 1;
LABEL_12:
              ((void (*)(int **, int **))off_1ECABE170[v9])(&v28, &v34);
            }
            else
            {
              uint64_t v20 = *(void **)(a2 + 8);
              unsigned int v21 = *(_DWORD *)(a2 + 96) - v7;
              uint64_t v28 = v27;
              *(void *)&long long v29 = __PAIR64__(v21, v7);
              unsigned int v31 = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v20, &v28, &v31, &v34, &v37);
              uint64_t v9 = v36;
              if (v36 != -1) {
                goto LABEL_12;
              }
            }
            if (v18) {
              goto LABEL_57;
            }
            goto LABEL_14;
          }
        }
        unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_26:
        *(void *)(a2 + 80) = v17;
        goto LABEL_17;
      }
      *(void *)a1 = v31;
      *(_DWORD *)(a1 + 24) = 0;
LABEL_57:
      if (v33 != -1) {
        ((void (*)(int **, void **))off_1ECABE170[v33])(&v34, &v31);
      }
      return;
    }
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseRelationalExpressionPostUnary((uint64_t)&v34, a2, &v31);
    if (v36)
    {
      if (v36 != 1) {
        goto LABEL_62;
      }
      unsigned int v22 = v34;
      if (v34) {
        *v34 += 2;
      }
      *(_OWORD *)(a1 + 8) = v35;
      *(void *)a1 = v22;
LABEL_39:
      *(_DWORD *)(a1 + 24) = 1;
      uint64_t v23 = v36;
      if (v36 == -1) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    int v24 = *(_DWORD *)(a2 + 56);
    if (v24 == 37)
    {
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShortCircuitExpression((uint64_t)&v28, a2, (uint64_t *)&v34, 37, 16);
      if (v30)
      {
        if (v30 != 1) {
          goto LABEL_62;
        }
        unsigned int v25 = v28;
        if (v28)
        {
LABEL_46:
          int v26 = *v25;
          *v25 += 2;
          *(_OWORD *)(a1 + 8) = v29;
          *(void *)a1 = v25;
          *(_DWORD *)(a1 + 24) = 1;
          if (v26)
          {
            int *v25 = v26;
            uint64_t v23 = v36;
            if (v36 == -1) {
              goto LABEL_57;
            }
          }
          else
          {
            WTF::StringImpl::destroy();
            uint64_t v23 = v36;
            if (v36 == -1) {
              goto LABEL_57;
            }
          }
LABEL_56:
          ((void (*)(int **, int **))off_1ECABE170[v23])(&v28, &v34);
          goto LABEL_57;
        }
LABEL_52:
        *(_OWORD *)(a1 + 8) = v29;
        *(void *)a1 = 0;
        goto LABEL_39;
      }
    }
    else
    {
      if (v24 != 65)
      {
        *(void *)a1 = v34;
        *(_DWORD *)(a1 + 24) = 0;
        uint64_t v23 = v36;
        if (v36 == -1) {
          goto LABEL_57;
        }
        goto LABEL_56;
      }
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShortCircuitExpression((uint64_t)&v28, a2, (uint64_t *)&v34, 65, 17);
      if (v30)
      {
        if (v30 != 1) {
          goto LABEL_62;
        }
        unsigned int v25 = v28;
        if (v28) {
          goto LABEL_46;
        }
        goto LABEL_52;
      }
    }
    unsigned int v34 = v28;
    *(void *)a1 = v28;
    *(_DWORD *)(a1 + 24) = 0;
    uint64_t v23 = v36;
    if (v36 == -1) {
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  if (v33 == 1)
  {
    uint64_t v4 = v31;
    if (v31) {
      *(_DWORD *)v31 += 2;
    }
    *(_OWORD *)(a1 + 8) = v32;
    *(void *)a1 = v4;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_57;
  }
LABEL_62:
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_63:
  __break(0xC471u);
}

_DWORD *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseArgumentExpressionList(_DWORD *result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 67)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v47 = "Expected a ";
    *(void *)&v47[8] = 12;
    unsigned int v49 = ", but got a ";
    *(void *)&long long v50 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v47, (uint64_t *)&v55, (uint64_t)&v49, (uint64_t *)&v54, v57);
    if (!v57[0])
    {
      __break(0xC471u);
      goto LABEL_90;
    }
    unsigned int v15 = v54;
    int v54 = 0;
    if (v15)
    {
      if (*v15 == 2)
      {
        WTF::StringImpl::destroy();
        __n128 result = v55;
        int v55 = 0;
        if (!result)
        {
LABEL_82:
          unint64_t v42 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)uint64_t v3 = v57[0];
          *((void *)v3 + 1) = v4;
          *((void *)v3 + 2) = v42;
          v3[6] = 1;
          return result;
        }
LABEL_79:
        if (*result == 2) {
          __n128 result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_82;
      }
      *v15 -= 2;
    }
    __n128 result = v55;
    int v55 = 0;
    if (!result) {
      goto LABEL_82;
    }
    goto LABEL_79;
  }
  unsigned int v6 = (_OWORD *)(a2 + 60);
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v8;
    if (v7 <= v8)
    {
      __break(0xC471u);
      JUMPOUT(0x1825AE190);
    }
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = v10 + 32 * v8;
    unsigned int v12 = *(_DWORD *)v11;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v11;
    *unsigned int v6 = *(_OWORD *)(v11 + 4);
    unsigned int v13 = *(_DWORD *)v11;
    if (v13 <= 8)
    {
      if (((1 << v13) & 0x38) != 0)
      {
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v14;
        goto LABEL_4;
      }
      if (((1 << v13) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v10 + 32 * v8 + 24);
        goto LABEL_4;
      }
      if (v13 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
        if (v14) {
          *v14 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v9 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v9;
    ++v8;
  }
  while (v12 == 82);
  uint64_t v43 = v5;
  unsigned int v16 = 0;
  unsigned int v17 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  do
  {
    if (*(_DWORD *)(a2 + 56) == 68)
    {
      unsigned int v34 = *(_DWORD *)(a2 + 36);
      for (unsigned int i = *(_DWORD *)(a2 + 40) + 1; ; ++i)
      {
        *(_DWORD *)(a2 + 40) = i;
        if (v34 <= i)
        {
          __break(0xC471u);
          JUMPOUT(0x1825AE198);
        }
        uint64_t v37 = *(void *)(a2 + 24);
        uint64_t v38 = v37 + 32 * i;
        unsigned int v39 = *(_DWORD *)v38;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
        *unsigned int v6 = *(_OWORD *)(v38 + 4);
        unsigned int v40 = *(_DWORD *)v38;
        if (v40 > 8) {
          goto LABEL_65;
        }
        if (((1 << v40) & 0x38) != 0) {
          break;
        }
        if (((1 << v40) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v37 + 32 * i + 24);
        }
        else if (v40 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v41 = *(_DWORD **)(v37 + 32 * i + 24);
          if (v41) {
            *v41 += 2;
          }
          goto LABEL_74;
        }
LABEL_65:
        int v36 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v36;
        if (v39 != 82)
        {
          *(void *)uint64_t v3 = v52;
          v3[2] = v53;
          v3[3] = v17;
          v3[6] = 0;
          return result;
        }
      }
      unsigned int v41 = *(_DWORD **)(v37 + 32 * i + 24);
LABEL_74:
      *(void *)(a2 + 80) = v41;
      goto LABEL_65;
    }
    __n128 result = (_DWORD *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression(&v49, a2);
    if (!v51)
    {
      if (v17 == v53)
      {
        __n128 result = (_DWORD *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v52, v17 + 1, (unint64_t)&v49);
        int v22 = HIDWORD(v53);
        unsigned int v16 = v52;
        *((void *)v52 + HIDWORD(v53)) = *(void *)result;
        unsigned int v17 = v22 + 1;
        HIDWORD(v53) = v22 + 1;
        int v23 = *(_DWORD *)(a2 + 56);
        if (v23 == 68) {
          goto LABEL_21;
        }
      }
      else
      {
        *((void *)v16 + v17) = v49;
        unsigned int v17 = ++HIDWORD(v53);
        int v23 = *(_DWORD *)(a2 + 56);
        if (v23 == 68)
        {
LABEL_21:
          char v18 = 1;
          uint64_t v19 = v51;
          if (v51 == -1) {
            continue;
          }
LABEL_22:
          __n128 result = (_DWORD *)((uint64_t (*)(unsigned char *, const char **))off_1ECABE170[v19])(v47, &v49);
          continue;
        }
      }
      if (v23 == 48)
      {
        *(_OWORD *)&v47[4] = *v6;
        *(_DWORD *)uint64_t v47 = 48;
        int v48 = 0;
        unsigned int v24 = *(_DWORD *)(a2 + 36);
        unsigned int v25 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v25;
          if (v24 <= v25) {
            goto LABEL_85;
          }
          uint64_t v27 = *(void *)(a2 + 24);
          uint64_t v28 = v27 + 32 * v25;
          unsigned int v29 = *(_DWORD *)v28;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v28;
          *unsigned int v6 = *(_OWORD *)(v28 + 4);
          unsigned int v30 = *(_DWORD *)v28;
          if (v30 <= 8)
          {
            if (((1 << v30) & 0x38) != 0)
            {
              unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
LABEL_47:
              *(void *)(a2 + 80) = v31;
              goto LABEL_38;
            }
            if (((1 << v30) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v27 + 32 * v25 + 24);
            }
            else if (v30 == 8)
            {
              *(void *)(a2 + 80) = 0;
              unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
              if (v31) {
                *v31 += 2;
              }
              goto LABEL_47;
            }
          }
LABEL_38:
          int v26 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v26;
          ++v25;
          if (v29 != 82) {
            goto LABEL_21;
          }
        }
      }
      *(_DWORD *)uint64_t v47 = v23;
      int v48 = 1;
      WGSL::toString();
      if (v48 != 1)
      {
LABEL_84:
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_85:
        __break(0xC471u);
LABEL_90:
        JUMPOUT(0x1825AE188);
      }
      WGSL::toString();
      v57[0] = (unint64_t)"Expected a ";
      v57[1] = 12;
      v56[0] = ", but got a ";
      v56[1] = 13;
      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(v57, (uint64_t *)&v45, (uint64_t)v56, (uint64_t *)&v44, &v46);
      if (!v46)
      {
        __break(0xC471u);
        JUMPOUT(0x1825AE1A0);
      }
      long long v32 = v44;
      unint64_t v44 = 0;
      if (v32)
      {
        if (*v32 == 2)
        {
          WTF::StringImpl::destroy();
          __n128 result = v45;
          unsigned int v45 = 0;
          if (!result) {
            goto LABEL_59;
          }
LABEL_56:
          if (*result == 2) {
            __n128 result = (_DWORD *)WTF::StringImpl::destroy();
          }
          else {
            *result -= 2;
          }
LABEL_59:
          unint64_t v33 = v43 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v43) << 32);
          *(void *)uint64_t v3 = v46;
          *((void *)v3 + 1) = v4;
          *((void *)v3 + 2) = v33;
          v3[6] = 1;
          if (v48 != -1) {
            __n128 result = (_DWORD *)((uint64_t (*)(unint64_t *, unsigned char *))off_1ECABDF90[v48])(v57, v47);
          }
          char v18 = 0;
          uint64_t v19 = v51;
          if (v51 != -1) {
            goto LABEL_22;
          }
          continue;
        }
        *v32 -= 2;
      }
      __n128 result = v45;
      unsigned int v45 = 0;
      if (!result) {
        goto LABEL_59;
      }
      goto LABEL_56;
    }
    if (v51 != 1) {
      goto LABEL_84;
    }
    unsigned int v21 = v49;
    if (v49) {
      *(_DWORD *)v49 += 2;
    }
    char v18 = 0;
    *(_OWORD *)(v3 + 2) = v50;
    *(void *)uint64_t v3 = v21;
    v3[6] = 1;
    uint64_t v19 = v51;
    if (v51 != -1) {
      goto LABEL_22;
    }
  }
  while ((v18 & 1) != 0);
  if (v16)
  {
    uint64_t v52 = 0;
    LODWORD(v53) = 0;
    return (_DWORD *)WTF::fastFree(v16, v20);
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::CallExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(void *this, _OWORD *a2, uint64_t *a3, uint64_t *a4)
{
  unsigned int v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x5FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)uint64_t v8 = &unk_1ECABC058;
  uint64_t v9 = *a3;
  *(void *)(v8 + 72) = 0;
  *(void *)(v8 + 80) = 0;
  *(void *)(v8 + 64) = v9;
  uint64_t v10 = *a4;
  *a4 = 0;
  *(void *)(v8 + 72) = v10;
  LODWORD(v10) = *((_DWORD *)a4 + 2);
  *((_DWORD *)a4 + 2) = 0;
  *(_DWORD *)(v8 + 80) = v10;
  LODWORD(v10) = *((_DWORD *)a4 + 3);
  *((_DWORD *)a4 + 3) = 0;
  *(_DWORD *)(v8 + 84) = v10;
  *(_WORD *)(v8 + 88) = 1792;
  *v7 += 96;
  unint64_t v11 = *((unsigned int *)v7 + 11);
  if (v11 != *((_DWORD *)v7 + 10))
  {
    char v18 = (void *)(v7[4] + 8 * v11);
LABEL_17:
    *char v18 = v8;
    *((_DWORD *)v7 + 11) = v11 + 1;
    return (void *)v8;
  }
  unint64_t v12 = v11 + (v11 >> 2);
  if (v12 >= 0x10) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = 16;
  }
  if (v13 <= v11 + 1) {
    unint64_t v14 = v11 + 1;
  }
  else {
    unint64_t v14 = v13;
  }
  if (!(v14 >> 29))
  {
    unsigned int v15 = (void *)v7[4];
    unsigned int v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
    *((_DWORD *)v7 + 10) = v14;
    v7[4] = v16;
    memcpy(v16, v15, 8 * v11);
    if (v15)
    {
      if ((void *)v7[4] == v15)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v15, v17);
    }
    unint64_t v11 = *((unsigned int *)v7 + 11);
    char v18 = (void *)(v7[4] + 8 * v11);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::BoolLiteral,WGSL::SourceSpan,BOOL,void>(void *this, _OWORD *a2, char *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  char v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABE060;
  *(unsigned char *)(v6 + 64) = v7;
  *v5 += 72;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unsigned int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::AbstractIntegerLiteral,WGSL::SourceSpan,long long &,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  uint64_t v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABD408;
  *(void *)(v6 + 64) = v7;
  *v5 += 72;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unsigned int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Signed32Literal,WGSL::SourceSpan,long long &,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  uint64_t v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABE088;
  *(_DWORD *)(v6 + 64) = v7;
  *v5 += 72;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unsigned int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Unsigned32Literal,WGSL::SourceSpan,long long &,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  uint64_t v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABC080;
  *(_DWORD *)(v6 + 64) = v7;
  *v5 += 72;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unsigned int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::AbstractFloatLiteral,WGSL::SourceSpan,double &,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  uint64_t v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABE0B0;
  *(void *)(v6 + 64) = v7;
  *v5 += 72;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unsigned int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Float32Literal,WGSL::SourceSpan,double &,void>(void *this, _OWORD *a2, double *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  float v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABE0D8;
  *(float *)(v6 + 64) = v7;
  *v5 += 72;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unsigned int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unsigned int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Float16Literal,WGSL::SourceSpan,double &,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x47uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  _D0 = *a3;
  __asm { FCVT            H0, D0 }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)uint64_t v6 = &unk_1ECABE100;
  *(_WORD *)(v6 + 64) = _D0;
  *v5 += 72;
  unint64_t v12 = *((unsigned int *)v5 + 11);
  if (v12 != *((_DWORD *)v5 + 10))
  {
    uint64_t v19 = (void *)(v5[4] + 8 * v12);
LABEL_17:
    *uint64_t v19 = v6;
    *((_DWORD *)v5 + 11) = v12 + 1;
    return (void *)v6;
  }
  unint64_t v13 = v12 + (v12 >> 2);
  if (v13 >= 0x10) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = 16;
  }
  if (v14 <= v12 + 1) {
    unint64_t v15 = v12 + 1;
  }
  else {
    unint64_t v15 = v14;
  }
  if (!(v15 >> 29))
  {
    unsigned int v16 = (void *)v5[4];
    unsigned int v17 = (void *)WTF::fastMalloc((WTF *)(8 * v15));
    *((_DWORD *)v5 + 10) = v15;
    v5[4] = v17;
    memcpy(v17, v16, 8 * v12);
    if (v16)
    {
      if ((void *)v5[4] == v16)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v16, v18);
    }
    unint64_t v12 = *((unsigned int *)v5 + 11);
    uint64_t v19 = (void *)(v5[4] + 8 * v12);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseRelationalExpressionPostUnary(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(_DWORD **)(a2 + 88);
  unsigned int v7 = *(_DWORD *)(a2 + 96);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShiftExpressionPostUnary(&v31, a2, a3);
  if (!v33)
  {
    unint64_t v10 = v31;
    *a3 = v31;
    unsigned int v11 = *(_DWORD *)(a2 + 56);
    if (v11 > 0x38 || ((1 << v11) & 0x19C040000000000) == 0)
    {
LABEL_41:
      int v9 = 0;
      *(void *)a1 = v10;
      *(_DWORD *)(a1 + 24) = 0;
      return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v9])(&v37, &v31);
    }
    uint64_t result = WGSL::toBinaryOperation(*(_DWORD *)(a2 + 56));
    char v30 = result;
    unsigned int v14 = *(_DWORD *)(a2 + 36);
    unsigned int v15 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v15;
      if (v14 <= v15) {
        goto LABEL_47;
      }
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = v17 + 32 * v15;
      unsigned int v19 = *(_DWORD *)v18;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v18;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v18 + 4);
      unsigned int v20 = *(_DWORD *)v18;
      if (v20 > 8) {
        goto LABEL_12;
      }
      if (((1 << v20) & 0x38) != 0) {
        break;
      }
      if (((1 << v20) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v17 + 32 * v15 + 24);
      }
      else if (v20 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
        if (v21) {
          *v21 += 2;
        }
        goto LABEL_21;
      }
LABEL_12:
      int v16 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v16;
      ++v15;
      if (v19 != 82)
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression((uint64_t)&v37, a2);
        if (v39)
        {
          if (v39 != 1) {
            goto LABEL_46;
          }
          int v22 = v37;
          if (v37) {
            *v37 += 2;
          }
          long long v28 = v38;
          uint64_t v27 = v22;
          LODWORD(v23) = 1;
          int v29 = 1;
          int v24 = 1;
          goto LABEL_34;
        }
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShiftExpressionPostUnary(&v34, a2, &v37);
        uint64_t v23 = v36;
        if (v36)
        {
          if (v36 != 1) {
            goto LABEL_46;
          }
          int v22 = v34;
          if (v34) {
            *v34 += 2;
          }
          long long v28 = v35;
          uint64_t v27 = v22;
          int v29 = 1;
        }
        else
        {
          int v22 = v34;
          uint64_t v27 = v34;
          int v29 = 0;
        }
        ((void (*)(char *, _DWORD **))off_1ECABE170[v23])(&v40, &v34);
        int v24 = v39;
        if (v39 != -1) {
LABEL_34:
        }
          ((void (*)(_DWORD **, _DWORD **))off_1ECABE170[v24])(&v34, &v37);
        if (!v23)
        {
          unsigned int v25 = *(void **)(a2 + 8);
          unsigned int v26 = *(_DWORD *)(a2 + 96) - v7;
          uint64_t v37 = v6;
          *(void *)&long long v38 = __PAIR64__(v26, v7);
          unint64_t v10 = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v25, &v37, a3, &v27, &v30);
          *a3 = v10;
          goto LABEL_41;
        }
        if (v23 != 1) {
          goto LABEL_46;
        }
        if (!v22)
        {
          *(_OWORD *)(a1 + 8) = v28;
          *(void *)a1 = 0;
          *(_DWORD *)(a1 + 24) = 1;
          int v9 = 0;
          return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v9])(&v37, &v31);
        }
        *v22 += 2;
        *(_OWORD *)(a1 + 8) = v28;
        *(void *)a1 = v22;
        *(_DWORD *)(a1 + 24) = 1;
        uint64_t v27 = 0;
        if (*v22 != 2)
        {
          *v22 -= 2;
          int v9 = 0;
          return ((uint64_t (*)(void, void))off_1ECABE170[v9])(&v37, &v31);
        }
        uint64_t result = WTF::StringImpl::destroy();
        int v9 = v33;
        if (v33 != -1) {
          return ((uint64_t (*)(void, void))off_1ECABE170[v9])(&v37, &v31);
        }
        return result;
      }
    }
    unsigned int v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
LABEL_21:
    *(void *)(a2 + 80) = v21;
    goto LABEL_12;
  }
  if (v33 == 1)
  {
    unint64_t v8 = v31;
    if (v31) {
      *v31 += 2;
    }
    *(_OWORD *)(a1 + 8) = v32;
    *(void *)a1 = v8;
    int v9 = 1;
    *(_DWORD *)(a1 + 24) = 1;
    return ((uint64_t (*)(void, void))off_1ECABE170[v9])(&v37, &v31);
  }
LABEL_46:
  uint64_t result = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_47:
  __break(0xC471u);
  return result;
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShortCircuitExpression(uint64_t result, uint64_t a2, uint64_t *a3, int a4, char a5)
{
  uint64_t v8 = result;
  char v34 = a5;
  unsigned int v28 = *(_DWORD *)(a2 + 92);
  unsigned int v29 = *(_DWORD *)(a2 + 88);
  int v9 = (_OWORD *)(a2 + 60);
  unsigned int v27 = *(_DWORD *)(a2 + 96);
  char v30 = (_OWORD *)(result + 8);
  while (*(_DWORD *)(a2 + 56) == a4)
  {
    unsigned int v11 = *(_DWORD *)(a2 + 36);
    unsigned int v12 = *(_DWORD *)(a2 + 40) + 1;
    do
    {
      *(_DWORD *)(a2 + 40) = v12;
      if (v11 <= v12) {
        goto LABEL_40;
      }
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = v14 + 32 * v12;
      unsigned int v16 = *(_DWORD *)v15;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v15;
      *int v9 = *(_OWORD *)(v15 + 4);
      unsigned int v17 = *(_DWORD *)v15;
      if (v17 <= 8)
      {
        if (((1 << v17) & 0x38) != 0)
        {
          uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
LABEL_17:
          *(void *)(a2 + 80) = v18;
          goto LABEL_8;
        }
        if (((1 << v17) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v14 + 32 * v12 + 24);
          goto LABEL_8;
        }
        if (v17 == 8)
        {
          *(void *)(a2 + 80) = 0;
          uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
          if (v18) {
            *v18 += 2;
          }
          goto LABEL_17;
        }
      }
LABEL_8:
      int v13 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v13;
      ++v12;
    }
    while (v16 == 82);
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression((uint64_t)&v38, a2);
    if (!v40)
    {
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseRelationalExpressionPostUnary((uint64_t)&v35, a2, &v38);
      uint64_t v21 = v37;
      if (v37)
      {
        if (v37 != 1)
        {
LABEL_39:
          uint64_t result = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_40:
          __break(0xC471u);
          return result;
        }
        int v22 = v35;
        if (v35) {
          *v35 += 2;
        }
        long long v32 = v36;
      }
      else
      {
        int v22 = v35;
      }
      unsigned int v31 = v22;
      unsigned int v33 = v21;
      ((void (*)(unsigned char *, _DWORD **))off_1ECABE170[v21])(v41, &v35);
      uint64_t v20 = v40;
      if (v40 != -1) {
        goto LABEL_30;
      }
      goto LABEL_31;
    }
    if (v40 != 1) {
      goto LABEL_39;
    }
    unsigned int v19 = v38;
    if (v38) {
      *v38 += 2;
    }
    long long v32 = v39;
    unsigned int v31 = v19;
    unsigned int v33 = 1;
    uint64_t v20 = 1;
LABEL_30:
    ((void (*)(_DWORD **, _DWORD **))off_1ECABE170[v20])(&v35, &v38);
LABEL_31:
    unsigned int v23 = v33;
    if (!v33)
    {
      unsigned int v25 = *(void **)(a2 + 8);
      unsigned int v26 = *(_DWORD *)(a2 + 96) - v27;
      long long v38 = (_DWORD *)__PAIR64__(v28, v29);
      *(void *)&long long v39 = __PAIR64__(v26, v27);
      uint64_t result = (uint64_t)WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v25, &v38, a3, &v31, &v34);
      *a3 = result;
      uint64_t v10 = v33;
      if (v33 != -1) {
        goto LABEL_3;
      }
      goto LABEL_4;
    }
    if (v33 != 1) {
      goto LABEL_39;
    }
    int v24 = v31;
    if (v31) {
      *v31 += 2;
    }
    *char v30 = v32;
    *(void *)uint64_t v8 = v24;
    *(_DWORD *)(v8 + 24) = 1;
    uint64_t v10 = 1;
LABEL_3:
    uint64_t result = ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v10])(&v38, &v31);
LABEL_4:
    if (v23) {
      return result;
    }
  }
  *(void *)uint64_t v8 = *a3;
  *(_DWORD *)(v8 + 24) = 0;
  return result;
}

uint64_t WGSL::toBinaryOperation(int a1)
{
  int v1 = a1 - 36;
  if (a1 - 36) < 0x2E && ((0x33D47EFFC047uLL >> v1)) {
    return byte_1826CF630[v1];
  }
  uint64_t result = 283;
  __break(0xC471u);
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(void *this, _OWORD *a2, void *a3, void *a4, char *a5)
{
  int v9 = this;
  uint64_t v10 = *this;
  if (this[1] - *this <= 0x57uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v10 = *v9;
  }
  char v11 = *a5;
  *(_OWORD *)(v10 + 8) = *a2;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = 0;
  *(unsigned char *)(v10 + 56) = 0;
  *(void *)uint64_t v10 = off_1ECABC158;
  *(void *)(v10 + 64) = *a3;
  *(void *)(v10 + 72) = *a4;
  *(unsigned char *)(v10 + 80) = v11;
  *v9 += 88;
  unint64_t v12 = *((unsigned int *)v9 + 11);
  if (v12 != *((_DWORD *)v9 + 10))
  {
    unsigned int v19 = (void *)(v9[4] + 8 * v12);
LABEL_17:
    *unsigned int v19 = v10;
    *((_DWORD *)v9 + 11) = v12 + 1;
    return (void *)v10;
  }
  unint64_t v13 = v12 + (v12 >> 2);
  if (v13 >= 0x10) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = 16;
  }
  if (v14 <= v12 + 1) {
    unint64_t v15 = v12 + 1;
  }
  else {
    unint64_t v15 = v14;
  }
  if (!(v15 >> 29))
  {
    unsigned int v16 = (void *)v9[4];
    unsigned int v17 = (void *)WTF::fastMalloc((WTF *)(8 * v15));
    *((_DWORD *)v9 + 10) = v15;
    v9[4] = v17;
    memcpy(v17, v16, 8 * v12);
    if (v16)
    {
      if ((void *)v9[4] == v16)
      {
        v9[4] = 0;
        *((_DWORD *)v9 + 10) = 0;
      }
      WTF::fastFree((WTF *)v16, v18);
    }
    unint64_t v12 = *((unsigned int *)v9 + 11);
    unsigned int v19 = (void *)(v9[4] + 8 * v12);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseShiftExpressionPostUnary(void *result, uint64_t a2, void *a3)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(a2 + 56);
  if ((v6 - 59) <= 0x11 && ((1 << (v6 - 59)) & 0x28809) != 0)
  {
    return (void *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAdditiveExpressionPostUnary((uint64_t)result, a2, a3);
  }
  uint64_t v8 = *(void *)(a2 + 88);
  unsigned int v9 = *(_DWORD *)(a2 + 96);
  if (v6 != 57)
  {
    if (v6 != 53)
    {
      *uint64_t result = *a3;
      *((_DWORD *)result + 6) = 0;
      return result;
    }
    unsigned int v10 = *(_DWORD *)(a2 + 36);
    unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v11;
      if (v10 <= v11) {
        goto LABEL_47;
      }
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = v13 + 32 * v11;
      unsigned int v15 = *(_DWORD *)v14;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
      unsigned int v16 = *(_DWORD *)v14;
      if (v16 > 8) {
        goto LABEL_12;
      }
      if (((1 << v16) & 0x38) != 0) {
        break;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
      }
      else if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_21;
      }
LABEL_12:
      int v12 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v12;
      ++v11;
      if (v15 != 82)
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression((uint64_t)&v35, a2);
        int v26 = v37;
        if (!v37)
        {
          unsigned int v27 = *(void **)(a2 + 8);
          unsigned int v28 = *(_DWORD *)(a2 + 96) - v9;
          *(void *)&long long v34 = v8;
          *((void *)&v34 + 1) = __PAIR64__(v28, v9);
          char v29 = 9;
          goto LABEL_43;
        }
LABEL_38:
        if (v26 == 1)
        {
          char v30 = v35;
          if (v35) {
            *v35 += 2;
          }
          *(_OWORD *)(v5 + 1) = v36;
          void *v5 = v30;
          int v31 = 1;
          *((_DWORD *)v5 + 6) = 1;
          return (void *)((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v34, &v35);
        }
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_47:
        __break(0xC471u);
LABEL_49:
        JUMPOUT(0x1825AF6C0);
      }
    }
    unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_21:
    *(void *)(a2 + 80) = v17;
    goto LABEL_12;
  }
  unsigned int v18 = *(_DWORD *)(a2 + 36);
  unsigned int v19 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v19;
    if (v18 <= v19)
    {
      __break(0xC471u);
      goto LABEL_49;
    }
    uint64_t v21 = *(void *)(a2 + 24);
    uint64_t v22 = v21 + 32 * v19;
    unsigned int v23 = *(_DWORD *)v22;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v22;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v22 + 4);
    unsigned int v24 = *(_DWORD *)v22;
    if (v24 <= 8)
    {
      if (((1 << v24) & 0x38) != 0)
      {
        unsigned int v25 = *(_DWORD **)(v21 + 32 * v19 + 24);
LABEL_33:
        *(void *)(a2 + 80) = v25;
        goto LABEL_24;
      }
      if (((1 << v24) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v21 + 32 * v19 + 24);
        goto LABEL_24;
      }
      if (v24 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v25 = *(_DWORD **)(v21 + 32 * v19 + 24);
        if (v25) {
          *v25 += 2;
        }
        goto LABEL_33;
      }
    }
LABEL_24:
    int v20 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v20;
    ++v19;
  }
  while (v23 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression((uint64_t)&v35, a2);
  int v26 = v37;
  if (v37) {
    goto LABEL_38;
  }
  unsigned int v27 = *(void **)(a2 + 8);
  unsigned int v32 = *(_DWORD *)(a2 + 96) - v9;
  *(void *)&long long v34 = v8;
  *((void *)&v34 + 1) = __PAIR64__(v32, v9);
  char v29 = 8;
LABEL_43:
  char v33 = v29;
  uint64_t result = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v27, &v34, a3, &v35, &v33);
  void *v5 = result;
  *((_DWORD *)v5 + 6) = 0;
  int v31 = v37;
  if (v37 != -1) {
    return (void *)((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v34, &v35);
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF22ReferenceWrapperVectorIN4WGSL3AST10ExpressionELm0EEENSA_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF22ReferenceWrapperVectorIN4WGSL3AST10ExpressionELm0EEENSA_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

void WGSL::AST::BoolLiteral::~BoolLiteral(WGSL::AST::BoolLiteral *this)
{
  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
}

{
  uint64_t v2;
  char v3;

  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
  MEMORY[0x18530AFF0](this, 0x10F3C401CCA9EDFLL);
}

uint64_t WGSL::AST::BoolLiteral::kind(WGSL::AST::BoolLiteral *this)
{
  return 32;
}

void WGSL::AST::Signed32Literal::~Signed32Literal(WGSL::AST::Signed32Literal *this)
{
  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
}

{
  uint64_t v2;
  char v3;

  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
  MEMORY[0x18530AFF0](this, 0x10F3C40FA57840CLL);
}

uint64_t WGSL::AST::Signed32Literal::kind(WGSL::AST::Signed32Literal *this)
{
  return 35;
}

void WGSL::AST::AbstractFloatLiteral::~AbstractFloatLiteral(WGSL::AST::AbstractFloatLiteral *this)
{
  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
}

{
  uint64_t v2;
  char v3;

  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
  MEMORY[0x18530AFF0](this, 0x10F3C40F2BF966CLL);
}

uint64_t WGSL::AST::AbstractFloatLiteral::kind(WGSL::AST::AbstractFloatLiteral *this)
{
  return 30;
}

void WGSL::AST::Float32Literal::~Float32Literal(WGSL::AST::Float32Literal *this)
{
  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
}

{
  uint64_t v2;
  char v3;

  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
  MEMORY[0x18530AFF0](this, 0x10F3C40FA57840CLL);
}

uint64_t WGSL::AST::Float32Literal::kind(WGSL::AST::Float32Literal *this)
{
  return 33;
}

void WGSL::AST::Float16Literal::~Float16Literal(WGSL::AST::Float16Literal *this)
{
  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
}

{
  uint64_t v2;
  char v3;

  *(void *)this = &unk_1ECABBFE0;
  if (*((unsigned char *)this + 56))
  {
    uint64_t v2 = *((unsigned int *)this + 12);
    if (v2 != -1) {
      ((void (*)(char *, char *))off_1ECABDFE8[v2])(&v3, (char *)this + 32);
    }
    *((_DWORD *)this + 12) = -1;
  }
  MEMORY[0x18530AFF0](this, 0x10F3C40C31245DDLL);
}

uint64_t WGSL::AST::Float16Literal::kind(WGSL::AST::Float16Literal *this)
{
  return 34;
}

void *WGSL::AST::Builder::construct<WGSL::AST::IndexAccessExpression,WGSL::SourceSpan &,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3, void *a4)
{
  unsigned int v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x4FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)uint64_t v8 = off_1ECABC180;
  *(void *)(v8 + 64) = *a3;
  *(void *)(v8 + 72) = *a4;
  *v7 += 80;
  unint64_t v9 = *((unsigned int *)v7 + 11);
  if (v9 != *((_DWORD *)v7 + 10))
  {
    unsigned int v16 = (void *)(v7[4] + 8 * v9);
LABEL_17:
    *unsigned int v16 = v8;
    *((_DWORD *)v7 + 11) = v9 + 1;
    return (void *)v8;
  }
  unint64_t v10 = v9 + (v9 >> 2);
  if (v10 >= 0x10) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = 16;
  }
  if (v11 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!(v12 >> 29))
  {
    uint64_t v13 = (void *)v7[4];
    uint64_t v14 = (void *)WTF::fastMalloc((WTF *)(8 * v12));
    *((_DWORD *)v7 + 10) = v12;
    v7[4] = v14;
    memcpy(v14, v13, 8 * v9);
    if (v13)
    {
      if ((void *)v7[4] == v13)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v13, v15);
    }
    unint64_t v9 = *((unsigned int *)v7 + 11);
    unsigned int v16 = (void *)(v7[4] + 8 * v9);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::FieldAccessExpression,WGSL::SourceSpan &,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::Identifier,void>(void *this, _OWORD *a2, void *a3, uint64_t a4)
{
  unsigned int v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x87uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)uint64_t v8 = off_1ECABC8B0;
  *(void *)(v8 + 64) = *a3;
  *(void *)(v8 + 72) = &unk_1ECABC008;
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a4 + 8);
  *(void *)(v8 + 72) = off_1ECABC030;
  unint64_t v9 = *(_DWORD **)(a4 + 24);
  *(void *)(a4 + 24) = 0;
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(v8 + 80);
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = off_1ECABC030;
  if (v9) {
    *v9 += 2;
  }
  *(void *)(v8 + 128) = v9;
  *v7 += 136;
  unint64_t v10 = *((unsigned int *)v7 + 11);
  if (v10 != *((_DWORD *)v7 + 10))
  {
    unsigned int v17 = (void *)(v7[4] + 8 * v10);
LABEL_19:
    *unsigned int v17 = v8;
    *((_DWORD *)v7 + 11) = v10 + 1;
    return (void *)v8;
  }
  unint64_t v11 = v10 + (v10 >> 2);
  if (v11 >= 0x10) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = 16;
  }
  if (v12 <= v10 + 1) {
    unint64_t v13 = v10 + 1;
  }
  else {
    unint64_t v13 = v12;
  }
  if (!(v13 >> 29))
  {
    uint64_t v14 = (void *)v7[4];
    unsigned int v15 = (void *)WTF::fastMalloc((WTF *)(8 * v13));
    *((_DWORD *)v7 + 10) = v13;
    v7[4] = v15;
    memcpy(v15, v14, 8 * v10);
    if (v14)
    {
      if ((void *)v7[4] == v14)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v14, v16);
    }
    unint64_t v10 = *((unsigned int *)v7 + 11);
    unsigned int v17 = (void *)(v7[4] + 8 * v10);
    goto LABEL_19;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseMultiplicativeExpressionPostUnary(void *result, uint64_t a2, void *a3)
{
  uint64_t v5 = result;
  unsigned int v6 = *(_DWORD *)(a2 + 96);
  unsigned int v25 = *(_DWORD *)(a2 + 92);
  unsigned int v26 = *(_DWORD *)(a2 + 88);
  unsigned int v7 = (_OWORD *)(a2 + 60);
  uint64_t v8 = result + 1;
  while (1)
  {
    int v10 = *(_DWORD *)(a2 + 56);
    if ((v10 - 62) > 0xE || ((1 << (v10 - 62)) & 0x5001) == 0) {
      break;
    }
    char v31 = 2;
    if (v10 != 76)
    {
      if (v10 == 74)
      {
        char v12 = 3;
      }
      else
      {
        if (v10 != 62) {
          goto LABEL_36;
        }
        char v12 = 4;
      }
      char v31 = v12;
    }
    unsigned int v13 = *(_DWORD *)(a2 + 36);
    unsigned int v14 = *(_DWORD *)(a2 + 40) + 1;
    do
    {
      *(_DWORD *)(a2 + 40) = v14;
      if (v13 <= v14) {
        goto LABEL_36;
      }
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = v16 + 32 * v14;
      unsigned int v18 = *(_DWORD *)v17;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v17;
      *unsigned int v7 = *(_OWORD *)(v17 + 4);
      unsigned int v19 = *(_DWORD *)v17;
      if (v19 <= 8)
      {
        if (((1 << v19) & 0x38) != 0)
        {
          int v20 = *(_DWORD **)(v16 + 32 * v14 + 24);
LABEL_26:
          *(void *)(a2 + 80) = v20;
          goto LABEL_17;
        }
        if (((1 << v19) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v16 + 32 * v14 + 24);
          goto LABEL_17;
        }
        if (v19 == 8)
        {
          *(void *)(a2 + 80) = 0;
          int v20 = *(_DWORD **)(v16 + 32 * v14 + 24);
          if (v20) {
            *v20 += 2;
          }
          goto LABEL_26;
        }
      }
LABEL_17:
      int v15 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v15;
      ++v14;
    }
    while (v18 == 82);
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseUnaryExpression(&v28, a2);
    unsigned int v21 = v30;
    if (!v30)
    {
      unsigned int v23 = *(void **)(a2 + 8);
      unsigned int v24 = *(_DWORD *)(a2 + 96) - v6;
      *(void *)&long long v27 = __PAIR64__(v25, v26);
      *((void *)&v27 + 1) = __PAIR64__(v24, v6);
      uint64_t result = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v23, &v27, a3, &v28, &v31);
      *a3 = result;
      uint64_t v9 = v30;
      if (v30 != -1) {
        goto LABEL_3;
      }
      goto LABEL_4;
    }
    if (v30 != 1)
    {
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_36:
      __break(0xC471u);
      JUMPOUT(0x1825B01C4);
    }
    uint64_t v22 = v28;
    if (v28) {
      *v28 += 2;
    }
    *uint64_t v8 = v29;
    void *v5 = v22;
    *((_DWORD *)v5 + 6) = 1;
    uint64_t v9 = 1;
LABEL_3:
    uint64_t result = (void *)((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v9])(&v27, &v28);
LABEL_4:
    if (v21) {
      return result;
    }
  }
  void *v5 = *a3;
  *((_DWORD *)v5 + 6) = 0;
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ElaboratedTypeExpression,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(void *this, _OWORD *a2, uint64_t a3, uint64_t *a4)
{
  unsigned int v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x6FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 56) = 0;
  *(void *)uint64_t v8 = &unk_1ECABE128;
  *(void *)(v8 + 64) = &unk_1ECABC008;
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a3 + 8);
  *(void *)(v8 + 64) = off_1ECABC030;
  uint64_t v9 = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(v8 + 96) = 0;
  *(void *)(v8 + 104) = 0;
  *(void *)(v8 + 88) = v9;
  uint64_t v10 = *a4;
  *a4 = 0;
  *(void *)(v8 + 96) = v10;
  LODWORD(v10) = *((_DWORD *)a4 + 2);
  *((_DWORD *)a4 + 2) = 0;
  *(_DWORD *)(v8 + 104) = v10;
  LODWORD(v10) = *((_DWORD *)a4 + 3);
  *((_DWORD *)a4 + 3) = 0;
  *(_DWORD *)(v8 + 108) = v10;
  *v7 += 112;
  unint64_t v11 = *((unsigned int *)v7 + 11);
  if (v11 != *((_DWORD *)v7 + 10))
  {
    unsigned int v18 = (void *)(v7[4] + 8 * v11);
LABEL_17:
    *unsigned int v18 = v8;
    *((_DWORD *)v7 + 11) = v11 + 1;
    return (void *)v8;
  }
  unint64_t v12 = v11 + (v11 >> 2);
  if (v12 >= 0x10) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = 16;
  }
  if (v13 <= v11 + 1) {
    unint64_t v14 = v11 + 1;
  }
  else {
    unint64_t v14 = v13;
  }
  if (!(v14 >> 29))
  {
    int v15 = (void *)v7[4];
    uint64_t v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
    *((_DWORD *)v7 + 10) = v14;
    v7[4] = v16;
    memcpy(v16, v15, 8 * v11);
    if (v15)
    {
      if ((void *)v7[4] == v15)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v15, v17);
    }
    unint64_t v11 = *((unsigned int *)v7 + 11);
    unsigned int v18 = (void *)(v7[4] + 8 * v11);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::ElaboratedTypeExpression::~ElaboratedTypeExpression(WGSL::AST::ElaboratedTypeExpression *this, void *a2)
{
  *(void *)this = &unk_1ECABE128;
  char v3 = (WTF *)*((void *)this + 12);
  if (v3)
  {
    *((void *)this + 12) = 0;
    *((_DWORD *)this + 26) = 0;
    WTF::fastFree(v3, a2);
  }
  *((void *)this + 8) = off_1ECABC030;
  uint64_t v4 = (_DWORD *)*((void *)this + 11);
  *((void *)this + 11) = 0;
  if (v4)
  {
    if (*v4 == 2)
    {
      WTF::StringImpl::destroy();
      *(void *)this = &unk_1ECABBFE0;
      if (!*((unsigned char *)this + 56)) {
        return;
      }
      goto LABEL_9;
    }
    *v4 -= 2;
  }
  *(void *)this = &unk_1ECABBFE0;
  if (!*((unsigned char *)this + 56)) {
    return;
  }
LABEL_9:
  uint64_t v5 = *((unsigned int *)this + 12);
  if (v5 != -1) {
    ((void (*)(char *, char *))off_1ECABDFE8[v5])(&v6, (char *)this + 32);
  }
  *((_DWORD *)this + 12) = -1;
}

{
  WTF *v3;
  _DWORD *v4;
  uint64_t v5;
  char v6;

  *(void *)this = &unk_1ECABE128;
  char v3 = (WTF *)*((void *)this + 12);
  if (v3)
  {
    *((void *)this + 12) = 0;
    *((_DWORD *)this + 26) = 0;
    WTF::fastFree(v3, a2);
  }
  *((void *)this + 8) = off_1ECABC030;
  uint64_t v4 = (_DWORD *)*((void *)this + 11);
  *((void *)this + 11) = 0;
  if (v4)
  {
    if (*v4 == 2)
    {
      WTF::StringImpl::destroy();
      *(void *)this = &unk_1ECABBFE0;
      if (!*((unsigned char *)this + 56)) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    *v4 -= 2;
  }
  *(void *)this = &unk_1ECABBFE0;
  if (!*((unsigned char *)this + 56)) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v5 = *((unsigned int *)this + 12);
  if (v5 != -1) {
    ((void (*)(char *, char *))off_1ECABDFE8[v5])(&v6, (char *)this + 32);
  }
  *((_DWORD *)this + 12) = -1;
LABEL_12:
  MEMORY[0x18530AFF0](this, 0x10F3C40F5957126);
}

uint64_t WGSL::AST::ElaboratedTypeExpression::kind(WGSL::AST::ElaboratedTypeExpression *this)
{
  return 60;
}

void WGSL::AST::TypeAlias::~TypeAlias(WGSL::AST::TypeAlias *this)
{
  *((void *)this + 3) = off_1ECABC030;
  uint64_t v2 = (_DWORD *)*((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2)
  {
    if (*v2 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v2 -= 2;
    }
  }
}

{
  _DWORD *v2;
  uint64_t vars8;

  *((void *)this + 3) = off_1ECABC030;
  uint64_t v2 = (_DWORD *)*((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2)
  {
    if (*v2 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v2 -= 2;
    }
  }
  JUMPOUT(0x18530AFF0);
}

uint64_t WGSL::AST::TypeAlias::kind(WGSL::AST::TypeAlias *this)
{
  return 58;
}

uint64_t WGSL::AST::TypeAlias::name(WGSL::AST::TypeAlias *this)
{
  return (uint64_t)this + 24;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST10ExpressionEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ConstAssert,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE190;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    unint64_t v11 = (void *)v5[4];
    unint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::ConstAssert::~ConstAssert(WGSL::AST::ConstAssert *this)
{
}

uint64_t WGSL::AST::ConstAssert::kind(WGSL::AST::ConstAssert *this)
{
  return 15;
}

void WGSL::AST::ConstAssert::name(WGSL::AST::ConstAssert *this)
{
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST11ConstAssertEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

_DWORD *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 40)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v179 = "Expected a ";
    *(void *)&v179[8] = 12;
    uint64_t v171 = ", but got a ";
    *(void *)&long long v172 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v179, (uint64_t *)&v184, (uint64_t)&v171, (uint64_t *)&v183, &v155);
    if (!v155)
    {
      __break(0xC471u);
      JUMPOUT(0x1825B25ACLL);
    }
    uint64_t v16 = v183;
    int8x16_t v183 = 0;
    if (v16)
    {
      if (*v16 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t result = v184;
        uint64_t v184 = 0;
        if (!result)
        {
LABEL_57:
          unint64_t v31 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v155;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v31;
          *(_DWORD *)(a1 + 24) = 1;
          return result;
        }
LABEL_54:
        if (*result == 2) {
          uint64_t result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_57;
      }
      *v16 -= 2;
    }
    uint64_t result = v184;
    uint64_t v184 = 0;
    if (!result) {
      goto LABEL_57;
    }
    goto LABEL_54;
  }
  unint64_t v6 = (unint64_t)&v146;
  uint64_t v7 = a2 + 60;
  unsigned int v8 = *(_DWORD *)(a2 + 36);
  unsigned int v9 = *(_DWORD *)(a2 + 40) + 1;
  uint64_t v10 = 32 * v9;
  do
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v8 <= v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1825B258CLL);
    }
    uint64_t v12 = *(void *)(a2 + 24);
    unint64_t v13 = *(unsigned int *)(v12 + v10);
    *(_DWORD *)(a2 + 56) = v13;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)(v12 + v10 + 4);
    unsigned int v14 = *(_DWORD *)(v12 + v10);
    if (v14 <= 8)
    {
      if (((1 << v14) & 0x38) != 0)
      {
        int v15 = *(_DWORD **)(v12 + v10 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v15;
        goto LABEL_4;
      }
      if (((1 << v14) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v12 + v10 + 24);
        goto LABEL_4;
      }
      if (v14 == 8)
      {
        *(void *)(a2 + 80) = 0;
        int v15 = *(_DWORD **)(v12 + v10 + 24);
        if (v15) {
          *v15 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v11 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v11;
    ++v9;
    v10 += 32;
  }
  while (v13 == 82);
  if (v13 != 18)
  {
    if (v13 == 8)
    {
      *(_DWORD *)uint64_t v179 = 8;
      *(_OWORD *)&v179[4] = *(_OWORD *)v7;
      unsigned int v23 = *(_DWORD **)(a2 + 80);
      if (v23) {
        *v23 += 2;
      }
      uint64_t v180 = v23;
      int v181 = 0;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v9;
        if (v8 <= v9)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B259CLL);
        }
        uint64_t v25 = v12 + 32 * v9;
        unsigned int v26 = *(_DWORD *)v25;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v25;
        *(_OWORD *)uint64_t v7 = *(_OWORD *)(v25 + 4);
        unsigned int v27 = *(_DWORD *)v25;
        if (v27 > 8) {
          goto LABEL_38;
        }
        if (((1 << v27) & 0x38) != 0) {
          break;
        }
        if (((1 << v27) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v12 + 32 * v9 + 24);
        }
        else if (v27 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v28 = *(_DWORD **)(v12 + 32 * v9 + 24);
          if (v28) {
            *v28 += 2;
          }
          goto LABEL_47;
        }
LABEL_38:
        int v24 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v24;
        ++v9;
        if (v26 != 82)
        {
          if (MEMORY[0x18530AEB0](v23, "group", 5))
          {
            if (*(_DWORD *)(a2 + 56) == 67)
            {
              unsigned int v34 = *(_DWORD *)(a2 + 36);
              unsigned int v35 = *(_DWORD *)(a2 + 40) + 1;
              while (1)
              {
                *(_DWORD *)(a2 + 40) = v35;
                if (v34 <= v35)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B25A4);
                }
                uint64_t v37 = *(void *)(a2 + 24);
                uint64_t v38 = v37 + 32 * v35;
                unsigned int v39 = *(_DWORD *)v38;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
                *(_OWORD *)uint64_t v7 = *(_OWORD *)(v38 + 4);
                unsigned int v40 = *(_DWORD *)v38;
                if (v40 > 8) {
                  goto LABEL_68;
                }
                if (((1 << v40) & 0x38) != 0) {
                  break;
                }
                if (((1 << v40) & 0xC4) != 0)
                {
                  *(void *)(a2 + 80) = *(void *)(v37 + 32 * v35 + 24);
                }
                else if (v40 == 8)
                {
                  *(void *)(a2 + 80) = 0;
                  unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
                  if (v41) {
                    *v41 += 2;
                  }
                  goto LABEL_77;
                }
LABEL_68:
                int v36 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v36;
                ++v35;
                if (v39 != 82)
                {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
                  unint64_t v13 = v157;
                  if (!v157)
                  {
                    if (*(_DWORD *)(a2 + 56) == 48) {
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                    }
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                    unint64_t v6 = v174;
                    if (v174)
                    {
                      WGSL::toString();
                      if (v6 == 1)
                      {
                        WGSL::toString();
                        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v170, (uint64_t *)&v169);
                        __n128 v56 = v169;
                        int v169 = 0;
                        if (v56)
                        {
                          if (*v56 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v56 -= 2;
                          }
                        }
                        unsigned int v67 = v170;
                        uint64_t v170 = 0;
                        if (!v67) {
                          goto LABEL_233;
                        }
LABEL_230:
                        if (*v67 == 2) {
                          WTF::StringImpl::destroy();
                        }
                        else {
                          *v67 -= 2;
                        }
                        goto LABEL_233;
                      }
LABEL_464:
                      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_465:
                      *(_OWORD *)(a1 + 8) = *(_OWORD *)(v6 + 8);
                      *(void *)a1 = 0;
LABEL_273:
                      *(_DWORD *)(a1 + 24) = 1;
LABEL_274:
                      ((void (*)(const char **, const char **))off_1ECABE170[v7])(&v146, &v171);
LABEL_235:
                      ((void (*)(const char **, const char **))off_1ECABE170[v13])(&v171, &v155);
                      uint64_t v53 = 0;
                      return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDF90[v53])(&v171, v179);
                    }
                    if (v171 == 8 && v173)
                    {
                      if (*v173 == 2) {
                        WTF::StringImpl::destroy();
                      }
                      else {
                        *v173 -= 2;
                      }
                    }
                    uint64_t v71 = *(void **)(a2 + 8);
                    unsigned int v72 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v72, v5);
                    unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::GroupAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v71, &v171, &v155);
LABEL_282:
                    *(void *)a1 = v73;
                    *(_DWORD *)(a1 + 24) = 0;
                    goto LABEL_235;
                  }
LABEL_198:
                  if (v13 != 1) {
                    goto LABEL_464;
                  }
                  int v69 = v155;
                  if (v155) {
                    *(_DWORD *)v155 += 2;
                  }
                  *(_OWORD *)(a1 + 8) = v156;
                  *(void *)a1 = v69;
LABEL_234:
                  *(_DWORD *)(a1 + 24) = 1;
                  goto LABEL_235;
                }
              }
              unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
LABEL_77:
              *(void *)(a2 + 80) = v41;
              goto LABEL_68;
            }
            WGSL::toString();
            WGSL::toString();
            uint64_t v171 = "Expected a ";
            *(void *)&long long v172 = 12;
            int8x16x2_t v155 = ", but got a ";
            *(void *)&long long v156 = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v171, (uint64_t *)&v176, (uint64_t)&v155, (uint64_t *)&v175, &v146);
            if (!v146)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B25C4);
            }
            int v54 = v175;
            uint64_t v175 = 0;
            if (v54)
            {
              if (*v54 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v54 -= 2;
              }
            }
            int v60 = v176;
            unsigned int v176 = 0;
            if (v60)
            {
              if (*v60 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v60 -= 2;
              }
            }
            uint64_t v53 = 0;
            uint64_t v61 = (*(_DWORD *)(a2 + 96) - v5);
            uint64_t v62 = v146;
LABEL_373:
            *(void *)a1 = v62;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v5 | (v61 << 32);
LABEL_374:
            *(_DWORD *)(a1 + 24) = 1;
            return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDF90[v53])(&v171, v179);
          }
          if (MEMORY[0x18530AEB0](v23, "binding", 7))
          {
            if (*(_DWORD *)(a2 + 56) != 67)
            {
              WGSL::toString();
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v171, (uint64_t *)&v168, (uint64_t *)&v167);
              unsigned int v57 = v167;
              unsigned int v167 = 0;
              if (v57)
              {
                if (*v57 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v57 -= 2;
                }
              }
              unsigned int v64 = v168;
              unsigned int v168 = 0;
              if (v64)
              {
                if (*v64 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v64 -= 2;
                }
              }
              uint64_t v53 = 0;
              uint64_t v61 = (*(_DWORD *)(a2 + 96) - v5);
              uint64_t v62 = v171;
              goto LABEL_373;
            }
            unsigned int v44 = *(_DWORD *)(a2 + 36);
            unsigned int v45 = *(_DWORD *)(a2 + 40) + 1;
            while (2)
            {
              *(_DWORD *)(a2 + 40) = v45;
              if (v44 <= v45)
              {
                __break(0xC471u);
                JUMPOUT(0x1825B25B4);
              }
              uint64_t v47 = *(void *)(a2 + 24);
              uint64_t v48 = v47 + 32 * v45;
              unsigned int v49 = *(_DWORD *)v48;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v48;
              *(_OWORD *)uint64_t v7 = *(_OWORD *)(v48 + 4);
              unsigned int v50 = *(_DWORD *)v48;
              if (v50 <= 8)
              {
                if (((1 << v50) & 0x38) != 0)
                {
                  unsigned int v51 = *(_DWORD **)(v47 + 32 * v45 + 24);
                  goto LABEL_93;
                }
                if (((1 << v50) & 0xC4) != 0)
                {
                  *(void *)(a2 + 80) = *(void *)(v47 + 32 * v45 + 24);
                }
                else if (v50 == 8)
                {
                  *(void *)(a2 + 80) = 0;
                  unsigned int v51 = *(_DWORD **)(v47 + 32 * v45 + 24);
                  if (v51) {
                    *v51 += 2;
                  }
LABEL_93:
                  *(void *)(a2 + 80) = v51;
                }
              }
              int v46 = *(_DWORD *)(a2 + 68);
              *(void *)(a2 + 88) = *(void *)(a2 + 60);
              *(_DWORD *)(a2 + 96) = v46;
              ++v45;
              if (v49 != 82)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
                unint64_t v13 = v157;
                if (v157) {
                  goto LABEL_198;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                unint64_t v6 = v174;
                if (!v174)
                {
                  if (v171 == 8 && v173)
                  {
                    if (*v173 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v173 -= 2;
                    }
                  }
                  unsigned int v80 = *(void **)(a2 + 8);
                  unsigned int v81 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v81, v5);
                  unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::BindingAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v80, &v171, &v155);
                  goto LABEL_282;
                }
                WGSL::toString();
                if (v6 != 1) {
                  goto LABEL_464;
                }
                WGSL::toString();
                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v166, (uint64_t *)&v165);
                unsigned int v59 = v165;
                uint64_t v165 = 0;
                if (v59)
                {
                  if (*v59 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v59 -= 2;
                  }
                }
                unsigned int v67 = v166;
                int8x16x2_t v166 = 0;
                if (v67) {
                  goto LABEL_230;
                }
LABEL_233:
                unint64_t v75 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                *(void *)a1 = v146;
                *(void *)(a1 + 8) = v4;
                *(void *)(a1 + 16) = v75;
                goto LABEL_234;
              }
              continue;
            }
          }
          if (MEMORY[0x18530AEB0](v23, "location", 8))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (!v174)
            {
              if (v171 == 8 && v173)
              {
                if (*v173 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v173 -= 2;
                }
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
              unint64_t v13 = v157;
              if (v157) {
                goto LABEL_198;
              }
              if (*(_DWORD *)(a2 + 56) == 48) {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
              unint64_t v6 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                uint64_t v87 = *(void **)(a2 + 8);
                unsigned int v88 = *(_DWORD *)(a2 + 96) - v5;
                uint64_t v171 = v4;
                *(void *)&long long v172 = __PAIR64__(v88, v5);
                unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::LocationAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v87, &v171, (uint64_t *)&v155);
                goto LABEL_282;
              }
              WGSL::toString();
              if (v6 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v162, (uint64_t *)&v161);
              uint64_t v70 = v161;
              int8x16x2_t v161 = 0;
              if (v70)
              {
                if (*v70 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v70 -= 2;
                }
              }
              unsigned int v67 = v162;
              uint64_t v162 = 0;
              if (v67) {
                goto LABEL_230;
              }
              goto LABEL_233;
            }
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v164, (uint64_t *)&v163);
            int v55 = v163;
            int v163 = 0;
            if (v55)
            {
              if (*v55 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v55 -= 2;
              }
            }
            unint64_t v66 = v164;
            int8x16x2_t v164 = 0;
            if (!v66) {
              goto LABEL_372;
            }
LABEL_369:
            if (*v66 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v66 -= 2;
            }
            goto LABEL_372;
          }
          if (MEMORY[0x18530AEB0](v23, "builtin", 7))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (v174)
            {
              WGSL::toString();
              if (v13 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v160, (uint64_t *)&v159);
              unsigned int v58 = v159;
              int8x16x2_t v159 = 0;
              if (v58)
              {
                if (*v58 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v58 -= 2;
                }
              }
              unint64_t v66 = v160;
              int8x16x2_t v160 = 0;
              if (v66) {
                goto LABEL_369;
              }
              goto LABEL_372;
            }
            if (v171 == 8 && v173)
            {
              if (*v173 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v173 -= 2;
              }
            }
            unint64_t v13 = (unint64_t)&v171;
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v171, a2);
            if (v174)
            {
              if (v174 != 1) {
                goto LABEL_464;
              }
              unsigned int v76 = v171;
              if (v171) {
                *(_DWORD *)v171 += 2;
              }
              *(_OWORD *)(a1 + 8) = v172;
              *(void *)a1 = v76;
              *(_DWORD *)(a1 + 24) = 1;
              uint64_t v77 = v174;
              if (v174 != -1) {
                goto LABEL_242;
              }
            }
            else
            {
              uint64_t v78 = WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WGSL::Builtin> [12]>::tryGet<WTF::String>((unsigned __int8 ***)WGSL::parseBuiltin(WTF::String const&)::__map, (uint64_t *)&v173);
              if (v78)
              {
                unint64_t v13 = (unint64_t)v78;
                switch(*(unsigned char *)v78)
                {
                  case 0:
                    *(unsigned char *)(*(void *)a2 + 19) = 1;
                    break;
                  case 1:
                    *(unsigned char *)(*(void *)a2 + 25) = 1;
                    break;
                  case 8:
                    *(unsigned char *)(*(void *)a2 + 26) = 1;
                    break;
                  case 9:
                    *(unsigned char *)(*(void *)a2 + 24) = 1;
                    break;
                  default:
                    break;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v155, a2, 68);
                unint64_t v6 = v158;
                if (v158)
                {
                  WGSL::toString();
                  if (v6 != 1) {
                    goto LABEL_464;
                  }
                  WGSL::toString();
                  WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v154, (uint64_t *)&v153);
                  unsigned int v89 = v153;
                  unint64_t v153 = 0;
                  if (v89)
                  {
                    if (*v89 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v89 -= 2;
                    }
                  }
                  unsigned int v90 = v154;
                  unint64_t v154 = 0;
                  if (v90)
                  {
                    if (*v90 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v90 -= 2;
                    }
                  }
                  unint64_t v91 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                  *(void *)a1 = v146;
                  *(void *)(a1 + 8) = v4;
                  *(void *)(a1 + 16) = v91;
                  *(_DWORD *)(a1 + 24) = 1;
                  uint64_t v77 = v174;
                  if (v174 != -1) {
LABEL_242:
                  }
                    ((void (*)(const char **, const char **))off_1ECABDF80[v77])(&v155, &v171);
                }
                else
                {
                  if (v155 == 8 && v157)
                  {
                    if (*v157 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v157 -= 2;
                    }
                  }
                  unsigned int v100 = *(void **)(a2 + 8);
                  unsigned int v101 = *(_DWORD *)(a2 + 96) - v5;
                  int8x16x2_t v155 = v4;
                  *(void *)&long long v156 = __PAIR64__(v101, v5);
                  *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::BuiltinAttribute,WGSL::SourceSpan,WGSL::Builtin const&,void>(v100, &v155, (char *)v13);
                  *(_DWORD *)(a1 + 24) = 0;
                  uint64_t v77 = v174;
                  if (v174 != -1) {
                    goto LABEL_242;
                  }
                }
              }
              else
              {
                WTF::StringImpl::createWithoutCopyingNonEmpty();
                unint64_t v79 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                *(void *)a1 = v155;
                *(void *)(a1 + 8) = v4;
                *(void *)(a1 + 16) = v79;
                *(_DWORD *)(a1 + 24) = 1;
                uint64_t v77 = v174;
                if (v174 != -1) {
                  goto LABEL_242;
                }
              }
            }
LABEL_243:
            uint64_t v53 = 0;
            return (_DWORD *)((uint64_t (*)(void, void))off_1ECABDF90[v53])(&v171, v179);
          }
          if (MEMORY[0x18530AEB0](v23, "workgroup_size", 14))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (!v174)
            {
              if (v171 == 8 && v173)
              {
                if (*v173 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v173 -= 2;
                }
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
              unint64_t v13 = v157;
              if (v157) {
                goto LABEL_198;
              }
              uint64_t v149 = 0;
              unint64_t v150 = 0;
              if (*(_DWORD *)(a2 + 56) == 48)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                if (*(_DWORD *)(a2 + 56) != 68)
                {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v171, a2);
                  uint64_t v7 = v173;
                  if (v173)
                  {
                    if (v173 != 1) {
                      goto LABEL_464;
                    }
                    unsigned int v83 = v171;
                    if (v171) {
                      *(_DWORD *)v171 += 2;
                    }
                    *(_OWORD *)(a1 + 8) = v172;
                    *(void *)a1 = v83;
                    goto LABEL_273;
                  }
                  unint64_t v150 = v171;
                  if (*(_DWORD *)(a2 + 56) == 48)
                  {
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                    if (*(_DWORD *)(a2 + 56) != 68)
                    {
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v146, a2);
                      if (v148)
                      {
                        if (v148 != 1) {
                          goto LABEL_464;
                        }
                        unsigned int v113 = v146;
                        if (!v146) {
                          goto LABEL_465;
                        }
                        *(_DWORD *)v146 += 2;
                        *(_OWORD *)(a1 + 8) = v147;
                        *(void *)a1 = v113;
                        *(_DWORD *)(a1 + 24) = 1;
                        if (*(_DWORD *)v113 == 2) {
                          WTF::StringImpl::destroy();
                        }
                        else {
                          *(_DWORD *)v113 -= 2;
                        }
                        goto LABEL_274;
                      }
                      uint64_t v149 = v146;
                      if (*(_DWORD *)(a2 + 56) == 48) {
                        WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                      }
                    }
                  }
                  ((void (*)(const char **, const char **))off_1ECABE170[v7])(&v146, &v171);
                }
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
              unint64_t v6 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                uint64_t v104 = *(void **)(a2 + 8);
                unsigned int v105 = *(_DWORD *)(a2 + 96) - v5;
                uint64_t v171 = v4;
                *(void *)&long long v172 = __PAIR64__(v105, v5);
                unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::WorkgroupSizeAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::Expression*,WGSL::AST::Expression*,void>(v104, &v171, &v155, (uint64_t *)&v150, (uint64_t *)&v149);
                goto LABEL_282;
              }
              WGSL::toString();
              if (v6 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v145, (uint64_t *)&v144);
              uint64_t v95 = v144;
              int16x8_t v144 = 0;
              if (v95)
              {
                if (*v95 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v95 -= 2;
                }
              }
              unsigned int v67 = v145;
              unint64_t v145 = 0;
              if (v67) {
                goto LABEL_230;
              }
              goto LABEL_233;
            }
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v152, (uint64_t *)&v151);
            unsigned int v63 = v151;
            unint64_t v151 = 0;
            if (v63)
            {
              if (*v63 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v63 -= 2;
              }
            }
            unint64_t v66 = v152;
            unint64_t v152 = 0;
            if (v66) {
              goto LABEL_369;
            }
            goto LABEL_372;
          }
          if (MEMORY[0x18530AEB0](v23, "align", 5))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (!v174)
            {
              if (v171 == 8 && v173)
              {
                if (*v173 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v173 -= 2;
                }
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
              unint64_t v13 = v157;
              if (v157) {
                goto LABEL_198;
              }
              if (*(_DWORD *)(a2 + 56) == 48) {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
              unint64_t v6 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                int v111 = *(void **)(a2 + 8);
                unsigned int v112 = *(_DWORD *)(a2 + 96) - v5;
                uint64_t v171 = v4;
                *(void *)&long long v172 = __PAIR64__(v112, v5);
                unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::AlignAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v111, &v171, &v155);
                goto LABEL_282;
              }
              WGSL::toString();
              if (v6 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v141, (uint64_t *)&v140);
              unsigned int v92 = v140;
              unsigned int v140 = 0;
              if (v92)
              {
                if (*v92 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v92 -= 2;
                }
              }
              unsigned int v67 = v141;
              uint64_t v141 = 0;
              if (v67) {
                goto LABEL_230;
              }
              goto LABEL_233;
            }
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v143, (uint64_t *)&v142);
            char v65 = v142;
            uint64_t v142 = 0;
            if (v65)
            {
              if (*v65 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v65 -= 2;
              }
            }
            unint64_t v66 = v143;
            unsigned int v143 = 0;
            if (v66) {
              goto LABEL_369;
            }
            goto LABEL_372;
          }
          if (!MEMORY[0x18530AEB0](v23, "interpolate", 11))
          {
            if (MEMORY[0x18530AEB0](v23, "size", 4))
            {
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
              unint64_t v13 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
                unint64_t v13 = v157;
                if (v157) {
                  goto LABEL_198;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                unint64_t v6 = v174;
                if (!v174)
                {
                  if (v171 == 8 && v173)
                  {
                    if (*v173 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v173 -= 2;
                    }
                  }
                  int v121 = *(void **)(a2 + 8);
                  unsigned int v122 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v122, v5);
                  unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::SizeAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v121, &v171, &v155);
                  goto LABEL_282;
                }
                WGSL::toString();
                if (v6 != 1) {
                  goto LABEL_464;
                }
                WGSL::toString();
                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v133, (uint64_t *)&v132);
                unsigned int v106 = v132;
                long long v132 = 0;
                if (v106)
                {
                  if (*v106 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v106 -= 2;
                  }
                }
                unsigned int v67 = v133;
                int v133 = 0;
                if (v67) {
                  goto LABEL_230;
                }
                goto LABEL_233;
              }
              WGSL::toString();
              if (v13 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v135, (uint64_t *)&v134);
              uint8x8_t v74 = v134;
              long long v134 = 0;
              if (v74)
              {
                if (*v74 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v74 -= 2;
                }
              }
              unint64_t v66 = v135;
              int v135 = 0;
              if (v66) {
                goto LABEL_369;
              }
            }
            else
            {
              if (!MEMORY[0x18530AEB0](v23, "id", 2))
              {
                if (MEMORY[0x18530AEB0](v23, "invariant", 9))
                {
                  uint8x8_t v84 = *(void **)(a2 + 8);
                  unsigned int v85 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v85, v5);
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::InvariantAttribute,WGSL::SourceSpan,void>(v84, &v171);
                }
                else if (MEMORY[0x18530AEB0](v23, "must_use", 8))
                {
                  unsigned int v93 = *(void **)(a2 + 8);
                  unsigned int v94 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v94, v5);
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::MustUseAttribute,WGSL::SourceSpan,void>(v93, &v171);
                }
                else if (MEMORY[0x18530AEB0](v23, "const", 5))
                {
                  int8x16x2_t v102 = *(void **)(a2 + 8);
                  unsigned int v103 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v103, v5);
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::ConstAttribute,WGSL::SourceSpan,void>(v102, &v171);
                }
                else
                {
                  if (MEMORY[0x18530AEB0](v23, "vertex", 6))
                  {
                    int v107 = *(void **)(a2 + 8);
                    unsigned int v108 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v108, v5);
                    char v109 = 1;
                  }
                  else if (MEMORY[0x18530AEB0](v23, "compute", 7))
                  {
                    int v107 = *(void **)(a2 + 8);
                    unsigned int v115 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v115, v5);
                    char v109 = 4;
                  }
                  else
                  {
                    if (!MEMORY[0x18530AEB0](v23, "fragment", 8))
                    {
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      uint64_t v53 = 0;
                      unint64_t v125 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                      *(void *)a1 = v171;
                      *(void *)(a1 + 8) = v4;
                      *(void *)(a1 + 16) = v125;
                      goto LABEL_374;
                    }
                    int v107 = *(void **)(a2 + 8);
                    unsigned int v120 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v120, v5);
                    char v109 = 2;
                  }
                  LOBYTE(v155) = v109;
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::StageAttribute,WGSL::SourceSpan,WGSL::ShaderStage,void>(v107, &v171, (char *)&v155);
                }
                uint64_t v53 = 0;
                *(void *)a1 = v86;
                *(_DWORD *)(a1 + 24) = 0;
                return (_DWORD *)((uint64_t (*)(void, void))off_1ECABDF90[v53])(&v171, v179);
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
              unint64_t v13 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v155, a2);
                unint64_t v13 = v157;
                if (v157) {
                  goto LABEL_198;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                unint64_t v6 = v174;
                if (!v174)
                {
                  if (v171 == 8 && v173)
                  {
                    if (*v173 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v173 -= 2;
                    }
                  }
                  unsigned int v126 = *(void **)(a2 + 8);
                  unsigned int v127 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v127, v5);
                  unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::IdAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v126, &v171, &v155);
                  goto LABEL_282;
                }
                WGSL::toString();
                if (v6 != 1) {
                  goto LABEL_464;
                }
                WGSL::toString();
                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v129, (uint64_t *)&v128);
                int v114 = v128;
                unint64_t v128 = 0;
                if (v114)
                {
                  if (*v114 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v114 -= 2;
                  }
                }
                unsigned int v67 = v129;
                uint64_t v129 = 0;
                if (v67) {
                  goto LABEL_230;
                }
                goto LABEL_233;
              }
              WGSL::toString();
              if (v13 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v131, (uint64_t *)&v130);
              unsigned int v82 = v130;
              unsigned int v130 = 0;
              if (v82)
              {
                if (*v82 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v82 -= 2;
                }
              }
              unint64_t v66 = v131;
              long long v131 = 0;
              if (v66) {
                goto LABEL_369;
              }
            }
LABEL_372:
            uint64_t v53 = 0;
            uint64_t v61 = (*(_DWORD *)(a2 + 96) - v5);
            uint64_t v62 = v155;
            goto LABEL_373;
          }
          WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
          unint64_t v13 = v174;
          if (v174)
          {
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v139, (uint64_t *)&v138);
            unsigned int v68 = v138;
            unsigned int v138 = 0;
            if (v68)
            {
              if (*v68 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v68 -= 2;
              }
            }
            unint64_t v66 = v139;
            long long v139 = 0;
            if (v66) {
              goto LABEL_369;
            }
            goto LABEL_372;
          }
          if (v171 == 8 && v173)
          {
            if (*v173 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v173 -= 2;
            }
          }
          unint64_t v13 = (unint64_t)&v171;
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v171, a2);
          if (v174)
          {
            if (v174 != 1) {
              goto LABEL_464;
            }
            uint64_t v96 = v171;
            if (v171) {
              *(_DWORD *)v171 += 2;
            }
            *(_OWORD *)(a1 + 8) = v172;
            *(void *)a1 = v96;
            goto LABEL_445;
          }
          unsigned int v97 = (char *)WGSL::parseInterpolationType((uint64_t *)&v173);
          if (!v97)
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            unint64_t v99 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v155;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v99;
            goto LABEL_445;
          }
          unint64_t v13 = (unint64_t)v97;
          LOBYTE(v150) = 0;
          if (*(_DWORD *)(a2 + 56) == 48)
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
            uint64_t v7 = (uint64_t)&v155;
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v155, a2);
            if (v158)
            {
              if (v158 != 1) {
                goto LABEL_464;
              }
              unsigned int v98 = v155;
              if (v155) {
                *(_DWORD *)v155 += 2;
              }
              uint64_t v7 = 0;
              *(_OWORD *)(a1 + 8) = v156;
              *(void *)a1 = v98;
LABEL_424:
              *(_DWORD *)(a1 + 24) = 1;
            }
            else
            {
              int v110 = WGSL::parseInterpolationSampling((uint64_t *)&v157);
              if (!v110)
              {
                WTF::StringImpl::createWithoutCopyingNonEmpty();
                uint64_t v7 = 0;
                unint64_t v116 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                *(void *)a1 = v146;
                *(void *)(a1 + 8) = v4;
                *(void *)(a1 + 16) = v116;
                goto LABEL_424;
              }
              LOBYTE(v150) = *v110;
              uint64_t v7 = 1;
            }
            if (v158 != -1) {
              ((void (*)(const char **, const char **))off_1ECABDF80[v158])(&v146, &v155);
            }
            if (v7)
            {
              if (*(_DWORD *)(a2 + 56) == 48) {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
              }
              goto LABEL_430;
            }
          }
          else
          {
LABEL_430:
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v155, a2, 68);
            unint64_t v6 = v158;
            if (!v158)
            {
              if (v155 == 8 && v157)
              {
                if (*v157 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v157 -= 2;
                }
              }
              uint64_t v123 = *(void **)(a2 + 8);
              unsigned int v124 = *(_DWORD *)(a2 + 96) - v5;
              int8x16x2_t v155 = v4;
              *(void *)&long long v156 = __PAIR64__(v124, v5);
              *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::InterpolateAttribute,WGSL::SourceSpan,WGSL::InterpolationType const&,WGSL::InterpolationSampling &,void>(v123, &v155, (char *)v13, (char *)&v150);
              *(_DWORD *)(a1 + 24) = 0;
              uint64_t v77 = v174;
              if (v174 != -1) {
                goto LABEL_242;
              }
              goto LABEL_243;
            }
            WGSL::toString();
            if (v6 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v137, (uint64_t *)&v136);
            unsigned int v117 = v136;
            long long v136 = 0;
            if (v117)
            {
              if (*v117 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v117 -= 2;
              }
            }
            unsigned int v118 = v137;
            int v137 = 0;
            if (v118)
            {
              if (*v118 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v118 -= 2;
              }
            }
            unint64_t v119 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v146;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v119;
LABEL_445:
            *(_DWORD *)(a1 + 24) = 1;
          }
          uint64_t v77 = v174;
          if (v174 != -1) {
            goto LABEL_242;
          }
          goto LABEL_243;
        }
      }
      unsigned int v28 = *(_DWORD **)(v12 + 32 * v9 + 24);
LABEL_47:
      *(void *)(a2 + 80) = v28;
      goto LABEL_38;
    }
    *(_DWORD *)uint64_t v179 = v13;
    int v181 = 1;
    WGSL::toString();
    WGSL::toString();
    uint64_t v171 = "Expected a ";
    *(void *)&long long v172 = 12;
    int8x16x2_t v155 = ", but got a ";
    *(void *)&long long v156 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v171, (uint64_t *)&v178, (uint64_t)&v155, (uint64_t *)&v177, &v146);
    if (!v146)
    {
      __break(0xC471u);
      JUMPOUT(0x1825B25BCLL);
    }
    unsigned int v32 = v177;
    unsigned int v177 = 0;
    if (v32)
    {
      if (*v32 == 2)
      {
        WTF::StringImpl::destroy();
        char v33 = v178;
        int v178 = 0;
        if (!v33)
        {
LABEL_98:
          unint64_t v52 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v146;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v52;
          uint64_t v53 = 1;
          *(_DWORD *)(a1 + 24) = 1;
          return (_DWORD *)((uint64_t (*)(void, void))off_1ECABDF90[v53])(&v171, v179);
        }
LABEL_95:
        if (*v33 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v33 -= 2;
        }
        goto LABEL_98;
      }
      *v32 -= 2;
    }
    char v33 = v178;
    int v178 = 0;
    if (!v33) {
      goto LABEL_98;
    }
    goto LABEL_95;
  }
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v8 <= v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1825B2594);
    }
    uint64_t v19 = v12 + 32 * v9;
    unsigned int v20 = *(_DWORD *)v19;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v19;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)(v19 + 4);
    unsigned int v21 = *(_DWORD *)v19;
    if (v21 <= 8)
    {
      if (((1 << v21) & 0x38) != 0)
      {
        uint64_t v22 = *(_DWORD **)(v12 + 32 * v9 + 24);
        goto LABEL_32;
      }
      if (((1 << v21) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v12 + 32 * v9 + 24);
      }
      else if (v21 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v22 = *(_DWORD **)(v12 + 32 * v9 + 24);
        if (v22) {
          *v22 += 2;
        }
LABEL_32:
        *(void *)(a2 + 80) = v22;
      }
    }
    int v18 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v18;
    ++v9;
    if (v20 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseDiagnostic((uint64_t)v179, a2);
  if (!v182)
  {
    unint64_t v42 = *(void **)(a2 + 8);
    unsigned int v43 = *(_DWORD *)(a2 + 96) - v5;
    uint64_t v171 = v4;
    *(void *)&long long v172 = __PAIR64__(v43, v5);
    uint64_t result = WGSL::AST::Builder::construct<WGSL::AST::DiagnosticAttribute,WGSL::SourceSpan,WGSL::AST::Diagnostic,void>(v42, &v171, (uint64_t)v179);
    *(void *)a1 = result;
    *(_DWORD *)(a1 + 24) = 0;
    int v30 = v182;
    if (v182 != -1) {
      return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDFC8[v30])(&v171, v179);
    }
    return result;
  }
  if (v182 != 1) {
    goto LABEL_464;
  }
  uint64_t v29 = *(void *)v179;
  if (*(void *)v179) {
    **(_DWORD **)v179 += 2;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v179[8];
  *(void *)a1 = v29;
  int v30 = 1;
  *(_DWORD *)(a1 + 24) = 1;
  return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDFC8[v30])(&v171, v179);
}

void *WGSL::AST::Builder::construct<WGSL::AST::DiagnosticAttribute,WGSL::SourceSpan,WGSL::AST::Diagnostic,void>(void *this, _OWORD *a2, uint64_t a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x67uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE1D0;
  *(unsigned char *)(v6 + 24) = *(unsigned char *)a3;
  *(void *)(v6 + 32) = &unk_1ECABC008;
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(a3 + 16);
  *(void *)(v6 + 32) = off_1ECABC030;
  uint64_t v7 = *(void *)(a3 + 32);
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(v6 + 64) = 0;
  *(void *)(v6 + 56) = v7;
  *(unsigned char *)(v6 + 96) = 0;
  if (*(unsigned char *)(a3 + 72))
  {
    *(void *)(v6 + 64) = &unk_1ECABC008;
    *(_OWORD *)(v6 + 72) = *(_OWORD *)(a3 + 48);
    *(void *)(v6 + 64) = off_1ECABC030;
    uint64_t v8 = *(void *)(a3 + 64);
    *(void *)(a3 + 64) = 0;
    *(void *)(v6 + 88) = v8;
    *(unsigned char *)(v6 + 96) = 1;
  }
  *v5 += 104;
  unint64_t v9 = *((unsigned int *)v5 + 11);
  if (v9 != *((_DWORD *)v5 + 10))
  {
    uint64_t v16 = (void *)(v5[4] + 8 * v9);
LABEL_19:
    *uint64_t v16 = v6;
    *((_DWORD *)v5 + 11) = v9 + 1;
    return (void *)v6;
  }
  unint64_t v10 = v9 + (v9 >> 2);
  if (v10 >= 0x10) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = 16;
  }
  if (v11 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!(v12 >> 29))
  {
    unint64_t v13 = (void *)v5[4];
    unsigned int v14 = (void *)WTF::fastMalloc((WTF *)(8 * v12));
    *((_DWORD *)v5 + 10) = v12;
    v5[4] = v14;
    memcpy(v14, v13, 8 * v9);
    if (v13)
    {
      if ((void *)v5[4] == v13)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v13, v15);
    }
    unint64_t v9 = *((unsigned int *)v5 + 11);
    uint64_t v16 = (void *)(v5[4] + 8 * v9);
    goto LABEL_19;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::GroupAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABD430;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unsigned int v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    unint64_t v11 = (void *)v5[4];
    unint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unsigned int v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::BindingAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABD458;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unsigned int v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    unint64_t v11 = (void *)v5[4];
    unint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unsigned int v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::LocationAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  uint64_t v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE1F8;
  *(void *)(v6 + 24) = v7;
  *v5 += 32;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::BuiltinAttribute,WGSL::SourceSpan,WGSL::Builtin const&,void>(void *this, _OWORD *a2, char *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  char v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABD4F8;
  *(unsigned char *)(v6 + 24) = v7;
  *v5 += 32;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    int v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *int v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    int v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::WorkgroupSizeAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::Expression*,WGSL::AST::Expression*,void>(void *this, _OWORD *a2, void *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t v9 = this;
  uint64_t v10 = *this;
  if (this[1] - *this <= 0x2FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v10 = *v9;
  }
  uint64_t v11 = *a4;
  uint64_t v12 = *a5;
  *(_OWORD *)(v10 + 8) = *a2;
  *(void *)uint64_t v10 = &unk_1ECABE220;
  *(void *)(v10 + 24) = *a3;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  *v9 += 48;
  unint64_t v13 = *((unsigned int *)v9 + 11);
  if (v13 != *((_DWORD *)v9 + 10))
  {
    unsigned int v20 = (void *)(v9[4] + 8 * v13);
LABEL_17:
    *unsigned int v20 = v10;
    *((_DWORD *)v9 + 11) = v13 + 1;
    return (void *)v10;
  }
  unint64_t v14 = v13 + (v13 >> 2);
  if (v14 >= 0x10) {
    unint64_t v15 = v14 + 1;
  }
  else {
    unint64_t v15 = 16;
  }
  if (v15 <= v13 + 1) {
    unint64_t v16 = v13 + 1;
  }
  else {
    unint64_t v16 = v15;
  }
  if (!(v16 >> 29))
  {
    uint64_t v17 = (void *)v9[4];
    int v18 = (void *)WTF::fastMalloc((WTF *)(8 * v16));
    *((_DWORD *)v9 + 10) = v16;
    v9[4] = v18;
    memcpy(v18, v17, 8 * v13);
    if (v17)
    {
      if ((void *)v9[4] == v17)
      {
        v9[4] = 0;
        *((_DWORD *)v9 + 10) = 0;
      }
      WTF::fastFree((WTF *)v17, v19);
    }
    unint64_t v13 = *((unsigned int *)v9 + 11);
    unsigned int v20 = (void *)(v9[4] + 8 * v13);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::AlignAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE248;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    uint64_t v11 = (void *)v5[4];
    uint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::InterpolateAttribute,WGSL::SourceSpan,WGSL::InterpolationType const&,WGSL::InterpolationSampling &,void>(void *this, _OWORD *a2, char *a3, char *a4)
{
  unint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  char v9 = *a3;
  char v10 = *a4;
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)uint64_t v8 = &unk_1ECABE270;
  *(unsigned char *)(v8 + 24) = v9;
  *(unsigned char *)(v8 + 25) = v10;
  *v7 += 32;
  unint64_t v11 = *((unsigned int *)v7 + 11);
  if (v11 != *((_DWORD *)v7 + 10))
  {
    int v18 = (void *)(v7[4] + 8 * v11);
LABEL_17:
    *int v18 = v8;
    *((_DWORD *)v7 + 11) = v11 + 1;
    return (void *)v8;
  }
  unint64_t v12 = v11 + (v11 >> 2);
  if (v12 >= 0x10) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = 16;
  }
  if (v13 <= v11 + 1) {
    unint64_t v14 = v11 + 1;
  }
  else {
    unint64_t v14 = v13;
  }
  if (!(v14 >> 29))
  {
    unint64_t v15 = (void *)v7[4];
    unint64_t v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
    *((_DWORD *)v7 + 10) = v14;
    v7[4] = v16;
    memcpy(v16, v15, 8 * v11);
    if (v15)
    {
      if ((void *)v7[4] == v15)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v15, v17);
    }
    unint64_t v11 = *((unsigned int *)v7 + 11);
    int v18 = (void *)(v7[4] + 8 * v11);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::SizeAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE298;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    unint64_t v11 = (void *)v5[4];
    unint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::IdAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE2C0;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    unint64_t v11 = (void *)v5[4];
    unint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unint64_t v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::InvariantAttribute,WGSL::SourceSpan,void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x17uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE2E8;
  *v3 += 24;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    unint64_t v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *unint64_t v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    unint64_t v9 = (void *)v3[4];
    unint64_t v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    unint64_t v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::MustUseAttribute,WGSL::SourceSpan,void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x17uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE310;
  *v3 += 24;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    unint64_t v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *unint64_t v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    unint64_t v9 = (void *)v3[4];
    unint64_t v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    unint64_t v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ConstAttribute,WGSL::SourceSpan,void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x17uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE338;
  *v3 += 24;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    unint64_t v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *unint64_t v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    unint64_t v9 = (void *)v3[4];
    unint64_t v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    unint64_t v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::StageAttribute,WGSL::SourceSpan,WGSL::ShaderStage,void>(void *this, _OWORD *a2, char *a3)
{
  unint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  char v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE360;
  *(unsigned char *)(v6 + 24) = v7;
  *v5 += 32;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unint64_t v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unint64_t v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    unint64_t v12 = (void *)v5[4];
    unint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unint64_t v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::DiagnosticAttribute::~DiagnosticAttribute(WGSL::AST::DiagnosticAttribute *this)
{
  if (!*((unsigned char *)this + 96)
    || (*((void *)this + 8) = off_1ECABC030, uint64_t v2 = (_DWORD *)*((void *)this + 11), *((void *)this + 11) = 0, !v2))
  {
LABEL_5:
    *((void *)this + 4) = off_1ECABC030;
    char v3 = (_DWORD *)*((void *)this + 7);
    *((void *)this + 7) = 0;
    if (!v3) {
      return;
    }
    goto LABEL_6;
  }
  if (*v2 != 2)
  {
    *v2 -= 2;
    goto LABEL_5;
  }
  WTF::StringImpl::destroy();
  *((void *)this + 4) = off_1ECABC030;
  char v3 = (_DWORD *)*((void *)this + 7);
  *((void *)this + 7) = 0;
  if (!v3) {
    return;
  }
LABEL_6:
  if (*v3 == 2) {
    WTF::StringImpl::destroy();
  }
  else {
    *v3 -= 2;
  }
}

{
  _DWORD *v2;
  _DWORD *v3;
  uint64_t vars8;

  if (*((unsigned char *)this + 96))
  {
    *((void *)this + 8) = off_1ECABC030;
    uint64_t v2 = (_DWORD *)*((void *)this + 11);
    *((void *)this + 11) = 0;
    if (v2)
    {
      if (*v2 == 2)
      {
        WTF::StringImpl::destroy();
        *((void *)this + 4) = off_1ECABC030;
        char v3 = (_DWORD *)*((void *)this + 7);
        *((void *)this + 7) = 0;
        if (v3)
        {
LABEL_6:
          if (*v3 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v3 -= 2;
          }
        }
LABEL_9:
        JUMPOUT(0x18530AFF0);
      }
      *v2 -= 2;
    }
  }
  *((void *)this + 4) = off_1ECABC030;
  char v3 = (_DWORD *)*((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v3) {
    goto LABEL_6;
  }
  goto LABEL_9;
}

uint64_t WGSL::AST::DiagnosticAttribute::kind(WGSL::AST::DiagnosticAttribute *this)
{
  return 5;
}

void WGSL::AST::LocationAttribute::~LocationAttribute(WGSL::AST::LocationAttribute *this)
{
}

uint64_t WGSL::AST::LocationAttribute::kind(WGSL::AST::LocationAttribute *this)
{
  return 10;
}

void WGSL::AST::WorkgroupSizeAttribute::~WorkgroupSizeAttribute(WGSL::AST::WorkgroupSizeAttribute *this)
{
}

uint64_t WGSL::AST::WorkgroupSizeAttribute::kind(WGSL::AST::WorkgroupSizeAttribute *this)
{
  return 14;
}

void WGSL::AST::AlignAttribute::~AlignAttribute(WGSL::AST::AlignAttribute *this)
{
}

uint64_t WGSL::AST::AlignAttribute::kind(WGSL::AST::AlignAttribute *this)
{
  return 1;
}

void WGSL::AST::InterpolateAttribute::~InterpolateAttribute(WGSL::AST::InterpolateAttribute *this)
{
}

uint64_t WGSL::AST::InterpolateAttribute::kind(WGSL::AST::InterpolateAttribute *this)
{
  return 8;
}

void WGSL::AST::SizeAttribute::~SizeAttribute(WGSL::AST::SizeAttribute *this)
{
}

uint64_t WGSL::AST::SizeAttribute::kind(WGSL::AST::SizeAttribute *this)
{
  return 12;
}

void WGSL::AST::IdAttribute::~IdAttribute(WGSL::AST::IdAttribute *this)
{
}

uint64_t WGSL::AST::IdAttribute::kind(WGSL::AST::IdAttribute *this)
{
  return 7;
}

void WGSL::AST::InvariantAttribute::~InvariantAttribute(WGSL::AST::InvariantAttribute *this)
{
}

uint64_t WGSL::AST::InvariantAttribute::kind(WGSL::AST::InvariantAttribute *this)
{
  return 9;
}

void WGSL::AST::MustUseAttribute::~MustUseAttribute(WGSL::AST::MustUseAttribute *this)
{
}

uint64_t WGSL::AST::MustUseAttribute::kind(WGSL::AST::MustUseAttribute *this)
{
  return 11;
}

void WGSL::AST::ConstAttribute::~ConstAttribute(WGSL::AST::ConstAttribute *this)
{
}

uint64_t WGSL::AST::ConstAttribute::kind(WGSL::AST::ConstAttribute *this)
{
  return 4;
}

void WGSL::AST::StageAttribute::~StageAttribute(WGSL::AST::StageAttribute *this)
{
}

uint64_t WGSL::AST::StageAttribute::kind(WGSL::AST::StageAttribute *this)
{
  return 13;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST9AttributeEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::StructureMember,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(void *this, _OWORD *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t v9 = this;
  uint64_t v10 = *this;
  if (this[1] - *this <= 0x9FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v10 = *v9;
  }
  *(_OWORD *)(v10 + 8) = *a2;
  *(void *)uint64_t v10 = &unk_1ECABC888;
  *(void *)(v10 + 24) = &unk_1ECABC008;
  *(_OWORD *)(v10 + 32) = *(_OWORD *)(a3 + 8);
  *(void *)(v10 + 24) = off_1ECABC030;
  unint64_t v11 = *(_DWORD **)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(v10 + 32);
  *(void *)(v10 + 48) = v11;
  *(void *)(v10 + 56) = off_1ECABC030;
  if (v11) {
    *v11 += 2;
  }
  *(void *)(v10 + 88) = 0;
  *(void *)(v10 + 96) = 0;
  *(void *)(v10 + 80) = v11;
  uint64_t v12 = *a5;
  *a5 = 0;
  *(void *)(v10 + 88) = v12;
  LODWORD(v12) = *((_DWORD *)a5 + 2);
  *((_DWORD *)a5 + 2) = 0;
  *(_DWORD *)(v10 + 96) = v12;
  LODWORD(v12) = *((_DWORD *)a5 + 3);
  *((_DWORD *)a5 + 3) = 0;
  *(_DWORD *)(v10 + 100) = v12;
  uint64_t v13 = *a4;
  *(unsigned char *)(v10 + 124) = 0;
  *(unsigned char *)(v10 + 128) = 0;
  *(unsigned char *)(v10 + 132) = 0;
  *(unsigned char *)(v10 + 136) = 0;
  *(_WORD *)(v10 + 140) = 0;
  *(unsigned char *)(v10 + 144) = 0;
  *(unsigned char *)(v10 + 148) = 0;
  *(unsigned char *)(v10 + 152) = 0;
  *(unsigned char *)(v10 + 154) = 0;
  *(void *)(v10 + 104) = v13;
  *(void *)(v10 + 112) = 0;
  *(unsigned char *)(v10 + 120) = 0;
  *v9 += 160;
  unint64_t v14 = *((unsigned int *)v9 + 11);
  if (v14 != *((_DWORD *)v9 + 10))
  {
    unsigned int v21 = (void *)(v9[4] + 8 * v14);
LABEL_19:
    *unsigned int v21 = v10;
    *((_DWORD *)v9 + 11) = v14 + 1;
    return (void *)v10;
  }
  unint64_t v15 = v14 + (v14 >> 2);
  if (v15 >= 0x10) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = 16;
  }
  if (v16 <= v14 + 1) {
    unint64_t v17 = v14 + 1;
  }
  else {
    unint64_t v17 = v16;
  }
  if (!(v17 >> 29))
  {
    int v18 = (void *)v9[4];
    uint64_t v19 = (void *)WTF::fastMalloc((WTF *)(8 * v17));
    *((_DWORD *)v9 + 10) = v17;
    v9[4] = v19;
    memcpy(v19, v18, 8 * v14);
    if (v18)
    {
      if ((void *)v9[4] == v18)
      {
        v9[4] = 0;
        *((_DWORD *)v9 + 10) = 0;
      }
      WTF::fastFree((WTF *)v18, v20);
    }
    unint64_t v14 = *((unsigned int *)v9 + 11);
    unsigned int v21 = (void *)(v9[4] + 8 * v14);
    goto LABEL_19;
  }
  __break(0xC471u);
  return this;
}

WTF *WTF::HashTable<WTF::String,WTF::String,WTF::IdentityExtractor,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String>>::add(uint64_t a1, uint64_t *a2, const WTF::StringImpl **a3)
{
  uint64_t v6 = *a2;
  if (!*a2)
  {
    WTF::HashTable<WTF::String,WTF::String,WTF::IdentityExtractor,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String>>::rehash(a2, 8u, 0);
    uint64_t v6 = *a2;
    if (!*a2)
    {
      int v7 = 0;
      unint64_t v8 = *a3;
      unsigned int v9 = *((_DWORD *)*a3 + 4);
      if (v9 >= 0x100) {
        goto LABEL_4;
      }
LABEL_6:
      unsigned int v10 = WTF::StringImpl::hashSlowCase(v8);
      goto LABEL_7;
    }
  }
  int v7 = *(_DWORD *)(v6 - 8);
  unint64_t v8 = *a3;
  unsigned int v9 = *((_DWORD *)*a3 + 4);
  if (v9 < 0x100) {
    goto LABEL_6;
  }
LABEL_4:
  unsigned int v10 = v9 >> 8;
LABEL_7:
  unint64_t v11 = 0;
  for (int i = 1; ; ++i)
  {
    unsigned int v13 = v10 & v7;
    unint64_t v14 = (WTF::StringImpl **)(v6 + 8 * (v10 & v7));
    uint64_t result = *v14;
    if (*v14 == (WTF::StringImpl *)-1)
    {
      unint64_t v11 = (WTF::StringImpl **)(v6 + 8 * v13);
      goto LABEL_9;
    }
    if (!result)
    {
      if (v11)
      {
        uint64_t result = 0;
        *unint64_t v11 = 0;
        --*(_DWORD *)(*a2 - 16);
        unint64_t v14 = v11;
      }
      int v18 = *a3;
      if (*a3) {
        *(_DWORD *)v18 += 2;
      }
      void *v14 = v18;
      if (*a2)
      {
        ++*(_DWORD *)(*a2 - 12);
        uint64_t v19 = *a2;
        if (*a2) {
          goto LABEL_21;
        }
      }
      else
      {
        MEMORY[0xFFFFFFFFFFFFFFF4] = 1;
        uint64_t v19 = *a2;
        if (*a2)
        {
LABEL_21:
          uint64_t v20 = (*(_DWORD *)(v19 - 16) + *(_DWORD *)(v19 - 12));
          unint64_t v21 = *(unsigned int *)(v19 - 4);
          if (v21 <= 0x400) {
            goto LABEL_22;
          }
          goto LABEL_30;
        }
      }
      uint64_t v20 = *(unsigned int *)(v19 - 16);
      unint64_t v21 = *(unsigned int *)(v19 - 4);
      if (v21 <= 0x400)
      {
LABEL_22:
        if (3 * v21 > 4 * v20)
        {
LABEL_33:
          uint64_t v23 = v19 + 8 * v21;
          char v22 = 1;
          goto LABEL_34;
        }
        if (!v21)
        {
          uint64_t result = (WTF *)WTF::HashTable<WTF::String,WTF::String,WTF::IdentityExtractor,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String>>::rehash(a2, 8u, v14);
          unint64_t v14 = (WTF::StringImpl **)result;
          uint64_t v19 = *a2;
          if (!*a2)
          {
LABEL_25:
            unint64_t v21 = 0;
            goto LABEL_33;
          }
LABEL_32:
          unint64_t v21 = *(unsigned int *)(v19 - 4);
          goto LABEL_33;
        }
LABEL_31:
        uint64_t result = (WTF *)WTF::HashTable<WTF::String,WTF::String,WTF::IdentityExtractor,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String>>::rehash(a2, v21 << (6 * *(_DWORD *)(v19 - 12) >= (2 * v21)), v14);
        unint64_t v14 = (WTF::StringImpl **)result;
        uint64_t v19 = *a2;
        if (!*a2) {
          goto LABEL_25;
        }
        goto LABEL_32;
      }
LABEL_30:
      if (v21 > 2 * v20) {
        goto LABEL_33;
      }
      goto LABEL_31;
    }
    uint64_t result = (WTF *)WTF::equal(result, *a3, (const WTF::StringImpl *)a3);
    if (result) {
      break;
    }
LABEL_9:
    unsigned int v10 = i + v13;
  }
  uint64_t v16 = *a2;
  if (*a2) {
    uint64_t v17 = *(unsigned int *)(v16 - 4);
  }
  else {
    uint64_t v17 = 0;
  }
  char v22 = 0;
  uint64_t v23 = v16 + 8 * v17;
LABEL_34:
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v23;
  *(unsigned char *)(a1 + 16) = v22;
  return result;
}

uint64_t WTF::tryMakeString<WTF::ASCIILiteral,WGSL::AST::Identifier,WTF::ASCIILiteral,WGSL::AST::Identifier,char>(uint64_t result, int8x16_t *a2, uint64_t a3, uint64_t a4, int8x16_t *a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a3) {
    size_t v8 = a3 - 1;
  }
  else {
    size_t v8 = 0;
  }
  if (v8 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x1825B483CLL);
  }
  if (a6) {
    unint64_t v9 = a6 - 1;
  }
  else {
    unint64_t v9 = 0;
  }
  if (v9 >> 31)
  {
    __break(0xC471u);
    JUMPOUT(0x1825B485CLL);
  }
  unint64_t v15 = (void *)result;
  if (!a4)
  {
    int v16 = 0;
    if (a7) {
      goto LABEL_11;
    }
LABEL_16:
    uint64_t v18 = 0;
    int v20 = 1;
    goto LABEL_17;
  }
  int v16 = *(_DWORD *)(a4 + 4);
  if (!a7) {
    goto LABEL_16;
  }
LABEL_11:
  int v17 = *(_DWORD *)(a7 + 4);
  if (v17 < 0) {
    goto LABEL_25;
  }
  uint64_t v18 = 0;
  BOOL v19 = __OFADD__(v17, 1);
  int v20 = v17 + 1;
  if (v19) {
    goto LABEL_26;
  }
LABEL_17:
  BOOL v19 = __OFADD__(v9, v20);
  int v21 = v9 + v20;
  char v22 = v19;
  if (v16 < 0 || (v22 & 1) != 0) {
    goto LABEL_26;
  }
  BOOL v19 = __OFADD__(v16, v21);
  int v23 = v16 + v21;
  if (v19 || (uint64_t v24 = (v8 + v23), __OFADD__(v8, v23)))
  {
LABEL_25:
    uint64_t v18 = 0;
    goto LABEL_26;
  }
  if ((!a4 || (*(unsigned char *)(a4 + 16) & 4) != 0) && (!a7 || (*(unsigned char *)(a7 + 16) & 4) != 0))
  {
    if (!v24) {
      goto LABEL_44;
    }
    if ((v24 & 0x80000000) != 0) {
      goto LABEL_25;
    }
    uint64_t result = WTF::tryFastCompactMalloc((WTF *)(v24 + 20));
    uint64_t v18 = v209;
    if (!v209) {
      goto LABEL_26;
    }
    int v36 = (unsigned char *)(v209 + 20);
    *(_DWORD *)uint64_t v209 = 2;
    *(_DWORD *)(v209 + 4) = v24;
    *(void *)(v209 + 8) = v209 + 20;
    *(_DWORD *)(v209 + 16) = 4;
    char v37 = a8;
    if (v8)
    {
      if (v8 == 1)
      {
        *int v36 = a2->i8[0];
      }
      else
      {
        uint64_t result = (uint64_t)memcpy((void *)(v209 + 20), a2, v8);
        int v36 = (unsigned char *)(v209 + 20);
        char v37 = a8;
      }
    }
    unsigned int v49 = (unsigned long long *)&v36[v8];
    if (!a4)
    {
      uint64_t v56 = 0;
      goto LABEL_111;
    }
    unsigned int v50 = *(int8x16_t **)(a4 + 8);
    size_t v51 = *(unsigned int *)(a4 + 4);
    if ((*(unsigned char *)(a4 + 16) & 4) != 0)
    {
      if (v51)
      {
        if (v51 == 1)
        {
          *(unsigned char *)unsigned int v49 = v50->i8[0];
        }
        else
        {
          uint64_t result = (uint64_t)memcpy(&v36[v8], v50, v51);
          char v37 = a8;
        }
      }
      goto LABEL_110;
    }
    unint64_t v52 = (char *)v49 + v51;
    if (v51 < 0x10)
    {
      unint64_t v53 = (unint64_t)&v36[v8];
    }
    else
    {
      unint64_t v53 = (unint64_t)v49 + (v51 & 0xFFFFFFF0);
      int v54 = v49;
      do
      {
        unsigned long long v55 = (unsigned __int128)vld2q_s8(v50->i8);
        v50 += 2;
        *v54++ = v55;
      }
      while (v54 != (unsigned long long *)v53);
    }
    if ((unsigned char *)v53 == v52)
    {
LABEL_110:
      uint64_t v56 = *(unsigned int *)(a4 + 4);
LABEL_111:
      unsigned int v85 = (char *)v49 + v56;
      if (v9)
      {
        if (v9 == 1)
        {
          unsigned char *v85 = a5->i8[0];
        }
        else
        {
          uint64_t result = (uint64_t)memcpy((char *)v49 + v56, a5, v9);
          char v37 = a8;
        }
      }
      int v86 = &v85[v9];
      if (!a7)
      {
        unsigned char *v86 = v37;
        goto LABEL_26;
      }
      uint64_t v87 = *(int8x16_t **)(a7 + 8);
      size_t v88 = *(unsigned int *)(a7 + 4);
      if ((*(unsigned char *)(a7 + 16) & 4) != 0)
      {
        if (v88)
        {
          if (v88 == 1)
          {
            unsigned char *v86 = v87->i8[0];
          }
          else
          {
            uint64_t result = (uint64_t)memcpy(&v85[v9], v87, v88);
            char v37 = a8;
          }
        }
        goto LABEL_137;
      }
      unsigned int v89 = &v86[v88];
      if (v88 < 0x10)
      {
        unint64_t v90 = (unint64_t)&v85[v9];
      }
      else
      {
        unint64_t v90 = (unint64_t)&v86[v88 & 0xFFFFFFF0];
        unint64_t v91 = (unsigned long long *)&v85[v9];
        do
        {
          unsigned long long v92 = (unsigned __int128)vld2q_s8(v87->i8);
          v87 += 2;
          *v91++ = v92;
        }
        while (v91 != (unsigned long long *)v90);
      }
      if ((unsigned char *)v90 == v89)
      {
LABEL_137:
        v86[*(unsigned int *)(a7 + 4)] = v37;
        goto LABEL_26;
      }
      size_t v93 = v56 + a3 + v209 + v88 + v9;
      unint64_t v94 = v93 - v90 - (a3 != 0) + 20;
      if (v94 < 8
        || (!a3 ? (unint64_t v95 = v90) : (unint64_t v95 = v90 + 1),
            v90 < (unint64_t)&v87[2].u64[1] + 2 * v93 + -2 * v95 && (unint64_t)v87 < v93 - (a3 != 0) + 20))
      {
        uint64_t v96 = (unsigned char *)v90;
        unsigned int v97 = v87;
        goto LABEL_134;
      }
      if (v94 >= 0x20)
      {
        unint64_t v160 = v94 & 0xFFFFFFFFFFFFFFE0;
        unsigned int v176 = v87 + 2;
        unsigned int v177 = (int8x16_t *)(v90 + 16);
        unint64_t v178 = v94 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          int8x16_t v180 = v176[-2];
          int8x16_t v179 = v176[-1];
          int8x16_t v182 = *v176;
          int8x16_t v181 = v176[1];
          v176 += 4;
          v177[-1] = vuzp1q_s8(v180, v179);
          *unsigned int v177 = vuzp1q_s8(v182, v181);
          v177 += 2;
          v178 -= 32;
        }
        while (v178);
        if (v94 == v160) {
          goto LABEL_137;
        }
        if ((v94 & 0x18) == 0)
        {
          unsigned int v97 = (int8x16_t *)((char *)v87 + 2 * v160);
          uint64_t v96 = (unsigned char *)(v90 + v160);
          do
          {
LABEL_134:
            char v98 = v97->i8[0];
            unsigned int v97 = (int8x16_t *)((char *)v97 + 2);
            *v96++ = v98;
          }
          while (v96 != v89);
          goto LABEL_137;
        }
      }
      else
      {
        unint64_t v160 = 0;
      }
      uint64_t v96 = (unsigned char *)(v90 + (v94 & 0xFFFFFFFFFFFFFFF8));
      unsigned int v97 = (int8x16_t *)((char *)v87 + 2 * (v94 & 0xFFFFFFFFFFFFFFF8));
      int8x16_t v183 = (int16x8_t *)((char *)v87 + 2 * v160);
      uint64_t v184 = (int8x8_t *)(v90 + v160);
      unint64_t v185 = v160 - (v94 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        int16x8_t v186 = *v183++;
        *v184++ = vmovn_s16(v186);
        v185 += 8;
      }
      while (v185);
      if (v94 == (v94 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_137;
      }
      goto LABEL_134;
    }
    size_t v67 = v209 + a3 + v51;
    unint64_t v68 = v67 - v53 - (a3 != 0) + 20;
    if (v68 < 8
      || (!a3 ? (unint64_t v69 = v53) : (unint64_t v69 = v53 + 1),
          v53 < (unint64_t)&v50[2].u64[1] + 2 * v67 + -2 * v69
        ? (BOOL v70 = (unint64_t)v50 >= v67 - (a3 != 0) + 20)
        : (BOOL v70 = 1),
          !v70))
    {
      unsigned int v72 = (unsigned char *)v53;
      unsigned int v73 = v50;
      goto LABEL_92;
    }
    if (v68 >= 0x20)
    {
      unint64_t v71 = v68 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v165 = v50 + 2;
      int8x16x2_t v166 = (int8x16_t *)(v53 + 16);
      unint64_t v167 = v68 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v169 = v165[-2];
        int8x16_t v168 = v165[-1];
        int8x16_t v171 = *v165;
        int8x16_t v170 = v165[1];
        v165 += 4;
        v166[-1] = vuzp1q_s8(v169, v168);
        *int8x16x2_t v166 = vuzp1q_s8(v171, v170);
        v166 += 2;
        v167 -= 32;
      }
      while (v167);
      if (v68 == v71) {
        goto LABEL_110;
      }
      if ((v68 & 0x18) == 0)
      {
        unsigned int v73 = (int8x16_t *)((char *)v50 + 2 * v71);
        unsigned int v72 = (unsigned char *)(v53 + v71);
        do
        {
LABEL_92:
          char v74 = v73->i8[0];
          unsigned int v73 = (int8x16_t *)((char *)v73 + 2);
          *v72++ = v74;
        }
        while (v72 != v52);
        goto LABEL_110;
      }
    }
    else
    {
      unint64_t v71 = 0;
    }
    unsigned int v72 = (unsigned char *)(v53 + (v68 & 0xFFFFFFFFFFFFFFF8));
    unsigned int v73 = (int8x16_t *)((char *)v50 + 2 * (v68 & 0xFFFFFFFFFFFFFFF8));
    long long v172 = (int16x8_t *)((char *)v50 + 2 * v71);
    int8x16_t v173 = (int8x8_t *)(v53 + v71);
    unint64_t v174 = v71 - (v68 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      int16x8_t v175 = *v172++;
      *v173++ = vmovn_s16(v175);
      v174 += 8;
    }
    while (v174);
    if (v68 == (v68 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_110;
    }
    goto LABEL_92;
  }
  if (!v24)
  {
LABEL_44:
    uint64_t v18 = MEMORY[0x1E4F30960];
    *MEMORY[0x1E4F30960] += 2;
    goto LABEL_26;
  }
  if (v24 > 0x7FFFFFEF) {
    goto LABEL_25;
  }
  uint64_t result = WTF::tryFastCompactMalloc((WTF *)(2 * v24 + 20));
  uint64_t v18 = v209;
  if (v209)
  {
    unint64_t v25 = v209 + 20;
    *(_DWORD *)uint64_t v209 = 2;
    *(_DWORD *)(v209 + 4) = v24;
    *(void *)(v209 + 8) = v209 + 20;
    *(_DWORD *)(v209 + 16) = 0;
    unsigned int v26 = (_WORD *)(v209 + 20 + 2 * v8);
    if ((v8 & 0xFFFFFFC0) != 0)
    {
      unint64_t v27 = v25 + 2 * (v8 & 0xFFFFFFC0);
      long long v28 = 0uLL;
      char v29 = a8;
      do
      {
        v210.val[0] = *a2;
        int8x16_t v30 = a2[1];
        v214.val[0] = a2[2];
        int8x16_t v31 = a2[3];
        a2 += 4;
        int8x16_t v32 = v31;
        v214.val[1] = 0uLL;
        v218.val[0] = v30;
        v210.val[1] = 0uLL;
        char v33 = (char *)v25;
        vst2q_s8(v33, v210);
        v33 += 32;
        v218.val[1] = 0uLL;
        vst2q_s8(v33, v218);
        unsigned int v34 = (char *)(v25 + 64);
        vst2q_s8(v34, v214);
        unsigned int v35 = (char *)(v25 + 96);
        vst2q_s8(v35, *(int8x16x2_t *)(&v28 - 1));
        v25 += 128;
      }
      while (v25 != v27);
      unint64_t v25 = v27;
    }
    else
    {
      char v29 = a8;
    }
    if ((_WORD *)v25 != v26)
    {
      unint64_t v38 = v209 + 2 * a3 - v25;
      uint64_t v39 = -2;
      if (a3) {
        uint64_t v40 = -2;
      }
      else {
        uint64_t v40 = 0;
      }
      unint64_t v41 = v38 + v40 + 18;
      if (v41 < 0xE) {
        goto LABEL_55;
      }
      if (!a3) {
        uint64_t v39 = 0;
      }
      unint64_t v42 = v38 + v39 + 18;
      if (v25 < (unint64_t)a2->u64 + (v42 >> 1) + 1
        && (unint64_t)a2 < (v42 & 0xFFFFFFFFFFFFFFFELL) + v25 + 2)
      {
LABEL_55:
        unsigned int v43 = (_WORD *)v25;
        unsigned int v44 = a2;
        goto LABEL_56;
      }
      uint64_t v75 = (v41 >> 1) + 1;
      if (v41 >= 0x3E)
      {
        unint64_t v76 = v75 & 0xFFFFFFFFFFFFFFE0;
        unsigned int v140 = (uint8x8_t *)&a2[1];
        uint64_t v141 = (uint16x8_t *)(v25 + 32);
        unint64_t v142 = v75 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v143 = *(uint8x16_t *)v140[-2].i8;
          uint16x8_t v144 = vmovl_u8(*v140);
          uint16x8_t v145 = vmovl_high_u8(*(uint8x16_t *)v140->i8);
          v141[-2] = vmovl_u8(*(uint8x8_t *)v143.i8);
          v141[-1] = vmovl_high_u8(v143);
          *uint64_t v141 = v144;
          v141[1] = v145;
          v141 += 4;
          v140 += 4;
          v142 -= 32;
        }
        while (v142);
        if (v75 == v76) {
          goto LABEL_57;
        }
        if ((v75 & 0x18) == 0)
        {
          unsigned int v44 = (int8x16_t *)((char *)a2 + v76);
          unsigned int v43 = (_WORD *)(v25 + 2 * v76);
          do
          {
LABEL_56:
            __int16 v45 = v44->u8[0];
            unsigned int v44 = (int8x16_t *)((char *)v44 + 1);
            *v43++ = v45;
          }
          while (v43 != v26);
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v76 = 0;
      }
      unsigned int v43 = (_WORD *)(v25 + 2 * (v75 & 0xFFFFFFFFFFFFFFF8));
      unsigned int v44 = (int8x16_t *)((char *)a2 + (v75 & 0xFFFFFFFFFFFFFFF8));
      int8x16_t v146 = (uint8x8_t *)&a2->i8[v76];
      long long v147 = (uint16x8_t *)(v25 + 2 * v76);
      unint64_t v148 = v76 - (v75 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint8x8_t v149 = *v146++;
        *v147++ = vmovl_u8(v149);
        v148 += 8;
      }
      while (v148);
      if (v75 != (v75 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_56;
      }
    }
LABEL_57:
    if (!a4)
    {
      uint64_t v48 = 0;
      goto LABEL_140;
    }
    int v46 = *(int8x16_t **)(a4 + 8);
    uint64_t v47 = *(unsigned int *)(a4 + 4);
    if ((*(unsigned char *)(a4 + 16) & 4) == 0)
    {
      if (v47)
      {
        if (v47 == 1)
        {
          *unsigned int v26 = v46->i16[0];
        }
        else
        {
          uint64_t result = (uint64_t)memcpy((void *)(v209 + 20 + 2 * v8), v46, 2 * v47);
          char v29 = a8;
        }
      }
      goto LABEL_139;
    }
    unsigned int v57 = &v26[v47];
    if (v47 < 0x40)
    {
      unint64_t v58 = v209 + 20 + 2 * v8;
    }
    else
    {
      unint64_t v58 = (unint64_t)&v26[v47 & 0xFFFFFFC0];
      long long v59 = 0uLL;
      uint64_t v60 = v209 + 20 + 2 * v8;
      do
      {
        v211.val[0] = *v46;
        int8x16_t v61 = v46[1];
        v215.val[0] = v46[2];
        int8x16_t v62 = v46[3];
        v46 += 4;
        int8x16_t v63 = v62;
        v215.val[1] = 0uLL;
        v219.val[0] = v61;
        v211.val[1] = 0uLL;
        unsigned int v64 = (char *)v60;
        vst2q_s8(v64, v211);
        v64 += 32;
        v219.val[1] = 0uLL;
        vst2q_s8(v64, v219);
        char v65 = (char *)(v60 + 64);
        vst2q_s8(v65, v215);
        unint64_t v66 = (char *)(v60 + 96);
        vst2q_s8(v66, *(int8x16x2_t *)(&v59 - 1));
        v60 += 128;
      }
      while (v60 != v58);
    }
    if ((_WORD *)v58 == v57)
    {
LABEL_139:
      uint64_t v48 = *(unsigned int *)(a4 + 4);
LABEL_140:
      unint64_t v99 = (unint64_t)&v26[v48];
      unsigned int v100 = (_WORD *)(v99 + 2 * v9);
      if ((v9 & 0xFFFFFFC0) != 0)
      {
        unint64_t v101 = v99 + 2 * (v9 & 0xFFFFFFC0);
        long long v102 = 0uLL;
        do
        {
          v212.val[0] = *a5;
          int8x16_t v103 = a5[1];
          v216.val[0] = a5[2];
          int8x16_t v104 = a5[3];
          a5 += 4;
          int8x16_t v105 = v104;
          v216.val[1] = 0uLL;
          v220.val[0] = v103;
          v212.val[1] = 0uLL;
          unsigned int v106 = (char *)v99;
          vst2q_s8(v106, v212);
          v106 += 32;
          v220.val[1] = 0uLL;
          vst2q_s8(v106, v220);
          int v107 = (char *)(v99 + 64);
          vst2q_s8(v107, v216);
          unsigned int v108 = (char *)(v99 + 96);
          vst2q_s8(v108, *(int8x16x2_t *)(&v102 - 1));
          v99 += 128;
        }
        while (v99 != v101);
        unint64_t v99 = v101;
      }
      if ((_WORD *)v99 != v100)
      {
        unint64_t v109 = v209 + 2 * (v48 + a3 + v9) - v99;
        uint64_t v110 = -2;
        if (a3) {
          uint64_t v111 = -2;
        }
        else {
          uint64_t v111 = 0;
        }
        unint64_t v112 = v109 + v111 + 18;
        if (v112 < 0xE) {
          goto LABEL_153;
        }
        if (!a3) {
          uint64_t v110 = 0;
        }
        unint64_t v113 = v109 + v110 + 18;
        if (v99 < (unint64_t)a5->u64 + (v113 >> 1) + 1
          && (unint64_t)a5 < (v113 & 0xFFFFFFFFFFFFFFFELL) + v99 + 2)
        {
LABEL_153:
          int v114 = (_WORD *)v99;
          unsigned int v115 = a5;
          goto LABEL_154;
        }
        uint64_t v130 = (v112 >> 1) + 1;
        if (v112 >= 0x3E)
        {
          unint64_t v131 = v130 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v150 = (uint8x8_t *)&a5[1];
          unint64_t v151 = (uint16x8_t *)(v99 + 32);
          unint64_t v152 = v130 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v153 = *(uint8x16_t *)v150[-2].i8;
            uint16x8_t v154 = vmovl_u8(*v150);
            uint16x8_t v155 = vmovl_high_u8(*(uint8x16_t *)v150->i8);
            v151[-2] = vmovl_u8(*(uint8x8_t *)v153.i8);
            v151[-1] = vmovl_high_u8(v153);
            uint16x8_t *v151 = v154;
            v151[1] = v155;
            v151 += 4;
            v150 += 4;
            v152 -= 32;
          }
          while (v152);
          if (v130 == v131) {
            goto LABEL_155;
          }
          if ((v130 & 0x18) == 0)
          {
            unsigned int v115 = (int8x16_t *)((char *)a5 + v131);
            int v114 = (_WORD *)(v99 + 2 * v131);
            do
            {
LABEL_154:
              __int16 v116 = v115->u8[0];
              unsigned int v115 = (int8x16_t *)((char *)v115 + 1);
              *v114++ = v116;
            }
            while (v114 != v100);
            goto LABEL_155;
          }
        }
        else
        {
          unint64_t v131 = 0;
        }
        int v114 = (_WORD *)(v99 + 2 * (v130 & 0xFFFFFFFFFFFFFFF8));
        unsigned int v115 = (int8x16_t *)((char *)a5 + (v130 & 0xFFFFFFFFFFFFFFF8));
        long long v156 = (uint8x8_t *)&a5->i8[v131];
        uint64_t v157 = (uint16x8_t *)(v99 + 2 * v131);
        unint64_t v158 = v131 - (v130 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint8x8_t v159 = *v156++;
          *v157++ = vmovl_u8(v159);
          v158 += 8;
        }
        while (v158);
        if (v130 != (v130 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_154;
        }
      }
LABEL_155:
      if (!a7)
      {
        uint64_t v119 = 0;
LABEL_182:
        v100[v119] = v29;
        goto LABEL_26;
      }
      unsigned int v117 = *(int8x16_t **)(a7 + 8);
      uint64_t v118 = *(unsigned int *)(a7 + 4);
      if ((*(unsigned char *)(a7 + 16) & 4) == 0)
      {
        if (v118)
        {
          if (v118 == 1)
          {
            *unsigned int v100 = v117->i16[0];
          }
          else
          {
            uint64_t result = (uint64_t)memcpy(v100, v117, 2 * v118);
            char v29 = a8;
          }
        }
        goto LABEL_181;
      }
      unsigned int v120 = &v100[v118];
      if (v118 < 0x40)
      {
        unint64_t v121 = (unint64_t)v100;
      }
      else
      {
        unint64_t v121 = (unint64_t)&v100[v118 & 0xFFFFFFC0];
        long long v122 = 0uLL;
        uint64_t v123 = (char *)v100;
        do
        {
          v213.val[0] = *v117;
          int8x16_t v124 = v117[1];
          v217.val[0] = v117[2];
          int8x16_t v125 = v117[3];
          v117 += 4;
          int8x16_t v126 = v125;
          v217.val[1] = 0uLL;
          v221.val[0] = v124;
          v213.val[1] = 0uLL;
          unsigned int v127 = v123;
          vst2q_s8(v127, v213);
          v127 += 32;
          v221.val[1] = 0uLL;
          vst2q_s8(v127, v221);
          unint64_t v128 = v123 + 64;
          vst2q_s8(v128, v217);
          uint64_t v129 = v123 + 96;
          vst2q_s8(v129, *(int8x16x2_t *)(&v122 - 1));
          v123 += 128;
        }
        while (v123 != (char *)v121);
      }
      if ((_WORD *)v121 == v120) {
        goto LABEL_181;
      }
      unint64_t v132 = v209 + 2 * (v48 + a3 + v118 + v9) - v121;
      uint64_t v133 = -2;
      if (a3) {
        uint64_t v134 = -2;
      }
      else {
        uint64_t v134 = 0;
      }
      unint64_t v135 = v132 + v134 + 18;
      if (v135 < 0xE) {
        goto LABEL_177;
      }
      if (!a3) {
        uint64_t v133 = 0;
      }
      unint64_t v136 = v132 + v133 + 18;
      if (v121 < (unint64_t)v117->u64 + (v136 >> 1) + 1
        && (unint64_t)v117 < (v136 & 0xFFFFFFFFFFFFFFFELL) + v121 + 2)
      {
LABEL_177:
        int v137 = (_WORD *)v121;
        unsigned int v138 = v117;
        goto LABEL_178;
      }
      uint64_t v163 = (v135 >> 1) + 1;
      if (v135 >= 0x3E)
      {
        unint64_t v164 = v163 & 0xFFFFFFFFFFFFFFE0;
        unsigned int v197 = (uint8x8_t *)&v117[1];
        unsigned int v198 = (uint16x8_t *)(v121 + 32);
        unint64_t v199 = v163 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v200 = *(uint8x16_t *)v197[-2].i8;
          uint16x8_t v201 = vmovl_u8(*v197);
          uint16x8_t v202 = vmovl_high_u8(*(uint8x16_t *)v197->i8);
          v198[-2] = vmovl_u8(*(uint8x8_t *)v200.i8);
          v198[-1] = vmovl_high_u8(v200);
          uint16x8_t *v198 = v201;
          v198[1] = v202;
          v198 += 4;
          v197 += 4;
          v199 -= 32;
        }
        while (v199);
        if (v163 == v164) {
          goto LABEL_181;
        }
        if ((v163 & 0x18) == 0)
        {
          unsigned int v138 = (int8x16_t *)((char *)v117 + v164);
          int v137 = (_WORD *)(v121 + 2 * v164);
          do
          {
LABEL_178:
            __int16 v139 = v138->u8[0];
            unsigned int v138 = (int8x16_t *)((char *)v138 + 1);
            *v137++ = v139;
          }
          while (v137 != v120);
LABEL_181:
          uint64_t v119 = *(unsigned int *)(a7 + 4);
          goto LABEL_182;
        }
      }
      else
      {
        unint64_t v164 = 0;
      }
      int v137 = (_WORD *)(v121 + 2 * (v163 & 0xFFFFFFFFFFFFFFF8));
      unsigned int v138 = (int8x16_t *)((char *)v117 + (v163 & 0xFFFFFFFFFFFFFFF8));
      unsigned int v203 = (uint8x8_t *)&v117->i8[v164];
      v204 = (uint16x8_t *)(v121 + 2 * v164);
      unint64_t v205 = v164 - (v163 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint8x8_t v206 = *v203++;
        *v204++ = vmovl_u8(v206);
        v205 += 8;
      }
      while (v205);
      if (v163 == (v163 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_181;
      }
      goto LABEL_178;
    }
    unint64_t v77 = v209 + 2 * (v47 + a3) - v58;
    uint64_t v78 = -2;
    if (a3) {
      uint64_t v79 = -2;
    }
    else {
      uint64_t v79 = 0;
    }
    unint64_t v80 = v77 + v79 + 18;
    if (v80 < 0xE) {
      goto LABEL_106;
    }
    if (!a3) {
      uint64_t v78 = 0;
    }
    unint64_t v81 = v77 + v78 + 18;
    if (v58 < (unint64_t)v46->u64 + (v81 >> 1) + 1
      && (unint64_t)v46 < (v81 & 0xFFFFFFFFFFFFFFFELL) + v58 + 2)
    {
LABEL_106:
      unsigned int v82 = (_WORD *)v58;
      unsigned int v83 = v46;
      goto LABEL_107;
    }
    uint64_t v161 = (v80 >> 1) + 1;
    if (v80 >= 0x3E)
    {
      unint64_t v162 = v161 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v187 = (uint8x8_t *)&v46[1];
      unsigned int v188 = (uint16x8_t *)(v58 + 32);
      unint64_t v189 = v161 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v190 = *(uint8x16_t *)v187[-2].i8;
        uint16x8_t v191 = vmovl_u8(*v187);
        uint16x8_t v192 = vmovl_high_u8(*(uint8x16_t *)v187->i8);
        v188[-2] = vmovl_u8(*(uint8x8_t *)v190.i8);
        v188[-1] = vmovl_high_u8(v190);
        *unsigned int v188 = v191;
        v188[1] = v192;
        v188 += 4;
        v187 += 4;
        v189 -= 32;
      }
      while (v189);
      if (v161 == v162) {
        goto LABEL_139;
      }
      if ((v161 & 0x18) == 0)
      {
        unsigned int v83 = (int8x16_t *)((char *)v46 + v162);
        unsigned int v82 = (_WORD *)(v58 + 2 * v162);
        do
        {
LABEL_107:
          __int16 v84 = v83->u8[0];
          unsigned int v83 = (int8x16_t *)((char *)v83 + 1);
          *v82++ = v84;
        }
        while (v82 != v57);
        goto LABEL_139;
      }
    }
    else
    {
      unint64_t v162 = 0;
    }
    unsigned int v82 = (_WORD *)(v58 + 2 * (v161 & 0xFFFFFFFFFFFFFFF8));
    unsigned int v83 = (int8x16_t *)((char *)v46 + (v161 & 0xFFFFFFFFFFFFFFF8));
    unsigned int v193 = (uint8x8_t *)&v46->i8[v162];
    v194 = (uint16x8_t *)(v58 + 2 * v162);
    unint64_t v195 = v162 - (v161 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint8x8_t v196 = *v193++;
      *v194++ = vmovl_u8(v196);
      v195 += 8;
    }
    while (v195);
    if (v161 == (v161 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_139;
    }
    goto LABEL_107;
  }
LABEL_26:
  *unint64_t v15 = v18;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST15StructureMemberEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST9StructureEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Variable,WGSL::SourceSpan,WGSL::AST::VariableFlavor &,WGSL::AST::Identifier,WGSL::AST::VariableQualifier *,WGSL::AST::Expression *,WGSL::AST::Expression *,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(void *this, _OWORD *a2, char *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t *a8)
{
  unint64_t v15 = this;
  uint64_t v16 = *this;
  if (this[1] - *this <= 0xB7uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v16 = *v15;
  }
  char v17 = *a3;
  uint64_t v18 = *a5;
  uint64_t v19 = *a6;
  uint64_t v20 = *a7;
  *(_OWORD *)(v16 + 8) = *a2;
  *(void *)uint64_t v16 = &unk_1ECABC8D8;
  *(void *)(v16 + 24) = &unk_1ECABC008;
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(a4 + 8);
  *(void *)(v16 + 24) = off_1ECABC030;
  int v21 = *(_DWORD **)(a4 + 24);
  *(void *)(a4 + 24) = 0;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v16 + 32);
  *(void *)(v16 + 48) = v21;
  *(void *)(v16 + 56) = off_1ECABC030;
  if (v21) {
    *v21 += 2;
  }
  *(void *)(v16 + 88) = 0;
  *(void *)(v16 + 96) = 0;
  *(void *)(v16 + 80) = v21;
  uint64_t v22 = *a8;
  *a8 = 0;
  *(void *)(v16 + 88) = v22;
  LODWORD(v22) = *((_DWORD *)a8 + 2);
  *((_DWORD *)a8 + 2) = 0;
  *(_DWORD *)(v16 + 96) = v22;
  LODWORD(v22) = *((_DWORD *)a8 + 3);
  *((_DWORD *)a8 + 3) = 0;
  *(_DWORD *)(v16 + 100) = v22;
  *(void *)(v16 + 104) = v18;
  *(void *)(v16 + 112) = v19;
  *(void *)(v16 + 120) = v20;
  *(unsigned char *)(v16 + 128) = v17;
  *(unsigned char *)(v16 + 129) = 0;
  *(unsigned char *)(v16 + 160) = 0;
  *(unsigned char *)(v16 + 164) = 0;
  *(unsigned char *)(v16 + 168) = 0;
  *(unsigned char *)(v16 + 172) = 0;
  *(unsigned char *)(v16 + 176) = 0;
  if (!v19) {
    uint64_t v19 = v20;
  }
  *(void *)(v16 + 149) = 0;
  *(void *)(v16 + 136) = 0;
  *(void *)(v16 + 144) = 0;
  *(void *)(v16 + 144) = *(void *)(v19 + 24);
  *v15 += 184;
  unint64_t v23 = *((unsigned int *)v15 + 11);
  if (v23 != *((_DWORD *)v15 + 10))
  {
    int8x16_t v30 = (void *)(v15[4] + 8 * v23);
LABEL_21:
    *int8x16_t v30 = v16;
    *((_DWORD *)v15 + 11) = v23 + 1;
    return (void *)v16;
  }
  unint64_t v24 = v23 + (v23 >> 2);
  if (v24 >= 0x10) {
    unint64_t v25 = v24 + 1;
  }
  else {
    unint64_t v25 = 16;
  }
  if (v25 <= v23 + 1) {
    unint64_t v26 = v23 + 1;
  }
  else {
    unint64_t v26 = v25;
  }
  if (!(v26 >> 29))
  {
    unint64_t v27 = (void *)v15[4];
    long long v28 = (void *)WTF::fastMalloc((WTF *)(8 * v26));
    *((_DWORD *)v15 + 10) = v26;
    v15[4] = v28;
    memcpy(v28, v27, 8 * v23);
    if (v27)
    {
      if ((void *)v15[4] == v27)
      {
        v15[4] = 0;
        *((_DWORD *)v15 + 10) = 0;
      }
      WTF::fastFree((WTF *)v27, v29);
    }
    unint64_t v23 = *((unsigned int *)v15 + 11);
    int8x16_t v30 = (void *)(v15[4] + 8 * v23);
    goto LABEL_21;
  }
  __break(0xC471u);
  return this;
}

const char *WGSL::TemplateTypes<(WGSL::TokenType)28,(WGSL::TokenType)26,(WGSL::TokenType)34>::appendNameTo(uint64_t a1)
{
  WGSL::toString();
  size_t v8 = v5;
  uint64_t v6 = ", ";
  int v7 = 2;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((WTF::StringBuilder *)a1, (uint64_t *)&v8, (uint64_t)&v6);
  if (v5)
  {
    if (*v5 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v5 -= 2;
    }
  }
  WGSL::toString();
  size_t v8 = 0;
  uint64_t v6 = ", ";
  int v7 = 2;
  WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((WTF::StringBuilder *)a1, (uint64_t *)&v8, (uint64_t)&v6);
  WGSL::toString();
  uint64_t v2 = v6;
  if (*(_DWORD *)(a1 + 16) || *(void *)(a1 + 8))
  {
    if (!v6 || (v6[16] & 4) != 0) {
      WTF::StringBuilder::append();
    }
    else {
      WTF::StringBuilder::append();
    }
    goto LABEL_21;
  }
  if (v6) {
    *(_DWORD *)v6 += 2;
  }
  char v3 = *(_DWORD **)a1;
  *(void *)a1 = v2;
  if (v3)
  {
    if (*v3 == 2)
    {
      WTF::StringImpl::destroy();
      uint64_t v2 = v6;
      if (!v6) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    *v3 -= 2;
  }
  if (v2) {
LABEL_13:
  }
    LODWORD(v2) = *((_DWORD *)v2 + 1);
LABEL_14:
  *(_DWORD *)(a1 + 16) = v2;
LABEL_21:
  uint64_t result = v6;
  uint64_t v6 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2) {
      return (const char *)WTF::StringImpl::destroy();
    }
    else {
      *(_DWORD *)result -= 2;
    }
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::VariableQualifier,WGSL::SourceSpan,WGSL::AddressSpace &,WGSL::AccessMode &,void>(void *this, _OWORD *a2, char *a3, char *a4)
{
  int v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  char v9 = *a3;
  char v10 = *a4;
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)uint64_t v8 = &unk_1ECABE3B8;
  *(unsigned char *)(v8 + 24) = v9;
  *(unsigned char *)(v8 + 25) = v10;
  *v7 += 32;
  unint64_t v11 = *((unsigned int *)v7 + 11);
  if (v11 != *((_DWORD *)v7 + 10))
  {
    uint64_t v18 = (void *)(v7[4] + 8 * v11);
LABEL_17:
    *uint64_t v18 = v8;
    *((_DWORD *)v7 + 11) = v11 + 1;
    return (void *)v8;
  }
  unint64_t v12 = v11 + (v11 >> 2);
  if (v12 >= 0x10) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = 16;
  }
  if (v13 <= v11 + 1) {
    unint64_t v14 = v11 + 1;
  }
  else {
    unint64_t v14 = v13;
  }
  if (!(v14 >> 29))
  {
    unint64_t v15 = (void *)v7[4];
    uint64_t v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
    *((_DWORD *)v7 + 10) = v14;
    v7[4] = v16;
    memcpy(v16, v15, 8 * v11);
    if (v15)
    {
      if ((void *)v7[4] == v15)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v15, v17);
    }
    unint64_t v11 = *((unsigned int *)v7 + 11);
    uint64_t v18 = (void *)(v7[4] + 8 * v11);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::VariableQualifier::~VariableQualifier(WGSL::AST::VariableQualifier *this)
{
}

uint64_t WGSL::AST::VariableQualifier::kind(WGSL::AST::VariableQualifier *this)
{
  return 63;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN4WGSL12AddressSpaceENS8_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

WTF *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  uint64_t result = (WTF *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v52, a2);
  if (v54)
  {
    if (v54 == 1)
    {
      int v7 = v52;
      if (v52) {
        *v52 += 2;
      }
      *(_OWORD *)(a1 + 8) = v53;
      *(void *)a1 = v7;
      goto LABEL_73;
    }
LABEL_77:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_81:
    __break(0xC471u);
    JUMPOUT(0x1825B55B8);
  }
  if (*(_DWORD *)(a2 + 56) != 43)
  {
    WGSL::toString();
    WGSL::toString();
    int v46 = "Expected a ";
    *(void *)&long long v47 = 12;
    unsigned long long v55 = (WTF *)", but got a ";
    uint64_t v56 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v46, (uint64_t *)&v50, (uint64_t)&v55, (uint64_t *)&v49, &v51);
    if (!v51) {
      goto LABEL_81;
    }
    char v17 = v49;
    unsigned int v49 = 0;
    if (v17)
    {
      if (*v17 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t result = v50;
        unsigned int v50 = 0;
        if (!result)
        {
LABEL_72:
          unint64_t v44 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v51;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v44;
LABEL_73:
          *(_DWORD *)(a1 + 24) = 1;
          goto LABEL_74;
        }
LABEL_69:
        if (*(_DWORD *)result == 2) {
          uint64_t result = (WTF *)WTF::StringImpl::destroy();
        }
        else {
          *(_DWORD *)result -= 2;
        }
        goto LABEL_72;
      }
      *v17 -= 2;
    }
    uint64_t result = v50;
    unsigned int v50 = 0;
    if (!result) {
      goto LABEL_72;
    }
    goto LABEL_69;
  }
  uint64_t v8 = (_OWORD *)(a2 + 60);
  unsigned int v9 = *(_DWORD *)(a2 + 36);
  unsigned int v10 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v10;
    if (v9 <= v10)
    {
      __break(0xC471u);
      JUMPOUT(0x1825B55C0);
    }
    uint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = v12 + 32 * v10;
    unsigned int v14 = *(_DWORD *)v13;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v13;
    *uint64_t v8 = *(_OWORD *)(v13 + 4);
    unsigned int v15 = *(_DWORD *)v13;
    if (v15 <= 8)
    {
      if (((1 << v15) & 0x38) != 0)
      {
        uint64_t v16 = *(_DWORD **)(v12 + 32 * v10 + 24);
LABEL_18:
        *(void *)(a2 + 80) = v16;
        goto LABEL_9;
      }
      if (((1 << v15) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v12 + 32 * v10 + 24);
        goto LABEL_9;
      }
      if (v15 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v16 = *(_DWORD **)(v12 + 32 * v10 + 24);
        if (v16) {
          *v16 += 2;
        }
        goto LABEL_18;
      }
    }
LABEL_9:
    int v11 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v11;
    ++v10;
  }
  while (v14 == 82);
  __int16 v45 = v4;
  unsigned long long v55 = 0;
  uint64_t v56 = 0;
  do
  {
LABEL_28:
    int v19 = *(_DWORD *)(a2 + 56);
    if (v19 == 73)
    {
      unsigned int v23 = *(_DWORD *)(a2 + 36);
      unsigned int v24 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v24;
        if (v23 <= v24) {
          goto LABEL_81;
        }
        uint64_t v26 = *(void *)(a2 + 24);
        uint64_t v27 = v26 + 32 * v24;
        unsigned int v28 = *(_DWORD *)v27;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v27;
        *uint64_t v8 = *(_OWORD *)(v27 + 4);
        unsigned int v29 = *(_DWORD *)v27;
        if (v29 <= 8)
        {
          if (((1 << v29) & 0x38) != 0)
          {
            int8x16_t v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
LABEL_47:
            *(void *)(a2 + 80) = v30;
            goto LABEL_38;
          }
          if (((1 << v29) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v26 + 32 * v24 + 24);
          }
          else if (v29 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int8x16_t v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
            if (v30) {
              *v30 += 2;
            }
            goto LABEL_47;
          }
        }
LABEL_38:
        int v25 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v25;
        ++v24;
        if (v28 != 82) {
          goto LABEL_28;
        }
      }
    }
    if (v19 == 44)
    {
      unsigned int v35 = *(_DWORD *)(a2 + 36);
      unsigned int v36 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v36;
        if (v35 <= v36)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B55C8);
        }
        uint64_t v38 = *(void *)(a2 + 24);
        uint64_t v39 = v38 + 32 * v36;
        unsigned int v40 = *(_DWORD *)v39;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v39;
        *uint64_t v8 = *(_OWORD *)(v39 + 4);
        unsigned int v41 = *(_DWORD *)v39;
        if (v41 > 8) {
          goto LABEL_55;
        }
        if (((1 << v41) & 0x38) != 0) {
          break;
        }
        if (((1 << v41) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v38 + 32 * v36 + 24);
        }
        else if (v41 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unint64_t v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
          if (v42) {
            *v42 += 2;
          }
          goto LABEL_64;
        }
LABEL_55:
        int v37 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v37;
        ++v36;
        if (v40 != 82)
        {
          unsigned int v43 = *(void **)(a2 + 8);
          int v46 = v45;
          LODWORD(v47) = v5;
          DWORD1(v47) = v37 - v5;
          *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::CompoundStatement,WGSL::SourceSpan,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Statement,0ul>,void>(v43, &v46, (uint64_t *)&v52, (uint64_t *)&v55);
          *(_DWORD *)(a1 + 24) = 0;
          goto LABEL_66;
        }
      }
      unint64_t v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
LABEL_64:
      *(void *)(a2 + 80) = v42;
      goto LABEL_55;
    }
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseStatement((uint64_t)&v46, a2);
    unsigned int v20 = v48;
    if (v48)
    {
      if (v48 != 1) {
        goto LABEL_77;
      }
      int v21 = v46;
      if (v46) {
        *(_DWORD *)v46 += 2;
      }
      *(_OWORD *)(a1 + 8) = v47;
      *(void *)a1 = v21;
      *(_DWORD *)(a1 + 24) = 1;
      uint64_t v22 = v48;
      if (v48 != -1) {
LABEL_26:
      }
        ((void (*)(uint64_t *, const char **))off_1ECABE580[v22])(&v51, &v46);
    }
    else
    {
      uint64_t v31 = HIDWORD(v56);
      if (HIDWORD(v56) == v56)
      {
        int8x16_t v32 = (const char **)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v55, HIDWORD(v56) + 1, (unint64_t)&v46);
        uint64_t v31 = HIDWORD(v56);
        char v33 = v55;
        unsigned int v34 = *v32;
      }
      else
      {
        char v33 = v55;
        unsigned int v34 = v46;
      }
      *((void *)v33 + v31) = v34;
      ++HIDWORD(v56);
      uint64_t v22 = v48;
      if (v48 != -1) {
        goto LABEL_26;
      }
    }
  }
  while (!v20);
LABEL_66:
  uint64_t result = v55;
  if (v55)
  {
    unsigned long long v55 = 0;
    LODWORD(v56) = 0;
    uint64_t result = (WTF *)WTF::fastFree(result, v18);
  }
LABEL_74:
  if (v54 != -1) {
    return (WTF *)((uint64_t (*)(const char **, _DWORD **))off_1ECABE5D0[v54])(&v46, &v52);
  }
  return result;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Function,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::Parameter,0ul>,WGSL::AST::Expression *,std::reference_wrapper<WGSL::AST::CompoundStatement>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(void *this, _OWORD *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, void *a6, uint64_t *a7, uint64_t *a8)
{
  unsigned int v15 = this;
  uint64_t v16 = *this;
  if (this[1] - *this <= 0xAFuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v16 = *v15;
  }
  uint64_t v17 = *a5;
  *(_OWORD *)(v16 + 8) = *a2;
  *(void *)uint64_t v16 = &unk_1ECABE5A0;
  *(void *)(v16 + 24) = &unk_1ECABC008;
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(a3 + 8);
  *(void *)(v16 + 24) = off_1ECABC030;
  uint64_t v18 = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(v16 + 56) = 0;
  *(void *)(v16 + 64) = 0;
  *(void *)(v16 + 48) = v18;
  uint64_t v19 = *a4;
  *a4 = 0;
  *(void *)(v16 + 56) = v19;
  LODWORD(v19) = *((_DWORD *)a4 + 2);
  *((_DWORD *)a4 + 2) = 0;
  *(_DWORD *)(v16 + 64) = v19;
  LODWORD(v19) = *((_DWORD *)a4 + 3);
  *((_DWORD *)a4 + 3) = 0;
  *(_DWORD *)(v16 + 68) = v19;
  *(void *)(v16 + 72) = 0;
  *(void *)(v16 + 80) = 0;
  uint64_t v20 = *a7;
  *a7 = 0;
  *(void *)(v16 + 72) = v20;
  LODWORD(v20) = *((_DWORD *)a7 + 2);
  *((_DWORD *)a7 + 2) = 0;
  *(_DWORD *)(v16 + 80) = v20;
  LODWORD(v20) = *((_DWORD *)a7 + 3);
  *((_DWORD *)a7 + 3) = 0;
  *(_DWORD *)(v16 + 84) = v20;
  *(void *)(v16 + 88) = 0;
  *(void *)(v16 + 96) = 0;
  uint64_t v21 = *a8;
  *a8 = 0;
  *(void *)(v16 + 88) = v21;
  LODWORD(v21) = *((_DWORD *)a8 + 2);
  *((_DWORD *)a8 + 2) = 0;
  *(_DWORD *)(v16 + 96) = v21;
  LODWORD(v21) = *((_DWORD *)a8 + 3);
  *((_DWORD *)a8 + 3) = 0;
  *(_DWORD *)(v16 + 100) = v21;
  *(void *)(v16 + 104) = v17;
  *(void *)(v16 + 112) = *a6;
  *(_WORD *)(v16 + 120) = 0;
  *(unsigned char *)(v16 + 122) = 0;
  *(unsigned char *)(v16 + 128) = 0;
  *(unsigned char *)(v16 + 152) = 0;
  *(unsigned char *)(v16 + 165) = 0;
  *(unsigned char *)(v16 + 168) = 0;
  *(unsigned char *)(v16 + 172) = 0;
  *(_DWORD *)(v16 + 160) = 0;
  *v15 += 176;
  unint64_t v22 = *((unsigned int *)v15 + 11);
  if (v22 != *((_DWORD *)v15 + 10))
  {
    unsigned int v29 = (void *)(v15[4] + 8 * v22);
LABEL_17:
    *unsigned int v29 = v16;
    *((_DWORD *)v15 + 11) = v22 + 1;
    return (void *)v16;
  }
  unint64_t v23 = v22 + (v22 >> 2);
  if (v23 >= 0x10) {
    unint64_t v24 = v23 + 1;
  }
  else {
    unint64_t v24 = 16;
  }
  if (v24 <= v22 + 1) {
    unint64_t v25 = v22 + 1;
  }
  else {
    unint64_t v25 = v24;
  }
  if (!(v25 >> 29))
  {
    uint64_t v26 = (void *)v15[4];
    uint64_t v27 = (void *)WTF::fastMalloc((WTF *)(8 * v25));
    *((_DWORD *)v15 + 10) = v25;
    v15[4] = v27;
    memcpy(v27, v26, 8 * v22);
    if (v26)
    {
      if ((void *)v15[4] == v26)
      {
        v15[4] = 0;
        *((_DWORD *)v15 + 10) = 0;
      }
      WTF::fastFree((WTF *)v26, v28);
    }
    unint64_t v22 = *((unsigned int *)v15 + 11);
    unsigned int v29 = (void *)(v15[4] + 8 * v22);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::Parameter,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WGSL::AST::ParameterRole,void>(void *this, _OWORD *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, char *a6)
{
  int v11 = this;
  uint64_t v12 = *this;
  if (this[1] - *this <= 0x67uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v12 = *v11;
  }
  char v13 = *a6;
  *(_OWORD *)(v12 + 8) = *a2;
  *(void *)uint64_t v12 = &unk_1ECABC618;
  *(unsigned char *)(v12 + 24) = v13;
  *(void *)(v12 + 32) = &unk_1ECABC008;
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(a3 + 8);
  *(void *)(v12 + 32) = off_1ECABC030;
  uint64_t v14 = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(v12 + 56) = v14;
  uint64_t v15 = *a4;
  *(void *)(v12 + 72) = 0;
  *(void *)(v12 + 80) = 0;
  *(void *)(v12 + 64) = v15;
  uint64_t v16 = *a5;
  *a5 = 0;
  *(void *)(v12 + 72) = v16;
  LODWORD(v16) = *((_DWORD *)a5 + 2);
  *((_DWORD *)a5 + 2) = 0;
  *(_DWORD *)(v12 + 80) = v16;
  LODWORD(v16) = *((_DWORD *)a5 + 3);
  *((_DWORD *)a5 + 3) = 0;
  *(unsigned char *)(v12 + 93) = 0;
  *(unsigned char *)(v12 + 96) = 0;
  *(unsigned char *)(v12 + 100) = 0;
  *(_DWORD *)(v12 + 84) = v16;
  *(_DWORD *)(v12 + 88) = 0;
  *v11 += 104;
  unint64_t v17 = *((unsigned int *)v11 + 11);
  if (v17 != *((_DWORD *)v11 + 10))
  {
    unint64_t v24 = (void *)(v11[4] + 8 * v17);
LABEL_17:
    *unint64_t v24 = v12;
    *((_DWORD *)v11 + 11) = v17 + 1;
    return (void *)v12;
  }
  unint64_t v18 = v17 + (v17 >> 2);
  if (v18 >= 0x10) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = 16;
  }
  if (v19 <= v17 + 1) {
    unint64_t v20 = v17 + 1;
  }
  else {
    unint64_t v20 = v19;
  }
  if (!(v20 >> 29))
  {
    uint64_t v21 = (void *)v11[4];
    unint64_t v22 = (void *)WTF::fastMalloc((WTF *)(8 * v20));
    *((_DWORD *)v11 + 10) = v20;
    v11[4] = v22;
    memcpy(v22, v21, 8 * v17);
    if (v21)
    {
      if ((void *)v11[4] == v21)
      {
        v11[4] = 0;
        *((_DWORD *)v11 + 10) = 0;
      }
      WTF::fastFree((WTF *)v21, v23);
    }
    unint64_t v17 = *((unsigned int *)v11 + 11);
    unint64_t v24 = (void *)(v11[4] + 8 * v17);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST9ParameterEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

WTF *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseStatement(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v6 + 1;
  if ((v6 + 1) >= 0x81)
  {
LABEL_2:
    uint64_t result = (WTF *)WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v8 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)a1 = v521;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v8;
    goto LABEL_3;
  }
  switch(*(_DWORD *)(a2 + 56))
  {
    case 8:
      uint64_t result = (WTF *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v521, a2);
      if (v524)
      {
        if (v524 != 1) {
          goto LABEL_990;
        }
        char v74 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
        *(void *)a1 = v74;
        *(_DWORD *)(a1 + 24) = 1;
LABEL_806:
        uint64_t v72 = v524;
        if (v524 == -1) {
          goto LABEL_948;
        }
        int8x16_t v171 = off_1ECABDF80;
LABEL_808:
        uint16x8_t v154 = v171[v72];
        goto LABEL_946;
      }
      if ((*(_DWORD *)(a2 + 56) | 0x10) == 0x53)
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseTypeNameAfterIdentifier((uint64_t)&v531, a2, (uint64_t)&v521, (const char *)v4, v5);
        uint64_t v172 = v533;
        if (v533)
        {
          if (v533 != 1) {
            goto LABEL_990;
          }
          int8x16_t v173 = v531;
          if (v531) {
            *(_DWORD *)v531 += 2;
          }
          *(_OWORD *)(a1 + 8) = v532;
          *(void *)a1 = v173;
          *(_DWORD *)(a1 + 24) = 1;
          goto LABEL_631;
        }
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseArgumentExpressionList(&v526, a2);
        if (v528)
        {
          if (v528 != 1) {
            goto LABEL_990;
          }
          uint64_t v310 = v526;
          if (v526) {
            *(_DWORD *)v526 += 2;
          }
          *(_OWORD *)(a1 + 8) = v527;
          *(void *)a1 = v310;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v311 = v528;
          if (v528 == -1) {
            goto LABEL_631;
          }
        }
        else
        {
          uint64_t v400 = *(void **)(a2 + 8);
          int v401 = *(_DWORD *)(a2 + 96) - v5;
          *(void *)v516 = v4;
          *(_DWORD *)&v516[8] = v5;
          *(_DWORD *)&v516[12] = v401;
          unsigned int v402 = WGSL::AST::Builder::construct<WGSL::AST::CallExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(v400, v516, (uint64_t *)&v531, (uint64_t *)&v526);
          WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)v516, a2, 73);
          unsigned int v403 = v518;
          if (v518)
          {
            WGSL::toString();
            if (v403 != 1) {
              goto LABEL_990;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v508, (uint64_t *)&v499, (uint64_t *)&v498);
            uint64_t v404 = v498;
            v498 = 0;
            if (v404)
            {
              if (*v404 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v404 -= 2;
              }
            }
            __n128 v454 = v499;
            v499 = 0;
            if (v454)
            {
              if (*v454 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v454 -= 2;
              }
            }
            unint64_t v455 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v508;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v455;
            *(_DWORD *)(a1 + 24) = 1;
            uint64_t v311 = v528;
            if (v528 == -1) {
              goto LABEL_631;
            }
          }
          else
          {
            if (*(_DWORD *)v516 == 8 && v517)
            {
              if (*v517 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v517 -= 2;
              }
            }
            __n128 v463 = *(void **)(a2 + 8);
            int v464 = *(_DWORD *)(a2 + 96) - v5;
            *(void *)v516 = v4;
            *(_DWORD *)&v516[8] = v5;
            *(_DWORD *)&v516[12] = v464;
            *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::CallStatement,WGSL::SourceSpan,WGSL::AST::CallExpression &,void>(v463, v516, (uint64_t)v402);
            *(_DWORD *)(a1 + 24) = 0;
            uint64_t v311 = v528;
            if (v528 == -1) {
              goto LABEL_631;
            }
          }
        }
        ((void (*)(unsigned char *, const char **))off_1ECABE040[v311])(v516, &v526);
LABEL_631:
        uint64_t result = (WTF *)((uint64_t (*)(unsigned char *, WTF **))off_1ECABE170[v172])(v516, &v531);
        goto LABEL_806;
      }
      unint64_t v305 = *(void **)(a2 + 8);
      int v306 = *(_DWORD *)(a2 + 96) - v5;
      *(void *)v516 = v4;
      *(_DWORD *)&v516[8] = v5;
      *(_DWORD *)&v516[12] = v306;
      uint64_t v307 = WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v305, v516, (uint64_t)&v521);
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parsePostfixExpression((uint64_t)&v531, a2, v307, v4, v5);
      uint64_t v308 = v533;
      if (v533)
      {
        if (v533 != 1) {
          goto LABEL_990;
        }
        unint64_t v309 = v531;
        if (v531) {
          *(_DWORD *)v531 += 2;
        }
        *(_OWORD *)(a1 + 8) = v532;
        *(void *)a1 = v309;
        *(_DWORD *)(a1 + 24) = 1;
        goto LABEL_805;
      }
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement((uint64_t)&v526, a2, &v531);
      if (v528)
      {
        if (v528 != 1) {
          goto LABEL_990;
        }
        uint64_t v398 = v526;
        if (v526) {
          *(_DWORD *)v526 += 2;
        }
        *(_OWORD *)(a1 + 8) = v527;
        *(void *)a1 = v398;
        *(_DWORD *)(a1 + 24) = 1;
        uint64_t v399 = v528;
        if (v528 == -1) {
          goto LABEL_805;
        }
      }
      else
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)v516, a2, 73);
        unsigned int v446 = v518;
        if (v518)
        {
          WGSL::toString();
          if (v446 != 1) {
            goto LABEL_990;
          }
          WGSL::toString();
          WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v508, (uint64_t *)&v497, (uint64_t *)&v496);
          __n128 v447 = v496;
          v496 = 0;
          if (v447)
          {
            if (*v447 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v447 -= 2;
            }
          }
          v461 = v497;
          v497 = 0;
          if (v461)
          {
            if (*v461 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v461 -= 2;
            }
          }
          unint64_t v462 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v508;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v462;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v399 = v528;
          if (v528 == -1) {
            goto LABEL_805;
          }
        }
        else
        {
          if (*(_DWORD *)v516 == 8 && v517)
          {
            if (*v517 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v517 -= 2;
            }
          }
          *(void *)a1 = v526;
          *(_DWORD *)(a1 + 24) = 0;
          uint64_t v399 = v528;
          if (v528 == -1) {
            goto LABEL_805;
          }
        }
      }
      ((void (*)(unsigned char *, const char **))off_1ECABE580[v399])(v516, &v526);
LABEL_805:
      uint64_t result = (WTF *)((uint64_t (*)(unsigned char *, WTF **))off_1ECABE170[v308])(v516, &v531);
      goto LABEL_806;
    case 0xB:
      unsigned int v75 = *(_DWORD *)(a2 + 36);
      unint64_t v76 = (_OWORD *)(a2 + 60);
      unsigned int v77 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v78 = 32 * v77;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v77;
        if (v75 <= v77)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9AA8);
        }
        uint64_t v80 = *(void *)(a2 + 24);
        int v81 = *(_DWORD *)(v80 + v78);
        *(_DWORD *)(a2 + 56) = v81;
        *unint64_t v76 = *(_OWORD *)(v80 + v78 + 4);
        unsigned int v82 = *(_DWORD *)(v80 + v78);
        if (v82 > 8) {
          goto LABEL_120;
        }
        if (((1 << v82) & 0x38) != 0) {
          break;
        }
        if (((1 << v82) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v80 + v78 + 24);
        }
        else if (v82 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v83 = *(_DWORD **)(v80 + v78 + 24);
          if (v83) {
            *v83 += 2;
          }
          goto LABEL_129;
        }
LABEL_120:
        int v79 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v79;
        ++v77;
        v78 += 32;
        if (v81 != 82)
        {
          if (v81 != 73)
          {
            WGSL::toString();
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v493, (uint64_t *)&v492);
            uint8x8_t v159 = v492;
            v492 = 0;
            if (v159)
            {
              if (*v159 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v159 -= 2;
              }
            }
            uint64_t result = v493;
            v493 = 0;
            if (!result) {
              goto LABEL_605;
            }
            goto LABEL_602;
          }
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v77;
            if (v75 <= v77)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9AC8);
            }
            uint64_t v127 = v80 + 32 * v77;
            unsigned int v128 = *(_DWORD *)v127;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v127;
            *unint64_t v76 = *(_OWORD *)(v127 + 4);
            unsigned int v129 = *(_DWORD *)v127;
            if (v129 <= 8)
            {
              if (((1 << v129) & 0x38) != 0)
              {
                uint64_t v130 = *(_DWORD **)(v80 + 32 * v77 + 24);
                goto LABEL_205;
              }
              if (((1 << v129) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v80 + 32 * v77 + 24);
              }
              else if (v129 == 8)
              {
                *(void *)(a2 + 80) = 0;
                uint64_t v130 = *(_DWORD **)(v80 + 32 * v77 + 24);
                if (v130) {
                  *v130 += 2;
                }
LABEL_205:
                *(void *)(a2 + 80) = v130;
              }
            }
            int v126 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v126;
            ++v77;
            if (v128 != 82)
            {
              uint64_t v165 = *(void **)(a2 + 8);
              v521 = (WTF *)v4;
              LODWORD(v522) = v5;
              DWORD1(v522) = v126 - v5;
              uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::BreakStatement,WGSL::SourceSpan,void>(v165, &v521);
              goto LABEL_305;
            }
            continue;
          }
        }
      }
      unsigned int v83 = *(_DWORD **)(v80 + v78 + 24);
LABEL_129:
      *(void *)(a2 + 80) = v83;
      goto LABEL_120;
    case 0xD:
    case 0x1A:
    case 0x22:
      *(void *)v516 = 0;
      *(void *)&v516[8] = 0;
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableWithAttributes((uint64_t)&v521, a2, (uint64_t *)v516);
      if (*(void *)v516) {
        WTF::fastFree(*(WTF **)v516, v9);
      }
      uint64_t v10 = v523;
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        int v11 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
        *(void *)a1 = v11;
LABEL_351:
        *(_DWORD *)(a1 + 24) = 1;
LABEL_352:
        uint16x8_t v154 = off_1ECABDFD8[v10];
        goto LABEL_946;
      }
      if (*(_DWORD *)(a2 + 56) != 73)
      {
        WGSL::toString();
        WGSL::toString();
        *(void *)v516 = "Expected a ";
        *(void *)&v516[8] = 12;
        v531 = (WTF *)", but got a ";
        *(void *)&long long v532 = 13;
        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v516, (uint64_t *)&v501, (uint64_t)&v531, (uint64_t *)&v500, &v526);
        if (!v526)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9B48);
        }
        unint64_t v151 = v500;
        v500 = 0;
        if (v151)
        {
          if (*v151 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v151 -= 2;
          }
        }
        int16x8_t v186 = v501;
        v501 = 0;
        if (v186)
        {
          if (*v186 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v186 -= 2;
          }
        }
        unint64_t v187 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
        *(void *)a1 = v526;
        *(void *)(a1 + 8) = v4;
        *(void *)(a1 + 16) = v187;
        goto LABEL_351;
      }
      unsigned int v14 = *(_DWORD *)(a2 + 36);
      unsigned int v15 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v15;
        if (v14 <= v15)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9A78);
        }
        uint64_t v17 = *(void *)(a2 + 24);
        uint64_t v18 = v17 + 32 * v15;
        unsigned int v19 = *(_DWORD *)v18;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v18;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v18 + 4);
        unsigned int v20 = *(_DWORD *)v18;
        if (v20 > 8) {
          goto LABEL_20;
        }
        if (((1 << v20) & 0x38) != 0) {
          break;
        }
        if (((1 << v20) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v17 + 32 * v15 + 24);
        }
        else if (v20 == 8)
        {
          *(void *)(a2 + 80) = 0;
          uint64_t v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
          if (v21) {
            *v21 += 2;
          }
          goto LABEL_29;
        }
LABEL_20:
        int v16 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v16;
        ++v15;
        if (v19 != 82)
        {
          unint64_t v152 = *(void **)(a2 + 8);
          *(void *)v516 = v4;
          *(_DWORD *)&v516[8] = v5;
          *(_DWORD *)&v516[12] = v16 - v5;
          *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::VariableStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Variable>,void>(v152, v516, &v521);
          *(_DWORD *)(a1 + 24) = 0;
          goto LABEL_352;
        }
      }
      uint64_t v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
LABEL_29:
      *(void *)(a2 + 80) = v21;
      goto LABEL_20;
    case 0xE:
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseConstAssert((uint64_t)&v521, a2);
      uint64_t v60 = v523;
      if (!v523)
      {
        int8x16_t v169 = *(void **)(a2 + 8);
        int v170 = *(_DWORD *)(a2 + 96) - v5;
        *(void *)v516 = v4;
        *(_DWORD *)&v516[8] = v5;
        *(_DWORD *)&v516[12] = v170;
        *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::ConstAssertStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::ConstAssert>,void>(v169, v516, &v521);
        *(_DWORD *)(a1 + 24) = 0;
        int8x16_t v62 = off_1ECABE1B0;
        goto LABEL_590;
      }
      if (v523 != 1) {
        goto LABEL_990;
      }
      int8x16_t v61 = v521;
      if (v521) {
        *(_DWORD *)v521 += 2;
      }
      *(_OWORD *)(a1 + 8) = v522;
      *(void *)a1 = v61;
      *(_DWORD *)(a1 + 24) = 1;
      int8x16_t v62 = off_1ECABE1B0;
      goto LABEL_590;
    case 0xF:
      unsigned int v93 = *(_DWORD *)(a2 + 36);
      unint64_t v94 = (_OWORD *)(a2 + 60);
      unsigned int v95 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v96 = 32 * v95;
      do
      {
        *(_DWORD *)(a2 + 40) = v95;
        if (v93 <= v95)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9AB0);
        }
        uint64_t v98 = *(void *)(a2 + 24);
        int v99 = *(_DWORD *)(v98 + v96);
        *(_DWORD *)(a2 + 56) = v99;
        _OWORD *v94 = *(_OWORD *)(v98 + v96 + 4);
        unsigned int v100 = *(_DWORD *)(v98 + v96);
        if (v100 <= 8)
        {
          if (((1 << v100) & 0x38) != 0)
          {
            unint64_t v101 = *(_DWORD **)(v98 + v96 + 24);
LABEL_153:
            *(void *)(a2 + 80) = v101;
            goto LABEL_144;
          }
          if (((1 << v100) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v98 + v96 + 24);
            goto LABEL_144;
          }
          if (v100 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unint64_t v101 = *(_DWORD **)(v98 + v96 + 24);
            if (v101) {
              *v101 += 2;
            }
            goto LABEL_153;
          }
        }
LABEL_144:
        int v97 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v97;
        ++v95;
        v96 += 32;
      }
      while (v99 == 82);
      if (v99 != 73)
      {
        WGSL::toString();
        WGSL::toString();
        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v491, (uint64_t *)&v490);
        unint64_t v160 = v490;
        v490 = 0;
        if (v160)
        {
          if (*v160 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v160 -= 2;
          }
        }
        uint64_t result = v491;
        v491 = 0;
        if (!result) {
          goto LABEL_605;
        }
        goto LABEL_602;
      }
      while (2)
      {
        *(_DWORD *)(a2 + 40) = v95;
        if (v93 <= v95)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9AD0);
        }
        uint64_t v132 = v98 + 32 * v95;
        unsigned int v133 = *(_DWORD *)v132;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v132;
        _OWORD *v94 = *(_OWORD *)(v132 + 4);
        unsigned int v134 = *(_DWORD *)v132;
        if (v134 <= 8)
        {
          if (((1 << v134) & 0x38) != 0)
          {
            unint64_t v135 = *(_DWORD **)(v98 + 32 * v95 + 24);
            goto LABEL_218;
          }
          if (((1 << v134) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v98 + 32 * v95 + 24);
          }
          else if (v134 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unint64_t v135 = *(_DWORD **)(v98 + 32 * v95 + 24);
            if (v135) {
              *v135 += 2;
            }
LABEL_218:
            *(void *)(a2 + 80) = v135;
          }
        }
        int v131 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v131;
        ++v95;
        if (v133 == 82) {
          continue;
        }
        break;
      }
      int8x16x2_t v166 = *(void **)(a2 + 8);
      v521 = (WTF *)v4;
      LODWORD(v522) = v5;
      DWORD1(v522) = v131 - v5;
      uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::ContinueStatement,WGSL::SourceSpan,void>(v166, &v521);
LABEL_305:
      *(void *)a1 = result;
      *(_DWORD *)(a1 + 24) = 0;
LABEL_948:
      *(_DWORD *)(a2 + 44) = v6;
      return result;
    case 0x13:
      unsigned int v49 = *(_DWORD *)(a2 + 36);
      unsigned int v50 = (_OWORD *)(a2 + 60);
      unsigned int v51 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v52 = 32 * v51;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v51;
        if (v49 <= v51)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9AA0);
        }
        uint64_t v54 = *(void *)(a2 + 24);
        int v55 = *(_DWORD *)(v54 + v52);
        *(_DWORD *)(a2 + 56) = v55;
        *unsigned int v50 = *(_OWORD *)(v54 + v52 + 4);
        unsigned int v56 = *(_DWORD *)(v54 + v52);
        if (v56 > 8) {
          goto LABEL_76;
        }
        if (((1 << v56) & 0x38) != 0) {
          break;
        }
        if (((1 << v56) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v54 + v52 + 24);
        }
        else if (v56 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v57 = *(_DWORD **)(v54 + v52 + 24);
          if (v57) {
            *v57 += 2;
          }
          goto LABEL_85;
        }
LABEL_76:
        int v53 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v53;
        ++v51;
        v52 += 32;
        if (v55 != 82)
        {
          if (v55 != 73)
          {
            WGSL::toString();
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v489, (uint64_t *)&v488);
            unint64_t v158 = v488;
            v488 = 0;
            if (v158)
            {
              if (*v158 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v158 -= 2;
              }
            }
            uint64_t result = v489;
            v489 = 0;
            if (!result) {
              goto LABEL_605;
            }
            goto LABEL_602;
          }
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v51;
            if (v49 <= v51)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9AC0);
            }
            uint64_t v122 = v54 + 32 * v51;
            unsigned int v123 = *(_DWORD *)v122;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v122;
            *unsigned int v50 = *(_OWORD *)(v122 + 4);
            unsigned int v124 = *(_DWORD *)v122;
            if (v124 <= 8)
            {
              if (((1 << v124) & 0x38) != 0)
              {
                int8x16_t v125 = *(_DWORD **)(v54 + 32 * v51 + 24);
                goto LABEL_192;
              }
              if (((1 << v124) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v54 + 32 * v51 + 24);
              }
              else if (v124 == 8)
              {
                *(void *)(a2 + 80) = 0;
                int8x16_t v125 = *(_DWORD **)(v54 + 32 * v51 + 24);
                if (v125) {
                  *v125 += 2;
                }
LABEL_192:
                *(void *)(a2 + 80) = v125;
              }
            }
            int v121 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v121;
            ++v51;
            if (v123 != 82)
            {
              unint64_t v164 = *(void **)(a2 + 8);
              v521 = (WTF *)v4;
              LODWORD(v522) = v5;
              DWORD1(v522) = v121 - v5;
              uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::DiscardStatement,WGSL::SourceSpan,void>(v164, &v521);
              goto LABEL_305;
            }
            continue;
          }
        }
      }
      unsigned int v57 = *(_DWORD **)(v54 + v52 + 24);
LABEL_85:
      *(void *)(a2 + 80) = v57;
      goto LABEL_76;
    case 0x18:
      int8x16_t v63 = (_OWORD *)(a2 + 60);
      unsigned int v64 = *(_DWORD *)(a2 + 36);
      LODWORD(v65) = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v65;
        if (v64 <= v65)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9A60);
        }
        uint64_t v67 = *(void *)(a2 + 24);
        uint64_t v68 = v67 + 32 * v65;
        unsigned int v69 = *(_DWORD *)v68;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v68;
        _OWORD *v63 = *(_OWORD *)(v68 + 4);
        unsigned int v70 = *(_DWORD *)v68;
        if (v70 > 8) {
          goto LABEL_98;
        }
        if (((1 << v70) & 0x38) != 0) {
          break;
        }
        if (((1 << v70) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v67 + 32 * v65 + 24);
        }
        else if (v70 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unint64_t v71 = *(_DWORD **)(v67 + 32 * v65 + 24);
          if (v71) {
            *v71 += 2;
          }
          goto LABEL_107;
        }
LABEL_98:
        int v66 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v66;
        uint64_t v65 = (v65 + 1);
        if (v69 != 82)
        {
          v531 = 0;
          v526 = 0;
          v508 = 0;
          if (v69 != 67)
          {
            WGSL::toString();
            WGSL::toString();
            v521 = (WTF *)"Expected a ";
            *(void *)&long long v522 = 12;
            *(void *)v516 = ", but got a ";
            *(void *)&v516[8] = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v529, (uint64_t)v516, (uint64_t *)&v519, &v534);
            if (!v534)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B70);
            }
            unint64_t v162 = v519;
            v519 = 0;
            if (v162)
            {
              if (*v162 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v162 -= 2;
              }
            }
            uint64_t result = v529;
            v529 = 0;
            if (result) {
              goto LABEL_608;
            }
            goto LABEL_611;
          }
          uint8x16_t v143 = (void *)(v67 + 32 * v65 + 24);
          while (1)
          {
            *(_DWORD *)(a2 + 40) = v65;
            if (v64 <= v65)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B18);
            }
            int v145 = *((_DWORD *)v143 - 6);
            *(_DWORD *)(a2 + 56) = v145;
            _OWORD *v63 = *(_OWORD *)((char *)v143 - 20);
            unsigned int v146 = *((_DWORD *)v143 - 6);
            if (v146 > 8) {
              goto LABEL_240;
            }
            if (((1 << v146) & 0x38) != 0) {
              break;
            }
            if (((1 << v146) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *v143;
            }
            else if (v146 == 8)
            {
              *(void *)(a2 + 80) = 0;
              long long v147 = (_DWORD *)*v143;
              if (*v143) {
                *v147 += 2;
              }
              goto LABEL_249;
            }
LABEL_240:
            int v144 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v144;
            v143 += 4;
            LODWORD(v65) = v65 + 1;
            if (v145 != 82)
            {
              switch(v145)
              {
                case 8:
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseLHSExpression((uint64_t)&v521, a2);
                  if (v523)
                  {
                    if (v523 != 1) {
                      goto LABEL_990;
                    }
                    int v396 = v521;
                    if (v521) {
                      *(_DWORD *)v521 += 2;
                    }
                    *(_OWORD *)&v516[8] = v522;
                    *(void *)v516 = v396;
                    int v397 = 1;
                    LODWORD(v517) = 1;
LABEL_850:
                    ((void (*)(const char **, WTF **))off_1ECABE170[v397])(&v534, &v521);
                  }
                  else
                  {
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement((uint64_t)v516, a2, &v521);
                    int v397 = v523;
                    if (v523 != -1) {
                      goto LABEL_850;
                    }
                  }
                  if (v517)
                  {
                    if (v517 != 1) {
                      goto LABEL_990;
                    }
                    uint64_t result = *(WTF **)v516;
                    if (!*(void *)v516)
                    {
                      long long v465 = *(_OWORD *)&v516[8];
                      goto LABEL_988;
                    }
                    **(_DWORD **)v516 += 2;
                    *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
                    *(void *)a1 = result;
                    *(_DWORD *)(a1 + 24) = 1;
                    *(void *)v516 = 0;
                    int v420 = *(_DWORD *)result - 2;
                    if (*(_DWORD *)result != 2) {
                      goto LABEL_905;
                    }
                    goto LABEL_855;
                  }
                  v531 = *(WTF **)v516;
LABEL_857:
                  if (*(_DWORD *)(a2 + 56) == 73)
                  {
LABEL_858:
                    unsigned int v421 = *(_DWORD *)(a2 + 36);
                    unsigned int v422 = *(_DWORD *)(a2 + 40) + 1;
                    uint64_t v423 = 32 * v422;
                    while (1)
                    {
                      *(_DWORD *)(a2 + 40) = v422;
                      if (v421 <= v422)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825B9B20);
                      }
                      uint64_t v425 = *(void *)(a2 + 24);
                      int v426 = *(_DWORD *)(v425 + v423);
                      *(_DWORD *)(a2 + 56) = v426;
                      _OWORD *v63 = *(_OWORD *)(v425 + v423 + 4);
                      unsigned int v427 = *(_DWORD *)(v425 + v423);
                      if (v427 > 8) {
                        goto LABEL_860;
                      }
                      if (((1 << v427) & 0x38) != 0) {
                        break;
                      }
                      if (((1 << v427) & 0xC4) != 0)
                      {
                        *(void *)(a2 + 80) = *(void *)(v425 + v423 + 24);
                      }
                      else if (v427 == 8)
                      {
                        *(void *)(a2 + 80) = 0;
                        v428 = *(_DWORD **)(v425 + v423 + 24);
                        if (v428) {
                          *v428 += 2;
                        }
                        goto LABEL_869;
                      }
LABEL_860:
                      int v424 = *(_DWORD *)(a2 + 68);
                      *(void *)(a2 + 88) = *(void *)(a2 + 60);
                      *(_DWORD *)(a2 + 96) = v424;
                      v423 += 32;
                      ++v422;
                      if (v426 != 82)
                      {
                        if (v426 == 73) {
                          goto LABEL_871;
                        }
                        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v521, a2);
                        if (v523)
                        {
                          if (v523 != 1) {
                            goto LABEL_990;
                          }
                          uint64_t result = v521;
                          if (!v521) {
                            goto LABEL_987;
                          }
LABEL_904:
                          *(_DWORD *)result += 2;
                          *(_OWORD *)(a1 + 8) = v522;
                          *(void *)a1 = result;
                          *(_DWORD *)(a1 + 24) = 1;
                          int v420 = *(_DWORD *)result - 2;
                          if (*(_DWORD *)result != 2) {
                            goto LABEL_905;
                          }
LABEL_855:
                          uint64_t result = (WTF *)WTF::StringImpl::destroy();
                          goto LABEL_948;
                        }
                        v526 = (const char *)v521;
                        if (*(_DWORD *)(a2 + 56) != 73)
                        {
                          WGSL::toString();
                          WGSL::toString();
                          v521 = (WTF *)"Expected a ";
                          *(void *)&long long v522 = 12;
                          *(void *)v516 = ", but got a ";
                          *(void *)&v516[8] = 13;
                          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v513, (uint64_t)v516, (uint64_t *)&v512, &v534);
                          if (!v534)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825B9BB8);
                          }
                          v449 = v512;
                          v512 = 0;
                          if (v449)
                          {
                            if (*v449 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v449 -= 2;
                            }
                          }
                          uint64_t result = v513;
                          v513 = 0;
                          if (!result) {
                            goto LABEL_611;
                          }
LABEL_608:
                          if (*(_DWORD *)result == 2) {
                            uint64_t result = (WTF *)WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)result -= 2;
                          }
                          goto LABEL_611;
                        }
LABEL_871:
                        unsigned int v429 = *(_DWORD *)(a2 + 36);
                        unsigned int v430 = *(_DWORD *)(a2 + 40) + 1;
                        uint64_t v431 = 32 * v430;
                        while (2)
                        {
                          *(_DWORD *)(a2 + 40) = v430;
                          if (v429 <= v430)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825B9B38);
                          }
                          uint64_t v433 = *(void *)(a2 + 24);
                          int v434 = *(_DWORD *)(v433 + v431);
                          *(_DWORD *)(a2 + 56) = v434;
                          _OWORD *v63 = *(_OWORD *)(v433 + v431 + 4);
                          unsigned int v435 = *(_DWORD *)(v433 + v431);
                          if (v435 <= 8)
                          {
                            if (((1 << v435) & 0x38) != 0)
                            {
                              unsigned int v436 = *(_DWORD **)(v433 + v431 + 24);
                              goto LABEL_882;
                            }
                            if (((1 << v435) & 0xC4) != 0)
                            {
                              *(void *)(a2 + 80) = *(void *)(v433 + v431 + 24);
                            }
                            else if (v435 == 8)
                            {
                              *(void *)(a2 + 80) = 0;
                              unsigned int v436 = *(_DWORD **)(v433 + v431 + 24);
                              if (v436) {
                                *v436 += 2;
                              }
LABEL_882:
                              *(void *)(a2 + 80) = v436;
                            }
                          }
                          int v432 = *(_DWORD *)(a2 + 68);
                          *(void *)(a2 + 88) = *(void *)(a2 + 60);
                          *(_DWORD *)(a2 + 96) = v432;
                          v431 += 32;
                          ++v430;
                          if (v434 != 82)
                          {
                            if (v434 != 8)
                            {
                              if (v434 == 68) {
                                goto LABEL_885;
                              }
LABEL_933:
                              uint64_t result = (WTF *)WTF::StringImpl::createWithoutCopyingNonEmpty();
                              unint64_t v302 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
LABEL_613:
                              *(void *)(a1 + 8) = v4;
                              *(void *)(a1 + 16) = v302;
LABEL_3:
                              *(_DWORD *)(a1 + 24) = 1;
                              goto LABEL_948;
                            }
                            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement((uint64_t)&v521, a2);
                            if (v523)
                            {
                              if (v523 != 1) {
                                goto LABEL_990;
                              }
                              uint64_t result = v521;
                              if (v521)
                              {
                                *(_DWORD *)v521 += 2;
                                *(_OWORD *)(a1 + 8) = v522;
                                *(void *)a1 = result;
                                *(_DWORD *)(a1 + 24) = 1;
                                v521 = 0;
                                int v420 = *(_DWORD *)result - 2;
                                if (*(_DWORD *)result == 2) {
                                  goto LABEL_855;
                                }
LABEL_905:
                                *(_DWORD *)uint64_t result = v420;
                                goto LABEL_948;
                              }
LABEL_987:
                              long long v465 = v522;
LABEL_988:
                              *(_OWORD *)(a1 + 8) = v465;
                              *(void *)a1 = 0;
                              goto LABEL_3;
                            }
                            v508 = v521;
                            if (*(_DWORD *)(a2 + 56) != 68)
                            {
                              WGSL::toString();
                              WGSL::toString();
                              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v511, (uint64_t *)&v507);
                              long long v460 = v507;
                              v507 = 0;
                              if (v460)
                              {
                                if (*v460 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *v460 -= 2;
                                }
                              }
                              uint64_t result = v511;
                              v511 = 0;
                              if (!result) {
                                goto LABEL_605;
                              }
LABEL_602:
                              if (*(_DWORD *)result == 2) {
                                uint64_t result = (WTF *)WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)result -= 2;
                              }
                              goto LABEL_605;
                            }
LABEL_885:
                            unsigned int v437 = *(_DWORD *)(a2 + 36);
                            unsigned int v438 = *(_DWORD *)(a2 + 40) + 1;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v438;
                              if (v437 <= v438)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825B9B30);
                              }
                              uint64_t v440 = *(void *)(a2 + 24);
                              uint64_t v441 = v440 + 32 * v438;
                              unsigned int v442 = *(_DWORD *)v441;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v441;
                              _OWORD *v63 = *(_OWORD *)(v441 + 4);
                              unsigned int v443 = *(_DWORD *)v441;
                              if (v443 <= 8)
                              {
                                if (((1 << v443) & 0x38) != 0)
                                {
                                  __n128 v444 = *(_DWORD **)(v440 + 32 * v438 + 24);
                                  goto LABEL_896;
                                }
                                if (((1 << v443) & 0xC4) != 0)
                                {
                                  *(void *)(a2 + 80) = *(void *)(v440 + 32 * v438 + 24);
                                }
                                else if (v443 == 8)
                                {
                                  *(void *)(a2 + 80) = 0;
                                  __n128 v444 = *(_DWORD **)(v440 + 32 * v438 + 24);
                                  if (v444) {
                                    *v444 += 2;
                                  }
LABEL_896:
                                  *(void *)(a2 + 80) = v444;
                                }
                              }
                              int v439 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v439;
                              ++v438;
                              if (v442 != 82)
                              {
                                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(&v521, a2);
                                uint64_t v60 = v523;
                                if (!v523)
                                {
                                  v456 = *(void **)(a2 + 8);
                                  int v457 = *(_DWORD *)(a2 + 96) - v5;
                                  *(void *)v516 = v4;
                                  *(_DWORD *)&v516[8] = v5;
                                  *(_DWORD *)&v516[12] = v457;
                                  *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::ForStatement,WGSL::SourceSpan,WGSL::AST::Statement *&,WGSL::AST::Expression *&,WGSL::AST::Statement *&,std::reference_wrapper<WGSL::AST::CompoundStatement>,void>(v456, v516, (uint64_t *)&v531, (uint64_t *)&v526, (uint64_t *)&v508, &v521);
                                  *(_DWORD *)(a1 + 24) = 0;
                                  goto LABEL_957;
                                }
                                if (v523 == 1)
                                {
                                  unsigned int v448 = v521;
                                  if (v521) {
                                    *(_DWORD *)v521 += 2;
                                  }
                                  *(_OWORD *)(a1 + 8) = v522;
                                  *(void *)a1 = v448;
                                  *(_DWORD *)(a1 + 24) = 1;
LABEL_957:
                                  int8x16_t v62 = off_1ECABE5C0;
LABEL_590:
                                  uint16x8_t v154 = v62[v60];
LABEL_946:
                                  int8x16x2_t v416 = (WTF **)v516;
                                  unint64_t v417 = &v521;
LABEL_947:
                                  uint64_t result = (WTF *)((uint64_t (*)(WTF **, WTF **))v154)(v416, v417);
                                  goto LABEL_948;
                                }
LABEL_990:
                                std::__throw_bad_variant_access[abi:sn180100]();
LABEL_991:
                                __break(0xC471u);
                                JUMPOUT(0x1825B9A58);
                              }
                              continue;
                            }
                          }
                          continue;
                        }
                      }
                    }
                    v428 = *(_DWORD **)(v425 + v423 + 24);
LABEL_869:
                    *(void *)(a2 + 80) = v428;
                    goto LABEL_860;
                  }
                  WGSL::toString();
                  WGSL::toString();
                  v521 = (WTF *)"Expected a ";
                  *(void *)&long long v522 = 12;
                  *(void *)v516 = ", but got a ";
                  *(void *)&v516[8] = 13;
                  WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v515, (uint64_t)v516, (uint64_t *)&v514, &v534);
                  if (!v534)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825B9BB0);
                  }
                  unsigned int v445 = v514;
                  v514 = 0;
                  if (v445)
                  {
                    if (*v445 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v445 -= 2;
                    }
                  }
                  uint64_t result = v515;
                  v515 = 0;
                  if (result) {
                    goto LABEL_608;
                  }
                  break;
                case 9:
                case 10:
                case 11:
                case 12:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                  goto LABEL_933;
                case 13:
                case 26:
                case 34:
                  *(void *)v516 = 0;
                  *(void *)&v516[8] = 0;
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableWithAttributes((uint64_t)&v521, a2, (uint64_t *)v516);
                  if (*(void *)v516) {
                    WTF::fastFree(*(WTF **)v516, v163);
                  }
                  if (v523)
                  {
                    if (v523 != 1) {
                      goto LABEL_990;
                    }
                    uint64_t result = v521;
                    if (!v521) {
                      goto LABEL_987;
                    }
                    goto LABEL_904;
                  }
                  uint64_t v312 = *(void **)(a2 + 8);
                  int v313 = *(_DWORD *)(a2 + 96) - v5;
                  *(void *)v516 = v4;
                  *(_DWORD *)&v516[8] = v5;
                  *(_DWORD *)&v516[12] = v313;
                  v531 = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::VariableStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Variable>,void>(v312, v516, &v521);
                  if (v523 != -1) {
                    ((void (*)(unsigned char *, WTF **))off_1ECABDFD8[v523])(v516, &v521);
                  }
                  goto LABEL_857;
                default:
                  if (v145 != 73) {
                    goto LABEL_933;
                  }
                  goto LABEL_858;
              }
LABEL_611:
              uint64_t v300 = (*(_DWORD *)(a2 + 96) - v5);
              unsigned int v301 = v534;
LABEL_612:
              unint64_t v302 = v5 | (v300 << 32);
              *(void *)a1 = v301;
              goto LABEL_613;
            }
          }
          long long v147 = (_DWORD *)*v143;
LABEL_249:
          *(void *)(a2 + 80) = v147;
          goto LABEL_240;
        }
      }
      unint64_t v71 = *(_DWORD **)(v67 + 32 * v65 + 24);
LABEL_107:
      *(void *)(a2 + 80) = v71;
      goto LABEL_98;
    case 0x19:
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v521, a2);
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        unint64_t v58 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
        *(void *)a1 = v58;
        int v59 = 1;
        *(_DWORD *)(a1 + 24) = 1;
      }
      else
      {
        uint64_t result = (WTF *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIfStatementWithAttributes(a1, a2, (uint64_t *)&v521, (_DWORD *)v4, v5);
        int v59 = v523;
        if (v523 == -1) {
          goto LABEL_948;
        }
      }
      uint16x8_t v154 = off_1ECABE5D0[v59];
      goto LABEL_946;
    case 0x1B:
      __int16 v84 = (_OWORD *)(a2 + 60);
      unsigned int v85 = *(_DWORD *)(a2 + 36);
      unsigned int v86 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v86;
        if (v85 <= v86)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9A68);
        }
        uint64_t v88 = *(void *)(a2 + 24);
        uint64_t v89 = v88 + 32 * v86;
        unsigned int v90 = *(_DWORD *)v89;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v89;
        _OWORD *v84 = *(_OWORD *)(v89 + 4);
        unsigned int v91 = *(_DWORD *)v89;
        if (v91 > 8) {
          goto LABEL_132;
        }
        if (((1 << v91) & 0x38) != 0) {
          break;
        }
        if (((1 << v91) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v88 + 32 * v86 + 24);
        }
        else if (v91 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned long long v92 = *(_DWORD **)(v88 + 32 * v86 + 24);
          if (v92) {
            *v92 += 2;
          }
          goto LABEL_141;
        }
LABEL_132:
        int v87 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v87;
        ++v86;
        if (v90 != 82)
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v531, a2);
          if (v533)
          {
            if (v533 != 1) {
              goto LABEL_990;
            }
            unint64_t v148 = v531;
            if (v531) {
              *(_DWORD *)v531 += 2;
            }
            *(_OWORD *)(a1 + 8) = v532;
            *(void *)a1 = v148;
            int v149 = 1;
            *(_DWORD *)(a1 + 24) = 1;
LABEL_793:
            uint64_t result = (WTF *)((uint64_t (*)(WTF **, WTF **))off_1ECABE5D0[v149])(&v521, &v531);
            goto LABEL_948;
          }
          if (*(_DWORD *)(a2 + 56) != 43)
          {
            WGSL::toString();
            WGSL::toString();
            v521 = (WTF *)"Expected a ";
            *(void *)&long long v522 = 12;
            *(void *)v516 = ", but got a ";
            *(void *)&v516[8] = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v508, (uint64_t)v516, (uint64_t *)&v534, &v526);
            if (!v526)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B78);
            }
            unsigned int v193 = v534;
            v534 = 0;
            if (v193)
            {
              if (*(_DWORD *)v193 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v193 -= 2;
              }
            }
            uint64_t v394 = v508;
            v508 = 0;
            if (v394)
            {
              if (*(_DWORD *)v394 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v394 -= 2;
              }
            }
            int v149 = 0;
            unint64_t v395 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v526;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v395;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_793;
          }
          unsigned int v176 = *(_DWORD *)(a2 + 36);
          unsigned int v177 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v177;
            if (v176 <= v177)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9AF8);
            }
            uint64_t v179 = *(void *)(a2 + 24);
            uint64_t v180 = v179 + 32 * v177;
            unsigned int v181 = *(_DWORD *)v180;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v180;
            _OWORD *v84 = *(_OWORD *)(v180 + 4);
            unsigned int v182 = *(_DWORD *)v180;
            if (v182 <= 8)
            {
              if (((1 << v182) & 0x38) != 0)
              {
                int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                goto LABEL_339;
              }
              if (((1 << v182) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v179 + 32 * v177 + 24);
              }
              else if (v182 == 8)
              {
                *(void *)(a2 + 80) = 0;
                int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                if (v183) {
                  *v183 += 2;
                }
LABEL_339:
                *(void *)(a2 + 80) = v183;
              }
            }
            int v178 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v178;
            ++v177;
            if (v181 == 82) {
              continue;
            }
            break;
          }
          int v479 = 0;
          uint8x8_t v196 = (_OWORD *)(a1 + 8);
          v529 = 0;
          uint64_t v530 = 0;
          LOBYTE(v521) = 0;
          unint64_t v197 = HIDWORD(v4);
          unsigned __int8 v525 = 0;
          while (2)
          {
            while (2)
            {
              int v199 = *(_DWORD *)(a2 + 56);
              if (v199 != 16)
              {
                if (v199 != 44)
                {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseStatement(v516, a2);
                  int v200 = (int)v517;
                  if (v517)
                  {
                    if (v517 != 1) {
                      goto LABEL_990;
                    }
                    uint64_t v201 = *(void *)v516;
                    if (*(void *)v516) {
                      **(_DWORD **)v516 += 2;
                    }
                    _OWORD *v196 = *(_OWORD *)&v516[8];
                    *(void *)a1 = v201;
                    *(_DWORD *)(a1 + 24) = 1;
                    uint64_t v202 = v517;
                    if (v517 == -1)
                    {
LABEL_381:
                      if (v200)
                      {
LABEL_774:
                        if (v479)
                        {
                          if (*((void *)&v522 + 1)) {
                            WTF::fastFree(*((WTF **)&v522 + 1), v198);
                          }
                          if (v521) {
                            WTF::fastFree(v521, v198);
                          }
                        }
                        uint64_t result = v529;
                        if (v529)
                        {
                          v529 = 0;
                          LODWORD(v530) = 0;
                          uint64_t result = (WTF *)WTF::fastFree(result, v198);
                        }
                        int v149 = v533;
                        if (v533 == -1) {
                          goto LABEL_948;
                        }
                        goto LABEL_793;
                      }
                      continue;
                    }
                  }
                  else
                  {
                    uint64_t v203 = HIDWORD(v530);
                    if (HIDWORD(v530) == v530)
                    {
                      v204 = (uint64_t *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v529, HIDWORD(v530) + 1, (unint64_t)v516);
                      uint64_t v203 = HIDWORD(v530);
                      unint64_t v205 = v529;
                      uint64_t v206 = *v204;
                    }
                    else
                    {
                      unint64_t v205 = v529;
                      uint64_t v206 = *(void *)v516;
                    }
                    *((void *)v205 + v203) = v206;
                    ++HIDWORD(v530);
                    uint64_t v202 = v517;
                    if (v517 == -1) {
                      goto LABEL_381;
                    }
                  }
                  ((void (*)(const char **, unsigned char *))off_1ECABE580[v202])(&v526, v516);
                  goto LABEL_381;
                }
                unsigned int v385 = *(_DWORD *)(a2 + 36);
                unsigned int v386 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v386;
                  if (v385 <= v386)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825B9B10);
                  }
                  uint64_t v388 = *(void *)(a2 + 24);
                  uint64_t v389 = v388 + 32 * v386;
                  unsigned int v390 = *(_DWORD *)v389;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v389;
                  _OWORD *v84 = *(_OWORD *)(v389 + 4);
                  unsigned int v391 = *(_DWORD *)v389;
                  if (v391 <= 8)
                  {
                    if (((1 << v391) & 0x38) != 0)
                    {
                      unint64_t v392 = *(_DWORD **)(v388 + 32 * v386 + 24);
                      goto LABEL_772;
                    }
                    if (((1 << v391) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v388 + 32 * v386 + 24);
                    }
                    else if (v391 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      unint64_t v392 = *(_DWORD **)(v388 + 32 * v386 + 24);
                      if (v392) {
                        *v392 += 2;
                      }
LABEL_772:
                      *(void *)(a2 + 80) = v392;
                    }
                  }
                  int v387 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v387;
                  ++v386;
                  if (v390 != 82)
                  {
                    uint64_t v393 = *(void **)(a2 + 8);
                    *(_DWORD *)v516 = v4;
                    *(_DWORD *)&v516[4] = v197;
                    *(_DWORD *)&v516[8] = v5;
                    *(_DWORD *)&v516[12] = v387 - v5;
                    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::LoopStatement,WGSL::SourceSpan,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Statement,0ul>,std::optional<WGSL::AST::Continuing>,void>(v393, v516, (uint64_t *)&v531, (uint64_t *)&v529, (uint64_t *)&v521);
                    *(_DWORD *)(a1 + 24) = 0;
                    int v479 = v525;
                    goto LABEL_774;
                  }
                  continue;
                }
              }
              break;
            }
            unsigned int v207 = *(_DWORD *)(a2 + 36);
            unsigned int v208 = *(_DWORD *)(a2 + 40) + 1;
LABEL_398:
            *(_DWORD *)(a2 + 40) = v208;
            if (v207 <= v208)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B00);
            }
            uint64_t v210 = *(void *)(a2 + 24);
            uint64_t v211 = v210 + 32 * v208;
            unsigned int v212 = *(_DWORD *)v211;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v211;
            _OWORD *v84 = *(_OWORD *)(v211 + 4);
            unsigned int v213 = *(_DWORD *)v211;
            if (v213 <= 8)
            {
              if (((1 << v213) & 0x38) != 0)
              {
                int8x16x2_t v214 = *(_DWORD **)(v210 + 32 * v208 + 24);
                goto LABEL_406;
              }
              if (((1 << v213) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v210 + 32 * v208 + 24);
              }
              else if (v213 == 8)
              {
                *(void *)(a2 + 80) = 0;
                int8x16x2_t v214 = *(_DWORD **)(v210 + 32 * v208 + 24);
                if (v214) {
                  *v214 += 2;
                }
LABEL_406:
                *(void *)(a2 + 80) = v214;
              }
            }
            int v209 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v209;
            ++v208;
            if (v212 != 82)
            {
              v519 = 0;
              uint64_t v520 = 0;
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(&v526, a2);
              if (v528)
              {
                if (v528 != 1) {
                  goto LABEL_990;
                }
                int8x16x2_t v215 = v526;
                if (v526) {
                  *(_DWORD *)v526 += 2;
                }
                char v216 = 0;
                _OWORD *v196 = v527;
                *(void *)a1 = v215;
                *(_DWORD *)(a1 + 24) = 1;
                uint64_t v217 = v528;
                if (v528 == -1) {
                  goto LABEL_413;
                }
                goto LABEL_412;
              }
              if (*(_DWORD *)(a2 + 56) != 43)
              {
                *(_DWORD *)v516 = *(_DWORD *)(a2 + 56);
                unsigned int v518 = 1;
                WGSL::toString();
                if (v518 != 1) {
                  goto LABEL_990;
                }
                WGSL::toString();
                v508 = (WTF *)"Expected a ";
                *(void *)&long long v509 = 12;
                v534 = ", but got a ";
                uint64_t v535 = 13;
                WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v508, (uint64_t *)&v514, (uint64_t)&v534, (uint64_t *)&v513, &v515);
                if (!v515)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9B88);
                }
                unsigned int v262 = v513;
                v513 = 0;
                if (v262)
                {
                  if (*(_DWORD *)v262 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *(_DWORD *)v262 -= 2;
                  }
                }
                unsigned int v267 = v514;
                v514 = 0;
                if (!v267) {
                  goto LABEL_516;
                }
                goto LABEL_513;
              }
              *(_OWORD *)&v516[4] = *v84;
              *(_DWORD *)v516 = 43;
              unsigned int v518 = 0;
              unsigned int v219 = *(_DWORD *)(a2 + 36);
              unsigned int v220 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v220;
                if (v219 <= v220)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9B40);
                }
                uint64_t v222 = *(void *)(a2 + 24);
                uint64_t v223 = v222 + 32 * v220;
                unsigned int v224 = *(_DWORD *)v223;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v223;
                _OWORD *v84 = *(_OWORD *)(v223 + 4);
                unsigned int v225 = *(_DWORD *)v223;
                if (v225 <= 8)
                {
                  if (((1 << v225) & 0x38) != 0)
                  {
                    unsigned int v226 = *(_DWORD **)(v222 + 32 * v220 + 24);
                    goto LABEL_429;
                  }
                  if (((1 << v225) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v222 + 32 * v220 + 24);
                  }
                  else if (v225 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    unsigned int v226 = *(_DWORD **)(v222 + 32 * v220 + 24);
                    if (v226) {
                      *v226 += 2;
                    }
LABEL_429:
                    *(void *)(a2 + 80) = v226;
                  }
                }
                int v221 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v221;
                ++v220;
                if (v224 == 82) {
                  continue;
                }
                break;
              }
LABEL_431:
              int v227 = *(_DWORD *)(a2 + 56);
              if (v227 != 11) {
                goto LABEL_432;
              }
              while (2)
              {
                unsigned int v256 = *(_DWORD *)(a2 + 36);
                unsigned int v237 = *(_DWORD *)(a2 + 40);
                uint64_t v235 = 32 * (v237 + 1);
                unsigned int v236 = v237 + 2;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = ++v237;
                  if (v256 <= v237)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825B9B58);
                  }
                  unsigned int v238 = v236;
                  uint64_t v239 = *(void *)(a2 + 24);
                  int v240 = *(_DWORD *)(v239 + v235);
                  *(_DWORD *)(a2 + 56) = v240;
                  _OWORD *v84 = *(_OWORD *)(v239 + v235 + 4);
                  unsigned int v241 = *(_DWORD *)(v239 + v235);
                  if (v241 <= 8)
                  {
                    if (((1 << v241) & 0x38) != 0)
                    {
                      int v242 = *(_DWORD **)(v239 + v235 + 24);
                      goto LABEL_454;
                    }
                    if (((1 << v241) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v239 + v235 + 24);
                    }
                    else if (v241 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      int v242 = *(_DWORD **)(v239 + v235 + 24);
                      if (v242) {
                        *v242 += 2;
                      }
LABEL_454:
                      *(void *)(a2 + 80) = v242;
                    }
                  }
                  int v234 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v234;
                  v235 += 32;
                  unsigned int v236 = v238 + 1;
                  if (v240 == 82) {
                    continue;
                  }
                  break;
                }
                if (v240 != 25)
                {
                  if (v240 != 73)
                  {
                    *(_DWORD *)v516 = v240;
                    unsigned int v518 = 1;
                    WGSL::toString();
                    if (v518 != 1) {
                      goto LABEL_990;
                    }
                    WGSL::toString();
                    v508 = (WTF *)"Expected a ";
                    *(void *)&long long v509 = 12;
                    v534 = ", but got a ";
                    uint64_t v535 = 13;
                    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v508, (uint64_t *)&v512, (uint64_t)&v534, (uint64_t *)&v511, &v515);
                    if (!v515)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825B9BA0);
                    }
                    uint64_t v289 = v511;
                    v511 = 0;
                    if (v289)
                    {
                      if (*(_DWORD *)v289 == 2) {
                        WTF::StringImpl::destroy();
                      }
                      else {
                        *(_DWORD *)v289 -= 2;
                      }
                    }
                    unsigned int v267 = v512;
                    v512 = 0;
                    if (v267) {
                      goto LABEL_513;
                    }
LABEL_516:
                    unint64_t v268 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                    *(void *)a1 = v515;
                    *(void *)(a1 + 8) = v4;
                    *(void *)(a1 + 16) = v268;
                    *(_DWORD *)(a1 + 24) = 1;
                    if (v518 != -1) {
                      ((void (*)(WTF **, unsigned char *))off_1ECABDF90[v518])(&v508, v516);
                    }
                    goto LABEL_539;
                  }
                  *(_OWORD *)&v516[4] = *v84;
                  *(_DWORD *)v516 = 73;
                  unsigned int v518 = 0;
LABEL_460:
                  *(_DWORD *)(a2 + 40) = v238;
                  if (v256 <= v238)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825B9B60);
                  }
                  uint64_t v244 = v239 + 32 * v238;
                  unsigned int v245 = *(_DWORD *)v244;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v244;
                  _OWORD *v84 = *(_OWORD *)(v244 + 4);
                  unsigned int v246 = *(_DWORD *)v244;
                  if (v246 <= 8)
                  {
                    if (((1 << v246) & 0x38) != 0)
                    {
                      v247 = *(_DWORD **)(v239 + 32 * v238 + 24);
                      goto LABEL_468;
                    }
                    if (((1 << v246) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v239 + 32 * v238 + 24);
                    }
                    else if (v246 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      v247 = *(_DWORD **)(v239 + 32 * v238 + 24);
                      if (v247) {
                        *v247 += 2;
                      }
LABEL_468:
                      *(void *)(a2 + 80) = v247;
                    }
                  }
                  int v243 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v243;
                  ++v238;
                  if (v245 != 82)
                  {
                    unint64_t v248 = *(void **)(a2 + 8);
                    *(_DWORD *)v516 = v4;
                    *(_DWORD *)&v516[4] = v197;
                    *(_DWORD *)&v516[8] = v5;
                    *(_DWORD *)&v516[12] = v243 - v5;
                    unint64_t v249 = WGSL::AST::Builder::construct<WGSL::AST::BreakStatement,WGSL::SourceSpan,void>(v248, v516);
                    uint64_t v250 = HIDWORD(v520);
                    if (HIDWORD(v520) == v520)
                    {
                      v471 = v249;
                      unint64_t v474 = v197;
                      unint64_t v251 = HIDWORD(v520) + ((unint64_t)HIDWORD(v520) >> 2);
                      if (v251 >= 0x10) {
                        unint64_t v252 = v251 + 1;
                      }
                      else {
                        unint64_t v252 = 16;
                      }
                      if (v252 <= (unint64_t)HIDWORD(v520) + 1) {
                        unint64_t v253 = HIDWORD(v520) + 1;
                      }
                      else {
                        unint64_t v253 = v252;
                      }
                      if (v253 >> 29)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825B9B80);
                      }
                      __src = v519;
                      unsigned int v254 = (_DWORD *)WTF::fastMalloc((WTF *)(8 * v253));
                      LODWORD(v520) = v253;
                      v519 = v254;
                      memcpy(v254, __src, 8 * v250);
                      unint64_t v197 = v474;
                      if (__src)
                      {
                        if (v519 == __src)
                        {
                          v519 = 0;
                          LODWORD(v520) = 0;
                        }
                        WTF::fastFree((WTF *)__src, v198);
                      }
                      LODWORD(v250) = HIDWORD(v520);
                      int v255 = &v519[2 * HIDWORD(v520)];
                      unint64_t v249 = v471;
                    }
                    else
                    {
                      int v255 = &v519[2 * HIDWORD(v520)];
                    }
                    *int v255 = v249;
                    HIDWORD(v520) = v250 + 1;
                    int v227 = *(_DWORD *)(a2 + 56);
                    if (v227 == 11) {
                      continue;
                    }
LABEL_432:
                    if (v227 == 44)
                    {
                      v472 = 0;
                      goto LABEL_545;
                    }
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseStatement(v516, a2);
                    int v228 = (int)v517;
                    if (v517)
                    {
                      if (v517 != 1) {
                        goto LABEL_990;
                      }
                      uint64_t v229 = *(void *)v516;
                      if (*(void *)v516) {
                        **(_DWORD **)v516 += 2;
                      }
                      _OWORD *v196 = *(_OWORD *)&v516[8];
                      *(void *)a1 = v229;
                      *(_DWORD *)(a1 + 24) = 1;
                    }
                    else
                    {
                      uint64_t v230 = HIDWORD(v520);
                      if (HIDWORD(v520) == v520)
                      {
                        int v231 = (uint64_t *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v519, HIDWORD(v520) + 1, (unint64_t)v516);
                        uint64_t v230 = HIDWORD(v520);
                        uint64_t v232 = (uint64_t)v519;
                        uint64_t v233 = *v231;
                      }
                      else
                      {
                        uint64_t v232 = (uint64_t)v519;
                        uint64_t v233 = *(void *)v516;
                      }
                      *(void *)(v232 + 8 * v230) = v233;
                      ++HIDWORD(v520);
                    }
                    if (v517 != -1) {
                      ((void (*)(WTF **, unsigned char *))off_1ECABE580[v517])(&v508, v516);
                    }
                    if (!v228) {
                      goto LABEL_431;
                    }
LABEL_539:
                    char v216 = 0;
                    uint64_t v217 = v528;
                    if (v528 != -1) {
                      goto LABEL_412;
                    }
                    goto LABEL_413;
                  }
                  goto LABEL_460;
                }
                break;
              }
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v238;
                if (v256 <= v238)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9B68);
                }
                uint64_t v258 = v239 + 32 * v238;
                unsigned int v259 = *(_DWORD *)v258;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v258;
                _OWORD *v84 = *(_OWORD *)(v258 + 4);
                unsigned int v260 = *(_DWORD *)v258;
                if (v260 <= 8)
                {
                  if (((1 << v260) & 0x38) != 0)
                  {
                    unsigned int v261 = *(_DWORD **)(v239 + 32 * v238 + 24);
                    goto LABEL_495;
                  }
                  if (((1 << v260) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v239 + 32 * v238 + 24);
                  }
                  else if (v260 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    unsigned int v261 = *(_DWORD **)(v239 + 32 * v238 + 24);
                    if (v261) {
                      *v261 += 2;
                    }
LABEL_495:
                    *(void *)(a2 + 80) = v261;
                  }
                }
                int v257 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v257;
                ++v238;
                if (v259 == 82) {
                  continue;
                }
                break;
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v508, a2);
              if (!v510)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)v516, a2, 73);
                unsigned int v265 = v518;
                unint64_t v475 = v197;
                if (v518)
                {
                  WGSL::toString();
                  if (v518 != 1) {
                    goto LABEL_990;
                  }
                  WGSL::toString();
                  WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v534, (uint64_t *)&v507, (uint64_t *)&v506);
                  unsigned int v266 = v506;
                  v506 = 0;
                  if (v266)
                  {
                    if (*v266 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v266 -= 2;
                    }
                  }
                  unsigned int v271 = v507;
                  v507 = 0;
                  if (v271)
                  {
                    if (*v271 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v271 -= 2;
                    }
                  }
                  unsigned int v269 = v265;
                  unint64_t v272 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                  *(void *)a1 = v534;
                  *(void *)(a1 + 8) = v4;
                  *(void *)(a1 + 16) = v272;
                  int v264 = 1;
                  *(_DWORD *)(a1 + 24) = 1;
                  uint64_t v270 = v518;
                  if (v518 == -1)
                  {
                    v472 = 0;
LABEL_529:
                    unint64_t v197 = v475;
                    goto LABEL_530;
                  }
                }
                else
                {
                  unsigned int v269 = 0;
                  uint64_t v270 = 0;
                  int v264 = 13;
                }
                ((void (*)(const char **, unsigned char *))off_1ECABDF90[v270])(&v534, v516);
                uint64_t v273 = v508;
                if (v269) {
                  uint64_t v273 = 0;
                }
                v472 = v273;
                goto LABEL_529;
              }
              if (v510 != 1) {
                goto LABEL_990;
              }
              int v263 = v508;
              if (v508) {
                *(_DWORD *)v508 += 2;
              }
              v472 = 0;
              _OWORD *v196 = v509;
              *(void *)a1 = v263;
              int v264 = 1;
              *(_DWORD *)(a1 + 24) = 1;
LABEL_530:
              if (v510 != -1) {
                ((void (*)(unsigned char *, WTF **))off_1ECABE170[v510])(v516, &v508);
              }
              if (v264 != 13) {
                goto LABEL_539;
              }
              if (*(_DWORD *)(a2 + 56) != 44)
              {
                *(_DWORD *)v516 = *(_DWORD *)(a2 + 56);
                unsigned int v518 = 1;
                WGSL::toString();
                if (v518 != 1) {
                  goto LABEL_990;
                }
                WGSL::toString();
                v508 = (WTF *)"Expected a ";
                *(void *)&long long v509 = 12;
                v534 = ", but got a ";
                uint64_t v535 = 13;
                WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v508, (uint64_t *)&v505, (uint64_t)&v534, (uint64_t *)&v504, &v515);
                if (!v515)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9B90);
                }
                uint64_t v274 = v504;
                v504 = 0;
                if (v274)
                {
                  if (*v274 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v274 -= 2;
                  }
                }
                unsigned int v267 = v505;
                v505 = 0;
                if (!v267) {
                  goto LABEL_516;
                }
LABEL_513:
                if (*v267 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v267 -= 2;
                }
                goto LABEL_516;
              }
LABEL_545:
              *(_OWORD *)&v516[4] = *v84;
              *(_DWORD *)v516 = 44;
              unsigned int v518 = 0;
              unsigned int v275 = *(_DWORD *)(a2 + 36);
              unsigned int v276 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v276;
                if (v275 <= v276)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9B98);
                }
                uint64_t v278 = *(void *)(a2 + 24);
                uint64_t v279 = v278 + 32 * v276;
                unsigned int v280 = *(_DWORD *)v279;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v279;
                _OWORD *v84 = *(_OWORD *)(v279 + 4);
                unsigned int v281 = *(_DWORD *)v279;
                if (v281 <= 8)
                {
                  if (((1 << v281) & 0x38) != 0)
                  {
                    uint64_t v282 = *(_DWORD **)(v278 + 32 * v276 + 24);
                    goto LABEL_556;
                  }
                  if (((1 << v281) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v278 + 32 * v276 + 24);
                  }
                  else if (v281 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    uint64_t v282 = *(_DWORD **)(v278 + 32 * v276 + 24);
                    if (v282) {
                      *v282 += 2;
                    }
LABEL_556:
                    *(void *)(a2 + 80) = v282;
                  }
                }
                int v277 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v277;
                ++v276;
                if (v280 == 82) {
                  continue;
                }
                break;
              }
              unsigned int v283 = (WTF *)v519;
              v519 = 0;
              unsigned int v285 = v520;
              unsigned int v284 = HIDWORD(v520);
              uint64_t v520 = 0;
              unint64_t v286 = v526;
              v526 = 0;
              unsigned int v288 = v527;
              unsigned int v287 = DWORD1(v527);
              *(void *)&long long v527 = 0;
              if (v479)
              {
                unint64_t v466 = __PAIR64__(v284, v285);
                int v467 = v283;
                unsigned int __srca = v288;
                unsigned int v480 = v287;
                if (v521) {
                  WTF::fastFree(v521, v198);
                }
                v521 = v467;
                *(void *)&long long v522 = v466;
                if (v468) {
                  WTF::fastFree(v468, v198);
                }
                *((void *)&v522 + 1) = v286;
                unint64_t v523 = __PAIR64__(v480, __srca);
                int v479 = 1;
                v468 = (WTF *)v286;
                char v216 = 1;
                v524 = v472;
                uint64_t v217 = v528;
                if (v528 == -1) {
                  goto LABEL_413;
                }
LABEL_412:
                ((void (*)(unsigned char *, const char **))off_1ECABE5D0[v217])(v516, &v526);
              }
              else
              {
                v521 = v283;
                *(void *)&long long v522 = __PAIR64__(v284, v285);
                *((void *)&v522 + 1) = v286;
                unint64_t v523 = __PAIR64__(v287, v288);
                v524 = v472;
                v468 = (WTF *)v286;
                char v216 = 1;
                int v479 = 1;
                unsigned __int8 v525 = 1;
                uint64_t v217 = v528;
                if (v528 != -1) {
                  goto LABEL_412;
                }
              }
LABEL_413:
              int8x16x2_t v218 = (WTF *)v519;
              if (v519)
              {
                v519 = 0;
                LODWORD(v520) = 0;
                WTF::fastFree(v218, v198);
              }
              if ((v216 & 1) == 0) {
                goto LABEL_774;
              }
              continue;
            }
            goto LABEL_398;
          }
        }
      }
      unsigned long long v92 = *(_DWORD **)(v88 + 32 * v86 + 24);
LABEL_141:
      *(void *)(a2 + 80) = v92;
      goto LABEL_132;
    case 0x1E:
      unsigned int v41 = *(_DWORD *)(a2 + 36);
      unsigned int v42 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v43 = 32 * v42;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v42;
        if (v41 <= v42)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9A98);
        }
        uint64_t v45 = *(void *)(a2 + 24);
        int v46 = *(_DWORD *)(v45 + v43);
        *(_DWORD *)(a2 + 56) = v46;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v45 + v43 + 4);
        unsigned int v47 = *(_DWORD *)(v45 + v43);
        if (v47 > 8) {
          goto LABEL_64;
        }
        if (((1 << v47) & 0x38) != 0) {
          break;
        }
        if (((1 << v47) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v45 + v43 + 24);
        }
        else if (v47 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v48 = *(_DWORD **)(v45 + v43 + 24);
          if (v48) {
            *v48 += 2;
          }
          goto LABEL_73;
        }
LABEL_64:
        int v44 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v44;
        v43 += 32;
        ++v42;
        if (v46 != 82)
        {
          if (v46 == 73)
          {
            uint64_t v119 = *(void **)(a2 + 8);
            v521 = (WTF *)v4;
            LODWORD(v522) = v5;
            DWORD1(v522) = v44 - v5;
            unsigned int v120 = WGSL::AST::Builder::construct<WGSL::AST::ReturnStatement,WGSL::SourceSpan,decltype(nullptr),void>(v119, &v521);
            *(void *)v516 = v120;
            LODWORD(v517) = 0;
LABEL_361:
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v521, a2, 73);
            int v191 = (int)v524;
            if (v524)
            {
              WGSL::toString();
              if (v191 != 1) {
                goto LABEL_990;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v531, (uint64_t *)&v503, (uint64_t *)&v502);
              uint16x8_t v192 = v502;
              v502 = 0;
              if (v192)
              {
                if (*v192 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v192 -= 2;
                }
              }
              uint8x8_t v303 = v503;
              v503 = 0;
              if (v303)
              {
                if (*v303 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v303 -= 2;
                }
              }
              uint64_t v157 = 0;
              unint64_t v304 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
              *(void *)a1 = v531;
              *(void *)(a1 + 8) = v4;
              *(void *)(a1 + 16) = v304;
              *(_DWORD *)(a1 + 24) = 1;
            }
            else
            {
              if (v521 == 8 && v523)
              {
                if (*(_DWORD *)v523 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *(_DWORD *)v523 -= 2;
                }
              }
              uint64_t v157 = 0;
              *(void *)a1 = v120;
              *(_DWORD *)(a1 + 24) = 0;
            }
          }
          else
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v521, a2);
            uint64_t v155 = v523;
            if (!v523)
            {
              unint64_t v189 = *(void **)(a2 + 8);
              unsigned int v190 = *(_DWORD *)(a2 + 96) - v5;
              v531 = (WTF *)v4;
              *(void *)&long long v532 = __PAIR64__(v190, v5);
              v526 = (const char *)v521;
              unsigned int v120 = WGSL::AST::Builder::construct<WGSL::AST::ReturnStatement,WGSL::SourceSpan,WGSL::AST::Expression *,void>(v189, &v531, (uint64_t *)&v526);
              *(void *)v516 = v120;
              LODWORD(v517) = 0;
              ((void (*)(WTF **, WTF **))off_1ECABE170[v155])(&v531, &v521);
              goto LABEL_361;
            }
            if (v523 != 1) {
              goto LABEL_990;
            }
            long long v156 = v521;
            if (v521) {
              *(_DWORD *)v521 += 2;
            }
            *(_OWORD *)&v516[8] = v522;
            *(void *)v516 = v156;
            uint64_t v157 = 1;
            LODWORD(v517) = 1;
            ((void (*)(WTF **, WTF **))off_1ECABE170[v155])(&v531, &v521);
            if (v156) {
              *(_DWORD *)v156 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
            *(void *)a1 = v156;
            *(_DWORD *)(a1 + 24) = 1;
          }
          uint16x8_t v154 = off_1ECABE580[v157];
LABEL_842:
          int8x16x2_t v416 = &v521;
          unint64_t v417 = (WTF **)v516;
          goto LABEL_947;
        }
      }
      unsigned int v48 = *(_DWORD **)(v45 + v43 + 24);
LABEL_73:
      *(void *)(a2 + 80) = v48;
      goto LABEL_64;
    case 0x20:
      int8x16_t v32 = (_OWORD *)(a2 + 60);
      unsigned int v33 = *(_DWORD *)(a2 + 36);
      unsigned int v34 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v34;
        if (v33 <= v34) {
          goto LABEL_991;
        }
        uint64_t v36 = *(void *)(a2 + 24);
        uint64_t v37 = v36 + 32 * v34;
        unsigned int v38 = *(_DWORD *)v37;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v37;
        _OWORD *v32 = *(_OWORD *)(v37 + 4);
        unsigned int v39 = *(_DWORD *)v37;
        if (v39 > 8) {
          goto LABEL_52;
        }
        if (((1 << v39) & 0x38) != 0) {
          break;
        }
        if (((1 << v39) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v36 + 32 * v34 + 24);
        }
        else if (v39 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v40 = *(_DWORD **)(v36 + 32 * v34 + 24);
          if (v40) {
            *v40 += 2;
          }
          goto LABEL_61;
        }
LABEL_52:
        int v35 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v35;
        ++v34;
        if (v38 != 82)
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v521, a2);
          if (v523)
          {
            if (v523 != 1) {
              goto LABEL_990;
            }
            uint64_t v141 = v521;
            if (v521) {
              *(_DWORD *)v521 += 2;
            }
            *(_OWORD *)(a1 + 8) = v522;
            *(void *)a1 = v141;
            int v142 = 1;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_945;
          }
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseAttributes(v516, a2);
          if (v517)
          {
            if (v517 != 1) {
              goto LABEL_990;
            }
            uint64_t v174 = *(void *)v516;
            if (*(void *)v516) {
              **(_DWORD **)v516 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
            *(void *)a1 = v174;
            int v175 = 1;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_943;
          }
          if (*(_DWORD *)(a2 + 56) != 43)
          {
            WGSL::toString();
            WGSL::toString();
            v531 = (WTF *)"Expected a ";
            *(void *)&long long v532 = 12;
            v526 = ", but got a ";
            *(void *)&long long v527 = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v531, (uint64_t *)&v534, (uint64_t)&v526, (uint64_t *)&v529, &v508);
            if (!v508)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9BA8);
            }
            unsigned int v314 = v529;
            v529 = 0;
            if (v314)
            {
              if (*(_DWORD *)v314 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v314 -= 2;
              }
            }
            int v418 = v534;
            v534 = 0;
            if (v418)
            {
              if (*(_DWORD *)v418 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v418 -= 2;
              }
            }
            int v175 = 0;
            unint64_t v419 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v508;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v419;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_943;
          }
          unsigned int v290 = *(_DWORD *)(a2 + 36);
          unsigned int v291 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v291;
            if (v290 <= v291)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B08);
            }
            uint64_t v293 = *(void *)(a2 + 24);
            uint64_t v294 = v293 + 32 * v291;
            unsigned int v295 = *(_DWORD *)v294;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v294;
            _OWORD *v32 = *(_OWORD *)(v294 + 4);
            unsigned int v296 = *(_DWORD *)v294;
            if (v296 <= 8)
            {
              if (((1 << v296) & 0x38) != 0)
              {
                unsigned int v297 = *(_DWORD **)(v293 + 32 * v291 + 24);
                goto LABEL_586;
              }
              if (((1 << v296) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v293 + 32 * v291 + 24);
              }
              else if (v296 == 8)
              {
                *(void *)(a2 + 80) = 0;
                unsigned int v297 = *(_DWORD **)(v293 + 32 * v291 + 24);
                if (v297) {
                  *v297 += 2;
                }
LABEL_586:
                *(void *)(a2 + 80) = v297;
              }
            }
            int v292 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v292;
            ++v291;
            if (v295 == 82) {
              continue;
            }
            break;
          }
          int v473 = 0;
          int v315 = 0;
          unsigned int v478 = 0;
          v534 = 0;
          uint64_t v535 = 0;
          v476 = (_OWORD *)(a1 + 8);
          LOBYTE(v531) = 0;
          LOBYTE(v533) = 0;
          while (2)
          {
            int v316 = *(_DWORD *)(a2 + 56);
            if (v316 != 44)
            {
              v529 = 0;
              uint64_t v530 = 0;
              if (v316 != 17)
              {
                if (v316 != 12)
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  unint64_t v334 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                  *(void *)(a1 + 8) = v4;
                  *(void *)(a1 + 16) = v334;
                  int v335 = 1;
                  *(_DWORD *)(a1 + 24) = 1;
                  goto LABEL_752;
                }
                unsigned int v317 = *(_DWORD *)(a2 + 36);
                unsigned int v318 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v318;
                  if (v317 <= v318)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825B9A88);
                  }
                  uint64_t v320 = *(void *)(a2 + 24);
                  uint64_t v321 = v320 + 32 * v318;
                  unsigned int v322 = *(_DWORD *)v321;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v321;
                  _OWORD *v32 = *(_OWORD *)(v321 + 4);
                  unsigned int v323 = *(_DWORD *)v321;
                  if (v323 <= 8)
                  {
                    if (((1 << v323) & 0x38) != 0)
                    {
                      uint64_t v324 = *(_DWORD **)(v320 + 32 * v318 + 24);
                      goto LABEL_656;
                    }
                    if (((1 << v323) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v320 + 32 * v318 + 24);
                    }
                    else if (v323 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      uint64_t v324 = *(_DWORD **)(v320 + 32 * v318 + 24);
                      if (v324) {
                        *v324 += 2;
                      }
LABEL_656:
                      *(void *)(a2 + 80) = v324;
                    }
                  }
                  int v319 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v319;
                  ++v318;
                  if (v322 == 82) {
                    continue;
                  }
                  break;
                }
                v477 = 0;
                unsigned int v483 = 0;
                char v336 = 0;
                int v481 = v315;
LABEL_671:
                if (v322 == 17)
                {
                  unsigned int v337 = *(_DWORD *)(a2 + 36);
                  unsigned int v338 = *(_DWORD *)(a2 + 40) + 1;
                  while (1)
                  {
                    *(_DWORD *)(a2 + 40) = v338;
                    if (v337 <= v338)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825B9AE0);
                    }
                    uint64_t v340 = *(void *)(a2 + 24);
                    uint64_t v341 = v340 + 32 * v338;
                    unsigned int v342 = *(_DWORD *)v341;
                    *(_DWORD *)(a2 + 56) = *(_DWORD *)v341;
                    _OWORD *v32 = *(_OWORD *)(v341 + 4);
                    unsigned int v343 = *(_DWORD *)v341;
                    if (v343 > 8) {
                      goto LABEL_674;
                    }
                    if (((1 << v343) & 0x38) != 0) {
                      break;
                    }
                    if (((1 << v343) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v340 + 32 * v338 + 24);
                    }
                    else if (v343 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      unint64_t v344 = *(_DWORD **)(v340 + 32 * v338 + 24);
                      if (v344) {
                        *v344 += 2;
                      }
                      goto LABEL_683;
                    }
LABEL_674:
                    int v339 = *(_DWORD *)(a2 + 68);
                    *(void *)(a2 + 88) = *(void *)(a2 + 60);
                    *(_DWORD *)(a2 + 96) = v339;
                    ++v338;
                    if (v342 != 82)
                    {
                      char v336 = 1;
                      goto LABEL_696;
                    }
                  }
                  unint64_t v344 = *(_DWORD **)(v340 + 32 * v338 + 24);
LABEL_683:
                  *(void *)(a2 + 80) = v344;
                  goto LABEL_674;
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v526, a2);
                unsigned int v345 = v528;
                if (v528)
                {
                  if (v528 != 1) {
                    goto LABEL_990;
                  }
                  unint64_t v346 = v526;
                  if (v526) {
                    *(_DWORD *)v526 += 2;
                  }
                  _OWORD *v476 = v527;
                  *(void *)a1 = v346;
                  *(_DWORD *)(a1 + 24) = 1;
                }
                else
                {
                  unsigned int v347 = v483;
                  if (v483 == v530)
                  {
                    unint64_t v348 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v529, v483 + 1, (unint64_t)&v526);
                    int v349 = HIDWORD(v530);
                    v477 = v529;
                    *((void *)v529 + HIDWORD(v530)) = *v348;
                    unsigned int v483 = v349 + 1;
                    HIDWORD(v530) = v349 + 1;
                  }
                  else
                  {
                    *((void *)v477 + v483++) = v526;
                    HIDWORD(v530) = v347 + 1;
                  }
                }
                if (v528 != -1) {
                  ((void (*)(WTF **, const char **))off_1ECABE170[v528])(&v508, &v526);
                }
                ++v478;
                if (v345)
                {
                  int v335 = 1;
                  int v315 = v481;
                  goto LABEL_752;
                }
LABEL_696:
                unsigned int v322 = *(_DWORD *)(a2 + 56);
                if (v322 != 48)
                {
                  int v315 = v481;
                  if (v336) {
                    goto LABEL_715;
                  }
LABEL_712:
                  int v357 = 0;
                  goto LABEL_719;
                }
                unsigned int v350 = *(_DWORD *)(a2 + 36);
                uint64_t v351 = (*(_DWORD *)(a2 + 40) + 1);
                uint64_t v352 = 32 * v351;
                int v315 = v481;
LABEL_700:
                *(_DWORD *)(a2 + 40) = v351;
                if (v350 <= v351)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9AF0);
                }
                uint64_t v354 = *(void *)(a2 + 24);
                unsigned int v322 = *(_DWORD *)(v354 + v352);
                *(_DWORD *)(a2 + 56) = v322;
                _OWORD *v32 = *(_OWORD *)(v354 + v352 + 4);
                unsigned int v355 = *(_DWORD *)(v354 + v352);
                if (v355 <= 8)
                {
                  if (((1 << v355) & 0x38) != 0)
                  {
                    unsigned int v356 = *(_DWORD **)(v354 + v352 + 24);
                    goto LABEL_708;
                  }
                  if (((1 << v355) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v354 + v352 + 24);
                  }
                  else if (v355 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    unsigned int v356 = *(_DWORD **)(v354 + v352 + 24);
                    if (v356) {
                      *v356 += 2;
                    }
LABEL_708:
                    *(void *)(a2 + 80) = v356;
                  }
                }
                int v353 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v353;
                v352 += 32;
                LODWORD(v351) = v351 + 1;
                if (v322 != 82)
                {
                  if (v322 == 43 || v322 == 47)
                  {
                    if ((v336 & 1) == 0) {
                      goto LABEL_712;
                    }
LABEL_715:
                    unsigned int v358 = v483;
LABEL_716:
                    if (v315)
                    {
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      unint64_t v359 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                      *(void *)a1 = v526;
                      *(void *)(a1 + 8) = v4;
                      *(void *)(a1 + 16) = v359;
                      int v315 = 1;
                      *(_DWORD *)(a1 + 24) = 1;
                      int v335 = 1;
                      goto LABEL_752;
                    }
                    unsigned int v483 = v358;
                    unsigned int v322 = *(_DWORD *)(a2 + 56);
                    int v357 = 1;
LABEL_719:
                    if (v322 != 47)
                    {
LABEL_732:
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(&v526, a2);
                      if (v528)
                      {
                        if (v528 != 1) {
                          goto LABEL_990;
                        }
                        unsigned int v368 = v526;
                        if (v526) {
                          *(_DWORD *)v526 += 2;
                        }
                        _OWORD *v476 = v527;
                        *(void *)a1 = v368;
                        int v335 = 1;
                        *(_DWORD *)(a1 + 24) = 1;
                        uint64_t v369 = v528;
                        if (v528 != -1) {
                          goto LABEL_751;
                        }
                      }
                      else
                      {
                        if (v357)
                        {
                          uint64_t v370 = v529;
                          unsigned int v371 = v530;
                          v529 = 0;
                          uint64_t v530 = 0;
                          unsigned int v372 = v526;
                          if (v473)
                          {
                            if (v531)
                            {
                              v482 = v526;
                              WTF::fastFree(v531, v333);
                              unsigned int v372 = v482;
                            }
                            v531 = v370;
                            *(void *)&long long v532 = __PAIR64__(v483, v371);
                            int v473 = 1;
                            int v315 = 1;
                            *((void *)&v532 + 1) = v372;
                          }
                          else
                          {
                            v531 = v370;
                            *(void *)&long long v532 = __PAIR64__(v483, v371);
                            *((void *)&v532 + 1) = v526;
                            int v315 = 1;
                            int v473 = 1;
                            LOBYTE(v533) = 1;
                          }
                        }
                        else
                        {
                          v508 = v529;
                          unsigned int v373 = v530;
                          v529 = 0;
                          uint64_t v530 = 0;
                          *(void *)&long long v509 = __PAIR64__(v483, v373);
                          *((void *)&v509 + 1) = v526;
                          int v374 = HIDWORD(v535);
                          if (HIDWORD(v535) == v535)
                          {
                            unint64_t v375 = WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((unsigned int *)&v534, HIDWORD(v535) + 1, (unint64_t)&v508);
                            int v374 = HIDWORD(v535);
                            int v376 = (char *)&v534[24 * HIDWORD(v535)];
                            *(void *)int v376 = 0;
                            *((void *)v376 + 1) = 0;
                            uint64_t v377 = *(void *)v375;
                            *(void *)unint64_t v375 = 0;
                            *(void *)int v376 = v377;
                            LODWORD(v377) = *(_DWORD *)(v375 + 8);
                            *(_DWORD *)(v375 + 8) = 0;
                            *((_DWORD *)v376 + 2) = v377;
                            LODWORD(v377) = *(_DWORD *)(v375 + 12);
                            *(_DWORD *)(v375 + 12) = 0;
                            *((_DWORD *)v376 + 3) = v377;
                            uint64_t v378 = v376 + 16;
                            unsigned int v379 = (void *)(v375 + 16);
                          }
                          else
                          {
                            unsigned int v380 = (char *)&v534[24 * HIDWORD(v535)];
                            *(void *)unsigned int v380 = 0;
                            *((void *)v380 + 1) = 0;
                            int8x16_t v381 = v508;
                            v508 = 0;
                            *(void *)unsigned int v380 = v381;
                            *((_DWORD *)v380 + 2) = v509;
                            LODWORD(v381) = DWORD1(v509);
                            DWORD1(v509) = 0;
                            *((_DWORD *)v380 + 3) = v381;
                            uint64_t v378 = v380 + 16;
                            unsigned int v379 = (void *)&v509 + 1;
                          }
                          *uint64_t v378 = *v379;
                          HIDWORD(v535) = v374 + 1;
                          int8x16_t v382 = v508;
                          if (v508)
                          {
                            v508 = 0;
                            LODWORD(v509) = 0;
                            WTF::fastFree(v382, v333);
                          }
                        }
                        if (v478 < 0x400)
                        {
                          int v335 = 0;
                          uint64_t v369 = v528;
                          if (v528 == -1) {
                            goto LABEL_752;
                          }
LABEL_751:
                          ((void (*)(WTF **, const char **))off_1ECABE5C0[v369])(&v508, &v526);
                          goto LABEL_752;
                        }
                        WTF::String::number((WTF::String *)0x3FF);
                        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"switch statement cannot have more than ", 40, (uint64_t *)&v519, (int8x16_t *)" case selector values", 22, &v508);
                        unint64_t v383 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                        *(void *)a1 = v508;
                        *(void *)(a1 + 8) = v4;
                        *(void *)(a1 + 16) = v383;
                        *(_DWORD *)(a1 + 24) = 1;
                        v508 = 0;
                        unint64_t v384 = v519;
                        v519 = 0;
                        if (v384)
                        {
                          if (*v384 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v384 -= 2;
                          }
                        }
                        int v335 = 1;
                        uint64_t v369 = v528;
                        if (v528 != -1) {
                          goto LABEL_751;
                        }
                      }
LABEL_752:
                      uint64_t result = v529;
                      if (v529)
                      {
                        v529 = 0;
                        uint64_t result = (WTF *)WTF::fastFree(result, v333);
                      }
                      if (v335)
                      {
LABEL_828:
                        if (v473)
                        {
                          uint64_t result = v531;
                          if (v531) {
                            uint64_t result = (WTF *)WTF::fastFree(v531, v333);
                          }
                        }
                        goto LABEL_935;
                      }
                      continue;
                    }
                    unsigned int v360 = *(_DWORD *)(a2 + 36);
                    unsigned int v361 = *(_DWORD *)(a2 + 40) + 1;
                    while (2)
                    {
                      *(_DWORD *)(a2 + 40) = v361;
                      if (v360 <= v361)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825B9AE8);
                      }
                      uint64_t v363 = *(void *)(a2 + 24);
                      uint64_t v364 = v363 + 32 * v361;
                      unsigned int v365 = *(_DWORD *)v364;
                      *(_DWORD *)(a2 + 56) = *(_DWORD *)v364;
                      _OWORD *v32 = *(_OWORD *)(v364 + 4);
                      unsigned int v366 = *(_DWORD *)v364;
                      if (v366 <= 8)
                      {
                        if (((1 << v366) & 0x38) != 0)
                        {
                          int v367 = *(_DWORD **)(v363 + 32 * v361 + 24);
                          goto LABEL_731;
                        }
                        if (((1 << v366) & 0xC4) != 0)
                        {
                          *(void *)(a2 + 80) = *(void *)(v363 + 32 * v361 + 24);
                        }
                        else if (v366 == 8)
                        {
                          *(void *)(a2 + 80) = 0;
                          int v367 = *(_DWORD **)(v363 + 32 * v361 + 24);
                          if (v367) {
                            *v367 += 2;
                          }
LABEL_731:
                          *(void *)(a2 + 80) = v367;
                        }
                      }
                      int v362 = *(_DWORD *)(a2 + 68);
                      *(void *)(a2 + 88) = *(void *)(a2 + 60);
                      *(_DWORD *)(a2 + 96) = v362;
                      ++v361;
                      if (v365 != 82) {
                        goto LABEL_732;
                      }
                      continue;
                    }
                  }
                  goto LABEL_671;
                }
                goto LABEL_700;
              }
              unsigned int v325 = *(_DWORD *)(a2 + 36);
              unsigned int v326 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v326;
                if (v325 <= v326)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825B9A90);
                }
                uint64_t v328 = *(void *)(a2 + 24);
                uint64_t v329 = v328 + 32 * v326;
                unsigned int v330 = *(_DWORD *)v329;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v329;
                _OWORD *v32 = *(_OWORD *)(v329 + 4);
                unsigned int v331 = *(_DWORD *)v329;
                if (v331 <= 8)
                {
                  if (((1 << v331) & 0x38) != 0)
                  {
                    uint64_t v332 = *(_DWORD **)(v328 + 32 * v326 + 24);
                    goto LABEL_668;
                  }
                  if (((1 << v331) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v328 + 32 * v326 + 24);
                  }
                  else if (v331 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    uint64_t v332 = *(_DWORD **)(v328 + 32 * v326 + 24);
                    if (v332) {
                      *v332 += 2;
                    }
LABEL_668:
                    *(void *)(a2 + 80) = v332;
                  }
                }
                int v327 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v327;
                ++v326;
                if (v330 != 82)
                {
                  unsigned int v358 = 0;
                  goto LABEL_716;
                }
                continue;
              }
            }
            break;
          }
          unsigned int v405 = *(_DWORD *)(a2 + 36);
          unsigned int v406 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v406;
            if (v405 <= v406)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B28);
            }
            uint64_t v408 = *(void *)(a2 + 24);
            uint64_t v409 = v408 + 32 * v406;
            unsigned int v410 = *(_DWORD *)v409;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v409;
            _OWORD *v32 = *(_OWORD *)(v409 + 4);
            unsigned int v411 = *(_DWORD *)v409;
            if (v411 <= 8)
            {
              if (((1 << v411) & 0x38) != 0)
              {
                int v412 = *(_DWORD **)(v408 + 32 * v406 + 24);
                goto LABEL_825;
              }
              if (((1 << v411) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v408 + 32 * v406 + 24);
              }
              else if (v411 == 8)
              {
                *(void *)(a2 + 80) = 0;
                int v412 = *(_DWORD **)(v408 + 32 * v406 + 24);
                if (v412) {
                  *v412 += 2;
                }
LABEL_825:
                *(void *)(a2 + 80) = v412;
              }
            }
            int v407 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v407;
            ++v406;
            if (v410 != 82)
            {
              if (v473)
              {
                int8x16x2_t v413 = *(void **)(a2 + 8);
                v526 = (const char *)v4;
                LODWORD(v527) = v5;
                DWORD1(v527) = v407 - v5;
                uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::SwitchStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WGSL::AST::SwitchClause,void>(v413, &v526, (uint64_t *)&v521, (uint64_t *)v516, (uint64_t *)&v534, (uint64_t *)&v531);
                *(void *)a1 = result;
                *(_DWORD *)(a1 + 24) = 0;
                int v473 = v533;
                goto LABEL_828;
              }
              uint64_t result = (WTF *)WTF::StringImpl::createWithoutCopyingNonEmpty();
              unint64_t v450 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
              *(void *)a1 = v526;
              *(void *)(a1 + 8) = v4;
              *(void *)(a1 + 16) = v450;
              *(_DWORD *)(a1 + 24) = 1;
LABEL_935:
              long long v451 = (WTF *)v534;
              if (HIDWORD(v535))
              {
                uint64_t v452 = 24 * HIDWORD(v535);
                v453 = v534;
                do
                {
                  uint64_t result = *(WTF **)v453;
                  if (*(void *)v453)
                  {
                    *(void *)v453 = 0;
                    *((_DWORD *)v453 + 2) = 0;
                    uint64_t result = (WTF *)WTF::fastFree(result, v333);
                  }
                  v453 += 24;
                  v452 -= 24;
                }
                while (v452);
              }
              if (v451) {
                uint64_t result = (WTF *)WTF::fastFree(v451, v333);
              }
              int v175 = (int)v517;
              if (v517 != -1) {
LABEL_943:
              }
                uint64_t result = (WTF *)((uint64_t (*)(WTF **, unsigned char *))off_1ECABE5D0[v175])(&v531, v516);
              int v142 = v523;
              if (v523 == -1) {
                goto LABEL_948;
              }
LABEL_945:
              uint16x8_t v154 = off_1ECABE170[v142];
              goto LABEL_946;
            }
            continue;
          }
        }
      }
      unsigned int v40 = *(_DWORD **)(v36 + 32 * v34 + 24);
LABEL_61:
      *(void *)(a2 + 80) = v40;
      goto LABEL_52;
    case 0x23:
      unsigned int v102 = *(_DWORD *)(a2 + 36);
      unsigned int v103 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v103;
        if (v102 <= v103)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9A70);
        }
        uint64_t v105 = *(void *)(a2 + 24);
        uint64_t v106 = v105 + 32 * v103;
        unsigned int v107 = *(_DWORD *)v106;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v106;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v106 + 4);
        unsigned int v108 = *(_DWORD *)v106;
        if (v108 > 8) {
          goto LABEL_156;
        }
        if (((1 << v108) & 0x38) != 0) {
          break;
        }
        if (((1 << v108) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v105 + 32 * v103 + 24);
        }
        else if (v108 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unint64_t v109 = *(_DWORD **)(v105 + 32 * v103 + 24);
          if (v109) {
            *v109 += 2;
          }
          goto LABEL_165;
        }
LABEL_156:
        int v104 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v104;
        ++v103;
        if (v107 != 82)
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v521, a2);
          uint64_t v60 = v523;
          if (v523)
          {
            if (v523 != 1) {
              goto LABEL_990;
            }
            unint64_t v150 = v521;
            if (v521) {
              *(_DWORD *)v521 += 2;
            }
            *(_OWORD *)(a1 + 8) = v522;
            *(void *)a1 = v150;
            *(_DWORD *)(a1 + 24) = 1;
          }
          else
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(v516, a2);
            uint64_t v184 = v517;
            if (v517)
            {
              if (v517 != 1) {
                goto LABEL_990;
              }
              uint64_t v185 = *(void *)v516;
              if (*(void *)v516) {
                **(_DWORD **)v516 += 2;
              }
              *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
              *(void *)a1 = v185;
              *(_DWORD *)(a1 + 24) = 1;
            }
            else
            {
              int v298 = *(void **)(a2 + 8);
              unsigned int v299 = *(_DWORD *)(a2 + 96) - v5;
              v531 = (WTF *)v4;
              *(void *)&long long v532 = __PAIR64__(v299, v5);
              *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::WhileStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::CompoundStatement>,void>(v298, &v531, &v521, v516);
              *(_DWORD *)(a1 + 24) = 0;
            }
            ((void (*)(WTF **, unsigned char *))off_1ECABE5C0[v184])(&v531, v516);
          }
          int8x16_t v62 = off_1ECABE170;
          goto LABEL_590;
        }
      }
      unint64_t v109 = *(_DWORD **)(v105 + 32 * v103 + 24);
LABEL_165:
      *(void *)(a2 + 80) = v109;
      goto LABEL_156;
    case 0x24:
    case 0x43:
    case 0x4C:
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseLHSExpression((uint64_t)&v521, a2);
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        uint64_t v12 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)&v516[8] = v522;
        *(void *)v516 = v12;
        int v13 = 1;
        LODWORD(v517) = 1;
      }
      else
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement((uint64_t)v516, a2, &v521);
        int v13 = v523;
        if (v523 == -1)
        {
LABEL_32:
          int v22 = (int)v517;
          if (v517)
          {
            if (v517 != 1) {
              goto LABEL_990;
            }
            uint64_t v23 = *(void *)v516;
            if (*(void *)v516) {
              **(_DWORD **)v516 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
LABEL_270:
            *(void *)a1 = v23;
            *(_DWORD *)(a1 + 24) = v22;
LABEL_271:
            uint16x8_t v154 = off_1ECABE580[v22];
            goto LABEL_842;
          }
          if (*(_DWORD *)(a2 + 56) != 73)
          {
            WGSL::toString();
            WGSL::toString();
            v521 = (WTF *)"Expected a ";
            *(void *)&long long v522 = 12;
            v531 = (WTF *)", but got a ";
            *(void *)&long long v532 = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v495, (uint64_t)&v531, (uint64_t *)&v494, &v526);
            if (!v526)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9B50);
            }
            uint8x16_t v153 = v494;
            v494 = 0;
            if (v153)
            {
              if (*v153 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v153 -= 2;
              }
            }
            uint64_t result = v495;
            v495 = 0;
            if (result)
            {
              if (*(_DWORD *)result == 2) {
                uint64_t result = (WTF *)WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)result -= 2;
              }
            }
            unint64_t v188 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v526;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v188;
            *(_DWORD *)(a1 + 24) = 1;
            int v22 = (int)v517;
            if (v517 == -1) {
              goto LABEL_948;
            }
            goto LABEL_271;
          }
          unsigned int v24 = *(_DWORD *)(a2 + 36);
          unsigned int v25 = *(_DWORD *)(a2 + 40) + 1;
          while (1)
          {
            *(_DWORD *)(a2 + 40) = v25;
            if (v24 <= v25)
            {
              __break(0xC471u);
              JUMPOUT(0x1825B9A80);
            }
            uint64_t v27 = *(void *)(a2 + 24);
            uint64_t v28 = v27 + 32 * v25;
            unsigned int v29 = *(_DWORD *)v28;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v28;
            *(_OWORD *)(a2 + 60) = *(_OWORD *)(v28 + 4);
            unsigned int v30 = *(_DWORD *)v28;
            if (v30 > 8) {
              goto LABEL_40;
            }
            if (((1 << v30) & 0x38) != 0) {
              break;
            }
            if (((1 << v30) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v27 + 32 * v25 + 24);
            }
            else if (v30 == 8)
            {
              *(void *)(a2 + 80) = 0;
              uint64_t v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
              if (v31) {
                *v31 += 2;
              }
              goto LABEL_49;
            }
LABEL_40:
            int v26 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v26;
            ++v25;
            if (v29 != 82)
            {
              uint64_t v23 = *(void *)v516;
              goto LABEL_270;
            }
          }
          uint64_t v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
LABEL_49:
          *(void *)(a2 + 80) = v31;
          goto LABEL_40;
        }
      }
      ((void (*)(WTF **, WTF **))off_1ECABE170[v13])(&v531, &v521);
      goto LABEL_32;
    case 0x2B:
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(&v521, a2);
      uint64_t v72 = v523;
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        unsigned int v73 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
      }
      else
      {
        unsigned int v73 = v521;
      }
      *(void *)a1 = v73;
      *(_DWORD *)(a1 + 24) = v72;
      int8x16_t v171 = off_1ECABE5C0;
      goto LABEL_808;
    case 0x4F:
      unsigned int v110 = *(_DWORD *)(a2 + 36);
      uint64_t v111 = (_OWORD *)(a2 + 60);
      unsigned int v112 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v113 = 32 * v112;
      break;
    default:
      goto LABEL_2;
  }
  while (1)
  {
    *(_DWORD *)(a2 + 40) = v112;
    if (v110 <= v112)
    {
      __break(0xC471u);
      JUMPOUT(0x1825B9AB8);
    }
    uint64_t v115 = *(void *)(a2 + 24);
    int v116 = *(_DWORD *)(v115 + v113);
    *(_DWORD *)(a2 + 56) = v116;
    *uint64_t v111 = *(_OWORD *)(v115 + v113 + 4);
    unsigned int v117 = *(_DWORD *)(v115 + v113);
    if (v117 > 8) {
      goto LABEL_168;
    }
    if (((1 << v117) & 0x38) != 0) {
      break;
    }
    if (((1 << v117) & 0xC4) != 0)
    {
      *(void *)(a2 + 80) = *(void *)(v115 + v113 + 24);
    }
    else if (v117 == 8)
    {
      *(void *)(a2 + 80) = 0;
      uint64_t v118 = *(_DWORD **)(v115 + v113 + 24);
      if (v118) {
        *v118 += 2;
      }
      goto LABEL_177;
    }
LABEL_168:
    int v114 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v114;
    ++v112;
    v113 += 32;
    if (v116 != 82)
    {
      if (v116 != 49)
      {
        WGSL::toString();
        WGSL::toString();
        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v487, (uint64_t *)&v486);
        uint64_t v161 = v486;
        v486 = 0;
        if (v161)
        {
          if (*v161 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v161 -= 2;
          }
        }
        uint64_t result = v487;
        v487 = 0;
        if (result) {
          goto LABEL_602;
        }
LABEL_605:
        uint64_t v300 = (*(_DWORD *)(a2 + 96) - v5);
        unsigned int v301 = (const char *)v521;
        goto LABEL_612;
      }
      while (2)
      {
        *(_DWORD *)(a2 + 40) = v112;
        if (v110 <= v112)
        {
          __break(0xC471u);
          JUMPOUT(0x1825B9AD8);
        }
        uint64_t v137 = v115 + 32 * v112;
        unsigned int v138 = *(_DWORD *)v137;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v137;
        *uint64_t v111 = *(_OWORD *)(v137 + 4);
        unsigned int v139 = *(_DWORD *)v137;
        if (v139 <= 8)
        {
          if (((1 << v139) & 0x38) != 0)
          {
            unsigned int v140 = *(_DWORD **)(v115 + 32 * v112 + 24);
            goto LABEL_231;
          }
          if (((1 << v139) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v115 + 32 * v112 + 24);
          }
          else if (v139 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v140 = *(_DWORD **)(v115 + 32 * v112 + 24);
            if (v140) {
              *v140 += 2;
            }
LABEL_231:
            *(void *)(a2 + 80) = v140;
          }
        }
        int v136 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v136;
        ++v112;
        if (v138 != 82)
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)v516, a2);
          uint64_t v167 = v517;
          if (v517)
          {
            if (v517 != 1) {
              goto LABEL_990;
            }
            uint64_t v168 = *(void *)v516;
            if (*(void *)v516) {
              **(_DWORD **)v516 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
            *(void *)a1 = v168;
            goto LABEL_837;
          }
          WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v521, a2, 73);
          int v194 = (int)v524;
          if (v524)
          {
            WGSL::toString();
            if (v194 != 1) {
              goto LABEL_990;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v531, (uint64_t *)&v485, (uint64_t *)&v484);
            unint64_t v195 = v484;
            v484 = 0;
            if (v195)
            {
              if (*v195 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v195 -= 2;
              }
            }
            int8x16x2_t v414 = v485;
            v485 = 0;
            if (v414)
            {
              if (*v414 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v414 -= 2;
              }
            }
            unint64_t v415 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v531;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v415;
LABEL_837:
            *(_DWORD *)(a1 + 24) = 1;
          }
          else
          {
            if (v521 == 8 && v523)
            {
              if (*(_DWORD *)v523 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v523 -= 2;
              }
            }
            uint64_t v458 = *(void **)(a2 + 8);
            unsigned int v459 = *(_DWORD *)(a2 + 96) - v5;
            v521 = (WTF *)v4;
            *(void *)&long long v522 = __PAIR64__(v459, v5);
            *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::PhonyAssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v458, &v521, v516);
            *(_DWORD *)(a1 + 24) = 0;
          }
          uint16x8_t v154 = off_1ECABE170[v167];
          goto LABEL_842;
        }
        continue;
      }
    }
  }
  uint64_t v118 = *(_DWORD **)(v115 + v113 + 24);
LABEL_177:
  *(void *)(a2 + 80) = v118;
  goto LABEL_168;
}

void *WGSL::AST::Builder::construct<WGSL::AST::VariableStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Variable>,void>(void *this, _OWORD *a2, void *a3)
{
  uint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABC908;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    unsigned int v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    int v11 = (void *)v5[4];
    uint64_t v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    unsigned int v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(_DWORD **)(a2 + 88);
  uint64_t v7 = *(unsigned int *)(a2 + 96);
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8 == 71)
  {
    __int16 v9 = 257;
    goto LABEL_5;
  }
  if (v8 == 60)
  {
    __int16 v9 = 256;
LABEL_5:
    LOWORD(v46) = v9;
    unsigned int v10 = *(_DWORD *)(a2 + 36);
    for (unsigned int i = *(_DWORD *)(a2 + 40) + 1; ; ++i)
    {
      *(_DWORD *)(a2 + 40) = i;
      if (v10 <= i) {
        goto LABEL_57;
      }
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = v13 + 32 * i;
      unsigned int v15 = *(_DWORD *)v14;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
      unsigned int v16 = *(_DWORD *)v14;
      if (v16 > 8) {
        goto LABEL_7;
      }
      if (((1 << v16) & 0x38) != 0) {
        break;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * i + 24);
      }
      else if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v17 = *(_DWORD **)(v13 + 32 * i + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_16;
      }
LABEL_7:
      int v12 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v12;
      if (v15 != 82)
      {
        uint64_t v18 = *(void **)(a2 + 8);
        unsigned int v47 = v6;
        LODWORD(v48) = v7;
        DWORD1(v48) = v12 - v7;
        uint64_t result = (uint64_t)WGSL::AST::Builder::construct<WGSL::AST::DecrementIncrementStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::DecrementIncrementStatement::Operation &,void>(v18, &v47, a3, (char *)&v46);
        *(void *)a1 = result;
        *(_DWORD *)(a1 + 24) = 0;
        return result;
      }
    }
    uint64_t v17 = *(_DWORD **)(v13 + 32 * i + 24);
LABEL_16:
    *(void *)(a2 + 80) = v17;
    goto LABEL_7;
  }
  uint64_t v20 = (v8 - 38);
  if (v20 > 0x2B) {
    goto LABEL_55;
  }
  if (((1 << (v8 - 38)) & 0x8A412910001) == 0)
  {
    if (v20 == 11)
    {
      unsigned int v35 = *(_DWORD *)(a2 + 36);
      unsigned int v36 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v36;
        if (v35 <= v36)
        {
          __break(0xC471u);
          goto LABEL_60;
        }
        uint64_t v38 = *(void *)(a2 + 24);
        uint64_t v39 = v38 + 32 * v36;
        unsigned int v40 = *(_DWORD *)v39;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v39;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v39 + 4);
        unsigned int v41 = *(_DWORD *)v39;
        if (v41 <= 8)
        {
          if (((1 << v41) & 0x38) != 0)
          {
            unsigned int v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
LABEL_52:
            *(void *)(a2 + 80) = v42;
            goto LABEL_43;
          }
          if (((1 << v41) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v38 + 32 * v36 + 24);
          }
          else if (v41 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
            if (v42) {
              *v42 += 2;
            }
            goto LABEL_52;
          }
        }
LABEL_43:
        int v37 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v37;
        ++v36;
        if (v40 != 82)
        {
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v47, a2);
          int v29 = v49;
          if (!v49)
          {
            uint64_t v43 = *(void **)(a2 + 8);
            unsigned int v44 = *(_DWORD *)(a2 + 96) - v7;
            *(void *)&long long v46 = v6;
            *((void *)&v46 + 1) = __PAIR64__(v44, v7);
            unsigned int v34 = WGSL::AST::Builder::construct<WGSL::AST::AssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,void>(v43, &v46, a3, &v47);
            goto LABEL_38;
          }
LABEL_33:
          if (v29 == 1)
          {
            unsigned int v30 = v47;
            if (v47) {
              *v47 += 2;
            }
            *(_OWORD *)(a1 + 8) = v48;
            *(void *)a1 = v30;
            uint64_t v31 = 1;
            *(_DWORD *)(a1 + 24) = 1;
            return ((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v46, &v47);
          }
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_57:
          __break(0xC471u);
LABEL_60:
          JUMPOUT(0x1825BA2C4);
        }
      }
    }
LABEL_55:
    uint64_t result = WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v45 = v7 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v7) << 32);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v45;
    *(_DWORD *)(a1 + 24) = 1;
    return result;
  }
  __int16 v50 = WGSL::toBinaryOperation(v8) | 0x100;
  unsigned int v21 = *(_DWORD *)(a2 + 36);
  unsigned int v22 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v22;
    if (v21 <= v22)
    {
      __break(0xC471u);
      JUMPOUT(0x1825BA2CCLL);
    }
    uint64_t v24 = *(void *)(a2 + 24);
    uint64_t v25 = v24 + 32 * v22;
    unsigned int v26 = *(_DWORD *)v25;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v25;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v25 + 4);
    unsigned int v27 = *(_DWORD *)v25;
    if (v27 <= 8)
    {
      if (((1 << v27) & 0x38) != 0)
      {
        uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
LABEL_31:
        *(void *)(a2 + 80) = v28;
        goto LABEL_22;
      }
      if (((1 << v27) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v24 + 32 * v22 + 24);
        goto LABEL_22;
      }
      if (v27 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
        if (v28) {
          *v28 += 2;
        }
        goto LABEL_31;
      }
    }
LABEL_22:
    int v23 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v23;
    ++v22;
  }
  while (v26 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v47, a2);
  int v29 = v49;
  if (v49) {
    goto LABEL_33;
  }
  int8x16_t v32 = *(void **)(a2 + 8);
  unsigned int v33 = *(_DWORD *)(a2 + 96) - v7;
  *(void *)&long long v46 = v6;
  *((void *)&v46 + 1) = __PAIR64__(v33, v7);
  unsigned int v34 = WGSL::AST::Builder::construct<WGSL::AST::CompoundAssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation &,void>(v32, &v46, a3, &v47, (char *)&v50);
LABEL_38:
  uint64_t v31 = 0;
  *(void *)a1 = v34;
  *(_DWORD *)(a1 + 24) = 0;
  return ((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v46, &v47);
}

uint64_t WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement(uint64_t a1, uint64_t a2)
{
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseLHSExpression((uint64_t)&v8, a2);
  if (v10)
  {
    if (v10 != 1)
    {
      uint64_t v7 = (WGSL::AST::Builder *)std::__throw_bad_variant_access[abi:sn180100]();
      return WGSL::AST::Builder::construct<WGSL::AST::BreakStatement,WGSL::SourceSpan,void>(v7);
    }
    unint64_t v4 = v8;
    if (v8) {
      *v8 += 2;
    }
    *(_OWORD *)(a1 + 8) = v9;
    *(void *)a1 = v4;
    int v5 = 1;
    *(_DWORD *)(a1 + 24) = 1;
  }
  else
  {
    uint64_t result = WGSL::Parser<WGSL::Lexer<unsigned char>>::parseVariableUpdatingStatement(a1, a2, &v8);
    int v5 = v10;
    if (v10 == -1) {
      return result;
    }
  }
  return ((uint64_t (*)(char *, _DWORD **))off_1ECABE170[v5])(&v11, &v8);
}

void *WGSL::AST::Builder::construct<WGSL::AST::BreakStatement,WGSL::SourceSpan,void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x17uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE4C8;
  *v3 += 24;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    int v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *int v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    long long v9 = (void *)v3[4];
    int v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    int v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ContinueStatement,WGSL::SourceSpan,void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE4F0;
  *(unsigned char *)(v4 + 24) = 0;
  *v3 += 32;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    int v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *int v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    long long v9 = (void *)v3[4];
    int v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    int v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::DiscardStatement,WGSL::SourceSpan,void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x17uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE518;
  *v3 += 24;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    int v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *int v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    long long v9 = (void *)v3[4];
    int v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    int v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::PhonyAssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3)
{
  unint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE540;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    uint64_t v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    char v11 = (void *)v5[4];
    int v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    uint64_t v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ConstAssertStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::ConstAssert>,void>(void *this, _OWORD *a2, void *a3)
{
  unint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE568;
  *(void *)(v6 + 24) = *a3;
  *v5 += 32;
  unint64_t v7 = *((unsigned int *)v5 + 11);
  if (v7 != *((_DWORD *)v5 + 10))
  {
    uint64_t v14 = (void *)(v5[4] + 8 * v7);
LABEL_17:
    void *v14 = v6;
    *((_DWORD *)v5 + 11) = v7 + 1;
    return (void *)v6;
  }
  unint64_t v8 = v7 + (v7 >> 2);
  if (v8 >= 0x10) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = 16;
  }
  if (v9 <= v7 + 1) {
    unint64_t v10 = v7 + 1;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!(v10 >> 29))
  {
    char v11 = (void *)v5[4];
    int v12 = (void *)WTF::fastMalloc((WTF *)(8 * v10));
    *((_DWORD *)v5 + 10) = v10;
    v5[4] = v12;
    memcpy(v12, v11, 8 * v7);
    if (v11)
    {
      if ((void *)v5[4] == v11)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v11, v13);
    }
    unint64_t v7 = *((unsigned int *)v5 + 11);
    uint64_t v14 = (void *)(v5[4] + 8 * v7);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

_DWORD *WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIfStatementWithAttributes(uint64_t a1, uint64_t a2, uint64_t *a3, _DWORD *a4, unsigned int a5)
{
  if (*(_DWORD *)(a2 + 56) != 25)
  {
    WGSL::toString();
    WGSL::toString();
    uint64_t v52 = "Expected a ";
    *(void *)&long long v53 = 12;
    int v49 = ", but got a ";
    *(void *)&long long v50 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v52, (uint64_t *)&v56, (uint64_t)&v49, (uint64_t *)&v55, &v45);
    if (!v45)
    {
      __break(0xC471u);
      goto LABEL_76;
    }
    unsigned int v19 = v55;
    int v55 = 0;
    if (v19)
    {
      if (*v19 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t result = v56;
        unsigned int v56 = 0;
        if (!result)
        {
LABEL_35:
          unint64_t v25 = a5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - a5) << 32);
          *(void *)a1 = v45;
          *(void *)(a1 + 8) = a4;
          *(void *)(a1 + 16) = v25;
          *(_DWORD *)(a1 + 24) = 1;
          return result;
        }
LABEL_32:
        if (*result == 2) {
          uint64_t result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_35;
      }
      *v19 -= 2;
    }
    uint64_t result = v56;
    unsigned int v56 = 0;
    if (!result) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  unint64_t v10 = (_OWORD *)(a2 + 60);
  unsigned int v11 = *(_DWORD *)(a2 + 36);
  unsigned int v12 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v12;
    if (v11 <= v12) {
      goto LABEL_73;
    }
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = v14 + 32 * v12;
    unsigned int v16 = *(_DWORD *)v15;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v15;
    *unint64_t v10 = *(_OWORD *)(v15 + 4);
    unsigned int v17 = *(_DWORD *)v15;
    if (v17 <= 8)
    {
      if (((1 << v17) & 0x38) != 0)
      {
        uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v18;
        goto LABEL_4;
      }
      if (((1 << v17) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v14 + 32 * v12 + 24);
        goto LABEL_4;
      }
      if (v17 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
        if (v18) {
          *v18 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v13 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v13;
    ++v12;
  }
  while (v16 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseExpression((uint64_t)&v52, a2);
  uint64_t v21 = v54;
  if (v54)
  {
    if (v54 == 1)
    {
      unsigned int v22 = v52;
      if (v52) {
        *(_DWORD *)v52 += 2;
      }
      *(_OWORD *)(a1 + 8) = v53;
      *(void *)a1 = v22;
      *(_DWORD *)(a1 + 24) = 1;
      return (_DWORD *)((uint64_t (*)(const char **, const char **))off_1ECABE170[v21])(&v49, &v52);
    }
    goto LABEL_72;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(&v49, a2);
  uint64_t v23 = v51;
  if (v51)
  {
    if (v51 == 1)
    {
      uint64_t v24 = v49;
      if (v49) {
        *(_DWORD *)v49 += 2;
      }
      *(_OWORD *)(a1 + 8) = v50;
      *(void *)a1 = v24;
      goto LABEL_30;
    }
    goto LABEL_72;
  }
  long long v48 = 0;
  if (*(_DWORD *)(a2 + 56) != 20) {
    goto LABEL_67;
  }
  unsigned int v26 = *(_DWORD *)(a2 + 36);
  unsigned int v27 = *(_DWORD *)(a2 + 40) + 1;
  uint64_t v28 = 32 * v27;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v27;
    if (v26 <= v27)
    {
      __break(0xC471u);
      JUMPOUT(0x1825BAE70);
    }
    uint64_t v30 = *(void *)(a2 + 24);
    int v31 = *(_DWORD *)(v30 + v28);
    *(_DWORD *)(a2 + 56) = v31;
    *unint64_t v10 = *(_OWORD *)(v30 + v28 + 4);
    unsigned int v32 = *(_DWORD *)(v30 + v28);
    if (v32 <= 8)
    {
      if (((1 << v32) & 0x38) != 0)
      {
        unsigned int v33 = *(_DWORD **)(v30 + v28 + 24);
        goto LABEL_48;
      }
      if (((1 << v32) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v30 + v28 + 24);
      }
      else if (v32 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v33 = *(_DWORD **)(v30 + v28 + 24);
        if (v33) {
          *v33 += 2;
        }
LABEL_48:
        *(void *)(a2 + 80) = v33;
      }
    }
    int v29 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v29;
    v28 += 32;
    ++v27;
    if (v31 == 82) {
      continue;
    }
    break;
  }
  if (v31 != 25)
  {
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseCompoundStatement(&v45, a2);
    if (!v47)
    {
      long long v48 = v45;
      goto LABEL_67;
    }
    if (v47 == 1)
    {
      unsigned int v36 = v45;
      if (v45)
      {
        int v37 = *v45;
        *v45 += 2;
        *(_OWORD *)(a1 + 8) = v46;
        *(void *)a1 = v36;
        *(_DWORD *)(a1 + 24) = 1;
        if (v37) {
          *unsigned int v36 = v37;
        }
        else {
          WTF::StringImpl::destroy();
        }
        goto LABEL_68;
      }
      *(_OWORD *)(a1 + 8) = v46;
      *(void *)a1 = 0;
LABEL_30:
      *(_DWORD *)(a1 + 24) = 1;
      goto LABEL_68;
    }
LABEL_72:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_73:
    __break(0xC471u);
LABEL_76:
    JUMPOUT(0x1825BAE68);
  }
  int v34 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v34 + 1;
  if ((v34 + 1) >= 0x81)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v35 = a5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - a5) << 32);
    *(void *)(a1 + 8) = a4;
    *(void *)(a1 + 16) = v35;
    *(_DWORD *)(a1 + 24) = 1;
    *(_DWORD *)(a2 + 44) = v34;
    goto LABEL_68;
  }
  v44[0] = 0;
  v44[1] = 0;
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIfStatementWithAttributes(&v45, a2, v44, a4, a5);
  if (v44[0]) {
    WTF::fastFree(v44[0], v38);
  }
  int v39 = v47;
  if (!v47)
  {
    uint64_t v41 = 0;
    long long v48 = v45;
    goto LABEL_66;
  }
  if (v47 != 1) {
    goto LABEL_72;
  }
  unsigned int v40 = v45;
  if (v45) {
    *v45 += 2;
  }
  *(_OWORD *)(a1 + 8) = v46;
  *(void *)a1 = v40;
  uint64_t v41 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_66:
  ((void (*)(WTF **, _DWORD **))off_1ECABE580[v41])(v44, &v45);
  *(_DWORD *)(a2 + 44) = v34;
  if (!v39)
  {
LABEL_67:
    unsigned int v42 = *(void **)(a2 + 8);
    unsigned int v43 = *(_DWORD *)(a2 + 96) - a5;
    unint64_t v45 = a4;
    *(void *)&long long v46 = __PAIR64__(v43, a5);
    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::IfStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::CompoundStatement>,WGSL::AST::Statement *&,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v42, &v45, &v52, &v49, (uint64_t *)&v48, a3);
    *(_DWORD *)(a1 + 24) = 0;
  }
LABEL_68:
  ((void (*)(_DWORD **, const char **))off_1ECABE5C0[v23])(&v45, &v49);
  return (_DWORD *)((uint64_t (*)(const char **, const char **))off_1ECABE170[v21])(&v49, &v52);
}

void *WGSL::AST::Builder::construct<WGSL::AST::IfStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::CompoundStatement>,WGSL::AST::Statement *&,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(void *this, _OWORD *a2, void *a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  unsigned int v11 = this;
  uint64_t v12 = *this;
  if (this[1] - *this <= 0x3FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v12 = *v11;
  }
  uint64_t v13 = *a5;
  *(_OWORD *)(v12 + 8) = *a2;
  *(void *)uint64_t v12 = &unk_1ECABD4A8;
  *(void *)(v12 + 24) = *a3;
  *(void *)(v12 + 32) = *a4;
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0;
  uint64_t v14 = *a6;
  *a6 = 0;
  *(void *)(v12 + 48) = v14;
  LODWORD(v14) = *((_DWORD *)a6 + 2);
  *((_DWORD *)a6 + 2) = 0;
  *(_DWORD *)(v12 + 56) = v14;
  LODWORD(v14) = *((_DWORD *)a6 + 3);
  *((_DWORD *)a6 + 3) = 0;
  *(_DWORD *)(v12 + 60) = v14;
  *v11 += 64;
  unint64_t v15 = *((unsigned int *)v11 + 11);
  if (v15 != *((_DWORD *)v11 + 10))
  {
    unsigned int v22 = (void *)(v11[4] + 8 * v15);
LABEL_17:
    *unsigned int v22 = v12;
    *((_DWORD *)v11 + 11) = v15 + 1;
    return (void *)v12;
  }
  unint64_t v16 = v15 + (v15 >> 2);
  if (v16 >= 0x10) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = 16;
  }
  if (v17 <= v15 + 1) {
    unint64_t v18 = v15 + 1;
  }
  else {
    unint64_t v18 = v17;
  }
  if (!(v18 >> 29))
  {
    unsigned int v19 = (void *)v11[4];
    uint64_t v20 = (void *)WTF::fastMalloc((WTF *)(8 * v18));
    *((_DWORD *)v11 + 10) = v18;
    v11[4] = v20;
    memcpy(v20, v19, 8 * v15);
    if (v19)
    {
      if ((void *)v11[4] == v19)
      {
        v11[4] = 0;
        *((_DWORD *)v11 + 10) = 0;
      }
      WTF::fastFree((WTF *)v19, v21);
    }
    unint64_t v15 = *((unsigned int *)v11 + 11);
    unsigned int v22 = (void *)(v11[4] + 8 * v15);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ReturnStatement,WGSL::SourceSpan,decltype(nullptr),void>(void *this, _OWORD *a2)
{
  char v3 = this;
  uint64_t v4 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v4 = *v3;
  }
  *(_OWORD *)(v4 + 8) = *a2;
  *(void *)uint64_t v4 = &unk_1ECABE400;
  *(void *)(v4 + 24) = 0;
  *v3 += 32;
  unint64_t v5 = *((unsigned int *)v3 + 11);
  if (v5 != *((_DWORD *)v3 + 10))
  {
    uint64_t v12 = (void *)(v3[4] + 8 * v5);
LABEL_17:
    *uint64_t v12 = v4;
    *((_DWORD *)v3 + 11) = v5 + 1;
    return (void *)v4;
  }
  unint64_t v6 = v5 + (v5 >> 2);
  if (v6 >= 0x10) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = 16;
  }
  if (v7 <= v5 + 1) {
    unint64_t v8 = v5 + 1;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!(v8 >> 29))
  {
    unint64_t v9 = (void *)v3[4];
    unint64_t v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *((_DWORD *)v3 + 10) = v8;
    v3[4] = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if ((void *)v3[4] == v9)
      {
        v3[4] = 0;
        *((_DWORD *)v3 + 10) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
    unint64_t v5 = *((unsigned int *)v3 + 11);
    uint64_t v12 = (void *)(v3[4] + 8 * v5);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ReturnStatement,WGSL::SourceSpan,WGSL::AST::Expression *,void>(void *this, _OWORD *a2, uint64_t *a3)
{
  unint64_t v5 = this;
  uint64_t v6 = *this;
  if (this[1] - *this <= 0x1FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v6 = *v5;
  }
  uint64_t v7 = *a3;
  *(_OWORD *)(v6 + 8) = *a2;
  *(void *)uint64_t v6 = &unk_1ECABE400;
  *(void *)(v6 + 24) = v7;
  *v5 += 32;
  unint64_t v8 = *((unsigned int *)v5 + 11);
  if (v8 != *((_DWORD *)v5 + 10))
  {
    unint64_t v15 = (void *)(v5[4] + 8 * v8);
LABEL_17:
    *unint64_t v15 = v6;
    *((_DWORD *)v5 + 11) = v8 + 1;
    return (void *)v6;
  }
  unint64_t v9 = v8 + (v8 >> 2);
  if (v9 >= 0x10) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = 16;
  }
  if (v10 <= v8 + 1) {
    unint64_t v11 = v8 + 1;
  }
  else {
    unint64_t v11 = v10;
  }
  if (!(v11 >> 29))
  {
    uint64_t v12 = (void *)v5[4];
    uint64_t v13 = (void *)WTF::fastMalloc((WTF *)(8 * v11));
    *((_DWORD *)v5 + 10) = v11;
    v5[4] = v13;
    memcpy(v13, v12, 8 * v8);
    if (v12)
    {
      if ((void *)v5[4] == v12)
      {
        v5[4] = 0;
        *((_DWORD *)v5 + 10) = 0;
      }
      WTF::fastFree((WTF *)v12, v14);
    }
    unint64_t v8 = *((unsigned int *)v5 + 11);
    unint64_t v15 = (void *)(v5[4] + 8 * v8);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::ReturnStatement::~ReturnStatement(WGSL::AST::ReturnStatement *this)
{
}

uint64_t WGSL::AST::ReturnStatement::kind(WGSL::AST::ReturnStatement *this)
{
  return 51;
}

void *WGSL::AST::Builder::construct<WGSL::AST::DecrementIncrementStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::DecrementIncrementStatement::Operation &,void>(void *this, _OWORD *a2, void *a3, char *a4)
{
  uint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x27uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  char v9 = *a4;
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)uint64_t v8 = &unk_1ECABE428;
  *(void *)(v8 + 24) = *a3;
  *(unsigned char *)(v8 + 32) = v9;
  *v7 += 40;
  unint64_t v10 = *((unsigned int *)v7 + 11);
  if (v10 != *((_DWORD *)v7 + 10))
  {
    unint64_t v17 = (void *)(v7[4] + 8 * v10);
LABEL_17:
    *unint64_t v17 = v8;
    *((_DWORD *)v7 + 11) = v10 + 1;
    return (void *)v8;
  }
  unint64_t v11 = v10 + (v10 >> 2);
  if (v11 >= 0x10) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = 16;
  }
  if (v12 <= v10 + 1) {
    unint64_t v13 = v10 + 1;
  }
  else {
    unint64_t v13 = v12;
  }
  if (!(v13 >> 29))
  {
    uint64_t v14 = (void *)v7[4];
    unint64_t v15 = (void *)WTF::fastMalloc((WTF *)(8 * v13));
    *((_DWORD *)v7 + 10) = v13;
    v7[4] = v15;
    memcpy(v15, v14, 8 * v10);
    if (v14)
    {
      if ((void *)v7[4] == v14)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v14, v16);
    }
    unint64_t v10 = *((unsigned int *)v7 + 11);
    unint64_t v17 = (void *)(v7[4] + 8 * v10);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::CompoundAssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation &,void>(void *this, _OWORD *a2, void *a3, void *a4, char *a5)
{
  char v9 = this;
  uint64_t v10 = *this;
  if (this[1] - *this <= 0x2FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v10 = *v9;
  }
  char v11 = *a5;
  *(_OWORD *)(v10 + 8) = *a2;
  *(void *)uint64_t v10 = &unk_1ECABD520;
  *(void *)(v10 + 24) = *a3;
  *(void *)(v10 + 32) = *a4;
  *(unsigned char *)(v10 + 40) = v11;
  *v9 += 48;
  unint64_t v12 = *((unsigned int *)v9 + 11);
  if (v12 != *((_DWORD *)v9 + 10))
  {
    unsigned int v19 = (void *)(v9[4] + 8 * v12);
LABEL_17:
    *unsigned int v19 = v10;
    *((_DWORD *)v9 + 11) = v12 + 1;
    return (void *)v10;
  }
  unint64_t v13 = v12 + (v12 >> 2);
  if (v13 >= 0x10) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = 16;
  }
  if (v14 <= v12 + 1) {
    unint64_t v15 = v12 + 1;
  }
  else {
    unint64_t v15 = v14;
  }
  if (!(v15 >> 29))
  {
    unint64_t v16 = (void *)v9[4];
    unint64_t v17 = (void *)WTF::fastMalloc((WTF *)(8 * v15));
    *((_DWORD *)v9 + 10) = v15;
    v9[4] = v17;
    memcpy(v17, v16, 8 * v12);
    if (v16)
    {
      if ((void *)v9[4] == v16)
      {
        v9[4] = 0;
        *((_DWORD *)v9 + 10) = 0;
      }
      WTF::fastFree((WTF *)v16, v18);
    }
    unint64_t v12 = *((unsigned int *)v9 + 11);
    unsigned int v19 = (void *)(v9[4] + 8 * v12);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::AssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,void>(void *this, _OWORD *a2, void *a3, void *a4)
{
  uint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x27uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)uint64_t v8 = &unk_1ECABC930;
  *(void *)(v8 + 24) = *a3;
  *(void *)(v8 + 32) = *a4;
  *v7 += 40;
  unint64_t v9 = *((unsigned int *)v7 + 11);
  if (v9 != *((_DWORD *)v7 + 10))
  {
    unint64_t v16 = (void *)(v7[4] + 8 * v9);
LABEL_17:
    *unint64_t v16 = v8;
    *((_DWORD *)v7 + 11) = v9 + 1;
    return (void *)v8;
  }
  unint64_t v10 = v9 + (v9 >> 2);
  if (v10 >= 0x10) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = 16;
  }
  if (v11 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!(v12 >> 29))
  {
    unint64_t v13 = (void *)v7[4];
    unint64_t v14 = (void *)WTF::fastMalloc((WTF *)(8 * v12));
    *((_DWORD *)v7 + 10) = v12;
    v7[4] = v14;
    memcpy(v14, v13, 8 * v9);
    if (v13)
    {
      if ((void *)v7[4] == v13)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v13, v15);
    }
    unint64_t v9 = *((unsigned int *)v7 + 11);
    unint64_t v16 = (void *)(v7[4] + 8 * v9);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::DecrementIncrementStatement::~DecrementIncrementStatement(WGSL::AST::DecrementIncrementStatement *this)
{
}

uint64_t WGSL::AST::DecrementIncrementStatement::kind(WGSL::AST::DecrementIncrementStatement *this)
{
  return 45;
}

void WGSL::Parser<WGSL::Lexer<unsigned char>>::parseLHSExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v6 + 1;
  if ((v6 + 1) >= 0x81)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v7 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v7;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_80;
  }
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8 == 76)
  {
    char v9 = 2;
    goto LABEL_7;
  }
  if (v8 != 36)
  {
    if (v8 == 8)
    {
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v54, a2);
      if (v57)
      {
        if (v57 != 1) {
          goto LABEL_88;
        }
        int v31 = v54;
        if (v54) {
          *(_DWORD *)v54 += 2;
        }
        long long v52 = v55;
        unsigned int v51 = v31;
        int v32 = 1;
        int v53 = 1;
      }
      else
      {
        unsigned int v36 = *(void **)(a2 + 8);
        unsigned int v37 = *(_DWORD *)(a2 + 96) - v5;
        *(void *)&long long v61 = v4;
        *((void *)&v61 + 1) = __PAIR64__(v37, v5);
        unsigned int v51 = (char *)WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v36, &v61, (uint64_t)&v54);
        int v53 = 0;
        int v32 = v57;
        if (v57 == -1) {
          goto LABEL_73;
        }
      }
      ((void (*)(long long *, char **))off_1ECABDF80[v32])(&v61, &v54);
      goto LABEL_73;
    }
    if (v8 != 67)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      unint64_t v33 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
      *(void *)&long long v52 = v4;
      *((void *)&v52 + 1) = v33;
      int v53 = 1;
      goto LABEL_73;
    }
    unsigned int v20 = *(_DWORD *)(a2 + 36);
    uint64_t v21 = (_OWORD *)(a2 + 60);
    unsigned int v22 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v22;
      if (v20 <= v22)
      {
        __break(0xC471u);
        JUMPOUT(0x1825BBC68);
      }
      uint64_t v24 = *(void *)(a2 + 24);
      uint64_t v25 = v24 + 32 * v22;
      unsigned int v26 = *(_DWORD *)v25;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v25;
      *uint64_t v21 = *(_OWORD *)(v25 + 4);
      unsigned int v27 = *(_DWORD *)v25;
      if (v27 > 8) {
        goto LABEL_28;
      }
      if (((1 << v27) & 0x38) != 0) {
        break;
      }
      if (((1 << v27) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v24 + 32 * v22 + 24);
      }
      else if (v27 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
        if (v28) {
          *v28 += 2;
        }
        goto LABEL_37;
      }
LABEL_28:
      int v23 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v23;
      ++v22;
      if (v26 != 82)
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseLHSExpression(&v54, a2);
        int v34 = v56;
        if (v56)
        {
          if (v56 == 1)
          {
            unint64_t v35 = v54;
            if (v54) {
              *(_DWORD *)v54 += 2;
            }
            long long v52 = v55;
LABEL_71:
            unsigned int v51 = v35;
            int v53 = v34;
LABEL_72:
            ((void (*)(long long *, char **))off_1ECABE170[v34])(&v61, &v54);
LABEL_73:
            if (!v53)
            {
              WGSL::Parser<WGSL::Lexer<unsigned char>>::parsePostfixExpression(a1, a2, v51, (unint64_t)v4, v5);
              int v48 = v53;
              if (v53 == -1) {
                goto LABEL_80;
              }
LABEL_79:
              ((void (*)(char **, char **))off_1ECABE170[v48])(&v54, &v51);
              goto LABEL_80;
            }
            if (v53 == 1)
            {
              int v47 = v51;
              if (v51) {
                *(_DWORD *)v51 += 2;
              }
              *(_OWORD *)(a1 + 8) = v52;
              *(void *)a1 = v47;
              int v48 = 1;
              *(_DWORD *)(a1 + 24) = 1;
              goto LABEL_79;
            }
          }
LABEL_88:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_92:
          __break(0xC471u);
          JUMPOUT(0x1825BBC60);
        }
        if (*(_DWORD *)(a2 + 56) != 68)
        {
          WGSL::toString();
          WGSL::toString();
          unsigned int v51 = "Expected a ";
          *(void *)&long long v52 = 12;
          *(void *)&long long v61 = ", but got a ";
          *((void *)&v61 + 1) = 13;
          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v51, (uint64_t *)&v59, (uint64_t)&v61, (uint64_t *)&v58, &v60);
          if (v60)
          {
            long long v46 = v58;
            unint64_t v58 = 0;
            if (v46)
            {
              if (*v46 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v46 -= 2;
              }
            }
            int v49 = v59;
            int v59 = 0;
            if (v49)
            {
              if (*v49 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v49 -= 2;
              }
            }
            unint64_t v50 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            unsigned int v51 = v60;
            *(void *)&long long v52 = v4;
            *((void *)&v52 + 1) = v50;
            int v53 = 1;
            int v34 = v56;
            if (v56 != -1) {
              goto LABEL_72;
            }
            goto LABEL_73;
          }
          goto LABEL_92;
        }
        unsigned int v38 = *(_DWORD *)(a2 + 36);
        unsigned int v39 = *(_DWORD *)(a2 + 40) + 1;
        while (2)
        {
          *(_DWORD *)(a2 + 40) = v39;
          if (v38 <= v39)
          {
            __break(0xC471u);
            JUMPOUT(0x1825BBC70);
          }
          uint64_t v41 = *(void *)(a2 + 24);
          uint64_t v42 = v41 + 32 * v39;
          unsigned int v43 = *(_DWORD *)v42;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v42;
          *uint64_t v21 = *(_OWORD *)(v42 + 4);
          unsigned int v44 = *(_DWORD *)v42;
          if (v44 <= 8)
          {
            if (((1 << v44) & 0x38) != 0)
            {
              unint64_t v45 = *(_DWORD **)(v41 + 32 * v39 + 24);
              goto LABEL_65;
            }
            if (((1 << v44) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v41 + 32 * v39 + 24);
            }
            else if (v44 == 8)
            {
              *(void *)(a2 + 80) = 0;
              unint64_t v45 = *(_DWORD **)(v41 + 32 * v39 + 24);
              if (v45) {
                *v45 += 2;
              }
LABEL_65:
              *(void *)(a2 + 80) = v45;
            }
          }
          int v40 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v40;
          ++v39;
          if (v43 != 82)
          {
            unint64_t v35 = v54;
            goto LABEL_71;
          }
          continue;
        }
      }
    }
    uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
LABEL_37:
    *(void *)(a2 + 80) = v28;
    goto LABEL_28;
  }
  char v9 = 0;
LABEL_7:
  LOBYTE(v61) = v9;
  unsigned int v10 = *(_DWORD *)(a2 + 36);
  unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v11;
    if (v10 <= v11) {
      goto LABEL_92;
    }
    uint64_t v13 = *(void *)(a2 + 24);
    uint64_t v14 = v13 + 32 * v11;
    unsigned int v15 = *(_DWORD *)v14;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
    unsigned int v16 = *(_DWORD *)v14;
    if (v16 <= 8)
    {
      if (((1 << v16) & 0x38) != 0)
      {
        unint64_t v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_18:
        *(void *)(a2 + 80) = v17;
        goto LABEL_9;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
        goto LABEL_9;
      }
      if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unint64_t v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_18;
      }
    }
LABEL_9:
    int v12 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v12;
    ++v11;
  }
  while (v15 == 82);
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseLHSExpression(&v54, a2);
  if (!v56)
  {
    int v29 = *(void **)(a2 + 8);
    unsigned int v30 = *(_DWORD *)(a2 + 96) - v5;
    unsigned int v51 = v4;
    *(void *)&long long v52 = __PAIR64__(v30, v5);
    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::UnaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::UnaryOperation &,void>(v29, &v51, &v54, (char *)&v61);
    *(_DWORD *)(a1 + 24) = 0;
    int v19 = v56;
    if (v56 != -1) {
      goto LABEL_39;
    }
    goto LABEL_80;
  }
  if (v56 != 1) {
    goto LABEL_88;
  }
  unint64_t v18 = v54;
  if (v54) {
    *(_DWORD *)v54 += 2;
  }
  *(_OWORD *)(a1 + 8) = v55;
  *(void *)a1 = v18;
  int v19 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_39:
  ((void (*)(char **, char **))off_1ECABE170[v19])(&v51, &v54);
LABEL_80:
  *(_DWORD *)(a2 + 44) = v6;
}

void *WGSL::AST::Builder::construct<WGSL::AST::ForStatement,WGSL::SourceSpan,WGSL::AST::Statement *&,WGSL::AST::Expression *&,WGSL::AST::Statement *&,std::reference_wrapper<WGSL::AST::CompoundStatement>,void>(void *this, _OWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void *a6)
{
  unsigned int v11 = this;
  uint64_t v12 = *this;
  if (this[1] - *this <= 0x37uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v12 = *v11;
  }
  uint64_t v13 = *a3;
  uint64_t v14 = *a4;
  uint64_t v15 = *a5;
  *(_OWORD *)(v12 + 8) = *a2;
  *(void *)uint64_t v12 = &unk_1ECABD548;
  *(void *)(v12 + 24) = v13;
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v15;
  *(void *)(v12 + 48) = *a6;
  *v11 += 56;
  unint64_t v16 = *((unsigned int *)v11 + 11);
  if (v16 != *((_DWORD *)v11 + 10))
  {
    int v23 = (void *)(v11[4] + 8 * v16);
LABEL_17:
    *int v23 = v12;
    *((_DWORD *)v11 + 11) = v16 + 1;
    return (void *)v12;
  }
  unint64_t v17 = v16 + (v16 >> 2);
  if (v17 >= 0x10) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = 16;
  }
  if (v18 <= v16 + 1) {
    unint64_t v19 = v16 + 1;
  }
  else {
    unint64_t v19 = v18;
  }
  if (!(v19 >> 29))
  {
    unsigned int v20 = (void *)v11[4];
    uint64_t v21 = (void *)WTF::fastMalloc((WTF *)(8 * v19));
    *((_DWORD *)v11 + 10) = v19;
    v11[4] = v21;
    memcpy(v21, v20, 8 * v16);
    if (v20)
    {
      if ((void *)v11[4] == v20)
      {
        v11[4] = 0;
        *((_DWORD *)v11 + 10) = 0;
      }
      WTF::fastFree((WTF *)v20, v22);
    }
    unint64_t v16 = *((unsigned int *)v11 + 11);
    int v23 = (void *)(v11[4] + 8 * v16);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void *WGSL::AST::Builder::construct<WGSL::AST::LoopStatement,WGSL::SourceSpan,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Statement,0ul>,std::optional<WGSL::AST::Continuing>,void>(void *this, _OWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  char v9 = this;
  uint64_t v10 = *this;
  if (this[1] - *this <= 0x6FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v10 = *v9;
  }
  *(_OWORD *)(v10 + 8) = *a2;
  *(void *)uint64_t v10 = &unk_1ECABE450;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  uint64_t v11 = *a3;
  *a3 = 0;
  *(void *)(v10 + 24) = v11;
  LODWORD(v11) = *((_DWORD *)a3 + 2);
  *((_DWORD *)a3 + 2) = 0;
  *(_DWORD *)(v10 + 32) = v11;
  LODWORD(v11) = *((_DWORD *)a3 + 3);
  *((_DWORD *)a3 + 3) = 0;
  *(_DWORD *)(v10 + 36) = v11;
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = 0;
  uint64_t v12 = *a4;
  *a4 = 0;
  *(void *)(v10 + 40) = v12;
  LODWORD(v12) = *((_DWORD *)a4 + 2);
  *((_DWORD *)a4 + 2) = 0;
  *(_DWORD *)(v10 + 48) = v12;
  int v13 = *((_DWORD *)a4 + 3);
  *((_DWORD *)a4 + 3) = 0;
  *(unsigned char *)(v10 + 56) = 0;
  *(_DWORD *)(v10 + 52) = v13;
  *(unsigned char *)(v10 + 96) = 0;
  if (*((unsigned char *)a5 + 40))
  {
    *(void *)(v10 + 56) = 0;
    *(void *)(v10 + 64) = 0;
    uint64_t v14 = *a5;
    *a5 = 0;
    *(void *)(v10 + 56) = v14;
    LODWORD(v14) = *((_DWORD *)a5 + 2);
    *((_DWORD *)a5 + 2) = 0;
    *(_DWORD *)(v10 + 64) = v14;
    LODWORD(v14) = *((_DWORD *)a5 + 3);
    *((_DWORD *)a5 + 3) = 0;
    *(_DWORD *)(v10 + 68) = v14;
    *(void *)(v10 + 72) = 0;
    *(void *)(v10 + 80) = 0;
    uint64_t v15 = a5[2];
    a5[2] = 0;
    *(void *)(v10 + 72) = v15;
    LODWORD(v15) = *((_DWORD *)a5 + 6);
    *((_DWORD *)a5 + 6) = 0;
    *(_DWORD *)(v10 + 80) = v15;
    LODWORD(v15) = *((_DWORD *)a5 + 7);
    *((_DWORD *)a5 + 7) = 0;
    *(_DWORD *)(v10 + 84) = v15;
    *(void *)(v10 + 88) = a5[4];
    *(unsigned char *)(v10 + 96) = 1;
  }
  *(unsigned char *)(v10 + 104) = 0;
  *v9 += 112;
  unint64_t v16 = *((unsigned int *)v9 + 11);
  if (v16 != *((_DWORD *)v9 + 10))
  {
    int v23 = (void *)(v9[4] + 8 * v16);
LABEL_19:
    *int v23 = v10;
    *((_DWORD *)v9 + 11) = v16 + 1;
    return (void *)v10;
  }
  unint64_t v17 = v16 + (v16 >> 2);
  if (v17 >= 0x10) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = 16;
  }
  if (v18 <= v16 + 1) {
    unint64_t v19 = v16 + 1;
  }
  else {
    unint64_t v19 = v18;
  }
  if (!(v19 >> 29))
  {
    unsigned int v20 = (void *)v9[4];
    uint64_t v21 = (void *)WTF::fastMalloc((WTF *)(8 * v19));
    *((_DWORD *)v9 + 10) = v19;
    v9[4] = v21;
    memcpy(v21, v20, 8 * v16);
    if (v20)
    {
      if ((void *)v9[4] == v20)
      {
        v9[4] = 0;
        *((_DWORD *)v9 + 10) = 0;
      }
      WTF::fastFree((WTF *)v20, v22);
    }
    unint64_t v16 = *((unsigned int *)v9 + 11);
    int v23 = (void *)(v9[4] + 8 * v16);
    goto LABEL_19;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::LoopStatement::~LoopStatement(WGSL::AST::LoopStatement *this, void *a2)
{
  if (*((unsigned char *)this + 96))
  {
    char v3 = (WTF *)*((void *)this + 9);
    if (v3)
    {
      *((void *)this + 9) = 0;
      *((_DWORD *)this + 20) = 0;
      WTF::fastFree(v3, a2);
    }
    uint64_t v4 = (WTF *)*((void *)this + 7);
    if (v4)
    {
      *((void *)this + 7) = 0;
      *((_DWORD *)this + 16) = 0;
      WTF::fastFree(v4, a2);
    }
  }
  uint64_t v5 = (WTF *)*((void *)this + 5);
  if (v5)
  {
    *((void *)this + 5) = 0;
    *((_DWORD *)this + 12) = 0;
    WTF::fastFree(v5, a2);
  }
  int v6 = (WTF *)*((void *)this + 3);
  if (v6)
  {
    *((void *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    WTF::fastFree(v6, a2);
  }
}

{
  WTF *v3;
  WTF *v4;
  WTF *v5;
  WTF *v6;
  uint64_t vars8;

  if (*((unsigned char *)this + 96))
  {
    char v3 = (WTF *)*((void *)this + 9);
    if (v3)
    {
      *((void *)this + 9) = 0;
      *((_DWORD *)this + 20) = 0;
      WTF::fastFree(v3, a2);
    }
    uint64_t v4 = (WTF *)*((void *)this + 7);
    if (v4)
    {
      *((void *)this + 7) = 0;
      *((_DWORD *)this + 16) = 0;
      WTF::fastFree(v4, a2);
    }
  }
  uint64_t v5 = (WTF *)*((void *)this + 5);
  if (v5)
  {
    *((void *)this + 5) = 0;
    *((_DWORD *)this + 12) = 0;
    WTF::fastFree(v5, a2);
  }
  int v6 = (WTF *)*((void *)this + 3);
  if (v6)
  {
    *((void *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    WTF::fastFree(v6, a2);
  }
  JUMPOUT(0x18530AFF0);
}

uint64_t WGSL::AST::LoopStatement::kind(WGSL::AST::LoopStatement *this)
{
  return 49;
}

void *WGSL::AST::Builder::construct<WGSL::AST::SwitchStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WGSL::AST::SwitchClause,void>(void *this, _OWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11 = this;
  uint64_t v12 = *this;
  if (this[1] - *this <= 0x5FuLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v12 = *v11;
  }
  *(_OWORD *)(v12 + 8) = *a2;
  *(void *)uint64_t v12 = &unk_1ECABE478;
  *(_WORD *)(v12 + 24) = 0;
  uint64_t v13 = *a3;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 32) = v13;
  uint64_t v14 = *a4;
  *a4 = 0;
  *(void *)(v12 + 40) = v14;
  LODWORD(v14) = *((_DWORD *)a4 + 2);
  *((_DWORD *)a4 + 2) = 0;
  *(_DWORD *)(v12 + 48) = v14;
  LODWORD(v14) = *((_DWORD *)a4 + 3);
  *((_DWORD *)a4 + 3) = 0;
  *(_DWORD *)(v12 + 52) = v14;
  *(void *)(v12 + 56) = 0;
  *(void *)(v12 + 64) = 0;
  uint64_t v15 = *a5;
  *a5 = 0;
  *(void *)(v12 + 56) = v15;
  LODWORD(v15) = *((_DWORD *)a5 + 2);
  *((_DWORD *)a5 + 2) = 0;
  *(_DWORD *)(v12 + 64) = v15;
  LODWORD(v15) = *((_DWORD *)a5 + 3);
  *((_DWORD *)a5 + 3) = 0;
  *(_DWORD *)(v12 + 68) = v15;
  *(void *)(v12 + 72) = 0;
  *(void *)(v12 + 80) = 0;
  uint64_t v16 = *a6;
  *a6 = 0;
  *(void *)(v12 + 72) = v16;
  LODWORD(v16) = *((_DWORD *)a6 + 2);
  *((_DWORD *)a6 + 2) = 0;
  *(_DWORD *)(v12 + 80) = v16;
  LODWORD(v16) = *((_DWORD *)a6 + 3);
  *((_DWORD *)a6 + 3) = 0;
  *(_DWORD *)(v12 + 84) = v16;
  *(void *)(v12 + 88) = a6[2];
  *v11 += 96;
  unint64_t v17 = *((unsigned int *)v11 + 11);
  if (v17 != *((_DWORD *)v11 + 10))
  {
    uint64_t v24 = (void *)(v11[4] + 8 * v17);
LABEL_17:
    *uint64_t v24 = v12;
    *((_DWORD *)v11 + 11) = v17 + 1;
    return (void *)v12;
  }
  unint64_t v18 = v17 + (v17 >> 2);
  if (v18 >= 0x10) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = 16;
  }
  if (v19 <= v17 + 1) {
    unint64_t v20 = v17 + 1;
  }
  else {
    unint64_t v20 = v19;
  }
  if (!(v20 >> 29))
  {
    uint64_t v21 = (void *)v11[4];
    unsigned int v22 = (void *)WTF::fastMalloc((WTF *)(8 * v20));
    *((_DWORD *)v11 + 10) = v20;
    v11[4] = v22;
    memcpy(v22, v21, 8 * v17);
    if (v21)
    {
      if ((void *)v11[4] == v21)
      {
        v11[4] = 0;
        *((_DWORD *)v11 + 10) = 0;
      }
      WTF::fastFree((WTF *)v21, v23);
    }
    unint64_t v17 = *((unsigned int *)v11 + 11);
    uint64_t v24 = (void *)(v11[4] + 8 * v17);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

unint64_t WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void *)a1;
  if (*(void *)a1 > a3 || v5 + 24 * (unint64_t)a1[3] <= a3)
  {
    unint64_t v10 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v10 >= 0x10) {
      unint64_t v11 = v10 + 1;
    }
    else {
      unint64_t v11 = 16;
    }
    if (v11 > a2) {
      a2 = v11;
    }
    WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return a3;
  }
  else
  {
    uint64_t v6 = a3 - v5;
    unint64_t v7 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v7 >= 0x10) {
      unint64_t v8 = v7 + 1;
    }
    else {
      unint64_t v8 = 16;
    }
    if (v8 > a2) {
      a2 = v8;
    }
    WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(void *)a1 + v6;
  }
}

unsigned int *WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  if (result[2] < a2)
  {
    if (a2 >= 0xAAAAAAB)
    {
      __break(0xC471u);
    }
    else
    {
      uint64_t v2 = result;
      char v3 = *(WTF **)result;
      uint64_t v4 = result[3];
      int v5 = 24 * a2;
      uint64_t result = (unsigned int *)WTF::fastMalloc((WTF *)(24 * a2));
      v2[2] = (v5 & 0xFFFFFFF8) / 0x18;
      *(void *)uint64_t v2 = result;
      if (v4)
      {
        unint64_t v7 = result;
        uint64_t v8 = 24 * v4;
        char v9 = (char *)v3 + 8;
        do
        {
          *(void *)unint64_t v7 = 0;
          *((void *)v7 + 1) = 0;
          uint64_t v10 = *((void *)v9 - 1);
          *((void *)v9 - 1) = 0;
          *(void *)unint64_t v7 = v10;
          LODWORD(v10) = *(_DWORD *)v9;
          *(_DWORD *)char v9 = 0;
          v7[2] = v10;
          LODWORD(v10) = *((_DWORD *)v9 + 1);
          *((_DWORD *)v9 + 1) = 0;
          v7[3] = v10;
          *((void *)v7 + 2) = *((void *)v9 + 1);
          uint64_t result = (unsigned int *)*((void *)v9 - 1);
          if (result)
          {
            *((void *)v9 - 1) = 0;
            *(_DWORD *)char v9 = 0;
            uint64_t result = (unsigned int *)WTF::fastFree((WTF *)result, v6);
          }
          v9 += 24;
          v7 += 6;
          v8 -= 24;
        }
        while (v8);
      }
      if (v3)
      {
        if (*(WTF **)v2 == v3)
        {
          *(void *)uint64_t v2 = 0;
          v2[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v3, v6);
      }
    }
  }
  return result;
}

void WGSL::AST::SwitchStatement::~SwitchStatement(WGSL::AST::SwitchStatement *this, void *a2)
{
  char v3 = (WTF *)*((void *)this + 9);
  if (v3)
  {
    *((void *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v3, a2);
  }
  uint64_t v4 = *((unsigned int *)this + 17);
  int v5 = (WTF *)*((void *)this + 7);
  if (v4)
  {
    uint64_t v6 = 24 * v4;
    do
    {
      unint64_t v7 = *(WTF **)v5;
      if (*(void *)v5)
      {
        *(void *)int v5 = 0;
        *((_DWORD *)v5 + 2) = 0;
        WTF::fastFree(v7, a2);
      }
      int v5 = (WTF *)((char *)v5 + 24);
      v6 -= 24;
    }
    while (v6);
    int v5 = (WTF *)*((void *)this + 7);
  }
  if (v5)
  {
    *((void *)this + 7) = 0;
    *((_DWORD *)this + 16) = 0;
    WTF::fastFree(v5, a2);
  }
  uint64_t v8 = (WTF *)*((void *)this + 5);
  if (v8)
  {
    *((void *)this + 5) = 0;
    *((_DWORD *)this + 12) = 0;
    WTF::fastFree(v8, a2);
  }
}

{
  WTF *v3;
  uint64_t v4;
  WTF *v5;
  uint64_t v6;
  WTF *v7;
  WTF *v8;
  uint64_t vars8;

  char v3 = (WTF *)*((void *)this + 9);
  if (v3)
  {
    *((void *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v3, a2);
  }
  uint64_t v4 = *((unsigned int *)this + 17);
  int v5 = (WTF *)*((void *)this + 7);
  if (v4)
  {
    uint64_t v6 = 24 * v4;
    do
    {
      unint64_t v7 = *(WTF **)v5;
      if (*(void *)v5)
      {
        *(void *)int v5 = 0;
        *((_DWORD *)v5 + 2) = 0;
        WTF::fastFree(v7, a2);
      }
      int v5 = (WTF *)((char *)v5 + 24);
      v6 -= 24;
    }
    while (v6);
    int v5 = (WTF *)*((void *)this + 7);
  }
  if (v5)
  {
    *((void *)this + 7) = 0;
    *((_DWORD *)this + 16) = 0;
    WTF::fastFree(v5, a2);
  }
  uint64_t v8 = (WTF *)*((void *)this + 5);
  if (v8)
  {
    *((void *)this + 5) = 0;
    *((_DWORD *)this + 12) = 0;
    WTF::fastFree(v8, a2);
  }
  JUMPOUT(0x18530AFF0);
}

uint64_t WGSL::AST::SwitchStatement::kind(WGSL::AST::SwitchStatement *this)
{
  return 53;
}

void *WGSL::AST::Builder::construct<WGSL::AST::WhileStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::CompoundStatement>,void>(void *this, _OWORD *a2, void *a3, void *a4)
{
  unint64_t v7 = this;
  uint64_t v8 = *this;
  if (this[1] - *this <= 0x27uLL)
  {
    this = (void *)WGSL::AST::Builder::allocateArena((WGSL::AST::Builder *)this);
    uint64_t v8 = *v7;
  }
  *(_OWORD *)(v8 + 8) = *a2;
  *(void *)uint64_t v8 = &unk_1ECABE4A0;
  *(void *)(v8 + 24) = *a3;
  *(void *)(v8 + 32) = *a4;
  *v7 += 40;
  unint64_t v9 = *((unsigned int *)v7 + 11);
  if (v9 != *((_DWORD *)v7 + 10))
  {
    uint64_t v16 = (void *)(v7[4] + 8 * v9);
LABEL_17:
    *uint64_t v16 = v8;
    *((_DWORD *)v7 + 11) = v9 + 1;
    return (void *)v8;
  }
  unint64_t v10 = v9 + (v9 >> 2);
  if (v10 >= 0x10) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = 16;
  }
  if (v11 <= v9 + 1) {
    unint64_t v12 = v9 + 1;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!(v12 >> 29))
  {
    uint64_t v13 = (void *)v7[4];
    uint64_t v14 = (void *)WTF::fastMalloc((WTF *)(8 * v12));
    *((_DWORD *)v7 + 10) = v12;
    v7[4] = v14;
    memcpy(v14, v13, 8 * v9);
    if (v13)
    {
      if ((void *)v7[4] == v13)
      {
        v7[4] = 0;
        *((_DWORD *)v7 + 10) = 0;
      }
      WTF::fastFree((WTF *)v13, v15);
    }
    unint64_t v9 = *((unsigned int *)v7 + 11);
    uint64_t v16 = (void *)(v7[4] + 8 * v9);
    goto LABEL_17;
  }
  __break(0xC471u);
  return this;
}

void WGSL::AST::WhileStatement::~WhileStatement(WGSL::AST::WhileStatement *this)
{
}

uint64_t WGSL::AST::WhileStatement::kind(WGSL::AST::WhileStatement *this)
{
  return 55;
}

void WGSL::AST::BreakStatement::~BreakStatement(WGSL::AST::BreakStatement *this)
{
}

uint64_t WGSL::AST::BreakStatement::kind(WGSL::AST::BreakStatement *this)
{
  return 39;
}

void WGSL::AST::ContinueStatement::~ContinueStatement(WGSL::AST::ContinueStatement *this)
{
}

uint64_t WGSL::AST::ContinueStatement::kind(WGSL::AST::ContinueStatement *this)
{
  return 44;
}

void WGSL::AST::DiscardStatement::~DiscardStatement(WGSL::AST::DiscardStatement *this)
{
}

uint64_t WGSL::AST::DiscardStatement::kind(WGSL::AST::DiscardStatement *this)
{
  return 46;
}

void WGSL::AST::PhonyAssignmentStatement::~PhonyAssignmentStatement(WGSL::AST::PhonyAssignmentStatement *this)
{
}

uint64_t WGSL::AST::PhonyAssignmentStatement::kind(WGSL::AST::PhonyAssignmentStatement *this)
{
  return 50;
}

void WGSL::AST::ConstAssertStatement::~ConstAssertStatement(WGSL::AST::ConstAssertStatement *this)
{
}

uint64_t WGSL::AST::ConstAssertStatement::kind(WGSL::AST::ConstAssertStatement *this)
{
  return 43;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST9StatementEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

void WGSL::AST::Function::~Function(WGSL::AST::Function *this, void *a2)
{
  char v3 = (WTF *)*((void *)this + 11);
  if (v3)
  {
    *((void *)this + 11) = 0;
    *((_DWORD *)this + 24) = 0;
    WTF::fastFree(v3, a2);
  }
  uint64_t v4 = (WTF *)*((void *)this + 9);
  if (v4)
  {
    *((void *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v4, a2);
  }
  int v5 = (WTF *)*((void *)this + 7);
  if (v5)
  {
    *((void *)this + 7) = 0;
    *((_DWORD *)this + 16) = 0;
    WTF::fastFree(v5, a2);
  }
  *((void *)this + 3) = off_1ECABC030;
  uint64_t v6 = (_DWORD *)*((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v6)
  {
    if (*v6 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v6 -= 2;
    }
  }
}

{
  WTF *v3;
  WTF *v4;
  WTF *v5;
  _DWORD *v6;
  uint64_t vars8;

  char v3 = (WTF *)*((void *)this + 11);
  if (v3)
  {
    *((void *)this + 11) = 0;
    *((_DWORD *)this + 24) = 0;
    WTF::fastFree(v3, a2);
  }
  uint64_t v4 = (WTF *)*((void *)this + 9);
  if (v4)
  {
    *((void *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v4, a2);
  }
  int v5 = (WTF *)*((void *)this + 7);
  if (v5)
  {
    *((void *)this + 7) = 0;
    *((_DWORD *)this + 16) = 0;
    WTF::fastFree(v5, a2);
  }
  *((void *)this + 3) = off_1ECABC030;
  uint64_t v6 = (_DWORD *)*((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v6)
  {
    if (*v6 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v6 -= 2;
    }
  }
  JUMPOUT(0x18530AFF0);
}

uint64_t WGSL::AST::Function::kind(WGSL::AST::Function *this)
{
  return 27;
}

uint64_t WGSL::AST::Function::name(WGSL::AST::Function *this)
{
  return (uint64_t)this + 24;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST17CompoundStatementEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF22ReferenceWrapperVectorIN4WGSL3AST9AttributeELm0EEENSA_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF22ReferenceWrapperVectorIN4WGSL3AST9AttributeELm0EEENSA_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_17reference_wrapperIN4WGSL3AST11DeclarationEEENS9_18CompilationMessageEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJSC_SD_EEEEEEDcSH_DpT0_(uint64_t a1, _DWORD **a2)
{
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 2) {
      return (_DWORD *)WTF::StringImpl::destroy();
    }
    else {
      *result -= 2;
    }
  }
  return result;
}

__n128 WGSL::Parser<WGSL::Lexer<char16_t>>::parseShader(uint64_t a1, uint64_t a2)
{
  uint64_t v430 = *(void *)(a2 + 88);
  uint64_t v429 = *(unsigned int *)(a2 + 96);
  uint64_t v3 = *(unsigned int *)(a2 + 36);
  *(void *)int v439 = 0;
  *(void *)&v439[8] = 0;
  *(void *)&v439[16] = v441;
  result.n128_u64[0] = 16;
  uint64_t v440 = 16;
  unint64_t v5 = v3 - 1;
  if (v3 == 1) {
    goto LABEL_70;
  }
  int v6 = 0;
  unint64_t v7 = 0;
  while (2)
  {
    unint64_t v8 = *(unsigned int *)(a2 + 36);
    if (v7 >= v8)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C0590);
    }
    uint64_t v9 = *(void *)(a2 + 24);
    unint64_t v10 = (_DWORD *)(v9 + 32 * v7);
    switch(*v10)
    {
      case 8:
      case 0x22:
        unint64_t v24 = v7 + 1;
        if (v7 + 1 >= v8)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C05B8);
        }
        uint64_t v25 = (_DWORD *)(v9 + 32 * v24);
        if (*v25 != 55) {
          goto LABEL_6;
        }
        uint64_t v26 = *(void *)v439;
        unint64_t v27 = *(void *)&v439[8];
        if (*(void *)v439)
        {
          if (*(void *)&v439[8] + 1 != *(void *)v439) {
            goto LABEL_60;
          }
          uint64_t v28 = v440;
          int v29 = *(char **)&v439[16];
          unint64_t v30 = v440 + ((unint64_t)v440 >> 2);
          if (v30 < 0x10) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v28 = v440;
          if (!*(void *)&v439[8])
          {
            if (v440) {
              goto LABEL_60;
            }
            unint64_t v27 = 0;
            int v29 = *(char **)&v439[16];
LABEL_45:
            *(void *)&v439[16] = v441;
            LODWORD(v440) = 16;
            int v31 = v441;
            if (*(void *)v439 > v27) {
              goto LABEL_46;
            }
            goto LABEL_54;
          }
          if (*(void *)&v439[8] != v440 - 1) {
            goto LABEL_60;
          }
          int v29 = *(char **)&v439[16];
          unint64_t v30 = v440 + ((unint64_t)v440 >> 2);
          if (v30 < 0x10) {
            goto LABEL_45;
          }
        }
        if (v30 >= 0xFFFFFFF)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C05F8);
        }
        int v32 = v30 + 1;
        int v31 = (_DWORD *)WTF::fastMalloc((WTF *)(16 * (v30 + 1)));
        LODWORD(v440) = v32;
        *(void *)&v439[16] = v31;
        uint64_t v26 = *(void *)v439;
        unint64_t v27 = *(void *)&v439[8];
        if (*(void *)v439 > *(void *)&v439[8])
        {
LABEL_46:
          memcpy(v31, v29, 16 * v27);
          memcpy((void *)(*(void *)&v439[16] + 16 * (*(void *)v439 - v28 + v440)), &v29[16 * *(void *)v439], 16 * v28 - 16 * *(void *)v439);
          *(void *)int v439 = *(void *)v439 - v28 + v440;
          if (v441 == (_DWORD *)v29) {
            goto LABEL_60;
          }
          goto LABEL_55;
        }
LABEL_54:
        memcpy(&v31[4 * v26], &v29[16 * v26], 16 * v27 - 16 * v26);
        if (v441 == (_DWORD *)v29) {
          goto LABEL_60;
        }
LABEL_55:
        if (v29)
        {
          if (*(char **)&v439[16] == v29)
          {
            *(void *)&v439[16] = 0;
            LODWORD(v440) = 0;
          }
          WTF::fastFree((WTF *)v29, (void *)a2);
        }
LABEL_60:
        uint64_t v33 = *(void *)&v439[8];
        uint64_t v34 = *(void *)&v439[16] + 16 * *(void *)&v439[8];
        *(void *)uint64_t v34 = v25;
        *(_DWORD *)(v34 + 8) = v6;
        if (v33 == v440 - 1) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = v33 + 1;
        }
        *(void *)&v439[8] = v35;
        unint64_t v7 = v24;
LABEL_6:
        if (++v7 < v5) {
          continue;
        }
        unsigned int v36 = *(WTF **)&v439[16];
        if (v441 != *(_DWORD **)&v439[16] && *(void *)&v439[16] != 0)
        {
          *(void *)&v439[16] = 0;
          LODWORD(v440) = 0;
          WTF::fastFree(v36, (void *)a2);
        }
LABEL_70:
        unsigned int v38 = (_OWORD *)(a2 + 60);
        unsigned int v39 = (uint64_t *)(a2 + 80);
        uint64_t v431 = (__n128 *)(a1 + 8);
LABEL_72:
        while (2)
        {
          unsigned int v40 = *(_DWORD *)(a2 + 56);
          if (v40 == 18)
          {
            unsigned int v82 = *(_DWORD *)(a2 + 36);
            unsigned int v83 = *(_DWORD *)(a2 + 40) + 1;
            while (1)
            {
              *(_DWORD *)(a2 + 40) = v83;
              if (v82 <= v83)
              {
                __break(0xC471u);
                JUMPOUT(0x1825C0540);
              }
              uint64_t v85 = *(void *)(a2 + 24);
              uint64_t v86 = v85 + 32 * v83;
              unsigned int v87 = *(_DWORD *)v86;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v86;
              *unsigned int v38 = *(_OWORD *)(v86 + 4);
              unsigned int v88 = *(_DWORD *)v86;
              if (v88 > 8) {
                goto LABEL_151;
              }
              if (((1 << v88) & 0x38) != 0) {
                break;
              }
              if (((1 << v88) & 0xC4) != 0)
              {
                *unsigned int v39 = *(void *)(v85 + 32 * v83 + 24);
              }
              else if (v88 == 8)
              {
                *unsigned int v39 = 0;
                uint64_t v89 = *(_DWORD **)(v85 + 32 * v83 + 24);
                if (v89) {
                  *v89 += 2;
                }
                goto LABEL_160;
              }
LABEL_151:
              int v84 = *(_DWORD *)(a2 + 68);
              *(void *)(a2 + 88) = *(void *)(a2 + 60);
              *(_DWORD *)(a2 + 96) = v84;
              ++v83;
              if (v87 != 82)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseDiagnostic((uint64_t)v439, a2);
                if (v442)
                {
                  if (v442 != 1) {
                    goto LABEL_917;
                  }
                  uint64_t v90 = *(void *)v439;
                  if (*(void *)v439) {
                    **(_DWORD **)v439 += 2;
                  }
                  char v91 = 0;
                  __n128 result = *(__n128 *)&v439[8];
                  __n128 *v431 = *(__n128 *)&v439[8];
                  *(void *)a1 = v90;
                  *(unsigned char *)(a1 + 24) = 1;
                  uint64_t v92 = v442;
                  if (v442 == -1) {
                    goto LABEL_167;
                  }
                  goto LABEL_166;
                }
                if (*(_DWORD *)(a2 + 56) != 73)
                {
                  *(_DWORD *)long long v465 = *(_DWORD *)(a2 + 56);
                  int v467 = 1;
                  WGSL::toString();
                  if (v467 != 1) {
                    goto LABEL_917;
                  }
                  WGSL::toString();
                  v472 = "Expected a ";
                  v473.n128_u64[0] = 12;
                  v468 = ", but got a ";
                  v469.n128_u64[0] = 13;
                  WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v472, (uint64_t *)&v438, (uint64_t)&v468, (uint64_t *)&v437, &v462);
                  if (!v462)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825C05E0);
                  }
                  int v145 = v437;
                  unsigned int v437 = 0;
                  if (v145)
                  {
                    if (*v145 != 2)
                    {
                      *v145 -= 2;
                      goto LABEL_283;
                    }
                    WTF::StringImpl::destroy();
                    unsigned int v146 = v438;
                    unsigned int v438 = 0;
                    if (v146)
                    {
LABEL_302:
                      if (*v146 == 2) {
                        WTF::StringImpl::destroy();
                      }
                      else {
                        *v146 -= 2;
                      }
                    }
                  }
                  else
                  {
LABEL_283:
                    unsigned int v146 = v438;
                    unsigned int v438 = 0;
                    if (v146) {
                      goto LABEL_302;
                    }
                  }
                  unint64_t v158 = v429 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v429) << 32);
                  *(void *)a1 = v462;
                  *(void *)(a1 + 8) = v430;
                  *(void *)(a1 + 16) = v158;
                  *(unsigned char *)(a1 + 24) = 1;
                  if (v467 == -1)
                  {
                    char v91 = 0;
                    uint64_t v92 = v442;
                    if (v442 != -1) {
                      goto LABEL_166;
                    }
                  }
                  else
                  {
                    ((void (*)(const char **, unsigned char *))off_1ECABDF90[v467])(&v472, v465);
                    char v91 = 0;
                    uint64_t v92 = v442;
                    if (v442 != -1) {
                      goto LABEL_166;
                    }
                  }
                  goto LABEL_167;
                }
                *(_OWORD *)&v465[4] = *v38;
                *(_DWORD *)long long v465 = 73;
                int v467 = 0;
                unsigned int v101 = *(_DWORD *)(a2 + 36);
                unsigned int v102 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v102;
                  if (v101 <= v102)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825C0570);
                  }
                  uint64_t v104 = *(void *)(a2 + 24);
                  uint64_t v105 = v104 + 32 * v102;
                  unsigned int v106 = *(_DWORD *)v105;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v105;
                  *unsigned int v38 = *(_OWORD *)(v105 + 4);
                  unsigned int v107 = *(_DWORD *)v105;
                  if (v107 <= 8)
                  {
                    if (((1 << v107) & 0x38) != 0)
                    {
                      unsigned int v108 = *(_DWORD **)(v104 + 32 * v102 + 24);
                      goto LABEL_195;
                    }
                    if (((1 << v107) & 0xC4) != 0)
                    {
                      *unsigned int v39 = *(void *)(v104 + 32 * v102 + 24);
                    }
                    else if (v107 == 8)
                    {
                      *unsigned int v39 = 0;
                      unsigned int v108 = *(_DWORD **)(v104 + 32 * v102 + 24);
                      if (v108) {
                        *v108 += 2;
                      }
LABEL_195:
                      *unsigned int v39 = (uint64_t)v108;
                    }
                  }
                  int v103 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v103;
                  ++v102;
                  if (v106 == 82) {
                    continue;
                  }
                  break;
                }
                long long v147 = *(void **)(a2 + 8);
                *(void *)long long v465 = v430;
                *(_DWORD *)&v465[8] = v429;
                *(_DWORD *)&v465[12] = v103 - v429;
                unint64_t v148 = WGSL::AST::Builder::construct<WGSL::AST::DiagnosticDirective,WGSL::SourceSpan,WGSL::AST::Diagnostic,void>(v147, v465, (uint64_t)v439);
                uint64_t v149 = *(void *)a2;
                unint64_t v150 = *(unsigned int *)(*(void *)a2 + 92);
                if (v150 == *(_DWORD *)(*(void *)a2 + 88))
                {
                  v428 = v148;
                  unint64_t v151 = v150 + (v150 >> 2);
                  if (v151 >= 0x10) {
                    unint64_t v152 = v151 + 1;
                  }
                  else {
                    unint64_t v152 = 16;
                  }
                  if (v152 <= v150 + 1) {
                    unint64_t v153 = v150 + 1;
                  }
                  else {
                    unint64_t v153 = v152;
                  }
                  if (v153 >> 29)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825C05E8);
                  }
                  uint16x8_t v154 = *(void **)(v149 + 80);
                  uint64_t v155 = (void *)WTF::fastMalloc((WTF *)(8 * v153));
                  *(_DWORD *)(v149 + 88) = v153;
                  *(void *)(v149 + 80) = v155;
                  memcpy(v155, v154, 8 * v150);
                  if (v154)
                  {
                    if (*(void **)(v149 + 80) == v154)
                    {
                      *(void *)(v149 + 80) = 0;
                      *(_DWORD *)(v149 + 88) = 0;
                    }
                    WTF::fastFree((WTF *)v154, v156);
                  }
                  uint64_t v157 = *(unsigned int *)(v149 + 92);
                  *(void *)(*(void *)(v149 + 80) + 8 * v157) = v428;
                  *(_DWORD *)(v149 + 92) = v157 + 1;
                  char v91 = 1;
                  uint64_t v92 = v442;
                  if (v442 == -1) {
                    goto LABEL_167;
                  }
LABEL_166:
                  ((void (*)(unsigned char *, unsigned char *))off_1ECABDFC8[v92])(v465, v439);
                }
                else
                {
                  *(void *)(*(void *)(v149 + 80) + 8 * v150) = v148;
                  *(_DWORD *)(v149 + 92) = v150 + 1;
                  char v91 = 1;
                  uint64_t v92 = v442;
                  if (v442 != -1) {
                    goto LABEL_166;
                  }
                }
LABEL_167:
                if ((v91 & 1) == 0) {
                  return result;
                }
                goto LABEL_72;
              }
            }
            uint64_t v89 = *(_DWORD **)(v85 + 32 * v83 + 24);
LABEL_160:
            *unsigned int v39 = (uint64_t)v89;
            goto LABEL_151;
          }
          if (v40 != 21)
          {
            if (v40 == 29)
            {
              uint64_t v41 = *(void *)(a2 + 88);
              uint64_t v42 = *(unsigned int *)(a2 + 96);
              unsigned int v43 = *(_DWORD *)(a2 + 36);
              unsigned int v44 = *(_DWORD *)(a2 + 40) + 1;
              while (1)
              {
                *(_DWORD *)(a2 + 40) = v44;
                if (v43 <= v44)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825C0538);
                }
                uint64_t v46 = *(void *)(a2 + 24);
                uint64_t v47 = v46 + 32 * v44;
                unsigned int v48 = *(_DWORD *)v47;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v47;
                *unsigned int v38 = *(_OWORD *)(v47 + 4);
                unsigned int v49 = *(_DWORD *)v47;
                if (v49 > 8) {
                  goto LABEL_77;
                }
                if (((1 << v49) & 0x38) != 0) {
                  break;
                }
                if (((1 << v49) & 0xC4) != 0)
                {
                  *unsigned int v39 = *(void *)(v46 + 32 * v44 + 24);
                }
                else if (v49 == 8)
                {
                  *unsigned int v39 = 0;
                  unint64_t v50 = *(_DWORD **)(v46 + 32 * v44 + 24);
                  if (v50) {
                    *v50 += 2;
                  }
                  goto LABEL_86;
                }
LABEL_77:
                int v45 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v45;
                ++v44;
                if (v48 != 82)
                {
                  while (1)
                  {
                    if (v48 != 8)
                    {
                      *(_DWORD *)int v439 = v48;
                      v441[0] = 1;
                      WGSL::toString();
                      if (v441[0] != 1) {
                        goto LABEL_917;
                      }
                      WGSL::toString();
                      v472 = "Expected a ";
                      v473.n128_u64[0] = 12;
                      v468 = ", but got a ";
                      v469.n128_u64[0] = 13;
                      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v472, (uint64_t *)&v453, (uint64_t)&v468, (uint64_t *)&v450, &v462);
                      if (!v462)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825C0578);
                      }
                      long long v61 = v450;
                      unint64_t v450 = 0;
                      if (v61)
                      {
                        if (*(_DWORD *)v61 != 2)
                        {
                          *(_DWORD *)v61 -= 2;
                          goto LABEL_109;
                        }
                        WTF::StringImpl::destroy();
                        int8x16_t v62 = v453;
                        v453 = 0;
                        if (v62)
                        {
LABEL_127:
                          if (*(_DWORD *)v62 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v62 -= 2;
                          }
                        }
                      }
                      else
                      {
LABEL_109:
                        int8x16_t v62 = v453;
                        v453 = 0;
                        if (v62) {
                          goto LABEL_127;
                        }
                      }
                      unint64_t v71 = v42 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v42) << 32);
                      *(void *)long long v465 = v462;
                      goto LABEL_131;
                    }
                    *(_DWORD *)int v439 = 8;
                    *(_OWORD *)&v439[4] = *v38;
                    long long v52 = (_DWORD *)*v39;
                    if (*v39) {
                      *v52 += 2;
                    }
                    uint64_t v440 = (uint64_t)v52;
                    v441[0] = 0;
                    unsigned int v53 = *(_DWORD *)(a2 + 36);
                    unsigned int v54 = *(_DWORD *)(a2 + 40) + 1;
                    do
                    {
                      *(_DWORD *)(a2 + 40) = v54;
                      if (v53 <= v54) {
                        goto LABEL_918;
                      }
                      uint64_t v56 = *(void *)(a2 + 24);
                      uint64_t v57 = v56 + 32 * v54;
                      unsigned int v58 = *(_DWORD *)v57;
                      *(_DWORD *)(a2 + 56) = *(_DWORD *)v57;
                      *unsigned int v38 = *(_OWORD *)(v57 + 4);
                      unsigned int v59 = *(_DWORD *)v57;
                      if (v59 <= 8)
                      {
                        if (((1 << v59) & 0x38) != 0)
                        {
                          uint64_t v60 = *(_DWORD **)(v56 + 32 * v54 + 24);
LABEL_103:
                          *unsigned int v39 = (uint64_t)v60;
                          goto LABEL_94;
                        }
                        if (((1 << v59) & 0xC4) != 0)
                        {
                          *unsigned int v39 = *(void *)(v56 + 32 * v54 + 24);
                          goto LABEL_94;
                        }
                        if (v59 == 8)
                        {
                          *unsigned int v39 = 0;
                          uint64_t v60 = *(_DWORD **)(v56 + 32 * v54 + 24);
                          if (v60) {
                            *v60 += 2;
                          }
                          goto LABEL_103;
                        }
                      }
LABEL_94:
                      int v55 = *(_DWORD *)(a2 + 68);
                      *(void *)(a2 + 88) = *(void *)(a2 + 60);
                      *(_DWORD *)(a2 + 96) = v55;
                      ++v54;
                    }
                    while (v58 == 82);
                    if (WGSL::parseLanguageFeature(&v440))
                    {
                      if (*(_DWORD *)(a2 + 56) != 48)
                      {
                        int v51 = 4;
                        goto LABEL_132;
                      }
                      unsigned int v63 = *(_DWORD *)(a2 + 36);
                      unsigned int v64 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v64;
                        if (v63 <= v64)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0530);
                        }
                        uint64_t v66 = *(void *)(a2 + 24);
                        uint64_t v67 = v66 + 32 * v64;
                        unsigned int v68 = *(_DWORD *)v67;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v67;
                        *unsigned int v38 = *(_OWORD *)(v67 + 4);
                        unsigned int v69 = *(_DWORD *)v67;
                        if (v69 > 8) {
                          goto LABEL_115;
                        }
                        if (((1 << v69) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v69) & 0xC4) != 0)
                        {
                          *unsigned int v39 = *(void *)(v66 + 32 * v64 + 24);
                        }
                        else if (v69 == 8)
                        {
                          *unsigned int v39 = 0;
                          unsigned int v70 = *(_DWORD **)(v66 + 32 * v64 + 24);
                          if (v70) {
                            *v70 += 2;
                          }
                          goto LABEL_124;
                        }
LABEL_115:
                        int v65 = *(_DWORD *)(a2 + 68);
                        result.n128_u64[0] = *(void *)(a2 + 60);
                        *(void *)(a2 + 88) = result.n128_u64[0];
                        *(_DWORD *)(a2 + 96) = v65;
                        ++v64;
                        if (v68 != 82)
                        {
                          int v51 = 0;
                          goto LABEL_132;
                        }
                      }
                      unsigned int v70 = *(_DWORD **)(v66 + 32 * v64 + 24);
LABEL_124:
                      *unsigned int v39 = (uint64_t)v70;
                      goto LABEL_115;
                    }
                    WTF::StringImpl::createWithoutCopyingNonEmpty();
                    unint64_t v71 = v42 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v42) << 32);
LABEL_131:
                    *(void *)&v465[8] = v41;
                    *(void *)&v465[16] = v71;
                    int v51 = 1;
                    LOBYTE(v466) = 1;
LABEL_132:
                    if (v441[0] != -1) {
                      ((void (*)(const char **, unsigned char *))off_1ECABDF90[v441[0]])(&v472, v439);
                    }
                    if (v51)
                    {
                      if (v51 != 4)
                      {
                        if ((_BYTE)v466)
                        {
                          int8x16x2_t v416 = *(char **)v465;
LABEL_915:
                          if (v416) {
                            goto LABEL_906;
                          }
LABEL_916:
                          __n128 result = *(__n128 *)&v465[8];
                          __n128 *v431 = *(__n128 *)&v465[8];
                          *(void *)a1 = 0;
                          *(unsigned char *)(a1 + 24) = 1;
                          return result;
                        }
                        goto LABEL_72;
                      }
                      if (*(_DWORD *)(a2 + 56) == 73)
                      {
LABEL_171:
                        unsigned int v93 = *(_DWORD *)(a2 + 36);
                        unsigned int v94 = *(_DWORD *)(a2 + 40) + 1;
                        while (1)
                        {
                          *(_DWORD *)(a2 + 40) = v94;
                          if (v93 <= v94)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825C0560);
                          }
                          uint64_t v96 = *(void *)(a2 + 24);
                          uint64_t v97 = v96 + 32 * v94;
                          unsigned int v98 = *(_DWORD *)v97;
                          *(_DWORD *)(a2 + 56) = *(_DWORD *)v97;
                          *unsigned int v38 = *(_OWORD *)(v97 + 4);
                          unsigned int v99 = *(_DWORD *)v97;
                          if (v99 > 8) {
                            goto LABEL_173;
                          }
                          if (((1 << v99) & 0x38) != 0) {
                            break;
                          }
                          if (((1 << v99) & 0xC4) != 0)
                          {
                            *unsigned int v39 = *(void *)(v96 + 32 * v94 + 24);
                          }
                          else if (v99 == 8)
                          {
                            *unsigned int v39 = 0;
                            unsigned int v100 = *(_DWORD **)(v96 + 32 * v94 + 24);
                            if (v100) {
                              *v100 += 2;
                            }
                            goto LABEL_182;
                          }
LABEL_173:
                          int v95 = *(_DWORD *)(a2 + 68);
                          result.n128_u64[0] = *(void *)(a2 + 60);
                          *(void *)(a2 + 88) = result.n128_u64[0];
                          *(_DWORD *)(a2 + 96) = v95;
                          ++v94;
                          if (v98 != 82) {
                            goto LABEL_72;
                          }
                        }
                        unsigned int v100 = *(_DWORD **)(v96 + 32 * v94 + 24);
LABEL_182:
                        *unsigned int v39 = (uint64_t)v100;
                        goto LABEL_173;
                      }
                      WGSL::toString();
                      WGSL::toString();
                      *(void *)int v439 = "Expected a ";
                      *(void *)&v439[8] = 12;
                      v472 = ", but got a ";
                      v473.n128_u64[0] = 13;
                      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v446, (uint64_t)&v472, (uint64_t *)&v443, &v468);
                      if (!v468)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825C0698);
                      }
                      int8x16x2_t v414 = v443;
                      unsigned int v443 = 0;
                      if (v414)
                      {
                        if (*(_DWORD *)v414 != 2)
                        {
                          *(_DWORD *)v414 -= 2;
                          goto LABEL_898;
                        }
                        WTF::StringImpl::destroy();
                        unint64_t v415 = v446;
                        unsigned int v446 = 0;
                        if (v415)
                        {
LABEL_911:
                          if (*v415 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v415 -= 2;
                          }
                        }
                      }
                      else
                      {
LABEL_898:
                        unint64_t v415 = v446;
                        unsigned int v446 = 0;
                        if (v415) {
                          goto LABEL_911;
                        }
                      }
                      unint64_t v419 = v42 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v42) << 32);
                      int8x16x2_t v416 = (char *)v468;
                      *(void *)&v465[8] = v41;
                      *(void *)&v465[16] = v419;
                      LOBYTE(v466) = 1;
                      goto LABEL_915;
                    }
                    unsigned int v48 = *(_DWORD *)(a2 + 56);
                    if (v48 == 73) {
                      goto LABEL_171;
                    }
                  }
                }
              }
              unint64_t v50 = *(_DWORD **)(v46 + 32 * v44 + 24);
LABEL_86:
              *unsigned int v39 = (uint64_t)v50;
              goto LABEL_77;
            }
            uint8x8_t v159 = (__n128 *)&v434;
            unint64_t v160 = off_1ECABE5E0;
LABEL_311:
            while (2)
            {
              if (v40 != 73)
              {
                if (v40 == 1)
                {
                  *(unsigned char *)a1 = 0;
                  *(unsigned char *)(a1 + 24) = 0;
                  return result;
                }
                uint64_t v161 = *(const char **)(a2 + 88);
                uint64_t v162 = *(unsigned int *)(a2 + 96);
                int v163 = *(_DWORD *)(a2 + 56);
                if (v163 != 10)
                {
                  if (v163 == 14)
                  {
                    WGSL::Parser<WGSL::Lexer<char16_t>>::parseConstAssert((uint64_t)v439, a2);
                    uint64_t v174 = v440;
                    if (v440)
                    {
                      if (v440 != 1) {
                        goto LABEL_917;
                      }
                      int v175 = *(const char **)v439;
                      if (*(void *)v439) {
                        **(_DWORD **)v439 += 2;
                      }
                      __n128 *v159 = *(__n128 *)&v439[8];
                    }
                    else
                    {
                      int v175 = *(const char **)v439;
                    }
                    uint64_t v433 = v175;
                    unsigned int v436 = v174;
                    ((void (*)(unsigned char *, unsigned char *))off_1ECABE1B0[v174])(v465, v439);
                    goto LABEL_862;
                  }
                  if (v163 == 13)
                  {
                    *(void *)long long v465 = 0;
                    *(void *)&v465[8] = 0;
                    WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableWithAttributes((uint64_t)v439, a2, (uint64_t *)v465);
                    if (*(void *)v465) {
                      WTF::fastFree(*(WTF **)v465, v164);
                    }
                    uint64_t v165 = v440;
                    if (v440)
                    {
                      if (v440 != 1) {
                        goto LABEL_917;
                      }
                      int8x16x2_t v166 = *(const char **)v439;
                      if (*(void *)v439) {
                        **(_DWORD **)v439 += 2;
                      }
                      __n128 *v159 = *(__n128 *)&v439[8];
LABEL_410:
                      uint64_t v433 = v166;
                      unsigned int v436 = v165;
LABEL_484:
                      ((void (*)(unsigned char *, unsigned char *))off_1ECABDFD8[v165])(v465, v439);
                      unint64_t v160 = off_1ECABE5E0;
                      goto LABEL_862;
                    }
                    if (*(_DWORD *)(a2 + 56) == 73)
                    {
                      unsigned int v187 = *(_DWORD *)(a2 + 36);
                      unsigned int v188 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v188;
                        if (v187 <= v188)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0598);
                        }
                        uint64_t v190 = *(void *)(a2 + 24);
                        uint64_t v191 = v190 + 32 * v188;
                        unsigned int v192 = *(_DWORD *)v191;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v191;
                        *unsigned int v38 = *(_OWORD *)(v191 + 4);
                        unsigned int v193 = *(_DWORD *)v191;
                        if (v193 > 8) {
                          goto LABEL_368;
                        }
                        if (((1 << v193) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v193) & 0xC4) != 0)
                        {
                          *unsigned int v39 = *(void *)(v190 + 32 * v188 + 24);
                        }
                        else if (v193 == 8)
                        {
                          *unsigned int v39 = 0;
                          int v194 = *(_DWORD **)(v190 + 32 * v188 + 24);
                          if (v194) {
                            *v194 += 2;
                          }
                          goto LABEL_377;
                        }
LABEL_368:
                        int v189 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v189;
                        ++v188;
                        if (v192 != 82)
                        {
                          int8x16x2_t v166 = *(const char **)v439;
                          goto LABEL_410;
                        }
                      }
                      int v194 = *(_DWORD **)(v190 + 32 * v188 + 24);
LABEL_377:
                      *unsigned int v39 = (uint64_t)v194;
                      goto LABEL_368;
                    }
                    WGSL::toString();
                    WGSL::toString();
                    *(void *)long long v465 = "Expected a ";
                    *(void *)&v465[8] = 12;
                    v472 = ", but got a ";
                    v473.n128_u64[0] = 13;
                    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v465, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v453, &v468);
                    if (!v468)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825C0620);
                    }
                    unint64_t v205 = v453;
                    v453 = 0;
                    if (v205)
                    {
                      if (*(_DWORD *)v205 != 2)
                      {
                        *(_DWORD *)v205 -= 2;
                        goto LABEL_401;
                      }
                      WTF::StringImpl::destroy();
                      uint64_t v206 = v462;
                      unint64_t v462 = 0;
                      if (v206)
                      {
LABEL_480:
                        if (*(_DWORD *)v206 == 2) {
                          WTF::StringImpl::destroy();
                        }
                        else {
                          *(_DWORD *)v206 -= 2;
                        }
                      }
                    }
                    else
                    {
LABEL_401:
                      uint64_t v206 = v462;
                      unint64_t v462 = 0;
                      if (v206) {
                        goto LABEL_480;
                      }
                    }
                    unint64_t v248 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                    uint64_t v433 = v468;
                    int v434 = v161;
                    unint64_t v435 = v248;
                    unsigned int v436 = 1;
                    goto LABEL_484;
                  }
                  WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v446, a2);
                  if (v448)
                  {
                    if (v448 == 1)
                    {
                      uint64_t v184 = (const char *)v446;
                      if (v446) {
                        *v446 += 2;
                      }
                      __n128 result = v447;
                      __n128 *v159 = v447;
                      uint64_t v433 = v184;
                      unsigned int v436 = 1;
                      uint64_t v185 = v448;
                      if (v448 != -1) {
                        goto LABEL_861;
                      }
                      goto LABEL_862;
                    }
                    goto LABEL_917;
                  }
                  switch(*(_DWORD *)(a2 + 56))
                  {
                    case 0x17:
                      unsigned int v219 = *(const char **)(a2 + 88);
                      uint64_t v423 = *(unsigned int *)(a2 + 96);
                      unsigned int v220 = *(_DWORD *)(a2 + 36);
                      unsigned int v221 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v221;
                        if (v220 <= v221)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C05A8);
                        }
                        uint64_t v223 = *(void *)(a2 + 24);
                        uint64_t v224 = v223 + 32 * v221;
                        unsigned int v225 = *(_DWORD *)v224;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v224;
                        *unsigned int v38 = *(_OWORD *)(v224 + 4);
                        unsigned int v226 = *(_DWORD *)v224;
                        if (v226 > 8) {
                          goto LABEL_432;
                        }
                        if (((1 << v226) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v226) & 0xC4) != 0)
                        {
                          *unsigned int v39 = *(void *)(v223 + 32 * v221 + 24);
                        }
                        else if (v226 == 8)
                        {
                          *unsigned int v39 = 0;
                          int v227 = *(_DWORD **)(v223 + 32 * v221 + 24);
                          if (v227) {
                            *v227 += 2;
                          }
                          goto LABEL_441;
                        }
LABEL_432:
                        int v222 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v222;
                        ++v221;
                        if (v225 != 82)
                        {
                          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v465, a2);
                          if (v467)
                          {
                            if (v467 == 1)
                            {
                              unsigned int v238 = *(const char **)v465;
                              if (*(void *)v465) {
                                **(_DWORD **)v465 += 2;
                              }
                              __n128 v454 = *(__n128 *)&v465[8];
                              v453 = v238;
                              LODWORD(v455) = 1;
                              goto LABEL_852;
                            }
                            goto LABEL_917;
                          }
                          unsigned int v421 = v219;
                          if (*(_DWORD *)(a2 + 56) != 67)
                          {
                            WGSL::toString();
                            WGSL::toString();
                            *(void *)int v439 = "Expected a ";
                            *(void *)&v439[8] = 12;
                            v472 = ", but got a ";
                            v473.n128_u64[0] = 13;
                            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v450, &v468);
                            if (!v468)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825C0640);
                            }
                            unsigned int v269 = v450;
                            unint64_t v450 = 0;
                            if (v269)
                            {
                              if (*(_DWORD *)v269 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v269 -= 2;
                              }
                            }
                            uint64_t v352 = v462;
                            unint64_t v462 = 0;
                            if (v352)
                            {
                              if (*(_DWORD *)v352 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v352 -= 2;
                              }
                            }
                            unint64_t v354 = v423 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v423) << 32);
                            v453 = v468;
                            v454.n128_u64[0] = (unint64_t)v219;
                            v454.n128_u64[1] = v354;
                            LODWORD(v455) = 1;
                            goto LABEL_852;
                          }
                          unsigned int v253 = *(_DWORD *)(a2 + 36);
                          unsigned int v254 = *(_DWORD *)(a2 + 40) + 1;
                          while (2)
                          {
                            *(_DWORD *)(a2 + 40) = v254;
                            if (v253 <= v254)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825C0600);
                            }
                            uint64_t v256 = *(void *)(a2 + 24);
                            uint64_t v257 = v256 + 32 * v254;
                            unsigned int v258 = *(_DWORD *)v257;
                            *(_DWORD *)(a2 + 56) = *(_DWORD *)v257;
                            *unsigned int v38 = *(_OWORD *)(v257 + 4);
                            unsigned int v259 = *(_DWORD *)v257;
                            if (v259 <= 8)
                            {
                              if (((1 << v259) & 0x38) != 0)
                              {
                                unsigned int v260 = *(_DWORD **)(v256 + 32 * v254 + 24);
                                goto LABEL_520;
                              }
                              if (((1 << v259) & 0xC4) != 0)
                              {
                                *unsigned int v39 = *(void *)(v256 + 32 * v254 + 24);
                              }
                              else if (v259 == 8)
                              {
                                *unsigned int v39 = 0;
                                unsigned int v260 = *(_DWORD **)(v256 + 32 * v254 + 24);
                                if (v260) {
                                  *v260 += 2;
                                }
LABEL_520:
                                *unsigned int v39 = (uint64_t)v260;
                              }
                            }
                            int v255 = *(_DWORD *)(a2 + 68);
                            *(void *)(a2 + 88) = *(void *)(a2 + 60);
                            *(_DWORD *)(a2 + 96) = v255;
                            ++v254;
                            if (v258 == 82) {
                              continue;
                            }
                            break;
                          }
                          unsigned int v271 = 0;
                          unsigned int v272 = 0;
                          unsigned int v443 = 0;
                          v444.n128_u64[0] = 0;
                          while (2)
                          {
                            if (*(_DWORD *)(a2 + 56) == 68)
                            {
                              unsigned int v350 = v159;
                              v453 = (const char *)v160;
                              LODWORD(v455) = 1;
                              unint64_t v160 = off_1ECABE5E0;
                              goto LABEL_767;
                            }
                            int v426 = *(const char **)(a2 + 88);
                            uint64_t v273 = *(unsigned int *)(a2 + 96);
                            WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v472, a2);
                            if (v474)
                            {
                              if (v474 == 1)
                              {
                                uint64_t v274 = v472;
                                if (v472) {
                                  *(_DWORD *)v472 += 2;
                                }
                                __n128 v463 = v473;
                                unint64_t v462 = v274;
                                unsigned int v464 = 1;
                                uint64_t v275 = 1;
                                goto LABEL_591;
                              }
                              goto LABEL_917;
                            }
                            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v439, a2);
                            if (v441[0])
                            {
                              if (v441[0] != 1) {
                                goto LABEL_917;
                              }
                              int v277 = *(const char **)v439;
                              if (*(void *)v439) {
                                **(_DWORD **)v439 += 2;
                              }
                              __n128 v463 = *(__n128 *)&v439[8];
                              unint64_t v462 = v277;
LABEL_587:
                              unsigned int v464 = 1;
                              goto LABEL_588;
                            }
                            if (*(_DWORD *)(a2 + 56) != 47)
                            {
                              WGSL::toString();
                              WGSL::toString();
                              v468 = "Expected a ";
                              v469.n128_u64[0] = 12;
                              unint64_t v450 = ", but got a ";
                              *(void *)&long long v451 = 13;
                              WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v468, (uint64_t *)&v457, (uint64_t)&v450, (uint64_t *)&v471, &v460);
                              if (!(void)v460)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825C0650);
                              }
                              unint64_t v286 = v471;
                              v471 = 0;
                              if (v286)
                              {
                                if (*(_DWORD *)v286 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *(_DWORD *)v286 -= 2;
                                }
                              }
                              unsigned int v291 = v457;
                              int v457 = 0;
                              if (v291)
                              {
                                if (*(_DWORD *)v291 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *(_DWORD *)v291 -= 2;
                                }
                              }
                              unint64_t v292 = v273 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v273) << 32);
                              unint64_t v462 = (const char *)v460;
                              v463.n128_u64[0] = (unint64_t)v426;
                              v463.n128_u64[1] = v292;
                              goto LABEL_587;
                            }
                            unsigned int v278 = *(_DWORD *)(a2 + 36);
                            unsigned int v279 = *(_DWORD *)(a2 + 40) + 1;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v279;
                              if (v278 <= v279)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825C0610);
                              }
                              uint64_t v281 = *(void *)(a2 + 24);
                              uint64_t v282 = v281 + 32 * v279;
                              unsigned int v283 = *(_DWORD *)v282;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v282;
                              *unsigned int v38 = *(_OWORD *)(v282 + 4);
                              unsigned int v284 = *(_DWORD *)v282;
                              if (v284 <= 8)
                              {
                                if (((1 << v284) & 0x38) != 0)
                                {
                                  unsigned int v285 = *(_DWORD **)(v281 + 32 * v279 + 24);
                                  goto LABEL_569;
                                }
                                if (((1 << v284) & 0xC4) != 0)
                                {
                                  *unsigned int v39 = *(void *)(v281 + 32 * v279 + 24);
                                }
                                else if (v284 == 8)
                                {
                                  *unsigned int v39 = 0;
                                  unsigned int v285 = *(_DWORD **)(v281 + 32 * v279 + 24);
                                  if (v285) {
                                    *v285 += 2;
                                  }
LABEL_569:
                                  *unsigned int v39 = (uint64_t)v285;
                                }
                              }
                              int v280 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v280;
                              ++v279;
                              if (v283 == 82) {
                                continue;
                              }
                              break;
                            }
                            WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName((uint64_t)&v468, a2);
                            if (!v470)
                            {
                              uint64_t v289 = *(void **)(a2 + 8);
                              unsigned int v290 = *(_DWORD *)(a2 + 96) - v273;
                              unint64_t v450 = v426;
                              *(void *)&long long v451 = __PAIR64__(v290, v273);
                              LOBYTE(v460) = 0;
                              unint64_t v462 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::Parameter,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WGSL::AST::ParameterRole,void>(v289, &v450, (uint64_t)v439, (uint64_t *)&v468, (uint64_t *)&v472, (char *)&v460);
                              unsigned int v464 = 0;
                              uint64_t v288 = v470;
                              if (v470 != -1) {
                                goto LABEL_580;
                              }
                              goto LABEL_588;
                            }
                            if (v470 != 1) {
                              goto LABEL_917;
                            }
                            unsigned int v287 = v468;
                            if (v468) {
                              *(_DWORD *)v468 += 2;
                            }
                            __n128 v463 = v469;
                            unint64_t v462 = v287;
                            unsigned int v464 = 1;
                            uint64_t v288 = 1;
LABEL_580:
                            ((void (*)(const char **, const char **))off_1ECABE170[v288])(&v450, &v468);
LABEL_588:
                            if (v441[0] != -1) {
                              ((void (*)(const char **, unsigned char *))off_1ECABDF80[v441[0]])(&v468, v439);
                            }
                            uint64_t v275 = v474;
                            if (v474 != -1) {
LABEL_591:
                            }
                              ((void (*)(unsigned char *, const char **))off_1ECABE5D0[v275])(v439, &v472);
                            if (!v464)
                            {
                              if (v272 == v444.n128_u32[0])
                              {
                                uint64_t v294 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v443, v272 + 1, (unint64_t)&v462);
                                __int32 v295 = v444.n128_i32[1];
                                unsigned int v271 = (WTF *)v443;
                                *(void *)&v443[8 * v444.n128_u32[1]] = *v294;
                              }
                              else
                              {
                                *((void *)v271 + v272) = v462;
                                __int32 v295 = v444.n128_i32[1];
                              }
                              unsigned int v272 = v295 + 1;
                              v444.n128_u32[1] = v295 + 1;
                              if ((v295 + 1) >= 0x100)
                              {
                                WTF::String::number((WTF::String *)0xFF);
                                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"function cannot have more than ", 32, (uint64_t *)&v461, (int8x16_t *)" parameters", 12, v439);
                                unint64_t v304 = v423 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v423) << 32);
                                unint64_t v160 = *(uint64_t (***)())v439;
                                v454.n128_u64[0] = (unint64_t)v421;
                                v454.n128_u64[1] = v304;
                                *(void *)int v439 = 0;
                                unint64_t v305 = v461;
                                v461 = 0;
                                if (v305)
                                {
                                  if (*v305 == 2)
                                  {
                                    WTF::StringImpl::destroy();
                                    int v293 = 1;
                                    goto LABEL_616;
                                  }
                                  *v305 -= 2;
                                }
                                int v293 = 1;
                                goto LABEL_616;
                              }
                              if (*(_DWORD *)(a2 + 56) != 48)
                              {
                                int v293 = 7;
                                goto LABEL_616;
                              }
                              unsigned int v296 = *(_DWORD *)(a2 + 36);
                              unsigned int v297 = *(_DWORD *)(a2 + 40) + 1;
                              while (2)
                              {
                                *(_DWORD *)(a2 + 40) = v297;
                                if (v296 <= v297)
                                {
                                  __break(0xC471u);
                                  JUMPOUT(0x1825C05C8);
                                }
                                uint64_t v299 = *(void *)(a2 + 24);
                                uint64_t v300 = v299 + 32 * v297;
                                unsigned int v301 = *(_DWORD *)v300;
                                *(_DWORD *)(a2 + 56) = *(_DWORD *)v300;
                                *unsigned int v38 = *(_OWORD *)(v300 + 4);
                                unsigned int v302 = *(_DWORD *)v300;
                                if (v302 <= 8)
                                {
                                  if (((1 << v302) & 0x38) != 0)
                                  {
                                    uint8x8_t v303 = *(_DWORD **)(v299 + 32 * v297 + 24);
                                    goto LABEL_613;
                                  }
                                  if (((1 << v302) & 0xC4) != 0)
                                  {
                                    *unsigned int v39 = *(void *)(v299 + 32 * v297 + 24);
                                  }
                                  else if (v302 == 8)
                                  {
                                    *unsigned int v39 = 0;
                                    uint8x8_t v303 = *(_DWORD **)(v299 + 32 * v297 + 24);
                                    if (v303) {
                                      *v303 += 2;
                                    }
LABEL_613:
                                    *unsigned int v39 = (uint64_t)v303;
                                  }
                                }
                                int v298 = *(_DWORD *)(a2 + 68);
                                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                                *(_DWORD *)(a2 + 96) = v298;
                                ++v297;
                                if (v301 != 82)
                                {
                                  int v293 = 0;
                                  goto LABEL_616;
                                }
                                continue;
                              }
                            }
                            if (v464 != 1) {
                              goto LABEL_917;
                            }
                            unint64_t v160 = (uint64_t (**)())v462;
                            if (v462) {
                              *(_DWORD *)v462 += 2;
                            }
                            __n128 v454 = v463;
                            int v293 = 1;
LABEL_616:
                            if (v464 != -1) {
                              ((void (*)(unsigned char *, const char **))off_1ECABE3E0[v464])(v439, &v462);
                            }
                            if (!v293) {
                              continue;
                            }
                            break;
                          }
                          if (v293 != 7)
                          {
                            v453 = (const char *)v160;
                            LODWORD(v455) = 1;
                            unint64_t v160 = off_1ECABE5E0;
                            if (!v271) {
                              goto LABEL_852;
                            }
                            goto LABEL_851;
                          }
                          unsigned int v350 = v159;
                          v453 = (const char *)v160;
                          LODWORD(v455) = 1;
                          unint64_t v160 = off_1ECABE5E0;
                          if (*(_DWORD *)(a2 + 56) != 68)
                          {
                            WGSL::toString();
                            WGSL::toString();
                            *(void *)int v439 = "Expected a ";
                            *(void *)&v439[8] = 12;
                            v472 = ", but got a ";
                            v473.n128_u64[0] = 13;
                            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v450, &v468);
                            if (!v468)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825C0668);
                            }
                            uint64_t v351 = v450;
                            unint64_t v450 = 0;
                            if (v351)
                            {
                              if (*(_DWORD *)v351 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v351 -= 2;
                              }
                            }
                            unsigned int v410 = v462;
                            unint64_t v462 = 0;
                            if (v410)
                            {
                              if (*(_DWORD *)v410 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)v410 -= 2;
                              }
                            }
                            unint64_t v411 = v423 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v423) << 32);
                            v453 = v468;
                            v454.n128_u64[0] = (unint64_t)v421;
                            v454.n128_u64[1] = v411;
                            LODWORD(v455) = 1;
                            if (v271) {
                              goto LABEL_851;
                            }
                            goto LABEL_852;
                          }
LABEL_767:
                          unsigned int v364 = *(_DWORD *)(a2 + 36);
                          LODWORD(v365) = *(_DWORD *)(a2 + 40);
                          unsigned int v366 = v365 + 2;
                          uint8x8_t v159 = v350;
                          while (2)
                          {
                            uint64_t v365 = (v365 + 1);
                            *(_DWORD *)(a2 + 40) = v365;
                            if (v364 <= v365)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825C0678);
                            }
                            unsigned int v368 = v366;
                            uint64_t v369 = *(void *)(a2 + 24);
                            uint64_t v370 = v369 + 32 * v365;
                            unsigned int v371 = *(_DWORD *)v370;
                            *(_DWORD *)(a2 + 56) = *(_DWORD *)v370;
                            *unsigned int v38 = *(_OWORD *)(v370 + 4);
                            unsigned int v372 = *(_DWORD *)v370;
                            if (v372 <= 8)
                            {
                              if (((1 << v372) & 0x38) != 0)
                              {
                                unsigned int v373 = *(_DWORD **)(v369 + 32 * v365 + 24);
                                goto LABEL_778;
                              }
                              if (((1 << v372) & 0xC4) != 0)
                              {
                                *unsigned int v39 = *(void *)(v369 + 32 * v365 + 24);
                              }
                              else if (v372 == 8)
                              {
                                *unsigned int v39 = 0;
                                unsigned int v373 = *(_DWORD **)(v369 + 32 * v365 + 24);
                                if (v373) {
                                  *v373 += 2;
                                }
LABEL_778:
                                *unsigned int v39 = (uint64_t)v373;
                              }
                            }
                            int v367 = *(_DWORD *)(a2 + 68);
                            *(void *)(a2 + 88) = *(void *)(a2 + 60);
                            *(_DWORD *)(a2 + 96) = v367;
                            unsigned int v366 = v368 + 1;
                            if (v371 == 82) {
                              continue;
                            }
                            break;
                          }
                          int v374 = 0;
                          v468 = 0;
                          v469.n128_u64[0] = 0;
                          unint64_t v462 = 0;
                          if (v371 != 39) {
                            goto LABEL_780;
                          }
                          while (2)
                          {
                            *(_DWORD *)(a2 + 40) = v368;
                            if (v364 <= v368)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825C0680);
                            }
                            uint64_t v378 = v369 + 32 * v368;
                            unsigned int v379 = *(_DWORD *)v378;
                            *(_DWORD *)(a2 + 56) = *(_DWORD *)v378;
                            *unsigned int v38 = *(_OWORD *)(v378 + 4);
                            unsigned int v380 = *(_DWORD *)v378;
                            if (v380 <= 8)
                            {
                              if (((1 << v380) & 0x38) != 0)
                              {
                                int8x16_t v381 = *(_DWORD **)(v369 + 32 * v368 + 24);
                                goto LABEL_795;
                              }
                              if (((1 << v380) & 0xC4) != 0)
                              {
                                *unsigned int v39 = *(void *)(v369 + 32 * v368 + 24);
                              }
                              else if (v380 == 8)
                              {
                                *unsigned int v39 = 0;
                                int8x16_t v381 = *(_DWORD **)(v369 + 32 * v368 + 24);
                                if (v381) {
                                  *v381 += 2;
                                }
LABEL_795:
                                *unsigned int v39 = (uint64_t)v381;
                              }
                            }
                            int v377 = *(_DWORD *)(a2 + 68);
                            *(void *)(a2 + 88) = *(void *)(a2 + 60);
                            *(_DWORD *)(a2 + 96) = v377;
                            ++v368;
                            if (v379 == 82) {
                              continue;
                            }
                            break;
                          }
                          WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(v439, a2);
                          if (!v440)
                          {
                            int v374 = *(WTF **)v439;
                            v468 = *(const char **)v439;
                            v469.n128_u64[0] = *(void *)&v439[8];
                            WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName((uint64_t)&v472, a2);
                            uint64_t v389 = v474;
                            if (v474)
                            {
                              if (v474 != 1) {
                                goto LABEL_917;
                              }
                              unsigned int v390 = v472;
                              if (v472) {
                                *(_DWORD *)v472 += 2;
                              }
                              __n128 v454 = v473;
                              v453 = v390;
                              LODWORD(v455) = 1;
                            }
                            else
                            {
                              unint64_t v462 = v472;
                            }
                            ((void (*)(const char **, const char **))off_1ECABE170[v389])(&v450, &v472);
                            if (!v389)
                            {
LABEL_780:
                              WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement((uint64_t)v439, a2);
                              uint64_t v375 = v440;
                              if (v440)
                              {
                                if (v440 != 1) {
                                  goto LABEL_917;
                                }
                                int v376 = *(const char **)v439;
                                if (*(void *)v439) {
                                  **(_DWORD **)v439 += 2;
                                }
                                __n128 v454 = *(__n128 *)&v439[8];
                                v453 = v376;
                                LODWORD(v455) = 1;
                              }
                              else
                              {
                                int v387 = *(void **)(a2 + 8);
                                unsigned int v388 = *(_DWORD *)(a2 + 96) - v423;
                                v472 = v421;
                                v473.n128_u64[0] = __PAIR64__(v388, v423);
                                v453 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::Function,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::Parameter,0ul>,WGSL::AST::Expression *,std::reference_wrapper<WGSL::AST::CompoundStatement>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v387, &v472, (uint64_t)v465, (uint64_t *)&v443, (uint64_t *)&v462, v439, (uint64_t *)&v446, (uint64_t *)&v468);
                                LODWORD(v455) = 0;
                                int v374 = (WTF *)v468;
                              }
                              ((void (*)(const char **, unsigned char *))off_1ECABE5C0[v375])(&v472, v439);
                            }
                            if (v374)
                            {
                              v468 = 0;
                              v469.n128_u32[0] = 0;
                              WTF::fastFree(v374, v276);
                            }
                            unsigned int v271 = (WTF *)v443;
                            if (v443) {
                              goto LABEL_851;
                            }
                            goto LABEL_852;
                          }
                          if (v440 != 1) {
                            goto LABEL_917;
                          }
                          int8x16_t v382 = *(char **)v439;
                          if (*(void *)v439)
                          {
                            int v383 = **(_DWORD **)v439;
                            **(_DWORD **)v439 += 2;
                            __n128 v454 = *(__n128 *)&v439[8];
                            v453 = v382;
                            LODWORD(v455) = 1;
                            if (v383)
                            {
                              *(_DWORD *)int8x16_t v382 = v383;
                              unsigned int v271 = (WTF *)v443;
                              if (!v443) {
                                goto LABEL_852;
                              }
LABEL_851:
                              unsigned int v443 = 0;
                              v444.n128_u32[0] = 0;
                              WTF::fastFree(v271, v276);
                              goto LABEL_852;
                            }
                            WTF::StringImpl::destroy();
                            unsigned int v271 = (WTF *)v443;
                            if (v443) {
                              goto LABEL_851;
                            }
                          }
                          else
                          {
                            __n128 v454 = *(__n128 *)&v439[8];
                            v453 = 0;
                            LODWORD(v455) = 1;
                            unsigned int v271 = (WTF *)v443;
                            if (v443) {
                              goto LABEL_851;
                            }
                          }
LABEL_852:
                          if (v467 != -1) {
                            ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v467])(v439, v465);
                          }
                          uint64_t v400 = v455;
                          if (!v455)
                          {
                            int v401 = v453;
                            goto LABEL_860;
                          }
                          if (v455 != 1) {
                            goto LABEL_917;
                          }
                          int v401 = v453;
                          if (v453) {
                            *(_DWORD *)v453 += 2;
                          }
                          __n128 *v159 = v454;
LABEL_860:
                          uint64_t v433 = v401;
                          unsigned int v436 = v400;
                          ((void (*)(unsigned char *, const char **))off_1ECABE5E0[v400])(v439, &v453);
                          uint64_t v185 = v448;
                          if (v448 != -1) {
LABEL_861:
                          }
                            ((void (*)(unsigned char *, _DWORD **))off_1ECABE5D0[v185])(v439, &v446);
LABEL_862:
                          unsigned int v402 = v436;
                          if (!v436)
                          {
                            uint64_t v405 = *(void *)a2;
                            uint64_t v406 = *(unsigned int *)(*(void *)a2 + 76);
                            if (v406 == *(_DWORD *)(*(void *)a2 + 72))
                            {
                              int v407 = (const char **)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v405 + 64, v406 + 1, (unint64_t)&v433);
                              uint64_t v406 = *(unsigned int *)(v405 + 76);
                              uint64_t v408 = *(void *)(v405 + 64);
                              uint64_t v409 = *v407;
                            }
                            else
                            {
                              uint64_t v408 = *(void *)(v405 + 64);
                              uint64_t v409 = v433;
                            }
                            *(void *)(v408 + 8 * v406) = v409;
                            ++*(_DWORD *)(v405 + 76);
                            uint64_t v404 = v436;
                            if (v436 != -1) {
                              goto LABEL_867;
                            }
                            goto LABEL_868;
                          }
                          if (v436 != 1)
                          {
LABEL_917:
                            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_918:
                            __break(0xC471u);
                            JUMPOUT(0x1825C0520);
                          }
                          unsigned int v403 = v433;
                          if (v433) {
                            *(_DWORD *)v433 += 2;
                          }
                          __n128 result = *v159;
                          __n128 *v431 = *v159;
                          *(void *)a1 = v403;
                          *(unsigned char *)(a1 + 24) = 1;
                          uint64_t v404 = v436;
                          if (v436 != -1) {
LABEL_867:
                          }
                            ((void (*)(unsigned char *, const char **))off_1ECABE5E0[v404])(v439, &v433);
LABEL_868:
                          if (v402) {
                            return result;
                          }
                          unsigned int v40 = *(_DWORD *)(a2 + 56);
                          goto LABEL_311;
                        }
                      }
                      int v227 = *(_DWORD **)(v223 + 32 * v221 + 24);
LABEL_441:
                      *unsigned int v39 = (uint64_t)v227;
                      goto LABEL_432;
                    case 0x1C:
                    case 0x22:
                      WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableWithAttributes((uint64_t)v439, a2, (uint64_t *)&v446);
                      uint64_t v195 = v440;
                      if (v440)
                      {
                        if (v440 != 1) {
                          goto LABEL_917;
                        }
                        uint8x8_t v196 = *(const char **)v439;
                        if (*(void *)v439) {
                          **(_DWORD **)v439 += 2;
                        }
                        __n128 *v159 = *(__n128 *)&v439[8];
LABEL_535:
                        uint64_t v433 = v196;
                        unsigned int v436 = v195;
LABEL_729:
                        ((void (*)(unsigned char *, unsigned char *))off_1ECABDFD8[v195])(v465, v439);
                        unint64_t v160 = off_1ECABE5E0;
                        uint64_t v185 = v448;
                        if (v448 != -1) {
                          goto LABEL_861;
                        }
                        goto LABEL_862;
                      }
                      if (*(_DWORD *)(a2 + 56) != 73)
                      {
                        WGSL::toString();
                        WGSL::toString();
                        *(void *)long long v465 = "Expected a ";
                        *(void *)&v465[8] = 12;
                        v472 = ", but got a ";
                        v473.n128_u64[0] = 13;
                        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v465, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v453, &v468);
                        if (!v468)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0638);
                        }
                        unint64_t v252 = v453;
                        v453 = 0;
                        if (v252)
                        {
                          if (*(_DWORD *)v252 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v252 -= 2;
                          }
                        }
                        unsigned int v347 = v462;
                        unint64_t v462 = 0;
                        if (v347)
                        {
                          if (*(_DWORD *)v347 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v347 -= 2;
                          }
                        }
                        unint64_t v348 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                        uint64_t v433 = v468;
                        int v434 = v161;
                        unint64_t v435 = v348;
                        unsigned int v436 = 1;
                        goto LABEL_729;
                      }
                      unsigned int v240 = *(_DWORD *)(a2 + 36);
                      unsigned int v241 = *(_DWORD *)(a2 + 40) + 1;
                      while (1)
                      {
                        *(_DWORD *)(a2 + 40) = v241;
                        if (v240 <= v241)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C05D0);
                        }
                        uint64_t v243 = *(void *)(a2 + 24);
                        uint64_t v244 = v243 + 32 * v241;
                        unsigned int v245 = *(_DWORD *)v244;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v244;
                        *unsigned int v38 = *(_OWORD *)(v244 + 4);
                        unsigned int v246 = *(_DWORD *)v244;
                        if (v246 > 8) {
                          goto LABEL_469;
                        }
                        if (((1 << v246) & 0x38) != 0) {
                          break;
                        }
                        if (((1 << v246) & 0xC4) != 0)
                        {
                          *unsigned int v39 = *(void *)(v243 + 32 * v241 + 24);
                        }
                        else if (v246 == 8)
                        {
                          *unsigned int v39 = 0;
                          v247 = *(_DWORD **)(v243 + 32 * v241 + 24);
                          if (v247) {
                            *v247 += 2;
                          }
                          goto LABEL_478;
                        }
LABEL_469:
                        int v242 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v242;
                        ++v241;
                        if (v245 != 82)
                        {
                          uint8x8_t v196 = *(const char **)v439;
                          goto LABEL_535;
                        }
                      }
                      v247 = *(_DWORD **)(v243 + 32 * v241 + 24);
LABEL_478:
                      *unsigned int v39 = (uint64_t)v247;
                      goto LABEL_469;
                    case 0x1F:
                      unint64_t v228 = *(void *)(a2 + 88);
                      uint64_t v424 = *(unsigned int *)(a2 + 96);
                      unsigned int v229 = *(_DWORD *)(a2 + 36);
                      unsigned int v230 = *(_DWORD *)(a2 + 40) + 1;
                      break;
                    default:
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      unint64_t v237 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                      int v434 = v161;
                      unint64_t v435 = v237;
                      unsigned int v436 = 1;
                      uint64_t v185 = v448;
                      if (v448 == -1) {
                        goto LABEL_862;
                      }
                      goto LABEL_861;
                  }
                  while (2)
                  {
                    *(_DWORD *)(a2 + 40) = v230;
                    if (v229 <= v230)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825C05B0);
                    }
                    uint64_t v232 = *(void *)(a2 + 24);
                    uint64_t v233 = v232 + 32 * v230;
                    unsigned int v234 = *(_DWORD *)v233;
                    *(_DWORD *)(a2 + 56) = *(_DWORD *)v233;
                    *unsigned int v38 = *(_OWORD *)(v233 + 4);
                    unsigned int v235 = *(_DWORD *)v233;
                    if (v235 <= 8)
                    {
                      if (((1 << v235) & 0x38) != 0)
                      {
                        unsigned int v236 = *(_DWORD **)(v232 + 32 * v230 + 24);
                        goto LABEL_453;
                      }
                      if (((1 << v235) & 0xC4) != 0)
                      {
                        *unsigned int v39 = *(void *)(v232 + 32 * v230 + 24);
                      }
                      else if (v235 == 8)
                      {
                        *unsigned int v39 = 0;
                        unsigned int v236 = *(_DWORD **)(v232 + 32 * v230 + 24);
                        if (v236) {
                          *v236 += 2;
                        }
LABEL_453:
                        *unsigned int v39 = (uint64_t)v236;
                      }
                    }
                    int v231 = *(_DWORD *)(a2 + 68);
                    *(void *)(a2 + 88) = *(void *)(a2 + 60);
                    *(_DWORD *)(a2 + 96) = v231;
                    ++v230;
                    if (v234 != 82)
                    {
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v465, a2);
                      if (v467)
                      {
                        if (v467 != 1) {
                          goto LABEL_917;
                        }
                        uint64_t v239 = *(const char **)v465;
                        if (*(void *)v465) {
                          **(_DWORD **)v465 += 2;
                        }
                        __n128 v444 = *(__n128 *)&v465[8];
                        unsigned int v443 = v239;
                        unsigned int v445 = 1;
                        goto LABEL_836;
                      }
                      if (*(_DWORD *)(a2 + 56) != 43)
                      {
                        WGSL::toString();
                        WGSL::toString();
                        *(void *)int v439 = "Expected a ";
                        *(void *)&v439[8] = 12;
                        v472 = ", but got a ";
                        v473.n128_u64[0] = 13;
                        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v460, &v468);
                        if (!v468)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0648);
                        }
                        uint64_t v270 = (_DWORD *)v460;
                        *(void *)&long long v460 = 0;
                        if (v270)
                        {
                          if (*v270 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v270 -= 2;
                          }
                        }
                        int v353 = v462;
                        unint64_t v462 = 0;
                        if (v353)
                        {
                          if (*(_DWORD *)v353 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v353 -= 2;
                          }
                        }
                        unint64_t v355 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                        unsigned int v443 = v468;
                        v444.n128_u64[0] = v228;
                        v444.n128_u64[1] = v355;
                        unsigned int v445 = 1;
                        goto LABEL_836;
                      }
                      unsigned int v261 = *(_DWORD *)(a2 + 36);
                      unsigned int v262 = *(_DWORD *)(a2 + 40) + 1;
                      while (2)
                      {
                        *(_DWORD *)(a2 + 40) = v262;
                        if (v261 <= v262)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0608);
                        }
                        uint64_t v264 = *(void *)(a2 + 24);
                        uint64_t v265 = v264 + 32 * v262;
                        unsigned int v266 = *(_DWORD *)v265;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v265;
                        *unsigned int v38 = *(_OWORD *)(v265 + 4);
                        unsigned int v267 = *(_DWORD *)v265;
                        if (v267 <= 8)
                        {
                          if (((1 << v267) & 0x38) != 0)
                          {
                            unint64_t v268 = *(_DWORD **)(v264 + 32 * v262 + 24);
                            goto LABEL_533;
                          }
                          if (((1 << v267) & 0xC4) != 0)
                          {
                            *unsigned int v39 = *(void *)(v264 + 32 * v262 + 24);
                          }
                          else if (v267 == 8)
                          {
                            *unsigned int v39 = 0;
                            unint64_t v268 = *(_DWORD **)(v264 + 32 * v262 + 24);
                            if (v268) {
                              *v268 += 2;
                            }
LABEL_533:
                            *unsigned int v39 = (uint64_t)v268;
                          }
                        }
                        int v263 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v263;
                        ++v262;
                        if (v266 == 82) {
                          continue;
                        }
                        break;
                      }
                      unint64_t v420 = v228;
                      unsigned int v422 = 0;
                      unsigned int v425 = 0;
                      uint64_t v458 = 0;
                      int v457 = 0;
                      v456 = 0;
                      int v427 = v445;
                      while (2)
                      {
                        if (*(_DWORD *)(a2 + 56) == 44)
                        {
                          unint64_t v349 = v420;
                          goto LABEL_752;
                        }
                        unint64_t v309 = *(void *)(a2 + 88);
                        uint64_t v310 = *(unsigned int *)(a2 + 96);
                        WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v472, a2);
                        if (v474)
                        {
                          if (v474 != 1) {
                            goto LABEL_917;
                          }
                          uint64_t v311 = v472;
                          if (v472) {
                            *(_DWORD *)v472 += 2;
                          }
                          __n128 v463 = v473;
                          unint64_t v462 = v311;
                          unsigned int v464 = 1;
                          uint64_t v312 = 1;
                          goto LABEL_672;
                        }
                        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v439, a2);
                        if (v441[0])
                        {
                          if (v441[0] != 1) {
                            goto LABEL_917;
                          }
                          int v313 = *(const char **)v439;
                          if (*(void *)v439) {
                            **(_DWORD **)v439 += 2;
                          }
                          __n128 v463 = *(__n128 *)&v439[8];
                          unint64_t v462 = v313;
                          goto LABEL_668;
                        }
                        if (*(_DWORD *)(a2 + 56) != 47)
                        {
                          WGSL::toString();
                          WGSL::toString();
                          v468 = "Expected a ";
                          v469.n128_u64[0] = 12;
                          *(void *)&long long v460 = ", but got a ";
                          *((void *)&v460 + 1) = 13;
                          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v468, (uint64_t *)&v461, (uint64_t)&v460, (uint64_t *)&v459, &v471);
                          if (!v471)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825C0658);
                          }
                          unsigned int v322 = v459;
                          unsigned int v459 = 0;
                          if (v322)
                          {
                            if (*v322 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v322 -= 2;
                            }
                          }
                          int v327 = v461;
                          v461 = 0;
                          if (v327)
                          {
                            if (*v327 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v327 -= 2;
                            }
                          }
                          unint64_t v328 = v310 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v310) << 32);
                          unint64_t v462 = v471;
                          v463.n128_u64[0] = v309;
                          v463.n128_u64[1] = v328;
LABEL_668:
                          unsigned int v464 = 1;
                          goto LABEL_669;
                        }
                        unsigned int v314 = *(_DWORD *)(a2 + 36);
                        unsigned int v315 = *(_DWORD *)(a2 + 40) + 1;
LABEL_642:
                        *(_DWORD *)(a2 + 40) = v315;
                        if (v314 <= v315)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0618);
                        }
                        uint64_t v317 = *(void *)(a2 + 24);
                        uint64_t v318 = v317 + 32 * v315;
                        unsigned int v319 = *(_DWORD *)v318;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v318;
                        *unsigned int v38 = *(_OWORD *)(v318 + 4);
                        unsigned int v320 = *(_DWORD *)v318;
                        if (v320 <= 8)
                        {
                          if (((1 << v320) & 0x38) != 0)
                          {
                            uint64_t v321 = *(_DWORD **)(v317 + 32 * v315 + 24);
                            goto LABEL_650;
                          }
                          if (((1 << v320) & 0xC4) != 0)
                          {
                            *unsigned int v39 = *(void *)(v317 + 32 * v315 + 24);
                          }
                          else if (v320 == 8)
                          {
                            *unsigned int v39 = 0;
                            uint64_t v321 = *(_DWORD **)(v317 + 32 * v315 + 24);
                            if (v321) {
                              *v321 += 2;
                            }
LABEL_650:
                            *unsigned int v39 = (uint64_t)v321;
                          }
                        }
                        int v316 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v316;
                        ++v315;
                        if (v319 != 82)
                        {
                          WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName((uint64_t)&v468, a2);
                          if (v470)
                          {
                            if (v470 != 1) {
                              goto LABEL_917;
                            }
                            unsigned int v323 = v468;
                            if (v468) {
                              *(_DWORD *)v468 += 2;
                            }
                            __n128 v463 = v469;
                            unint64_t v462 = v323;
                            unsigned int v464 = 1;
                            uint64_t v324 = 1;
LABEL_661:
                            ((void (*)(long long *, const char **))off_1ECABE170[v324])(&v460, &v468);
                          }
                          else
                          {
                            unsigned int v325 = *(void **)(a2 + 8);
                            unsigned int v326 = *(_DWORD *)(a2 + 96) - v310;
                            *(void *)&long long v460 = v309;
                            *((void *)&v460 + 1) = __PAIR64__(v326, v310);
                            unint64_t v462 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::StructureMember,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v325, &v460, (uint64_t)v439, (uint64_t *)&v468, (uint64_t *)&v472);
                            unsigned int v464 = 0;
                            uint64_t v324 = v470;
                            if (v470 != -1) {
                              goto LABEL_661;
                            }
                          }
LABEL_669:
                          if (v441[0] != -1) {
                            ((void (*)(const char **, unsigned char *))off_1ECABDF80[v441[0]])(&v468, v439);
                          }
                          uint64_t v312 = v474;
                          if (v474 != -1) {
LABEL_672:
                          }
                            ((void (*)(unsigned char *, const char **))off_1ECABE5D0[v312])(v439, &v472);
                          if (v464)
                          {
                            if (v464 != 1) {
                              goto LABEL_917;
                            }
                            unint64_t v160 = (uint64_t (**)())v462;
                            if (v462) {
                              *(_DWORD *)v462 += 2;
                            }
                            __n128 v444 = v463;
                            int v427 = 1;
                            int v306 = 1;
                            uint64_t v307 = 1;
                            goto LABEL_625;
                          }
                          WTF::HashTable<WTF::String,WTF::String,WTF::IdentityExtractor,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String>>::add((uint64_t)v439, (uint64_t *)&v456, (const WTF::StringImpl **)v462 + 6);
                          if (!v439[16])
                          {
                            __n128 v454 = *((__n128 *)v462 + 2);
                            v453 = (const char *)off_1ECABC030;
                            unsigned int v331 = (_DWORD *)*((void *)v462 + 6);
                            if (v331) {
                              *v331 += 2;
                            }
                            unint64_t v455 = v331;
                            long long v451 = *(_OWORD *)&v465[8];
                            unint64_t v450 = (const char *)off_1ECABC030;
                            uint64_t v332 = (uint64_t)v466;
                            if (v466)
                            {
                              *v466 += 2;
                              unsigned int v331 = v455;
                            }
                            uint64_t v452 = (_DWORD *)v332;
                            WTF::tryMakeString<WTF::ASCIILiteral,WGSL::AST::Identifier,WTF::ASCIILiteral,WGSL::AST::Identifier,char>((uint64_t)&v472, (int8x16_t *)"duplicate member '", 19, (uint64_t)v331, (int8x16_t *)"' in struct '", 14, v332, 39);
                            unint64_t v160 = (uint64_t (**)())v472;
                            if (!v472)
                            {
                              __break(0xC471u);
                              JUMPOUT(0x1825C0660);
                            }
                            unint64_t v333 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                            v444.n128_u64[0] = v420;
                            v444.n128_u64[1] = v333;
                            unint64_t v334 = v452;
                            unint64_t v450 = (const char *)off_1ECABC030;
                            uint64_t v452 = 0;
                            if (v334)
                            {
                              if (*v334 == 2) {
                                WTF::StringImpl::destroy();
                              }
                              else {
                                *v334 -= 2;
                              }
                            }
                            unsigned int v343 = v455;
                            v453 = (const char *)off_1ECABC030;
                            unint64_t v455 = 0;
                            if (!v343) {
                              goto LABEL_712;
                            }
LABEL_709:
                            if (*v343 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v343 -= 2;
                            }
                            goto LABEL_712;
                          }
                          if (v425 == v458)
                          {
                            uint64_t v329 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v457, v425 + 1, (unint64_t)&v462);
                            int v330 = HIDWORD(v458);
                            unsigned int v422 = v457;
                            *((void *)v457 + HIDWORD(v458)) = *v329;
                          }
                          else
                          {
                            *((void *)v422 + v425) = v462;
                            int v330 = HIDWORD(v458);
                          }
                          HIDWORD(v458) = v330 + 1;
                          unsigned int v425 = v330 + 1;
                          if ((v330 + 1) < 0x400)
                          {
                            if (*(_DWORD *)(a2 + 56) != 48)
                            {
                              int v306 = 7;
                              uint64_t v307 = v464;
                              if (v464 == -1) {
                                goto LABEL_626;
                              }
                              goto LABEL_625;
                            }
                            unsigned int v335 = *(_DWORD *)(a2 + 36);
                            unsigned int v336 = *(_DWORD *)(a2 + 40) + 1;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v336;
                              if (v335 <= v336)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825C05D8);
                              }
                              uint64_t v338 = *(void *)(a2 + 24);
                              uint64_t v339 = v338 + 32 * v336;
                              unsigned int v340 = *(_DWORD *)v339;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v339;
                              *unsigned int v38 = *(_OWORD *)(v339 + 4);
                              unsigned int v341 = *(_DWORD *)v339;
                              if (v341 <= 8)
                              {
                                if (((1 << v341) & 0x38) != 0)
                                {
                                  unsigned int v342 = *(_DWORD **)(v338 + 32 * v336 + 24);
                                  goto LABEL_702;
                                }
                                if (((1 << v341) & 0xC4) != 0)
                                {
                                  *unsigned int v39 = *(void *)(v338 + 32 * v336 + 24);
                                }
                                else if (v341 == 8)
                                {
                                  *unsigned int v39 = 0;
                                  unsigned int v342 = *(_DWORD **)(v338 + 32 * v336 + 24);
                                  if (v342) {
                                    *v342 += 2;
                                  }
LABEL_702:
                                  *unsigned int v39 = (uint64_t)v342;
                                }
                              }
                              int v337 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v337;
                              ++v336;
                              if (v340 != 82)
                              {
                                int v306 = 0;
                                uint64_t v307 = v464;
                                if (v464 == -1) {
                                  goto LABEL_626;
                                }
LABEL_625:
                                ((void (*)(unsigned char *, const char **))off_1ECABE388[v307])(v439, &v462);
                                goto LABEL_626;
                              }
                              continue;
                            }
                          }
                          WTF::String::number((WTF::String *)0x3FF);
                          WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"struct cannot have more than ", 30, (uint64_t *)&v449, (int8x16_t *)" members", 9, &v472);
                          unint64_t v344 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                          unint64_t v160 = (uint64_t (**)())v472;
                          v444.n128_u64[0] = v420;
                          v444.n128_u64[1] = v344;
                          v472 = 0;
                          unsigned int v343 = v449;
                          v449 = 0;
                          if (v343) {
                            goto LABEL_709;
                          }
LABEL_712:
                          int v427 = 1;
                          int v306 = 1;
                          uint64_t v307 = v464;
                          if (v464 != -1) {
                            goto LABEL_625;
                          }
LABEL_626:
                          if (v306)
                          {
                            unint64_t v349 = v420;
                            if (v306 != 7)
                            {
                              unsigned int v443 = (const char *)v160;
                              unsigned int v445 = v427;
LABEL_805:
                              unint64_t v160 = off_1ECABE5E0;
                              goto LABEL_824;
                            }
LABEL_752:
                            unsigned int v443 = (const char *)v160;
                            unsigned int v445 = v427;
                            if (!v425)
                            {
                              WTF::StringImpl::createWithoutCopyingNonEmpty();
                              unint64_t v384 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                              v444.n128_u64[0] = v349;
                              v444.n128_u64[1] = v384;
                              unsigned int v445 = 1;
                              goto LABEL_805;
                            }
                            if (*(_DWORD *)(a2 + 56) != 44)
                            {
                              WGSL::toString();
                              WGSL::toString();
                              *(void *)int v439 = "Expected a ";
                              *(void *)&v439[8] = 12;
                              v472 = ", but got a ";
                              v473.n128_u64[0] = 13;
                              WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v462, (uint64_t)&v472, (uint64_t *)&v460, &v468);
                              if (!v468)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825C0688);
                              }
                              unsigned int v385 = (_DWORD *)v460;
                              *(void *)&long long v460 = 0;
                              unint64_t v160 = off_1ECABE5E0;
                              if (v385)
                              {
                                if (*v385 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *v385 -= 2;
                                }
                              }
                              unsigned int v391 = v462;
                              unint64_t v462 = 0;
                              if (v391)
                              {
                                if (*(_DWORD *)v391 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *(_DWORD *)v391 -= 2;
                                }
                              }
                              unint64_t v392 = v424 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v424) << 32);
                              unsigned int v443 = v468;
                              v444.n128_u64[0] = v349;
                              v444.n128_u64[1] = v392;
                              unsigned int v445 = 1;
LABEL_824:
                              uint64_t v393 = (uint64_t)v456;
                              if (v456)
                              {
                                uint64_t v394 = *((unsigned int *)v456 - 1);
                                if (v394)
                                {
                                  unint64_t v395 = v456;
                                  do
                                  {
                                    int v396 = *v395;
                                    if (*v395 != (_DWORD *)-1)
                                    {
                                      char *v395 = 0;
                                      if (v396)
                                      {
                                        if (*v396 == 2) {
                                          WTF::StringImpl::destroy();
                                        }
                                        else {
                                          *v396 -= 2;
                                        }
                                      }
                                    }
                                    ++v395;
                                    --v394;
                                  }
                                  while (v394);
                                }
                                WTF::fastFree((WTF *)(v393 - 16), v308);
                              }
                              int v397 = v457;
                              if (v457)
                              {
                                int v457 = 0;
                                LODWORD(v458) = 0;
                                WTF::fastFree(v397, v308);
                              }
LABEL_836:
                              if (v467 != -1) {
                                ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v467])(v439, v465);
                              }
                              uint64_t v398 = v445;
                              if (v445)
                              {
                                if (v445 != 1) {
                                  goto LABEL_917;
                                }
                                uint64_t v399 = v443;
                                if (v443) {
                                  *(_DWORD *)v443 += 2;
                                }
                                __n128 *v159 = v444;
                              }
                              else
                              {
                                uint64_t v399 = v443;
                              }
                              uint64_t v433 = v399;
                              unsigned int v436 = v398;
                              ((void (*)(unsigned char *, const char **))off_1ECABE398[v398])(v439, &v443);
                              uint64_t v185 = v448;
                              if (v448 != -1) {
                                goto LABEL_861;
                              }
                              goto LABEL_862;
                            }
                            unsigned int v356 = *(_DWORD *)(a2 + 36);
                            unsigned int v357 = *(_DWORD *)(a2 + 40) + 1;
                            unint64_t v160 = off_1ECABE5E0;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v357;
                              if (v356 <= v357)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825C0670);
                              }
                              uint64_t v359 = *(void *)(a2 + 24);
                              uint64_t v360 = v359 + 32 * v357;
                              unsigned int v361 = *(_DWORD *)v360;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v360;
                              *unsigned int v38 = *(_OWORD *)(v360 + 4);
                              unsigned int v362 = *(_DWORD *)v360;
                              if (v362 <= 8)
                              {
                                if (((1 << v362) & 0x38) != 0)
                                {
                                  uint64_t v363 = *(_DWORD **)(v359 + 32 * v357 + 24);
                                  goto LABEL_765;
                                }
                                if (((1 << v362) & 0xC4) != 0)
                                {
                                  *unsigned int v39 = *(void *)(v359 + 32 * v357 + 24);
                                }
                                else if (v362 == 8)
                                {
                                  *unsigned int v39 = 0;
                                  uint64_t v363 = *(_DWORD **)(v359 + 32 * v357 + 24);
                                  if (v363) {
                                    *v363 += 2;
                                  }
LABEL_765:
                                  *unsigned int v39 = (uint64_t)v363;
                                }
                              }
                              int v358 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v358;
                              ++v357;
                              if (v361 != 82)
                              {
                                unsigned int v386 = *(void **)(a2 + 8);
                                *(void *)int v439 = v349;
                                *(_DWORD *)&v439[8] = v424;
                                *(_DWORD *)&v439[12] = v358 - v424;
                                LOBYTE(v472) = 0;
                                unsigned int v443 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::Structure,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::StructureMember,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WGSL::AST::StructureRole,void>(v386, v439, (uint64_t)v465, (uint64_t *)&v457, (uint64_t *)&v446, (char *)&v472);
                                unsigned int v445 = 0;
                                goto LABEL_824;
                              }
                              continue;
                            }
                          }
                          continue;
                        }
                        goto LABEL_642;
                      }
                    }
                    continue;
                  }
                }
                unsigned int v176 = *(_DWORD *)(a2 + 36);
                unsigned int v177 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v177;
                  if (v176 <= v177)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825C0588);
                  }
                  uint64_t v179 = *(void *)(a2 + 24);
                  uint64_t v180 = v179 + 32 * v177;
                  unsigned int v181 = *(_DWORD *)v180;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v180;
                  *unsigned int v38 = *(_OWORD *)(v180 + 4);
                  unsigned int v182 = *(_DWORD *)v180;
                  if (v182 <= 8)
                  {
                    if (((1 << v182) & 0x38) != 0)
                    {
                      int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                      goto LABEL_351;
                    }
                    if (((1 << v182) & 0xC4) != 0)
                    {
                      *unsigned int v39 = *(void *)(v179 + 32 * v177 + 24);
                    }
                    else if (v182 == 8)
                    {
                      *unsigned int v39 = 0;
                      int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                      if (v183) {
                        *v183 += 2;
                      }
LABEL_351:
                      *unsigned int v39 = (uint64_t)v183;
                    }
                  }
                  int v178 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v178;
                  ++v177;
                  if (v181 == 82) {
                    continue;
                  }
                  break;
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v439, a2);
                if (v441[0])
                {
                  if (v441[0] != 1) {
                    goto LABEL_917;
                  }
                  int16x8_t v186 = *(const char **)v439;
                  if (*(void *)v439) {
                    **(_DWORD **)v439 += 2;
                  }
                  __n128 v473 = *(__n128 *)&v439[8];
                  v472 = v186;
                  goto LABEL_490;
                }
                if (*(_DWORD *)(a2 + 56) == 49)
                {
                  unsigned int v197 = *(_DWORD *)(a2 + 36);
                  unsigned int v198 = *(_DWORD *)(a2 + 40) + 1;
                  while (1)
                  {
                    *(_DWORD *)(a2 + 40) = v198;
                    if (v197 <= v198)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825C05A0);
                    }
                    uint64_t v200 = *(void *)(a2 + 24);
                    uint64_t v201 = v200 + 32 * v198;
                    unsigned int v202 = *(_DWORD *)v201;
                    *(_DWORD *)(a2 + 56) = *(_DWORD *)v201;
                    *unsigned int v38 = *(_OWORD *)(v201 + 4);
                    unsigned int v203 = *(_DWORD *)v201;
                    if (v203 > 8) {
                      goto LABEL_387;
                    }
                    if (((1 << v203) & 0x38) != 0) {
                      break;
                    }
                    if (((1 << v203) & 0xC4) != 0)
                    {
                      *unsigned int v39 = *(void *)(v200 + 32 * v198 + 24);
                    }
                    else if (v203 == 8)
                    {
                      *unsigned int v39 = 0;
                      v204 = *(_DWORD **)(v200 + 32 * v198 + 24);
                      if (v204) {
                        *v204 += 2;
                      }
                      goto LABEL_396;
                    }
LABEL_387:
                    int v199 = *(_DWORD *)(a2 + 68);
                    *(void *)(a2 + 88) = *(void *)(a2 + 60);
                    *(_DWORD *)(a2 + 96) = v199;
                    ++v198;
                    if (v202 != 82)
                    {
                      WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName((uint64_t)v465, a2);
                      if (v466)
                      {
                        if (v466 != 1) {
                          goto LABEL_917;
                        }
                        int16x8_t v186 = *(const char **)v465;
                        if (*(void *)v465) {
                          **(_DWORD **)v465 += 2;
                        }
                        __n128 v473 = *(__n128 *)&v465[8];
                        v472 = v186;
                        unsigned int v474 = 1;
                        uint64_t v209 = 1;
                        uint64_t v210 = v466;
                        if (v466 != -1) {
                          goto LABEL_722;
                        }
                        goto LABEL_491;
                      }
                      if (*(_DWORD *)(a2 + 56) != 73)
                      {
                        WGSL::toString();
                        WGSL::toString();
                        v468 = "Expected a ";
                        v469.n128_u64[0] = 12;
                        unint64_t v462 = ", but got a ";
                        v463.n128_u64[0] = 13;
                        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v468, (uint64_t *)&v450, (uint64_t)&v462, (uint64_t *)&v446, &v453);
                        if (!v453)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C0630);
                        }
                        uint64_t v250 = v446;
                        unsigned int v446 = 0;
                        if (v250)
                        {
                          if (*v250 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v250 -= 2;
                          }
                        }
                        unsigned int v345 = v450;
                        unint64_t v450 = 0;
                        if (v345)
                        {
                          if (*(_DWORD *)v345 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)v345 -= 2;
                          }
                        }
                        int16x8_t v186 = v453;
                        unint64_t v346 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                        v472 = v453;
                        v473.n128_u64[0] = (unint64_t)v161;
                        v473.n128_u64[1] = v346;
                        unsigned int v474 = 1;
                        uint64_t v209 = 1;
                        uint64_t v210 = v466;
                        if (v466 == -1) {
                          goto LABEL_491;
                        }
                        goto LABEL_722;
                      }
                      unsigned int v211 = *(_DWORD *)(a2 + 36);
                      unsigned int v212 = *(_DWORD *)(a2 + 40) + 1;
                      while (2)
                      {
                        *(_DWORD *)(a2 + 40) = v212;
                        if (v211 <= v212)
                        {
                          __break(0xC471u);
                          JUMPOUT(0x1825C05C0);
                        }
                        uint64_t v214 = *(void *)(a2 + 24);
                        uint64_t v215 = v214 + 32 * v212;
                        unsigned int v216 = *(_DWORD *)v215;
                        *(_DWORD *)(a2 + 56) = *(_DWORD *)v215;
                        *unsigned int v38 = *(_OWORD *)(v215 + 4);
                        unsigned int v217 = *(_DWORD *)v215;
                        if (v217 <= 8)
                        {
                          if (((1 << v217) & 0x38) != 0)
                          {
                            int8x16x2_t v218 = *(_DWORD **)(v214 + 32 * v212 + 24);
                            goto LABEL_429;
                          }
                          if (((1 << v217) & 0xC4) != 0)
                          {
                            *unsigned int v39 = *(void *)(v214 + 32 * v212 + 24);
                          }
                          else if (v217 == 8)
                          {
                            *unsigned int v39 = 0;
                            int8x16x2_t v218 = *(_DWORD **)(v214 + 32 * v212 + 24);
                            if (v218) {
                              *v218 += 2;
                            }
LABEL_429:
                            *unsigned int v39 = (uint64_t)v218;
                          }
                        }
                        int v213 = *(_DWORD *)(a2 + 68);
                        *(void *)(a2 + 88) = *(void *)(a2 + 60);
                        *(_DWORD *)(a2 + 96) = v213;
                        ++v212;
                        if (v216 != 82)
                        {
                          unint64_t v251 = *(void **)(a2 + 8);
                          v468 = v161;
                          v469.n128_u32[0] = v162;
                          v469.n128_u32[1] = v213 - v162;
                          int16x8_t v186 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::TypeAlias,WGSL::SourceSpan,WGSL::AST::Identifier,std::reference_wrapper<WGSL::AST::Expression>,void>(v251, &v468, (uint64_t)v439, (uint64_t *)v465);
                          uint64_t v209 = 0;
                          v472 = v186;
                          unsigned int v474 = 0;
                          uint64_t v210 = v466;
                          if (v466 == -1) {
                            goto LABEL_491;
                          }
LABEL_722:
                          ((void (*)(const char **, unsigned char *))off_1ECABE170[v210])(&v468, v465);
LABEL_491:
                          if (v441[0] != -1) {
                            ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v441[0]])(v465, v439);
                          }
                          if (v209)
                          {
                            if (v186) {
                              *(_DWORD *)v186 += 2;
                            }
                            __n128 *v159 = v473;
                          }
                          uint64_t v433 = v186;
                          unsigned int v436 = v209;
                          ((void (*)(unsigned char *, const char **))off_1ECABE5E0[v209])(v439, &v472);
                          goto LABEL_862;
                        }
                        continue;
                      }
                    }
                  }
                  v204 = *(_DWORD **)(v200 + 32 * v198 + 24);
LABEL_396:
                  *unsigned int v39 = (uint64_t)v204;
                  goto LABEL_387;
                }
                WGSL::toString();
                WGSL::toString();
                *(void *)long long v465 = "Expected a ";
                *(void *)&v465[8] = 12;
                v468 = ", but got a ";
                v469.n128_u64[0] = 13;
                WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v465, (uint64_t *)&v453, (uint64_t)&v468, (uint64_t *)&v450, &v462);
                if (!v462)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825C0628);
                }
                unsigned int v207 = v450;
                unint64_t v450 = 0;
                if (v207)
                {
                  if (*(_DWORD *)v207 != 2)
                  {
                    *(_DWORD *)v207 -= 2;
                    goto LABEL_407;
                  }
                  WTF::StringImpl::destroy();
                  unsigned int v208 = v453;
                  v453 = 0;
                  if (v208)
                  {
LABEL_486:
                    if (*(_DWORD *)v208 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *(_DWORD *)v208 -= 2;
                    }
                  }
                }
                else
                {
LABEL_407:
                  unsigned int v208 = v453;
                  v453 = 0;
                  if (v208) {
                    goto LABEL_486;
                  }
                }
                int16x8_t v186 = v462;
                unint64_t v249 = v162 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v162) << 32);
                v472 = v462;
                v473.n128_u64[0] = (unint64_t)v161;
                v473.n128_u64[1] = v249;
LABEL_490:
                unsigned int v474 = 1;
                uint64_t v209 = 1;
                goto LABEL_491;
              }
              unsigned int v167 = *(_DWORD *)(a2 + 36);
              unsigned int v168 = *(_DWORD *)(a2 + 40) + 1;
LABEL_326:
              *(_DWORD *)(a2 + 40) = v168;
              if (v167 <= v168)
              {
                __break(0xC471u);
                JUMPOUT(0x1825C0568);
              }
              uint64_t v170 = *(void *)(a2 + 24);
              uint64_t v171 = v170 + 32 * v168;
              unsigned int v40 = *(_DWORD *)v171;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v171;
              *unsigned int v38 = *(_OWORD *)(v171 + 4);
              unsigned int v172 = *(_DWORD *)v171;
              if (v172 <= 8)
              {
                if (((1 << v172) & 0x38) != 0)
                {
                  int8x16_t v173 = *(_DWORD **)(v170 + 32 * v168 + 24);
                  goto LABEL_334;
                }
                if (((1 << v172) & 0xC4) != 0)
                {
                  *unsigned int v39 = *(void *)(v170 + 32 * v168 + 24);
                }
                else if (v172 == 8)
                {
                  *unsigned int v39 = 0;
                  int8x16_t v173 = *(_DWORD **)(v170 + 32 * v168 + 24);
                  if (v173) {
                    *v173 += 2;
                  }
LABEL_334:
                  *unsigned int v39 = (uint64_t)v173;
                }
              }
              int v169 = *(_DWORD *)(a2 + 68);
              result.n128_u64[0] = *(void *)(a2 + 60);
              *(void *)(a2 + 88) = result.n128_u64[0];
              *(_DWORD *)(a2 + 96) = v169;
              ++v168;
              if (v40 != 82) {
                continue;
              }
              goto LABEL_326;
            }
          }
          uint64_t v72 = *(void *)(a2 + 88);
          uint64_t v73 = *(unsigned int *)(a2 + 96);
          unsigned int v74 = *(_DWORD *)(a2 + 36);
          unsigned int v75 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v75;
            if (v74 <= v75)
            {
              __break(0xC471u);
              JUMPOUT(0x1825C0548);
            }
            uint64_t v77 = *(void *)(a2 + 24);
            uint64_t v78 = v77 + 32 * v75;
            unsigned int v79 = *(_DWORD *)v78;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v78;
            *unsigned int v38 = *(_OWORD *)(v78 + 4);
            unsigned int v80 = *(_DWORD *)v78;
            if (v80 <= 8)
            {
              if (((1 << v80) & 0x38) != 0)
              {
                int v81 = *(_DWORD **)(v77 + 32 * v75 + 24);
                goto LABEL_148;
              }
              if (((1 << v80) & 0xC4) != 0)
              {
                *unsigned int v39 = *(void *)(v77 + 32 * v75 + 24);
              }
              else if (v80 == 8)
              {
                *unsigned int v39 = 0;
                int v81 = *(_DWORD **)(v77 + 32 * v75 + 24);
                if (v81) {
                  *v81 += 2;
                }
LABEL_148:
                *unsigned int v39 = (uint64_t)v81;
              }
            }
            int v76 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v76;
            ++v75;
            if (v79 == 82) {
              continue;
            }
            break;
          }
          while (2)
          {
            if (v79 != 8)
            {
              *(_DWORD *)int v439 = v79;
              v441[0] = 1;
              WGSL::toString();
              if (v441[0] != 1) {
                goto LABEL_917;
              }
              WGSL::toString();
              v472 = "Expected a ";
              v473.n128_u64[0] = 12;
              v468 = ", but got a ";
              v469.n128_u64[0] = 13;
              WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v472, (uint64_t *)&v453, (uint64_t)&v468, (uint64_t *)&v450, &v462);
              if (!v462)
              {
                __break(0xC471u);
                JUMPOUT(0x1825C0580);
              }
              uint64_t v127 = v450;
              unint64_t v450 = 0;
              if (v127)
              {
                if (*(_DWORD *)v127 == 2)
                {
                  WTF::StringImpl::destroy();
                  unsigned int v128 = v453;
                  v453 = 0;
                  if (!v128)
                  {
LABEL_244:
                    unint64_t v133 = v73 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v73) << 32);
                    *(void *)long long v465 = v462;
                    goto LABEL_256;
                  }
LABEL_241:
                  if (*(_DWORD *)v128 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *(_DWORD *)v128 -= 2;
                  }
                  goto LABEL_244;
                }
                *(_DWORD *)v127 -= 2;
              }
              unsigned int v128 = v453;
              v453 = 0;
              if (!v128) {
                goto LABEL_244;
              }
              goto LABEL_241;
            }
            *(_DWORD *)int v439 = 8;
            *(_OWORD *)&v439[4] = *v38;
            uint64_t v117 = *v39;
            if (*v39) {
              *(_DWORD *)v117 += 2;
            }
            uint64_t v440 = v117;
            v441[0] = 0;
            unsigned int v118 = *(_DWORD *)(a2 + 36);
            LODWORD(v119) = *(_DWORD *)(a2 + 40);
            unsigned int v120 = v119 + 2;
            while (2)
            {
              uint64_t v119 = (v119 + 1);
              *(_DWORD *)(a2 + 40) = v119;
              if (v118 <= v119)
              {
                __break(0xC471u);
                JUMPOUT(0x1825C0528);
              }
              unsigned int v112 = v120;
              uint64_t v122 = *(void *)(a2 + 24);
              uint64_t v123 = v122 + 32 * v119;
              unsigned int v124 = *(_DWORD *)v123;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v123;
              *unsigned int v38 = *(_OWORD *)(v123 + 4);
              unsigned int v125 = *(_DWORD *)v123;
              if (v125 <= 8)
              {
                if (((1 << v125) & 0x38) != 0)
                {
                  int v126 = *(_DWORD **)(v122 + 32 * v119 + 24);
                  goto LABEL_225;
                }
                if (((1 << v125) & 0xC4) != 0)
                {
                  *unsigned int v39 = *(void *)(v122 + 32 * v119 + 24);
                }
                else if (v125 == 8)
                {
                  *unsigned int v39 = 0;
                  int v126 = *(_DWORD **)(v122 + 32 * v119 + 24);
                  if (v126) {
                    *v126 += 2;
                  }
LABEL_225:
                  *unsigned int v39 = (uint64_t)v126;
                }
              }
              int v121 = *(_DWORD *)(a2 + 68);
              result.n128_u64[0] = *(void *)(a2 + 60);
              *(void *)(a2 + 88) = result.n128_u64[0];
              *(_DWORD *)(a2 + 96) = v121;
              unsigned int v120 = v112 + 1;
              if (v124 == 82) {
                continue;
              }
              break;
            }
            if (!v117) {
              goto LABEL_255;
            }
            uint64_t v129 = *(void *)(v117 + 8);
            int v130 = *(_DWORD *)(v117 + 4);
            if ((char *)v129 == "f16" || v130 != 3)
            {
              BOOL v135 = (char *)v129 == "f16" && v130 == 3;
              if (v135)
              {
                unint64_t v109 = &(&WGSL::parseExtension(WTF::String const&)::__entries)[3 * !v135];
                goto LABEL_197;
              }
            }
            else
            {
              if ((*(unsigned char *)(v117 + 16) & 4) == 0)
              {
                if (*(_WORD *)v129 != 102) {
                  goto LABEL_255;
                }
                int v131 = *(_DWORD *)(v129 + 2);
                BOOL v12 = v131 == 3538993;
                BOOL v132 = v131 != 3538993;
                if (!v12) {
                  goto LABEL_255;
                }
LABEL_196:
                unint64_t v109 = &(&WGSL::parseExtension(WTF::String const&)::__entries)[3 * v132];
LABEL_197:
                *(unsigned char *)(*(void *)a2 + 32) |= *((unsigned char *)v109 + 16);
                if (v124 != 48)
                {
                  int v110 = 4;
                  goto LABEL_257;
                }
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v112;
                  if (v118 <= v112)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825C0550);
                  }
                  uint64_t v113 = v122 + 32 * v112;
                  unsigned int v114 = *(_DWORD *)v113;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v113;
                  *unsigned int v38 = *(_OWORD *)(v113 + 4);
                  unsigned int v115 = *(_DWORD *)v113;
                  if (v115 <= 8)
                  {
                    if (((1 << v115) & 0x38) != 0)
                    {
                      int v116 = *(_DWORD **)(v122 + 32 * v112 + 24);
                      goto LABEL_209;
                    }
                    if (((1 << v115) & 0xC4) != 0)
                    {
                      *unsigned int v39 = *(void *)(v122 + 32 * v112 + 24);
                    }
                    else if (v115 == 8)
                    {
                      *unsigned int v39 = 0;
                      int v116 = *(_DWORD **)(v122 + 32 * v112 + 24);
                      if (v116) {
                        *v116 += 2;
                      }
LABEL_209:
                      *unsigned int v39 = (uint64_t)v116;
                    }
                  }
                  int v111 = *(_DWORD *)(a2 + 68);
                  result.n128_u64[0] = *(void *)(a2 + 60);
                  *(void *)(a2 + 88) = result.n128_u64[0];
                  *(_DWORD *)(a2 + 96) = v111;
                  ++v112;
                  if (v114 != 82)
                  {
                    int v110 = 0;
                    goto LABEL_257;
                  }
                  continue;
                }
              }
              if (*(unsigned char *)v129 == 102)
              {
                int v136 = *(unsigned __int16 *)(v129 + 1);
                BOOL v12 = v136 == 13873;
                BOOL v132 = v136 != 13873;
                if (v12) {
                  goto LABEL_196;
                }
              }
            }
LABEL_255:
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            unint64_t v133 = v73 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v73) << 32);
LABEL_256:
            *(void *)&v465[8] = v72;
            *(void *)&v465[16] = v133;
            int v110 = 1;
            LOBYTE(v466) = 1;
LABEL_257:
            if (v441[0] != -1) {
              ((void (*)(const char **, unsigned char *))off_1ECABDF90[v441[0]])(&v472, v439);
            }
            if (!v110)
            {
              unsigned int v79 = *(_DWORD *)(a2 + 56);
              if (v79 != 73) {
                continue;
              }
LABEL_264:
              unsigned int v137 = *(_DWORD *)(a2 + 36);
              unsigned int v138 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v138;
                if (v137 <= v138)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825C0558);
                }
                uint64_t v140 = *(void *)(a2 + 24);
                uint64_t v141 = v140 + 32 * v138;
                unsigned int v142 = *(_DWORD *)v141;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v141;
                *unsigned int v38 = *(_OWORD *)(v141 + 4);
                unsigned int v143 = *(_DWORD *)v141;
                if (v143 <= 8)
                {
                  if (((1 << v143) & 0x38) != 0)
                  {
                    int v144 = *(_DWORD **)(v140 + 32 * v138 + 24);
                    goto LABEL_275;
                  }
                  if (((1 << v143) & 0xC4) != 0)
                  {
                    *unsigned int v39 = *(void *)(v140 + 32 * v138 + 24);
                  }
                  else if (v143 == 8)
                  {
                    *unsigned int v39 = 0;
                    int v144 = *(_DWORD **)(v140 + 32 * v138 + 24);
                    if (v144) {
                      *v144 += 2;
                    }
LABEL_275:
                    *unsigned int v39 = (uint64_t)v144;
                  }
                }
                int v139 = *(_DWORD *)(a2 + 68);
                result.n128_u64[0] = *(void *)(a2 + 60);
                *(void *)(a2 + 88) = result.n128_u64[0];
                *(_DWORD *)(a2 + 96) = v139;
                ++v138;
                if (v142 != 82) {
                  goto LABEL_72;
                }
                continue;
              }
            }
            break;
          }
          if (v110 != 4)
          {
            if ((_BYTE)v466)
            {
              int8x16x2_t v416 = *(char **)v465;
              goto LABEL_905;
            }
            continue;
          }
          break;
        }
        if (*(_DWORD *)(a2 + 56) == 73) {
          goto LABEL_264;
        }
        WGSL::toString();
        WGSL::toString();
        *(void *)int v439 = "Expected a ";
        *(void *)&v439[8] = 12;
        v472 = ", but got a ";
        v473.n128_u64[0] = 13;
        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v439, (uint64_t *)&v446, (uint64_t)&v472, (uint64_t *)&v443, &v468);
        if (!v468)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C0690);
        }
        int v412 = v443;
        unsigned int v443 = 0;
        if (v412)
        {
          if (*(_DWORD *)v412 != 2)
          {
            *(_DWORD *)v412 -= 2;
            goto LABEL_892;
          }
          WTF::StringImpl::destroy();
          int8x16x2_t v413 = v446;
          unsigned int v446 = 0;
          if (v413)
          {
LABEL_901:
            if (*v413 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v413 -= 2;
            }
          }
        }
        else
        {
LABEL_892:
          int8x16x2_t v413 = v446;
          unsigned int v446 = 0;
          if (v413) {
            goto LABEL_901;
          }
        }
        unint64_t v417 = v73 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v73) << 32);
        int8x16x2_t v416 = (char *)v468;
        *(void *)&v465[8] = v72;
        *(void *)&v465[16] = v417;
        LOBYTE(v466) = 1;
LABEL_905:
        if (!v416) {
          goto LABEL_916;
        }
LABEL_906:
        int v418 = *(_DWORD *)v416;
        *(_DWORD *)v416 += 2;
        __n128 result = *(__n128 *)&v465[8];
        __n128 *v431 = *(__n128 *)&v465[8];
        *(void *)a1 = v416;
        *(unsigned char *)(a1 + 24) = 1;
        *(void *)long long v465 = 0;
        if (v418) {
          *(_DWORD *)int8x16x2_t v416 = v418;
        }
        else {
          WTF::StringImpl::destroy();
        }
        return result;
      case 0x25:
      case 0x41:
        uint64_t v23 = *(void *)&v439[8];
        if (*(void *)v439 != *(void *)&v439[8])
        {
          while (1)
          {
            if (v23)
            {
              --v23;
              if (*(_DWORD *)(*(void *)&v439[16] + 16 * v23 + 8) != v6) {
                goto LABEL_6;
              }
            }
            else
            {
              uint64_t v23 = v440 - 1;
              if (*(_DWORD *)(*(void *)&v439[16] + 16 * v23 + 8) != v6) {
                goto LABEL_6;
              }
            }
            *(void *)&v439[8] = v23;
            if (*(void *)v439 == v23) {
              goto LABEL_6;
            }
          }
        }
        goto LABEL_6;
      case 0x2B:
      case 0x2F:
      case 0x31:
      case 0x49:
        *(void *)int v439 = 0;
        *(void *)&v439[8] = 0;
        unint64_t v11 = *(WTF **)&v439[16];
        BOOL v12 = v441 == *(_DWORD **)&v439[16] || *(void *)&v439[16] == 0;
        if (!v12)
        {
          *(void *)&v439[16] = 0;
          LODWORD(v440) = 0;
          WTF::fastFree(v11, (void *)a2);
        }
        int v6 = 0;
        goto LABEL_6;
      case 0x2D:
      case 0x43:
        ++v6;
        goto LABEL_6;
      case 0x2E:
      case 0x44:
        for (uint64_t i = *(void *)&v439[8]; *(void *)v439 != i; *(void *)&v439[8] = i)
        {
          if (i)
          {
            --i;
            if (*(_DWORD *)(*(void *)&v439[16] + 16 * i + 8) != v6) {
              break;
            }
          }
          else
          {
            uint64_t i = v440 - 1;
            if (*(_DWORD *)(*(void *)&v439[16] + 16 * i + 8) != v6) {
              break;
            }
          }
        }
        if (v6) {
          --v6;
        }
        else {
          int v6 = 0;
        }
        goto LABEL_6;
      case 0x33:
      case 0x34:
      case 0x35:
      case 0x36:
        uint64_t v13 = *(void *)&v439[8];
        if (*(void *)v439 != *(void *)&v439[8])
        {
          uint64_t v14 = v440;
          if (*(void *)&v439[8]) {
            uint64_t v14 = *(void *)&v439[8];
          }
          uint64_t v15 = v14 - 1;
          uint64_t v16 = *(void *)&v439[16];
          if (*(_DWORD *)(*(void *)&v439[16] + 16 * v15 + 8) == v6)
          {
            if (v8 <= v7)
            {
              __break(0xC471u);
              JUMPOUT(0x1825C05F0);
            }
            unint64_t v17 = (_DWORD *)(v9 + 32 * v7);
            unsigned int v18 = *v17 - 52;
            if (v18 <= 2)
            {
              int v19 = dword_1826CF660[v18];
              *unint64_t v17 = 51;
              v17[8] = v19;
              uint64_t v20 = v440;
              if (v13) {
                uint64_t v20 = v13;
              }
              uint64_t v15 = v20 - 1;
            }
            uint64_t v21 = *(_DWORD **)(v16 + 16 * v15);
            *(void *)&v439[8] = v15;
            *uint64_t v21 = 83;
            *unint64_t v10 = 84;
          }
        }
        goto LABEL_6;
      default:
        goto LABEL_6;
    }
  }
}

_DWORD *WGSL::Parser<WGSL::Lexer<char16_t>>::parseConstAssert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 14)
  {
    WGSL::toString();
    WGSL::toString();
    uint64_t v35 = "Expected a ";
    *(void *)&long long v36 = 12;
    *(void *)&long long v41 = ", but got a ";
    *((void *)&v41 + 1) = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v35, (uint64_t *)&v39, (uint64_t)&v41, (uint64_t *)&v38, v40);
    if (!v40[0])
    {
      __break(0xC471u);
      JUMPOUT(0x1825C0BF4);
    }
    uint64_t v15 = v38;
    unsigned int v38 = 0;
    if (v15)
    {
      if (*v15 == 2)
      {
        WTF::StringImpl::destroy();
        __n128 result = v39;
        unsigned int v39 = 0;
        if (!result)
        {
LABEL_42:
          unint64_t v27 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v40[0];
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v27;
          *(_DWORD *)(a1 + 24) = 1;
          return result;
        }
LABEL_39:
        if (*result == 2) {
          __n128 result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_42;
      }
      *v15 -= 2;
    }
    __n128 result = v39;
    unsigned int v39 = 0;
    if (!result) {
      goto LABEL_42;
    }
    goto LABEL_39;
  }
  int v6 = (_OWORD *)(a2 + 60);
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v8;
    if (v7 <= v8) {
      goto LABEL_59;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = v10 + 32 * v8;
    unsigned int v12 = *(_DWORD *)v11;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v11;
    *int v6 = *(_OWORD *)(v11 + 4);
    unsigned int v13 = *(_DWORD *)v11;
    if (v13 <= 8)
    {
      if (((1 << v13) & 0x38) != 0)
      {
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v14;
        goto LABEL_4;
      }
      if (((1 << v13) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v10 + 32 * v8 + 24);
        goto LABEL_4;
      }
      if (v13 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
        if (v14) {
          *v14 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v9 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v9;
    ++v8;
  }
  while (v12 == 82);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v35, a2);
  uint64_t v17 = v37;
  if (v37)
  {
    if (v37 == 1)
    {
      unsigned int v18 = v35;
      if (v35) {
        *(_DWORD *)v35 += 2;
      }
      *(_OWORD *)(a1 + 8) = v36;
      *(void *)a1 = v18;
LABEL_56:
      *(_DWORD *)(a1 + 24) = 1;
      return (_DWORD *)((uint64_t (*)(long long *, const char **))off_1ECABE170[v17])(&v41, &v35);
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_59:
    __break(0xC471u);
LABEL_63:
    JUMPOUT(0x1825C0BE4);
  }
  if (*(_DWORD *)(a2 + 56) != 73)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)&long long v41 = "Expected a ";
    *((void *)&v41 + 1) = 12;
    v40[0] = ", but got a ";
    v40[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v41, (uint64_t *)&v33, (uint64_t)v40, (uint64_t *)&v32, &v34);
    if (!v34)
    {
      __break(0xC471u);
      goto LABEL_63;
    }
    uint64_t v28 = v32;
    int v32 = 0;
    if (v28)
    {
      if (*v28 == 2)
      {
        WTF::StringImpl::destroy();
        int v29 = v33;
        uint64_t v33 = 0;
        if (!v29)
        {
LABEL_55:
          unint64_t v31 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v34;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v31;
          goto LABEL_56;
        }
LABEL_52:
        if (*v29 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v29 -= 2;
        }
        goto LABEL_55;
      }
      *v28 -= 2;
    }
    int v29 = v33;
    uint64_t v33 = 0;
    if (!v29) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
  unsigned int v19 = *(_DWORD *)(a2 + 36);
  unsigned int v20 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v20;
    if (v19 <= v20)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C0BECLL);
    }
    uint64_t v22 = *(void *)(a2 + 24);
    uint64_t v23 = v22 + 32 * v20;
    unsigned int v24 = *(_DWORD *)v23;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v23;
    *int v6 = *(_OWORD *)(v23 + 4);
    unsigned int v25 = *(_DWORD *)v23;
    if (v25 <= 8)
    {
      if (((1 << v25) & 0x38) != 0)
      {
        uint64_t v26 = *(_DWORD **)(v22 + 32 * v20 + 24);
LABEL_37:
        *(void *)(a2 + 80) = v26;
        goto LABEL_28;
      }
      if (((1 << v25) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v22 + 32 * v20 + 24);
        goto LABEL_28;
      }
      if (v25 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v26 = *(_DWORD **)(v22 + 32 * v20 + 24);
        if (v26) {
          *v26 += 2;
        }
        goto LABEL_37;
      }
    }
LABEL_28:
    int v21 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v21;
    ++v20;
  }
  while (v24 == 82);
  unint64_t v30 = *(void **)(a2 + 8);
  *(void *)&long long v41 = v4;
  DWORD2(v41) = v5;
  HIDWORD(v41) = v21 - v5;
  __n128 result = WGSL::AST::Builder::construct<WGSL::AST::ConstAssert,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v30, &v41, &v35);
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 24) = 0;
  if (v17 != -1) {
    return (_DWORD *)((uint64_t (*)(long long *, const char **))off_1ECABE170[v17])(&v41, &v35);
  }
  return result;
}

void *WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(void *result, uint64_t a2)
{
  uint64_t v3 = (WTF **)result;
  uint64_t v4 = 0;
  unsigned int v5 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v6 = result + 1;
  do
  {
    if (*(_DWORD *)(a2 + 56) != 40)
    {
      *uint64_t v3 = v4;
      *((_DWORD *)v3 + 2) = v17;
      *((_DWORD *)v3 + 3) = v5;
      *((_DWORD *)v3 + 6) = 0;
      return result;
    }
    __n128 result = WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttribute((uint64_t)&v13, a2);
    unsigned int v8 = v15;
    if (v15)
    {
      if (v15 != 1)
      {
        uint64_t v12 = std::__throw_bad_variant_access[abi:sn180100]();
        return (void *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableWithAttributes(v12);
      }
      int v9 = v13;
      if (v13) {
        *(_DWORD *)v13 += 2;
      }
      *int v6 = v14;
      *uint64_t v3 = v9;
      *((_DWORD *)v3 + 6) = 1;
      uint64_t v10 = v15;
      if (v15 != -1) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v5 != v17)
      {
        *((void *)v4 + v5++) = v13;
        HIDWORD(v17) = v5;
        uint64_t v10 = v15;
        if (v15 == -1) {
          continue;
        }
LABEL_14:
        __n128 result = (void *)((uint64_t (*)(char *, WTF **))off_1ECABE378[v10])(&v18, &v13);
        continue;
      }
      __n128 result = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v16, v5 + 1, (unint64_t)&v13);
      int v11 = HIDWORD(v17);
      uint64_t v4 = v16;
      *((void *)v16 + HIDWORD(v17)) = *result;
      unsigned int v5 = v11 + 1;
      HIDWORD(v17) = v11 + 1;
      uint64_t v10 = v15;
      if (v15 != -1) {
        goto LABEL_14;
      }
    }
  }
  while (!v8);
  __n128 result = v16;
  if (v16) {
    return (void *)WTF::fastFree(v16, v7);
  }
  return result;
}

uint64_t WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableWithAttributes(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = *(unsigned int *)(a2 + 96);
  uint64_t v7 = *(unsigned int *)(a2 + 56);
  *(_OWORD *)unsigned int v146 = *(_OWORD *)(a2 + 60);
  if (v7 > 0x22) {
    goto LABEL_24;
  }
  if (((1 << v7) & 0x414002000) == 0)
  {
    if (v7 == 8)
    {
      unsigned int v19 = *(int **)(a2 + 80);
      if (v19)
      {
        int v20 = *v19;
        *v19 += 2;
        int v135 = 8;
        int v137 = 1;
        if (v20) {
          *unsigned int v19 = v20;
        }
        else {
          WTF::StringImpl::destroy();
        }
LABEL_72:
        memset(v146, 0, 20);
        v146[20] = 1;
        WTF::StringBuilder::append();
        WGSL::toString();
        unsigned int v138 = v130;
        *(void *)uint64_t v141 = ", ";
        *(_DWORD *)&v141[8] = 2;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((WTF::StringBuilder *)v146, (uint64_t *)&v138, (uint64_t)v141);
        int v45 = v130;
        int v130 = 0;
        if (v45)
        {
          if (*(_DWORD *)v45 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *(_DWORD *)v45 -= 2;
          }
        }
        WGSL::TemplateTypes<(WGSL::TokenType)28,(WGSL::TokenType)26,(WGSL::TokenType)34>::appendNameTo((uint64_t)v146);
        WGSL::toString();
        *(void *)uint64_t v141 = "], but got a ";
        *(_DWORD *)&v141[8] = 13;
        unsigned int v138 = v130;
        WTF::StringBuilder::appendFromAdapters<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WGSL::AST::Identifier,void>>((WTF::StringBuilder *)v146, (unint64_t *)v141, (uint64_t *)&v138);
        uint64_t v46 = v130;
        int v130 = 0;
        if (v46)
        {
          if (*(_DWORD *)v46 == 2)
          {
            WTF::StringImpl::destroy();
            uint64_t v47 = *(_DWORD **)v146;
            if (!*(void *)v146) {
              goto LABEL_82;
            }
            goto LABEL_83;
          }
          *(_DWORD *)v46 -= 2;
        }
        uint64_t v47 = *(_DWORD **)v146;
        if (!*(void *)v146)
        {
LABEL_82:
          WTF::StringBuilder::shrinkToFit((WTF::StringBuilder *)v146);
          WTF::StringBuilder::reifyString((WTF::StringBuilder *)v146);
          uint64_t v47 = *(_DWORD **)v146;
          if (!*(void *)v146) {
            goto LABEL_84;
          }
        }
LABEL_83:
        *v47 += 2;
LABEL_84:
        unint64_t v48 = v6 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v6) << 32);
        *(void *)a1 = v47;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = v48;
        *(_DWORD *)(a1 + 24) = 1;
        unsigned int v49 = *(_DWORD **)&v146[8];
        *(void *)&v146[8] = 0;
        if (v49)
        {
          if (*v49 == 2)
          {
            WTF::StringImpl::destroy();
            unint64_t v50 = *(_DWORD **)v146;
            *(void *)unsigned int v146 = 0;
            if (!v50)
            {
LABEL_92:
              uint64_t v51 = 1;
              return ((uint64_t (*)(unsigned char *, int *))off_1ECABDF90[v51])(v146, &v135);
            }
LABEL_90:
            if (*v50 == 2)
            {
              WTF::StringImpl::destroy();
              uint64_t v51 = 1;
              return ((uint64_t (*)(unsigned char *, int *))off_1ECABDF90[v51])(v146, &v135);
            }
            *v50 -= 2;
            goto LABEL_92;
          }
          *v49 -= 2;
        }
        unint64_t v50 = *(_DWORD **)v146;
        *(void *)unsigned int v146 = 0;
        if (!v50) {
          goto LABEL_92;
        }
        goto LABEL_90;
      }
    }
LABEL_24:
    int v135 = v7;
    int v137 = 1;
    goto LABEL_72;
  }
  int v9 = (_OWORD *)(a2 + 60);
  unsigned int v10 = *(_DWORD *)(a2 + 36);
  unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v11;
    if (v10 <= v11)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2068);
    }
    uint64_t v13 = *(void *)(a2 + 24);
    uint64_t v14 = v13 + 32 * v11;
    unsigned int v15 = *(_DWORD *)v14;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
    *int v9 = *(_OWORD *)(v14 + 4);
    unsigned int v16 = *(_DWORD *)v14;
    if (v16 <= 8)
    {
      if (((1 << v16) & 0x38) != 0)
      {
        uint64_t v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_14:
        *(void *)(a2 + 80) = v17;
        goto LABEL_5;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
        goto LABEL_5;
      }
      if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_14;
      }
    }
LABEL_5:
    int v12 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v12;
    ++v11;
  }
  while (v15 == 82);
  int v135 = v7;
  long long v136 = *(_OWORD *)v146;
  int v137 = 0;
  switch(v7)
  {
    case 0xD:
      int v18 = 0;
      char v127 = 1;
      char v134 = 0;
      unint64_t v133 = 0;
      if (*(_DWORD *)(a2 + 56) == 83) {
        goto LABEL_26;
      }
      goto LABEL_54;
    case 0x1C:
      char v127 = 0;
      int v18 = 2;
      char v134 = 2;
      unint64_t v133 = 0;
      if (*(_DWORD *)(a2 + 56) == 83) {
        goto LABEL_26;
      }
      goto LABEL_54;
    case 0x1A:
      char v127 = 1;
      int v18 = 1;
      char v134 = 1;
      unint64_t v133 = 0;
      if (*(_DWORD *)(a2 + 56) == 83) {
        goto LABEL_26;
      }
LABEL_54:
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v146, a2);
      unsigned int v38 = v148;
      if (!v148) {
        goto LABEL_198;
      }
LABEL_55:
      if (v38 == 1)
      {
        uint64_t v39 = *(void *)v146;
        if (*(void *)v146) {
          **(_DWORD **)v146 += 2;
        }
        *(_OWORD *)(a1 + 8) = *(_OWORD *)&v146[8];
        *(void *)a1 = v39;
        int v40 = 1;
        *(_DWORD *)(a1 + 24) = 1;
        goto LABEL_59;
      }
      goto LABEL_275;
  }
  char v127 = 0;
  int v18 = 3;
  char v134 = 3;
  unint64_t v133 = 0;
  if (*(_DWORD *)(a2 + 56) != 83) {
    goto LABEL_54;
  }
LABEL_26:
  uint64_t v21 = *(void *)(a2 + 88);
  uint64_t v22 = *(unsigned int *)(a2 + 96);
  unsigned int v23 = *(_DWORD *)(a2 + 36);
  unsigned int v24 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v24;
    if (v23 <= v24)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2070);
    }
    uint64_t v26 = *(void *)(a2 + 24);
    uint64_t v27 = v26 + 32 * v24;
    unsigned int v28 = *(_DWORD *)v27;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v27;
    *int v9 = *(_OWORD *)(v27 + 4);
    unsigned int v29 = *(_DWORD *)v27;
    if (v29 <= 8)
    {
      if (((1 << v29) & 0x38) != 0)
      {
        unint64_t v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
        goto LABEL_37;
      }
      if (((1 << v29) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v26 + 32 * v24 + 24);
      }
      else if (v29 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unint64_t v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
        if (v30) {
          *v30 += 2;
        }
LABEL_37:
        *(void *)(a2 + 80) = v30;
      }
    }
    uint64_t v25 = *(unsigned int *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v25;
    ++v24;
    if (v28 == 82) {
      continue;
    }
    break;
  }
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v125 = v22;
  uint64_t v126 = v21;
  if (v28 != 8)
  {
    *(_DWORD *)unsigned int v146 = v28;
    unsigned int v148 = 1;
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v141 = "Expected a ";
    *(void *)&v141[8] = 12;
    unsigned int v138 = ", but got a ";
    *(void *)&long long v139 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v141, v149, (uint64_t)&v138, (uint64_t *)&v145, v150);
    if (!v150[0])
    {
      __break(0xC471u);
      JUMPOUT(0x1825C20A8);
    }
    long long v41 = v145;
    int v145 = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t v42 = (_DWORD *)v149[0];
        v149[0] = 0;
        if (!v42)
        {
LABEL_98:
          unint64_t v44 = v25 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v25) << 32);
          *(void *)uint64_t v141 = v150[0];
LABEL_99:
          *(void *)&v141[8] = v31;
          *(void *)&v141[16] = v44;
          int v52 = 1;
          int v142 = 1;
          uint64_t v53 = v148;
          if (v148 == -1) {
            goto LABEL_101;
          }
          goto LABEL_100;
        }
LABEL_95:
        if (*v42 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v42 -= 2;
        }
        goto LABEL_98;
      }
      *(_DWORD *)v41 -= 2;
    }
    uint64_t v42 = (_DWORD *)v149[0];
    v149[0] = 0;
    if (!v42) {
      goto LABEL_98;
    }
    goto LABEL_95;
  }
  *(_DWORD *)unsigned int v146 = 8;
  *(_OWORD *)&v146[4] = *v9;
  int v32 = *(_DWORD **)(a2 + 80);
  if (v32) {
    *v32 += 2;
  }
  long long v147 = v32;
  unsigned int v148 = 0;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v24;
    if (v23 <= v24)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2078);
    }
    uint64_t v34 = v26 + 32 * v24;
    unsigned int v35 = *(_DWORD *)v34;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v34;
    *int v9 = *(_OWORD *)(v34 + 4);
    unsigned int v36 = *(_DWORD *)v34;
    if (v36 <= 8)
    {
      if (((1 << v36) & 0x38) != 0)
      {
        unsigned int v37 = *(_DWORD **)(v26 + 32 * v24 + 24);
        goto LABEL_52;
      }
      if (((1 << v36) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v26 + 32 * v24 + 24);
      }
      else if (v36 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v37 = *(_DWORD **)(v26 + 32 * v24 + 24);
        if (v37) {
          *v37 += 2;
        }
LABEL_52:
        *(void *)(a2 + 80) = v37;
      }
    }
    int v33 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v33;
    ++v24;
    if (v35 == 82) {
      continue;
    }
    break;
  }
  unsigned int v43 = WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WGSL::AddressSpace> [6]>::tryGet<WTF::String>((unsigned __int8 ***)WGSL::parseAddressSpace(WTF::String const&)::__map, (uint64_t *)&v147);
  if (!v43 || *(unsigned char *)v43 == 1)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v44 = v25 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v25) << 32);
    goto LABEL_99;
  }
  int v52 = 0;
  v141[0] = *(unsigned char *)v43;
  int v142 = 0;
  uint64_t v53 = v148;
  if (v148 != -1)
  {
LABEL_100:
    ((void (*)(const char **, unsigned char *))off_1ECABDF90[v53])(&v138, v146);
    int v52 = v142;
  }
LABEL_101:
  if (v52)
  {
    if (v52 != 1) {
      goto LABEL_275;
    }
    unsigned int v54 = *(const char **)v141;
    if (*(void *)v141) {
      **(_DWORD **)v141 += 2;
    }
    long long v131 = *(_OWORD *)&v141[8];
    int v130 = v54;
    int v55 = 1;
    int v132 = 1;
    goto LABEL_191;
  }
  int v56 = *(_DWORD *)(a2 + 56);
  if (v56 != 48)
  {
    if (v141[0] >= 5u) {
      char v65 = 1;
    }
    else {
      char v65 = 0x10001uLL >> (8 * v141[0]);
    }
    LOBYTE(v144) = v65;
    if (v56 != 84) {
      goto LABEL_180;
    }
LABEL_124:
    unsigned int v66 = *(_DWORD *)(a2 + 36);
    unsigned int v67 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v67;
      if (v66 <= v67)
      {
        __break(0xC471u);
        JUMPOUT(0x1825C2090);
      }
      uint64_t v69 = *(void *)(a2 + 24);
      uint64_t v70 = v69 + 32 * v67;
      unsigned int v71 = *(_DWORD *)v70;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v70;
      *int v9 = *(_OWORD *)(v70 + 4);
      unsigned int v72 = *(_DWORD *)v70;
      if (v72 > 8) {
        goto LABEL_126;
      }
      if (((1 << v72) & 0x38) != 0) {
        break;
      }
      if (((1 << v72) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v69 + 32 * v67 + 24);
      }
      else if (v72 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v73 = *(_DWORD **)(v69 + 32 * v67 + 24);
        if (v73) {
          *v73 += 2;
        }
        goto LABEL_135;
      }
LABEL_126:
      int v68 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v68;
      ++v67;
      if (v71 != 82)
      {
        unsigned int v74 = *(void **)(a2 + 8);
        *(void *)unsigned int v146 = v126;
        *(_DWORD *)&v146[8] = v125;
        *(_DWORD *)&v146[12] = v68 - v125;
        int v130 = (const char *)WGSL::AST::Builder::construct<WGSL::AST::VariableQualifier,WGSL::SourceSpan,WGSL::AddressSpace &,WGSL::AccessMode &,void>(v74, v146, v141, (char *)&v144);
        int v132 = 0;
        int v55 = v142;
        if (v142 == -1) {
          goto LABEL_192;
        }
LABEL_191:
        ((void (*)(unsigned char *, unsigned char *))off_1ECABE3D0[v55])(v146, v141);
        goto LABEL_192;
      }
    }
    uint64_t v73 = *(_DWORD **)(v69 + 32 * v67 + 24);
LABEL_135:
    *(void *)(a2 + 80) = v73;
    goto LABEL_126;
  }
  if (v141[0] != 3)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v75 = v125 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v125) << 32);
    goto LABEL_190;
  }
  unsigned int v57 = *(_DWORD *)(a2 + 36);
  unsigned int v58 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v58;
    if (v57 <= v58)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2098);
    }
    uint64_t v60 = *(void *)(a2 + 24);
    uint64_t v61 = v60 + 32 * v58;
    unsigned int v62 = *(_DWORD *)v61;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v61;
    *int v9 = *(_OWORD *)(v61 + 4);
    unsigned int v63 = *(_DWORD *)v61;
    if (v63 <= 8)
    {
      if (((1 << v63) & 0x38) != 0)
      {
        unsigned int v64 = *(_DWORD **)(v60 + 32 * v58 + 24);
        goto LABEL_119;
      }
      if (((1 << v63) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v60 + 32 * v58 + 24);
      }
      else if (v63 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v64 = *(_DWORD **)(v60 + 32 * v58 + 24);
        if (v64) {
          *v64 += 2;
        }
LABEL_119:
        *(void *)(a2 + 80) = v64;
      }
    }
    uint64_t v59 = *(unsigned int *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v59;
    ++v58;
    if (v62 == 82) {
      continue;
    }
    break;
  }
  uint64_t v76 = *(void *)(a2 + 88);
  if (v62 != 8)
  {
    *(_DWORD *)unsigned int v146 = v62;
    unsigned int v148 = 1;
    WGSL::toString();
    if (v148 != 1) {
      goto LABEL_275;
    }
    WGSL::toString();
    v150[0] = (uint64_t)"Expected a ";
    v150[1] = 12;
    v149[0] = (uint64_t)", but got a ";
    v149[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v150, (uint64_t *)&v144, (uint64_t)v149, (uint64_t *)&v143, &v145);
    if (!v145) {
      goto LABEL_290;
    }
    unsigned int v83 = v143;
    unsigned int v143 = 0;
    if (v83)
    {
      if (*v83 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v83 -= 2;
      }
    }
    unsigned int v87 = v144;
    int v144 = 0;
    if (v87)
    {
      if (*v87 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v87 -= 2;
      }
    }
    unint64_t v86 = v59 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v59) << 32);
    unsigned int v138 = v145;
    goto LABEL_170;
  }
  *(_DWORD *)unsigned int v146 = 8;
  *(_OWORD *)&v146[4] = *v9;
  uint64_t v77 = *(_DWORD **)(a2 + 80);
  if (v77) {
    *v77 += 2;
  }
  long long v147 = v77;
  unsigned int v148 = 0;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v58;
    if (v57 <= v58)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C20A0);
    }
    uint64_t v79 = v60 + 32 * v58;
    unsigned int v80 = *(_DWORD *)v79;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v79;
    *int v9 = *(_OWORD *)(v79 + 4);
    unsigned int v81 = *(_DWORD *)v79;
    if (v81 <= 8)
    {
      if (((1 << v81) & 0x38) != 0)
      {
        unsigned int v82 = *(_DWORD **)(v60 + 32 * v58 + 24);
        goto LABEL_155;
      }
      if (((1 << v81) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v60 + 32 * v58 + 24);
      }
      else if (v81 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v82 = *(_DWORD **)(v60 + 32 * v58 + 24);
        if (v82) {
          *v82 += 2;
        }
LABEL_155:
        *(void *)(a2 + 80) = v82;
      }
    }
    int v78 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v78;
    ++v58;
    if (v80 == 82) {
      continue;
    }
    break;
  }
  int v84 = WGSL::parseAccessMode((uint64_t *)&v147);
  if (v84)
  {
    int v85 = 0;
    LOBYTE(v138) = *v84;
    int v140 = 0;
    goto LABEL_171;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  unint64_t v86 = v59 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v59) << 32);
LABEL_170:
  *(void *)&long long v139 = v76;
  *((void *)&v139 + 1) = v86;
  int v85 = 1;
  int v140 = 1;
LABEL_171:
  if (v148 != -1)
  {
    ((void (*)(uint64_t *, unsigned char *))off_1ECABDF90[v148])(v150, v146);
    int v85 = v140;
  }
  if (!v85)
  {
    LOBYTE(v144) = (_BYTE)v138;
    if (*(_DWORD *)(a2 + 56) != 84)
    {
LABEL_180:
      WGSL::toString();
      WGSL::toString();
      *(void *)unsigned int v146 = "Expected a ";
      *(void *)&v146[8] = 12;
      unsigned int v138 = ", but got a ";
      *(void *)&long long v139 = 13;
      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v146, v149, (uint64_t)&v138, (uint64_t *)&v145, v150);
      if (!v150[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1825C20B0);
      }
      uint64_t v90 = v145;
      int v145 = 0;
      if (v90)
      {
        if (*(_DWORD *)v90 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *(_DWORD *)v90 -= 2;
        }
      }
      char v91 = (_DWORD *)v149[0];
      v149[0] = 0;
      if (v91)
      {
        if (*v91 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v91 -= 2;
        }
      }
      unint64_t v75 = v125 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v125) << 32);
      int v130 = (const char *)v150[0];
LABEL_190:
      *(void *)&long long v131 = v126;
      *((void *)&v131 + 1) = v75;
      int v132 = 1;
      int v55 = v142;
      if (v142 == -1) {
        goto LABEL_192;
      }
      goto LABEL_191;
    }
    goto LABEL_124;
  }
  if (v85 != 1) {
    goto LABEL_275;
  }
  unsigned int v88 = (char *)v138;
  if (v138)
  {
    int v89 = *(_DWORD *)v138;
    *(_DWORD *)v138 += 2;
    long long v131 = v139;
    int v130 = v88;
    int v132 = 1;
    unsigned int v138 = 0;
    if (v89)
    {
      *(_DWORD *)unsigned int v88 = v89;
      int v55 = v142;
      if (v142 != -1) {
        goto LABEL_191;
      }
    }
    else
    {
      WTF::StringImpl::destroy();
      int v55 = v142;
      if (v142 != -1) {
        goto LABEL_191;
      }
    }
  }
  else
  {
    long long v131 = v139;
    int v130 = 0;
    int v132 = 1;
    int v55 = v142;
    if (v142 != -1) {
      goto LABEL_191;
    }
  }
LABEL_192:
  if (v132)
  {
    if (v132 == 1)
    {
      uint64_t v92 = (char *)v130;
      if (v130)
      {
        int v93 = *(_DWORD *)v130;
        *(_DWORD *)v130 += 2;
        *(_OWORD *)(a1 + 8) = v131;
        *(void *)a1 = v92;
        *(_DWORD *)(a1 + 24) = 1;
        int v130 = 0;
        if (v93) {
          *(_DWORD *)uint64_t v92 = v93;
        }
        else {
          WTF::StringImpl::destroy();
        }
      }
      else
      {
        *(_OWORD *)(a1 + 8) = v131;
        *(void *)a1 = 0;
        *(_DWORD *)(a1 + 24) = 1;
      }
      goto LABEL_264;
    }
LABEL_275:
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_290;
  }
  unint64_t v133 = v130;
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v146, a2);
  unsigned int v38 = v148;
  if (v148) {
    goto LABEL_55;
  }
LABEL_198:
  int v130 = 0;
  int v94 = *(_DWORD *)(a2 + 56);
  if (v94 != 47)
  {
    int v103 = a3;
    uint64_t v104 = 0;
    v150[0] = 0;
    if ((v127 & 1) == 0) {
      goto LABEL_224;
    }
    goto LABEL_212;
  }
  unsigned int v95 = *(_DWORD *)(a2 + 36);
  unsigned int v96 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v96;
    if (v95 <= v96)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2080);
    }
    uint64_t v98 = *(void *)(a2 + 24);
    uint64_t v99 = v98 + 32 * v96;
    unsigned int v100 = *(_DWORD *)v99;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v99;
    *int v9 = *(_OWORD *)(v99 + 4);
    unsigned int v101 = *(_DWORD *)v99;
    if (v101 <= 8)
    {
      if (((1 << v101) & 0x38) != 0)
      {
        unsigned int v102 = *(_DWORD **)(v98 + 32 * v96 + 24);
        goto LABEL_210;
      }
      if (((1 << v101) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v98 + 32 * v96 + 24);
      }
      else if (v101 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v102 = *(_DWORD **)(v98 + 32 * v96 + 24);
        if (v102) {
          *v102 += 2;
        }
LABEL_210:
        *(void *)(a2 + 80) = v102;
      }
    }
    int v97 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v97;
    ++v96;
    if (v100 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName((uint64_t)v141, a2);
  if (v142)
  {
    if (v142 == 1)
    {
      unsigned int v106 = *(_DWORD **)v141;
      if (*(void *)v141)
      {
        int v107 = **(_DWORD **)v141;
        **(_DWORD **)v141 += 2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)&v141[8];
        *(void *)a1 = v106;
        *(_DWORD *)(a1 + 24) = 1;
        *(void *)uint64_t v141 = 0;
        if (!v107) {
          goto LABEL_241;
        }
        goto LABEL_221;
      }
      long long v124 = *(_OWORD *)&v141[8];
      goto LABEL_271;
    }
    goto LABEL_275;
  }
  int v103 = a3;
  uint64_t v104 = *(void *)v141;
  int v130 = *(const char **)v141;
  int v94 = *(_DWORD *)(a2 + 56);
  v150[0] = 0;
  if ((v127 & 1) == 0)
  {
LABEL_224:
    if (v94 == 49) {
      goto LABEL_225;
    }
    BOOL v116 = 0;
    if (v104)
    {
LABEL_252:
      unsigned int v118 = *(void **)(a2 + 8);
      int v119 = *(_DWORD *)(a2 + 96) - v6;
      *(void *)uint64_t v141 = v5;
      *(_DWORD *)&v141[8] = v6;
      *(_DWORD *)&v141[12] = v119;
      *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::Variable,WGSL::SourceSpan,WGSL::AST::VariableFlavor &,WGSL::AST::Identifier,WGSL::AST::VariableQualifier *,WGSL::AST::Expression *,WGSL::AST::Expression *,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v118, v141, &v134, (uint64_t)v146, (uint64_t *)&v133, (uint64_t *)&v130, v150, v103);
      *(_DWORD *)(a1 + 24) = 0;
      int v40 = v148;
      if (v148 != -1) {
        goto LABEL_59;
      }
      goto LABEL_264;
    }
LABEL_247:
    if (v116) {
      goto LABEL_252;
    }
    if (v18 == 3)
    {
      int64x2_t v117 = vdupq_n_s64(4uLL);
      v117.i64[0] = (uint64_t)"var";
      goto LABEL_255;
    }
    if (v18 != 1)
    {
      if (!v18)
      {
        __break(0xC471u);
        JUMPOUT(0x1825C2060);
      }
      int64x2_t v117 = vdupq_n_s64(9uLL);
      v117.i64[0] = (uint64_t)"override";
LABEL_255:
      *(int64x2_t *)uint64_t v141 = v117;
      unsigned int v138 = " declaration requires a type or initializer";
      *(void *)&long long v139 = 44;
      WTF::tryMakeString<WTF::ASCIILiteral,WTF::ASCIILiteral>(v141, (uint64_t)&v138, v149);
      if (!v149[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1825C20C0);
      }
      unint64_t v120 = v6 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v6) << 32);
      *(void *)a1 = v149[0];
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v120;
      *(_DWORD *)(a1 + 24) = 1;
      int v40 = v148;
      if (v148 != -1) {
        goto LABEL_59;
      }
      goto LABEL_264;
    }
LABEL_290:
    __break(0xC471u);
    JUMPOUT(0x1825C2040);
  }
LABEL_212:
  if (v94 != 49)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v141 = "Expected a ";
    *(void *)&v141[8] = 12;
    unsigned int v138 = ", but got a ";
    *(void *)&long long v139 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v141, (uint64_t *)&v129, (uint64_t)&v138, (uint64_t *)&v128, v149);
    if (!v149[0])
    {
      __break(0xC471u);
      JUMPOUT(0x1825C20B8);
    }
    uint64_t v105 = v128;
    unsigned int v128 = 0;
    if (v105)
    {
      if (*v105 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v105 -= 2;
      }
    }
    int v121 = v129;
    uint64_t v129 = 0;
    if (v121)
    {
      if (*v121 == 2) {
        WTF::StringImpl::destroy();
      }
      else {
        *v121 -= 2;
      }
    }
    unint64_t v122 = v6 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v6) << 32);
    *(void *)a1 = v149[0];
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v122;
    *(_DWORD *)(a1 + 24) = 1;
    int v40 = v148;
    if (v148 != -1) {
      goto LABEL_59;
    }
    goto LABEL_264;
  }
LABEL_225:
  unsigned int v108 = *(_DWORD *)(a2 + 36);
  unsigned int v109 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v109;
    if (v108 <= v109)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2088);
    }
    uint64_t v111 = *(void *)(a2 + 24);
    uint64_t v112 = v111 + 32 * v109;
    unsigned int v113 = *(_DWORD *)v112;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v112;
    *int v9 = *(_OWORD *)(v112 + 4);
    unsigned int v114 = *(_DWORD *)v112;
    if (v114 <= 8)
    {
      if (((1 << v114) & 0x38) != 0)
      {
        unsigned int v115 = *(_DWORD **)(v111 + 32 * v109 + 24);
        goto LABEL_236;
      }
      if (((1 << v114) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v111 + 32 * v109 + 24);
      }
      else if (v114 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v115 = *(_DWORD **)(v111 + 32 * v109 + 24);
        if (v115) {
          *v115 += 2;
        }
LABEL_236:
        *(void *)(a2 + 80) = v115;
      }
    }
    int v110 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v110;
    ++v109;
    if (v113 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)v141, a2);
  if (!v142)
  {
    v150[0] = *(void *)v141;
    BOOL v116 = *(void *)v141 != 0;
    if (v104) {
      goto LABEL_252;
    }
    goto LABEL_247;
  }
  if (v142 != 1) {
    goto LABEL_275;
  }
  unsigned int v106 = *(_DWORD **)v141;
  if (*(void *)v141)
  {
    int v107 = **(_DWORD **)v141;
    **(_DWORD **)v141 += 2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)&v141[8];
    *(void *)a1 = v106;
    *(_DWORD *)(a1 + 24) = 1;
    if (!v107)
    {
LABEL_241:
      WTF::StringImpl::destroy();
      int v40 = v148;
      if (v148 == -1) {
        goto LABEL_264;
      }
LABEL_59:
      ((void (*)(unsigned char *, unsigned char *))off_1ECABDF80[v40])(v141, v146);
      goto LABEL_264;
    }
LABEL_221:
    _DWORD *v106 = v107;
    int v40 = v148;
    if (v148 == -1) {
      goto LABEL_264;
    }
    goto LABEL_59;
  }
  long long v124 = *(_OWORD *)&v141[8];
LABEL_271:
  *(_OWORD *)(a1 + 8) = v124;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 24) = 1;
  int v40 = v148;
  if (v148 != -1) {
    goto LABEL_59;
  }
LABEL_264:
  uint64_t v51 = 0;
  return ((uint64_t (*)(void, void))off_1ECABDF90[v51])(v146, &v135);
}

_DWORD *WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 48) = v6 + 1;
  if ((v6 + 1) >= 0x10)
  {
    WTF::String::number((WTF::String *)0xF);
    WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"composite type may not be nested more than ", 44, (uint64_t *)&v18, (int8x16_t *)" levels", 8, &v14);
    unint64_t v11 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v11;
    *(_DWORD *)(a1 + 24) = 1;
    uint64_t v14 = 0;
    __n128 result = v18;
    int v18 = 0;
    if (result)
    {
      if (*result == 2) {
        __n128 result = (_DWORD *)WTF::StringImpl::destroy();
      }
      else {
        *result -= 2;
      }
    }
    goto LABEL_15;
  }
  if (*(_DWORD *)(a2 + 56) != 8)
  {
    __n128 result = (_DWORD *)WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v10 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_15;
  }
  __n128 result = (_DWORD *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v14, a2);
  if (!v17)
  {
    if (MEMORY[0x18530AEB0](v16, "array", 5))
    {
      __n128 result = (_DWORD *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseArrayType(a1, a2);
      uint64_t v9 = v17;
      if (v17 == -1) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    __n128 result = WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeNameAfterIdentifier(a1, a2, (uint64_t)&v14, v4, v5);
    uint64_t v9 = v17;
    if (v17 != -1) {
LABEL_14:
    }
      __n128 result = (_DWORD *)((uint64_t (*)(char *, _DWORD **))off_1ECABDF80[v9])(&v19, &v14);
LABEL_15:
    *(_DWORD *)(a2 + 48) = v6;
    return result;
  }
  if (v17 == 1)
  {
    unsigned int v8 = v14;
    if (v14) {
      *v14 += 2;
    }
    *(_OWORD *)(a1 + 8) = v15;
    *(void *)a1 = v8;
    *(_DWORD *)(a1 + 24) = 1;
    uint64_t v9 = v17;
    if (v17 == -1) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v12 = std::__throw_bad_variant_access[abi:sn180100]();
  return (_DWORD *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseArrayType(v12, v13);
}

void *WGSL::Parser<WGSL::Lexer<char16_t>>::parseArrayType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v56 = 0;
  unsigned int v57 = 0;
  int v6 = v5;
  if (*(_DWORD *)(a2 + 56) != 83)
  {
LABEL_78:
    unsigned int v43 = *(void **)(a2 + 8);
    *(void *)uint64_t v47 = v4;
    *(_DWORD *)&v47[8] = v5;
    *(_DWORD *)&v47[12] = v6 - v5;
    __n128 result = WGSL::AST::Builder::construct<WGSL::AST::ArrayTypeExpression,WGSL::SourceSpan,WGSL::AST::Expression *&,WGSL::AST::Expression *&,void>(v43, v47, (uint64_t *)&v57, (uint64_t *)&v56);
    *(void *)a1 = result;
    *(_DWORD *)(a1 + 24) = 0;
    return result;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = (_OWORD *)(a2 + 60);
  unsigned int v9 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v7 <= v9) {
      goto LABEL_80;
    }
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = v11 + 32 * v9;
    unsigned int v13 = *(_DWORD *)v12;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v12;
    *unsigned int v8 = *(_OWORD *)(v12 + 4);
    unsigned int v14 = *(_DWORD *)v12;
    if (v14 <= 8)
    {
      if (((1 << v14) & 0x38) != 0)
      {
        long long v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v15;
        goto LABEL_4;
      }
      if (((1 << v14) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v11 + 32 * v9 + 24);
        goto LABEL_4;
      }
      if (v14 == 8)
      {
        *(void *)(a2 + 80) = 0;
        long long v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
        if (v15) {
          *v15 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v10 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v10;
    ++v9;
  }
  while (v13 == 82);
  __n128 result = WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName((uint64_t)&v53, a2);
  if (v55)
  {
    if (v55 == 1)
    {
      unsigned int v17 = v53;
      if (v53) {
        *v53 += 2;
      }
      *(_OWORD *)(a1 + 8) = v54;
      *(void *)a1 = v17;
      int v18 = 1;
      *(_DWORD *)(a1 + 24) = 1;
      goto LABEL_74;
    }
    goto LABEL_79;
  }
  unsigned int v57 = v53;
  int v19 = *(_DWORD *)(a2 + 56);
  if (v19 != 48) {
    goto LABEL_48;
  }
  unsigned int v20 = *(_DWORD *)(a2 + 36);
  unsigned int v21 = *(_DWORD *)(a2 + 40) + 1;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v21;
    if (v20 <= v21)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2814);
    }
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v24 = v23 + 32 * v21;
    unsigned int v25 = *(_DWORD *)v24;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v24;
    *unsigned int v8 = *(_OWORD *)(v24 + 4);
    unsigned int v26 = *(_DWORD *)v24;
    if (v26 <= 8)
    {
      if (((1 << v26) & 0x38) != 0)
      {
        uint64_t v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        goto LABEL_31;
      }
      if (((1 << v26) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v23 + 32 * v21 + 24);
      }
      else if (v26 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        if (v27) {
          *v27 += 2;
        }
LABEL_31:
        *(void *)(a2 + 80) = v27;
      }
    }
    int v22 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v22;
    ++v21;
    if (v25 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression(v47, a2);
  if (!v48)
  {
    WGSL::Parser<WGSL::Lexer<char16_t>>::parseAdditiveExpressionPostUnary((uint64_t)&v50, a2, v47);
    uint64_t v29 = v52;
    if (v52)
    {
      if (v52 != 1) {
        goto LABEL_79;
      }
      uint64_t v31 = v50;
      if (v50) {
        *(_DWORD *)v50 += 2;
      }
      *(_OWORD *)(a1 + 8) = v51;
      *(void *)a1 = v31;
      *(_DWORD *)(a1 + 24) = 1;
    }
    else
    {
      int v56 = v50;
    }
    __n128 result = (void *)((uint64_t (*)(void *, const char **))off_1ECABE170[v29])(v58, &v50);
    int v30 = v48;
    if (v48 != -1) {
      goto LABEL_44;
    }
    goto LABEL_45;
  }
  if (v48 != 1)
  {
LABEL_79:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_80:
    __break(0xC471u);
LABEL_84:
    JUMPOUT(0x1825C280CLL);
  }
  uint64_t v28 = *(void *)v47;
  if (*(void *)v47) {
    **(_DWORD **)v47 += 2;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v47[8];
  *(void *)a1 = v28;
  LODWORD(v29) = 1;
  *(_DWORD *)(a1 + 24) = 1;
  int v30 = 1;
LABEL_44:
  __n128 result = (void *)((uint64_t (*)(const char **, unsigned char *))off_1ECABE170[v30])(&v50, v47);
LABEL_45:
  if (v29)
  {
    int v18 = 1;
    goto LABEL_74;
  }
  int v19 = *(_DWORD *)(a2 + 56);
LABEL_48:
  if (v19 == 84)
  {
    *(_DWORD *)uint64_t v47 = 84;
    *(_OWORD *)&v47[4] = *v8;
    int v49 = 0;
    unsigned int v32 = *(_DWORD *)(a2 + 36);
    unsigned int v33 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v33;
      if (v32 <= v33)
      {
        __break(0xC471u);
        JUMPOUT(0x1825C281CLL);
      }
      uint64_t v35 = *(void *)(a2 + 24);
      uint64_t v36 = v35 + 32 * v33;
      unsigned int v37 = *(_DWORD *)v36;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v36;
      *unsigned int v8 = *(_OWORD *)(v36 + 4);
      unsigned int v38 = *(_DWORD *)v36;
      if (v38 > 8) {
        goto LABEL_51;
      }
      if (((1 << v38) & 0x38) != 0) {
        break;
      }
      if (((1 << v38) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v35 + 32 * v33 + 24);
      }
      else if (v38 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
        if (v39) {
          *v39 += 2;
        }
        goto LABEL_60;
      }
LABEL_51:
      int v34 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v34;
      ++v33;
      if (v37 != 82)
      {
        int v18 = 0;
        goto LABEL_73;
      }
    }
    uint64_t v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
LABEL_60:
    *(void *)(a2 + 80) = v39;
    goto LABEL_51;
  }
  *(_DWORD *)uint64_t v47 = v19;
  int v49 = 1;
  WGSL::toString();
  WGSL::toString();
  unint64_t v50 = "Expected a ";
  *(void *)&long long v51 = 12;
  v58[0] = ", but got a ";
  v58[1] = 13;
  WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v50, (uint64_t *)&v45, (uint64_t)v58, (uint64_t *)&v44, &v46);
  if (!v46)
  {
    __break(0xC471u);
    goto LABEL_84;
  }
  int v40 = v44;
  unint64_t v44 = 0;
  if (!v40) {
    goto LABEL_65;
  }
  if (*v40 == 2)
  {
    WTF::StringImpl::destroy();
    long long v41 = v45;
    int v45 = 0;
    if (!v41) {
      goto LABEL_72;
    }
    goto LABEL_69;
  }
  *v40 -= 2;
LABEL_65:
  long long v41 = v45;
  int v45 = 0;
  if (v41)
  {
LABEL_69:
    if (*v41 == 2) {
      WTF::StringImpl::destroy();
    }
    else {
      *v41 -= 2;
    }
  }
LABEL_72:
  unint64_t v42 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
  *(void *)a1 = v46;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v42;
  int v18 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_73:
  __n128 result = (void *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDF90[v18])(&v50, v47);
LABEL_74:
  if (v55 != -1) {
    __n128 result = (void *)((uint64_t (*)(unsigned char *, _DWORD **))off_1ECABE170[v55])(v47, &v53);
  }
  if (!v18)
  {
    int v6 = *(_DWORD *)(a2 + 96);
    goto LABEL_78;
  }
  return result;
}

void *WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeNameAfterIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, unsigned int a5)
{
  if (*(_DWORD *)(a2 + 56) != 83)
  {
    uint64_t v16 = *(void **)(a2 + 8);
    unsigned int v17 = *(_DWORD *)(a2 + 96) - a5;
    unsigned int v52 = a4;
    *(void *)&long long v53 = __PAIR64__(v17, a5);
    __n128 result = WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v16, &v52, a3);
    *(void *)a1 = result;
    *(_DWORD *)(a1 + 24) = 0;
    return result;
  }
  unsigned int v7 = (_OWORD *)(a2 + 60);
  unsigned int v8 = *(_DWORD *)(a2 + 36);
  unsigned int v9 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v8 <= v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2D5CLL);
    }
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = v11 + 32 * v9;
    unsigned int v13 = *(_DWORD *)v12;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v12;
    *unsigned int v7 = *(_OWORD *)(v12 + 4);
    unsigned int v14 = *(_DWORD *)v12;
    if (v14 <= 8)
    {
      if (((1 << v14) & 0x38) != 0)
      {
        long long v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v15;
        goto LABEL_4;
      }
      if (((1 << v14) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v11 + 32 * v9 + 24);
        goto LABEL_4;
      }
      if (v14 == 8)
      {
        *(void *)(a2 + 80) = 0;
        long long v15 = *(_DWORD **)(v11 + 32 * v9 + 24);
        if (v15) {
          *v15 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v10 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v10;
    ++v9;
  }
  while (v13 == 82);
  int v19 = 0;
  unsigned int v20 = 0;
  int v55 = 0;
  uint64_t v56 = 0;
  uint64_t v45 = a5;
  while (1)
  {
    __n128 result = (void *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeName(&v52, a2);
    if (!v54)
    {
      if (v20 == v56)
      {
        __n128 result = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v55, v20 + 1, (unint64_t)&v52);
        int v25 = HIDWORD(v56);
        int v19 = v55;
        *((void *)v55 + HIDWORD(v56)) = *result;
        unsigned int v20 = v25 + 1;
        HIDWORD(v56) = v25 + 1;
        if (*(_DWORD *)(a2 + 56) != 48) {
          goto LABEL_27;
        }
      }
      else
      {
        *((void *)v19 + v20) = v52;
        unsigned int v20 = ++HIDWORD(v56);
        if (*(_DWORD *)(a2 + 56) != 48)
        {
LABEL_27:
          int v23 = 4;
          uint64_t v24 = v54;
          if (v54 == -1) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
      }
      unsigned int v26 = *(_DWORD *)(a2 + 36);
      unsigned int v27 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v27;
        if (v26 <= v27) {
          goto LABEL_75;
        }
        uint64_t v29 = *(void *)(a2 + 24);
        uint64_t v30 = v29 + 32 * v27;
        unsigned int v31 = *(_DWORD *)v30;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v30;
        *unsigned int v7 = *(_OWORD *)(v30 + 4);
        unsigned int v32 = *(_DWORD *)v30;
        if (v32 > 8) {
          goto LABEL_32;
        }
        if (((1 << v32) & 0x38) != 0) {
          break;
        }
        if (((1 << v32) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v29 + 32 * v27 + 24);
        }
        else if (v32 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v33 = *(_DWORD **)(v29 + 32 * v27 + 24);
          if (v33) {
            *v33 += 2;
          }
          goto LABEL_41;
        }
LABEL_32:
        int v28 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v28;
        ++v27;
        if (v31 != 82)
        {
          int v23 = 0;
          uint64_t v24 = v54;
          if (v54 == -1) {
            goto LABEL_22;
          }
LABEL_21:
          __n128 result = (void *)((uint64_t (*)(void *, const char **))off_1ECABE170[v24])(v57, &v52);
          goto LABEL_22;
        }
      }
      unsigned int v33 = *(_DWORD **)(v29 + 32 * v27 + 24);
LABEL_41:
      *(void *)(a2 + 80) = v33;
      goto LABEL_32;
    }
    if (v54 != 1)
    {
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_75:
      __break(0xC471u);
      goto LABEL_79;
    }
    int v22 = v52;
    if (v52) {
      *(_DWORD *)v52 += 2;
    }
    *(_OWORD *)(a1 + 8) = v53;
    *(void *)a1 = v22;
    int v23 = 1;
    *(_DWORD *)(a1 + 24) = 1;
    uint64_t v24 = v54;
    if (v54 != -1) {
      goto LABEL_21;
    }
LABEL_22:
    if (v23) {
      break;
    }
    if (*(_DWORD *)(a2 + 56) == 84) {
      goto LABEL_46;
    }
  }
  if (v23 != 4) {
    goto LABEL_59;
  }
  if (*(_DWORD *)(a2 + 56) != 84)
  {
    WGSL::toString();
    WGSL::toString();
    unsigned int v52 = "Expected a ";
    *(void *)&long long v53 = 12;
    v57[0] = ", but got a ";
    v57[1] = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v52, (uint64_t *)&v50, (uint64_t)v57, (uint64_t *)&v49, &v51);
    if (v51)
    {
      unsigned int v43 = v49;
      int v49 = 0;
      if (v43)
      {
        if (*v43 == 2)
        {
          WTF::StringImpl::destroy();
          __n128 result = v50;
          unint64_t v50 = 0;
          if (!result) {
            goto LABEL_72;
          }
LABEL_69:
          if (*(_DWORD *)result == 2) {
            __n128 result = (void *)WTF::StringImpl::destroy();
          }
          else {
            *(_DWORD *)result -= 2;
          }
LABEL_72:
          unint64_t v44 = v45 | ((unint64_t)(*(_DWORD *)(a2 + 96) - a5) << 32);
          *(void *)a1 = v51;
          *(void *)(a1 + 8) = a4;
          *(void *)(a1 + 16) = v44;
          *(_DWORD *)(a1 + 24) = 1;
          if (v19) {
            goto LABEL_60;
          }
          return result;
        }
        *v43 -= 2;
      }
      __n128 result = v50;
      unint64_t v50 = 0;
      if (!result) {
        goto LABEL_72;
      }
      goto LABEL_69;
    }
    __break(0xC471u);
LABEL_79:
    JUMPOUT(0x1825C2D54);
  }
LABEL_46:
  unsigned int v34 = *(_DWORD *)(a2 + 36);
  unsigned int v35 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v35;
    if (v34 <= v35)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C2D64);
    }
    uint64_t v37 = *(void *)(a2 + 24);
    uint64_t v38 = v37 + 32 * v35;
    unsigned int v39 = *(_DWORD *)v38;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
    *unsigned int v7 = *(_OWORD *)(v38 + 4);
    unsigned int v40 = *(_DWORD *)v38;
    if (v40 <= 8)
    {
      if (((1 << v40) & 0x38) != 0)
      {
        long long v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
LABEL_57:
        *(void *)(a2 + 80) = v41;
        goto LABEL_48;
      }
      if (((1 << v40) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v37 + 32 * v35 + 24);
        goto LABEL_48;
      }
      if (v40 == 8)
      {
        *(void *)(a2 + 80) = 0;
        long long v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
        if (v41) {
          *v41 += 2;
        }
        goto LABEL_57;
      }
    }
LABEL_48:
    int v36 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v36;
    ++v35;
  }
  while (v39 == 82);
  unint64_t v42 = *(void **)(a2 + 8);
  unsigned int v52 = a4;
  LODWORD(v53) = a5;
  DWORD1(v53) = v36 - a5;
  __n128 result = WGSL::AST::Builder::construct<WGSL::AST::ElaboratedTypeExpression,WGSL::SourceSpan,WGSL::AST::Identifier,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(v42, &v52, a3, (uint64_t *)&v55);
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 24) = 0;
  int v19 = v55;
LABEL_59:
  if (v19)
  {
LABEL_60:
    int v55 = 0;
    LODWORD(v56) = 0;
    return (void *)WTF::fastFree(v19, v21);
  }
  return result;
}

void WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v6 + 1;
  if ((v6 + 1) >= 0x81)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v7 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v7;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_44;
  }
  int v8 = *(_DWORD *)(a2 + 56);
  int v9 = v8 - 36;
  if ((v8 - 36) > 0x2A || ((1 << (v8 - 36)) & 0x50000800021) == 0)
  {
    switch(v8)
    {
      case 2:
        *(_DWORD *)uint64_t v141 = 2;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v12 = *(_DWORD *)(a2 + 36);
        unsigned int v13 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v13;
          if (v12 <= v13)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D64);
          }
          uint64_t v15 = *(void *)(a2 + 24);
          uint64_t v16 = v15 + 32 * v13;
          unsigned int v17 = *(_DWORD *)v16;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v16;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v16 + 4);
          unsigned int v18 = *(_DWORD *)v16;
          if (v18 > 8) {
            goto LABEL_12;
          }
          if (((1 << v18) & 0x38) != 0) {
            break;
          }
          if (((1 << v18) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v15 + 32 * v13 + 24);
          }
          else if (v18 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int v19 = *(_DWORD **)(v15 + 32 * v13 + 24);
            if (v19) {
              *v19 += 2;
            }
            goto LABEL_21;
          }
LABEL_12:
          int v14 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v14;
          ++v13;
          if (v17 != 82)
          {
            int v103 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v14 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::AbstractFloatLiteral,WGSL::SourceSpan,double &,void>(v103, &v138, &v142);
            goto LABEL_162;
          }
        }
        int v19 = *(_DWORD **)(v15 + 32 * v13 + 24);
LABEL_21:
        *(void *)(a2 + 80) = v19;
        goto LABEL_12;
      case 3:
        *(_DWORD *)uint64_t v141 = 3;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v48 = *(_DWORD *)(a2 + 36);
        unsigned int v49 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v49;
          if (v48 <= v49)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D7CLL);
          }
          uint64_t v51 = *(void *)(a2 + 24);
          uint64_t v52 = v51 + 32 * v49;
          unsigned int v53 = *(_DWORD *)v52;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v52;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v52 + 4);
          unsigned int v54 = *(_DWORD *)v52;
          if (v54 > 8) {
            goto LABEL_71;
          }
          if (((1 << v54) & 0x38) != 0) {
            break;
          }
          if (((1 << v54) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v51 + 32 * v49 + 24);
          }
          else if (v54 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int v55 = *(_DWORD **)(v51 + 32 * v49 + 24);
            if (v55) {
              *v55 += 2;
            }
            goto LABEL_80;
          }
LABEL_71:
          int v50 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v50;
          ++v49;
          if (v53 != 82)
          {
            uint64_t v104 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v50 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::AbstractIntegerLiteral,WGSL::SourceSpan,long long &,void>(v104, &v138, &v142);
            goto LABEL_162;
          }
        }
        int v55 = *(_DWORD **)(v51 + 32 * v49 + 24);
LABEL_80:
        *(void *)(a2 + 80) = v55;
        goto LABEL_71;
      case 4:
        *(_DWORD *)uint64_t v141 = 4;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v32 = *(_DWORD *)(a2 + 36);
        unsigned int v33 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v33;
          if (v32 <= v33)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D6CLL);
          }
          uint64_t v35 = *(void *)(a2 + 24);
          uint64_t v36 = v35 + 32 * v33;
          unsigned int v37 = *(_DWORD *)v36;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v36;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v36 + 4);
          unsigned int v38 = *(_DWORD *)v36;
          if (v38 > 8) {
            goto LABEL_47;
          }
          if (((1 << v38) & 0x38) != 0) {
            break;
          }
          if (((1 << v38) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v35 + 32 * v33 + 24);
          }
          else if (v38 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
            if (v39) {
              *v39 += 2;
            }
            goto LABEL_56;
          }
LABEL_47:
          int v34 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v34;
          ++v33;
          if (v37 != 82)
          {
            unsigned int v100 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v34 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Signed32Literal,WGSL::SourceSpan,long long &,void>(v100, &v138, &v142);
            goto LABEL_162;
          }
        }
        unsigned int v39 = *(_DWORD **)(v35 + 32 * v33 + 24);
LABEL_56:
        *(void *)(a2 + 80) = v39;
        goto LABEL_47;
      case 5:
        *(_DWORD *)uint64_t v141 = 5;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v67 = *(_DWORD *)(a2 + 36);
        unsigned int v68 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v68;
          if (v67 <= v68)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D8CLL);
          }
          uint64_t v70 = *(void *)(a2 + 24);
          uint64_t v71 = v70 + 32 * v68;
          unsigned int v72 = *(_DWORD *)v71;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v71;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v71 + 4);
          unsigned int v73 = *(_DWORD *)v71;
          if (v73 > 8) {
            goto LABEL_102;
          }
          if (((1 << v73) & 0x38) != 0) {
            break;
          }
          if (((1 << v73) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v70 + 32 * v68 + 24);
          }
          else if (v73 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v74 = *(_DWORD **)(v70 + 32 * v68 + 24);
            if (v74) {
              *v74 += 2;
            }
            goto LABEL_111;
          }
LABEL_102:
          int v69 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v69;
          ++v68;
          if (v72 != 82)
          {
            unsigned int v106 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v69 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Unsigned32Literal,WGSL::SourceSpan,long long &,void>(v106, &v138, &v142);
            goto LABEL_162;
          }
        }
        unsigned int v74 = *(_DWORD **)(v70 + 32 * v68 + 24);
LABEL_111:
        *(void *)(a2 + 80) = v74;
        goto LABEL_102;
      case 6:
        *(_DWORD *)uint64_t v141 = 6;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v75 = *(_DWORD *)(a2 + 36);
        unsigned int v76 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v76;
          if (v75 <= v76)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D94);
          }
          uint64_t v78 = *(void *)(a2 + 24);
          uint64_t v79 = v78 + 32 * v76;
          unsigned int v80 = *(_DWORD *)v79;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v79;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v79 + 4);
          unsigned int v81 = *(_DWORD *)v79;
          if (v81 > 8) {
            goto LABEL_114;
          }
          if (((1 << v81) & 0x38) != 0) {
            break;
          }
          if (((1 << v81) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v78 + 32 * v76 + 24);
          }
          else if (v81 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v82 = *(_DWORD **)(v78 + 32 * v76 + 24);
            if (v82) {
              *v82 += 2;
            }
            goto LABEL_123;
          }
LABEL_114:
          int v77 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v77;
          ++v76;
          if (v80 != 82)
          {
            int v107 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v77 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Float32Literal,WGSL::SourceSpan,double &,void>(v107, &v138, (double *)&v142);
            goto LABEL_162;
          }
        }
        unsigned int v82 = *(_DWORD **)(v78 + 32 * v76 + 24);
LABEL_123:
        *(void *)(a2 + 80) = v82;
        goto LABEL_114;
      case 7:
        *(_DWORD *)uint64_t v141 = 7;
        *(_OWORD *)&v141[4] = *(_OWORD *)(a2 + 60);
        uint64_t v142 = *(void *)(a2 + 80);
        unsigned int v143 = 0;
        unsigned int v40 = *(_DWORD *)(a2 + 36);
        unsigned int v41 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v41;
          if (v40 <= v41)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D74);
          }
          uint64_t v43 = *(void *)(a2 + 24);
          uint64_t v44 = v43 + 32 * v41;
          unsigned int v45 = *(_DWORD *)v44;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v44;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v44 + 4);
          unsigned int v46 = *(_DWORD *)v44;
          if (v46 > 8) {
            goto LABEL_59;
          }
          if (((1 << v46) & 0x38) != 0) {
            break;
          }
          if (((1 << v46) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v43 + 32 * v41 + 24);
          }
          else if (v46 == 8)
          {
            *(void *)(a2 + 80) = 0;
            uint64_t v47 = *(_DWORD **)(v43 + 32 * v41 + 24);
            if (v47) {
              *v47 += 2;
            }
            goto LABEL_68;
          }
LABEL_59:
          int v42 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v42;
          ++v41;
          if (v45 != 82)
          {
            unsigned int v102 = *(void **)(a2 + 8);
            unsigned int v138 = v4;
            LODWORD(v139) = v5;
            DWORD1(v139) = v42 - v5;
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::Float16Literal,WGSL::SourceSpan,double &,void>(v102, &v138, &v142);
            goto LABEL_162;
          }
        }
        uint64_t v47 = *(_DWORD **)(v43 + 32 * v41 + 24);
LABEL_68:
        *(void *)(a2 + 80) = v47;
        goto LABEL_59;
      case 8:
        WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v141, a2);
        if (v143)
        {
          if (v143 != 1) {
            goto LABEL_216;
          }
          uint64_t v56 = *(void **)v141;
          if (*(void *)v141) {
            **(_DWORD **)v141 += 2;
          }
          long long v132 = *(_OWORD *)&v141[8];
          long long v131 = v56;
          int v133 = 1;
          uint64_t v57 = v143;
          if (v143 == -1) {
            goto LABEL_163;
          }
LABEL_206:
          ((void (*)(const char **, unsigned char *))off_1ECABDF80[v57])(&v138, v141);
          goto LABEL_163;
        }
        if (MEMORY[0x18530AEB0](v142, "array", 5))
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseArrayType((uint64_t)&v138, a2);
        }
        else
        {
          if ((*(_DWORD *)(a2 + 56) | 0x10) != 0x53)
          {
            uint64_t v129 = *(void **)(a2 + 8);
            unsigned int v130 = *(_DWORD *)(a2 + 96) - v5;
            unsigned int v138 = v4;
            *(void *)&long long v139 = __PAIR64__(v130, v5);
            long long v131 = WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v129, &v138, (uint64_t)v141);
            int v133 = 0;
            uint64_t v57 = v143;
            if (v143 == -1) {
              goto LABEL_163;
            }
            goto LABEL_206;
          }
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeNameAfterIdentifier((uint64_t)&v138, a2, (uint64_t)v141, v4, v5);
        }
        uint64_t v120 = v140;
        if (v140)
        {
          if (v140 != 1) {
            goto LABEL_216;
          }
          int v121 = v138;
          if (v138) {
            *(_DWORD *)v138 += 2;
          }
          long long v132 = v139;
          long long v131 = v121;
          int v133 = 1;
          goto LABEL_205;
        }
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseArgumentExpressionList(&v135, a2);
        if (v137)
        {
          if (v137 != 1) {
            goto LABEL_216;
          }
          uint64_t v123 = v135;
          if (v135) {
            *(_DWORD *)v135 += 2;
          }
          long long v132 = v136;
          long long v131 = v123;
          int v124 = 1;
          int v133 = 1;
        }
        else
        {
          uint64_t v125 = *(void **)(a2 + 8);
          unsigned int v126 = *(_DWORD *)(a2 + 96) - v5;
          *(void *)&long long v134 = v4;
          *((void *)&v134 + 1) = __PAIR64__(v126, v5);
          long long v131 = WGSL::AST::Builder::construct<WGSL::AST::CallExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(v125, &v134, (uint64_t *)&v138, (uint64_t *)&v135);
          int v133 = 0;
          int v124 = v137;
          if (v137 == -1) {
            goto LABEL_205;
          }
        }
        ((void (*)(long long *, const char **))off_1ECABE040[v124])(&v134, &v135);
LABEL_205:
        ((void (*)(const char **, const char **))off_1ECABE170[v120])(&v135, &v138);
        uint64_t v57 = v143;
        if (v143 == -1) {
          goto LABEL_163;
        }
        goto LABEL_206;
      case 22:
        unsigned int v58 = *(_DWORD *)(a2 + 36);
        unsigned int v59 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v59;
          if (v58 <= v59)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3D84);
          }
          uint64_t v61 = *(void *)(a2 + 24);
          uint64_t v62 = v61 + 32 * v59;
          unsigned int v63 = *(_DWORD *)v62;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v62;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v62 + 4);
          unsigned int v64 = *(_DWORD *)v62;
          if (v64 > 8) {
            goto LABEL_89;
          }
          if (((1 << v64) & 0x38) != 0) {
            break;
          }
          if (((1 << v64) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v61 + 32 * v59 + 24);
          }
          else if (v64 == 8)
          {
            *(void *)(a2 + 80) = 0;
            char v65 = *(_DWORD **)(v61 + 32 * v59 + 24);
            if (v65) {
              *v65 += 2;
            }
            goto LABEL_98;
          }
LABEL_89:
          int v60 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v60;
          ++v59;
          if (v63 != 82)
          {
            uint64_t v105 = *(void **)(a2 + 8);
            *(void *)uint64_t v141 = v4;
            *(_DWORD *)&v141[8] = v5;
            *(_DWORD *)&v141[12] = v60 - v5;
            LOBYTE(v138) = 0;
LABEL_161:
            unsigned int v101 = WGSL::AST::Builder::construct<WGSL::AST::BoolLiteral,WGSL::SourceSpan,BOOL,void>(v105, v141, (char *)&v138);
LABEL_162:
            long long v131 = v101;
            int v133 = 0;
LABEL_163:
            if (!v133)
            {
              WGSL::Parser<WGSL::Lexer<char16_t>>::parsePostfixExpression(a1, a2, v131, (unint64_t)v4, v5);
              int v111 = 0;
LABEL_169:
              ((void (*)(unsigned char *, void **))off_1ECABE170[v111])(v141, &v131);
              goto LABEL_44;
            }
            if (v133 == 1)
            {
              int v110 = v131;
              if (v131) {
                *(_DWORD *)v131 += 2;
              }
              *(_OWORD *)(a1 + 8) = v132;
              *(void *)a1 = v110;
              int v111 = 1;
              *(_DWORD *)(a1 + 24) = 1;
              goto LABEL_169;
            }
LABEL_216:
            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_217:
            __break(0xC471u);
            JUMPOUT(0x1825C3D54);
          }
        }
        char v65 = *(_DWORD **)(v61 + 32 * v59 + 24);
LABEL_98:
        *(void *)(a2 + 80) = v65;
        goto LABEL_89;
      case 33:
        unsigned int v92 = *(_DWORD *)(a2 + 36);
        unsigned int v93 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v93;
          if (v92 <= v93)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3DA4);
          }
          uint64_t v95 = *(void *)(a2 + 24);
          uint64_t v96 = v95 + 32 * v93;
          unsigned int v97 = *(_DWORD *)v96;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v96;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v96 + 4);
          unsigned int v98 = *(_DWORD *)v96;
          if (v98 > 8) {
            goto LABEL_138;
          }
          if (((1 << v98) & 0x38) != 0) {
            break;
          }
          if (((1 << v98) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v95 + 32 * v93 + 24);
          }
          else if (v98 == 8)
          {
            *(void *)(a2 + 80) = 0;
            uint64_t v99 = *(_DWORD **)(v95 + 32 * v93 + 24);
            if (v99) {
              *v99 += 2;
            }
            goto LABEL_147;
          }
LABEL_138:
          int v94 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v94;
          ++v93;
          if (v97 != 82)
          {
            uint64_t v105 = *(void **)(a2 + 8);
            *(void *)uint64_t v141 = v4;
            *(_DWORD *)&v141[8] = v5;
            *(_DWORD *)&v141[12] = v94 - v5;
            LOBYTE(v138) = 1;
            goto LABEL_161;
          }
        }
        uint64_t v99 = *(_DWORD **)(v95 + 32 * v93 + 24);
LABEL_147:
        *(void *)(a2 + 80) = v99;
        goto LABEL_138;
      case 67:
        unsigned int v83 = *(_DWORD *)(a2 + 36);
        int v84 = (_OWORD *)(a2 + 60);
        unsigned int v85 = *(_DWORD *)(a2 + 40) + 1;
        break;
      default:
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        unint64_t v66 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
        *(void *)&long long v132 = v4;
        *((void *)&v132 + 1) = v66;
        int v133 = 1;
        goto LABEL_163;
    }
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v85;
      if (v83 <= v85)
      {
        __break(0xC471u);
        JUMPOUT(0x1825C3D9CLL);
      }
      uint64_t v87 = *(void *)(a2 + 24);
      uint64_t v88 = v87 + 32 * v85;
      unsigned int v89 = *(_DWORD *)v88;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v88;
      _OWORD *v84 = *(_OWORD *)(v88 + 4);
      unsigned int v90 = *(_DWORD *)v88;
      if (v90 > 8) {
        goto LABEL_126;
      }
      if (((1 << v90) & 0x38) != 0) {
        break;
      }
      if (((1 << v90) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v87 + 32 * v85 + 24);
      }
      else if (v90 == 8)
      {
        *(void *)(a2 + 80) = 0;
        char v91 = *(_DWORD **)(v87 + 32 * v85 + 24);
        if (v91) {
          *v91 += 2;
        }
        goto LABEL_135;
      }
LABEL_126:
      int v86 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v86;
      ++v85;
      if (v89 != 82)
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression(v141, a2);
        uint64_t v108 = v142;
        if (v142)
        {
          if (v142 != 1) {
            goto LABEL_216;
          }
          unsigned int v109 = *(void **)v141;
          if (*(void *)v141) {
            **(_DWORD **)v141 += 2;
          }
          long long v132 = *(_OWORD *)&v141[8];
LABEL_197:
          long long v131 = v109;
          int v133 = v108;
LABEL_213:
          ((void (*)(const char **, unsigned char *))off_1ECABE170[v108])(&v138, v141);
          goto LABEL_163;
        }
        if (*(_DWORD *)(a2 + 56) != 68)
        {
          WGSL::toString();
          WGSL::toString();
          unsigned int v138 = "Expected a ";
          *(void *)&long long v139 = 12;
          int v135 = ", but got a ";
          *(void *)&long long v136 = 13;
          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v138, (uint64_t *)&v145, (uint64_t)&v135, (uint64_t *)&v144, &v134);
          if (!(void)v134)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3DB4);
          }
          unint64_t v122 = v144;
          int v144 = 0;
          if (v122)
          {
            if (*v122 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v122 -= 2;
            }
          }
          char v127 = v145;
          int v145 = 0;
          if (v127)
          {
            if (*v127 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v127 -= 2;
            }
          }
          unint64_t v128 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          long long v131 = (void *)v134;
          *(void *)&long long v132 = v4;
          *((void *)&v132 + 1) = v128;
          int v133 = 1;
          goto LABEL_213;
        }
        unsigned int v112 = *(_DWORD *)(a2 + 36);
        unsigned int v113 = *(_DWORD *)(a2 + 40) + 1;
        while (2)
        {
          *(_DWORD *)(a2 + 40) = v113;
          if (v112 <= v113)
          {
            __break(0xC471u);
            JUMPOUT(0x1825C3DACLL);
          }
          uint64_t v115 = *(void *)(a2 + 24);
          uint64_t v116 = v115 + 32 * v113;
          unsigned int v117 = *(_DWORD *)v116;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v116;
          _OWORD *v84 = *(_OWORD *)(v116 + 4);
          unsigned int v118 = *(_DWORD *)v116;
          if (v118 <= 8)
          {
            if (((1 << v118) & 0x38) != 0)
            {
              int v119 = *(_DWORD **)(v115 + 32 * v113 + 24);
              goto LABEL_184;
            }
            if (((1 << v118) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v115 + 32 * v113 + 24);
            }
            else if (v118 == 8)
            {
              *(void *)(a2 + 80) = 0;
              int v119 = *(_DWORD **)(v115 + 32 * v113 + 24);
              if (v119) {
                *v119 += 2;
              }
LABEL_184:
              *(void *)(a2 + 80) = v119;
            }
          }
          int v114 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v114;
          ++v113;
          if (v117 != 82)
          {
            unsigned int v109 = *(void **)v141;
            goto LABEL_197;
          }
          continue;
        }
      }
    }
    char v91 = *(_DWORD **)(v87 + 32 * v85 + 24);
LABEL_135:
    *(void *)(a2 + 80) = v91;
    goto LABEL_126;
  }
  char v11 = 0;
  switch(v9)
  {
    case 0:
      goto LABEL_25;
    case 5:
      char v11 = 4;
      goto LABEL_25;
    case 23:
      char v11 = 3;
      goto LABEL_25;
    case 40:
      char v11 = 2;
      goto LABEL_25;
    case 42:
      char v11 = 1;
LABEL_25:
      LOBYTE(v135) = v11;
      unsigned int v20 = *(_DWORD *)(a2 + 36);
      unsigned int v21 = *(_DWORD *)(a2 + 40) + 1;
      break;
    default:
      goto LABEL_217;
  }
  do
  {
    *(_DWORD *)(a2 + 40) = v21;
    if (v20 <= v21)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C3D5CLL);
    }
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v24 = v23 + 32 * v21;
    unsigned int v25 = *(_DWORD *)v24;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v24;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v24 + 4);
    unsigned int v26 = *(_DWORD *)v24;
    if (v26 <= 8)
    {
      if (((1 << v26) & 0x38) != 0)
      {
        unsigned int v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
LABEL_36:
        *(void *)(a2 + 80) = v27;
        goto LABEL_27;
      }
      if (((1 << v26) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v23 + 32 * v21 + 24);
        goto LABEL_27;
      }
      if (v26 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v27 = *(_DWORD **)(v23 + 32 * v21 + 24);
        if (v27) {
          *v27 += 2;
        }
        goto LABEL_36;
      }
    }
LABEL_27:
    int v22 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v22;
    ++v21;
  }
  while (v25 == 82);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression(v141, a2);
  if (!v142)
  {
    uint64_t v30 = *(void **)(a2 + 8);
    unsigned int v31 = *(_DWORD *)(a2 + 96) - v5;
    unsigned int v138 = v4;
    *(void *)&long long v139 = __PAIR64__(v31, v5);
    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::UnaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::UnaryOperation &,void>(v30, &v138, v141, (char *)&v135);
    *(_DWORD *)(a1 + 24) = 0;
    int v29 = v142;
    if (v142 != -1) {
      goto LABEL_43;
    }
    goto LABEL_44;
  }
  if (v142 != 1) {
    goto LABEL_216;
  }
  uint64_t v28 = *(void *)v141;
  if (*(void *)v141) {
    **(_DWORD **)v141 += 2;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v141[8];
  *(void *)a1 = v28;
  int v29 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_43:
  ((void (*)(const char **, unsigned char *))off_1ECABE170[v29])(&v138, v141);
LABEL_44:
  *(_DWORD *)(a2 + 44) = v6;
}

uint64_t WGSL::Parser<WGSL::Lexer<char16_t>>::parseAdditiveExpressionPostUnary(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a2 + 88);
  unsigned int v29 = *(_DWORD *)(a2 + 96);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseMultiplicativeExpressionPostUnary(&v38, a2, a3);
  uint64_t v7 = v40;
  if (!v40)
  {
    *a3 = v38;
    int v9 = (_OWORD *)(a1 + 8);
    uint64_t v28 = v7;
LABEL_10:
    int v12 = *(_DWORD *)(a2 + 56);
    if ((v12 - 59) > 0x11 || ((1 << (v12 - 59)) & 0x28809) == 0)
    {
      *(void *)a1 = *a3;
      *(_DWORD *)(a1 + 24) = 0;
LABEL_41:
      uint64_t v7 = v28;
      return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v7])(&v34, &v38);
    }
    uint64_t result = WGSL::toBinaryOperation(v12);
    char v37 = result;
    unsigned int v15 = *(_DWORD *)(a2 + 36);
    unsigned int v16 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v16;
      if (v15 <= v16) {
        goto LABEL_44;
      }
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v19 = v18 + 32 * v16;
      unsigned int v20 = *(_DWORD *)v19;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v19;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v19 + 4);
      unsigned int v21 = *(_DWORD *)v19;
      if (v21 > 8) {
        goto LABEL_16;
      }
      if (((1 << v21) & 0x38) != 0) {
        break;
      }
      if (((1 << v21) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v18 + 32 * v16 + 24);
      }
      else if (v21 == 8)
      {
        *(void *)(a2 + 80) = 0;
        int v22 = *(_DWORD **)(v18 + 32 * v16 + 24);
        if (v22) {
          *v22 += 2;
        }
        goto LABEL_25;
      }
LABEL_16:
      int v17 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v17;
      ++v16;
      if (v20 != 82)
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression(&v34, a2);
        if (v36)
        {
          if (v36 != 1) {
            goto LABEL_43;
          }
          uint64_t v23 = v34;
          if (v34) {
            *v34 += 2;
          }
          *int v9 = v35;
          *(void *)a1 = v23;
          int v10 = 1;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v11 = 1;
LABEL_8:
          ((void (*)(_DWORD **, _DWORD **))off_1ECABE170[v11])(&v31, &v34);
        }
        else
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseMultiplicativeExpressionPostUnary(&v31, a2, &v34);
          int v10 = v33;
          if (v33)
          {
            if (v33 != 1) {
              goto LABEL_43;
            }
            uint64_t v24 = v31;
            if (v31) {
              *v31 += 2;
            }
            *int v9 = v32;
            *(void *)a1 = v24;
            *(_DWORD *)(a1 + 24) = 1;
            uint64_t v25 = 1;
          }
          else
          {
            unsigned int v26 = *(void **)(a2 + 8);
            unsigned int v27 = *(_DWORD *)(a2 + 96) - v29;
            *(void *)&long long v30 = v6;
            *((void *)&v30 + 1) = __PAIR64__(v27, v29);
            *a3 = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v26, &v30, a3, &v31, &v37);
            uint64_t v25 = v33;
            if (v33 == -1)
            {
              uint64_t v11 = v36;
              if (v36 != -1) {
                goto LABEL_8;
              }
              goto LABEL_9;
            }
          }
          ((void (*)(long long *, _DWORD **))off_1ECABE170[v25])(&v30, &v31);
          uint64_t v11 = v36;
          if (v36 != -1) {
            goto LABEL_8;
          }
        }
LABEL_9:
        if (v10) {
          goto LABEL_41;
        }
        goto LABEL_10;
      }
    }
    int v22 = *(_DWORD **)(v18 + 32 * v16 + 24);
LABEL_25:
    *(void *)(a2 + 80) = v22;
    goto LABEL_16;
  }
  if (v40 == 1)
  {
    int v8 = v38;
    if (v38) {
      *v38 += 2;
    }
    *(_OWORD *)(a1 + 8) = v39;
    *(void *)a1 = v8;
    *(_DWORD *)(a1 + 24) = 1;
    return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v7])(&v34, &v38);
  }
LABEL_43:
  uint64_t result = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_44:
  __break(0xC471u);
  return result;
}

__n128 WGSL::Parser<WGSL::Lexer<char16_t>>::parsePostfixExpression(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, unsigned int a5)
{
  unsigned int v6 = a4;
  uint64_t v7 = a3;
  uint64_t v47 = *(unsigned int *)(a2 + 96);
  uint64_t v48 = *(void *)(a2 + 88);
  int v10 = (_OWORD *)(a2 + 60);
  unsigned int v58 = a3;
  unint64_t v11 = HIDWORD(a4);
  unsigned int v49 = (__n128 *)(a1 + 8);
  while (2)
  {
    while (1)
    {
      int v15 = *(_DWORD *)(a2 + 56);
      if (v15 == 69) {
        break;
      }
      if (v15 != 45)
      {
        *(void *)a1 = v7;
        *(_DWORD *)(a1 + 24) = 0;
        return result;
      }
      unsigned int v16 = *(_DWORD *)(a2 + 36);
      unsigned int v17 = *(_DWORD *)(a2 + 40) + 1;
      do
      {
        *(_DWORD *)(a2 + 40) = v17;
        if (v16 <= v17) {
          goto LABEL_80;
        }
        uint64_t v19 = *(void *)(a2 + 24);
        uint64_t v20 = v19 + 32 * v17;
        unsigned int v21 = *(_DWORD *)v20;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v20;
        *int v10 = *(_OWORD *)(v20 + 4);
        unsigned int v22 = *(_DWORD *)v20;
        if (v22 <= 8)
        {
          if (((1 << v22) & 0x38) != 0)
          {
            uint64_t v23 = *(_DWORD **)(v19 + 32 * v17 + 24);
LABEL_18:
            *(void *)(a2 + 80) = v23;
            goto LABEL_9;
          }
          if (((1 << v22) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v19 + 32 * v17 + 24);
            goto LABEL_9;
          }
          if (v22 == 8)
          {
            *(void *)(a2 + 80) = 0;
            uint64_t v23 = *(_DWORD **)(v19 + 32 * v17 + 24);
            if (v23) {
              *v23 += 2;
            }
            goto LABEL_18;
          }
        }
LABEL_9:
        int v18 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v18;
        ++v17;
      }
      while (v21 == 82);
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression(&v55, a2);
      if (v57)
      {
        if (v57 == 1)
        {
          unsigned int v33 = v55;
          if (v55) {
            *v55 += 2;
          }
          char v13 = 0;
          __n128 result = v56;
          *unsigned int v49 = v56;
          *(void *)a1 = v33;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v14 = v57;
          if (v57 == -1) {
            goto LABEL_4;
          }
          goto LABEL_3;
        }
LABEL_76:
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_80:
        __break(0xC471u);
        JUMPOUT(0x1825C4834);
      }
      if (*(_DWORD *)(a2 + 56) != 46)
      {
        *(_DWORD *)unsigned int v53 = *(_DWORD *)(a2 + 56);
        int v54 = 1;
        WGSL::toString();
        if (v54 != 1) {
          goto LABEL_76;
        }
        WGSL::toString();
        v60[0] = (unint64_t)"Expected a ";
        v60[1] = 12;
        v59[0] = ", but got a ";
        v59[1] = 13;
        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(v60, (uint64_t *)&v51, (uint64_t)v59, (uint64_t *)&v50, &v52);
        if (!v52) {
          goto LABEL_80;
        }
        int v42 = v50;
        int v50 = 0;
        if (v42)
        {
          if (*v42 != 2)
          {
            *v42 -= 2;
            goto LABEL_58;
          }
          WTF::StringImpl::destroy();
          uint64_t v43 = v51;
          uint64_t v51 = 0;
          if (v43)
          {
LABEL_61:
            if (*v43 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v43 -= 2;
            }
          }
        }
        else
        {
LABEL_58:
          uint64_t v43 = v51;
          uint64_t v51 = 0;
          if (v43) {
            goto LABEL_61;
          }
        }
        unint64_t v44 = v47 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v47) << 32);
        *(void *)a1 = v52;
        *(void *)(a1 + 8) = v48;
        *(void *)(a1 + 16) = v44;
        *(_DWORD *)(a1 + 24) = 1;
        if (v54 != -1) {
          ((void (*)(unint64_t *, unsigned char *))off_1ECABDF90[v54])(v60, v53);
        }
        char v13 = 0;
        uint64_t v14 = v57;
        if (v57 == -1) {
          goto LABEL_4;
        }
LABEL_3:
        ((void (*)(unsigned char *, _DWORD **))off_1ECABE170[v14])(v53, &v55);
        goto LABEL_4;
      }
      *(_OWORD *)&v53[4] = *v10;
      *(_DWORD *)unsigned int v53 = 46;
      int v54 = 0;
      unsigned int v34 = *(_DWORD *)(a2 + 36);
      unsigned int v35 = *(_DWORD *)(a2 + 40) + 1;
      while (2)
      {
        *(_DWORD *)(a2 + 40) = v35;
        if (v34 <= v35)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C4844);
        }
        uint64_t v37 = *(void *)(a2 + 24);
        uint64_t v38 = v37 + 32 * v35;
        unsigned int v39 = *(_DWORD *)v38;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
        *int v10 = *(_OWORD *)(v38 + 4);
        unsigned int v40 = *(_DWORD *)v38;
        if (v40 <= 8)
        {
          if (((1 << v40) & 0x38) != 0)
          {
            unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
            goto LABEL_52;
          }
          if (((1 << v40) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v37 + 32 * v35 + 24);
          }
          else if (v40 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
            if (v41) {
              *v41 += 2;
            }
LABEL_52:
            *(void *)(a2 + 80) = v41;
          }
        }
        int v36 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v36;
        ++v35;
        if (v39 == 82) {
          continue;
        }
        break;
      }
      *(_DWORD *)unsigned int v53 = v6;
      *(_DWORD *)&v53[4] = v11;
      *(_DWORD *)&v53[8] = a5;
      *(_DWORD *)&v53[12] = v36 - a5;
      uint64_t v7 = WGSL::AST::Builder::construct<WGSL::AST::IndexAccessExpression,WGSL::SourceSpan &,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,void>(*(void **)(a2 + 8), v53, &v58, &v55);
      unsigned int v58 = v7;
      char v13 = 1;
      uint64_t v14 = v57;
      if (v57 != -1) {
        goto LABEL_3;
      }
LABEL_4:
      if ((v13 & 1) == 0) {
        return result;
      }
    }
    unsigned int v24 = *(_DWORD *)(a2 + 36);
    unsigned int v25 = *(_DWORD *)(a2 + 40) + 1;
    do
    {
      *(_DWORD *)(a2 + 40) = v25;
      if (v24 <= v25)
      {
        __break(0xC471u);
        JUMPOUT(0x1825C483CLL);
      }
      uint64_t v27 = *(void *)(a2 + 24);
      uint64_t v28 = v27 + 32 * v25;
      unsigned int v29 = *(_DWORD *)v28;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v28;
      *int v10 = *(_OWORD *)(v28 + 4);
      unsigned int v30 = *(_DWORD *)v28;
      if (v30 <= 8)
      {
        if (((1 << v30) & 0x38) != 0)
        {
          unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
LABEL_30:
          *(void *)(a2 + 80) = v31;
          goto LABEL_21;
        }
        if (((1 << v30) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v27 + 32 * v25 + 24);
          goto LABEL_21;
        }
        if (v30 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
          if (v31) {
            *v31 += 2;
          }
          goto LABEL_30;
        }
      }
LABEL_21:
      int v26 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v26;
      ++v25;
    }
    while (v29 == 82);
    WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)v53, a2);
    if (!v54)
    {
      unsigned int v32 = *(_DWORD *)(a2 + 96) - a5;
      int v55 = (_DWORD *)__PAIR64__(v11, v6);
      v56.n128_u64[0] = __PAIR64__(v32, a5);
      uint64_t v7 = WGSL::AST::Builder::construct<WGSL::AST::FieldAccessExpression,WGSL::SourceSpan &,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::Identifier,void>(*(void **)(a2 + 8), &v55, &v58, (uint64_t)v53);
      unsigned int v58 = v7;
      if (v54 != -1) {
        ((void (*)(_DWORD **, unsigned char *))off_1ECABDF80[v54])(&v55, v53);
      }
      continue;
    }
    break;
  }
  if (v54 != 1) {
    goto LABEL_76;
  }
  unsigned int v45 = *(_DWORD **)v53;
  if (*(void *)v53)
  {
    int v46 = **(_DWORD **)v53;
    **(_DWORD **)v53 += 2;
    __n128 result = *(__n128 *)&v53[8];
    *unsigned int v49 = *(__n128 *)&v53[8];
    *(void *)a1 = v45;
    *(_DWORD *)(a1 + 24) = 1;
    *(void *)unsigned int v53 = 0;
    if (v46) {
      _DWORD *v45 = v46;
    }
    else {
      WTF::StringImpl::destroy();
    }
  }
  else
  {
    __n128 result = *(__n128 *)&v53[8];
    *unsigned int v49 = *(__n128 *)&v53[8];
    *(void *)a1 = 0;
    *(_DWORD *)(a1 + 24) = 1;
  }
  return result;
}

void WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression(uint64_t a1, uint64_t a2)
{
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression((uint64_t)&v31, a2);
  if (!v33)
  {
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 - 36) <= 0x2C && ((1 << (v5 - 36)) & 0x100010000001) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 96);
      uint64_t v27 = *(int **)(a2 + 88);
      char v37 = WGSL::toBinaryOperation(v5);
      int v8 = *(_DWORD *)(a2 + 56);
LABEL_14:
      if (*(_DWORD *)(a2 + 56) == v8)
      {
        unsigned int v10 = *(_DWORD *)(a2 + 36);
        unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v11;
          if (v10 <= v11) {
            goto LABEL_63;
          }
          uint64_t v13 = *(void *)(a2 + 24);
          uint64_t v14 = v13 + 32 * v11;
          unsigned int v15 = *(_DWORD *)v14;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
          *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
          unsigned int v16 = *(_DWORD *)v14;
          if (v16 > 8) {
            goto LABEL_17;
          }
          if (((1 << v16) & 0x38) != 0) {
            break;
          }
          if (((1 << v16) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
          }
          else if (v16 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
            if (v17) {
              *v17 += 2;
            }
            goto LABEL_26;
          }
LABEL_17:
          int v12 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v12;
          ++v11;
          if (v15 != 82)
          {
            WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression((uint64_t)&v34, a2);
            unsigned int v18 = v36;
            if (v36)
            {
              if (v36 != 1) {
                goto LABEL_62;
              }
              uint64_t v19 = v34;
              if (v34) {
                *v34 += 2;
              }
              *(_OWORD *)(a1 + 8) = v35;
              *(void *)a1 = v19;
              *(_DWORD *)(a1 + 24) = 1;
              uint64_t v9 = 1;
LABEL_12:
              ((void (*)(int **, int **))off_1ECABE170[v9])(&v28, &v34);
            }
            else
            {
              uint64_t v20 = *(void **)(a2 + 8);
              unsigned int v21 = *(_DWORD *)(a2 + 96) - v7;
              uint64_t v28 = v27;
              *(void *)&long long v29 = __PAIR64__(v21, v7);
              unsigned int v31 = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v20, &v28, &v31, &v34, &v37);
              uint64_t v9 = v36;
              if (v36 != -1) {
                goto LABEL_12;
              }
            }
            if (v18) {
              goto LABEL_57;
            }
            goto LABEL_14;
          }
        }
        unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_26:
        *(void *)(a2 + 80) = v17;
        goto LABEL_17;
      }
      *(void *)a1 = v31;
      *(_DWORD *)(a1 + 24) = 0;
LABEL_57:
      if (v33 != -1) {
        ((void (*)(int **, void **))off_1ECABE170[v33])(&v34, &v31);
      }
      return;
    }
    WGSL::Parser<WGSL::Lexer<char16_t>>::parseRelationalExpressionPostUnary((uint64_t)&v34, a2, &v31);
    if (v36)
    {
      if (v36 != 1) {
        goto LABEL_62;
      }
      unsigned int v22 = v34;
      if (v34) {
        *v34 += 2;
      }
      *(_OWORD *)(a1 + 8) = v35;
      *(void *)a1 = v22;
LABEL_39:
      *(_DWORD *)(a1 + 24) = 1;
      uint64_t v23 = v36;
      if (v36 == -1) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    int v24 = *(_DWORD *)(a2 + 56);
    if (v24 == 37)
    {
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseShortCircuitExpression((uint64_t)&v28, a2, (uint64_t *)&v34, 37, 16);
      if (v30)
      {
        if (v30 != 1) {
          goto LABEL_62;
        }
        unsigned int v25 = v28;
        if (v28)
        {
LABEL_46:
          int v26 = *v25;
          *v25 += 2;
          *(_OWORD *)(a1 + 8) = v29;
          *(void *)a1 = v25;
          *(_DWORD *)(a1 + 24) = 1;
          if (v26)
          {
            int *v25 = v26;
            uint64_t v23 = v36;
            if (v36 == -1) {
              goto LABEL_57;
            }
          }
          else
          {
            WTF::StringImpl::destroy();
            uint64_t v23 = v36;
            if (v36 == -1) {
              goto LABEL_57;
            }
          }
LABEL_56:
          ((void (*)(int **, int **))off_1ECABE170[v23])(&v28, &v34);
          goto LABEL_57;
        }
LABEL_52:
        *(_OWORD *)(a1 + 8) = v29;
        *(void *)a1 = 0;
        goto LABEL_39;
      }
    }
    else
    {
      if (v24 != 65)
      {
        *(void *)a1 = v34;
        *(_DWORD *)(a1 + 24) = 0;
        uint64_t v23 = v36;
        if (v36 == -1) {
          goto LABEL_57;
        }
        goto LABEL_56;
      }
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseShortCircuitExpression((uint64_t)&v28, a2, (uint64_t *)&v34, 65, 17);
      if (v30)
      {
        if (v30 != 1) {
          goto LABEL_62;
        }
        unsigned int v25 = v28;
        if (v28) {
          goto LABEL_46;
        }
        goto LABEL_52;
      }
    }
    unsigned int v34 = v28;
    *(void *)a1 = v28;
    *(_DWORD *)(a1 + 24) = 0;
    uint64_t v23 = v36;
    if (v36 == -1) {
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  if (v33 == 1)
  {
    uint64_t v4 = v31;
    if (v31) {
      *(_DWORD *)v31 += 2;
    }
    *(_OWORD *)(a1 + 8) = v32;
    *(void *)a1 = v4;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_57;
  }
LABEL_62:
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_63:
  __break(0xC471u);
}

_DWORD *WGSL::Parser<WGSL::Lexer<char16_t>>::parseArgumentExpressionList(_DWORD *result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 67)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v47 = "Expected a ";
    *(void *)&v47[8] = 12;
    unsigned int v49 = ", but got a ";
    *(void *)&long long v50 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v47, (uint64_t *)&v55, (uint64_t)&v49, (uint64_t *)&v54, v57);
    if (!v57[0])
    {
      __break(0xC471u);
      goto LABEL_90;
    }
    unsigned int v15 = v54;
    int v54 = 0;
    if (v15)
    {
      if (*v15 == 2)
      {
        WTF::StringImpl::destroy();
        __n128 result = v55;
        int v55 = 0;
        if (!result)
        {
LABEL_82:
          unint64_t v42 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)uint64_t v3 = v57[0];
          *((void *)v3 + 1) = v4;
          *((void *)v3 + 2) = v42;
          v3[6] = 1;
          return result;
        }
LABEL_79:
        if (*result == 2) {
          __n128 result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_82;
      }
      *v15 -= 2;
    }
    __n128 result = v55;
    int v55 = 0;
    if (!result) {
      goto LABEL_82;
    }
    goto LABEL_79;
  }
  unsigned int v6 = (_OWORD *)(a2 + 60);
  unsigned int v7 = *(_DWORD *)(a2 + 36);
  unsigned int v8 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v8;
    if (v7 <= v8)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C5258);
    }
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = v10 + 32 * v8;
    unsigned int v12 = *(_DWORD *)v11;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v11;
    *unsigned int v6 = *(_OWORD *)(v11 + 4);
    unsigned int v13 = *(_DWORD *)v11;
    if (v13 <= 8)
    {
      if (((1 << v13) & 0x38) != 0)
      {
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v14;
        goto LABEL_4;
      }
      if (((1 << v13) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v10 + 32 * v8 + 24);
        goto LABEL_4;
      }
      if (v13 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v14 = *(_DWORD **)(v10 + 32 * v8 + 24);
        if (v14) {
          *v14 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v9 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v9;
    ++v8;
  }
  while (v12 == 82);
  uint64_t v43 = v5;
  unsigned int v16 = 0;
  unsigned int v17 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  do
  {
    if (*(_DWORD *)(a2 + 56) == 68)
    {
      unsigned int v34 = *(_DWORD *)(a2 + 36);
      for (unsigned int i = *(_DWORD *)(a2 + 40) + 1; ; ++i)
      {
        *(_DWORD *)(a2 + 40) = i;
        if (v34 <= i)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C5260);
        }
        uint64_t v37 = *(void *)(a2 + 24);
        uint64_t v38 = v37 + 32 * i;
        unsigned int v39 = *(_DWORD *)v38;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
        *unsigned int v6 = *(_OWORD *)(v38 + 4);
        unsigned int v40 = *(_DWORD *)v38;
        if (v40 > 8) {
          goto LABEL_65;
        }
        if (((1 << v40) & 0x38) != 0) {
          break;
        }
        if (((1 << v40) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v37 + 32 * i + 24);
        }
        else if (v40 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v41 = *(_DWORD **)(v37 + 32 * i + 24);
          if (v41) {
            *v41 += 2;
          }
          goto LABEL_74;
        }
LABEL_65:
        int v36 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v36;
        if (v39 != 82)
        {
          *(void *)uint64_t v3 = v52;
          v3[2] = v53;
          v3[3] = v17;
          v3[6] = 0;
          return result;
        }
      }
      unsigned int v41 = *(_DWORD **)(v37 + 32 * i + 24);
LABEL_74:
      *(void *)(a2 + 80) = v41;
      goto LABEL_65;
    }
    __n128 result = (_DWORD *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression(&v49, a2);
    if (!v51)
    {
      if (v17 == v53)
      {
        __n128 result = (_DWORD *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v52, v17 + 1, (unint64_t)&v49);
        int v22 = HIDWORD(v53);
        unsigned int v16 = v52;
        *((void *)v52 + HIDWORD(v53)) = *(void *)result;
        unsigned int v17 = v22 + 1;
        HIDWORD(v53) = v22 + 1;
        int v23 = *(_DWORD *)(a2 + 56);
        if (v23 == 68) {
          goto LABEL_21;
        }
      }
      else
      {
        *((void *)v16 + v17) = v49;
        unsigned int v17 = ++HIDWORD(v53);
        int v23 = *(_DWORD *)(a2 + 56);
        if (v23 == 68)
        {
LABEL_21:
          char v18 = 1;
          uint64_t v19 = v51;
          if (v51 == -1) {
            continue;
          }
LABEL_22:
          __n128 result = (_DWORD *)((uint64_t (*)(unsigned char *, const char **))off_1ECABE170[v19])(v47, &v49);
          continue;
        }
      }
      if (v23 == 48)
      {
        *(_OWORD *)&v47[4] = *v6;
        *(_DWORD *)uint64_t v47 = 48;
        int v48 = 0;
        unsigned int v24 = *(_DWORD *)(a2 + 36);
        unsigned int v25 = *(_DWORD *)(a2 + 40) + 1;
        while (1)
        {
          *(_DWORD *)(a2 + 40) = v25;
          if (v24 <= v25) {
            goto LABEL_85;
          }
          uint64_t v27 = *(void *)(a2 + 24);
          uint64_t v28 = v27 + 32 * v25;
          unsigned int v29 = *(_DWORD *)v28;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v28;
          *unsigned int v6 = *(_OWORD *)(v28 + 4);
          unsigned int v30 = *(_DWORD *)v28;
          if (v30 <= 8)
          {
            if (((1 << v30) & 0x38) != 0)
            {
              unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
LABEL_47:
              *(void *)(a2 + 80) = v31;
              goto LABEL_38;
            }
            if (((1 << v30) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v27 + 32 * v25 + 24);
            }
            else if (v30 == 8)
            {
              *(void *)(a2 + 80) = 0;
              unsigned int v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
              if (v31) {
                *v31 += 2;
              }
              goto LABEL_47;
            }
          }
LABEL_38:
          int v26 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v26;
          ++v25;
          if (v29 != 82) {
            goto LABEL_21;
          }
        }
      }
      *(_DWORD *)uint64_t v47 = v23;
      int v48 = 1;
      WGSL::toString();
      if (v48 != 1)
      {
LABEL_84:
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_85:
        __break(0xC471u);
LABEL_90:
        JUMPOUT(0x1825C5250);
      }
      WGSL::toString();
      v57[0] = (unint64_t)"Expected a ";
      v57[1] = 12;
      v56[0] = ", but got a ";
      v56[1] = 13;
      WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(v57, (uint64_t *)&v45, (uint64_t)v56, (uint64_t *)&v44, &v46);
      if (!v46)
      {
        __break(0xC471u);
        JUMPOUT(0x1825C5268);
      }
      long long v32 = v44;
      unint64_t v44 = 0;
      if (v32)
      {
        if (*v32 == 2)
        {
          WTF::StringImpl::destroy();
          __n128 result = v45;
          unsigned int v45 = 0;
          if (!result) {
            goto LABEL_59;
          }
LABEL_56:
          if (*result == 2) {
            __n128 result = (_DWORD *)WTF::StringImpl::destroy();
          }
          else {
            *result -= 2;
          }
LABEL_59:
          unint64_t v33 = v43 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v43) << 32);
          *(void *)uint64_t v3 = v46;
          *((void *)v3 + 1) = v4;
          *((void *)v3 + 2) = v33;
          v3[6] = 1;
          if (v48 != -1) {
            __n128 result = (_DWORD *)((uint64_t (*)(unint64_t *, unsigned char *))off_1ECABDF90[v48])(v57, v47);
          }
          char v18 = 0;
          uint64_t v19 = v51;
          if (v51 != -1) {
            goto LABEL_22;
          }
          continue;
        }
        *v32 -= 2;
      }
      __n128 result = v45;
      unsigned int v45 = 0;
      if (!result) {
        goto LABEL_59;
      }
      goto LABEL_56;
    }
    if (v51 != 1) {
      goto LABEL_84;
    }
    unsigned int v21 = v49;
    if (v49) {
      *(_DWORD *)v49 += 2;
    }
    char v18 = 0;
    *(_OWORD *)(v3 + 2) = v50;
    *(void *)uint64_t v3 = v21;
    v3[6] = 1;
    uint64_t v19 = v51;
    if (v51 != -1) {
      goto LABEL_22;
    }
  }
  while ((v18 & 1) != 0);
  if (v16)
  {
    uint64_t v52 = 0;
    LODWORD(v53) = 0;
    return (_DWORD *)WTF::fastFree(v16, v20);
  }
  return result;
}

uint64_t WGSL::Parser<WGSL::Lexer<char16_t>>::parseRelationalExpressionPostUnary(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v6 = *(_DWORD **)(a2 + 88);
  unsigned int v7 = *(_DWORD *)(a2 + 96);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseShiftExpressionPostUnary(&v31, a2, a3);
  if (!v33)
  {
    uint64_t v10 = v31;
    *a3 = v31;
    unsigned int v11 = *(_DWORD *)(a2 + 56);
    if (v11 > 0x38 || ((1 << v11) & 0x19C040000000000) == 0)
    {
LABEL_41:
      int v9 = 0;
      *(void *)a1 = v10;
      *(_DWORD *)(a1 + 24) = 0;
      return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v9])(&v37, &v31);
    }
    uint64_t result = WGSL::toBinaryOperation(*(_DWORD *)(a2 + 56));
    char v30 = result;
    unsigned int v14 = *(_DWORD *)(a2 + 36);
    unsigned int v15 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v15;
      if (v14 <= v15) {
        goto LABEL_47;
      }
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = v17 + 32 * v15;
      unsigned int v19 = *(_DWORD *)v18;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v18;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v18 + 4);
      unsigned int v20 = *(_DWORD *)v18;
      if (v20 > 8) {
        goto LABEL_12;
      }
      if (((1 << v20) & 0x38) != 0) {
        break;
      }
      if (((1 << v20) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v17 + 32 * v15 + 24);
      }
      else if (v20 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
        if (v21) {
          *v21 += 2;
        }
        goto LABEL_21;
      }
LABEL_12:
      int v16 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v16;
      ++v15;
      if (v19 != 82)
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression((uint64_t)&v37, a2);
        if (v39)
        {
          if (v39 != 1) {
            goto LABEL_46;
          }
          int v22 = v37;
          if (v37) {
            *v37 += 2;
          }
          long long v28 = v38;
          uint64_t v27 = v22;
          LODWORD(v23) = 1;
          int v29 = 1;
          int v24 = 1;
          goto LABEL_34;
        }
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseShiftExpressionPostUnary(&v34, a2, &v37);
        uint64_t v23 = v36;
        if (v36)
        {
          if (v36 != 1) {
            goto LABEL_46;
          }
          int v22 = v34;
          if (v34) {
            *v34 += 2;
          }
          long long v28 = v35;
          uint64_t v27 = v22;
          int v29 = 1;
        }
        else
        {
          int v22 = v34;
          uint64_t v27 = v34;
          int v29 = 0;
        }
        ((void (*)(char *, _DWORD **))off_1ECABE170[v23])(&v40, &v34);
        int v24 = v39;
        if (v39 != -1) {
LABEL_34:
        }
          ((void (*)(_DWORD **, _DWORD **))off_1ECABE170[v24])(&v34, &v37);
        if (!v23)
        {
          unsigned int v25 = *(void **)(a2 + 8);
          unsigned int v26 = *(_DWORD *)(a2 + 96) - v7;
          uint64_t v37 = v6;
          *(void *)&long long v38 = __PAIR64__(v26, v7);
          uint64_t v10 = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v25, &v37, a3, &v27, &v30);
          *a3 = v10;
          goto LABEL_41;
        }
        if (v23 != 1) {
          goto LABEL_46;
        }
        if (!v22)
        {
          *(_OWORD *)(a1 + 8) = v28;
          *(void *)a1 = 0;
          *(_DWORD *)(a1 + 24) = 1;
          int v9 = 0;
          return ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v9])(&v37, &v31);
        }
        *v22 += 2;
        *(_OWORD *)(a1 + 8) = v28;
        *(void *)a1 = v22;
        *(_DWORD *)(a1 + 24) = 1;
        uint64_t v27 = 0;
        if (*v22 != 2)
        {
          *v22 -= 2;
          int v9 = 0;
          return ((uint64_t (*)(void, void))off_1ECABE170[v9])(&v37, &v31);
        }
        uint64_t result = WTF::StringImpl::destroy();
        int v9 = v33;
        if (v33 != -1) {
          return ((uint64_t (*)(void, void))off_1ECABE170[v9])(&v37, &v31);
        }
        return result;
      }
    }
    unsigned int v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
LABEL_21:
    *(void *)(a2 + 80) = v21;
    goto LABEL_12;
  }
  if (v33 == 1)
  {
    unsigned int v8 = v31;
    if (v31) {
      *v31 += 2;
    }
    *(_OWORD *)(a1 + 8) = v32;
    *(void *)a1 = v8;
    int v9 = 1;
    *(_DWORD *)(a1 + 24) = 1;
    return ((uint64_t (*)(void, void))off_1ECABE170[v9])(&v37, &v31);
  }
LABEL_46:
  uint64_t result = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_47:
  __break(0xC471u);
  return result;
}

uint64_t WGSL::Parser<WGSL::Lexer<char16_t>>::parseShortCircuitExpression(uint64_t result, uint64_t a2, uint64_t *a3, int a4, char a5)
{
  uint64_t v8 = result;
  char v34 = a5;
  unsigned int v28 = *(_DWORD *)(a2 + 92);
  unsigned int v29 = *(_DWORD *)(a2 + 88);
  int v9 = (_OWORD *)(a2 + 60);
  unsigned int v27 = *(_DWORD *)(a2 + 96);
  char v30 = (_OWORD *)(result + 8);
  while (*(_DWORD *)(a2 + 56) == a4)
  {
    unsigned int v11 = *(_DWORD *)(a2 + 36);
    unsigned int v12 = *(_DWORD *)(a2 + 40) + 1;
    do
    {
      *(_DWORD *)(a2 + 40) = v12;
      if (v11 <= v12) {
        goto LABEL_40;
      }
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = v14 + 32 * v12;
      unsigned int v16 = *(_DWORD *)v15;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v15;
      *int v9 = *(_OWORD *)(v15 + 4);
      unsigned int v17 = *(_DWORD *)v15;
      if (v17 <= 8)
      {
        if (((1 << v17) & 0x38) != 0)
        {
          uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
LABEL_17:
          *(void *)(a2 + 80) = v18;
          goto LABEL_8;
        }
        if (((1 << v17) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v14 + 32 * v12 + 24);
          goto LABEL_8;
        }
        if (v17 == 8)
        {
          *(void *)(a2 + 80) = 0;
          uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
          if (v18) {
            *v18 += 2;
          }
          goto LABEL_17;
        }
      }
LABEL_8:
      int v13 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v13;
      ++v12;
    }
    while (v16 == 82);
    WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression((uint64_t)&v38, a2);
    if (!v40)
    {
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseRelationalExpressionPostUnary((uint64_t)&v35, a2, &v38);
      uint64_t v21 = v37;
      if (v37)
      {
        if (v37 != 1)
        {
LABEL_39:
          uint64_t result = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_40:
          __break(0xC471u);
          return result;
        }
        int v22 = v35;
        if (v35) {
          *v35 += 2;
        }
        long long v32 = v36;
      }
      else
      {
        int v22 = v35;
      }
      unsigned int v31 = v22;
      unsigned int v33 = v21;
      ((void (*)(unsigned char *, _DWORD **))off_1ECABE170[v21])(v41, &v35);
      uint64_t v20 = v40;
      if (v40 != -1) {
        goto LABEL_30;
      }
      goto LABEL_31;
    }
    if (v40 != 1) {
      goto LABEL_39;
    }
    unsigned int v19 = v38;
    if (v38) {
      *v38 += 2;
    }
    long long v32 = v39;
    unsigned int v31 = v19;
    unsigned int v33 = 1;
    uint64_t v20 = 1;
LABEL_30:
    ((void (*)(_DWORD **, _DWORD **))off_1ECABE170[v20])(&v35, &v38);
LABEL_31:
    unsigned int v23 = v33;
    if (!v33)
    {
      unsigned int v25 = *(void **)(a2 + 8);
      unsigned int v26 = *(_DWORD *)(a2 + 96) - v27;
      long long v38 = (_DWORD *)__PAIR64__(v28, v29);
      *(void *)&long long v39 = __PAIR64__(v26, v27);
      uint64_t result = (uint64_t)WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v25, &v38, a3, &v31, &v34);
      *a3 = result;
      uint64_t v10 = v33;
      if (v33 != -1) {
        goto LABEL_3;
      }
      goto LABEL_4;
    }
    if (v33 != 1) {
      goto LABEL_39;
    }
    int v24 = v31;
    if (v31) {
      *v31 += 2;
    }
    *char v30 = v32;
    *(void *)uint64_t v8 = v24;
    *(_DWORD *)(v8 + 24) = 1;
    uint64_t v10 = 1;
LABEL_3:
    uint64_t result = ((uint64_t (*)(_DWORD **, _DWORD **))off_1ECABE170[v10])(&v38, &v31);
LABEL_4:
    if (v23) {
      return result;
    }
  }
  *(void *)uint64_t v8 = *a3;
  *(_DWORD *)(v8 + 24) = 0;
  return result;
}

void *WGSL::Parser<WGSL::Lexer<char16_t>>::parseShiftExpressionPostUnary(void *result, uint64_t a2, void *a3)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(a2 + 56);
  if ((v6 - 59) <= 0x11 && ((1 << (v6 - 59)) & 0x28809) != 0)
  {
    return (void *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseAdditiveExpressionPostUnary((uint64_t)result, a2, a3);
  }
  uint64_t v8 = *(void *)(a2 + 88);
  unsigned int v9 = *(_DWORD *)(a2 + 96);
  if (v6 != 57)
  {
    if (v6 != 53)
    {
      *uint64_t result = *a3;
      *((_DWORD *)result + 6) = 0;
      return result;
    }
    unsigned int v10 = *(_DWORD *)(a2 + 36);
    unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v11;
      if (v10 <= v11) {
        goto LABEL_47;
      }
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = v13 + 32 * v11;
      unsigned int v15 = *(_DWORD *)v14;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
      unsigned int v16 = *(_DWORD *)v14;
      if (v16 > 8) {
        goto LABEL_12;
      }
      if (((1 << v16) & 0x38) != 0) {
        break;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
      }
      else if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_21;
      }
LABEL_12:
      int v12 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v12;
      ++v11;
      if (v15 != 82)
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression((uint64_t)&v35, a2);
        int v26 = v37;
        if (!v37)
        {
          unsigned int v27 = *(void **)(a2 + 8);
          unsigned int v28 = *(_DWORD *)(a2 + 96) - v9;
          *(void *)&long long v34 = v8;
          *((void *)&v34 + 1) = __PAIR64__(v28, v9);
          char v29 = 9;
          goto LABEL_43;
        }
LABEL_38:
        if (v26 == 1)
        {
          char v30 = v35;
          if (v35) {
            *v35 += 2;
          }
          *(_OWORD *)(v5 + 1) = v36;
          void *v5 = v30;
          int v31 = 1;
          *((_DWORD *)v5 + 6) = 1;
          return (void *)((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v34, &v35);
        }
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_47:
        __break(0xC471u);
LABEL_49:
        JUMPOUT(0x1825C5BC8);
      }
    }
    unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_21:
    *(void *)(a2 + 80) = v17;
    goto LABEL_12;
  }
  unsigned int v18 = *(_DWORD *)(a2 + 36);
  unsigned int v19 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v19;
    if (v18 <= v19)
    {
      __break(0xC471u);
      goto LABEL_49;
    }
    uint64_t v21 = *(void *)(a2 + 24);
    uint64_t v22 = v21 + 32 * v19;
    unsigned int v23 = *(_DWORD *)v22;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v22;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v22 + 4);
    unsigned int v24 = *(_DWORD *)v22;
    if (v24 <= 8)
    {
      if (((1 << v24) & 0x38) != 0)
      {
        unsigned int v25 = *(_DWORD **)(v21 + 32 * v19 + 24);
LABEL_33:
        *(void *)(a2 + 80) = v25;
        goto LABEL_24;
      }
      if (((1 << v24) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v21 + 32 * v19 + 24);
        goto LABEL_24;
      }
      if (v24 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v25 = *(_DWORD **)(v21 + 32 * v19 + 24);
        if (v25) {
          *v25 += 2;
        }
        goto LABEL_33;
      }
    }
LABEL_24:
    int v20 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v20;
    ++v19;
  }
  while (v23 == 82);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression((uint64_t)&v35, a2);
  int v26 = v37;
  if (v37) {
    goto LABEL_38;
  }
  unsigned int v27 = *(void **)(a2 + 8);
  unsigned int v32 = *(_DWORD *)(a2 + 96) - v9;
  *(void *)&long long v34 = v8;
  *((void *)&v34 + 1) = __PAIR64__(v32, v9);
  char v29 = 8;
LABEL_43:
  char v33 = v29;
  uint64_t result = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v27, &v34, a3, &v35, &v33);
  void *v5 = result;
  *((_DWORD *)v5 + 6) = 0;
  int v31 = v37;
  if (v37 != -1) {
    return (void *)((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v34, &v35);
  }
  return result;
}

void *WGSL::Parser<WGSL::Lexer<char16_t>>::parseMultiplicativeExpressionPostUnary(void *result, uint64_t a2, void *a3)
{
  uint64_t v5 = result;
  unsigned int v6 = *(_DWORD *)(a2 + 96);
  unsigned int v25 = *(_DWORD *)(a2 + 92);
  unsigned int v26 = *(_DWORD *)(a2 + 88);
  unsigned int v7 = (_OWORD *)(a2 + 60);
  uint64_t v8 = result + 1;
  while (1)
  {
    int v10 = *(_DWORD *)(a2 + 56);
    if ((v10 - 62) > 0xE || ((1 << (v10 - 62)) & 0x5001) == 0) {
      break;
    }
    char v31 = 2;
    if (v10 != 76)
    {
      if (v10 == 74)
      {
        char v12 = 3;
      }
      else
      {
        if (v10 != 62) {
          goto LABEL_36;
        }
        char v12 = 4;
      }
      char v31 = v12;
    }
    unsigned int v13 = *(_DWORD *)(a2 + 36);
    unsigned int v14 = *(_DWORD *)(a2 + 40) + 1;
    do
    {
      *(_DWORD *)(a2 + 40) = v14;
      if (v13 <= v14) {
        goto LABEL_36;
      }
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = v16 + 32 * v14;
      unsigned int v18 = *(_DWORD *)v17;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v17;
      *unsigned int v7 = *(_OWORD *)(v17 + 4);
      unsigned int v19 = *(_DWORD *)v17;
      if (v19 <= 8)
      {
        if (((1 << v19) & 0x38) != 0)
        {
          int v20 = *(_DWORD **)(v16 + 32 * v14 + 24);
LABEL_26:
          *(void *)(a2 + 80) = v20;
          goto LABEL_17;
        }
        if (((1 << v19) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v16 + 32 * v14 + 24);
          goto LABEL_17;
        }
        if (v19 == 8)
        {
          *(void *)(a2 + 80) = 0;
          int v20 = *(_DWORD **)(v16 + 32 * v14 + 24);
          if (v20) {
            *v20 += 2;
          }
          goto LABEL_26;
        }
      }
LABEL_17:
      int v15 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v15;
      ++v14;
    }
    while (v18 == 82);
    WGSL::Parser<WGSL::Lexer<char16_t>>::parseUnaryExpression(&v28, a2);
    unsigned int v21 = v30;
    if (!v30)
    {
      unsigned int v23 = *(void **)(a2 + 8);
      unsigned int v24 = *(_DWORD *)(a2 + 96) - v6;
      *(void *)&long long v27 = __PAIR64__(v25, v26);
      *((void *)&v27 + 1) = __PAIR64__(v24, v6);
      uint64_t result = WGSL::AST::Builder::construct<WGSL::AST::BinaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation const&,void>(v23, &v27, a3, &v28, &v31);
      *a3 = result;
      uint64_t v9 = v30;
      if (v30 != -1) {
        goto LABEL_3;
      }
      goto LABEL_4;
    }
    if (v30 != 1)
    {
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_36:
      __break(0xC471u);
      JUMPOUT(0x1825C5E20);
    }
    uint64_t v22 = v28;
    if (v28) {
      *v28 += 2;
    }
    *uint64_t v8 = v29;
    void *v5 = v22;
    *((_DWORD *)v5 + 6) = 1;
    uint64_t v9 = 1;
LABEL_3:
    uint64_t result = (void *)((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v9])(&v27, &v28);
LABEL_4:
    if (v21) {
      return result;
    }
  }
  void *v5 = *a3;
  *((_DWORD *)v5 + 6) = 0;
  return result;
}

_DWORD *WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  if (*(_DWORD *)(a2 + 56) != 40)
  {
    WGSL::toString();
    WGSL::toString();
    *(void *)uint64_t v179 = "Expected a ";
    *(void *)&v179[8] = 12;
    uint64_t v171 = ", but got a ";
    *(void *)&long long v172 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v179, (uint64_t *)&v184, (uint64_t)&v171, (uint64_t *)&v183, &v155);
    if (!v155)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C7B38);
    }
    uint64_t v16 = v183;
    int8x16_t v183 = 0;
    if (v16)
    {
      if (*v16 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t result = v184;
        uint64_t v184 = 0;
        if (!result)
        {
LABEL_57:
          unint64_t v31 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v155;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v31;
          *(_DWORD *)(a1 + 24) = 1;
          return result;
        }
LABEL_54:
        if (*result == 2) {
          uint64_t result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_57;
      }
      *v16 -= 2;
    }
    uint64_t result = v184;
    uint64_t v184 = 0;
    if (!result) {
      goto LABEL_57;
    }
    goto LABEL_54;
  }
  unint64_t v6 = (unint64_t)&v146;
  uint64_t v7 = a2 + 60;
  unsigned int v8 = *(_DWORD *)(a2 + 36);
  unsigned int v9 = *(_DWORD *)(a2 + 40) + 1;
  uint64_t v10 = 32 * v9;
  do
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v8 <= v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C7B18);
    }
    uint64_t v12 = *(void *)(a2 + 24);
    unint64_t v13 = *(unsigned int *)(v12 + v10);
    *(_DWORD *)(a2 + 56) = v13;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)(v12 + v10 + 4);
    unsigned int v14 = *(_DWORD *)(v12 + v10);
    if (v14 <= 8)
    {
      if (((1 << v14) & 0x38) != 0)
      {
        int v15 = *(_DWORD **)(v12 + v10 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v15;
        goto LABEL_4;
      }
      if (((1 << v14) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v12 + v10 + 24);
        goto LABEL_4;
      }
      if (v14 == 8)
      {
        *(void *)(a2 + 80) = 0;
        int v15 = *(_DWORD **)(v12 + v10 + 24);
        if (v15) {
          *v15 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v11 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v11;
    ++v9;
    v10 += 32;
  }
  while (v13 == 82);
  if (v13 != 18)
  {
    if (v13 == 8)
    {
      *(_DWORD *)uint64_t v179 = 8;
      *(_OWORD *)&v179[4] = *(_OWORD *)v7;
      unsigned int v23 = *(_DWORD **)(a2 + 80);
      if (v23) {
        *v23 += 2;
      }
      uint64_t v180 = v23;
      int v181 = 0;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v9;
        if (v8 <= v9)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C7B28);
        }
        uint64_t v25 = v12 + 32 * v9;
        unsigned int v26 = *(_DWORD *)v25;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v25;
        *(_OWORD *)uint64_t v7 = *(_OWORD *)(v25 + 4);
        unsigned int v27 = *(_DWORD *)v25;
        if (v27 > 8) {
          goto LABEL_38;
        }
        if (((1 << v27) & 0x38) != 0) {
          break;
        }
        if (((1 << v27) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v12 + 32 * v9 + 24);
        }
        else if (v27 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v28 = *(_DWORD **)(v12 + 32 * v9 + 24);
          if (v28) {
            *v28 += 2;
          }
          goto LABEL_47;
        }
LABEL_38:
        int v24 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v24;
        ++v9;
        if (v26 != 82)
        {
          if (MEMORY[0x18530AEB0](v23, "group", 5))
          {
            if (*(_DWORD *)(a2 + 56) == 67)
            {
              unsigned int v34 = *(_DWORD *)(a2 + 36);
              unsigned int v35 = *(_DWORD *)(a2 + 40) + 1;
              while (1)
              {
                *(_DWORD *)(a2 + 40) = v35;
                if (v34 <= v35)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825C7B30);
                }
                uint64_t v37 = *(void *)(a2 + 24);
                uint64_t v38 = v37 + 32 * v35;
                unsigned int v39 = *(_DWORD *)v38;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v38;
                *(_OWORD *)uint64_t v7 = *(_OWORD *)(v38 + 4);
                unsigned int v40 = *(_DWORD *)v38;
                if (v40 > 8) {
                  goto LABEL_68;
                }
                if (((1 << v40) & 0x38) != 0) {
                  break;
                }
                if (((1 << v40) & 0xC4) != 0)
                {
                  *(void *)(a2 + 80) = *(void *)(v37 + 32 * v35 + 24);
                }
                else if (v40 == 8)
                {
                  *(void *)(a2 + 80) = 0;
                  unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
                  if (v41) {
                    *v41 += 2;
                  }
                  goto LABEL_77;
                }
LABEL_68:
                int v36 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v36;
                ++v35;
                if (v39 != 82)
                {
                  WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
                  unint64_t v13 = v157;
                  if (!v157)
                  {
                    if (*(_DWORD *)(a2 + 56) == 48) {
                      WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                    }
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                    unint64_t v6 = v174;
                    if (v174)
                    {
                      WGSL::toString();
                      if (v6 == 1)
                      {
                        WGSL::toString();
                        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v170, (uint64_t *)&v169);
                        __n128 v56 = v169;
                        int v169 = 0;
                        if (v56)
                        {
                          if (*v56 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v56 -= 2;
                          }
                        }
                        unsigned int v67 = v170;
                        uint64_t v170 = 0;
                        if (!v67) {
                          goto LABEL_233;
                        }
LABEL_230:
                        if (*v67 == 2) {
                          WTF::StringImpl::destroy();
                        }
                        else {
                          *v67 -= 2;
                        }
                        goto LABEL_233;
                      }
LABEL_464:
                      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_465:
                      *(_OWORD *)(a1 + 8) = *(_OWORD *)(v6 + 8);
                      *(void *)a1 = 0;
LABEL_273:
                      *(_DWORD *)(a1 + 24) = 1;
LABEL_274:
                      ((void (*)(const char **, const char **))off_1ECABE170[v7])(&v146, &v171);
LABEL_235:
                      ((void (*)(const char **, const char **))off_1ECABE170[v13])(&v171, &v155);
                      uint64_t v53 = 0;
                      return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDF90[v53])(&v171, v179);
                    }
                    if (v171 == 8 && v173)
                    {
                      if (*v173 == 2) {
                        WTF::StringImpl::destroy();
                      }
                      else {
                        *v173 -= 2;
                      }
                    }
                    uint64_t v71 = *(void **)(a2 + 8);
                    unsigned int v72 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v72, v5);
                    unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::GroupAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v71, &v171, &v155);
LABEL_282:
                    *(void *)a1 = v73;
                    *(_DWORD *)(a1 + 24) = 0;
                    goto LABEL_235;
                  }
LABEL_198:
                  if (v13 != 1) {
                    goto LABEL_464;
                  }
                  int v69 = v155;
                  if (v155) {
                    *(_DWORD *)v155 += 2;
                  }
                  *(_OWORD *)(a1 + 8) = v156;
                  *(void *)a1 = v69;
LABEL_234:
                  *(_DWORD *)(a1 + 24) = 1;
                  goto LABEL_235;
                }
              }
              unsigned int v41 = *(_DWORD **)(v37 + 32 * v35 + 24);
LABEL_77:
              *(void *)(a2 + 80) = v41;
              goto LABEL_68;
            }
            WGSL::toString();
            WGSL::toString();
            uint64_t v171 = "Expected a ";
            *(void *)&long long v172 = 12;
            uint64_t v155 = ", but got a ";
            *(void *)&long long v156 = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v171, (uint64_t *)&v176, (uint64_t)&v155, (uint64_t *)&v175, &v146);
            if (!v146)
            {
              __break(0xC471u);
              JUMPOUT(0x1825C7B50);
            }
            int v54 = v175;
            int v175 = 0;
            if (v54)
            {
              if (*v54 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v54 -= 2;
              }
            }
            int v60 = v176;
            unsigned int v176 = 0;
            if (v60)
            {
              if (*v60 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v60 -= 2;
              }
            }
            uint64_t v53 = 0;
            uint64_t v61 = (*(_DWORD *)(a2 + 96) - v5);
            uint64_t v62 = v146;
LABEL_373:
            *(void *)a1 = v62;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v5 | (v61 << 32);
LABEL_374:
            *(_DWORD *)(a1 + 24) = 1;
            return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDF90[v53])(&v171, v179);
          }
          if (MEMORY[0x18530AEB0](v23, "binding", 7))
          {
            if (*(_DWORD *)(a2 + 56) != 67)
            {
              WGSL::toString();
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v171, (uint64_t *)&v168, (uint64_t *)&v167);
              unsigned int v57 = v167;
              unsigned int v167 = 0;
              if (v57)
              {
                if (*v57 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v57 -= 2;
                }
              }
              unsigned int v64 = v168;
              unsigned int v168 = 0;
              if (v64)
              {
                if (*v64 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v64 -= 2;
                }
              }
              uint64_t v53 = 0;
              uint64_t v61 = (*(_DWORD *)(a2 + 96) - v5);
              uint64_t v62 = v171;
              goto LABEL_373;
            }
            unsigned int v44 = *(_DWORD *)(a2 + 36);
            unsigned int v45 = *(_DWORD *)(a2 + 40) + 1;
            while (2)
            {
              *(_DWORD *)(a2 + 40) = v45;
              if (v44 <= v45)
              {
                __break(0xC471u);
                JUMPOUT(0x1825C7B40);
              }
              uint64_t v47 = *(void *)(a2 + 24);
              uint64_t v48 = v47 + 32 * v45;
              unsigned int v49 = *(_DWORD *)v48;
              *(_DWORD *)(a2 + 56) = *(_DWORD *)v48;
              *(_OWORD *)uint64_t v7 = *(_OWORD *)(v48 + 4);
              unsigned int v50 = *(_DWORD *)v48;
              if (v50 <= 8)
              {
                if (((1 << v50) & 0x38) != 0)
                {
                  unsigned int v51 = *(_DWORD **)(v47 + 32 * v45 + 24);
                  goto LABEL_93;
                }
                if (((1 << v50) & 0xC4) != 0)
                {
                  *(void *)(a2 + 80) = *(void *)(v47 + 32 * v45 + 24);
                }
                else if (v50 == 8)
                {
                  *(void *)(a2 + 80) = 0;
                  unsigned int v51 = *(_DWORD **)(v47 + 32 * v45 + 24);
                  if (v51) {
                    *v51 += 2;
                  }
LABEL_93:
                  *(void *)(a2 + 80) = v51;
                }
              }
              int v46 = *(_DWORD *)(a2 + 68);
              *(void *)(a2 + 88) = *(void *)(a2 + 60);
              *(_DWORD *)(a2 + 96) = v46;
              ++v45;
              if (v49 != 82)
              {
                WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
                unint64_t v13 = v157;
                if (v157) {
                  goto LABEL_198;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                unint64_t v6 = v174;
                if (!v174)
                {
                  if (v171 == 8 && v173)
                  {
                    if (*v173 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v173 -= 2;
                    }
                  }
                  unsigned int v80 = *(void **)(a2 + 8);
                  unsigned int v81 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v81, v5);
                  unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::BindingAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v80, &v171, &v155);
                  goto LABEL_282;
                }
                WGSL::toString();
                if (v6 != 1) {
                  goto LABEL_464;
                }
                WGSL::toString();
                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v166, (uint64_t *)&v165);
                unsigned int v59 = v165;
                uint64_t v165 = 0;
                if (v59)
                {
                  if (*v59 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v59 -= 2;
                  }
                }
                unsigned int v67 = v166;
                int8x16x2_t v166 = 0;
                if (v67) {
                  goto LABEL_230;
                }
LABEL_233:
                unint64_t v75 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                *(void *)a1 = v146;
                *(void *)(a1 + 8) = v4;
                *(void *)(a1 + 16) = v75;
                goto LABEL_234;
              }
              continue;
            }
          }
          if (MEMORY[0x18530AEB0](v23, "location", 8))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (!v174)
            {
              if (v171 == 8 && v173)
              {
                if (*v173 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v173 -= 2;
                }
              }
              WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
              unint64_t v13 = v157;
              if (v157) {
                goto LABEL_198;
              }
              if (*(_DWORD *)(a2 + 56) == 48) {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
              unint64_t v6 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                uint64_t v87 = *(void **)(a2 + 8);
                unsigned int v88 = *(_DWORD *)(a2 + 96) - v5;
                uint64_t v171 = v4;
                *(void *)&long long v172 = __PAIR64__(v88, v5);
                unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::LocationAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v87, &v171, (uint64_t *)&v155);
                goto LABEL_282;
              }
              WGSL::toString();
              if (v6 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v162, (uint64_t *)&v161);
              uint64_t v70 = v161;
              uint64_t v161 = 0;
              if (v70)
              {
                if (*v70 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v70 -= 2;
                }
              }
              unsigned int v67 = v162;
              uint64_t v162 = 0;
              if (v67) {
                goto LABEL_230;
              }
              goto LABEL_233;
            }
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v164, (uint64_t *)&v163);
            int v55 = v163;
            int v163 = 0;
            if (v55)
            {
              if (*v55 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v55 -= 2;
              }
            }
            unint64_t v66 = v164;
            unint64_t v164 = 0;
            if (!v66) {
              goto LABEL_372;
            }
LABEL_369:
            if (*v66 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v66 -= 2;
            }
            goto LABEL_372;
          }
          if (MEMORY[0x18530AEB0](v23, "builtin", 7))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (v174)
            {
              WGSL::toString();
              if (v13 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v160, (uint64_t *)&v159);
              unsigned int v58 = v159;
              uint8x8_t v159 = 0;
              if (v58)
              {
                if (*v58 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v58 -= 2;
                }
              }
              unint64_t v66 = v160;
              unint64_t v160 = 0;
              if (v66) {
                goto LABEL_369;
              }
              goto LABEL_372;
            }
            if (v171 == 8 && v173)
            {
              if (*v173 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v173 -= 2;
              }
            }
            unint64_t v13 = (unint64_t)&v171;
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v171, a2);
            if (v174)
            {
              if (v174 != 1) {
                goto LABEL_464;
              }
              unsigned int v76 = v171;
              if (v171) {
                *(_DWORD *)v171 += 2;
              }
              *(_OWORD *)(a1 + 8) = v172;
              *(void *)a1 = v76;
              *(_DWORD *)(a1 + 24) = 1;
              uint64_t v77 = v174;
              if (v174 != -1) {
                goto LABEL_242;
              }
            }
            else
            {
              uint64_t v78 = WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WGSL::Builtin> [12]>::tryGet<WTF::String>((unsigned __int8 ***)WGSL::parseBuiltin(WTF::String const&)::__map, (uint64_t *)&v173);
              if (v78)
              {
                unint64_t v13 = (unint64_t)v78;
                switch(*(unsigned char *)v78)
                {
                  case 0:
                    *(unsigned char *)(*(void *)a2 + 19) = 1;
                    break;
                  case 1:
                    *(unsigned char *)(*(void *)a2 + 25) = 1;
                    break;
                  case 8:
                    *(unsigned char *)(*(void *)a2 + 26) = 1;
                    break;
                  case 9:
                    *(unsigned char *)(*(void *)a2 + 24) = 1;
                    break;
                  default:
                    break;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v155, a2, 68);
                unint64_t v6 = v158;
                if (v158)
                {
                  WGSL::toString();
                  if (v6 != 1) {
                    goto LABEL_464;
                  }
                  WGSL::toString();
                  WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v154, (uint64_t *)&v153);
                  unsigned int v89 = v153;
                  unint64_t v153 = 0;
                  if (v89)
                  {
                    if (*v89 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v89 -= 2;
                    }
                  }
                  unsigned int v90 = v154;
                  uint16x8_t v154 = 0;
                  if (v90)
                  {
                    if (*v90 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v90 -= 2;
                    }
                  }
                  unint64_t v91 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                  *(void *)a1 = v146;
                  *(void *)(a1 + 8) = v4;
                  *(void *)(a1 + 16) = v91;
                  *(_DWORD *)(a1 + 24) = 1;
                  uint64_t v77 = v174;
                  if (v174 != -1) {
LABEL_242:
                  }
                    ((void (*)(const char **, const char **))off_1ECABDF80[v77])(&v155, &v171);
                }
                else
                {
                  if (v155 == 8 && v157)
                  {
                    if (*v157 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v157 -= 2;
                    }
                  }
                  unsigned int v100 = *(void **)(a2 + 8);
                  unsigned int v101 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v155 = v4;
                  *(void *)&long long v156 = __PAIR64__(v101, v5);
                  *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::BuiltinAttribute,WGSL::SourceSpan,WGSL::Builtin const&,void>(v100, &v155, (char *)v13);
                  *(_DWORD *)(a1 + 24) = 0;
                  uint64_t v77 = v174;
                  if (v174 != -1) {
                    goto LABEL_242;
                  }
                }
              }
              else
              {
                WTF::StringImpl::createWithoutCopyingNonEmpty();
                unint64_t v79 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                *(void *)a1 = v155;
                *(void *)(a1 + 8) = v4;
                *(void *)(a1 + 16) = v79;
                *(_DWORD *)(a1 + 24) = 1;
                uint64_t v77 = v174;
                if (v174 != -1) {
                  goto LABEL_242;
                }
              }
            }
LABEL_243:
            uint64_t v53 = 0;
            return (_DWORD *)((uint64_t (*)(void, void))off_1ECABDF90[v53])(&v171, v179);
          }
          if (MEMORY[0x18530AEB0](v23, "workgroup_size", 14))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (!v174)
            {
              if (v171 == 8 && v173)
              {
                if (*v173 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v173 -= 2;
                }
              }
              WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
              unint64_t v13 = v157;
              if (v157) {
                goto LABEL_198;
              }
              uint64_t v149 = 0;
              unint64_t v150 = 0;
              if (*(_DWORD *)(a2 + 56) == 48)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                if (*(_DWORD *)(a2 + 56) != 68)
                {
                  WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v171, a2);
                  uint64_t v7 = v173;
                  if (v173)
                  {
                    if (v173 != 1) {
                      goto LABEL_464;
                    }
                    unsigned int v83 = v171;
                    if (v171) {
                      *(_DWORD *)v171 += 2;
                    }
                    *(_OWORD *)(a1 + 8) = v172;
                    *(void *)a1 = v83;
                    goto LABEL_273;
                  }
                  unint64_t v150 = v171;
                  if (*(_DWORD *)(a2 + 56) == 48)
                  {
                    WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                    if (*(_DWORD *)(a2 + 56) != 68)
                    {
                      WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v146, a2);
                      if (v148)
                      {
                        if (v148 != 1) {
                          goto LABEL_464;
                        }
                        unsigned int v113 = v146;
                        if (!v146) {
                          goto LABEL_465;
                        }
                        *(_DWORD *)v146 += 2;
                        *(_OWORD *)(a1 + 8) = v147;
                        *(void *)a1 = v113;
                        *(_DWORD *)(a1 + 24) = 1;
                        if (*(_DWORD *)v113 == 2) {
                          WTF::StringImpl::destroy();
                        }
                        else {
                          *(_DWORD *)v113 -= 2;
                        }
                        goto LABEL_274;
                      }
                      uint64_t v149 = v146;
                      if (*(_DWORD *)(a2 + 56) == 48) {
                        WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                      }
                    }
                  }
                  ((void (*)(const char **, const char **))off_1ECABE170[v7])(&v146, &v171);
                }
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
              unint64_t v6 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                uint64_t v104 = *(void **)(a2 + 8);
                unsigned int v105 = *(_DWORD *)(a2 + 96) - v5;
                uint64_t v171 = v4;
                *(void *)&long long v172 = __PAIR64__(v105, v5);
                unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::WorkgroupSizeAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::Expression*,WGSL::AST::Expression*,void>(v104, &v171, &v155, (uint64_t *)&v150, (uint64_t *)&v149);
                goto LABEL_282;
              }
              WGSL::toString();
              if (v6 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v145, (uint64_t *)&v144);
              uint64_t v95 = v144;
              int v144 = 0;
              if (v95)
              {
                if (*v95 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v95 -= 2;
                }
              }
              unsigned int v67 = v145;
              int v145 = 0;
              if (v67) {
                goto LABEL_230;
              }
              goto LABEL_233;
            }
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v152, (uint64_t *)&v151);
            unsigned int v63 = v151;
            unint64_t v151 = 0;
            if (v63)
            {
              if (*v63 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v63 -= 2;
              }
            }
            unint64_t v66 = v152;
            unint64_t v152 = 0;
            if (v66) {
              goto LABEL_369;
            }
            goto LABEL_372;
          }
          if (MEMORY[0x18530AEB0](v23, "align", 5))
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
            unint64_t v13 = v174;
            if (!v174)
            {
              if (v171 == 8 && v173)
              {
                if (*v173 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v173 -= 2;
                }
              }
              WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
              unint64_t v13 = v157;
              if (v157) {
                goto LABEL_198;
              }
              if (*(_DWORD *)(a2 + 56) == 48) {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
              unint64_t v6 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                int v111 = *(void **)(a2 + 8);
                unsigned int v112 = *(_DWORD *)(a2 + 96) - v5;
                uint64_t v171 = v4;
                *(void *)&long long v172 = __PAIR64__(v112, v5);
                unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::AlignAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v111, &v171, &v155);
                goto LABEL_282;
              }
              WGSL::toString();
              if (v6 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v141, (uint64_t *)&v140);
              unsigned int v92 = v140;
              unsigned int v140 = 0;
              if (v92)
              {
                if (*v92 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v92 -= 2;
                }
              }
              unsigned int v67 = v141;
              uint64_t v141 = 0;
              if (v67) {
                goto LABEL_230;
              }
              goto LABEL_233;
            }
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v143, (uint64_t *)&v142);
            char v65 = v142;
            uint64_t v142 = 0;
            if (v65)
            {
              if (*v65 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v65 -= 2;
              }
            }
            unint64_t v66 = v143;
            unsigned int v143 = 0;
            if (v66) {
              goto LABEL_369;
            }
            goto LABEL_372;
          }
          if (!MEMORY[0x18530AEB0](v23, "interpolate", 11))
          {
            if (MEMORY[0x18530AEB0](v23, "size", 4))
            {
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
              unint64_t v13 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
                unint64_t v13 = v157;
                if (v157) {
                  goto LABEL_198;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                unint64_t v6 = v174;
                if (!v174)
                {
                  if (v171 == 8 && v173)
                  {
                    if (*v173 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v173 -= 2;
                    }
                  }
                  int v121 = *(void **)(a2 + 8);
                  unsigned int v122 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v122, v5);
                  unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::SizeAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v121, &v171, &v155);
                  goto LABEL_282;
                }
                WGSL::toString();
                if (v6 != 1) {
                  goto LABEL_464;
                }
                WGSL::toString();
                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v133, (uint64_t *)&v132);
                unsigned int v106 = v132;
                long long v132 = 0;
                if (v106)
                {
                  if (*v106 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v106 -= 2;
                  }
                }
                unsigned int v67 = v133;
                int v133 = 0;
                if (v67) {
                  goto LABEL_230;
                }
                goto LABEL_233;
              }
              WGSL::toString();
              if (v13 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v135, (uint64_t *)&v134);
              unsigned int v74 = v134;
              long long v134 = 0;
              if (v74)
              {
                if (*v74 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v74 -= 2;
                }
              }
              unint64_t v66 = v135;
              int v135 = 0;
              if (v66) {
                goto LABEL_369;
              }
            }
            else
            {
              if (!MEMORY[0x18530AEB0](v23, "id", 2))
              {
                if (MEMORY[0x18530AEB0](v23, "invariant", 9))
                {
                  int v84 = *(void **)(a2 + 8);
                  unsigned int v85 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v85, v5);
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::InvariantAttribute,WGSL::SourceSpan,void>(v84, &v171);
                }
                else if (MEMORY[0x18530AEB0](v23, "must_use", 8))
                {
                  unsigned int v93 = *(void **)(a2 + 8);
                  unsigned int v94 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v94, v5);
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::MustUseAttribute,WGSL::SourceSpan,void>(v93, &v171);
                }
                else if (MEMORY[0x18530AEB0](v23, "const", 5))
                {
                  unsigned int v102 = *(void **)(a2 + 8);
                  unsigned int v103 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v103, v5);
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::ConstAttribute,WGSL::SourceSpan,void>(v102, &v171);
                }
                else
                {
                  if (MEMORY[0x18530AEB0](v23, "vertex", 6))
                  {
                    int v107 = *(void **)(a2 + 8);
                    unsigned int v108 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v108, v5);
                    char v109 = 1;
                  }
                  else if (MEMORY[0x18530AEB0](v23, "compute", 7))
                  {
                    int v107 = *(void **)(a2 + 8);
                    unsigned int v115 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v115, v5);
                    char v109 = 4;
                  }
                  else
                  {
                    if (!MEMORY[0x18530AEB0](v23, "fragment", 8))
                    {
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      uint64_t v53 = 0;
                      unint64_t v125 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                      *(void *)a1 = v171;
                      *(void *)(a1 + 8) = v4;
                      *(void *)(a1 + 16) = v125;
                      goto LABEL_374;
                    }
                    int v107 = *(void **)(a2 + 8);
                    unsigned int v120 = *(_DWORD *)(a2 + 96) - v5;
                    uint64_t v171 = v4;
                    *(void *)&long long v172 = __PAIR64__(v120, v5);
                    char v109 = 2;
                  }
                  LOBYTE(v155) = v109;
                  int v86 = WGSL::AST::Builder::construct<WGSL::AST::StageAttribute,WGSL::SourceSpan,WGSL::ShaderStage,void>(v107, &v171, (char *)&v155);
                }
                uint64_t v53 = 0;
                *(void *)a1 = v86;
                *(_DWORD *)(a1 + 24) = 0;
                return (_DWORD *)((uint64_t (*)(void, void))off_1ECABDF90[v53])(&v171, v179);
              }
              WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
              unint64_t v13 = v174;
              if (!v174)
              {
                if (v171 == 8 && v173)
                {
                  if (*v173 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v173 -= 2;
                  }
                }
                WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v155, a2);
                unint64_t v13 = v157;
                if (v157) {
                  goto LABEL_198;
                }
                if (*(_DWORD *)(a2 + 56) == 48) {
                  WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
                }
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 68);
                unint64_t v6 = v174;
                if (!v174)
                {
                  if (v171 == 8 && v173)
                  {
                    if (*v173 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v173 -= 2;
                    }
                  }
                  unsigned int v126 = *(void **)(a2 + 8);
                  unsigned int v127 = *(_DWORD *)(a2 + 96) - v5;
                  uint64_t v171 = v4;
                  *(void *)&long long v172 = __PAIR64__(v127, v5);
                  unsigned int v73 = WGSL::AST::Builder::construct<WGSL::AST::IdAttribute,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v126, &v171, &v155);
                  goto LABEL_282;
                }
                WGSL::toString();
                if (v6 != 1) {
                  goto LABEL_464;
                }
                WGSL::toString();
                WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v129, (uint64_t *)&v128);
                int v114 = v128;
                unint64_t v128 = 0;
                if (v114)
                {
                  if (*v114 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v114 -= 2;
                  }
                }
                unsigned int v67 = v129;
                uint64_t v129 = 0;
                if (v67) {
                  goto LABEL_230;
                }
                goto LABEL_233;
              }
              WGSL::toString();
              if (v13 != 1) {
                goto LABEL_464;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v131, (uint64_t *)&v130);
              unsigned int v82 = v130;
              unsigned int v130 = 0;
              if (v82)
              {
                if (*v82 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v82 -= 2;
                }
              }
              unint64_t v66 = v131;
              long long v131 = 0;
              if (v66) {
                goto LABEL_369;
              }
            }
LABEL_372:
            uint64_t v53 = 0;
            uint64_t v61 = (*(_DWORD *)(a2 + 96) - v5);
            uint64_t v62 = v155;
            goto LABEL_373;
          }
          WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v171, a2, 67);
          unint64_t v13 = v174;
          if (v174)
          {
            WGSL::toString();
            if (v13 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v155, (uint64_t *)&v139, (uint64_t *)&v138);
            unsigned int v68 = v138;
            unsigned int v138 = 0;
            if (v68)
            {
              if (*v68 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v68 -= 2;
              }
            }
            unint64_t v66 = v139;
            long long v139 = 0;
            if (v66) {
              goto LABEL_369;
            }
            goto LABEL_372;
          }
          if (v171 == 8 && v173)
          {
            if (*v173 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v173 -= 2;
            }
          }
          unint64_t v13 = (unint64_t)&v171;
          WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v171, a2);
          if (v174)
          {
            if (v174 != 1) {
              goto LABEL_464;
            }
            uint64_t v96 = v171;
            if (v171) {
              *(_DWORD *)v171 += 2;
            }
            *(_OWORD *)(a1 + 8) = v172;
            *(void *)a1 = v96;
            goto LABEL_445;
          }
          unsigned int v97 = (char *)WGSL::parseInterpolationType((uint64_t *)&v173);
          if (!v97)
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            unint64_t v99 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v155;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v99;
            goto LABEL_445;
          }
          unint64_t v13 = (unint64_t)v97;
          LOBYTE(v150) = 0;
          if (*(_DWORD *)(a2 + 56) == 48)
          {
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
            uint64_t v7 = (uint64_t)&v155;
            WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v155, a2);
            if (v158)
            {
              if (v158 != 1) {
                goto LABEL_464;
              }
              unsigned int v98 = v155;
              if (v155) {
                *(_DWORD *)v155 += 2;
              }
              uint64_t v7 = 0;
              *(_OWORD *)(a1 + 8) = v156;
              *(void *)a1 = v98;
LABEL_424:
              *(_DWORD *)(a1 + 24) = 1;
            }
            else
            {
              int v110 = WGSL::parseInterpolationSampling((uint64_t *)&v157);
              if (!v110)
              {
                WTF::StringImpl::createWithoutCopyingNonEmpty();
                uint64_t v7 = 0;
                unint64_t v116 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                *(void *)a1 = v146;
                *(void *)(a1 + 8) = v4;
                *(void *)(a1 + 16) = v116;
                goto LABEL_424;
              }
              LOBYTE(v150) = *v110;
              uint64_t v7 = 1;
            }
            if (v158 != -1) {
              ((void (*)(const char **, const char **))off_1ECABDF80[v158])(&v146, &v155);
            }
            if (v7)
            {
              if (*(_DWORD *)(a2 + 56) == 48) {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consume(a2);
              }
              goto LABEL_430;
            }
          }
          else
          {
LABEL_430:
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v155, a2, 68);
            unint64_t v6 = v158;
            if (!v158)
            {
              if (v155 == 8 && v157)
              {
                if (*v157 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v157 -= 2;
                }
              }
              uint64_t v123 = *(void **)(a2 + 8);
              unsigned int v124 = *(_DWORD *)(a2 + 96) - v5;
              uint64_t v155 = v4;
              *(void *)&long long v156 = __PAIR64__(v124, v5);
              *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::InterpolateAttribute,WGSL::SourceSpan,WGSL::InterpolationType const&,WGSL::InterpolationSampling &,void>(v123, &v155, (char *)v13, (char *)&v150);
              *(_DWORD *)(a1 + 24) = 0;
              uint64_t v77 = v174;
              if (v174 != -1) {
                goto LABEL_242;
              }
              goto LABEL_243;
            }
            WGSL::toString();
            if (v6 != 1) {
              goto LABEL_464;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v146, (uint64_t *)&v137, (uint64_t *)&v136);
            unsigned int v117 = v136;
            long long v136 = 0;
            if (v117)
            {
              if (*v117 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v117 -= 2;
              }
            }
            unsigned int v118 = v137;
            int v137 = 0;
            if (v118)
            {
              if (*v118 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v118 -= 2;
              }
            }
            unint64_t v119 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v146;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v119;
LABEL_445:
            *(_DWORD *)(a1 + 24) = 1;
          }
          uint64_t v77 = v174;
          if (v174 != -1) {
            goto LABEL_242;
          }
          goto LABEL_243;
        }
      }
      unsigned int v28 = *(_DWORD **)(v12 + 32 * v9 + 24);
LABEL_47:
      *(void *)(a2 + 80) = v28;
      goto LABEL_38;
    }
    *(_DWORD *)uint64_t v179 = v13;
    int v181 = 1;
    WGSL::toString();
    WGSL::toString();
    uint64_t v171 = "Expected a ";
    *(void *)&long long v172 = 12;
    uint64_t v155 = ", but got a ";
    *(void *)&long long v156 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v171, (uint64_t *)&v178, (uint64_t)&v155, (uint64_t *)&v177, &v146);
    if (!v146)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C7B48);
    }
    unsigned int v32 = v177;
    unsigned int v177 = 0;
    if (v32)
    {
      if (*v32 == 2)
      {
        WTF::StringImpl::destroy();
        char v33 = v178;
        int v178 = 0;
        if (!v33)
        {
LABEL_98:
          unint64_t v52 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v146;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v52;
          uint64_t v53 = 1;
          *(_DWORD *)(a1 + 24) = 1;
          return (_DWORD *)((uint64_t (*)(void, void))off_1ECABDF90[v53])(&v171, v179);
        }
LABEL_95:
        if (*v33 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *v33 -= 2;
        }
        goto LABEL_98;
      }
      *v32 -= 2;
    }
    char v33 = v178;
    int v178 = 0;
    if (!v33) {
      goto LABEL_98;
    }
    goto LABEL_95;
  }
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v9;
    if (v8 <= v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C7B20);
    }
    uint64_t v19 = v12 + 32 * v9;
    unsigned int v20 = *(_DWORD *)v19;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v19;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)(v19 + 4);
    unsigned int v21 = *(_DWORD *)v19;
    if (v21 <= 8)
    {
      if (((1 << v21) & 0x38) != 0)
      {
        uint64_t v22 = *(_DWORD **)(v12 + 32 * v9 + 24);
        goto LABEL_32;
      }
      if (((1 << v21) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v12 + 32 * v9 + 24);
      }
      else if (v21 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v22 = *(_DWORD **)(v12 + 32 * v9 + 24);
        if (v22) {
          *v22 += 2;
        }
LABEL_32:
        *(void *)(a2 + 80) = v22;
      }
    }
    int v18 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v18;
    ++v9;
    if (v20 == 82) {
      continue;
    }
    break;
  }
  WGSL::Parser<WGSL::Lexer<unsigned char>>::parseDiagnostic((uint64_t)v179, a2);
  if (!v182)
  {
    unint64_t v42 = *(void **)(a2 + 8);
    unsigned int v43 = *(_DWORD *)(a2 + 96) - v5;
    uint64_t v171 = v4;
    *(void *)&long long v172 = __PAIR64__(v43, v5);
    uint64_t result = WGSL::AST::Builder::construct<WGSL::AST::DiagnosticAttribute,WGSL::SourceSpan,WGSL::AST::Diagnostic,void>(v42, &v171, (uint64_t)v179);
    *(void *)a1 = result;
    *(_DWORD *)(a1 + 24) = 0;
    int v30 = v182;
    if (v182 != -1) {
      return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDFC8[v30])(&v171, v179);
    }
    return result;
  }
  if (v182 != 1) {
    goto LABEL_464;
  }
  uint64_t v29 = *(void *)v179;
  if (*(void *)v179) {
    **(_DWORD **)v179 += 2;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v179[8];
  *(void *)a1 = v29;
  int v30 = 1;
  *(_DWORD *)(a1 + 24) = 1;
  return (_DWORD *)((uint64_t (*)(const char **, unsigned char *))off_1ECABDFC8[v30])(&v171, v179);
}

WTF *WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  uint64_t result = (WTF *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v52, a2);
  if (v54)
  {
    if (v54 == 1)
    {
      uint64_t v7 = v52;
      if (v52) {
        *v52 += 2;
      }
      *(_OWORD *)(a1 + 8) = v53;
      *(void *)a1 = v7;
      goto LABEL_73;
    }
LABEL_77:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_81:
    __break(0xC471u);
    JUMPOUT(0x1825C807CLL);
  }
  if (*(_DWORD *)(a2 + 56) != 43)
  {
    WGSL::toString();
    WGSL::toString();
    int v46 = "Expected a ";
    *(void *)&long long v47 = 12;
    int v55 = (WTF *)", but got a ";
    uint64_t v56 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v46, (uint64_t *)&v50, (uint64_t)&v55, (uint64_t *)&v49, &v51);
    if (!v51) {
      goto LABEL_81;
    }
    uint64_t v17 = v49;
    unsigned int v49 = 0;
    if (v17)
    {
      if (*v17 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t result = v50;
        unsigned int v50 = 0;
        if (!result)
        {
LABEL_72:
          unint64_t v44 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v51;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v44;
LABEL_73:
          *(_DWORD *)(a1 + 24) = 1;
          goto LABEL_74;
        }
LABEL_69:
        if (*(_DWORD *)result == 2) {
          uint64_t result = (WTF *)WTF::StringImpl::destroy();
        }
        else {
          *(_DWORD *)result -= 2;
        }
        goto LABEL_72;
      }
      *v17 -= 2;
    }
    uint64_t result = v50;
    unsigned int v50 = 0;
    if (!result) {
      goto LABEL_72;
    }
    goto LABEL_69;
  }
  unsigned int v8 = (_OWORD *)(a2 + 60);
  unsigned int v9 = *(_DWORD *)(a2 + 36);
  unsigned int v10 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v10;
    if (v9 <= v10)
    {
      __break(0xC471u);
      JUMPOUT(0x1825C8084);
    }
    uint64_t v12 = *(void *)(a2 + 24);
    uint64_t v13 = v12 + 32 * v10;
    unsigned int v14 = *(_DWORD *)v13;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v13;
    *unsigned int v8 = *(_OWORD *)(v13 + 4);
    unsigned int v15 = *(_DWORD *)v13;
    if (v15 <= 8)
    {
      if (((1 << v15) & 0x38) != 0)
      {
        uint64_t v16 = *(_DWORD **)(v12 + 32 * v10 + 24);
LABEL_18:
        *(void *)(a2 + 80) = v16;
        goto LABEL_9;
      }
      if (((1 << v15) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v12 + 32 * v10 + 24);
        goto LABEL_9;
      }
      if (v15 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v16 = *(_DWORD **)(v12 + 32 * v10 + 24);
        if (v16) {
          *v16 += 2;
        }
        goto LABEL_18;
      }
    }
LABEL_9:
    int v11 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v11;
    ++v10;
  }
  while (v14 == 82);
  unsigned int v45 = v4;
  int v55 = 0;
  uint64_t v56 = 0;
  do
  {
LABEL_28:
    int v19 = *(_DWORD *)(a2 + 56);
    if (v19 == 73)
    {
      unsigned int v23 = *(_DWORD *)(a2 + 36);
      unsigned int v24 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v24;
        if (v23 <= v24) {
          goto LABEL_81;
        }
        uint64_t v26 = *(void *)(a2 + 24);
        uint64_t v27 = v26 + 32 * v24;
        unsigned int v28 = *(_DWORD *)v27;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v27;
        *unsigned int v8 = *(_OWORD *)(v27 + 4);
        unsigned int v29 = *(_DWORD *)v27;
        if (v29 <= 8)
        {
          if (((1 << v29) & 0x38) != 0)
          {
            int v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
LABEL_47:
            *(void *)(a2 + 80) = v30;
            goto LABEL_38;
          }
          if (((1 << v29) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v26 + 32 * v24 + 24);
          }
          else if (v29 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int v30 = *(_DWORD **)(v26 + 32 * v24 + 24);
            if (v30) {
              *v30 += 2;
            }
            goto LABEL_47;
          }
        }
LABEL_38:
        int v25 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v25;
        ++v24;
        if (v28 != 82) {
          goto LABEL_28;
        }
      }
    }
    if (v19 == 44)
    {
      unsigned int v35 = *(_DWORD *)(a2 + 36);
      unsigned int v36 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v36;
        if (v35 <= v36)
        {
          __break(0xC471u);
          JUMPOUT(0x1825C808CLL);
        }
        uint64_t v38 = *(void *)(a2 + 24);
        uint64_t v39 = v38 + 32 * v36;
        unsigned int v40 = *(_DWORD *)v39;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v39;
        *unsigned int v8 = *(_OWORD *)(v39 + 4);
        unsigned int v41 = *(_DWORD *)v39;
        if (v41 > 8) {
          goto LABEL_55;
        }
        if (((1 << v41) & 0x38) != 0) {
          break;
        }
        if (((1 << v41) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v38 + 32 * v36 + 24);
        }
        else if (v41 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unint64_t v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
          if (v42) {
            *v42 += 2;
          }
          goto LABEL_64;
        }
LABEL_55:
        int v37 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v37;
        ++v36;
        if (v40 != 82)
        {
          unsigned int v43 = *(void **)(a2 + 8);
          int v46 = v45;
          LODWORD(v47) = v5;
          DWORD1(v47) = v37 - v5;
          *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::CompoundStatement,WGSL::SourceSpan,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Statement,0ul>,void>(v43, &v46, (uint64_t *)&v52, (uint64_t *)&v55);
          *(_DWORD *)(a1 + 24) = 0;
          goto LABEL_66;
        }
      }
      unint64_t v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
LABEL_64:
      *(void *)(a2 + 80) = v42;
      goto LABEL_55;
    }
    WGSL::Parser<WGSL::Lexer<char16_t>>::parseStatement((uint64_t)&v46, a2);
    unsigned int v20 = v48;
    if (v48)
    {
      if (v48 != 1) {
        goto LABEL_77;
      }
      unsigned int v21 = v46;
      if (v46) {
        *(_DWORD *)v46 += 2;
      }
      *(_OWORD *)(a1 + 8) = v47;
      *(void *)a1 = v21;
      *(_DWORD *)(a1 + 24) = 1;
      uint64_t v22 = v48;
      if (v48 != -1) {
LABEL_26:
      }
        ((void (*)(uint64_t *, const char **))off_1ECABE580[v22])(&v51, &v46);
    }
    else
    {
      uint64_t v31 = HIDWORD(v56);
      if (HIDWORD(v56) == v56)
      {
        unsigned int v32 = (const char **)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v55, HIDWORD(v56) + 1, (unint64_t)&v46);
        uint64_t v31 = HIDWORD(v56);
        char v33 = v55;
        unsigned int v34 = *v32;
      }
      else
      {
        char v33 = v55;
        unsigned int v34 = v46;
      }
      *((void *)v33 + v31) = v34;
      ++HIDWORD(v56);
      uint64_t v22 = v48;
      if (v48 != -1) {
        goto LABEL_26;
      }
    }
  }
  while (!v20);
LABEL_66:
  uint64_t result = v55;
  if (v55)
  {
    int v55 = 0;
    LODWORD(v56) = 0;
    uint64_t result = (WTF *)WTF::fastFree(result, v18);
  }
LABEL_74:
  if (v54 != -1) {
    return (WTF *)((uint64_t (*)(const char **, _DWORD **))off_1ECABE5D0[v54])(&v46, &v52);
  }
  return result;
}

WTF *WGSL::Parser<WGSL::Lexer<char16_t>>::parseStatement(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v6 + 1;
  if ((v6 + 1) >= 0x81)
  {
LABEL_2:
    uint64_t result = (WTF *)WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v8 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)a1 = v521;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v8;
    goto LABEL_3;
  }
  switch(*(_DWORD *)(a2 + 56))
  {
    case 8:
      uint64_t result = (WTF *)WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v521, a2);
      if (v524)
      {
        if (v524 != 1) {
          goto LABEL_990;
        }
        unsigned int v74 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
        *(void *)a1 = v74;
        *(_DWORD *)(a1 + 24) = 1;
LABEL_806:
        uint64_t v72 = v524;
        if (v524 == -1) {
          goto LABEL_948;
        }
        uint64_t v171 = off_1ECABDF80;
LABEL_808:
        uint16x8_t v154 = v171[v72];
        goto LABEL_946;
      }
      if ((*(_DWORD *)(a2 + 56) | 0x10) == 0x53)
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseTypeNameAfterIdentifier((uint64_t)&v531, a2, (uint64_t)&v521, (const char *)v4, v5);
        uint64_t v172 = v533;
        if (v533)
        {
          if (v533 != 1) {
            goto LABEL_990;
          }
          int8x16_t v173 = v531;
          if (v531) {
            *(_DWORD *)v531 += 2;
          }
          *(_OWORD *)(a1 + 8) = v532;
          *(void *)a1 = v173;
          *(_DWORD *)(a1 + 24) = 1;
          goto LABEL_631;
        }
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseArgumentExpressionList(&v526, a2);
        if (v528)
        {
          if (v528 != 1) {
            goto LABEL_990;
          }
          uint64_t v310 = v526;
          if (v526) {
            *(_DWORD *)v526 += 2;
          }
          *(_OWORD *)(a1 + 8) = v527;
          *(void *)a1 = v310;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v311 = v528;
          if (v528 == -1) {
            goto LABEL_631;
          }
        }
        else
        {
          uint64_t v400 = *(void **)(a2 + 8);
          int v401 = *(_DWORD *)(a2 + 96) - v5;
          *(void *)v516 = v4;
          *(_DWORD *)&v516[8] = v5;
          *(_DWORD *)&v516[12] = v401;
          unsigned int v402 = WGSL::AST::Builder::construct<WGSL::AST::CallExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Expression,0ul>,void>(v400, v516, (uint64_t *)&v531, (uint64_t *)&v526);
          WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)v516, a2, 73);
          unsigned int v403 = v518;
          if (v518)
          {
            WGSL::toString();
            if (v403 != 1) {
              goto LABEL_990;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v508, (uint64_t *)&v499, (uint64_t *)&v498);
            uint64_t v404 = v498;
            v498 = 0;
            if (v404)
            {
              if (*v404 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v404 -= 2;
              }
            }
            __n128 v454 = v499;
            v499 = 0;
            if (v454)
            {
              if (*v454 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v454 -= 2;
              }
            }
            unint64_t v455 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v508;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v455;
            *(_DWORD *)(a1 + 24) = 1;
            uint64_t v311 = v528;
            if (v528 == -1) {
              goto LABEL_631;
            }
          }
          else
          {
            if (*(_DWORD *)v516 == 8 && v517)
            {
              if (*v517 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v517 -= 2;
              }
            }
            __n128 v463 = *(void **)(a2 + 8);
            int v464 = *(_DWORD *)(a2 + 96) - v5;
            *(void *)v516 = v4;
            *(_DWORD *)&v516[8] = v5;
            *(_DWORD *)&v516[12] = v464;
            *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::CallStatement,WGSL::SourceSpan,WGSL::AST::CallExpression &,void>(v463, v516, (uint64_t)v402);
            *(_DWORD *)(a1 + 24) = 0;
            uint64_t v311 = v528;
            if (v528 == -1) {
              goto LABEL_631;
            }
          }
        }
        ((void (*)(unsigned char *, const char **))off_1ECABE040[v311])(v516, &v526);
LABEL_631:
        uint64_t result = (WTF *)((uint64_t (*)(unsigned char *, WTF **))off_1ECABE170[v172])(v516, &v531);
        goto LABEL_806;
      }
      unint64_t v305 = *(void **)(a2 + 8);
      int v306 = *(_DWORD *)(a2 + 96) - v5;
      *(void *)v516 = v4;
      *(_DWORD *)&v516[8] = v5;
      *(_DWORD *)&v516[12] = v306;
      uint64_t v307 = WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v305, v516, (uint64_t)&v521);
      WGSL::Parser<WGSL::Lexer<char16_t>>::parsePostfixExpression((uint64_t)&v531, a2, v307, v4, v5);
      uint64_t v308 = v533;
      if (v533)
      {
        if (v533 != 1) {
          goto LABEL_990;
        }
        unint64_t v309 = v531;
        if (v531) {
          *(_DWORD *)v531 += 2;
        }
        *(_OWORD *)(a1 + 8) = v532;
        *(void *)a1 = v309;
        *(_DWORD *)(a1 + 24) = 1;
        goto LABEL_805;
      }
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement((uint64_t)&v526, a2, &v531);
      if (v528)
      {
        if (v528 != 1) {
          goto LABEL_990;
        }
        uint64_t v398 = v526;
        if (v526) {
          *(_DWORD *)v526 += 2;
        }
        *(_OWORD *)(a1 + 8) = v527;
        *(void *)a1 = v398;
        *(_DWORD *)(a1 + 24) = 1;
        uint64_t v399 = v528;
        if (v528 == -1) {
          goto LABEL_805;
        }
      }
      else
      {
        WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)v516, a2, 73);
        unsigned int v446 = v518;
        if (v518)
        {
          WGSL::toString();
          if (v446 != 1) {
            goto LABEL_990;
          }
          WGSL::toString();
          WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v508, (uint64_t *)&v497, (uint64_t *)&v496);
          __n128 v447 = v496;
          v496 = 0;
          if (v447)
          {
            if (*v447 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v447 -= 2;
            }
          }
          v461 = v497;
          v497 = 0;
          if (v461)
          {
            if (*v461 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v461 -= 2;
            }
          }
          unint64_t v462 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
          *(void *)a1 = v508;
          *(void *)(a1 + 8) = v4;
          *(void *)(a1 + 16) = v462;
          *(_DWORD *)(a1 + 24) = 1;
          uint64_t v399 = v528;
          if (v528 == -1) {
            goto LABEL_805;
          }
        }
        else
        {
          if (*(_DWORD *)v516 == 8 && v517)
          {
            if (*v517 == 2) {
              WTF::StringImpl::destroy();
            }
            else {
              *v517 -= 2;
            }
          }
          *(void *)a1 = v526;
          *(_DWORD *)(a1 + 24) = 0;
          uint64_t v399 = v528;
          if (v528 == -1) {
            goto LABEL_805;
          }
        }
      }
      ((void (*)(unsigned char *, const char **))off_1ECABE580[v399])(v516, &v526);
LABEL_805:
      uint64_t result = (WTF *)((uint64_t (*)(unsigned char *, WTF **))off_1ECABE170[v308])(v516, &v531);
      goto LABEL_806;
    case 0xB:
      unsigned int v75 = *(_DWORD *)(a2 + 36);
      unsigned int v76 = (_OWORD *)(a2 + 60);
      unsigned int v77 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v78 = 32 * v77;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v77;
        if (v75 <= v77)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC130);
        }
        uint64_t v80 = *(void *)(a2 + 24);
        int v81 = *(_DWORD *)(v80 + v78);
        *(_DWORD *)(a2 + 56) = v81;
        *unsigned int v76 = *(_OWORD *)(v80 + v78 + 4);
        unsigned int v82 = *(_DWORD *)(v80 + v78);
        if (v82 > 8) {
          goto LABEL_120;
        }
        if (((1 << v82) & 0x38) != 0) {
          break;
        }
        if (((1 << v82) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v80 + v78 + 24);
        }
        else if (v82 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v83 = *(_DWORD **)(v80 + v78 + 24);
          if (v83) {
            *v83 += 2;
          }
          goto LABEL_129;
        }
LABEL_120:
        int v79 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v79;
        ++v77;
        v78 += 32;
        if (v81 != 82)
        {
          if (v81 != 73)
          {
            WGSL::toString();
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v493, (uint64_t *)&v492);
            uint8x8_t v159 = v492;
            v492 = 0;
            if (v159)
            {
              if (*v159 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v159 -= 2;
              }
            }
            uint64_t result = v493;
            v493 = 0;
            if (!result) {
              goto LABEL_605;
            }
            goto LABEL_602;
          }
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v77;
            if (v75 <= v77)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC150);
            }
            uint64_t v127 = v80 + 32 * v77;
            unsigned int v128 = *(_DWORD *)v127;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v127;
            *unsigned int v76 = *(_OWORD *)(v127 + 4);
            unsigned int v129 = *(_DWORD *)v127;
            if (v129 <= 8)
            {
              if (((1 << v129) & 0x38) != 0)
              {
                unsigned int v130 = *(_DWORD **)(v80 + 32 * v77 + 24);
                goto LABEL_205;
              }
              if (((1 << v129) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v80 + 32 * v77 + 24);
              }
              else if (v129 == 8)
              {
                *(void *)(a2 + 80) = 0;
                unsigned int v130 = *(_DWORD **)(v80 + 32 * v77 + 24);
                if (v130) {
                  *v130 += 2;
                }
LABEL_205:
                *(void *)(a2 + 80) = v130;
              }
            }
            int v126 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v126;
            ++v77;
            if (v128 != 82)
            {
              uint64_t v165 = *(void **)(a2 + 8);
              v521 = (WTF *)v4;
              LODWORD(v522) = v5;
              DWORD1(v522) = v126 - v5;
              uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::BreakStatement,WGSL::SourceSpan,void>(v165, &v521);
              goto LABEL_305;
            }
            continue;
          }
        }
      }
      unsigned int v83 = *(_DWORD **)(v80 + v78 + 24);
LABEL_129:
      *(void *)(a2 + 80) = v83;
      goto LABEL_120;
    case 0xD:
    case 0x1A:
    case 0x22:
      *(void *)v516 = 0;
      *(void *)&v516[8] = 0;
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableWithAttributes((uint64_t)&v521, a2, (uint64_t *)v516);
      if (*(void *)v516) {
        WTF::fastFree(*(WTF **)v516, v9);
      }
      uint64_t v10 = v523;
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        int v11 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
        *(void *)a1 = v11;
LABEL_351:
        *(_DWORD *)(a1 + 24) = 1;
LABEL_352:
        uint16x8_t v154 = off_1ECABDFD8[v10];
        goto LABEL_946;
      }
      if (*(_DWORD *)(a2 + 56) != 73)
      {
        WGSL::toString();
        WGSL::toString();
        *(void *)v516 = "Expected a ";
        *(void *)&v516[8] = 12;
        v531 = (WTF *)", but got a ";
        *(void *)&long long v532 = 13;
        WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)v516, (uint64_t *)&v501, (uint64_t)&v531, (uint64_t *)&v500, &v526);
        if (!v526)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC1D0);
        }
        unint64_t v151 = v500;
        v500 = 0;
        if (v151)
        {
          if (*v151 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v151 -= 2;
          }
        }
        int16x8_t v186 = v501;
        v501 = 0;
        if (v186)
        {
          if (*v186 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v186 -= 2;
          }
        }
        unint64_t v187 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
        *(void *)a1 = v526;
        *(void *)(a1 + 8) = v4;
        *(void *)(a1 + 16) = v187;
        goto LABEL_351;
      }
      unsigned int v14 = *(_DWORD *)(a2 + 36);
      unsigned int v15 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v15;
        if (v14 <= v15)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC100);
        }
        uint64_t v17 = *(void *)(a2 + 24);
        uint64_t v18 = v17 + 32 * v15;
        unsigned int v19 = *(_DWORD *)v18;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v18;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v18 + 4);
        unsigned int v20 = *(_DWORD *)v18;
        if (v20 > 8) {
          goto LABEL_20;
        }
        if (((1 << v20) & 0x38) != 0) {
          break;
        }
        if (((1 << v20) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v17 + 32 * v15 + 24);
        }
        else if (v20 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
          if (v21) {
            *v21 += 2;
          }
          goto LABEL_29;
        }
LABEL_20:
        int v16 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v16;
        ++v15;
        if (v19 != 82)
        {
          unint64_t v152 = *(void **)(a2 + 8);
          *(void *)v516 = v4;
          *(_DWORD *)&v516[8] = v5;
          *(_DWORD *)&v516[12] = v16 - v5;
          *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::VariableStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Variable>,void>(v152, v516, &v521);
          *(_DWORD *)(a1 + 24) = 0;
          goto LABEL_352;
        }
      }
      unsigned int v21 = *(_DWORD **)(v17 + 32 * v15 + 24);
LABEL_29:
      *(void *)(a2 + 80) = v21;
      goto LABEL_20;
    case 0xE:
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseConstAssert((uint64_t)&v521, a2);
      uint64_t v60 = v523;
      if (!v523)
      {
        int v169 = *(void **)(a2 + 8);
        int v170 = *(_DWORD *)(a2 + 96) - v5;
        *(void *)v516 = v4;
        *(_DWORD *)&v516[8] = v5;
        *(_DWORD *)&v516[12] = v170;
        *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::ConstAssertStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::ConstAssert>,void>(v169, v516, &v521);
        *(_DWORD *)(a1 + 24) = 0;
        uint64_t v62 = off_1ECABE1B0;
        goto LABEL_590;
      }
      if (v523 != 1) {
        goto LABEL_990;
      }
      uint64_t v61 = v521;
      if (v521) {
        *(_DWORD *)v521 += 2;
      }
      *(_OWORD *)(a1 + 8) = v522;
      *(void *)a1 = v61;
      *(_DWORD *)(a1 + 24) = 1;
      uint64_t v62 = off_1ECABE1B0;
      goto LABEL_590;
    case 0xF:
      unsigned int v93 = *(_DWORD *)(a2 + 36);
      unsigned int v94 = (_OWORD *)(a2 + 60);
      unsigned int v95 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v96 = 32 * v95;
      do
      {
        *(_DWORD *)(a2 + 40) = v95;
        if (v93 <= v95)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC138);
        }
        uint64_t v98 = *(void *)(a2 + 24);
        int v99 = *(_DWORD *)(v98 + v96);
        *(_DWORD *)(a2 + 56) = v99;
        _OWORD *v94 = *(_OWORD *)(v98 + v96 + 4);
        unsigned int v100 = *(_DWORD *)(v98 + v96);
        if (v100 <= 8)
        {
          if (((1 << v100) & 0x38) != 0)
          {
            unsigned int v101 = *(_DWORD **)(v98 + v96 + 24);
LABEL_153:
            *(void *)(a2 + 80) = v101;
            goto LABEL_144;
          }
          if (((1 << v100) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v98 + v96 + 24);
            goto LABEL_144;
          }
          if (v100 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v101 = *(_DWORD **)(v98 + v96 + 24);
            if (v101) {
              *v101 += 2;
            }
            goto LABEL_153;
          }
        }
LABEL_144:
        int v97 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v97;
        ++v95;
        v96 += 32;
      }
      while (v99 == 82);
      if (v99 != 73)
      {
        WGSL::toString();
        WGSL::toString();
        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v491, (uint64_t *)&v490);
        unint64_t v160 = v490;
        v490 = 0;
        if (v160)
        {
          if (*v160 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v160 -= 2;
          }
        }
        uint64_t result = v491;
        v491 = 0;
        if (!result) {
          goto LABEL_605;
        }
        goto LABEL_602;
      }
      while (2)
      {
        *(_DWORD *)(a2 + 40) = v95;
        if (v93 <= v95)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC158);
        }
        uint64_t v132 = v98 + 32 * v95;
        unsigned int v133 = *(_DWORD *)v132;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v132;
        _OWORD *v94 = *(_OWORD *)(v132 + 4);
        unsigned int v134 = *(_DWORD *)v132;
        if (v134 <= 8)
        {
          if (((1 << v134) & 0x38) != 0)
          {
            int v135 = *(_DWORD **)(v98 + 32 * v95 + 24);
            goto LABEL_218;
          }
          if (((1 << v134) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v98 + 32 * v95 + 24);
          }
          else if (v134 == 8)
          {
            *(void *)(a2 + 80) = 0;
            int v135 = *(_DWORD **)(v98 + 32 * v95 + 24);
            if (v135) {
              *v135 += 2;
            }
LABEL_218:
            *(void *)(a2 + 80) = v135;
          }
        }
        int v131 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v131;
        ++v95;
        if (v133 == 82) {
          continue;
        }
        break;
      }
      int8x16x2_t v166 = *(void **)(a2 + 8);
      v521 = (WTF *)v4;
      LODWORD(v522) = v5;
      DWORD1(v522) = v131 - v5;
      uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::ContinueStatement,WGSL::SourceSpan,void>(v166, &v521);
LABEL_305:
      *(void *)a1 = result;
      *(_DWORD *)(a1 + 24) = 0;
LABEL_948:
      *(_DWORD *)(a2 + 44) = v6;
      return result;
    case 0x13:
      unsigned int v49 = *(_DWORD *)(a2 + 36);
      unsigned int v50 = (_OWORD *)(a2 + 60);
      unsigned int v51 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v52 = 32 * v51;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v51;
        if (v49 <= v51)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC128);
        }
        uint64_t v54 = *(void *)(a2 + 24);
        int v55 = *(_DWORD *)(v54 + v52);
        *(_DWORD *)(a2 + 56) = v55;
        *unsigned int v50 = *(_OWORD *)(v54 + v52 + 4);
        unsigned int v56 = *(_DWORD *)(v54 + v52);
        if (v56 > 8) {
          goto LABEL_76;
        }
        if (((1 << v56) & 0x38) != 0) {
          break;
        }
        if (((1 << v56) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v54 + v52 + 24);
        }
        else if (v56 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v57 = *(_DWORD **)(v54 + v52 + 24);
          if (v57) {
            *v57 += 2;
          }
          goto LABEL_85;
        }
LABEL_76:
        int v53 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v53;
        ++v51;
        v52 += 32;
        if (v55 != 82)
        {
          if (v55 != 73)
          {
            WGSL::toString();
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v489, (uint64_t *)&v488);
            unsigned int v158 = v488;
            v488 = 0;
            if (v158)
            {
              if (*v158 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v158 -= 2;
              }
            }
            uint64_t result = v489;
            v489 = 0;
            if (!result) {
              goto LABEL_605;
            }
            goto LABEL_602;
          }
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v51;
            if (v49 <= v51)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC148);
            }
            uint64_t v122 = v54 + 32 * v51;
            unsigned int v123 = *(_DWORD *)v122;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v122;
            *unsigned int v50 = *(_OWORD *)(v122 + 4);
            unsigned int v124 = *(_DWORD *)v122;
            if (v124 <= 8)
            {
              if (((1 << v124) & 0x38) != 0)
              {
                unint64_t v125 = *(_DWORD **)(v54 + 32 * v51 + 24);
                goto LABEL_192;
              }
              if (((1 << v124) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v54 + 32 * v51 + 24);
              }
              else if (v124 == 8)
              {
                *(void *)(a2 + 80) = 0;
                unint64_t v125 = *(_DWORD **)(v54 + 32 * v51 + 24);
                if (v125) {
                  *v125 += 2;
                }
LABEL_192:
                *(void *)(a2 + 80) = v125;
              }
            }
            int v121 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v121;
            ++v51;
            if (v123 != 82)
            {
              unint64_t v164 = *(void **)(a2 + 8);
              v521 = (WTF *)v4;
              LODWORD(v522) = v5;
              DWORD1(v522) = v121 - v5;
              uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::DiscardStatement,WGSL::SourceSpan,void>(v164, &v521);
              goto LABEL_305;
            }
            continue;
          }
        }
      }
      unsigned int v57 = *(_DWORD **)(v54 + v52 + 24);
LABEL_85:
      *(void *)(a2 + 80) = v57;
      goto LABEL_76;
    case 0x18:
      unsigned int v63 = (_OWORD *)(a2 + 60);
      unsigned int v64 = *(_DWORD *)(a2 + 36);
      LODWORD(v65) = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v65;
        if (v64 <= v65)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC0E8);
        }
        uint64_t v67 = *(void *)(a2 + 24);
        uint64_t v68 = v67 + 32 * v65;
        unsigned int v69 = *(_DWORD *)v68;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v68;
        _OWORD *v63 = *(_OWORD *)(v68 + 4);
        unsigned int v70 = *(_DWORD *)v68;
        if (v70 > 8) {
          goto LABEL_98;
        }
        if (((1 << v70) & 0x38) != 0) {
          break;
        }
        if (((1 << v70) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v67 + 32 * v65 + 24);
        }
        else if (v70 == 8)
        {
          *(void *)(a2 + 80) = 0;
          uint64_t v71 = *(_DWORD **)(v67 + 32 * v65 + 24);
          if (v71) {
            *v71 += 2;
          }
          goto LABEL_107;
        }
LABEL_98:
        int v66 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v66;
        uint64_t v65 = (v65 + 1);
        if (v69 != 82)
        {
          v531 = 0;
          v526 = 0;
          v508 = 0;
          if (v69 != 67)
          {
            WGSL::toString();
            WGSL::toString();
            v521 = (WTF *)"Expected a ";
            *(void *)&long long v522 = 12;
            *(void *)v516 = ", but got a ";
            *(void *)&v516[8] = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v529, (uint64_t)v516, (uint64_t *)&v519, &v534);
            if (!v534)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC1F8);
            }
            uint64_t v162 = v519;
            v519 = 0;
            if (v162)
            {
              if (*v162 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v162 -= 2;
              }
            }
            uint64_t result = v529;
            v529 = 0;
            if (result) {
              goto LABEL_608;
            }
            goto LABEL_611;
          }
          unsigned int v143 = (void *)(v67 + 32 * v65 + 24);
          while (1)
          {
            *(_DWORD *)(a2 + 40) = v65;
            if (v64 <= v65)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC1A0);
            }
            int v145 = *((_DWORD *)v143 - 6);
            *(_DWORD *)(a2 + 56) = v145;
            _OWORD *v63 = *(_OWORD *)((char *)v143 - 20);
            unsigned int v146 = *((_DWORD *)v143 - 6);
            if (v146 > 8) {
              goto LABEL_240;
            }
            if (((1 << v146) & 0x38) != 0) {
              break;
            }
            if (((1 << v146) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *v143;
            }
            else if (v146 == 8)
            {
              *(void *)(a2 + 80) = 0;
              long long v147 = (_DWORD *)*v143;
              if (*v143) {
                *v147 += 2;
              }
              goto LABEL_249;
            }
LABEL_240:
            int v144 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v144;
            v143 += 4;
            LODWORD(v65) = v65 + 1;
            if (v145 != 82)
            {
              switch(v145)
              {
                case 8:
                  WGSL::Parser<WGSL::Lexer<char16_t>>::parseLHSExpression((uint64_t)&v521, a2);
                  if (v523)
                  {
                    if (v523 != 1) {
                      goto LABEL_990;
                    }
                    int v396 = v521;
                    if (v521) {
                      *(_DWORD *)v521 += 2;
                    }
                    *(_OWORD *)&v516[8] = v522;
                    *(void *)v516 = v396;
                    int v397 = 1;
                    LODWORD(v517) = 1;
LABEL_850:
                    ((void (*)(const char **, WTF **))off_1ECABE170[v397])(&v534, &v521);
                  }
                  else
                  {
                    WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement((uint64_t)v516, a2, &v521);
                    int v397 = v523;
                    if (v523 != -1) {
                      goto LABEL_850;
                    }
                  }
                  if (v517)
                  {
                    if (v517 != 1) {
                      goto LABEL_990;
                    }
                    uint64_t result = *(WTF **)v516;
                    if (!*(void *)v516)
                    {
                      long long v465 = *(_OWORD *)&v516[8];
                      goto LABEL_988;
                    }
                    **(_DWORD **)v516 += 2;
                    *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
                    *(void *)a1 = result;
                    *(_DWORD *)(a1 + 24) = 1;
                    *(void *)v516 = 0;
                    int v420 = *(_DWORD *)result - 2;
                    if (*(_DWORD *)result != 2) {
                      goto LABEL_905;
                    }
                    goto LABEL_855;
                  }
                  v531 = *(WTF **)v516;
LABEL_857:
                  if (*(_DWORD *)(a2 + 56) == 73)
                  {
LABEL_858:
                    unsigned int v421 = *(_DWORD *)(a2 + 36);
                    unsigned int v422 = *(_DWORD *)(a2 + 40) + 1;
                    uint64_t v423 = 32 * v422;
                    while (1)
                    {
                      *(_DWORD *)(a2 + 40) = v422;
                      if (v421 <= v422)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825CC1A8);
                      }
                      uint64_t v425 = *(void *)(a2 + 24);
                      int v426 = *(_DWORD *)(v425 + v423);
                      *(_DWORD *)(a2 + 56) = v426;
                      _OWORD *v63 = *(_OWORD *)(v425 + v423 + 4);
                      unsigned int v427 = *(_DWORD *)(v425 + v423);
                      if (v427 > 8) {
                        goto LABEL_860;
                      }
                      if (((1 << v427) & 0x38) != 0) {
                        break;
                      }
                      if (((1 << v427) & 0xC4) != 0)
                      {
                        *(void *)(a2 + 80) = *(void *)(v425 + v423 + 24);
                      }
                      else if (v427 == 8)
                      {
                        *(void *)(a2 + 80) = 0;
                        v428 = *(_DWORD **)(v425 + v423 + 24);
                        if (v428) {
                          *v428 += 2;
                        }
                        goto LABEL_869;
                      }
LABEL_860:
                      int v424 = *(_DWORD *)(a2 + 68);
                      *(void *)(a2 + 88) = *(void *)(a2 + 60);
                      *(_DWORD *)(a2 + 96) = v424;
                      v423 += 32;
                      ++v422;
                      if (v426 != 82)
                      {
                        if (v426 == 73) {
                          goto LABEL_871;
                        }
                        WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v521, a2);
                        if (v523)
                        {
                          if (v523 != 1) {
                            goto LABEL_990;
                          }
                          uint64_t result = v521;
                          if (!v521) {
                            goto LABEL_987;
                          }
LABEL_904:
                          *(_DWORD *)result += 2;
                          *(_OWORD *)(a1 + 8) = v522;
                          *(void *)a1 = result;
                          *(_DWORD *)(a1 + 24) = 1;
                          int v420 = *(_DWORD *)result - 2;
                          if (*(_DWORD *)result != 2) {
                            goto LABEL_905;
                          }
LABEL_855:
                          uint64_t result = (WTF *)WTF::StringImpl::destroy();
                          goto LABEL_948;
                        }
                        v526 = (const char *)v521;
                        if (*(_DWORD *)(a2 + 56) != 73)
                        {
                          WGSL::toString();
                          WGSL::toString();
                          v521 = (WTF *)"Expected a ";
                          *(void *)&long long v522 = 12;
                          *(void *)v516 = ", but got a ";
                          *(void *)&v516[8] = 13;
                          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v513, (uint64_t)v516, (uint64_t *)&v512, &v534);
                          if (!v534)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825CC240);
                          }
                          v449 = v512;
                          v512 = 0;
                          if (v449)
                          {
                            if (*v449 == 2) {
                              WTF::StringImpl::destroy();
                            }
                            else {
                              *v449 -= 2;
                            }
                          }
                          uint64_t result = v513;
                          v513 = 0;
                          if (!result) {
                            goto LABEL_611;
                          }
LABEL_608:
                          if (*(_DWORD *)result == 2) {
                            uint64_t result = (WTF *)WTF::StringImpl::destroy();
                          }
                          else {
                            *(_DWORD *)result -= 2;
                          }
                          goto LABEL_611;
                        }
LABEL_871:
                        unsigned int v429 = *(_DWORD *)(a2 + 36);
                        unsigned int v430 = *(_DWORD *)(a2 + 40) + 1;
                        uint64_t v431 = 32 * v430;
                        while (2)
                        {
                          *(_DWORD *)(a2 + 40) = v430;
                          if (v429 <= v430)
                          {
                            __break(0xC471u);
                            JUMPOUT(0x1825CC1C0);
                          }
                          uint64_t v433 = *(void *)(a2 + 24);
                          int v434 = *(_DWORD *)(v433 + v431);
                          *(_DWORD *)(a2 + 56) = v434;
                          _OWORD *v63 = *(_OWORD *)(v433 + v431 + 4);
                          unsigned int v435 = *(_DWORD *)(v433 + v431);
                          if (v435 <= 8)
                          {
                            if (((1 << v435) & 0x38) != 0)
                            {
                              unsigned int v436 = *(_DWORD **)(v433 + v431 + 24);
                              goto LABEL_882;
                            }
                            if (((1 << v435) & 0xC4) != 0)
                            {
                              *(void *)(a2 + 80) = *(void *)(v433 + v431 + 24);
                            }
                            else if (v435 == 8)
                            {
                              *(void *)(a2 + 80) = 0;
                              unsigned int v436 = *(_DWORD **)(v433 + v431 + 24);
                              if (v436) {
                                *v436 += 2;
                              }
LABEL_882:
                              *(void *)(a2 + 80) = v436;
                            }
                          }
                          int v432 = *(_DWORD *)(a2 + 68);
                          *(void *)(a2 + 88) = *(void *)(a2 + 60);
                          *(_DWORD *)(a2 + 96) = v432;
                          v431 += 32;
                          ++v430;
                          if (v434 != 82)
                          {
                            if (v434 != 8)
                            {
                              if (v434 == 68) {
                                goto LABEL_885;
                              }
LABEL_933:
                              uint64_t result = (WTF *)WTF::StringImpl::createWithoutCopyingNonEmpty();
                              unint64_t v302 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
LABEL_613:
                              *(void *)(a1 + 8) = v4;
                              *(void *)(a1 + 16) = v302;
LABEL_3:
                              *(_DWORD *)(a1 + 24) = 1;
                              goto LABEL_948;
                            }
                            WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement((uint64_t)&v521, a2);
                            if (v523)
                            {
                              if (v523 != 1) {
                                goto LABEL_990;
                              }
                              uint64_t result = v521;
                              if (v521)
                              {
                                *(_DWORD *)v521 += 2;
                                *(_OWORD *)(a1 + 8) = v522;
                                *(void *)a1 = result;
                                *(_DWORD *)(a1 + 24) = 1;
                                v521 = 0;
                                int v420 = *(_DWORD *)result - 2;
                                if (*(_DWORD *)result == 2) {
                                  goto LABEL_855;
                                }
LABEL_905:
                                *(_DWORD *)uint64_t result = v420;
                                goto LABEL_948;
                              }
LABEL_987:
                              long long v465 = v522;
LABEL_988:
                              *(_OWORD *)(a1 + 8) = v465;
                              *(void *)a1 = 0;
                              goto LABEL_3;
                            }
                            v508 = v521;
                            if (*(_DWORD *)(a2 + 56) != 68)
                            {
                              WGSL::toString();
                              WGSL::toString();
                              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v511, (uint64_t *)&v507);
                              long long v460 = v507;
                              v507 = 0;
                              if (v460)
                              {
                                if (*v460 == 2) {
                                  WTF::StringImpl::destroy();
                                }
                                else {
                                  *v460 -= 2;
                                }
                              }
                              uint64_t result = v511;
                              v511 = 0;
                              if (!result) {
                                goto LABEL_605;
                              }
LABEL_602:
                              if (*(_DWORD *)result == 2) {
                                uint64_t result = (WTF *)WTF::StringImpl::destroy();
                              }
                              else {
                                *(_DWORD *)result -= 2;
                              }
                              goto LABEL_605;
                            }
LABEL_885:
                            unsigned int v437 = *(_DWORD *)(a2 + 36);
                            unsigned int v438 = *(_DWORD *)(a2 + 40) + 1;
                            while (2)
                            {
                              *(_DWORD *)(a2 + 40) = v438;
                              if (v437 <= v438)
                              {
                                __break(0xC471u);
                                JUMPOUT(0x1825CC1B8);
                              }
                              uint64_t v440 = *(void *)(a2 + 24);
                              uint64_t v441 = v440 + 32 * v438;
                              unsigned int v442 = *(_DWORD *)v441;
                              *(_DWORD *)(a2 + 56) = *(_DWORD *)v441;
                              _OWORD *v63 = *(_OWORD *)(v441 + 4);
                              unsigned int v443 = *(_DWORD *)v441;
                              if (v443 <= 8)
                              {
                                if (((1 << v443) & 0x38) != 0)
                                {
                                  __n128 v444 = *(_DWORD **)(v440 + 32 * v438 + 24);
                                  goto LABEL_896;
                                }
                                if (((1 << v443) & 0xC4) != 0)
                                {
                                  *(void *)(a2 + 80) = *(void *)(v440 + 32 * v438 + 24);
                                }
                                else if (v443 == 8)
                                {
                                  *(void *)(a2 + 80) = 0;
                                  __n128 v444 = *(_DWORD **)(v440 + 32 * v438 + 24);
                                  if (v444) {
                                    *v444 += 2;
                                  }
LABEL_896:
                                  *(void *)(a2 + 80) = v444;
                                }
                              }
                              int v439 = *(_DWORD *)(a2 + 68);
                              *(void *)(a2 + 88) = *(void *)(a2 + 60);
                              *(_DWORD *)(a2 + 96) = v439;
                              ++v438;
                              if (v442 != 82)
                              {
                                WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(&v521, a2);
                                uint64_t v60 = v523;
                                if (!v523)
                                {
                                  v456 = *(void **)(a2 + 8);
                                  int v457 = *(_DWORD *)(a2 + 96) - v5;
                                  *(void *)v516 = v4;
                                  *(_DWORD *)&v516[8] = v5;
                                  *(_DWORD *)&v516[12] = v457;
                                  *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::ForStatement,WGSL::SourceSpan,WGSL::AST::Statement *&,WGSL::AST::Expression *&,WGSL::AST::Statement *&,std::reference_wrapper<WGSL::AST::CompoundStatement>,void>(v456, v516, (uint64_t *)&v531, (uint64_t *)&v526, (uint64_t *)&v508, &v521);
                                  *(_DWORD *)(a1 + 24) = 0;
                                  goto LABEL_957;
                                }
                                if (v523 == 1)
                                {
                                  unsigned int v448 = v521;
                                  if (v521) {
                                    *(_DWORD *)v521 += 2;
                                  }
                                  *(_OWORD *)(a1 + 8) = v522;
                                  *(void *)a1 = v448;
                                  *(_DWORD *)(a1 + 24) = 1;
LABEL_957:
                                  uint64_t v62 = off_1ECABE5C0;
LABEL_590:
                                  uint16x8_t v154 = v62[v60];
LABEL_946:
                                  int8x16x2_t v416 = (WTF **)v516;
                                  unint64_t v417 = &v521;
LABEL_947:
                                  uint64_t result = (WTF *)((uint64_t (*)(WTF **, WTF **))v154)(v416, v417);
                                  goto LABEL_948;
                                }
LABEL_990:
                                std::__throw_bad_variant_access[abi:sn180100]();
LABEL_991:
                                __break(0xC471u);
                                JUMPOUT(0x1825CC0E0);
                              }
                              continue;
                            }
                          }
                          continue;
                        }
                      }
                    }
                    v428 = *(_DWORD **)(v425 + v423 + 24);
LABEL_869:
                    *(void *)(a2 + 80) = v428;
                    goto LABEL_860;
                  }
                  WGSL::toString();
                  WGSL::toString();
                  v521 = (WTF *)"Expected a ";
                  *(void *)&long long v522 = 12;
                  *(void *)v516 = ", but got a ";
                  *(void *)&v516[8] = 13;
                  WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v515, (uint64_t)v516, (uint64_t *)&v514, &v534);
                  if (!v534)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825CC238);
                  }
                  unsigned int v445 = v514;
                  v514 = 0;
                  if (v445)
                  {
                    if (*v445 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v445 -= 2;
                    }
                  }
                  uint64_t result = v515;
                  v515 = 0;
                  if (result) {
                    goto LABEL_608;
                  }
                  break;
                case 9:
                case 10:
                case 11:
                case 12:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                  goto LABEL_933;
                case 13:
                case 26:
                case 34:
                  *(void *)v516 = 0;
                  *(void *)&v516[8] = 0;
                  WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableWithAttributes((uint64_t)&v521, a2, (uint64_t *)v516);
                  if (*(void *)v516) {
                    WTF::fastFree(*(WTF **)v516, v163);
                  }
                  if (v523)
                  {
                    if (v523 != 1) {
                      goto LABEL_990;
                    }
                    uint64_t result = v521;
                    if (!v521) {
                      goto LABEL_987;
                    }
                    goto LABEL_904;
                  }
                  uint64_t v312 = *(void **)(a2 + 8);
                  int v313 = *(_DWORD *)(a2 + 96) - v5;
                  *(void *)v516 = v4;
                  *(_DWORD *)&v516[8] = v5;
                  *(_DWORD *)&v516[12] = v313;
                  v531 = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::VariableStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Variable>,void>(v312, v516, &v521);
                  if (v523 != -1) {
                    ((void (*)(unsigned char *, WTF **))off_1ECABDFD8[v523])(v516, &v521);
                  }
                  goto LABEL_857;
                default:
                  if (v145 != 73) {
                    goto LABEL_933;
                  }
                  goto LABEL_858;
              }
LABEL_611:
              uint64_t v300 = (*(_DWORD *)(a2 + 96) - v5);
              unsigned int v301 = v534;
LABEL_612:
              unint64_t v302 = v5 | (v300 << 32);
              *(void *)a1 = v301;
              goto LABEL_613;
            }
          }
          long long v147 = (_DWORD *)*v143;
LABEL_249:
          *(void *)(a2 + 80) = v147;
          goto LABEL_240;
        }
      }
      uint64_t v71 = *(_DWORD **)(v67 + 32 * v65 + 24);
LABEL_107:
      *(void *)(a2 + 80) = v71;
      goto LABEL_98;
    case 0x19:
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v521, a2);
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        unsigned int v58 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
        *(void *)a1 = v58;
        int v59 = 1;
        *(_DWORD *)(a1 + 24) = 1;
      }
      else
      {
        uint64_t result = (WTF *)WGSL::Parser<WGSL::Lexer<char16_t>>::parseIfStatementWithAttributes(a1, a2, (uint64_t *)&v521, (_DWORD *)v4, v5);
        int v59 = v523;
        if (v523 == -1) {
          goto LABEL_948;
        }
      }
      uint16x8_t v154 = off_1ECABE5D0[v59];
      goto LABEL_946;
    case 0x1B:
      int v84 = (_OWORD *)(a2 + 60);
      unsigned int v85 = *(_DWORD *)(a2 + 36);
      unsigned int v86 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v86;
        if (v85 <= v86)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC0F0);
        }
        uint64_t v88 = *(void *)(a2 + 24);
        uint64_t v89 = v88 + 32 * v86;
        unsigned int v90 = *(_DWORD *)v89;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v89;
        _OWORD *v84 = *(_OWORD *)(v89 + 4);
        unsigned int v91 = *(_DWORD *)v89;
        if (v91 > 8) {
          goto LABEL_132;
        }
        if (((1 << v91) & 0x38) != 0) {
          break;
        }
        if (((1 << v91) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v88 + 32 * v86 + 24);
        }
        else if (v91 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v92 = *(_DWORD **)(v88 + 32 * v86 + 24);
          if (v92) {
            *v92 += 2;
          }
          goto LABEL_141;
        }
LABEL_132:
        int v87 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v87;
        ++v86;
        if (v90 != 82)
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v531, a2);
          if (v533)
          {
            if (v533 != 1) {
              goto LABEL_990;
            }
            int v148 = v531;
            if (v531) {
              *(_DWORD *)v531 += 2;
            }
            *(_OWORD *)(a1 + 8) = v532;
            *(void *)a1 = v148;
            int v149 = 1;
            *(_DWORD *)(a1 + 24) = 1;
LABEL_793:
            uint64_t result = (WTF *)((uint64_t (*)(WTF **, WTF **))off_1ECABE5D0[v149])(&v521, &v531);
            goto LABEL_948;
          }
          if (*(_DWORD *)(a2 + 56) != 43)
          {
            WGSL::toString();
            WGSL::toString();
            v521 = (WTF *)"Expected a ";
            *(void *)&long long v522 = 12;
            *(void *)v516 = ", but got a ";
            *(void *)&v516[8] = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v508, (uint64_t)v516, (uint64_t *)&v534, &v526);
            if (!v526)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC200);
            }
            unsigned int v193 = v534;
            v534 = 0;
            if (v193)
            {
              if (*(_DWORD *)v193 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v193 -= 2;
              }
            }
            uint64_t v394 = v508;
            v508 = 0;
            if (v394)
            {
              if (*(_DWORD *)v394 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v394 -= 2;
              }
            }
            int v149 = 0;
            unint64_t v395 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v526;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v395;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_793;
          }
          unsigned int v176 = *(_DWORD *)(a2 + 36);
          unsigned int v177 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v177;
            if (v176 <= v177)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC180);
            }
            uint64_t v179 = *(void *)(a2 + 24);
            uint64_t v180 = v179 + 32 * v177;
            unsigned int v181 = *(_DWORD *)v180;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v180;
            _OWORD *v84 = *(_OWORD *)(v180 + 4);
            unsigned int v182 = *(_DWORD *)v180;
            if (v182 <= 8)
            {
              if (((1 << v182) & 0x38) != 0)
              {
                int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                goto LABEL_339;
              }
              if (((1 << v182) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v179 + 32 * v177 + 24);
              }
              else if (v182 == 8)
              {
                *(void *)(a2 + 80) = 0;
                int8x16_t v183 = *(_DWORD **)(v179 + 32 * v177 + 24);
                if (v183) {
                  *v183 += 2;
                }
LABEL_339:
                *(void *)(a2 + 80) = v183;
              }
            }
            int v178 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v178;
            ++v177;
            if (v181 == 82) {
              continue;
            }
            break;
          }
          int v479 = 0;
          uint8x8_t v196 = (_OWORD *)(a1 + 8);
          v529 = 0;
          uint64_t v530 = 0;
          LOBYTE(v521) = 0;
          unint64_t v197 = HIDWORD(v4);
          unsigned __int8 v525 = 0;
          while (2)
          {
            while (2)
            {
              int v199 = *(_DWORD *)(a2 + 56);
              if (v199 != 16)
              {
                if (v199 != 44)
                {
                  WGSL::Parser<WGSL::Lexer<char16_t>>::parseStatement(v516, a2);
                  int v200 = (int)v517;
                  if (v517)
                  {
                    if (v517 != 1) {
                      goto LABEL_990;
                    }
                    uint64_t v201 = *(void *)v516;
                    if (*(void *)v516) {
                      **(_DWORD **)v516 += 2;
                    }
                    _OWORD *v196 = *(_OWORD *)&v516[8];
                    *(void *)a1 = v201;
                    *(_DWORD *)(a1 + 24) = 1;
                    uint64_t v202 = v517;
                    if (v517 == -1)
                    {
LABEL_381:
                      if (v200)
                      {
LABEL_774:
                        if (v479)
                        {
                          if (*((void *)&v522 + 1)) {
                            WTF::fastFree(*((WTF **)&v522 + 1), v198);
                          }
                          if (v521) {
                            WTF::fastFree(v521, v198);
                          }
                        }
                        uint64_t result = v529;
                        if (v529)
                        {
                          v529 = 0;
                          LODWORD(v530) = 0;
                          uint64_t result = (WTF *)WTF::fastFree(result, v198);
                        }
                        int v149 = v533;
                        if (v533 == -1) {
                          goto LABEL_948;
                        }
                        goto LABEL_793;
                      }
                      continue;
                    }
                  }
                  else
                  {
                    uint64_t v203 = HIDWORD(v530);
                    if (HIDWORD(v530) == v530)
                    {
                      v204 = (uint64_t *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v529, HIDWORD(v530) + 1, (unint64_t)v516);
                      uint64_t v203 = HIDWORD(v530);
                      unint64_t v205 = v529;
                      uint64_t v206 = *v204;
                    }
                    else
                    {
                      unint64_t v205 = v529;
                      uint64_t v206 = *(void *)v516;
                    }
                    *((void *)v205 + v203) = v206;
                    ++HIDWORD(v530);
                    uint64_t v202 = v517;
                    if (v517 == -1) {
                      goto LABEL_381;
                    }
                  }
                  ((void (*)(const char **, unsigned char *))off_1ECABE580[v202])(&v526, v516);
                  goto LABEL_381;
                }
                unsigned int v385 = *(_DWORD *)(a2 + 36);
                unsigned int v386 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v386;
                  if (v385 <= v386)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825CC198);
                  }
                  uint64_t v388 = *(void *)(a2 + 24);
                  uint64_t v389 = v388 + 32 * v386;
                  unsigned int v390 = *(_DWORD *)v389;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v389;
                  _OWORD *v84 = *(_OWORD *)(v389 + 4);
                  unsigned int v391 = *(_DWORD *)v389;
                  if (v391 <= 8)
                  {
                    if (((1 << v391) & 0x38) != 0)
                    {
                      unint64_t v392 = *(_DWORD **)(v388 + 32 * v386 + 24);
                      goto LABEL_772;
                    }
                    if (((1 << v391) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v388 + 32 * v386 + 24);
                    }
                    else if (v391 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      unint64_t v392 = *(_DWORD **)(v388 + 32 * v386 + 24);
                      if (v392) {
                        *v392 += 2;
                      }
LABEL_772:
                      *(void *)(a2 + 80) = v392;
                    }
                  }
                  int v387 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v387;
                  ++v386;
                  if (v390 != 82)
                  {
                    uint64_t v393 = *(void **)(a2 + 8);
                    *(_DWORD *)v516 = v4;
                    *(_DWORD *)&v516[4] = v197;
                    *(_DWORD *)&v516[8] = v5;
                    *(_DWORD *)&v516[12] = v387 - v5;
                    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::LoopStatement,WGSL::SourceSpan,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::ReferenceWrapperVector<WGSL::AST::Statement,0ul>,std::optional<WGSL::AST::Continuing>,void>(v393, v516, (uint64_t *)&v531, (uint64_t *)&v529, (uint64_t *)&v521);
                    *(_DWORD *)(a1 + 24) = 0;
                    int v479 = v525;
                    goto LABEL_774;
                  }
                  continue;
                }
              }
              break;
            }
            unsigned int v207 = *(_DWORD *)(a2 + 36);
            unsigned int v208 = *(_DWORD *)(a2 + 40) + 1;
LABEL_398:
            *(_DWORD *)(a2 + 40) = v208;
            if (v207 <= v208)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC188);
            }
            uint64_t v210 = *(void *)(a2 + 24);
            uint64_t v211 = v210 + 32 * v208;
            unsigned int v212 = *(_DWORD *)v211;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v211;
            _OWORD *v84 = *(_OWORD *)(v211 + 4);
            unsigned int v213 = *(_DWORD *)v211;
            if (v213 <= 8)
            {
              if (((1 << v213) & 0x38) != 0)
              {
                uint64_t v214 = *(_DWORD **)(v210 + 32 * v208 + 24);
                goto LABEL_406;
              }
              if (((1 << v213) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v210 + 32 * v208 + 24);
              }
              else if (v213 == 8)
              {
                *(void *)(a2 + 80) = 0;
                uint64_t v214 = *(_DWORD **)(v210 + 32 * v208 + 24);
                if (v214) {
                  *v214 += 2;
                }
LABEL_406:
                *(void *)(a2 + 80) = v214;
              }
            }
            int v209 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v209;
            ++v208;
            if (v212 != 82)
            {
              v519 = 0;
              uint64_t v520 = 0;
              WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(&v526, a2);
              if (v528)
              {
                if (v528 != 1) {
                  goto LABEL_990;
                }
                uint64_t v215 = v526;
                if (v526) {
                  *(_DWORD *)v526 += 2;
                }
                char v216 = 0;
                _OWORD *v196 = v527;
                *(void *)a1 = v215;
                *(_DWORD *)(a1 + 24) = 1;
                uint64_t v217 = v528;
                if (v528 == -1) {
                  goto LABEL_413;
                }
                goto LABEL_412;
              }
              if (*(_DWORD *)(a2 + 56) != 43)
              {
                *(_DWORD *)v516 = *(_DWORD *)(a2 + 56);
                unsigned int v518 = 1;
                WGSL::toString();
                if (v518 != 1) {
                  goto LABEL_990;
                }
                WGSL::toString();
                v508 = (WTF *)"Expected a ";
                *(void *)&long long v509 = 12;
                v534 = ", but got a ";
                uint64_t v535 = 13;
                WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v508, (uint64_t *)&v514, (uint64_t)&v534, (uint64_t *)&v513, &v515);
                if (!v515)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC210);
                }
                unsigned int v262 = v513;
                v513 = 0;
                if (v262)
                {
                  if (*(_DWORD *)v262 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *(_DWORD *)v262 -= 2;
                  }
                }
                unsigned int v267 = v514;
                v514 = 0;
                if (!v267) {
                  goto LABEL_516;
                }
                goto LABEL_513;
              }
              *(_OWORD *)&v516[4] = *v84;
              *(_DWORD *)v516 = 43;
              unsigned int v518 = 0;
              unsigned int v219 = *(_DWORD *)(a2 + 36);
              unsigned int v220 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v220;
                if (v219 <= v220)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC1C8);
                }
                uint64_t v222 = *(void *)(a2 + 24);
                uint64_t v223 = v222 + 32 * v220;
                unsigned int v224 = *(_DWORD *)v223;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v223;
                _OWORD *v84 = *(_OWORD *)(v223 + 4);
                unsigned int v225 = *(_DWORD *)v223;
                if (v225 <= 8)
                {
                  if (((1 << v225) & 0x38) != 0)
                  {
                    unsigned int v226 = *(_DWORD **)(v222 + 32 * v220 + 24);
                    goto LABEL_429;
                  }
                  if (((1 << v225) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v222 + 32 * v220 + 24);
                  }
                  else if (v225 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    unsigned int v226 = *(_DWORD **)(v222 + 32 * v220 + 24);
                    if (v226) {
                      *v226 += 2;
                    }
LABEL_429:
                    *(void *)(a2 + 80) = v226;
                  }
                }
                int v221 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v221;
                ++v220;
                if (v224 == 82) {
                  continue;
                }
                break;
              }
LABEL_431:
              int v227 = *(_DWORD *)(a2 + 56);
              if (v227 != 11) {
                goto LABEL_432;
              }
              while (2)
              {
                unsigned int v256 = *(_DWORD *)(a2 + 36);
                unsigned int v237 = *(_DWORD *)(a2 + 40);
                uint64_t v235 = 32 * (v237 + 1);
                unsigned int v236 = v237 + 2;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = ++v237;
                  if (v256 <= v237)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825CC1E0);
                  }
                  unsigned int v238 = v236;
                  uint64_t v239 = *(void *)(a2 + 24);
                  int v240 = *(_DWORD *)(v239 + v235);
                  *(_DWORD *)(a2 + 56) = v240;
                  _OWORD *v84 = *(_OWORD *)(v239 + v235 + 4);
                  unsigned int v241 = *(_DWORD *)(v239 + v235);
                  if (v241 <= 8)
                  {
                    if (((1 << v241) & 0x38) != 0)
                    {
                      int v242 = *(_DWORD **)(v239 + v235 + 24);
                      goto LABEL_454;
                    }
                    if (((1 << v241) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v239 + v235 + 24);
                    }
                    else if (v241 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      int v242 = *(_DWORD **)(v239 + v235 + 24);
                      if (v242) {
                        *v242 += 2;
                      }
LABEL_454:
                      *(void *)(a2 + 80) = v242;
                    }
                  }
                  int v234 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v234;
                  v235 += 32;
                  unsigned int v236 = v238 + 1;
                  if (v240 == 82) {
                    continue;
                  }
                  break;
                }
                if (v240 != 25)
                {
                  if (v240 != 73)
                  {
                    *(_DWORD *)v516 = v240;
                    unsigned int v518 = 1;
                    WGSL::toString();
                    if (v518 != 1) {
                      goto LABEL_990;
                    }
                    WGSL::toString();
                    v508 = (WTF *)"Expected a ";
                    *(void *)&long long v509 = 12;
                    v534 = ", but got a ";
                    uint64_t v535 = 13;
                    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v508, (uint64_t *)&v512, (uint64_t)&v534, (uint64_t *)&v511, &v515);
                    if (!v515)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825CC228);
                    }
                    uint64_t v289 = v511;
                    v511 = 0;
                    if (v289)
                    {
                      if (*(_DWORD *)v289 == 2) {
                        WTF::StringImpl::destroy();
                      }
                      else {
                        *(_DWORD *)v289 -= 2;
                      }
                    }
                    unsigned int v267 = v512;
                    v512 = 0;
                    if (v267) {
                      goto LABEL_513;
                    }
LABEL_516:
                    unint64_t v268 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                    *(void *)a1 = v515;
                    *(void *)(a1 + 8) = v4;
                    *(void *)(a1 + 16) = v268;
                    *(_DWORD *)(a1 + 24) = 1;
                    if (v518 != -1) {
                      ((void (*)(WTF **, unsigned char *))off_1ECABDF90[v518])(&v508, v516);
                    }
                    goto LABEL_539;
                  }
                  *(_OWORD *)&v516[4] = *v84;
                  *(_DWORD *)v516 = 73;
                  unsigned int v518 = 0;
LABEL_460:
                  *(_DWORD *)(a2 + 40) = v238;
                  if (v256 <= v238)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825CC1E8);
                  }
                  uint64_t v244 = v239 + 32 * v238;
                  unsigned int v245 = *(_DWORD *)v244;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v244;
                  _OWORD *v84 = *(_OWORD *)(v244 + 4);
                  unsigned int v246 = *(_DWORD *)v244;
                  if (v246 <= 8)
                  {
                    if (((1 << v246) & 0x38) != 0)
                    {
                      v247 = *(_DWORD **)(v239 + 32 * v238 + 24);
                      goto LABEL_468;
                    }
                    if (((1 << v246) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v239 + 32 * v238 + 24);
                    }
                    else if (v246 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      v247 = *(_DWORD **)(v239 + 32 * v238 + 24);
                      if (v247) {
                        *v247 += 2;
                      }
LABEL_468:
                      *(void *)(a2 + 80) = v247;
                    }
                  }
                  int v243 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v243;
                  ++v238;
                  if (v245 != 82)
                  {
                    unint64_t v248 = *(void **)(a2 + 8);
                    *(_DWORD *)v516 = v4;
                    *(_DWORD *)&v516[4] = v197;
                    *(_DWORD *)&v516[8] = v5;
                    *(_DWORD *)&v516[12] = v243 - v5;
                    unint64_t v249 = WGSL::AST::Builder::construct<WGSL::AST::BreakStatement,WGSL::SourceSpan,void>(v248, v516);
                    uint64_t v250 = HIDWORD(v520);
                    if (HIDWORD(v520) == v520)
                    {
                      v471 = v249;
                      unint64_t v474 = v197;
                      unint64_t v251 = HIDWORD(v520) + ((unint64_t)HIDWORD(v520) >> 2);
                      if (v251 >= 0x10) {
                        unint64_t v252 = v251 + 1;
                      }
                      else {
                        unint64_t v252 = 16;
                      }
                      if (v252 <= (unint64_t)HIDWORD(v520) + 1) {
                        unint64_t v253 = HIDWORD(v520) + 1;
                      }
                      else {
                        unint64_t v253 = v252;
                      }
                      if (v253 >> 29)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825CC208);
                      }
                      __src = v519;
                      unsigned int v254 = (_DWORD *)WTF::fastMalloc((WTF *)(8 * v253));
                      LODWORD(v520) = v253;
                      v519 = v254;
                      memcpy(v254, __src, 8 * v250);
                      unint64_t v197 = v474;
                      if (__src)
                      {
                        if (v519 == __src)
                        {
                          v519 = 0;
                          LODWORD(v520) = 0;
                        }
                        WTF::fastFree((WTF *)__src, v198);
                      }
                      LODWORD(v250) = HIDWORD(v520);
                      int v255 = &v519[2 * HIDWORD(v520)];
                      unint64_t v249 = v471;
                    }
                    else
                    {
                      int v255 = &v519[2 * HIDWORD(v520)];
                    }
                    *int v255 = v249;
                    HIDWORD(v520) = v250 + 1;
                    int v227 = *(_DWORD *)(a2 + 56);
                    if (v227 == 11) {
                      continue;
                    }
LABEL_432:
                    if (v227 == 44)
                    {
                      v472 = 0;
                      goto LABEL_545;
                    }
                    WGSL::Parser<WGSL::Lexer<char16_t>>::parseStatement(v516, a2);
                    int v228 = (int)v517;
                    if (v517)
                    {
                      if (v517 != 1) {
                        goto LABEL_990;
                      }
                      uint64_t v229 = *(void *)v516;
                      if (*(void *)v516) {
                        **(_DWORD **)v516 += 2;
                      }
                      _OWORD *v196 = *(_OWORD *)&v516[8];
                      *(void *)a1 = v229;
                      *(_DWORD *)(a1 + 24) = 1;
                    }
                    else
                    {
                      uint64_t v230 = HIDWORD(v520);
                      if (HIDWORD(v520) == v520)
                      {
                        int v231 = (uint64_t *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v519, HIDWORD(v520) + 1, (unint64_t)v516);
                        uint64_t v230 = HIDWORD(v520);
                        uint64_t v232 = (uint64_t)v519;
                        uint64_t v233 = *v231;
                      }
                      else
                      {
                        uint64_t v232 = (uint64_t)v519;
                        uint64_t v233 = *(void *)v516;
                      }
                      *(void *)(v232 + 8 * v230) = v233;
                      ++HIDWORD(v520);
                    }
                    if (v517 != -1) {
                      ((void (*)(WTF **, unsigned char *))off_1ECABE580[v517])(&v508, v516);
                    }
                    if (!v228) {
                      goto LABEL_431;
                    }
LABEL_539:
                    char v216 = 0;
                    uint64_t v217 = v528;
                    if (v528 != -1) {
                      goto LABEL_412;
                    }
                    goto LABEL_413;
                  }
                  goto LABEL_460;
                }
                break;
              }
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v238;
                if (v256 <= v238)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC1F0);
                }
                uint64_t v258 = v239 + 32 * v238;
                unsigned int v259 = *(_DWORD *)v258;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v258;
                _OWORD *v84 = *(_OWORD *)(v258 + 4);
                unsigned int v260 = *(_DWORD *)v258;
                if (v260 <= 8)
                {
                  if (((1 << v260) & 0x38) != 0)
                  {
                    unsigned int v261 = *(_DWORD **)(v239 + 32 * v238 + 24);
                    goto LABEL_495;
                  }
                  if (((1 << v260) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v239 + 32 * v238 + 24);
                  }
                  else if (v260 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    unsigned int v261 = *(_DWORD **)(v239 + 32 * v238 + 24);
                    if (v261) {
                      *v261 += 2;
                    }
LABEL_495:
                    *(void *)(a2 + 80) = v261;
                  }
                }
                int v257 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v257;
                ++v238;
                if (v259 == 82) {
                  continue;
                }
                break;
              }
              WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v508, a2);
              if (!v510)
              {
                WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)v516, a2, 73);
                unsigned int v265 = v518;
                unint64_t v475 = v197;
                if (v518)
                {
                  WGSL::toString();
                  if (v518 != 1) {
                    goto LABEL_990;
                  }
                  WGSL::toString();
                  WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v534, (uint64_t *)&v507, (uint64_t *)&v506);
                  unsigned int v266 = v506;
                  v506 = 0;
                  if (v266)
                  {
                    if (*v266 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v266 -= 2;
                    }
                  }
                  unsigned int v271 = v507;
                  v507 = 0;
                  if (v271)
                  {
                    if (*v271 == 2) {
                      WTF::StringImpl::destroy();
                    }
                    else {
                      *v271 -= 2;
                    }
                  }
                  unsigned int v269 = v265;
                  unint64_t v272 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                  *(void *)a1 = v534;
                  *(void *)(a1 + 8) = v4;
                  *(void *)(a1 + 16) = v272;
                  int v264 = 1;
                  *(_DWORD *)(a1 + 24) = 1;
                  uint64_t v270 = v518;
                  if (v518 == -1)
                  {
                    v472 = 0;
LABEL_529:
                    unint64_t v197 = v475;
                    goto LABEL_530;
                  }
                }
                else
                {
                  unsigned int v269 = 0;
                  uint64_t v270 = 0;
                  int v264 = 13;
                }
                ((void (*)(const char **, unsigned char *))off_1ECABDF90[v270])(&v534, v516);
                uint64_t v273 = v508;
                if (v269) {
                  uint64_t v273 = 0;
                }
                v472 = v273;
                goto LABEL_529;
              }
              if (v510 != 1) {
                goto LABEL_990;
              }
              int v263 = v508;
              if (v508) {
                *(_DWORD *)v508 += 2;
              }
              v472 = 0;
              _OWORD *v196 = v509;
              *(void *)a1 = v263;
              int v264 = 1;
              *(_DWORD *)(a1 + 24) = 1;
LABEL_530:
              if (v510 != -1) {
                ((void (*)(unsigned char *, WTF **))off_1ECABE170[v510])(v516, &v508);
              }
              if (v264 != 13) {
                goto LABEL_539;
              }
              if (*(_DWORD *)(a2 + 56) != 44)
              {
                *(_DWORD *)v516 = *(_DWORD *)(a2 + 56);
                unsigned int v518 = 1;
                WGSL::toString();
                if (v518 != 1) {
                  goto LABEL_990;
                }
                WGSL::toString();
                v508 = (WTF *)"Expected a ";
                *(void *)&long long v509 = 12;
                v534 = ", but got a ";
                uint64_t v535 = 13;
                WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v508, (uint64_t *)&v505, (uint64_t)&v534, (uint64_t *)&v504, &v515);
                if (!v515)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC218);
                }
                uint64_t v274 = v504;
                v504 = 0;
                if (v274)
                {
                  if (*v274 == 2) {
                    WTF::StringImpl::destroy();
                  }
                  else {
                    *v274 -= 2;
                  }
                }
                unsigned int v267 = v505;
                v505 = 0;
                if (!v267) {
                  goto LABEL_516;
                }
LABEL_513:
                if (*v267 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v267 -= 2;
                }
                goto LABEL_516;
              }
LABEL_545:
              *(_OWORD *)&v516[4] = *v84;
              *(_DWORD *)v516 = 44;
              unsigned int v518 = 0;
              unsigned int v275 = *(_DWORD *)(a2 + 36);
              unsigned int v276 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v276;
                if (v275 <= v276)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC220);
                }
                uint64_t v278 = *(void *)(a2 + 24);
                uint64_t v279 = v278 + 32 * v276;
                unsigned int v280 = *(_DWORD *)v279;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v279;
                _OWORD *v84 = *(_OWORD *)(v279 + 4);
                unsigned int v281 = *(_DWORD *)v279;
                if (v281 <= 8)
                {
                  if (((1 << v281) & 0x38) != 0)
                  {
                    uint64_t v282 = *(_DWORD **)(v278 + 32 * v276 + 24);
                    goto LABEL_556;
                  }
                  if (((1 << v281) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v278 + 32 * v276 + 24);
                  }
                  else if (v281 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    uint64_t v282 = *(_DWORD **)(v278 + 32 * v276 + 24);
                    if (v282) {
                      *v282 += 2;
                    }
LABEL_556:
                    *(void *)(a2 + 80) = v282;
                  }
                }
                int v277 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v277;
                ++v276;
                if (v280 == 82) {
                  continue;
                }
                break;
              }
              unsigned int v283 = (WTF *)v519;
              v519 = 0;
              unsigned int v285 = v520;
              unsigned int v284 = HIDWORD(v520);
              uint64_t v520 = 0;
              unint64_t v286 = v526;
              v526 = 0;
              unsigned int v288 = v527;
              unsigned int v287 = DWORD1(v527);
              *(void *)&long long v527 = 0;
              if (v479)
              {
                unint64_t v466 = __PAIR64__(v284, v285);
                int v467 = v283;
                unsigned int __srca = v288;
                unsigned int v480 = v287;
                if (v521) {
                  WTF::fastFree(v521, v198);
                }
                v521 = v467;
                *(void *)&long long v522 = v466;
                if (v468) {
                  WTF::fastFree(v468, v198);
                }
                *((void *)&v522 + 1) = v286;
                unint64_t v523 = __PAIR64__(v480, __srca);
                int v479 = 1;
                v468 = (WTF *)v286;
                char v216 = 1;
                v524 = v472;
                uint64_t v217 = v528;
                if (v528 == -1) {
                  goto LABEL_413;
                }
LABEL_412:
                ((void (*)(unsigned char *, const char **))off_1ECABE5D0[v217])(v516, &v526);
              }
              else
              {
                v521 = v283;
                *(void *)&long long v522 = __PAIR64__(v284, v285);
                *((void *)&v522 + 1) = v286;
                unint64_t v523 = __PAIR64__(v287, v288);
                v524 = v472;
                v468 = (WTF *)v286;
                char v216 = 1;
                int v479 = 1;
                unsigned __int8 v525 = 1;
                uint64_t v217 = v528;
                if (v528 != -1) {
                  goto LABEL_412;
                }
              }
LABEL_413:
              int8x16x2_t v218 = (WTF *)v519;
              if (v519)
              {
                v519 = 0;
                LODWORD(v520) = 0;
                WTF::fastFree(v218, v198);
              }
              if ((v216 & 1) == 0) {
                goto LABEL_774;
              }
              continue;
            }
            goto LABEL_398;
          }
        }
      }
      unsigned int v92 = *(_DWORD **)(v88 + 32 * v86 + 24);
LABEL_141:
      *(void *)(a2 + 80) = v92;
      goto LABEL_132;
    case 0x1E:
      unsigned int v41 = *(_DWORD *)(a2 + 36);
      unsigned int v42 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v43 = 32 * v42;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v42;
        if (v41 <= v42)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC120);
        }
        uint64_t v45 = *(void *)(a2 + 24);
        int v46 = *(_DWORD *)(v45 + v43);
        *(_DWORD *)(a2 + 56) = v46;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v45 + v43 + 4);
        unsigned int v47 = *(_DWORD *)(v45 + v43);
        if (v47 > 8) {
          goto LABEL_64;
        }
        if (((1 << v47) & 0x38) != 0) {
          break;
        }
        if (((1 << v47) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v45 + v43 + 24);
        }
        else if (v47 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v48 = *(_DWORD **)(v45 + v43 + 24);
          if (v48) {
            *v48 += 2;
          }
          goto LABEL_73;
        }
LABEL_64:
        int v44 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v44;
        v43 += 32;
        ++v42;
        if (v46 != 82)
        {
          if (v46 == 73)
          {
            unint64_t v119 = *(void **)(a2 + 8);
            v521 = (WTF *)v4;
            LODWORD(v522) = v5;
            DWORD1(v522) = v44 - v5;
            unsigned int v120 = WGSL::AST::Builder::construct<WGSL::AST::ReturnStatement,WGSL::SourceSpan,decltype(nullptr),void>(v119, &v521);
            *(void *)v516 = v120;
            LODWORD(v517) = 0;
LABEL_361:
            WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v521, a2, 73);
            int v191 = (int)v524;
            if (v524)
            {
              WGSL::toString();
              if (v191 != 1) {
                goto LABEL_990;
              }
              WGSL::toString();
              WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v531, (uint64_t *)&v503, (uint64_t *)&v502);
              unsigned int v192 = v502;
              v502 = 0;
              if (v192)
              {
                if (*v192 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v192 -= 2;
                }
              }
              uint8x8_t v303 = v503;
              v503 = 0;
              if (v303)
              {
                if (*v303 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *v303 -= 2;
                }
              }
              uint64_t v157 = 0;
              unint64_t v304 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
              *(void *)a1 = v531;
              *(void *)(a1 + 8) = v4;
              *(void *)(a1 + 16) = v304;
              *(_DWORD *)(a1 + 24) = 1;
            }
            else
            {
              if (v521 == 8 && v523)
              {
                if (*(_DWORD *)v523 == 2) {
                  WTF::StringImpl::destroy();
                }
                else {
                  *(_DWORD *)v523 -= 2;
                }
              }
              uint64_t v157 = 0;
              *(void *)a1 = v120;
              *(_DWORD *)(a1 + 24) = 0;
            }
          }
          else
          {
            WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v521, a2);
            uint64_t v155 = v523;
            if (!v523)
            {
              int v189 = *(void **)(a2 + 8);
              unsigned int v190 = *(_DWORD *)(a2 + 96) - v5;
              v531 = (WTF *)v4;
              *(void *)&long long v532 = __PAIR64__(v190, v5);
              v526 = (const char *)v521;
              unsigned int v120 = WGSL::AST::Builder::construct<WGSL::AST::ReturnStatement,WGSL::SourceSpan,WGSL::AST::Expression *,void>(v189, &v531, (uint64_t *)&v526);
              *(void *)v516 = v120;
              LODWORD(v517) = 0;
              ((void (*)(WTF **, WTF **))off_1ECABE170[v155])(&v531, &v521);
              goto LABEL_361;
            }
            if (v523 != 1) {
              goto LABEL_990;
            }
            long long v156 = v521;
            if (v521) {
              *(_DWORD *)v521 += 2;
            }
            *(_OWORD *)&v516[8] = v522;
            *(void *)v516 = v156;
            uint64_t v157 = 1;
            LODWORD(v517) = 1;
            ((void (*)(WTF **, WTF **))off_1ECABE170[v155])(&v531, &v521);
            if (v156) {
              *(_DWORD *)v156 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
            *(void *)a1 = v156;
            *(_DWORD *)(a1 + 24) = 1;
          }
          uint16x8_t v154 = off_1ECABE580[v157];
LABEL_842:
          int8x16x2_t v416 = &v521;
          unint64_t v417 = (WTF **)v516;
          goto LABEL_947;
        }
      }
      unsigned int v48 = *(_DWORD **)(v45 + v43 + 24);
LABEL_73:
      *(void *)(a2 + 80) = v48;
      goto LABEL_64;
    case 0x20:
      unsigned int v32 = (_OWORD *)(a2 + 60);
      unsigned int v33 = *(_DWORD *)(a2 + 36);
      unsigned int v34 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v34;
        if (v33 <= v34) {
          goto LABEL_991;
        }
        uint64_t v36 = *(void *)(a2 + 24);
        uint64_t v37 = v36 + 32 * v34;
        unsigned int v38 = *(_DWORD *)v37;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v37;
        _OWORD *v32 = *(_OWORD *)(v37 + 4);
        unsigned int v39 = *(_DWORD *)v37;
        if (v39 > 8) {
          goto LABEL_52;
        }
        if (((1 << v39) & 0x38) != 0) {
          break;
        }
        if (((1 << v39) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v36 + 32 * v34 + 24);
        }
        else if (v39 == 8)
        {
          *(void *)(a2 + 80) = 0;
          unsigned int v40 = *(_DWORD **)(v36 + 32 * v34 + 24);
          if (v40) {
            *v40 += 2;
          }
          goto LABEL_61;
        }
LABEL_52:
        int v35 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v35;
        ++v34;
        if (v38 != 82)
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v521, a2);
          if (v523)
          {
            if (v523 != 1) {
              goto LABEL_990;
            }
            uint64_t v141 = v521;
            if (v521) {
              *(_DWORD *)v521 += 2;
            }
            *(_OWORD *)(a1 + 8) = v522;
            *(void *)a1 = v141;
            int v142 = 1;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_945;
          }
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseAttributes(v516, a2);
          if (v517)
          {
            if (v517 != 1) {
              goto LABEL_990;
            }
            uint64_t v174 = *(void *)v516;
            if (*(void *)v516) {
              **(_DWORD **)v516 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
            *(void *)a1 = v174;
            int v175 = 1;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_943;
          }
          if (*(_DWORD *)(a2 + 56) != 43)
          {
            WGSL::toString();
            WGSL::toString();
            v531 = (WTF *)"Expected a ";
            *(void *)&long long v532 = 12;
            v526 = ", but got a ";
            *(void *)&long long v527 = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v531, (uint64_t *)&v534, (uint64_t)&v526, (uint64_t *)&v529, &v508);
            if (!v508)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC230);
            }
            unsigned int v314 = v529;
            v529 = 0;
            if (v314)
            {
              if (*(_DWORD *)v314 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v314 -= 2;
              }
            }
            int v418 = v534;
            v534 = 0;
            if (v418)
            {
              if (*(_DWORD *)v418 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v418 -= 2;
              }
            }
            int v175 = 0;
            unint64_t v419 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v508;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v419;
            *(_DWORD *)(a1 + 24) = 1;
            goto LABEL_943;
          }
          unsigned int v290 = *(_DWORD *)(a2 + 36);
          unsigned int v291 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v291;
            if (v290 <= v291)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC190);
            }
            uint64_t v293 = *(void *)(a2 + 24);
            uint64_t v294 = v293 + 32 * v291;
            unsigned int v295 = *(_DWORD *)v294;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v294;
            _OWORD *v32 = *(_OWORD *)(v294 + 4);
            unsigned int v296 = *(_DWORD *)v294;
            if (v296 <= 8)
            {
              if (((1 << v296) & 0x38) != 0)
              {
                unsigned int v297 = *(_DWORD **)(v293 + 32 * v291 + 24);
                goto LABEL_586;
              }
              if (((1 << v296) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v293 + 32 * v291 + 24);
              }
              else if (v296 == 8)
              {
                *(void *)(a2 + 80) = 0;
                unsigned int v297 = *(_DWORD **)(v293 + 32 * v291 + 24);
                if (v297) {
                  *v297 += 2;
                }
LABEL_586:
                *(void *)(a2 + 80) = v297;
              }
            }
            int v292 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v292;
            ++v291;
            if (v295 == 82) {
              continue;
            }
            break;
          }
          int v473 = 0;
          int v315 = 0;
          unsigned int v478 = 0;
          v534 = 0;
          uint64_t v535 = 0;
          v476 = (_OWORD *)(a1 + 8);
          LOBYTE(v531) = 0;
          LOBYTE(v533) = 0;
          while (2)
          {
            int v316 = *(_DWORD *)(a2 + 56);
            if (v316 != 44)
            {
              v529 = 0;
              uint64_t v530 = 0;
              if (v316 != 17)
              {
                if (v316 != 12)
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  unint64_t v334 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                  *(void *)(a1 + 8) = v4;
                  *(void *)(a1 + 16) = v334;
                  int v335 = 1;
                  *(_DWORD *)(a1 + 24) = 1;
                  goto LABEL_752;
                }
                unsigned int v317 = *(_DWORD *)(a2 + 36);
                unsigned int v318 = *(_DWORD *)(a2 + 40) + 1;
                while (2)
                {
                  *(_DWORD *)(a2 + 40) = v318;
                  if (v317 <= v318)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1825CC110);
                  }
                  uint64_t v320 = *(void *)(a2 + 24);
                  uint64_t v321 = v320 + 32 * v318;
                  unsigned int v322 = *(_DWORD *)v321;
                  *(_DWORD *)(a2 + 56) = *(_DWORD *)v321;
                  _OWORD *v32 = *(_OWORD *)(v321 + 4);
                  unsigned int v323 = *(_DWORD *)v321;
                  if (v323 <= 8)
                  {
                    if (((1 << v323) & 0x38) != 0)
                    {
                      uint64_t v324 = *(_DWORD **)(v320 + 32 * v318 + 24);
                      goto LABEL_656;
                    }
                    if (((1 << v323) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v320 + 32 * v318 + 24);
                    }
                    else if (v323 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      uint64_t v324 = *(_DWORD **)(v320 + 32 * v318 + 24);
                      if (v324) {
                        *v324 += 2;
                      }
LABEL_656:
                      *(void *)(a2 + 80) = v324;
                    }
                  }
                  int v319 = *(_DWORD *)(a2 + 68);
                  *(void *)(a2 + 88) = *(void *)(a2 + 60);
                  *(_DWORD *)(a2 + 96) = v319;
                  ++v318;
                  if (v322 == 82) {
                    continue;
                  }
                  break;
                }
                v477 = 0;
                unsigned int v483 = 0;
                char v336 = 0;
                int v481 = v315;
LABEL_671:
                if (v322 == 17)
                {
                  unsigned int v337 = *(_DWORD *)(a2 + 36);
                  unsigned int v338 = *(_DWORD *)(a2 + 40) + 1;
                  while (1)
                  {
                    *(_DWORD *)(a2 + 40) = v338;
                    if (v337 <= v338)
                    {
                      __break(0xC471u);
                      JUMPOUT(0x1825CC168);
                    }
                    uint64_t v340 = *(void *)(a2 + 24);
                    uint64_t v341 = v340 + 32 * v338;
                    unsigned int v342 = *(_DWORD *)v341;
                    *(_DWORD *)(a2 + 56) = *(_DWORD *)v341;
                    _OWORD *v32 = *(_OWORD *)(v341 + 4);
                    unsigned int v343 = *(_DWORD *)v341;
                    if (v343 > 8) {
                      goto LABEL_674;
                    }
                    if (((1 << v343) & 0x38) != 0) {
                      break;
                    }
                    if (((1 << v343) & 0xC4) != 0)
                    {
                      *(void *)(a2 + 80) = *(void *)(v340 + 32 * v338 + 24);
                    }
                    else if (v343 == 8)
                    {
                      *(void *)(a2 + 80) = 0;
                      unint64_t v344 = *(_DWORD **)(v340 + 32 * v338 + 24);
                      if (v344) {
                        *v344 += 2;
                      }
                      goto LABEL_683;
                    }
LABEL_674:
                    int v339 = *(_DWORD *)(a2 + 68);
                    *(void *)(a2 + 88) = *(void *)(a2 + 60);
                    *(_DWORD *)(a2 + 96) = v339;
                    ++v338;
                    if (v342 != 82)
                    {
                      char v336 = 1;
                      goto LABEL_696;
                    }
                  }
                  unint64_t v344 = *(_DWORD **)(v340 + 32 * v338 + 24);
LABEL_683:
                  *(void *)(a2 + 80) = v344;
                  goto LABEL_674;
                }
                WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v526, a2);
                unsigned int v345 = v528;
                if (v528)
                {
                  if (v528 != 1) {
                    goto LABEL_990;
                  }
                  unint64_t v346 = v526;
                  if (v526) {
                    *(_DWORD *)v526 += 2;
                  }
                  _OWORD *v476 = v527;
                  *(void *)a1 = v346;
                  *(_DWORD *)(a1 + 24) = 1;
                }
                else
                {
                  unsigned int v347 = v483;
                  if (v483 == v530)
                  {
                    unint64_t v348 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v529, v483 + 1, (unint64_t)&v526);
                    int v349 = HIDWORD(v530);
                    v477 = v529;
                    *((void *)v529 + HIDWORD(v530)) = *v348;
                    unsigned int v483 = v349 + 1;
                    HIDWORD(v530) = v349 + 1;
                  }
                  else
                  {
                    *((void *)v477 + v483++) = v526;
                    HIDWORD(v530) = v347 + 1;
                  }
                }
                if (v528 != -1) {
                  ((void (*)(WTF **, const char **))off_1ECABE170[v528])(&v508, &v526);
                }
                ++v478;
                if (v345)
                {
                  int v335 = 1;
                  int v315 = v481;
                  goto LABEL_752;
                }
LABEL_696:
                unsigned int v322 = *(_DWORD *)(a2 + 56);
                if (v322 != 48)
                {
                  int v315 = v481;
                  if (v336) {
                    goto LABEL_715;
                  }
LABEL_712:
                  int v357 = 0;
                  goto LABEL_719;
                }
                unsigned int v350 = *(_DWORD *)(a2 + 36);
                uint64_t v351 = (*(_DWORD *)(a2 + 40) + 1);
                uint64_t v352 = 32 * v351;
                int v315 = v481;
LABEL_700:
                *(_DWORD *)(a2 + 40) = v351;
                if (v350 <= v351)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC178);
                }
                uint64_t v354 = *(void *)(a2 + 24);
                unsigned int v322 = *(_DWORD *)(v354 + v352);
                *(_DWORD *)(a2 + 56) = v322;
                _OWORD *v32 = *(_OWORD *)(v354 + v352 + 4);
                unsigned int v355 = *(_DWORD *)(v354 + v352);
                if (v355 <= 8)
                {
                  if (((1 << v355) & 0x38) != 0)
                  {
                    unsigned int v356 = *(_DWORD **)(v354 + v352 + 24);
                    goto LABEL_708;
                  }
                  if (((1 << v355) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v354 + v352 + 24);
                  }
                  else if (v355 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    unsigned int v356 = *(_DWORD **)(v354 + v352 + 24);
                    if (v356) {
                      *v356 += 2;
                    }
LABEL_708:
                    *(void *)(a2 + 80) = v356;
                  }
                }
                int v353 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v353;
                v352 += 32;
                LODWORD(v351) = v351 + 1;
                if (v322 != 82)
                {
                  if (v322 == 43 || v322 == 47)
                  {
                    if ((v336 & 1) == 0) {
                      goto LABEL_712;
                    }
LABEL_715:
                    unsigned int v358 = v483;
LABEL_716:
                    if (v315)
                    {
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      unint64_t v359 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                      *(void *)a1 = v526;
                      *(void *)(a1 + 8) = v4;
                      *(void *)(a1 + 16) = v359;
                      int v315 = 1;
                      *(_DWORD *)(a1 + 24) = 1;
                      int v335 = 1;
                      goto LABEL_752;
                    }
                    unsigned int v483 = v358;
                    unsigned int v322 = *(_DWORD *)(a2 + 56);
                    int v357 = 1;
LABEL_719:
                    if (v322 != 47)
                    {
LABEL_732:
                      WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(&v526, a2);
                      if (v528)
                      {
                        if (v528 != 1) {
                          goto LABEL_990;
                        }
                        unsigned int v368 = v526;
                        if (v526) {
                          *(_DWORD *)v526 += 2;
                        }
                        _OWORD *v476 = v527;
                        *(void *)a1 = v368;
                        int v335 = 1;
                        *(_DWORD *)(a1 + 24) = 1;
                        uint64_t v369 = v528;
                        if (v528 != -1) {
                          goto LABEL_751;
                        }
                      }
                      else
                      {
                        if (v357)
                        {
                          uint64_t v370 = v529;
                          unsigned int v371 = v530;
                          v529 = 0;
                          uint64_t v530 = 0;
                          unsigned int v372 = v526;
                          if (v473)
                          {
                            if (v531)
                            {
                              v482 = v526;
                              WTF::fastFree(v531, v333);
                              unsigned int v372 = v482;
                            }
                            v531 = v370;
                            *(void *)&long long v532 = __PAIR64__(v483, v371);
                            int v473 = 1;
                            int v315 = 1;
                            *((void *)&v532 + 1) = v372;
                          }
                          else
                          {
                            v531 = v370;
                            *(void *)&long long v532 = __PAIR64__(v483, v371);
                            *((void *)&v532 + 1) = v526;
                            int v315 = 1;
                            int v473 = 1;
                            LOBYTE(v533) = 1;
                          }
                        }
                        else
                        {
                          v508 = v529;
                          unsigned int v373 = v530;
                          v529 = 0;
                          uint64_t v530 = 0;
                          *(void *)&long long v509 = __PAIR64__(v483, v373);
                          *((void *)&v509 + 1) = v526;
                          int v374 = HIDWORD(v535);
                          if (HIDWORD(v535) == v535)
                          {
                            unint64_t v375 = WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((unsigned int *)&v534, HIDWORD(v535) + 1, (unint64_t)&v508);
                            int v374 = HIDWORD(v535);
                            int v376 = (char *)&v534[24 * HIDWORD(v535)];
                            *(void *)int v376 = 0;
                            *((void *)v376 + 1) = 0;
                            uint64_t v377 = *(void *)v375;
                            *(void *)unint64_t v375 = 0;
                            *(void *)int v376 = v377;
                            LODWORD(v377) = *(_DWORD *)(v375 + 8);
                            *(_DWORD *)(v375 + 8) = 0;
                            *((_DWORD *)v376 + 2) = v377;
                            LODWORD(v377) = *(_DWORD *)(v375 + 12);
                            *(_DWORD *)(v375 + 12) = 0;
                            *((_DWORD *)v376 + 3) = v377;
                            uint64_t v378 = v376 + 16;
                            unsigned int v379 = (void *)(v375 + 16);
                          }
                          else
                          {
                            unsigned int v380 = (char *)&v534[24 * HIDWORD(v535)];
                            *(void *)unsigned int v380 = 0;
                            *((void *)v380 + 1) = 0;
                            int8x16_t v381 = v508;
                            v508 = 0;
                            *(void *)unsigned int v380 = v381;
                            *((_DWORD *)v380 + 2) = v509;
                            LODWORD(v381) = DWORD1(v509);
                            DWORD1(v509) = 0;
                            *((_DWORD *)v380 + 3) = v381;
                            uint64_t v378 = v380 + 16;
                            unsigned int v379 = (void *)&v509 + 1;
                          }
                          *uint64_t v378 = *v379;
                          HIDWORD(v535) = v374 + 1;
                          int8x16_t v382 = v508;
                          if (v508)
                          {
                            v508 = 0;
                            LODWORD(v509) = 0;
                            WTF::fastFree(v382, v333);
                          }
                        }
                        if (v478 < 0x400)
                        {
                          int v335 = 0;
                          uint64_t v369 = v528;
                          if (v528 == -1) {
                            goto LABEL_752;
                          }
LABEL_751:
                          ((void (*)(WTF **, const char **))off_1ECABE5C0[v369])(&v508, &v526);
                          goto LABEL_752;
                        }
                        WTF::String::number((WTF::String *)0x3FF);
                        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral>((int8x16_t *)"switch statement cannot have more than ", 40, (uint64_t *)&v519, (int8x16_t *)" case selector values", 22, &v508);
                        unint64_t v383 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
                        *(void *)a1 = v508;
                        *(void *)(a1 + 8) = v4;
                        *(void *)(a1 + 16) = v383;
                        *(_DWORD *)(a1 + 24) = 1;
                        v508 = 0;
                        unint64_t v384 = v519;
                        v519 = 0;
                        if (v384)
                        {
                          if (*v384 == 2) {
                            WTF::StringImpl::destroy();
                          }
                          else {
                            *v384 -= 2;
                          }
                        }
                        int v335 = 1;
                        uint64_t v369 = v528;
                        if (v528 != -1) {
                          goto LABEL_751;
                        }
                      }
LABEL_752:
                      uint64_t result = v529;
                      if (v529)
                      {
                        v529 = 0;
                        uint64_t result = (WTF *)WTF::fastFree(result, v333);
                      }
                      if (v335)
                      {
LABEL_828:
                        if (v473)
                        {
                          uint64_t result = v531;
                          if (v531) {
                            uint64_t result = (WTF *)WTF::fastFree(v531, v333);
                          }
                        }
                        goto LABEL_935;
                      }
                      continue;
                    }
                    unsigned int v360 = *(_DWORD *)(a2 + 36);
                    unsigned int v361 = *(_DWORD *)(a2 + 40) + 1;
                    while (2)
                    {
                      *(_DWORD *)(a2 + 40) = v361;
                      if (v360 <= v361)
                      {
                        __break(0xC471u);
                        JUMPOUT(0x1825CC170);
                      }
                      uint64_t v363 = *(void *)(a2 + 24);
                      uint64_t v364 = v363 + 32 * v361;
                      unsigned int v365 = *(_DWORD *)v364;
                      *(_DWORD *)(a2 + 56) = *(_DWORD *)v364;
                      _OWORD *v32 = *(_OWORD *)(v364 + 4);
                      unsigned int v366 = *(_DWORD *)v364;
                      if (v366 <= 8)
                      {
                        if (((1 << v366) & 0x38) != 0)
                        {
                          int v367 = *(_DWORD **)(v363 + 32 * v361 + 24);
                          goto LABEL_731;
                        }
                        if (((1 << v366) & 0xC4) != 0)
                        {
                          *(void *)(a2 + 80) = *(void *)(v363 + 32 * v361 + 24);
                        }
                        else if (v366 == 8)
                        {
                          *(void *)(a2 + 80) = 0;
                          int v367 = *(_DWORD **)(v363 + 32 * v361 + 24);
                          if (v367) {
                            *v367 += 2;
                          }
LABEL_731:
                          *(void *)(a2 + 80) = v367;
                        }
                      }
                      int v362 = *(_DWORD *)(a2 + 68);
                      *(void *)(a2 + 88) = *(void *)(a2 + 60);
                      *(_DWORD *)(a2 + 96) = v362;
                      ++v361;
                      if (v365 != 82) {
                        goto LABEL_732;
                      }
                      continue;
                    }
                  }
                  goto LABEL_671;
                }
                goto LABEL_700;
              }
              unsigned int v325 = *(_DWORD *)(a2 + 36);
              unsigned int v326 = *(_DWORD *)(a2 + 40) + 1;
              while (2)
              {
                *(_DWORD *)(a2 + 40) = v326;
                if (v325 <= v326)
                {
                  __break(0xC471u);
                  JUMPOUT(0x1825CC118);
                }
                uint64_t v328 = *(void *)(a2 + 24);
                uint64_t v329 = v328 + 32 * v326;
                unsigned int v330 = *(_DWORD *)v329;
                *(_DWORD *)(a2 + 56) = *(_DWORD *)v329;
                _OWORD *v32 = *(_OWORD *)(v329 + 4);
                unsigned int v331 = *(_DWORD *)v329;
                if (v331 <= 8)
                {
                  if (((1 << v331) & 0x38) != 0)
                  {
                    uint64_t v332 = *(_DWORD **)(v328 + 32 * v326 + 24);
                    goto LABEL_668;
                  }
                  if (((1 << v331) & 0xC4) != 0)
                  {
                    *(void *)(a2 + 80) = *(void *)(v328 + 32 * v326 + 24);
                  }
                  else if (v331 == 8)
                  {
                    *(void *)(a2 + 80) = 0;
                    uint64_t v332 = *(_DWORD **)(v328 + 32 * v326 + 24);
                    if (v332) {
                      *v332 += 2;
                    }
LABEL_668:
                    *(void *)(a2 + 80) = v332;
                  }
                }
                int v327 = *(_DWORD *)(a2 + 68);
                *(void *)(a2 + 88) = *(void *)(a2 + 60);
                *(_DWORD *)(a2 + 96) = v327;
                ++v326;
                if (v330 != 82)
                {
                  unsigned int v358 = 0;
                  goto LABEL_716;
                }
                continue;
              }
            }
            break;
          }
          unsigned int v405 = *(_DWORD *)(a2 + 36);
          unsigned int v406 = *(_DWORD *)(a2 + 40) + 1;
          while (2)
          {
            *(_DWORD *)(a2 + 40) = v406;
            if (v405 <= v406)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC1B0);
            }
            uint64_t v408 = *(void *)(a2 + 24);
            uint64_t v409 = v408 + 32 * v406;
            unsigned int v410 = *(_DWORD *)v409;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v409;
            _OWORD *v32 = *(_OWORD *)(v409 + 4);
            unsigned int v411 = *(_DWORD *)v409;
            if (v411 <= 8)
            {
              if (((1 << v411) & 0x38) != 0)
              {
                int v412 = *(_DWORD **)(v408 + 32 * v406 + 24);
                goto LABEL_825;
              }
              if (((1 << v411) & 0xC4) != 0)
              {
                *(void *)(a2 + 80) = *(void *)(v408 + 32 * v406 + 24);
              }
              else if (v411 == 8)
              {
                *(void *)(a2 + 80) = 0;
                int v412 = *(_DWORD **)(v408 + 32 * v406 + 24);
                if (v412) {
                  *v412 += 2;
                }
LABEL_825:
                *(void *)(a2 + 80) = v412;
              }
            }
            int v407 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v407;
            ++v406;
            if (v410 != 82)
            {
              if (v473)
              {
                int8x16x2_t v413 = *(void **)(a2 + 8);
                v526 = (const char *)v4;
                LODWORD(v527) = v5;
                DWORD1(v527) = v407 - v5;
                uint64_t result = (WTF *)WGSL::AST::Builder::construct<WGSL::AST::SwitchStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,WTF::Vector<WGSL::AST::SwitchClause,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WGSL::AST::SwitchClause,void>(v413, &v526, (uint64_t *)&v521, (uint64_t *)v516, (uint64_t *)&v534, (uint64_t *)&v531);
                *(void *)a1 = result;
                *(_DWORD *)(a1 + 24) = 0;
                int v473 = v533;
                goto LABEL_828;
              }
              uint64_t result = (WTF *)WTF::StringImpl::createWithoutCopyingNonEmpty();
              unint64_t v450 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
              *(void *)a1 = v526;
              *(void *)(a1 + 8) = v4;
              *(void *)(a1 + 16) = v450;
              *(_DWORD *)(a1 + 24) = 1;
LABEL_935:
              long long v451 = (WTF *)v534;
              if (HIDWORD(v535))
              {
                uint64_t v452 = 24 * HIDWORD(v535);
                v453 = v534;
                do
                {
                  uint64_t result = *(WTF **)v453;
                  if (*(void *)v453)
                  {
                    *(void *)v453 = 0;
                    *((_DWORD *)v453 + 2) = 0;
                    uint64_t result = (WTF *)WTF::fastFree(result, v333);
                  }
                  v453 += 24;
                  v452 -= 24;
                }
                while (v452);
              }
              if (v451) {
                uint64_t result = (WTF *)WTF::fastFree(v451, v333);
              }
              int v175 = (int)v517;
              if (v517 != -1) {
LABEL_943:
              }
                uint64_t result = (WTF *)((uint64_t (*)(WTF **, unsigned char *))off_1ECABE5D0[v175])(&v531, v516);
              int v142 = v523;
              if (v523 == -1) {
                goto LABEL_948;
              }
LABEL_945:
              uint16x8_t v154 = off_1ECABE170[v142];
              goto LABEL_946;
            }
            continue;
          }
        }
      }
      unsigned int v40 = *(_DWORD **)(v36 + 32 * v34 + 24);
LABEL_61:
      *(void *)(a2 + 80) = v40;
      goto LABEL_52;
    case 0x23:
      unsigned int v102 = *(_DWORD *)(a2 + 36);
      unsigned int v103 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v103;
        if (v102 <= v103)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC0F8);
        }
        uint64_t v105 = *(void *)(a2 + 24);
        uint64_t v106 = v105 + 32 * v103;
        unsigned int v107 = *(_DWORD *)v106;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v106;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v106 + 4);
        unsigned int v108 = *(_DWORD *)v106;
        if (v108 > 8) {
          goto LABEL_156;
        }
        if (((1 << v108) & 0x38) != 0) {
          break;
        }
        if (((1 << v108) & 0xC4) != 0)
        {
          *(void *)(a2 + 80) = *(void *)(v105 + 32 * v103 + 24);
        }
        else if (v108 == 8)
        {
          *(void *)(a2 + 80) = 0;
          char v109 = *(_DWORD **)(v105 + 32 * v103 + 24);
          if (v109) {
            *v109 += 2;
          }
          goto LABEL_165;
        }
LABEL_156:
        int v104 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v104;
        ++v103;
        if (v107 != 82)
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v521, a2);
          uint64_t v60 = v523;
          if (v523)
          {
            if (v523 != 1) {
              goto LABEL_990;
            }
            unint64_t v150 = v521;
            if (v521) {
              *(_DWORD *)v521 += 2;
            }
            *(_OWORD *)(a1 + 8) = v522;
            *(void *)a1 = v150;
            *(_DWORD *)(a1 + 24) = 1;
          }
          else
          {
            WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(v516, a2);
            uint64_t v184 = v517;
            if (v517)
            {
              if (v517 != 1) {
                goto LABEL_990;
              }
              uint64_t v185 = *(void *)v516;
              if (*(void *)v516) {
                **(_DWORD **)v516 += 2;
              }
              *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
              *(void *)a1 = v185;
              *(_DWORD *)(a1 + 24) = 1;
            }
            else
            {
              int v298 = *(void **)(a2 + 8);
              unsigned int v299 = *(_DWORD *)(a2 + 96) - v5;
              v531 = (WTF *)v4;
              *(void *)&long long v532 = __PAIR64__(v299, v5);
              *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::WhileStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::CompoundStatement>,void>(v298, &v531, &v521, v516);
              *(_DWORD *)(a1 + 24) = 0;
            }
            ((void (*)(WTF **, unsigned char *))off_1ECABE5C0[v184])(&v531, v516);
          }
          uint64_t v62 = off_1ECABE170;
          goto LABEL_590;
        }
      }
      char v109 = *(_DWORD **)(v105 + 32 * v103 + 24);
LABEL_165:
      *(void *)(a2 + 80) = v109;
      goto LABEL_156;
    case 0x24:
    case 0x43:
    case 0x4C:
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseLHSExpression((uint64_t)&v521, a2);
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        uint64_t v12 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)&v516[8] = v522;
        *(void *)v516 = v12;
        int v13 = 1;
        LODWORD(v517) = 1;
      }
      else
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement((uint64_t)v516, a2, &v521);
        int v13 = v523;
        if (v523 == -1)
        {
LABEL_32:
          int v22 = (int)v517;
          if (v517)
          {
            if (v517 != 1) {
              goto LABEL_990;
            }
            uint64_t v23 = *(void *)v516;
            if (*(void *)v516) {
              **(_DWORD **)v516 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
LABEL_270:
            *(void *)a1 = v23;
            *(_DWORD *)(a1 + 24) = v22;
LABEL_271:
            uint16x8_t v154 = off_1ECABE580[v22];
            goto LABEL_842;
          }
          if (*(_DWORD *)(a2 + 56) != 73)
          {
            WGSL::toString();
            WGSL::toString();
            v521 = (WTF *)"Expected a ";
            *(void *)&long long v522 = 12;
            v531 = (WTF *)", but got a ";
            *(void *)&long long v532 = 13;
            WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v521, (uint64_t *)&v495, (uint64_t)&v531, (uint64_t *)&v494, &v526);
            if (!v526)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC1D8);
            }
            unint64_t v153 = v494;
            v494 = 0;
            if (v153)
            {
              if (*v153 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v153 -= 2;
              }
            }
            uint64_t result = v495;
            v495 = 0;
            if (result)
            {
              if (*(_DWORD *)result == 2) {
                uint64_t result = (WTF *)WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)result -= 2;
              }
            }
            unint64_t v188 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v526;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v188;
            *(_DWORD *)(a1 + 24) = 1;
            int v22 = (int)v517;
            if (v517 == -1) {
              goto LABEL_948;
            }
            goto LABEL_271;
          }
          unsigned int v24 = *(_DWORD *)(a2 + 36);
          unsigned int v25 = *(_DWORD *)(a2 + 40) + 1;
          while (1)
          {
            *(_DWORD *)(a2 + 40) = v25;
            if (v24 <= v25)
            {
              __break(0xC471u);
              JUMPOUT(0x1825CC108);
            }
            uint64_t v27 = *(void *)(a2 + 24);
            uint64_t v28 = v27 + 32 * v25;
            unsigned int v29 = *(_DWORD *)v28;
            *(_DWORD *)(a2 + 56) = *(_DWORD *)v28;
            *(_OWORD *)(a2 + 60) = *(_OWORD *)(v28 + 4);
            unsigned int v30 = *(_DWORD *)v28;
            if (v30 > 8) {
              goto LABEL_40;
            }
            if (((1 << v30) & 0x38) != 0) {
              break;
            }
            if (((1 << v30) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v27 + 32 * v25 + 24);
            }
            else if (v30 == 8)
            {
              *(void *)(a2 + 80) = 0;
              uint64_t v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
              if (v31) {
                *v31 += 2;
              }
              goto LABEL_49;
            }
LABEL_40:
            int v26 = *(_DWORD *)(a2 + 68);
            *(void *)(a2 + 88) = *(void *)(a2 + 60);
            *(_DWORD *)(a2 + 96) = v26;
            ++v25;
            if (v29 != 82)
            {
              uint64_t v23 = *(void *)v516;
              goto LABEL_270;
            }
          }
          uint64_t v31 = *(_DWORD **)(v27 + 32 * v25 + 24);
LABEL_49:
          *(void *)(a2 + 80) = v31;
          goto LABEL_40;
        }
      }
      ((void (*)(WTF **, WTF **))off_1ECABE170[v13])(&v531, &v521);
      goto LABEL_32;
    case 0x2B:
      WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(&v521, a2);
      uint64_t v72 = v523;
      if (v523)
      {
        if (v523 != 1) {
          goto LABEL_990;
        }
        unsigned int v73 = v521;
        if (v521) {
          *(_DWORD *)v521 += 2;
        }
        *(_OWORD *)(a1 + 8) = v522;
      }
      else
      {
        unsigned int v73 = v521;
      }
      *(void *)a1 = v73;
      *(_DWORD *)(a1 + 24) = v72;
      uint64_t v171 = off_1ECABE5C0;
      goto LABEL_808;
    case 0x4F:
      unsigned int v110 = *(_DWORD *)(a2 + 36);
      int v111 = (_OWORD *)(a2 + 60);
      unsigned int v112 = *(_DWORD *)(a2 + 40) + 1;
      uint64_t v113 = 32 * v112;
      break;
    default:
      goto LABEL_2;
  }
  while (1)
  {
    *(_DWORD *)(a2 + 40) = v112;
    if (v110 <= v112)
    {
      __break(0xC471u);
      JUMPOUT(0x1825CC140);
    }
    uint64_t v115 = *(void *)(a2 + 24);
    int v116 = *(_DWORD *)(v115 + v113);
    *(_DWORD *)(a2 + 56) = v116;
    *int v111 = *(_OWORD *)(v115 + v113 + 4);
    unsigned int v117 = *(_DWORD *)(v115 + v113);
    if (v117 > 8) {
      goto LABEL_168;
    }
    if (((1 << v117) & 0x38) != 0) {
      break;
    }
    if (((1 << v117) & 0xC4) != 0)
    {
      *(void *)(a2 + 80) = *(void *)(v115 + v113 + 24);
    }
    else if (v117 == 8)
    {
      *(void *)(a2 + 80) = 0;
      unsigned int v118 = *(_DWORD **)(v115 + v113 + 24);
      if (v118) {
        *v118 += 2;
      }
      goto LABEL_177;
    }
LABEL_168:
    int v114 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v114;
    ++v112;
    v113 += 32;
    if (v116 != 82)
    {
      if (v116 != 49)
      {
        WGSL::toString();
        WGSL::toString();
        WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v521, (uint64_t *)&v487, (uint64_t *)&v486);
        uint64_t v161 = v486;
        v486 = 0;
        if (v161)
        {
          if (*v161 == 2) {
            WTF::StringImpl::destroy();
          }
          else {
            *v161 -= 2;
          }
        }
        uint64_t result = v487;
        v487 = 0;
        if (result) {
          goto LABEL_602;
        }
LABEL_605:
        uint64_t v300 = (*(_DWORD *)(a2 + 96) - v5);
        unsigned int v301 = (const char *)v521;
        goto LABEL_612;
      }
      while (2)
      {
        *(_DWORD *)(a2 + 40) = v112;
        if (v110 <= v112)
        {
          __break(0xC471u);
          JUMPOUT(0x1825CC160);
        }
        uint64_t v137 = v115 + 32 * v112;
        unsigned int v138 = *(_DWORD *)v137;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v137;
        *int v111 = *(_OWORD *)(v137 + 4);
        unsigned int v139 = *(_DWORD *)v137;
        if (v139 <= 8)
        {
          if (((1 << v139) & 0x38) != 0)
          {
            unsigned int v140 = *(_DWORD **)(v115 + 32 * v112 + 24);
            goto LABEL_231;
          }
          if (((1 << v139) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v115 + 32 * v112 + 24);
          }
          else if (v139 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v140 = *(_DWORD **)(v115 + 32 * v112 + 24);
            if (v140) {
              *v140 += 2;
            }
LABEL_231:
            *(void *)(a2 + 80) = v140;
          }
        }
        int v136 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v136;
        ++v112;
        if (v138 != 82)
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)v516, a2);
          uint64_t v167 = v517;
          if (v517)
          {
            if (v517 != 1) {
              goto LABEL_990;
            }
            uint64_t v168 = *(void *)v516;
            if (*(void *)v516) {
              **(_DWORD **)v516 += 2;
            }
            *(_OWORD *)(a1 + 8) = *(_OWORD *)&v516[8];
            *(void *)a1 = v168;
            goto LABEL_837;
          }
          WGSL::Parser<WGSL::Lexer<unsigned char>>::consumeType((uint64_t)&v521, a2, 73);
          int v194 = (int)v524;
          if (v524)
          {
            WGSL::toString();
            if (v194 != 1) {
              goto LABEL_990;
            }
            WGSL::toString();
            WTF::makeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>(&v531, (uint64_t *)&v485, (uint64_t *)&v484);
            uint64_t v195 = v484;
            v484 = 0;
            if (v195)
            {
              if (*v195 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v195 -= 2;
              }
            }
            int8x16x2_t v414 = v485;
            v485 = 0;
            if (v414)
            {
              if (*v414 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v414 -= 2;
              }
            }
            unint64_t v415 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            *(void *)a1 = v531;
            *(void *)(a1 + 8) = v4;
            *(void *)(a1 + 16) = v415;
LABEL_837:
            *(_DWORD *)(a1 + 24) = 1;
          }
          else
          {
            if (v521 == 8 && v523)
            {
              if (*(_DWORD *)v523 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *(_DWORD *)v523 -= 2;
              }
            }
            uint64_t v458 = *(void **)(a2 + 8);
            unsigned int v459 = *(_DWORD *)(a2 + 96) - v5;
            v521 = (WTF *)v4;
            *(void *)&long long v522 = __PAIR64__(v459, v5);
            *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::PhonyAssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,void>(v458, &v521, v516);
            *(_DWORD *)(a1 + 24) = 0;
          }
          uint16x8_t v154 = off_1ECABE170[v167];
          goto LABEL_842;
        }
        continue;
      }
    }
  }
  unsigned int v118 = *(_DWORD **)(v115 + v113 + 24);
LABEL_177:
  *(void *)(a2 + 80) = v118;
  goto LABEL_168;
}

uint64_t WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement(uint64_t a1, uint64_t a2, void *a3)
{
  int v6 = *(_DWORD **)(a2 + 88);
  uint64_t v7 = *(unsigned int *)(a2 + 96);
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8 == 71)
  {
    __int16 v9 = 257;
    goto LABEL_5;
  }
  if (v8 == 60)
  {
    __int16 v9 = 256;
LABEL_5:
    LOWORD(v46) = v9;
    unsigned int v10 = *(_DWORD *)(a2 + 36);
    for (unsigned int i = *(_DWORD *)(a2 + 40) + 1; ; ++i)
    {
      *(_DWORD *)(a2 + 40) = i;
      if (v10 <= i) {
        goto LABEL_57;
      }
      uint64_t v13 = *(void *)(a2 + 24);
      uint64_t v14 = v13 + 32 * i;
      unsigned int v15 = *(_DWORD *)v14;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
      *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
      unsigned int v16 = *(_DWORD *)v14;
      if (v16 > 8) {
        goto LABEL_7;
      }
      if (((1 << v16) & 0x38) != 0) {
        break;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * i + 24);
      }
      else if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v17 = *(_DWORD **)(v13 + 32 * i + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_16;
      }
LABEL_7:
      int v12 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v12;
      if (v15 != 82)
      {
        uint64_t v18 = *(void **)(a2 + 8);
        unsigned int v47 = v6;
        LODWORD(v48) = v7;
        DWORD1(v48) = v12 - v7;
        uint64_t result = (uint64_t)WGSL::AST::Builder::construct<WGSL::AST::DecrementIncrementStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::DecrementIncrementStatement::Operation &,void>(v18, &v47, a3, (char *)&v46);
        *(void *)a1 = result;
        *(_DWORD *)(a1 + 24) = 0;
        return result;
      }
    }
    uint64_t v17 = *(_DWORD **)(v13 + 32 * i + 24);
LABEL_16:
    *(void *)(a2 + 80) = v17;
    goto LABEL_7;
  }
  uint64_t v20 = (v8 - 38);
  if (v20 > 0x2B) {
    goto LABEL_55;
  }
  if (((1 << (v8 - 38)) & 0x8A412910001) == 0)
  {
    if (v20 == 11)
    {
      unsigned int v35 = *(_DWORD *)(a2 + 36);
      unsigned int v36 = *(_DWORD *)(a2 + 40) + 1;
      while (1)
      {
        *(_DWORD *)(a2 + 40) = v36;
        if (v35 <= v36)
        {
          __break(0xC471u);
          goto LABEL_60;
        }
        uint64_t v38 = *(void *)(a2 + 24);
        uint64_t v39 = v38 + 32 * v36;
        unsigned int v40 = *(_DWORD *)v39;
        *(_DWORD *)(a2 + 56) = *(_DWORD *)v39;
        *(_OWORD *)(a2 + 60) = *(_OWORD *)(v39 + 4);
        unsigned int v41 = *(_DWORD *)v39;
        if (v41 <= 8)
        {
          if (((1 << v41) & 0x38) != 0)
          {
            unsigned int v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
LABEL_52:
            *(void *)(a2 + 80) = v42;
            goto LABEL_43;
          }
          if (((1 << v41) & 0xC4) != 0)
          {
            *(void *)(a2 + 80) = *(void *)(v38 + 32 * v36 + 24);
          }
          else if (v41 == 8)
          {
            *(void *)(a2 + 80) = 0;
            unsigned int v42 = *(_DWORD **)(v38 + 32 * v36 + 24);
            if (v42) {
              *v42 += 2;
            }
            goto LABEL_52;
          }
        }
LABEL_43:
        int v37 = *(_DWORD *)(a2 + 68);
        *(void *)(a2 + 88) = *(void *)(a2 + 60);
        *(_DWORD *)(a2 + 96) = v37;
        ++v36;
        if (v40 != 82)
        {
          WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v47, a2);
          int v29 = v49;
          if (!v49)
          {
            uint64_t v43 = *(void **)(a2 + 8);
            unsigned int v44 = *(_DWORD *)(a2 + 96) - v7;
            *(void *)&long long v46 = v6;
            *((void *)&v46 + 1) = __PAIR64__(v44, v7);
            unsigned int v34 = WGSL::AST::Builder::construct<WGSL::AST::AssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,void>(v43, &v46, a3, &v47);
            goto LABEL_38;
          }
LABEL_33:
          if (v29 == 1)
          {
            unsigned int v30 = v47;
            if (v47) {
              *v47 += 2;
            }
            *(_OWORD *)(a1 + 8) = v48;
            *(void *)a1 = v30;
            uint64_t v31 = 1;
            *(_DWORD *)(a1 + 24) = 1;
            return ((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v46, &v47);
          }
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_57:
          __break(0xC471u);
LABEL_60:
          JUMPOUT(0x1825CC81CLL);
        }
      }
    }
LABEL_55:
    uint64_t result = WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v45 = v7 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v7) << 32);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v45;
    *(_DWORD *)(a1 + 24) = 1;
    return result;
  }
  __int16 v50 = WGSL::toBinaryOperation(v8) | 0x100;
  unsigned int v21 = *(_DWORD *)(a2 + 36);
  unsigned int v22 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v22;
    if (v21 <= v22)
    {
      __break(0xC471u);
      JUMPOUT(0x1825CC824);
    }
    uint64_t v24 = *(void *)(a2 + 24);
    uint64_t v25 = v24 + 32 * v22;
    unsigned int v26 = *(_DWORD *)v25;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v25;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v25 + 4);
    unsigned int v27 = *(_DWORD *)v25;
    if (v27 <= 8)
    {
      if (((1 << v27) & 0x38) != 0)
      {
        uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
LABEL_31:
        *(void *)(a2 + 80) = v28;
        goto LABEL_22;
      }
      if (((1 << v27) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v24 + 32 * v22 + 24);
        goto LABEL_22;
      }
      if (v27 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
        if (v28) {
          *v28 += 2;
        }
        goto LABEL_31;
      }
    }
LABEL_22:
    int v23 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v23;
    ++v22;
  }
  while (v26 == 82);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v47, a2);
  int v29 = v49;
  if (v49) {
    goto LABEL_33;
  }
  unsigned int v32 = *(void **)(a2 + 8);
  unsigned int v33 = *(_DWORD *)(a2 + 96) - v7;
  *(void *)&long long v46 = v6;
  *((void *)&v46 + 1) = __PAIR64__(v33, v7);
  unsigned int v34 = WGSL::AST::Builder::construct<WGSL::AST::CompoundAssignmentStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::BinaryOperation &,void>(v32, &v46, a3, &v47, (char *)&v50);
LABEL_38:
  uint64_t v31 = 0;
  *(void *)a1 = v34;
  *(_DWORD *)(a1 + 24) = 0;
  return ((uint64_t (*)(long long *, _DWORD **))off_1ECABE170[v31])(&v46, &v47);
}

uint64_t WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement(uint64_t a1, uint64_t a2)
{
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseLHSExpression((uint64_t)&v8, a2);
  if (v10)
  {
    if (v10 != 1)
    {
      uint64_t v7 = std::__throw_bad_variant_access[abi:sn180100]();
      return WGSL::Parser<WGSL::Lexer<char16_t>>::parseIfStatementWithAttributes(v7);
    }
    unint64_t v4 = v8;
    if (v8) {
      *v8 += 2;
    }
    *(_OWORD *)(a1 + 8) = v9;
    *(void *)a1 = v4;
    int v5 = 1;
    *(_DWORD *)(a1 + 24) = 1;
  }
  else
  {
    uint64_t result = WGSL::Parser<WGSL::Lexer<char16_t>>::parseVariableUpdatingStatement(a1, a2, &v8);
    int v5 = v10;
    if (v10 == -1) {
      return result;
    }
  }
  return ((uint64_t (*)(char *, _DWORD **))off_1ECABE170[v5])(&v11, &v8);
}

_DWORD *WGSL::Parser<WGSL::Lexer<char16_t>>::parseIfStatementWithAttributes(uint64_t a1, uint64_t a2, uint64_t *a3, _DWORD *a4, unsigned int a5)
{
  if (*(_DWORD *)(a2 + 56) != 25)
  {
    WGSL::toString();
    WGSL::toString();
    unsigned int v51 = "Expected a ";
    *(void *)&long long v52 = 12;
    long long v48 = ", but got a ";
    *(void *)&long long v49 = 13;
    WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v51, (uint64_t *)&v55, (uint64_t)&v48, (uint64_t *)&v54, &v44);
    if (!v44) {
      goto LABEL_73;
    }
    unsigned int v19 = v54;
    uint64_t v54 = 0;
    if (v19)
    {
      if (*v19 == 2)
      {
        WTF::StringImpl::destroy();
        uint64_t result = v55;
        int v55 = 0;
        if (!result)
        {
LABEL_35:
          unint64_t v25 = a5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - a5) << 32);
          *(void *)a1 = v44;
          *(void *)(a1 + 8) = a4;
          *(void *)(a1 + 16) = v25;
          *(_DWORD *)(a1 + 24) = 1;
          return result;
        }
LABEL_32:
        if (*result == 2) {
          uint64_t result = (_DWORD *)WTF::StringImpl::destroy();
        }
        else {
          *result -= 2;
        }
        goto LABEL_35;
      }
      *v19 -= 2;
    }
    uint64_t result = v55;
    int v55 = 0;
    if (!result) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  int v10 = (_OWORD *)(a2 + 60);
  unsigned int v11 = *(_DWORD *)(a2 + 36);
  unsigned int v12 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v12;
    if (v11 <= v12) {
      goto LABEL_73;
    }
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = v14 + 32 * v12;
    unsigned int v16 = *(_DWORD *)v15;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v15;
    *int v10 = *(_OWORD *)(v15 + 4);
    unsigned int v17 = *(_DWORD *)v15;
    if (v17 <= 8)
    {
      if (((1 << v17) & 0x38) != 0)
      {
        uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
LABEL_13:
        *(void *)(a2 + 80) = v18;
        goto LABEL_4;
      }
      if (((1 << v17) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v14 + 32 * v12 + 24);
        goto LABEL_4;
      }
      if (v17 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v18 = *(_DWORD **)(v14 + 32 * v12 + 24);
        if (v18) {
          *v18 += 2;
        }
        goto LABEL_13;
      }
    }
LABEL_4:
    int v13 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v13;
    ++v12;
  }
  while (v16 == 82);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseExpression((uint64_t)&v51, a2);
  uint64_t v21 = v53;
  if (v53)
  {
    if (v53 == 1)
    {
      unsigned int v22 = v51;
      if (v51) {
        *(_DWORD *)v51 += 2;
      }
      *(_OWORD *)(a1 + 8) = v52;
      *(void *)a1 = v22;
      *(_DWORD *)(a1 + 24) = 1;
      return (_DWORD *)((uint64_t (*)(const char **, const char **))off_1ECABE170[v21])(&v48, &v51);
    }
LABEL_70:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_73:
    __break(0xC471u);
    JUMPOUT(0x1825CCDF0);
  }
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(&v48, a2);
  uint64_t v23 = v50;
  if (v50)
  {
    if (v50 != 1) {
      goto LABEL_70;
    }
    uint64_t v24 = v48;
    if (v48) {
      *(_DWORD *)v48 += 2;
    }
    *(_OWORD *)(a1 + 8) = v49;
    *(void *)a1 = v24;
    goto LABEL_30;
  }
  unsigned int v47 = 0;
  if (*(_DWORD *)(a2 + 56) != 20) {
    goto LABEL_65;
  }
  unsigned int v26 = *(_DWORD *)(a2 + 36);
  unsigned int v27 = *(_DWORD *)(a2 + 40) + 1;
  uint64_t v28 = 32 * v27;
  while (2)
  {
    *(_DWORD *)(a2 + 40) = v27;
    if (v26 <= v27)
    {
      __break(0xC471u);
      JUMPOUT(0x1825CCDF8);
    }
    uint64_t v30 = *(void *)(a2 + 24);
    int v31 = *(_DWORD *)(v30 + v28);
    *(_DWORD *)(a2 + 56) = v31;
    *int v10 = *(_OWORD *)(v30 + v28 + 4);
    unsigned int v32 = *(_DWORD *)(v30 + v28);
    if (v32 <= 8)
    {
      if (((1 << v32) & 0x38) != 0)
      {
        unsigned int v33 = *(_DWORD **)(v30 + v28 + 24);
        goto LABEL_48;
      }
      if (((1 << v32) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v30 + v28 + 24);
      }
      else if (v32 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v33 = *(_DWORD **)(v30 + v28 + 24);
        if (v33) {
          *v33 += 2;
        }
LABEL_48:
        *(void *)(a2 + 80) = v33;
      }
    }
    int v29 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v29;
    v28 += 32;
    ++v27;
    if (v31 == 82) {
      continue;
    }
    break;
  }
  if (v31 != 25)
  {
    WGSL::Parser<WGSL::Lexer<char16_t>>::parseCompoundStatement(&v44, a2);
    if (!v46)
    {
      unsigned int v47 = v44;
      goto LABEL_65;
    }
    if (v46 != 1) {
      goto LABEL_70;
    }
    unsigned int v36 = v44;
    if (v44)
    {
      int v37 = *v44;
      *v44 += 2;
      *(_OWORD *)(a1 + 8) = v45;
      *(void *)a1 = v36;
      *(_DWORD *)(a1 + 24) = 1;
      if (v37) {
        *unsigned int v36 = v37;
      }
      else {
        WTF::StringImpl::destroy();
      }
      goto LABEL_66;
    }
    *(_OWORD *)(a1 + 8) = v45;
    *(void *)a1 = 0;
LABEL_30:
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_66;
  }
  int v34 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v34 + 1;
  if ((v34 + 1) >= 0x81)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v35 = a5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - a5) << 32);
    *(void *)(a1 + 8) = a4;
    *(void *)(a1 + 16) = v35;
    *(_DWORD *)(a1 + 24) = 1;
    *(_DWORD *)(a2 + 44) = v34;
    goto LABEL_66;
  }
  v43[0] = 0;
  v43[1] = 0;
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseIfStatementWithAttributes(&v44);
  int v38 = v46;
  if (!v46)
  {
    uint64_t v40 = 0;
    unsigned int v47 = v44;
    goto LABEL_64;
  }
  if (v46 != 1) {
    goto LABEL_70;
  }
  uint64_t v39 = v44;
  if (v44) {
    *v44 += 2;
  }
  *(_OWORD *)(a1 + 8) = v45;
  *(void *)a1 = v39;
  uint64_t v40 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_64:
  ((void (*)(WTF **, _DWORD **))off_1ECABE580[v40])(v43, &v44);
  *(_DWORD *)(a2 + 44) = v34;
  if (!v38)
  {
LABEL_65:
    unsigned int v41 = *(void **)(a2 + 8);
    unsigned int v42 = *(_DWORD *)(a2 + 96) - a5;
    unsigned int v44 = a4;
    *(void *)&long long v45 = __PAIR64__(v42, a5);
    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::IfStatement,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,std::reference_wrapper<WGSL::AST::CompoundStatement>,WGSL::AST::Statement *&,WTF::ReferenceWrapperVector<WGSL::AST::Attribute,0ul>,void>(v41, &v44, &v51, &v48, (uint64_t *)&v47, a3);
    *(_DWORD *)(a1 + 24) = 0;
  }
LABEL_66:
  ((void (*)(_DWORD **, const char **))off_1ECABE5C0[v23])(&v44, &v48);
  return (_DWORD *)((uint64_t (*)(const char **, const char **))off_1ECABE170[v21])(&v48, &v51);
}

void WGSL::Parser<WGSL::Lexer<char16_t>>::parseLHSExpression(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(char **)(a2 + 88);
  uint64_t v5 = *(unsigned int *)(a2 + 96);
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v6 + 1;
  if ((v6 + 1) >= 0x81)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    unint64_t v7 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v7;
    *(_DWORD *)(a1 + 24) = 1;
    goto LABEL_80;
  }
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8 == 76)
  {
    char v9 = 2;
    goto LABEL_7;
  }
  if (v8 != 36)
  {
    if (v8 == 8)
    {
      WGSL::Parser<WGSL::Lexer<unsigned char>>::parseIdentifier((uint64_t)&v54, a2);
      if (v57)
      {
        if (v57 != 1) {
          goto LABEL_88;
        }
        int v31 = v54;
        if (v54) {
          *(_DWORD *)v54 += 2;
        }
        long long v52 = v55;
        unsigned int v51 = v31;
        int v32 = 1;
        int v53 = 1;
      }
      else
      {
        unsigned int v36 = *(void **)(a2 + 8);
        unsigned int v37 = *(_DWORD *)(a2 + 96) - v5;
        *(void *)&long long v61 = v4;
        *((void *)&v61 + 1) = __PAIR64__(v37, v5);
        unsigned int v51 = (char *)WGSL::AST::Builder::construct<WGSL::AST::IdentifierExpression,WGSL::SourceSpan,WGSL::AST::Identifier,void>(v36, &v61, (uint64_t)&v54);
        int v53 = 0;
        int v32 = v57;
        if (v57 == -1) {
          goto LABEL_73;
        }
      }
      ((void (*)(long long *, char **))off_1ECABDF80[v32])(&v61, &v54);
      goto LABEL_73;
    }
    if (v8 != 67)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      unint64_t v33 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
      *(void *)&long long v52 = v4;
      *((void *)&v52 + 1) = v33;
      int v53 = 1;
      goto LABEL_73;
    }
    unsigned int v20 = *(_DWORD *)(a2 + 36);
    uint64_t v21 = (_OWORD *)(a2 + 60);
    unsigned int v22 = *(_DWORD *)(a2 + 40) + 1;
    while (1)
    {
      *(_DWORD *)(a2 + 40) = v22;
      if (v20 <= v22)
      {
        __break(0xC471u);
        JUMPOUT(0x1825CD420);
      }
      uint64_t v24 = *(void *)(a2 + 24);
      uint64_t v25 = v24 + 32 * v22;
      unsigned int v26 = *(_DWORD *)v25;
      *(_DWORD *)(a2 + 56) = *(_DWORD *)v25;
      *uint64_t v21 = *(_OWORD *)(v25 + 4);
      unsigned int v27 = *(_DWORD *)v25;
      if (v27 > 8) {
        goto LABEL_28;
      }
      if (((1 << v27) & 0x38) != 0) {
        break;
      }
      if (((1 << v27) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v24 + 32 * v22 + 24);
      }
      else if (v27 == 8)
      {
        *(void *)(a2 + 80) = 0;
        uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
        if (v28) {
          *v28 += 2;
        }
        goto LABEL_37;
      }
LABEL_28:
      int v23 = *(_DWORD *)(a2 + 68);
      *(void *)(a2 + 88) = *(void *)(a2 + 60);
      *(_DWORD *)(a2 + 96) = v23;
      ++v22;
      if (v26 != 82)
      {
        WGSL::Parser<WGSL::Lexer<char16_t>>::parseLHSExpression(&v54, a2);
        int v34 = v56;
        if (v56)
        {
          if (v56 == 1)
          {
            unint64_t v35 = v54;
            if (v54) {
              *(_DWORD *)v54 += 2;
            }
            long long v52 = v55;
LABEL_71:
            unsigned int v51 = v35;
            int v53 = v34;
LABEL_72:
            ((void (*)(long long *, char **))off_1ECABE170[v34])(&v61, &v54);
LABEL_73:
            if (!v53)
            {
              WGSL::Parser<WGSL::Lexer<char16_t>>::parsePostfixExpression(a1, a2, v51, (unint64_t)v4, v5);
              int v48 = v53;
              if (v53 == -1) {
                goto LABEL_80;
              }
LABEL_79:
              ((void (*)(char **, char **))off_1ECABE170[v48])(&v54, &v51);
              goto LABEL_80;
            }
            if (v53 == 1)
            {
              unsigned int v47 = v51;
              if (v51) {
                *(_DWORD *)v51 += 2;
              }
              *(_OWORD *)(a1 + 8) = v52;
              *(void *)a1 = v47;
              int v48 = 1;
              *(_DWORD *)(a1 + 24) = 1;
              goto LABEL_79;
            }
          }
LABEL_88:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_92:
          __break(0xC471u);
          JUMPOUT(0x1825CD418);
        }
        if (*(_DWORD *)(a2 + 56) != 68)
        {
          WGSL::toString();
          WGSL::toString();
          unsigned int v51 = "Expected a ";
          *(void *)&long long v52 = 12;
          *(void *)&long long v61 = ", but got a ";
          *((void *)&v61 + 1) = 13;
          WTF::tryMakeString<WTF::ASCIILiteral,WTF::String,WTF::ASCIILiteral,WTF::String>((unint64_t *)&v51, (uint64_t *)&v59, (uint64_t)&v61, (uint64_t *)&v58, &v60);
          if (v60)
          {
            int v46 = v58;
            unsigned int v58 = 0;
            if (v46)
            {
              if (*v46 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v46 -= 2;
              }
            }
            long long v49 = v59;
            int v59 = 0;
            if (v49)
            {
              if (*v49 == 2) {
                WTF::StringImpl::destroy();
              }
              else {
                *v49 -= 2;
              }
            }
            unint64_t v50 = v5 | ((unint64_t)(*(_DWORD *)(a2 + 96) - v5) << 32);
            unsigned int v51 = v60;
            *(void *)&long long v52 = v4;
            *((void *)&v52 + 1) = v50;
            int v53 = 1;
            int v34 = v56;
            if (v56 != -1) {
              goto LABEL_72;
            }
            goto LABEL_73;
          }
          goto LABEL_92;
        }
        unsigned int v38 = *(_DWORD *)(a2 + 36);
        unsigned int v39 = *(_DWORD *)(a2 + 40) + 1;
        while (2)
        {
          *(_DWORD *)(a2 + 40) = v39;
          if (v38 <= v39)
          {
            __break(0xC471u);
            JUMPOUT(0x1825CD428);
          }
          uint64_t v41 = *(void *)(a2 + 24);
          uint64_t v42 = v41 + 32 * v39;
          unsigned int v43 = *(_DWORD *)v42;
          *(_DWORD *)(a2 + 56) = *(_DWORD *)v42;
          *uint64_t v21 = *(_OWORD *)(v42 + 4);
          unsigned int v44 = *(_DWORD *)v42;
          if (v44 <= 8)
          {
            if (((1 << v44) & 0x38) != 0)
            {
              long long v45 = *(_DWORD **)(v41 + 32 * v39 + 24);
              goto LABEL_65;
            }
            if (((1 << v44) & 0xC4) != 0)
            {
              *(void *)(a2 + 80) = *(void *)(v41 + 32 * v39 + 24);
            }
            else if (v44 == 8)
            {
              *(void *)(a2 + 80) = 0;
              long long v45 = *(_DWORD **)(v41 + 32 * v39 + 24);
              if (v45) {
                *v45 += 2;
              }
LABEL_65:
              *(void *)(a2 + 80) = v45;
            }
          }
          int v40 = *(_DWORD *)(a2 + 68);
          *(void *)(a2 + 88) = *(void *)(a2 + 60);
          *(_DWORD *)(a2 + 96) = v40;
          ++v39;
          if (v43 != 82)
          {
            unint64_t v35 = v54;
            goto LABEL_71;
          }
          continue;
        }
      }
    }
    uint64_t v28 = *(_DWORD **)(v24 + 32 * v22 + 24);
LABEL_37:
    *(void *)(a2 + 80) = v28;
    goto LABEL_28;
  }
  char v9 = 0;
LABEL_7:
  LOBYTE(v61) = v9;
  unsigned int v10 = *(_DWORD *)(a2 + 36);
  unsigned int v11 = *(_DWORD *)(a2 + 40) + 1;
  do
  {
    *(_DWORD *)(a2 + 40) = v11;
    if (v10 <= v11) {
      goto LABEL_92;
    }
    uint64_t v13 = *(void *)(a2 + 24);
    uint64_t v14 = v13 + 32 * v11;
    unsigned int v15 = *(_DWORD *)v14;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)v14;
    *(_OWORD *)(a2 + 60) = *(_OWORD *)(v14 + 4);
    unsigned int v16 = *(_DWORD *)v14;
    if (v16 <= 8)
    {
      if (((1 << v16) & 0x38) != 0)
      {
        unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
LABEL_18:
        *(void *)(a2 + 80) = v17;
        goto LABEL_9;
      }
      if (((1 << v16) & 0xC4) != 0)
      {
        *(void *)(a2 + 80) = *(void *)(v13 + 32 * v11 + 24);
        goto LABEL_9;
      }
      if (v16 == 8)
      {
        *(void *)(a2 + 80) = 0;
        unsigned int v17 = *(_DWORD **)(v13 + 32 * v11 + 24);
        if (v17) {
          *v17 += 2;
        }
        goto LABEL_18;
      }
    }
LABEL_9:
    int v12 = *(_DWORD *)(a2 + 68);
    *(void *)(a2 + 88) = *(void *)(a2 + 60);
    *(_DWORD *)(a2 + 96) = v12;
    ++v11;
  }
  while (v15 == 82);
  WGSL::Parser<WGSL::Lexer<char16_t>>::parseLHSExpression(&v54, a2);
  if (!v56)
  {
    int v29 = *(void **)(a2 + 8);
    unsigned int v30 = *(_DWORD *)(a2 + 96) - v5;
    unsigned int v51 = v4;
    *(void *)&long long v52 = __PAIR64__(v30, v5);
    *(void *)a1 = WGSL::AST::Builder::construct<WGSL::AST::UnaryExpression,WGSL::SourceSpan,std::reference_wrapper<WGSL::AST::Expression>,WGSL::AST::UnaryOperation &,void>(v29, &v51, &v54, (char *)&v61);
    *(_DWORD *)(a1 + 24) = 0;
    int v19 = v56;
    if (v56 != -1) {
      goto LABEL_39;
    }
    goto LABEL_80;
  }
  if (v56 != 1) {
    goto LABEL_88;
  }
  uint64_t v18 = v54;
  if (v54) {
    *(_DWORD *)v54 += 2;
  }
  *(_OWORD *)(a1 + 8) = v55;
  *(void *)a1 = v18;
  int v19 = 1;
  *(_DWORD *)(a1 + 24) = 1;
LABEL_39:
  ((void (*)(char **, char **))off_1ECABE170[v19])(&v51, &v54);
LABEL_80:
  *(_DWORD *)(a2 + 44) = v6;
}

void WGSL::PointerRewriter::rewrite(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 88) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 108);
  if (v3)
  {
    if (v3 >> 30)
    {
      __break(0xC471u);
      JUMPOUT(0x1825CD720);
    }
    int v6 = (void *)WTF::fastMalloc((WTF *)(4 * v3));
    memcpy(v6, *(const void **)(a1 + 96), 4 * *(unsigned int *)(a1 + 108));
    unint64_t v4 = (void *)(a1 + 96);
    uint64_t v5 = *(WTF **)(a1 + 96);
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v4 = (void *)(a1 + 96);
    uint64_t v5 = *(WTF **)(a1 + 96);
    if (v5)
    {
LABEL_4:
      *(void *)(a1 + 96) = 0;
      *(_DWORD *)(a1 + 104) = 0;
      WTF::fastFree(v5, a2);
    }
  }
  *unint64_t v4 = 0;
  v4[1] = 0;
  WGSL::ContextProvider<WGSL::Empty>::ContextScope::ContextScope(&v7, (void *)(a1 + 40));
}

void WGSL::PointerRewriter::visit(WGSL::PointerRewriter *this, WGSL::AST::CompoundStatement *a2)
{
  WGSL::ContextProvider<WGSL::Empty>::ContextScope::ContextScope(&v2, (void *)this + 5);
}

WTF *WGSL::PointerRewriter::visit(WGSL::PointerRewriter *this, WGSL::AST::VariableStatement *a2)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)a2 + 3);
    uint64_t v5 = *(void *)(v4 + 120);
    uint64_t v12 = v5;
    if (!v5) {
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(WGSL::PointerRewriter *, void))(*(void *)this + 56))(this, *((void *)a2 + 3));
    uint64_t v4 = *((void *)a2 + 3);
    uint64_t v5 = *(void *)(v4 + 120);
    uint64_t v12 = v5;
    if (!v5)
    {
LABEL_9:
      uint64_t v11 = 0;
      return WTF::HashMap<WTF::String,WGSL::AST::Variable *,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::AST::Variable *>,WTF::HashTableTraits>::add<WGSL::AST::Variable *&>((uint64_t)v13, (uint64_t *)(*((void *)this + 5) + 8), (const WTF::StringImpl **)(v4 + 48), &v11);
    }
  }
  uint64_t v6 = *(void *)(v5 + 24);
  if (!v6 || *(_DWORD *)(v6 + 48) != 11) {
    goto LABEL_9;
  }
  uint64_t result = WTF::HashMap<WTF::String,WGSL::AST::Variable *,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::AST::Variable *>,WTF::HashTableTraits>::add<WGSL::AST::Variable *&>((uint64_t)v13, (uint64_t *)(*((void *)this + 5) + 8), (const WTF::StringImpl **)(v4 + 48), &v12);
  uint64_t v8 = *((unsigned int *)this + 27);
  if (v8 == *((_DWORD *)this + 26))
  {
    uint64_t result = (WTF *)WTF::Vector<WGPUFeatureName,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)this + 96, v8 + 1, (unint64_t)this + 88);
    uint64_t v8 = *((unsigned int *)this + 27);
    uint64_t v9 = *((void *)this + 12);
    int v10 = *(_DWORD *)result;
  }
  else
  {
    uint64_t v9 = *((void *)this + 12);
    int v10 = *((_DWORD *)this + 22);
  }
  *(_DWORD *)(v9 + 4 * v8) = v10;
  ++*((_DWORD *)this + 27);
  return result;
}

unint64_t WGSL::PointerRewriter::visit(unint64_t this, WGSL::AST::PhonyAssignmentStatement *a2)
{
  unint64_t v2 = this;
  uint64_t v3 = *(void *)(*((void *)a2 + 3) + 24);
  if (v3 && *(_DWORD *)(v3 + 48) == 11)
  {
    uint64_t v4 = *(unsigned int *)(this + 108);
    if (v4 == *(_DWORD *)(this + 104))
    {
      this = WTF::Vector<WGPUFeatureName,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(this + 96, v4 + 1, this + 88);
      uint64_t v4 = *(unsigned int *)(v2 + 108);
      uint64_t v5 = *(void *)(v2 + 96);
      int v6 = *(_DWORD *)this;
    }
    else
    {
      uint64_t v5 = *(void *)(this + 96);
      int v6 = *(_DWORD *)(this + 88);
    }
    *(_DWORD *)(v5 + 4 * v4) = v6;
    ++*(_DWORD *)(v2 + 108);
  }
  else if (!*(unsigned char *)(this + 32))
  {
    uint64_t v7 = *(uint64_t (**)(void))(*(void *)this + 208);
    return v7();
  }
  return this;
}

void WGSL::PointerRewriter::visit(WGSL::PointerRewriter *this, WGSL::AST::LoopStatement *a2)
{
  WGSL::ContextProvider<WGSL::Empty>::ContextScope::ContextScope(&v2, (void *)this + 5);
}

uint64_t WGSL::PointerRewriter::visit(uint64_t this, WGSL::AST::IdentifierExpression *a2, const WTF::StringImpl *a3)
{
  uint64_t v4 = this;
  uint64_t v5 = *(void **)(this + 40);
  while (2)
  {
    uint64_t v6 = v5[1];
    if (!v6) {
      goto LABEL_3;
    }
    int v7 = *(_DWORD *)(v6 - 8);
    uint64_t v8 = (WTF::StringImpl *)*((void *)a2 + 11);
    unsigned int v9 = *((_DWORD *)v8 + 4);
    if (v9 < 0x100) {
      unsigned int v10 = WTF::StringImpl::hashSlowCase(v8);
    }
    else {
      unsigned int v10 = v9 >> 8;
    }
    for (i = 0; ; unsigned int v10 = i + v12)
    {
      unint64_t v12 = v10 & v7;
      this = *(void *)(v6 + 16 * v12);
      if (this == -1) {
        goto LABEL_9;
      }
      if (!this) {
        break;
      }
      this = WTF::equal((WTF *)this, *((const WTF::StringImpl **)a2 + 11), a3);
      if (this)
      {
        uint64_t v13 = v6 + 16 * v12;
        uint64_t v14 = v5[1];
        if (v14)
        {
          uint64_t v15 = *(unsigned int *)(v14 - 4);
          goto LABEL_2;
        }
        goto LABEL_17;
      }
LABEL_9:
      ++i;
    }
    uint64_t v14 = v5[1];
    if (v14)
    {
      uint64_t v15 = *(unsigned int *)(v14 - 4);
      uint64_t v13 = v14 + 16 * v15;
LABEL_2:
      if (v13 != v14 + 16 * v15)
      {
LABEL_17:
        uint64_t v16 = *(void *)(v13 + 8);
        if (!v16) {
          return this;
        }
        uint64_t v17 = *(void *)(v4 + 80);
        uint64_t v18 = *(void *)(v17 + 312);
        if ((unint64_t)(*(void *)(v17 + 320) - v18) <= 0x47)
        {
          uint64_t v63 = WTF::fastMalloc((WTF *)0x4000);
          unsigned int v82 = (WGSL::AST::IdentifierExpression *)v63;
          uint64_t v65 = *(unsigned int *)(v17 + 340);
          if (v65 == *(_DWORD *)(v17 + 336))
          {
            int v66 = WTF::Vector<WTF::MallocPtr<unsigned char,WTF::FastMalloc>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v17 + 328, v65 + 1, (unint64_t)&v82);
            uint64_t v65 = *(unsigned int *)(v17 + 340);
            uint64_t v67 = *(void *)(v17 + 328);
            uint64_t v68 = *(void *)v66;
            *(void *)int v66 = 0;
            *(void *)(v67 + 8 * v65) = v68;
            unsigned int v69 = v82;
          }
          else
          {
            uint64_t v70 = v63;
            unsigned int v69 = 0;
            uint64_t v71 = *(void *)(v17 + 328);
            unsigned int v82 = 0;
            *(void *)(v71 + 8 * v65) = v70;
          }
          *(_DWORD *)(v17 + 340) = v65 + 1;
          WTF::fastFree(v69, v64);
          uint64_t v72 = *(unsigned int *)(v17 + 340);
          if (!v72) {
            goto LABEL_104;
          }
          uint64_t v18 = *(void *)(*(void *)(v17 + 328) + 8 * v72 - 8);
          *(void *)(v17 + 312) = v18;
          *(void *)(v17 + 320) = v18 + 0x4000;
        }
        *(_OWORD *)(v18 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(void *)(v18 + 24) = 0;
        *(unsigned char *)(v18 + 32) = 0;
        *(unsigned char *)(v18 + 56) = 0;
        *(void *)uint64_t v18 = off_1ECABD058;
        *(void *)(v18 + 64) = v16;
        *(void *)(v18 + 24) = *(void *)(v16 + 24);
        *(void *)(v17 + 312) += 72;
        unint64_t v19 = *(unsigned int *)(v17 + 356);
        if (v19 != *(_DWORD *)(v17 + 352))
        {
          uint64_t v25 = (void *)(*(void *)(v17 + 344) + 8 * v19);
          goto LABEL_33;
        }
        unint64_t v20 = v19 + (v19 >> 2);
        if (v20 >= 0x10) {
          unint64_t v21 = v20 + 1;
        }
        else {
          unint64_t v21 = 16;
        }
        if (v21 <= v19 + 1) {
          unint64_t v12 = v19 + 1;
        }
        else {
          unint64_t v12 = v21;
        }
        if (!(v12 >> 29))
        {
          unsigned int v22 = *(void **)(v17 + 344);
          int v23 = (void *)WTF::fastMalloc((WTF *)(8 * v12));
          *(_DWORD *)(v17 + 352) = v12;
          *(void *)(v17 + 344) = v23;
          memcpy(v23, v22, 8 * v19);
          if (v22)
          {
            if (*(void **)(v17 + 344) == v22)
            {
              *(void *)(v17 + 344) = 0;
              *(_DWORD *)(v17 + 352) = 0;
            }
            WTF::fastFree((WTF *)v22, v24);
          }
          unint64_t v19 = *(unsigned int *)(v17 + 356);
          uint64_t v25 = (void *)(*(void *)(v17 + 344) + 8 * v19);
LABEL_33:
          void *v25 = v18;
          *(_DWORD *)(v17 + 356) = v19 + 1;
          uint64_t v26 = *(void *)(v4 + 80);
          long long v74 = *(_OWORD *)((char *)a2 + 8);
          uint64_t v75 = *((void *)a2 + 3);
          v76[0] = 0;
          unsigned __int8 v78 = 0;
          int v27 = *((unsigned __int8 *)a2 + 56);
          if (*((unsigned char *)a2 + 56))
          {
            int v77 = -1;
            unint64_t v12 = *((unsigned int *)a2 + 12);
            if (v12 != -1)
            {
              ((void (*)(WGSL::AST::IdentifierExpression **, unsigned char *, char *))off_1ECABE978[v12])(&v82, v76, (char *)a2 + 32);
              int v77 = v12;
            }
            unsigned __int8 v78 = 1;
          }
          long long v80 = *(_OWORD *)((char *)a2 + 72);
          int v79 = off_1ECABC030;
          uint64_t v28 = (_DWORD *)*((void *)a2 + 11);
          if (v28) {
            *v28 += 2;
          }
          int v29 = (uint64_t *)(v26 + 400);
          int v81 = v28;
          unint64_t v30 = *(unsigned int *)(v26 + 412);
          if (v30 == *(_DWORD *)(v26 + 408))
          {
            unint64_t v31 = v30 + (v30 >> 2);
            if (v31 >= 0x10) {
              unint64_t v32 = v31 + 1;
            }
            else {
              unint64_t v32 = 16;
            }
            if (v32 <= v30 + 1) {
              unint64_t v33 = v30 + 1;
            }
            else {
              unint64_t v33 = v32;
            }
            WTF::Vector<std::function<void ()(void)>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>((uint64_t)v29, v33);
            uint64_t v34 = *(unsigned int *)(v26 + 412);
            uint64_t v35 = *(void *)(v26 + 400);
            unsigned int v36 = a2;
            long long v84 = v74;
            uint64_t v37 = v75;
            unsigned int v82 = a2;
            unsigned int v83 = (void (**)(WGSL::AST::IdentifierExpression *__hidden))&unk_1ECABBFE0;
            uint64_t v85 = v75;
            v86[0] = 0;
            unsigned __int8 v88 = 0;
            int v73 = v78;
            if (v78)
            {
              int v87 = -1;
              int v27 = v77;
              if (v77 != -1)
              {
                uint64_t v38 = v34;
                uint64_t v39 = v35;
                ((void (*)(unsigned char *, unsigned char *, unsigned char *))off_1ECABE8D8[v77])(v92, v86, v76);
                uint64_t v35 = v39;
                uint64_t v34 = v38;
                int v87 = v27;
                unsigned int v36 = v82;
                uint64_t v37 = v85;
              }
              int v40 = 1;
              unsigned __int8 v88 = 1;
            }
            else
            {
              int v40 = 0;
            }
            unsigned int v83 = off_1ECABBFB8;
            long long v90 = v80;
            long long v55 = v81;
            int v81 = 0;
            uint64_t v89 = off_1ECABC030;
            unsigned int v91 = v55;
            uint64_t v56 = v35 + 32 * v34;
            *(void *)(v56 + 24) = 0;
            int v57 = (void *)(v56 + 24);
            unsigned int v58 = (char *)operator new(0x70uLL);
            int v59 = v58;
            *(void *)unsigned int v58 = &unk_1ECABE940;
            *((void *)v58 + 1) = v36;
            *(_OWORD *)(v58 + 24) = v84;
            *((void *)v58 + 2) = &unk_1ECABBFE0;
            *((void *)v58 + 5) = v37;
            v58[48] = 0;
            v58[72] = 0;
            if (v73)
            {
              *((_DWORD *)v58 + 16) = -1;
              if (v27 != -1)
              {
                ((void (*)(unsigned char *, char *, unsigned char *))off_1ECABE8D8[v27])(v92, v58 + 48, v86);
                *((_DWORD *)v59 + 16) = v27;
                long long v55 = v91;
                int v40 = v88;
              }
              v59[72] = 1;
            }
            *((void *)v59 + 2) = off_1ECABBFB8;
            *(_OWORD *)(v59 + 88) = v90;
            *((void *)v59 + 10) = off_1ECABC030;
            *((void *)v59 + 13) = v55;
            void *v57 = v59;
            unsigned int v91 = 0;
            uint64_t v89 = off_1ECABC030;
            unsigned int v83 = (void (**)(WGSL::AST::IdentifierExpression *__hidden))&unk_1ECABBFE0;
            if (v40 && v87 != -1) {
              ((void (*)(unsigned char *, unsigned char *))off_1ECABE880[v87])(v92, v86);
            }
            ++*(_DWORD *)(v26 + 412);
            long long v49 = (_OWORD *)(v18 + 8);
            int v53 = (_OWORD *)((char *)a2 + 8);
            uint64_t v54 = (char *)a2 + 32;
LABEL_76:
            uint64_t v60 = v81;
            int v79 = off_1ECABC030;
            int v81 = 0;
            if (v60)
            {
              if (*v60 == 2)
              {
                WTF::StringImpl::destroy();
                if (!v78) {
                  goto LABEL_84;
                }
LABEL_82:
                if (v77 != -1) {
                  ((void (*)(WGSL::AST::IdentifierExpression **, unsigned char *))off_1ECABE880[v77])(&v82, v76);
                }
LABEL_84:
                *((void *)a2 + 8) = off_1ECABC030;
                this = *((void *)a2 + 11);
                *((void *)a2 + 11) = 0;
                if (this)
                {
                  if (*(_DWORD *)this == 2)
                  {
                    this = WTF::StringImpl::destroy();
                    *(void *)a2 = &unk_1ECABBFE0;
                    if (!*((unsigned char *)a2 + 56))
                    {
LABEL_93:
                      *(void *)a2 = &unk_1ECABC008;
                      *int v53 = *v49;
                      *(void *)a2 = &unk_1ECABBFE0;
                      *((void *)a2 + 3) = *(void *)(v18 + 24);
                      *((unsigned char *)a2 + 32) = 0;
                      *((unsigned char *)a2 + 56) = 0;
                      if (*(unsigned char *)(v18 + 56))
                      {
                        *((_DWORD *)a2 + 12) = -1;
                        uint64_t v62 = *(unsigned int *)(v18 + 48);
                        if (v62 != -1)
                        {
                          this = ((uint64_t (*)(WGSL::AST::IdentifierExpression **, char *, uint64_t))off_1ECABE978[v62])(&v82, v54, v18 + 32);
                          *((_DWORD *)a2 + 12) = v62;
                        }
                        *((unsigned char *)a2 + 56) = 1;
                      }
                      *(void *)a2 = off_1ECABD058;
                      *((void *)a2 + 8) = *(void *)(v18 + 64);
                      return this;
                    }
LABEL_90:
                    uint64_t v61 = *((unsigned int *)a2 + 12);
                    if (v61 != -1) {
                      this = ((uint64_t (*)(WGSL::AST::IdentifierExpression **, char *))off_1ECABE880[v61])(&v82, v54);
                    }
                    *((_DWORD *)a2 + 12) = -1;
                    goto LABEL_93;
                  }
                  *(_DWORD *)this -= 2;
                }
                *(void *)a2 = &unk_1ECABBFE0;
                if (!*((unsigned char *)a2 + 56)) {
                  goto LABEL_93;
                }
                goto LABEL_90;
              }
              *v60 -= 2;
            }
            if (!v78) {
              goto LABEL_84;
            }
            goto LABEL_82;
          }
          uint64_t v41 = *v29;
          uint64_t v42 = a2;
          long long v84 = v74;
          uint64_t v43 = v75;
          unsigned int v82 = a2;
          unsigned int v83 = (void (**)(WGSL::AST::IdentifierExpression *__hidden))&unk_1ECABBFE0;
          uint64_t v85 = v75;
          v86[0] = 0;
          unsigned __int8 v88 = 0;
          if (v27)
          {
            int v87 = -1;
            if (v12 != -1)
            {
              uint64_t v44 = v41;
              ((void (*)(unsigned char *, unsigned char *, unsigned char *))off_1ECABE8D8[v12])(v92, v86, v76);
              uint64_t v41 = v44;
              int v87 = v12;
              uint64_t v28 = v81;
              uint64_t v42 = v82;
              uint64_t v43 = v85;
            }
            unsigned __int8 v88 = 1;
          }
          unsigned int v83 = off_1ECABBFB8;
          long long v90 = v80;
          int v81 = 0;
          uint64_t v89 = off_1ECABC030;
          unsigned int v91 = v28;
          uint64_t v45 = v41 + 32 * v30;
          *(void *)(v45 + 24) = 0;
          int v46 = (void *)(v45 + 24);
          unsigned int v47 = (char *)operator new(0x70uLL);
          int v48 = v47;
          *(void *)unsigned int v47 = &unk_1ECABE940;
          *((void *)v47 + 1) = v42;
          *(_OWORD *)(v47 + 24) = v84;
          *((void *)v47 + 2) = &unk_1ECABBFE0;
          *((void *)v47 + 5) = v43;
          v47[48] = 0;
          v47[72] = 0;
          long long v49 = (_OWORD *)(v18 + 8);
          if (v27)
          {
            *((_DWORD *)v47 + 16) = -1;
            int v50 = v87;
            if (v87 != -1)
            {
              ((void (*)(unsigned char *, char *, unsigned char *))off_1ECABE8D8[v87])(v92, v47 + 48, v86);
              *((_DWORD *)v48 + 16) = v50;
            }
            v48[72] = 1;
          }
          *((void *)v48 + 2) = off_1ECABBFB8;
          *(_OWORD *)(v48 + 88) = v90;
          *((void *)v48 + 10) = off_1ECABC030;
          unsigned int v51 = v91;
          unsigned int v91 = 0;
          *((void *)v48 + 13) = v51;
          *int v46 = v48;
          long long v52 = v91;
          uint64_t v89 = off_1ECABC030;
          unsigned int v91 = 0;
          int v53 = (_OWORD *)((char *)a2 + 8);
          uint64_t v54 = (char *)a2 + 32;
          if (v52)
          {
            if (*v52 == 2)
            {
              WTF::StringImpl::destroy();
              unsigned int v83 = (void (**)(WGSL::AST::IdentifierExpression *__hidden))&unk_1ECABBFE0;
              if (!v88)
              {
LABEL_75:
                ++*(_DWORD *)(v26 + 412);
                goto LABEL_76;
              }
LABEL_73:
              if (v87 != -1) {
                ((void (*)(unsigned char *, unsigned char *))off_1ECABE880[v87])(v92, v86);
              }
              goto LABEL_75;
            }
            *v52 -= 2;
          }
          unsigned int v83 = (void (**)(WGSL::AST::IdentifierExpression *__hidden))&unk_1ECABBFE0;
          if (!v88) {
            goto LABEL_75;
          }
          goto LABEL_73;
        }
LABEL_104:
        __break(0xC471u);
        JUMPOUT(0x1825CE694);
      }
    }
LABEL_3:
    uint64_t v5 = (void *)*v5;
    if (v5) {
      continue;
    }
    return this;
  }
}

uint64_t WGSL::PointerRewriter::visit(uint64_t this, WGSL::AST::UnaryExpression *a2)
{
  uint64_t v4 = this;
  if (*(unsigned char *)(this + 32))
  {
    if (*((unsigned char *)a2 + 72) != 2) {
      return this;
    }
  }
  else
  {
    this = (*(uint64_t (**)(uint64_t, void))(*(void *)this + 208))(this, *((void *)a2 + 8));
    if (*((unsigned char *)a2 + 72) != 2) {
      return this;
    }
  }
  for (int i = (void *)*((void *)a2 + 8);
        (*(unsigned int (**)(void *))(*i + 16))(i) == 23;
        int i = (void *)i[8])
  {
    if ((*(unsigned int (**)(void *))(*i + 16))(i) != 23)
    {
      this = 96;
      __break(0xC471u);
      return this;
    }
  }
  this = (*(uint64_t (**)(void *))(*i + 16))(i);
  if (this == 26 && !*((unsigned char *)i + 72))
  {
    uint64_t v6 = *(void *)(v4 + 80);
    uint64_t v7 = i[8];
    long long v37 = *(_OWORD *)((char *)a2 + 8);
    uint64_t v38 = *((void *)a2 + 3);
    uint64_t v35 = (char *)a2 + 32;
    v39[0] = 0;
    unsigned __int8 v41 = 0;
    int v8 = *((unsigned __int8 *)a2 + 56);
    if (*((unsigned char *)a2 + 56))
    {
      int v40 = -1;
      uint64_t v2 = *((unsigned int *)a2 + 12);
      if (v2 != -1)
      {
        ((void (*)(WGSL::AST::UnaryExpression **, unsigned char *, char *))off_1ECABE978[v2])(&v44, v39, v35);
        int v40 = v2;
      }
      unsigned __int8 v41 = 1;
    }
    unsigned int v9 = (uint64_t *)(v6 + 400);
    uint64_t v42 = *((void *)a2 + 8);
    char v43 = *((unsigned char *)a2 + 72);
    unint64_t v10 = *(unsigned int *)(v6 + 412);
    uint64_t v36 = v7;
    if (v10 == *(_DWORD *)(v6 + 408))
    {
      unint64_t v11 = v10 + (v10 >> 2);
      if (v11 >= 0x10) {
        unint64_t v12 = v11 + 1;
      }
      else {
        unint64_t v12 = 16;
      }
      if (v12 <= v10 + 1) {
        unint64_t v13 = v10 + 1;
      }
      else {
        unint64_t v13 = v12;
      }
      WTF::Vector<std::function<void ()(void)>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>((uint64_t)v9, v13);
      uint64_t v14 = *(unsigned int *)(v6 + 412);
      uint64_t v15 = *(void *)(v6 + 400);
      uint64_t v16 = a2;
      long long v46 = v37;
      uint64_t v17 = v38;
      uint64_t v44 = a2;
      uint64_t v45 = (void (**)(WGSL::AST::UnaryExpression *__hidden))&unk_1ECABBFE0;
      uint64_t v47 = v38;
      v48[0] = 0;
      unsigned __int8 v50 = 0;
      int v18 = v41;
      if (v41)
      {
        int v49 = -1;
        int v8 = v40;
        if (v40 != -1)
        {
          uint64_t v19 = v14;
          uint64_t v20 = v15;
          ((void (*)(unsigned char *, unsigned char *, unsigned char *))off_1ECABE8D8[v40])(v53, v48, v39);
          uint64_t v15 = v20;
          uint64_t v14 = v19;
          int v49 = v8;
          uint64_t v16 = v44;
          uint64_t v17 = v47;
        }
        int v21 = 1;
        unsigned __int8 v50 = 1;
      }
      else
      {
        int v21 = 0;
      }
      uint64_t v45 = off_1ECABC248;
      uint64_t v51 = v42;
      char v52 = v43;
      uint64_t v27 = v15 + 32 * v14;
      *(void *)(v27 + 24) = 0;
      uint64_t v28 = (uint64_t *)(v27 + 24);
      this = (uint64_t)operator new(0x60uLL);
      uint64_t v29 = this;
      *(void *)this = &unk_1ECABE9E0;
      *(void *)(this + 8) = v16;
      *(_OWORD *)(this + 24) = v46;
      *(void *)(this + 16) = &unk_1ECABBFE0;
      *(void *)(this + 40) = v17;
      *(unsigned char *)(this + 48) = 0;
      *(unsigned char *)(this + 72) = 0;
      if (v18)
      {
        *(_DWORD *)(this + 64) = -1;
        uint64_t v30 = v36;
        if (v8 != -1)
        {
          this = ((uint64_t (*)(unsigned char *, uint64_t, unsigned char *))off_1ECABE8D8[v8])(v53, this + 48, v48);
          *(_DWORD *)(v29 + 64) = v8;
          int v21 = v50;
        }
        *(unsigned char *)(v29 + 72) = 1;
      }
      else
      {
        int v21 = 0;
        uint64_t v30 = v36;
      }
      *(void *)(v29 + 16) = off_1ECABC248;
      *(void *)(v29 + 80) = v51;
      *(unsigned char *)(v29 + 88) = v52;
      uint64_t *v28 = v29;
      uint64_t v45 = (void (**)(WGSL::AST::UnaryExpression *__hidden))&unk_1ECABBFE0;
      if (v21 && v49 != -1) {
        this = ((uint64_t (*)(unsigned char *, unsigned char *))off_1ECABE880[v49])(v53, v48);
      }
      ++*(_DWORD *)(v6 + 412);
    }
    else
    {
      uint64_t v22 = *v9;
      int v23 = a2;
      long long v46 = v37;
      uint64_t v24 = v38;
      uint64_t v44 = a2;
      uint64_t v45 = (void (**)(WGSL::AST::UnaryExpression *__hidden))&unk_1ECABBFE0;
      uint64_t v47 = v38;
      v48[0] = 0;
      unsigned __int8 v50 = 0;
      if (v8)
      {
        int v49 = -1;
        if (v2 != -1)
        {
          uint64_t v25 = v22;
          ((void (*)(unsigned char *, unsigned char *, unsigned char *))off_1ECABE8D8[v2])(v53, v48, v39);
          uint64_t v22 = v25;
          int v49 = v2;
          int v23 = v44;
          uint64_t v24 = v47;
        }
        int v26 = 1;
        unsigned __int8 v50 = 1;
      }
      else
      {
        int v26 = 0;
      }
      uint64_t v45 = off_1ECABC248;
      uint64_t v51 = v42;
      char v52 = v43;
      uint64_t v31 = v22 + 32 * v10;
      *(void *)(v31 + 24) = 0;
      unint64_t v32 = (uint64_t *)(v31 + 24);
      this = (uint64_t)operator new(0x60uLL);
      uint64_t v33 = this;
      *(void *)this = &unk_1ECABE9E0;
      *(void *)(this + 8) = v23;
      *(_OWORD *)(this + 24) = v46;
      *(void *)(this + 16) = &unk_1ECABBFE0;
      *(void *)(this + 40) = v24;
      *(unsigned char *)(this + 48) = 0;
      *(unsigned char *)(this + 72) = 0;
      if (v8)
      {
        *(_DWORD *)(this + 64) = -1;
        if (v2 != -1)
        {
          this = ((uint64_t (*)(unsigned char *, uint64_t, unsigned char *))off_1ECABE8D8[v2])(v53, this + 48, v48);
          *(_DWORD *)(v33 + 64) = v2;
          int v26 = v50;
        }
        *(unsigned char *)(v33 + 72) = 1;
      }
      else
      {
        int v26 = 0;
      }
      *(void *)(v33 + 16) = off_1ECABC248;
      *(void *)(v33 + 80) = v51;
      *(unsigned char *)(v33 + 88) = v52;
      uint64_t *v32 = v33;
      uint64_t v45 = (void (**)(WGSL::AST::UnaryExpression *__hidden))&unk_1ECABBFE0;
      uint64_t v30 = v7;
      if (v26)
      {
        if (v49 != -1) {
          this = ((uint64_t (*)(unsigned char *, unsigned char *))off_1ECABE880[v49])(v53, v48);
        }
        int v49 = -1;
      }
      ++*(_DWORD *)(v6 + 412);
    }
    if (v41 && v40 != -1) {
      this = ((uint64_t (*)(WGSL::AST::UnaryExpression **, unsigned char *))off_1ECABE880[v40])(&v44, v39);
    }
    *(void *)a2 = &unk_1ECABBFE0;
    if (*((unsigned char *)a2 + 56))
    {
      uint64_t v34 = *((unsigned int *)a2 + 12);
      if (v34 != -1) {
        this = ((uint64_t (*)(WGSL::AST::UnaryExpression **, char *))off_1ECABE880[v34])(&v44, v35);
      }
      *((_DWORD *)a2 + 12) = -1;
    }
    *(_OWORD *)((char *)a2 + 8) = *(_OWORD *)(v30 + 8);
    *((void *)a2 + 3) = 0;
    *((unsigned char *)a2 + 32) = 0;
    *((unsigned char *)a2 + 56) = 0;
    *(void *)a2 = off_1ECABD058;
    *((void *)a2 + 8) = v30;
    *((void *)a2 + 3) = *(void *)(v30 + 24);
  }
  return this;
}

void WGSL::rewritePointers(WGSL *this, WGSL::ShaderModule *a2)
{
  uint64_t v7 = 0;
  long long v4 = 0u;
  long long v3 = 0u;
  uint64_t v2 = &unk_1ECABB740;
  long long v5 = 0uLL;
  long long v6 = 0uLL;
  WGSL::ContextProvider<WGSL::Empty>::ContextScope::ContextScope((void *)&v6 + 1, &v5);
}

void WGSL::PointerRewriter::~PointerRewriter(WGSL::PointerRewriter *this, void *a2)
{
  *(void *)this = &unk_1ECABE600;
  long long v3 = (WTF *)*((void *)this + 12);
  if (v3)
  {
    *((void *)this + 12) = 0;
    *((_DWORD *)this + 26) = 0;
    WTF::fastFree(v3, a2);
  }
  WGSL::AST::ScopedVisitor<WGSL::Empty>::~ScopedVisitor((uint64_t)this, a2);
}

{
  WTF *v3;
  uint64_t vars8;

  *(void *)this = &unk_1ECABE600;
  long long v3 = (WTF *)*((void *)this + 12);
  if (v3)
  {
    *((void *)this + 12) = 0;
    *((_DWORD *)this + 26) = 0;
    WTF::fastFree(v3, a2);
  }
  WGSL::AST::ScopedVisitor<WGSL::Empty>::~ScopedVisitor((uint64_t)this, a2);
  JUMPOUT(0x18530AFF0);
}

void WGSL::AST::ScopedVisitor<WGSL::AST::Expression *>::visit(uint64_t a1)
{
  WGSL::ContextProvider<WGSL::Empty>::ContextScope::ContextScope(&v1, (void *)(a1 + 40));
}

{
  uint64_t v1;

  WGSL::ContextProvider<WGSL::Empty>::ContextScope::ContextScope(&v1, (void *)(a1 + 40));
}

void std::__function::__func<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1},std::allocator<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1}>,void ()(void)>::~__func()
{
}

__n128 std::__function::__func<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1},std::allocator<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1}>,void ()(void)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_1ECABE848;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1},std::allocator<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1}>,void ()(void)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1ECABE848;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void *std::__function::__func<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1},std::allocator<void WGSL::ShaderModule::remove<std::reference_wrapper<WGSL::AST::Statement>,0ul>(WTF::Vector<std::reference_wrapper<WGSL::AST::Statement>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&,unsigned long)::{lambda(void)#1}>,void ()(void)>::operator()(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  long long v3 = a1 + 3;
  uint64_t v4 = *(unsigned int *)(v1 + 12);
  if (v4 == *(_DWORD *)(v1 + 8))
  {
    long long v3 = (void *)WTF::Vector<WebGPU::BindGroupLayout::Entry const*,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a1[1], v4 + 1, (unint64_t)v3);
    LODWORD(v4) = *(_DWORD *)(v1 + 12);
  }
  long long v5 = (void *)(*(void *)v1 + 8 * v2);
  __n128 result = memmove(v5 + 1, v5, *(void *)v1 + 8 * v4 - (void)v5);
  void *v5 = *v3;
  ++*(_DWORD *)(v1 + 12);
  return result;
}

uint64_t _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEED1Ev(uint64_t a1)
{
  *(void *)a1 = &unk_1ECABE940;
  *(void *)(a1 + 80) = off_1ECABC030;
  uint64_t v2 = *(_DWORD **)(a1 + 104);
  *(void *)(a1 + 104) = 0;
  if (v2)
  {
    if (*v2 == 2)
    {
      WTF::StringImpl::destroy();
      *(void *)(a1 + 16) = &unk_1ECABBFE0;
      if (!*(unsigned char *)(a1 + 72)) {
        return a1;
      }
      goto LABEL_7;
    }
    *v2 -= 2;
  }
  *(void *)(a1 + 16) = &unk_1ECABBFE0;
  if (!*(unsigned char *)(a1 + 72)) {
    return a1;
  }
LABEL_7:
  uint64_t v4 = *(unsigned int *)(a1 + 64);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_1ECABE880[v4])(&v5, a1 + 48);
  }
  *(_DWORD *)(a1 + 64) = -1;
  return a1;
}

uint64_t _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEED0Ev(uint64_t a1)
{
  *(void *)a1 = &unk_1ECABE940;
  *(void *)(a1 + 80) = off_1ECABC030;
  uint64_t v2 = *(_DWORD **)(a1 + 104);
  *(void *)(a1 + 104) = 0;
  if (v2)
  {
    if (*v2 == 2)
    {
      WTF::StringImpl::destroy();
      *(void *)(a1 + 16) = &unk_1ECABBFE0;
      if (!*(unsigned char *)(a1 + 72)) {
        return MEMORY[0x18530AFF0](a1, 0x10F3C40895CAEE9);
      }
      goto LABEL_7;
    }
    *v2 -= 2;
  }
  *(void *)(a1 + 16) = &unk_1ECABBFE0;
  if (!*(unsigned char *)(a1 + 72)) {
    return MEMORY[0x18530AFF0](a1, 0x10F3C40895CAEE9);
  }
LABEL_7:
  uint64_t v3 = *(unsigned int *)(a1 + 64);
  if (v3 != -1) {
    ((void (*)(char *, uint64_t))off_1ECABE880[v3])(&v5, a1 + 48);
  }
  *(_DWORD *)(a1 + 64) = -1;
  return MEMORY[0x18530AFF0](a1, 0x10F3C40895CAEE9);
}

char *_ZNKSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEE7__cloneEv(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x70uLL);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)uint64_t v2 = &unk_1ECABE940;
  *((void *)v2 + 1) = v4;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  *((void *)v2 + 2) = &unk_1ECABBFE0;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  v2[48] = 0;
  v2[72] = 0;
  if (*(unsigned char *)(a1 + 72))
  {
    *((_DWORD *)v2 + 16) = -1;
    uint64_t v5 = *(unsigned int *)(a1 + 64);
    if (v5 != -1)
    {
      ((void (*)(char *, char *, uint64_t))off_1ECABE978[v5])(&v8, v2 + 48, a1 + 48);
      *((_DWORD *)v3 + 16) = v5;
    }
    v3[72] = 1;
  }
  *((void *)v3 + 2) = off_1ECABBFB8;
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a1 + 88);
  *((void *)v3 + 10) = off_1ECABC030;
  long long v6 = *(_DWORD **)(a1 + 104);
  if (v6) {
    *v6 += 2;
  }
  *((void *)v3 + 13) = v6;
  return v3;
}

uint64_t _ZNKSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEE7__cloneEPNS0_6__baseISJ_EE(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 8);
  *(void *)a2 = &unk_1ECABE940;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = &unk_1ECABC008;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
  *(void *)(a2 + 16) = &unk_1ECABBFE0;
  uint64_t v5 = *(void *)(result + 40);
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v6 = a2 + 48;
  *(void *)(v6 - 8) = v5;
  *(unsigned char *)(v6 + 24) = 0;
  if (*(unsigned char *)(result + 72))
  {
    *(_DWORD *)(a2 + 64) = -1;
    uint64_t v7 = *(unsigned int *)(result + 64);
    if (v7 != -1)
    {
      __n128 result = ((uint64_t (*)(char *))off_1ECABE978[v7])(&v9);
      *(_DWORD *)(a2 + 64) = v7;
    }
    *(unsigned char *)(a2 + 72) = 1;
  }
  *(void *)(a2 + 16) = off_1ECABBFB8;
  *(void *)(a2 + 80) = &unk_1ECABC008;
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(v3 + 88);
  *(void *)(a2 + 80) = off_1ECABC030;
  char v8 = *(_DWORD **)(v3 + 104);
  if (v8) {
    *v8 += 2;
  }
  *(void *)(a2 + 104) = v8;
  return result;
}

_DWORD *_ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEE7destroyEv(uint64_t a1)
{
  *(void *)(a1 + 80) = off_1ECABC030;
  __n128 result = *(_DWORD **)(a1 + 104);
  *(void *)(a1 + 104) = 0;
  if (result)
  {
    if (*result == 2)
    {
      __n128 result = (_DWORD *)WTF::StringImpl::destroy();
      *(void *)(a1 + 16) = &unk_1ECABBFE0;
      if (!*(unsigned char *)(a1 + 72)) {
        return result;
      }
      goto LABEL_7;
    }
    *result -= 2;
  }
  *(void *)(a1 + 16) = &unk_1ECABBFE0;
  if (!*(unsigned char *)(a1 + 72)) {
    return result;
  }
LABEL_7:
  uint64_t v3 = *(unsigned int *)(a1 + 64);
  if (v3 != -1) {
    __n128 result = (_DWORD *)((uint64_t (*)(char *, uint64_t))off_1ECABE880[v3])(&v4, a1 + 48);
  }
  *(_DWORD *)(a1 + 64) = -1;
  return result;
}

void _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEE18destroy_deallocateEv(void *__p)
{
  __p[10] = off_1ECABC030;
  uint64_t v2 = (_DWORD *)__p[13];
  __p[13] = 0;
  if (v2)
  {
    if (*v2 == 2)
    {
      WTF::StringImpl::destroy();
      __p[2] = &unk_1ECABBFE0;
      if (!*((unsigned char *)__p + 72)) {
        goto LABEL_5;
      }
      goto LABEL_7;
    }
    *v2 -= 2;
  }
  __p[2] = &unk_1ECABBFE0;
  if (!*((unsigned char *)__p + 72))
  {
LABEL_5:
    operator delete(__p);
    return;
  }
LABEL_7:
  uint64_t v3 = *((unsigned int *)__p + 16);
  if (v3 == -1) {
    goto LABEL_5;
  }
  ((void (*)(char *, void *))off_1ECABE880[v3])(&v4, __p + 6);
  operator delete(__p);
}

__n128 _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST20IdentifierExpressionENS5_18IdentityExpressionEEENS_9enable_ifIXaagestT_stT0_ntsr3stdE9is_same_vISA_NS5_10ExpressionEEEvE4typeERS9_RSA_EUlvE_NS_9allocatorISG_EEFvvEEclEv(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)uint64_t v2 = &unk_1ECABBFE0;
  if (*(unsigned char *)(v2 + 56))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 48);
    if (v3 == -1)
    {
      uint64_t v4 = v2;
    }
    else
    {
      ((void (*)(char *, uint64_t))off_1ECABE880[v3])(&v8, v2 + 32);
      uint64_t v4 = *(void *)(a1 + 8);
    }
    *(_DWORD *)(v2 + 48) = -1;
    uint64_t v2 = v4;
  }
  *(void *)uint64_t v2 = &unk_1ECABC008;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 24);
  *(void *)uint64_t v2 = &unk_1ECABBFE0;
  *(void *)(v2 + 24) = *(void *)(a1 + 40);
  *(unsigned char *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 56) = 0;
  if (*(unsigned char *)(a1 + 72))
  {
    *(_DWORD *)(v2 + 48) = -1;
    uint64_t v5 = *(unsigned int *)(a1 + 64);
    if (v5 != -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_1ECABE8D8[v5])(&v9, v2 + 32, a1 + 48);
      *(_DWORD *)(v2 + 48) = v5;
    }
    *(unsigned char *)(v2 + 56) = 1;
  }
  *(void *)uint64_t v2 = off_1ECABBFB8;
  *(void *)(v2 + 64) = &unk_1ECABC008;
  __n128 result = *(__n128 *)(a1 + 88);
  *(__n128 *)(v2 + 72) = result;
  *(void *)(v2 + 64) = off_1ECABC030;
  uint64_t v7 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = 0;
  *(void *)(v2 + 88) = v7;
  return result;
}

uint64_t _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEED1Ev(uint64_t a1)
{
  *(void *)a1 = &unk_1ECABE9E0;
  *(void *)(a1 + 16) = &unk_1ECABBFE0;
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 64);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_1ECABE880[v2])(&v4, a1 + 48);
    }
    *(_DWORD *)(a1 + 64) = -1;
  }
  return a1;
}

uint64_t _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEED0Ev(uint64_t a1)
{
  *(void *)a1 = &unk_1ECABE9E0;
  *(void *)(a1 + 16) = &unk_1ECABBFE0;
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 64);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_1ECABE880[v2])(&v4, a1 + 48);
    }
    *(_DWORD *)(a1 + 64) = -1;
  }
  return MEMORY[0x18530AFF0](a1, 0x10F3C40538DE310);
}

char *_ZNKSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEE7__cloneEv(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x60uLL);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)uint64_t v2 = &unk_1ECABE9E0;
  *((void *)v2 + 1) = v4;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  *((void *)v2 + 2) = &unk_1ECABBFE0;
  *((void *)v2 + 5) = *(void *)(a1 + 40);
  v2[48] = 0;
  v2[72] = 0;
  if (*(unsigned char *)(a1 + 72))
  {
    *((_DWORD *)v2 + 16) = -1;
    uint64_t v5 = *(unsigned int *)(a1 + 64);
    if (v5 != -1)
    {
      ((void (*)(char *, char *, uint64_t))off_1ECABE978[v5])(&v7, v2 + 48, a1 + 48);
      *((_DWORD *)v3 + 16) = v5;
    }
    v3[72] = 1;
  }
  *((void *)v3 + 2) = off_1ECABC248;
  *((void *)v3 + 10) = *(void *)(a1 + 80);
  v3[88] = *(unsigned char *)(a1 + 88);
  return v3;
}

uint64_t _ZNKSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEE7__cloneEPNS0_6__baseISI_EE(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 8);
  *(void *)a2 = &unk_1ECABE9E0;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = &unk_1ECABC008;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(result + 24);
  *(void *)(a2 + 16) = &unk_1ECABBFE0;
  uint64_t v5 = *(void *)(result + 40);
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v6 = a2 + 48;
  *(void *)(v6 - 8) = v5;
  *(unsigned char *)(v6 + 24) = 0;
  if (*(unsigned char *)(result + 72))
  {
    *(_DWORD *)(a2 + 64) = -1;
    uint64_t v7 = *(unsigned int *)(result + 64);
    if (v7 != -1)
    {
      __n128 result = ((uint64_t (*)(char *))off_1ECABE978[v7])(&v9);
      *(_DWORD *)(a2 + 64) = v7;
    }
    *(unsigned char *)(a2 + 72) = 1;
  }
  *(void *)(a2 + 16) = off_1ECABC248;
  uint64_t v8 = *(void *)(v3 + 80);
  *(unsigned char *)(a2 + 88) = *(unsigned char *)(v3 + 88);
  *(void *)(a2 + 80) = v8;
  return result;
}

uint64_t _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEE7destroyEv(uint64_t result)
{
  *(void *)(result + 16) = &unk_1ECABBFE0;
  if (*(unsigned char *)(result + 72))
  {
    uint64_t v1 = result;
    uint64_t v2 = *(unsigned int *)(result + 64);
    if (v2 != -1) {
      __n128 result = ((uint64_t (*)(char *, uint64_t))off_1ECABE880[v2])(&v3, result + 48);
    }
    *(_DWORD *)(v1 + 64) = -1;
  }
  return result;
}

void _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEE18destroy_deallocateEv(void *__p)
{
  __p[2] = &unk_1ECABBFE0;
  if (*((unsigned char *)__p + 72))
  {
    uint64_t v2 = *((unsigned int *)__p + 16);
    if (v2 != -1) {
      ((void (*)(char *, void *))off_1ECABE880[v2])(&v3, __p + 6);
    }
  }
  operator delete(__p);
}

uint64_t _ZNSt3__110__function6__funcIZN4WGSL12ShaderModule7replaceINS2_3AST15UnaryExpressionENS5_10ExpressionEEENS_9enable_ifIXooltstT_stT0_sr3stdE9is_same_vISA_S7_EEvE4typeERS9_RSA_EUlvE_NS_9allocatorISF_EEFvvEEclEv(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 8);
  *(void *)uint64_t v2 = &unk_1ECABBFE0;
  if (*(unsigned char *)(v2 + 56))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 48);
    if (v3 == -1)
    {
      uint64_t v4 = v2;
    }
    else
    {
      __n128 result = ((uint64_t (*)(char *, uint64_t))off_1ECABE880[v3])(&v7, v2 + 32);
      uint64_t v4 = *(void *)(v1 + 8);
    }
    *(_DWORD *)(v2 + 48) = -1;
    uint64_t v2 = v4;
  }
  *(void *)uint64_t v2 = &unk_1ECABC008;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(v1 + 24);
  *(void *)uint64_t v2 = &unk_1ECABBFE0;
  *(void *)(v2 + 24) = *(void *)(v1 + 40);
  *(unsigned char *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 56) = 0;
  if (*(unsigned char *)(v1 + 72))
  {
    *(_DWORD *)(v2 + 48) = -1;
    uint64_t v5 = *(unsigned int *)(v1 + 64);
    if (v5 != -1)
    {
      __n128 result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1ECABE8D8[v5])(&v8, v2 + 32, v1 + 48);
      *(_DWORD *)(v2 + 48) = v5;
    }
    *(unsigned char *)(v2 + 56) = 1;
  }
  *(void *)uint64_t v2 = off_1ECABC248;
  uint64_t v6 = *(void *)(v1 + 80);
  *(unsigned char *)(v2 + 72) = *(unsigned char *)(v1 + 88);
  *(void *)(v2 + 64) = v6;
  return result;
}

uint64_t WGSL::toString()
{
  return WTF::StringImpl::createWithoutCopyingNonEmpty();
}

#error "1825D0930: too big function (funcsize=0)"

WTF *WGSL::TypeChecker::introduceType(WGSL::TypeChecker *this, const WGSL::AST::Identifier *a2, const WGSL::Type *a3)
{
  LOBYTE(v7) = 1;
  *((void *)&v7 + 1) = a3;
  char v8 = 3;
  v9[0] = 0;
  char v11 = 0;
  __n128 result = WTF::HashMap<WTF::String,WGSL::Binding,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::Binding>,WTF::HashTableTraits>::add<WGSL::Binding const&>((uint64_t)v12, (uint64_t *)(*((void *)this + 5) + 8), (const WTF::StringImpl **)a2 + 3, &v7);
  int v6 = v12[16];
  if (v11 && v10 != -1) {
    __n128 result = (WTF *)((uint64_t (*)(unsigned char *, unsigned char *))off_1ECABEC60[v10])(v12, v9);
  }
  if (!v6)
  {
    LOBYTE(v7) = 39;
    return (WTF *)WGSL::TypeChecker::typeError<WTF::ASCIILiteral,WGSL::AST::Identifier const&,char>((uint64_t)this, (long long *)((char *)a2 + 8), (int8x16_t *)"redeclaration of '", 19, (uint64_t)a2, (char *)&v7);
  }
  return result;
}

void WGSL::TypeChecker::allocateSimpleConstructor<WGSL::Type const* (WGSL::TypeStore::*)(unsigned char,WGSL::Type const*),WGSL::TypeChecker::(WGSL::ShaderModule &)::$_2,int>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v10 = MEMORY[0x1E4F30960];
      *MEMORY[0x1E4F30960] += 2;
    }
    else
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      uint64_t v10 = v17;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
  unint64_t v13 = off_1ECABC030;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = v10;
  int v11 = *a5;
  unint64_t v12 = operator new(0x30uLL);
  *unint64_t v12 = &unk_1ECABF030;
  v12[1] = a1;
  v12[2] = WGSL::TypeStore::vectorType;
  v12[3] = 0;
  v12[4] = a4;
  *((_DWORD *)v12 + 10) = v11;
  uint64_t v19 = v12;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  WGSL::TypeStore::allocateType<WGSL::Types::TypeConstructor,WTF::ASCIILiteral &,std::function<WGSL::Type const* ()(WGSL::AST::ElaboratedTypeExpression &)>>();
}

void WGSL::TypeChecker::allocateSimpleConstructor<WGSL::Type const* (WGSL::TypeStore::*)(unsigned char,unsigned char,WGSL::Type const*),WGSL::TypeChecker::(WGSL::ShaderModule &)::$_3,int,int>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, int *a6)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v12 = MEMORY[0x1E4F30960];
      *MEMORY[0x1E4F30960] += 2;
    }
    else
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      uint64_t v12 = v20;
    }
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v16 = off_1ECABC030;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = v12;
  int v13 = *a5;
  int v14 = *a6;
  uint64_t v15 = operator new(0x30uLL);
  *uint64_t v15 = &unk_1ECABF078;
  v15[1] = a1;
  v15[2] = WGSL::TypeStore::matrixType;
  v15[3] = 0;
  v15[4] = a4;
  *((_DWORD *)v15 + 10) = v13;
  *((_DWORD *)v15 + 11) = v14;
  uint64_t v22 = v15;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  WGSL::TypeStore::allocateType<WGSL::Types::TypeConstructor,WTF::ASCIILiteral &,std::function<WGSL::Type const* ()(WGSL::AST::ElaboratedTypeExpression &)>>();
}

void WGSL::TypeChecker::allocateSimpleConstructor<WGSL::Type const* (WGSL::TypeStore::*)(WGSL::Types::Texture::Kind,WGSL::Type const*),WGSL::TypeChecker::(WGSL::ShaderModule &)::$_4,WGSL::Types::Texture::Kind>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v10 = MEMORY[0x1E4F30960];
      *MEMORY[0x1E4F30960] += 2;
    }
    else
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      uint64_t v10 = v17;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
  int v13 = off_1ECABC030;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = v10;
  char v11 = *a5;
  uint64_t v12 = operator new(0x30uLL);
  *uint64_t v12 = &unk_1ECABF0C0;
  v12[1] = a1;
  v12[2] = WGSL::TypeStore::textureType;
  v12[3] = 0;
  v12[4] = a4;
  *((unsigned char *)v12 + 40) = v11;
  uint64_t v19 = v12;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  WGSL::TypeStore::allocateType<WGSL::Types::TypeConstructor,WTF::ASCIILiteral &,std::function<WGSL::Type const* ()(WGSL::AST::ElaboratedTypeExpression &)>>();
}

void WGSL::TypeChecker::allocateTextureStorageConstructor(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  v15[4] = *MEMORY[0x1E4F143B8];
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v8 = MEMORY[0x1E4F30960];
      *MEMORY[0x1E4F30960] += 2;
    }
    else
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      uint64_t v8 = v13;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  char v9 = off_1ECABC030;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v8;
  v15[0] = &unk_1ECABF130;
  v15[1] = a1;
  v15[2] = a4;
  v15[3] = v15;
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  WGSL::TypeStore::allocateType<WGSL::Types::TypeConstructor,WTF::ASCIILiteral &,std::function<WGSL::Type const* ()(WGSL::AST::ElaboratedTypeExpression &)>>();
}

WTF *WGSL::TypeChecker::introduceValue(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  long long v7 = (const WTF::StringImpl **)(a2 + 24);
  LOBYTE(v11) = 0;
  *((void *)&v11 + 1) = a3;
  char v12 = a4;
  v13[0] = 0;
  char v15 = 0;
  if (*(unsigned char *)(a5 + 24))
  {
    int v14 = -1;
    uint64_t v8 = *(unsigned int *)(a5 + 16);
    if (v8 != -1)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))off_1ECABEE88[v8])(v16, v13, a5);
      int v14 = v8;
    }
    char v15 = 1;
  }
  __n128 result = WTF::HashMap<WTF::String,WGSL::Binding,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::Binding>,WTF::HashTableTraits>::add<WGSL::Binding const&>((uint64_t)v16, (uint64_t *)(*(void *)(a1 + 40) + 8), v7, &v11);
  int v10 = v16[16];
  if (v15 && v14 != -1) {
    __n128 result = (WTF *)((uint64_t (*)(unsigned char *, unsigned char *))off_1ECABEC60[v14])(v16, v13);
  }
  if (!v10)
  {
    LOBYTE(v11) = 39;
    return (WTF *)WGSL::TypeChecker::typeError<WTF::ASCIILiteral,WGSL::AST::Identifier const&,char>(a1, (long long *)(a2 + 8), (int8x16_t *)"redeclaration of '", 19, a2, (char *)&v11);
  }
  return result;
}

WTF *WTF::HashMap<WTF::String,WGSL::OverloadedDeclaration,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::OverloadedDeclaration>,WTF::HashTableTraits>::add<WGSL::OverloadedDeclaration>(uint64_t a1, uint64_t *a2, const WTF::StringImpl **a3, long long *a4)
{
  uint64_t v7 = *a2;
  if (!*a2)
  {
    WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::OverloadedDeclaration>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::OverloadedDeclaration>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::OverloadedDeclaration,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::OverloadedDeclaration>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>::rehash(a2, 8u, 0);
    uint64_t v7 = *a2;
    if (!*a2)
    {
      int v8 = 0;
      char v9 = *a3;
      unsigned int v10 = *((_DWORD *)*a3 + 4);
      if (v10 >= 0x100) {
        goto LABEL_4;
      }
LABEL_6:
      unsigned int v11 = WTF::StringImpl::hashSlowCase(v9);
      goto LABEL_7;
    }
  }
  int v8 = *(_DWORD *)(v7 - 8);
  char v9 = *a3;
  unsigned int v10 = *((_DWORD *)*a3 + 4);
  if (v10 < 0x100) {
    goto LABEL_6;
  }
LABEL_4:
  unsigned int v11 = v10 >> 8;
LABEL_7:
  char v12 = 0;
  for (int i = 1; ; ++i)
  {
    unsigned int v14 = v11 & v8;
    char v15 = (WTF *)(v7 + 48 * (v11 & v8));
    uint64_t v16 = *(WTF **)v15;
    if (*(void *)v15 == -1)
    {
      char v12 = (WTF *)(v7 + 48 * v14);
      goto LABEL_9;
    }
    if (!v16)
    {
      if (v12)
      {
        *((_OWORD *)v12 + 1) = 0u;
        *((_OWORD *)v12 + 2) = 0u;
        *(_OWORD *)char v12 = 0u;
        --*(_DWORD *)(*a2 - 16);
        char v15 = v12;
      }
      uint64_t v20 = *a3;
      *a3 = 0;
      uint64_t v21 = *(WTF **)v15;
      *(void *)char v15 = v20;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2) {
          WTF::StringImpl::destroy();
        }
        else {
          *(_DWORD *)v21 -= 2;
        }
      }
      uint64_t v25 = *((void *)a4 + 3);
      uint64_t v26 = *((void *)a4 + 4);
      *((void *)a4 + 3) = 0;
      *((void *)a4 + 4) = 0;
      long long v27 = *a4;
      *((unsigned char *)v15 + 24) = *((unsigned char *)a4 + 16);
      *(_OWORD *)((char *)v15 + 8) = v27;
      unsigned int v28 = *((_DWORD *)v15 + 11);
      if (v28)
      {
        uint64_t v29 = (WGSL::OverloadCandidate *)*((void *)v15 + 4);
        uint64_t v30 = 88 * v28;
        do
        {
          WGSL::OverloadCandidate::~OverloadCandidate(v29, a2);
          uint64_t v29 = (WGSL::OverloadCandidate *)(v31 + 88);
          v30 -= 88;
        }
        while (v30);
      }
      __n128 result = (WTF *)*((void *)v15 + 4);
      if (result)
      {
        *((void *)v15 + 4) = 0;
        *((_DWORD *)v15 + 10) = 0;
        __n128 result = (WTF *)WTF::fastFree(result, a2);
      }
      *((void *)v15 + 4) = v25;
      *((void *)v15 + 5) = v26;
      if (*a2)
      {
        ++*(_DWORD *)(*a2 - 12);
        uint64_t v32 = *a2;
        if (*a2) {
          goto LABEL_30;
        }
      }
      else
      {
        MEMORY[0xFFFFFFFFFFFFFFF4] = 1;
        uint64_t v32 = *a2;
        if (*a2)
        {
LABEL_30:
          uint64_t v33 = (*(_DWORD *)(v32 - 16) + *(_DWORD *)(v32 - 12));
          unint64_t v34 = *(unsigned int *)(v32 - 4);
          if (v34 <= 0x400) {
            goto LABEL_31;
          }
          goto LABEL_37;
        }
      }
      uint64_t v33 = *(unsigned int *)(v32 - 16);
      unint64_t v34 = *(unsigned int *)(v32 - 4);
      if (v34 <= 0x400)
      {
LABEL_31:
        if (3 * v34 > 4 * v33)
        {
LABEL_40:
          uint64_t v22 = a1;
          uint64_t v24 = v32 + 48 * v34;
          char v23 = 1;
          goto LABEL_41;
        }
        if (!v34)
        {
          __n128 result = (WTF *)WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::OverloadedDeclaration>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::OverloadedDeclaration>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::OverloadedDeclaration,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::OverloadedDeclaration>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>::rehash(a2, 8u, (_DWORD **)v15);
          char v15 = result;
          uint64_t v32 = *a2;
          if (!*a2)
          {
LABEL_34:
            LODWORD(v34) = 0;
            goto LABEL_40;
          }
LABEL_39:
          LODWORD(v34) = *(_DWORD *)(v32 - 4);
          goto LABEL_40;
        }
LABEL_38:
        __n128 result = (WTF *)WTF::HashTable<WTF::String,WTF::KeyValuePair<WTF::String,WGSL::OverloadedDeclaration>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String,WGSL::OverloadedDeclaration>>,WTF::DefaultHash<WTF::String>,WTF::HashMap<WTF::String,WGSL::OverloadedDeclaration,WTF::DefaultHash<WTF::String>,WTF::HashTraits<WTF::String>,WTF::HashTraits<WGSL::OverloadedDeclaration>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::String>>::rehash(a2, v34 << (6 * *(_DWORD *)(v32 - 12) >= (2 * v34)), (_DWORD **)v15);
        char v15 = result;
        uint64_t v32 = *a2;
        if (!*a2) {
          goto LABEL_34;
        }
        goto LABEL_39;
      }
LABEL_37:
      if (v34 > 2 * v33) {
        goto LABEL_40;
      }
      goto LABEL_38;
    }
    __n128 result = (WTF *)WTF::equal(v16, *a3, (const WTF::StringImpl *)a3);
    if (result) {
      break;
    }
LABEL_9:
    unsigned int v11 = i + v14;
  }
  uint64_t v18 = *a2;
  if (*a2) {
    unsigned int v19 = *(_DWORD *)(v18 - 4);
  }
  else {
    unsigned int v19 = 0;
  }
  uint64_t v22 = a1;
  char v23 = 0;
  uint64_t v24 = v18 + 48 * v19;
LABEL_41:
  *(void *)uint64_t v22 = v15;
  *(void *)(v22 + 8) = v24;
  *(unsigned char *)(v22 + 16) = v23;
  return result;
}

uint64_t WGSL::constantNot@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182670410);
  }
  LOBYTE(v40[0]) = 0;
  unsigned int v41 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_53;
  }
  uint64_t v5 = off_1ECABEE88[v4];
  ((void (*)(unsigned int **, void *, _DWORD *))v5)(&v35, v40, v3 + 2);
  unsigned int v41 = v4;
  LOBYTE(v35) = 0;
  int v37 = -1;
  ((void (*)(_DWORD *, unsigned int **, void *))v5)(v32, &v35, v40);
  unsigned int v6 = 0;
  int v37 = v4;
  if (v4 == 8)
  {
    if (v35) {
      unsigned int v6 = *v35;
    }
    else {
      unsigned int v6 = 0;
    }
  }
  uint64_t result = ((uint64_t (*)(_DWORD *, unsigned int **))off_1ECABEC60[v4])(v32, &v35);
  if (!v6)
  {
    if (v3[6] == 6)
    {
      *(unsigned char *)(a2 + 8) = *((unsigned char *)v3 + 8) ^ 1;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v30 = v41;
      if (v41 != -1) {
        return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v30])(&v35, v40);
      }
      return result;
    }
LABEL_53:
    __break(0xC471u);
    JUMPOUT(0x182670480);
  }
  uint64_t v31 = a2;
  uint64_t v8 = 24 * v6;
  char v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *char v9 = v6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v10 = 0;
  unint64_t v11 = 0;
  v32[0] = 0;
  int v33 = 0;
  do
  {
    if (v41 == 8)
    {
      if (v11 >= *(unsigned int *)v40[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1826703F0);
      }
      uint64_t v13 = *(unsigned int *)(v40[0] + v10 + 24);
      if (v33 == -1)
      {
        if (v13 == -1) {
          goto LABEL_24;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_19;
      }
      uint64_t v35 = v32;
      ((void (*)(unsigned int **, _DWORD *, unint64_t))off_1ECABEEE0[v13])(&v35, v32, v40[0] + v10 + 8);
    }
    else
    {
      if (v33 == -1)
      {
        if (v41 == -1) {
          goto LABEL_52;
        }
      }
      else if (v41 == -1)
      {
LABEL_19:
        ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v33])(&v35, v32);
        int v33 = -1;
LABEL_52:
        __break(0xC471u);
        JUMPOUT(0x182670460);
      }
      uint64_t v35 = v32;
      ((void (*)(unsigned int **, _DWORD *, void *))off_1ECABEEE0[v41])(&v35, v32, v40);
    }
LABEL_24:
    if (v33 != 6) {
      goto LABEL_52;
    }
    char v14 = LOBYTE(v32[0]) ^ 1;
    v36[0] = LOBYTE(v32[0]) ^ 1;
    int v38 = 6;
    unsigned int v39 = 0;
    if (v11 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1826703D0);
    }
    char v15 = &v9[v10 / 4];
    uint64_t v16 = &v9[v10 / 4 + 2];
    uint64_t v17 = v9[v10 / 4 + 6];
    if (v17 == 6)
    {
      uint64_t v12 = 0;
      *(unsigned char *)uint64_t v16 = v14;
LABEL_10:
      ((void (*)(char *, char *))off_1ECABED68[v12])(&v34, v36);
      goto LABEL_11;
    }
    if (v17 == -1)
    {
      uint64_t v12 = 0;
      *((unsigned char *)v15 + 8) = v14;
      v15[6] = 6;
      goto LABEL_10;
    }
    ((void (*)(char *, unsigned int *))off_1ECABEC60[v17])(&v34, v16);
    uint64_t v12 = v39;
    *((unsigned char *)v15 + 8) = v36[0];
    v15[6] = 6;
    if (v12 != -1) {
      goto LABEL_10;
    }
LABEL_11:
    ++v11;
    v10 += 24;
  }
  while (v8 != v10);
  uint64_t v18 = *v9;
  unsigned int v19 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v18 + 8));
  uint64_t v21 = v19;
  *unsigned int v19 = v18;
  if (v18)
  {
    uint64_t v22 = v19 + 6;
    uint64_t v23 = 24 * v18;
    uint64_t v24 = v9 + 6;
    do
    {
      *((unsigned char *)v22 - 16) = 0;
      uint64_t v20 = v22 - 4;
      *uint64_t v22 = -1;
      uint64_t v25 = *v24;
      if (v25 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v25])(&v35, v20, v24 - 4);
        *uint64_t v22 = v25;
      }
      v22 += 6;
      v24 += 6;
      v23 -= 24;
    }
    while (v23);
  }
  *(void *)(v31 + 8) = v21;
  *(_DWORD *)(v31 + 24) = 8;
  *(_DWORD *)(v31 + 32) = 0;
  if (v33 != -1) {
    ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v33])(&v35, v32);
  }
  uint64_t v26 = *v9;
  if (v26)
  {
    uint64_t v27 = 24 * v26;
    unsigned int v28 = v9 + 6;
    do
    {
      uint64_t v20 = v28 - 4;
      uint64_t v29 = *v28;
      if (v29 != -1) {
        ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v29])(&v35, v20);
      }
      _DWORD *v28 = -1;
      v28 += 6;
      v27 -= 24;
    }
    while (v27);
  }
  uint64_t result = WTF::fastFree((WTF *)v9, v20);
  uint64_t v30 = v41;
  if (v41 != -1) {
    return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v30])(&v35, v40);
  }
  return result;
}

void WGSL::constantOr(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x182670B70);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182670B90);
  }
  LOBYTE(v44[0]) = 0;
  int v45 = -1;
  uint64_t v5 = v3[6];
  if (v5 != -1)
  {
    ((void (*)(unsigned __int8 *, void *, int *))off_1ECABEE88[v5])(v35, v44, v3 + 2);
    int v45 = v5;
  }
  LOBYTE(v46[0]) = 0;
  unsigned int v47 = -1;
  uint64_t v6 = v3[12];
  if (v6 != -1)
  {
    ((void (*)(unsigned __int8 *, void *, int *))off_1ECABEE88[v6])(v35, v46, v3 + 8);
    unsigned int v47 = v6;
    LODWORD(v5) = v45;
  }
  v35[0] = 0;
  int v36 = -1;
  if (v5 != -1)
  {
    uint64_t v7 = v5;
    ((void (*)(unsigned __int8 **, unsigned __int8 *, void *))off_1ECABEE88[v5])(&v40, v35, v44);
    int v36 = v5;
    if (v5 == 8)
    {
      if (*(void *)v35) {
        unsigned int v8 = **(_DWORD **)v35;
      }
      else {
        unsigned int v8 = 0;
      }
      ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v7])(&v40, v35);
      if (!v8) {
        goto LABEL_73;
      }
      goto LABEL_18;
    }
    ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v5])(&v40, v35);
    LODWORD(v6) = v47;
  }
  v35[0] = 0;
  int v36 = -1;
  if (v6 != -1)
  {
    ((void (*)(unsigned __int8 **, unsigned __int8 *, void *))off_1ECABEE88[v6])(&v40, v35, v46);
    int v36 = v6;
    if (v6 == 8 && *(void *)v35) {
      unsigned int v8 = **(_DWORD **)v35;
    }
    else {
      unsigned int v8 = 0;
    }
    ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v6])(&v40, v35);
    if (v8)
    {
LABEL_18:
      uint64_t v34 = a2;
      uint64_t v9 = 24 * v8;
      unint64_t v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
      *unint64_t v10 = v8;
      bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
      unint64_t v11 = 0;
      unint64_t v12 = 0;
      *(_DWORD *)uint64_t v35 = 0;
      int v36 = 0;
      *(_DWORD *)int v37 = 0;
      int v38 = 0;
      while (1)
      {
        if (v45 == 8)
        {
          if (v12 >= *(unsigned int *)v44[0]) {
            goto LABEL_86;
          }
          uint64_t v14 = *(unsigned int *)(v44[0] + v11 + 24);
          if (v36 == -1)
          {
            if (v14 == -1) {
              goto LABEL_34;
            }
          }
          else if (v14 == -1)
          {
            goto LABEL_29;
          }
          int v40 = v35;
          ((void (*)(unsigned __int8 **, unsigned __int8 *, unint64_t))off_1ECABEEE0[v14])(&v40, v35, v44[0] + v11 + 8);
        }
        else
        {
          if (v36 == -1)
          {
            if (v45 == -1) {
              goto LABEL_34;
            }
          }
          else if (v45 == -1)
          {
LABEL_29:
            ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v36])(&v40, v35);
            int v36 = -1;
            goto LABEL_34;
          }
          int v40 = v35;
          ((void (*)(unsigned __int8 **, unsigned __int8 *, void *))off_1ECABEEE0[v45])(&v40, v35, v44);
        }
LABEL_34:
        int v15 = v47;
        if (v47 == 8)
        {
          if (v12 >= *(unsigned int *)v46[0]) {
            goto LABEL_86;
          }
          uint64_t v16 = *(unsigned int *)(v46[0] + v11 + 24);
          if (v38 != -1)
          {
            if (v16 == -1) {
              goto LABEL_41;
            }
LABEL_45:
            int v40 = v37;
            ((void (*)(unsigned __int8 **, unsigned __int8 *, unint64_t))off_1ECABEEE0[v16])(&v40, v37, v46[0] + v11 + 8);
            goto LABEL_46;
          }
          if (v16 != -1) {
            goto LABEL_45;
          }
        }
        else
        {
          if (v38 == -1)
          {
            if (v47 == -1) {
              goto LABEL_47;
            }
          }
          else if (v47 == -1)
          {
LABEL_41:
            ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v38])(&v40, v37);
            int v15 = -1;
            int v38 = -1;
            goto LABEL_47;
          }
          int v40 = v37;
          ((void (*)(unsigned __int8 **, unsigned __int8 *, void *))off_1ECABEEE0[v47])(&v40, v37, v46);
        }
LABEL_46:
        int v15 = v38;
LABEL_47:
        if (v36 != 6) {
          goto LABEL_85;
        }
        if (v15 != 6) {
          goto LABEL_84;
        }
        BOOL v17 = (v37[0] | v35[0]) != 0;
        v41[0] = v17;
        int v42 = 6;
        unsigned int v43 = 0;
        if (v12 >= *v10)
        {
          __break(0xC471u);
          JUMPOUT(0x182670B50);
        }
        uint64_t v18 = &v10[v11 / 4];
        unsigned int v19 = (BOOL *)&v10[v11 / 4 + 2];
        uint64_t v20 = v10[v11 / 4 + 6];
        if (v20 == 6)
        {
          uint64_t v13 = 0;
          *unsigned int v19 = v17;
        }
        else if (v20 == -1)
        {
          uint64_t v13 = 0;
          *((unsigned char *)v18 + 8) = v17;
          v18[6] = 6;
        }
        else
        {
          ((void (*)(char *, BOOL *))off_1ECABEC60[v20])(&v39, v19);
          uint64_t v13 = v43;
          *((unsigned char *)v18 + 8) = v41[0];
          v18[6] = 6;
          if (v13 == -1) {
            goto LABEL_21;
          }
        }
        ((void (*)(char *, BOOL *))off_1ECABED68[v13])(&v39, v41);
LABEL_21:
        ++v12;
        v11 += 24;
        if (v9 == v11)
        {
          uint64_t v21 = *v10;
          uint64_t v22 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v21 + 8));
          uint64_t v24 = v22;
          *uint64_t v22 = v21;
          if (v21)
          {
            uint64_t v25 = v22 + 6;
            uint64_t v26 = 24 * v21;
            uint64_t v27 = v10 + 6;
            do
            {
              *((unsigned char *)v25 - 16) = 0;
              uint64_t v23 = v25 - 4;
              _DWORD *v25 = -1;
              uint64_t v28 = *v27;
              if (v28 != -1)
              {
                ((void (*)(unsigned __int8 **, _DWORD *, unsigned int *))off_1ECABEE88[v28])(&v40, v23, v27 - 4);
                _DWORD *v25 = v28;
              }
              v25 += 6;
              v27 += 6;
              v26 -= 24;
            }
            while (v26);
          }
          *(void *)(v34 + 8) = v24;
          *(_DWORD *)(v34 + 24) = 8;
          *(_DWORD *)(v34 + 32) = 0;
          if (v38 != -1) {
            ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v38])(&v40, v37);
          }
          int v38 = -1;
          if (v36 != -1) {
            ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v36])(&v40, v35);
          }
          uint64_t v29 = *v10;
          if (v29)
          {
            uint64_t v30 = 24 * v29;
            uint64_t v31 = v10 + 6;
            do
            {
              uint64_t v23 = v31 - 4;
              uint64_t v32 = *v31;
              if (v32 != -1) {
                ((void (*)(unsigned __int8 *, _DWORD *))off_1ECABEC60[v32])(v35, v23);
              }
              *uint64_t v31 = -1;
              v31 += 6;
              v30 -= 24;
            }
            while (v30);
          }
          WTF::fastFree((WTF *)v10, v23);
          uint64_t v33 = v47;
          if (v47 == -1) {
            goto LABEL_77;
          }
LABEL_76:
          ((void (*)(unsigned __int8 *, void *))off_1ECABEC60[v33])(v35, v46);
          goto LABEL_77;
        }
      }
    }
  }
LABEL_73:
  if (v3[6] != 6)
  {
LABEL_86:
    __break(0xC471u);
    JUMPOUT(0x182670B30);
  }
  if (v3[12] != 6)
  {
LABEL_84:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_85:
    __break(0xC471u);
    JUMPOUT(0x182670BB4);
  }
  *(unsigned char *)(a2 + 8) = (*((unsigned __int8 *)v3 + 8) | *((unsigned __int8 *)v3 + 32)) != 0;
  *(_DWORD *)(a2 + 24) = 6;
  *(_DWORD *)(a2 + 32) = 0;
  uint64_t v33 = v47;
  if (v47 != -1) {
    goto LABEL_76;
  }
LABEL_77:
  unsigned int v47 = -1;
  if (v45 != -1) {
    ((void (*)(unsigned __int8 *, void *))off_1ECABEC60[v45])(v35, v44);
  }
}

void WGSL::constantAnd(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x1826712C4);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826712E4);
  }
  LOBYTE(v47[0]) = 0;
  int v48 = -1;
  uint64_t v5 = v3[6];
  if (v5 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v5])(v38, v47, v3 + 2);
    int v48 = v5;
  }
  LOBYTE(v49[0]) = 0;
  unsigned int v50 = -1;
  uint64_t v6 = v3[12];
  if (v6 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v6])(v38, v49, v3 + 8);
    unsigned int v50 = v6;
    LODWORD(v5) = v48;
  }
  LOBYTE(v38[0]) = 0;
  int v39 = -1;
  if (v5 != -1)
  {
    uint64_t v7 = v5;
    ((void (*)(unsigned __int8 **, void *, void *))off_1ECABEE88[v5])(&v43, v38, v47);
    int v39 = v5;
    if (v5 == 8)
    {
      if (v38[0]) {
        unsigned int v8 = *(_DWORD *)v38[0];
      }
      else {
        unsigned int v8 = 0;
      }
      ((void (*)(unsigned __int8 **, void *))off_1ECABEC60[v7])(&v43, v38);
      if (!v8) {
        goto LABEL_79;
      }
      goto LABEL_18;
    }
    ((void (*)(unsigned __int8 **, void *))off_1ECABEC60[v5])(&v43, v38);
    LODWORD(v6) = v50;
  }
  LOBYTE(v38[0]) = 0;
  int v39 = -1;
  if (v6 != -1)
  {
    ((void (*)(unsigned __int8 **, void *, void *))off_1ECABEE88[v6])(&v43, v38, v49);
    int v39 = v6;
    if (v6 == 8 && v38[0]) {
      unsigned int v8 = *(_DWORD *)v38[0];
    }
    else {
      unsigned int v8 = 0;
    }
    ((void (*)(unsigned __int8 **, void *))off_1ECABEC60[v6])(&v43, v38);
    if (v8)
    {
LABEL_18:
      uint64_t v37 = a2;
      uint64_t v9 = 24 * v8;
      unint64_t v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
      *unint64_t v10 = v8;
      bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
      unint64_t v11 = 0;
      unint64_t v12 = 0;
      LODWORD(v38[0]) = 0;
      int v39 = 0;
      *(_DWORD *)int v40 = 0;
      int v41 = 0;
      while (1)
      {
        if (v48 == 8)
        {
          if (v12 >= *(unsigned int *)v47[0]) {
            goto LABEL_98;
          }
          uint64_t v14 = *(unsigned int *)(v47[0] + v11 + 24);
          if (v39 == -1)
          {
            if (v14 == -1) {
              goto LABEL_34;
            }
          }
          else if (v14 == -1)
          {
            goto LABEL_29;
          }
          unsigned int v43 = (unsigned __int8 *)v38;
          ((void (*)(unsigned __int8 **, void *, unint64_t))off_1ECABEEE0[v14])(&v43, v38, v47[0] + v11 + 8);
        }
        else
        {
          if (v39 == -1)
          {
            if (v48 == -1) {
              goto LABEL_34;
            }
          }
          else if (v48 == -1)
          {
LABEL_29:
            ((void (*)(unsigned __int8 **, void *))off_1ECABEC60[v39])(&v43, v38);
            int v39 = -1;
            goto LABEL_34;
          }
          unsigned int v43 = (unsigned __int8 *)v38;
          ((void (*)(unsigned __int8 **, void *, void *))off_1ECABEEE0[v48])(&v43, v38, v47);
        }
LABEL_34:
        int v15 = v50;
        if (v50 == 8)
        {
          if (v12 >= *(unsigned int *)v49[0]) {
            goto LABEL_98;
          }
          uint64_t v16 = *(unsigned int *)(v49[0] + v11 + 24);
          if (v41 != -1)
          {
            if (v16 == -1) {
              goto LABEL_41;
            }
LABEL_45:
            unsigned int v43 = v40;
            ((void (*)(unsigned __int8 **, unsigned __int8 *, unint64_t))off_1ECABEEE0[v16])(&v43, v40, v49[0] + v11 + 8);
            goto LABEL_46;
          }
          if (v16 != -1) {
            goto LABEL_45;
          }
        }
        else
        {
          if (v41 == -1)
          {
            if (v50 == -1) {
              goto LABEL_47;
            }
          }
          else if (v50 == -1)
          {
LABEL_41:
            ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v41])(&v43, v40);
            int v15 = -1;
            int v41 = -1;
            goto LABEL_47;
          }
          unsigned int v43 = v40;
          ((void (*)(unsigned __int8 **, unsigned __int8 *, void *))off_1ECABEEE0[v50])(&v43, v40, v49);
        }
LABEL_46:
        int v15 = v41;
LABEL_47:
        if (v39 != 6) {
          goto LABEL_97;
        }
        if (v15 != 6) {
          goto LABEL_96;
        }
        if (LOBYTE(v38[0])) {
          BOOL v17 = v40[0] == 0;
        }
        else {
          BOOL v17 = 1;
        }
        char v18 = !v17;
        v44[0] = v18;
        int v45 = 6;
        unsigned int v46 = 0;
        if (v12 >= *v10)
        {
          __break(0xC471u);
          JUMPOUT(0x1826712A4);
        }
        unsigned int v19 = &v10[v11 / 4];
        uint64_t v20 = (char *)&v10[v11 / 4 + 2];
        uint64_t v21 = v10[v11 / 4 + 6];
        if (v21 == 6)
        {
          uint64_t v13 = 0;
          *uint64_t v20 = v18;
        }
        else if (v21 == -1)
        {
          uint64_t v13 = 0;
          *((unsigned char *)v19 + 8) = v18;
          v19[6] = 6;
        }
        else
        {
          ((void (*)(char *, char *))off_1ECABEC60[v21])(&v42, v20);
          uint64_t v13 = v46;
          *((unsigned char *)v19 + 8) = v44[0];
          v19[6] = 6;
          if (v13 == -1) {
            goto LABEL_21;
          }
        }
        ((void (*)(char *, char *))off_1ECABED68[v13])(&v42, v44);
LABEL_21:
        ++v12;
        v11 += 24;
        if (v9 == v11)
        {
          uint64_t v22 = *v10;
          uint64_t v23 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v22 + 8));
          uint64_t v25 = v23;
          *uint64_t v23 = v22;
          if (v22)
          {
            uint64_t v26 = v23 + 6;
            uint64_t v27 = 24 * v22;
            uint64_t v28 = v10 + 6;
            do
            {
              *((unsigned char *)v26 - 16) = 0;
              uint64_t v24 = v26 - 4;
              *uint64_t v26 = -1;
              uint64_t v29 = *v28;
              if (v29 != -1)
              {
                ((void (*)(unsigned __int8 **, _DWORD *, unsigned int *))off_1ECABEE88[v29])(&v43, v24, v28 - 4);
                *uint64_t v26 = v29;
              }
              v26 += 6;
              v28 += 6;
              v27 -= 24;
            }
            while (v27);
          }
          *(void *)(v37 + 8) = v25;
          *(_DWORD *)(v37 + 24) = 8;
          *(_DWORD *)(v37 + 32) = 0;
          if (v41 != -1) {
            ((void (*)(unsigned __int8 **, unsigned __int8 *))off_1ECABEC60[v41])(&v43, v40);
          }
          int v41 = -1;
          if (v39 != -1) {
            ((void (*)(unsigned __int8 **, void *))off_1ECABEC60[v39])(&v43, v38);
          }
          uint64_t v30 = *v10;
          if (v30)
          {
            uint64_t v31 = 24 * v30;
            uint64_t v32 = v10 + 6;
            do
            {
              uint64_t v24 = v32 - 4;
              uint64_t v33 = *v32;
              if (v33 != -1) {
                ((void (*)(void *, _DWORD *))off_1ECABEC60[v33])(v38, v24);
              }
              _DWORD *v32 = -1;
              v32 += 6;
              v31 -= 24;
            }
            while (v31);
          }
          WTF::fastFree((WTF *)v10, v24);
          uint64_t v34 = v50;
          if (v50 == -1) {
            goto LABEL_89;
          }
LABEL_88:
          ((void (*)(void *, void *))off_1ECABEC60[v34])(v38, v49);
          goto LABEL_89;
        }
      }
    }
  }
LABEL_79:
  if (v3[6] != 6)
  {
LABEL_98:
    __break(0xC471u);
    JUMPOUT(0x182671284);
  }
  if (v3[12] != 6)
  {
LABEL_96:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_97:
    __break(0xC471u);
    JUMPOUT(0x182671308);
  }
  if (*((unsigned char *)v3 + 32)) {
    BOOL v35 = *((unsigned char *)v3 + 8) == 0;
  }
  else {
    BOOL v35 = 1;
  }
  char v36 = !v35;
  *(unsigned char *)(a2 + 8) = v36;
  *(_DWORD *)(a2 + 24) = 6;
  *(_DWORD *)(a2 + 32) = 0;
  uint64_t v34 = v50;
  if (v50 != -1) {
    goto LABEL_88;
  }
LABEL_89:
  unsigned int v50 = -1;
  if (v48 != -1) {
    ((void (*)(void *, void *))off_1ECABEC60[v48])(v38, v47);
  }
}

uint64_t WGSL::constantBitwiseOr@<X0>(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  int v3 = **a1;
  if (!v3)
  {
    __break(0xC471u);
    JUMPOUT(0x182671BB4);
  }
  if (v3 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182671BD4);
  }
  int v4 = v2 + 2;
  LOBYTE(v53[0]) = 0;
  int v54 = -1;
  uint64_t v5 = v2[6];
  if (v5 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v5])(v44, v53, v2 + 2);
    int v54 = v5;
  }
  uint64_t v6 = v2 + 8;
  LOBYTE(v55[0]) = 0;
  unsigned int v56 = -1;
  uint64_t v7 = v2[12];
  if (v7 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v7])(v44, v55, v2 + 8);
    unsigned int v56 = v7;
    LODWORD(v5) = v54;
  }
  LOBYTE(v44[0]) = 0;
  unsigned int v45 = -1;
  if (v5 == -1)
  {
LABEL_12:
    LOBYTE(v44[0]) = 0;
    unsigned int v45 = -1;
    if (v7 == -1
      || ((((void (*)(void **, void *, void *))off_1ECABEE88[v7])(&v49, v44, v55),
           unsigned int v45 = v7,
           v7 != 8)
       || !v44[0]
        ? (unsigned int v9 = 0)
        : (unsigned int v9 = *(_DWORD *)v44[0]),
          ((void (*)(void **, void *))off_1ECABEC60[v7])(&v49, v44),
          !v9))
    {
LABEL_88:
      uint64_t v40 = v2[6];
      switch((int)v40)
      {
        case 3:
          if (v2[12] != 3) {
            goto LABEL_108;
          }
          goto LABEL_94;
        case 4:
          if (v2[12] != 4) {
            goto LABEL_108;
          }
LABEL_94:
          LODWORD(v44[0]) = *v6 | *v4;
          break;
        case 5:
          if (v2[12] != 5) {
            goto LABEL_108;
          }
          v44[0] = *(void *)v6 | *(void *)v4;
          break;
        case 6:
          if (v2[12] != 6) {
            goto LABEL_108;
          }
          LOBYTE(v44[0]) = *(unsigned char *)v6 | *(unsigned char *)v4;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x182671C1CLL);
      }
      unsigned int v45 = v40;
      *(unsigned char *)(a2 + 8) = 0;
      *(_DWORD *)(a2 + 24) = -1;
      uint64_t result = ((uint64_t (*)(void **, uint64_t, void *))off_1ECABECB8[v40])(&v49, a2 + 8, v44);
      *(_DWORD *)(a2 + 24) = v40;
      *(_DWORD *)(a2 + 32) = 0;
      if (v45 != -1) {
        uint64_t result = ((uint64_t (*)(void **, void *))off_1ECABEC60[v45])(&v49, v44);
      }
      uint64_t v39 = v56;
      if (v56 == -1) {
        goto LABEL_101;
      }
LABEL_100:
      uint64_t result = ((uint64_t (*)(void *, void *))off_1ECABEC60[v39])(v44, v55);
      goto LABEL_101;
    }
    goto LABEL_18;
  }
  uint64_t v8 = v5;
  ((void (*)(void **, void *, void *))off_1ECABEE88[v5])(&v49, v44, v53);
  unsigned int v45 = v5;
  if (v5 != 8)
  {
    ((void (*)(void **, void *))off_1ECABEC60[v5])(&v49, v44);
    LODWORD(v7) = v56;
    goto LABEL_12;
  }
  if (v44[0]) {
    unsigned int v9 = *(_DWORD *)v44[0];
  }
  else {
    unsigned int v9 = 0;
  }
  ((void (*)(void **, void *))off_1ECABEC60[v8])(&v49, v44);
  if (!v9) {
    goto LABEL_88;
  }
LABEL_18:
  uint64_t v10 = v9;
  uint64_t v11 = 24 * v9;
  unint64_t v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *unint64_t v12 = v9;
  uint64_t v13 = v12 + 2;
  uint64_t v14 = 24;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v16 = 0;
  LODWORD(v44[0]) = 0;
  unsigned int v45 = 0;
  LODWORD(v46[0]) = 0;
  unsigned int v47 = 0;
  do
  {
    if (v54 == 8)
    {
      if (v16 >= *(unsigned int *)v53[0]) {
        goto LABEL_104;
      }
      uint64_t v15 = v53[0] + v14 - 16;
      uint64_t v17 = *(unsigned int *)(v53[0] + v14);
      uint64_t v18 = v45;
      if (v45 == -1)
      {
        if (v17 == -1) {
          goto LABEL_31;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_26;
      }
      int v49 = v44;
      ((void (*)(void **, void *, uint64_t))off_1ECABEEE0[v17])(&v49, v44, v15);
    }
    else
    {
      uint64_t v18 = v45;
      if (v45 == -1)
      {
        if (v54 == -1) {
          goto LABEL_31;
        }
      }
      else if (v54 == -1)
      {
LABEL_26:
        ((void (*)(void **, void *, uint64_t))off_1ECABEC60[v18])(&v49, v44, v15);
        unsigned int v45 = -1;
        goto LABEL_31;
      }
      int v49 = v44;
      ((void (*)(void **, void *, void *))off_1ECABEEE0[v54])(&v49, v44, v53);
    }
LABEL_31:
    if (v56 == 8)
    {
      if (v16 >= *(unsigned int *)v55[0])
      {
LABEL_104:
        __break(0xC471u);
        JUMPOUT(0x182671B74);
      }
      uint64_t v15 = v55[0] + v14 - 16;
      uint64_t v19 = *(unsigned int *)(v55[0] + v14);
      uint64_t v20 = v47;
      if (v47 == -1)
      {
        if (v19 == -1) {
          goto LABEL_43;
        }
      }
      else if (v19 == -1)
      {
        goto LABEL_38;
      }
      int v49 = v46;
      ((void (*)(void **, void *, uint64_t))off_1ECABEEE0[v19])(&v49, v46, v15);
    }
    else
    {
      uint64_t v20 = v47;
      if (v47 == -1)
      {
        if (v56 == -1) {
          goto LABEL_43;
        }
      }
      else if (v56 == -1)
      {
LABEL_38:
        ((void (*)(void **, void *, uint64_t))off_1ECABEC60[v20])(&v49, v46, v15);
        unsigned int v47 = -1;
        goto LABEL_43;
      }
      int v49 = v46;
      ((void (*)(void **, void *, void *))off_1ECABEEE0[v56])(&v49, v46, v55);
    }
LABEL_43:
    unsigned int v21 = v45;
    switch(v45)
    {
      case 3u:
        if (v47 != 3) {
          goto LABEL_108;
        }
        goto LABEL_47;
      case 4u:
        if (v47 != 4) {
          goto LABEL_108;
        }
LABEL_47:
        LODWORD(v42[0]) = LODWORD(v46[0]) | LODWORD(v44[0]);
        break;
      case 5u:
        if (v47 != 5) {
          goto LABEL_108;
        }
        v42[0] = v46[0] | v44[0];
        break;
      case 6u:
        if (v47 != 6) {
          goto LABEL_108;
        }
        LOBYTE(v42[0]) = LOBYTE(v46[0]) | LOBYTE(v44[0]);
        break;
      default:
        goto LABEL_109;
    }
    unsigned int v43 = v45;
    LOBYTE(v50[0]) = 0;
    int v51 = -1;
    ((void (*)(char *, void *, void *))off_1ECABECB8[v45])(&v48, v50, v42);
    int v51 = v21;
    unsigned int v52 = 0;
    if (v43 == -1 || (((void (*)(char *, void *))off_1ECABEC60[v43])(&v48, v42), !v52))
    {
      if (v16 >= *v12)
      {
        __break(0xC471u);
        JUMPOUT(0x182671B94);
      }
      uint64_t v26 = v12[(unint64_t)v14 / 4];
      if (v26 == -1)
      {
        if (v51 == -1) {
          goto LABEL_65;
        }
      }
      else if (v51 == -1)
      {
        ((void (*)(void *, unsigned int *))off_1ECABEC60[v26])(v42, v13);
        v12[(unint64_t)v14 / 4] = -1;
        goto LABEL_65;
      }
      v42[0] = v13;
      ((void (*)(void *, unsigned int *, void *))off_1ECABEF38[v51])(v42, v13, v50);
LABEL_65:
      char v24 = 1;
      uint64_t v25 = v52;
      if (v52 == -1) {
        goto LABEL_67;
      }
LABEL_66:
      ((void (*)(void *, void *))off_1ECABED68[v25])(v42, v50);
      goto LABEL_67;
    }
    if (v52 != 1)
    {
LABEL_108:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_109:
      __break(0xC471u);
      JUMPOUT(0x182671BF8);
    }
    uint64_t v23 = v50[0];
    if (v50[0]) {
      *(_DWORD *)v50[0] += 2;
    }
    char v24 = 0;
    *(void *)(a2 + 8) = v23;
    *(_DWORD *)(a2 + 32) = 1;
    uint64_t v25 = v52;
    if (v52 != -1) {
      goto LABEL_66;
    }
LABEL_67:
    if ((v24 & 1) == 0) {
      goto LABEL_75;
    }
    ++v16;
    v13 += 6;
    v14 += 24;
  }
  while (v10 != v16);
  uint64_t v27 = *v12;
  uint64_t v28 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v27 + 8));
  uint64_t v29 = v28;
  _DWORD *v28 = v27;
  if (v27)
  {
    uint64_t v30 = v28 + 6;
    uint64_t v31 = 24 * v27;
    uint64_t v32 = v12 + 6;
    do
    {
      *((unsigned char *)v30 - 16) = 0;
      uint64_t v22 = v30 - 4;
      *uint64_t v30 = -1;
      uint64_t v33 = *v32;
      if (v33 != -1)
      {
        ((void (*)(void **, _DWORD *, unsigned int *))off_1ECABEE88[v33])(&v49, v22, v32 - 4);
        *uint64_t v30 = v33;
      }
      v30 += 6;
      v32 += 6;
      v31 -= 24;
    }
    while (v31);
  }
  *(void *)(a2 + 8) = v29;
  *(_DWORD *)(a2 + 24) = 8;
  *(_DWORD *)(a2 + 32) = 0;
LABEL_75:
  if (v47 != -1) {
    ((void (*)(void **, void *))off_1ECABEC60[v47])(&v49, v46);
  }
  unsigned int v47 = -1;
  if (v45 != -1) {
    ((void (*)(void **, void *))off_1ECABEC60[v45])(&v49, v44);
  }
  uint64_t v34 = *v12;
  if (v34)
  {
    uint64_t v35 = 24 * v34;
    char v36 = v12 + 6;
    do
    {
      uint64_t v22 = v36 - 4;
      uint64_t v37 = *v36;
      if (v37 != -1) {
        ((void (*)(void *, _DWORD *))off_1ECABEC60[v37])(v44, v22);
      }
      *char v36 = -1;
      v36 += 6;
      v35 -= 24;
    }
    while (v35);
  }
  uint64_t result = WTF::fastFree((WTF *)v12, v22);
  uint64_t v39 = v56;
  if (v56 != -1) {
    goto LABEL_100;
  }
LABEL_101:
  unsigned int v56 = -1;
  if (v54 != -1) {
    return ((uint64_t (*)(void *, void *))off_1ECABEC60[v54])(v44, v53);
  }
  return result;
}

uint64_t WGSL::constantBitwiseAnd@<X0>(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  int v3 = **a1;
  if (!v3)
  {
    __break(0xC471u);
    JUMPOUT(0x1826724C4);
  }
  if (v3 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826724E4);
  }
  int v4 = v2 + 2;
  LOBYTE(v53[0]) = 0;
  int v54 = -1;
  uint64_t v5 = v2[6];
  if (v5 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v5])(v44, v53, v2 + 2);
    int v54 = v5;
  }
  uint64_t v6 = v2 + 8;
  LOBYTE(v55[0]) = 0;
  unsigned int v56 = -1;
  uint64_t v7 = v2[12];
  if (v7 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v7])(v44, v55, v2 + 8);
    unsigned int v56 = v7;
    LODWORD(v5) = v54;
  }
  LOBYTE(v44[0]) = 0;
  unsigned int v45 = -1;
  if (v5 == -1)
  {
LABEL_12:
    LOBYTE(v44[0]) = 0;
    unsigned int v45 = -1;
    if (v7 == -1
      || ((((void (*)(void **, void *, void *))off_1ECABEE88[v7])(&v49, v44, v55),
           unsigned int v45 = v7,
           v7 != 8)
       || !v44[0]
        ? (unsigned int v9 = 0)
        : (unsigned int v9 = *(_DWORD *)v44[0]),
          ((void (*)(void **, void *))off_1ECABEC60[v7])(&v49, v44),
          !v9))
    {
LABEL_88:
      uint64_t v40 = v2[6];
      switch((int)v40)
      {
        case 3:
          if (v2[12] != 3) {
            goto LABEL_108;
          }
          goto LABEL_94;
        case 4:
          if (v2[12] != 4) {
            goto LABEL_108;
          }
LABEL_94:
          LODWORD(v44[0]) = *v6 & *v4;
          break;
        case 5:
          if (v2[12] != 5) {
            goto LABEL_108;
          }
          v44[0] = *(void *)v6 & *(void *)v4;
          break;
        case 6:
          if (v2[12] != 6) {
            goto LABEL_108;
          }
          LOBYTE(v44[0]) = *(unsigned char *)v6 & *(unsigned char *)v4;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x18267252CLL);
      }
      unsigned int v45 = v40;
      *(unsigned char *)(a2 + 8) = 0;
      *(_DWORD *)(a2 + 24) = -1;
      uint64_t result = ((uint64_t (*)(void **, uint64_t, void *))off_1ECABECB8[v40])(&v49, a2 + 8, v44);
      *(_DWORD *)(a2 + 24) = v40;
      *(_DWORD *)(a2 + 32) = 0;
      if (v45 != -1) {
        uint64_t result = ((uint64_t (*)(void **, void *))off_1ECABEC60[v45])(&v49, v44);
      }
      uint64_t v39 = v56;
      if (v56 == -1) {
        goto LABEL_101;
      }
LABEL_100:
      uint64_t result = ((uint64_t (*)(void *, void *))off_1ECABEC60[v39])(v44, v55);
      goto LABEL_101;
    }
    goto LABEL_18;
  }
  uint64_t v8 = v5;
  ((void (*)(void **, void *, void *))off_1ECABEE88[v5])(&v49, v44, v53);
  unsigned int v45 = v5;
  if (v5 != 8)
  {
    ((void (*)(void **, void *))off_1ECABEC60[v5])(&v49, v44);
    LODWORD(v7) = v56;
    goto LABEL_12;
  }
  if (v44[0]) {
    unsigned int v9 = *(_DWORD *)v44[0];
  }
  else {
    unsigned int v9 = 0;
  }
  ((void (*)(void **, void *))off_1ECABEC60[v8])(&v49, v44);
  if (!v9) {
    goto LABEL_88;
  }
LABEL_18:
  uint64_t v10 = v9;
  uint64_t v11 = 24 * v9;
  unint64_t v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *unint64_t v12 = v9;
  uint64_t v13 = v12 + 2;
  uint64_t v14 = 24;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v16 = 0;
  LODWORD(v44[0]) = 0;
  unsigned int v45 = 0;
  LODWORD(v46[0]) = 0;
  unsigned int v47 = 0;
  do
  {
    if (v54 == 8)
    {
      if (v16 >= *(unsigned int *)v53[0]) {
        goto LABEL_104;
      }
      uint64_t v15 = v53[0] + v14 - 16;
      uint64_t v17 = *(unsigned int *)(v53[0] + v14);
      uint64_t v18 = v45;
      if (v45 == -1)
      {
        if (v17 == -1) {
          goto LABEL_31;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_26;
      }
      int v49 = v44;
      ((void (*)(void **, void *, uint64_t))off_1ECABEEE0[v17])(&v49, v44, v15);
    }
    else
    {
      uint64_t v18 = v45;
      if (v45 == -1)
      {
        if (v54 == -1) {
          goto LABEL_31;
        }
      }
      else if (v54 == -1)
      {
LABEL_26:
        ((void (*)(void **, void *, uint64_t))off_1ECABEC60[v18])(&v49, v44, v15);
        unsigned int v45 = -1;
        goto LABEL_31;
      }
      int v49 = v44;
      ((void (*)(void **, void *, void *))off_1ECABEEE0[v54])(&v49, v44, v53);
    }
LABEL_31:
    if (v56 == 8)
    {
      if (v16 >= *(unsigned int *)v55[0])
      {
LABEL_104:
        __break(0xC471u);
        JUMPOUT(0x182672484);
      }
      uint64_t v15 = v55[0] + v14 - 16;
      uint64_t v19 = *(unsigned int *)(v55[0] + v14);
      uint64_t v20 = v47;
      if (v47 == -1)
      {
        if (v19 == -1) {
          goto LABEL_43;
        }
      }
      else if (v19 == -1)
      {
        goto LABEL_38;
      }
      int v49 = v46;
      ((void (*)(void **, void *, uint64_t))off_1ECABEEE0[v19])(&v49, v46, v15);
    }
    else
    {
      uint64_t v20 = v47;
      if (v47 == -1)
      {
        if (v56 == -1) {
          goto LABEL_43;
        }
      }
      else if (v56 == -1)
      {
LABEL_38:
        ((void (*)(void **, void *, uint64_t))off_1ECABEC60[v20])(&v49, v46, v15);
        unsigned int v47 = -1;
        goto LABEL_43;
      }
      int v49 = v46;
      ((void (*)(void **, void *, void *))off_1ECABEEE0[v56])(&v49, v46, v55);
    }
LABEL_43:
    unsigned int v21 = v45;
    switch(v45)
    {
      case 3u:
        if (v47 != 3) {
          goto LABEL_108;
        }
        goto LABEL_47;
      case 4u:
        if (v47 != 4) {
          goto LABEL_108;
        }
LABEL_47:
        LODWORD(v42[0]) = v46[0] & LODWORD(v44[0]);
        break;
      case 5u:
        if (v47 != 5) {
          goto LABEL_108;
        }
        v42[0] = v46[0] & v44[0];
        break;
      case 6u:
        if (v47 != 6) {
          goto LABEL_108;
        }
        LOBYTE(v42[0]) = v46[0] & LOBYTE(v44[0]);
        break;
      default:
        goto LABEL_109;
    }
    unsigned int v43 = v45;
    LOBYTE(v50[0]) = 0;
    int v51 = -1;
    ((void (*)(char *, void *, void *))off_1ECABECB8[v45])(&v48, v50, v42);
    int v51 = v21;
    unsigned int v52 = 0;
    if (v43 == -1 || (((void (*)(char *, void *))off_1ECABEC60[v43])(&v48, v42), !v52))
    {
      if (v16 >= *v12)
      {
        __break(0xC471u);
        JUMPOUT(0x1826724A4);
      }
      uint64_t v26 = v12[(unint64_t)v14 / 4];
      if (v26 == -1)
      {
        if (v51 == -1) {
          goto LABEL_65;
        }
      }
      else if (v51 == -1)
      {
        ((void (*)(void *, unsigned int *))off_1ECABEC60[v26])(v42, v13);
        v12[(unint64_t)v14 / 4] = -1;
        goto LABEL_65;
      }
      v42[0] = v13;
      ((void (*)(void *, unsigned int *, void *))off_1ECABEF38[v51])(v42, v13, v50);
LABEL_65:
      char v24 = 1;
      uint64_t v25 = v52;
      if (v52 == -1) {
        goto LABEL_67;
      }
LABEL_66:
      ((void (*)(void *, void *))off_1ECABED68[v25])(v42, v50);
      goto LABEL_67;
    }
    if (v52 != 1)
    {
LABEL_108:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_109:
      __break(0xC471u);
      JUMPOUT(0x182672508);
    }
    uint64_t v23 = v50[0];
    if (v50[0]) {
      *(_DWORD *)v50[0] += 2;
    }
    char v24 = 0;
    *(void *)(a2 + 8) = v23;
    *(_DWORD *)(a2 + 32) = 1;
    uint64_t v25 = v52;
    if (v52 != -1) {
      goto LABEL_66;
    }
LABEL_67:
    if ((v24 & 1) == 0) {
      goto LABEL_75;
    }
    ++v16;
    v13 += 6;
    v14 += 24;
  }
  while (v10 != v16);
  uint64_t v27 = *v12;
  uint64_t v28 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v27 + 8));
  uint64_t v29 = v28;
  _DWORD *v28 = v27;
  if (v27)
  {
    uint64_t v30 = v28 + 6;
    uint64_t v31 = 24 * v27;
    uint64_t v32 = v12 + 6;
    do
    {
      *((unsigned char *)v30 - 16) = 0;
      uint64_t v22 = v30 - 4;
      *uint64_t v30 = -1;
      uint64_t v33 = *v32;
      if (v33 != -1)
      {
        ((void (*)(void **, _DWORD *, unsigned int *))off_1ECABEE88[v33])(&v49, v22, v32 - 4);
        *uint64_t v30 = v33;
      }
      v30 += 6;
      v32 += 6;
      v31 -= 24;
    }
    while (v31);
  }
  *(void *)(a2 + 8) = v29;
  *(_DWORD *)(a2 + 24) = 8;
  *(_DWORD *)(a2 + 32) = 0;
LABEL_75:
  if (v47 != -1) {
    ((void (*)(void **, void *))off_1ECABEC60[v47])(&v49, v46);
  }
  unsigned int v47 = -1;
  if (v45 != -1) {
    ((void (*)(void **, void *))off_1ECABEC60[v45])(&v49, v44);
  }
  uint64_t v34 = *v12;
  if (v34)
  {
    uint64_t v35 = 24 * v34;
    char v36 = v12 + 6;
    do
    {
      uint64_t v22 = v36 - 4;
      uint64_t v37 = *v36;
      if (v37 != -1) {
        ((void (*)(void *, _DWORD *))off_1ECABEC60[v37])(v44, v22);
      }
      *char v36 = -1;
      v36 += 6;
      v35 -= 24;
    }
    while (v35);
  }
  uint64_t result = WTF::fastFree((WTF *)v12, v22);
  uint64_t v39 = v56;
  if (v56 != -1) {
    goto LABEL_100;
  }
LABEL_101:
  unsigned int v56 = -1;
  if (v54 != -1) {
    return ((uint64_t (*)(void *, void *))off_1ECABEC60[v54])(v44, v53);
  }
  return result;
}

uint64_t WGSL::constantMinus@<X0>(uint64_t result@<X0>, int **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v121 = *MEMORY[0x1E4F143B8];
  int v4 = *a2;
  int v5 = **a2;
  if (v5 == 1)
  {
    LOBYTE(v109) = 0;
    unsigned int v111 = -1;
    uint64_t v6 = v4[6];
    if (v6 == -1)
    {
LABEL_225:
      __break(0xC471u);
      JUMPOUT(0x1826737CCLL);
    }
    uint64_t v7 = (float *)(v4 + 2);
    uint64_t v8 = off_1ECABEE88[v6];
    ((void (*)(double **, unsigned int **, int *))v8)(&v115, &v109, v4 + 2);
    unsigned int v111 = v6;
    LOBYTE(v115) = 0;
    int v117 = -1;
    ((void (*)(double *, double **, unsigned int **))v8)(&v104, &v115, &v109);
    unsigned int v9 = 0;
    int v117 = v6;
    if (v6 == 8)
    {
      if (v115) {
        unsigned int v9 = *(_DWORD *)v115;
      }
      else {
        unsigned int v9 = 0;
      }
    }
    uint64_t result = ((uint64_t (*)(double *, double **))off_1ECABEC60[v6])(&v104, &v115);
    if (!v9)
    {
      switch(v4[6])
      {
        case 0:
          *(float *)(a3 + 8) = -*v7;
          *(_DWORD *)(a3 + 24) = 0;
          goto LABEL_188;
        case 1:
          *(short float *)(a3 + 8) = -*(short float *)v7;
          int v96 = 1;
          goto LABEL_187;
        case 2:
          *(double *)(a3 + 8) = -*(double *)v7;
          int v96 = 2;
          goto LABEL_187;
        case 3:
          *(_DWORD *)(a3 + 8) = -*(_DWORD *)v7;
          int v96 = 3;
          goto LABEL_187;
        case 4:
          *(_DWORD *)(a3 + 8) = -*(_DWORD *)v7;
          int v96 = 4;
          goto LABEL_187;
        case 5:
          *(void *)(a3 + 8) = -*(void *)v7;
          int v96 = 5;
LABEL_187:
          *(_DWORD *)(a3 + 24) = v96;
LABEL_188:
          *(_DWORD *)(a3 + 32) = 0;
          uint64_t v68 = v111;
          if (v111 != -1) {
            return ((uint64_t (*)(double **, unsigned int **))off_1ECABEC60[v68])(&v115, &v109);
          }
          return result;
        default:
          goto LABEL_225;
      }
    }
    uint64_t v100 = a3;
    uint64_t v48 = 24 * v9;
    int v49 = (unsigned int *)WTF::fastMalloc((WTF *)(v48 + 8));
    *int v49 = v9;
    unint64_t v50 = (v48 - 24) / 0x18uLL;
    uint64_t v51 = 6;
    bzero(v49 + 2, 24 * v50 + 24);
    unint64_t v53 = 0;
    LODWORD(v104) = 0;
    unsigned int v106 = 0;
    while (2)
    {
      if (v111 == 8)
      {
        if (v53 >= *v109)
        {
          __break(0xC471u);
          JUMPOUT(0x182673664);
        }
        uint64_t v52 = (uint64_t)&v109[v51 - 4];
        uint64_t v54 = v109[v51];
        uint64_t v55 = v106;
        if (v106 != -1)
        {
          if (v54 == -1)
          {
LABEL_221:
            ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v55])(&v115, &v104, v52);
            unsigned int v106 = -1;
            goto LABEL_222;
          }
          goto LABEL_81;
        }
        if (v54 != -1)
        {
LABEL_81:
          uint64_t v115 = &v104;
          ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v54])(&v115, &v104, v52);
        }
      }
      else
      {
        uint64_t v55 = v106;
        if (v106 == -1)
        {
          if (v111 == -1)
          {
LABEL_222:
            __break(0xC471u);
            JUMPOUT(0x182673784);
          }
        }
        else if (v111 == -1)
        {
          goto LABEL_221;
        }
        uint64_t v115 = &v104;
        ((void (*)(double **, double *, unsigned int **))off_1ECABEEE0[v111])(&v115, &v104, &v109);
      }
      switch(v106)
      {
        case 0u:
          *(float *)&double v116 = -*(float *)&v104;
          goto LABEL_88;
        case 1u:
          *(short float *)&double v116 = -*(short float *)&v104;
          goto LABEL_88;
        case 2u:
          double v116 = -v104;
          goto LABEL_88;
        case 3u:
        case 4u:
          LODWORD(v116) = -LODWORD(v104);
          goto LABEL_88;
        case 5u:
          *(void *)&double v116 = -*(void *)&v104;
LABEL_88:
          LODWORD(v118) = v106;
          int v119 = 0;
          if (v53 >= *v49)
          {
            __break(0xC471u);
            JUMPOUT(0x182673644);
          }
          uint64_t v103 = (uint64_t)&v49[v51 - 4];
          ((void (*)(uint64_t *))off_1ECABEF38[v106])(&v103);
          if (v119 != -1) {
            ((void (*)(uint64_t *, double *))off_1ECABED68[v119])(&v103, &v116);
          }
          ++v53;
          v51 += 6;
          if (v9 != v53) {
            continue;
          }
          uint64_t v56 = *v49;
          uint64_t v57 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v56 + 8));
          int v59 = v57;
          _DWORD *v57 = v56;
          if (v56)
          {
            uint64_t v60 = v57 + 6;
            uint64_t v61 = 24 * v56;
            uint64_t v62 = v49 + 6;
            do
            {
              *((unsigned char *)v60 - 16) = 0;
              unsigned int v58 = v60 - 4;
              *uint64_t v60 = -1;
              uint64_t v63 = *v62;
              if (v63 != -1)
              {
                ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v63])(&v115, v58, v62 - 4);
                *uint64_t v60 = v63;
              }
              v60 += 6;
              v62 += 6;
              v61 -= 24;
            }
            while (v61);
          }
          *(void *)(v100 + 8) = v59;
          *(_DWORD *)(v100 + 24) = 8;
          *(_DWORD *)(v100 + 32) = 0;
          if (v106 != -1) {
            ((void (*)(double **, double *))off_1ECABEC60[v106])(&v115, &v104);
          }
          uint64_t v64 = *v49;
          if (v64)
          {
            uint64_t v65 = 24 * v64;
            int v66 = v49 + 6;
            do
            {
              unsigned int v58 = v66 - 4;
              uint64_t v67 = *v66;
              if (v67 != -1) {
                ((void (*)(double **, _DWORD *))off_1ECABEC60[v67])(&v115, v58);
              }
              _DWORD *v66 = -1;
              v66 += 6;
              v65 -= 24;
            }
            while (v65);
          }
          uint64_t result = WTF::fastFree((WTF *)v49, v58);
          uint64_t v68 = v111;
          if (v111 == -1) {
            return result;
          }
          return ((uint64_t (*)(double **, unsigned int **))off_1ECABEC60[v68])(&v115, &v109);
        default:
          goto LABEL_222;
      }
    }
  }
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x182673744);
  }
  uint64_t v10 = v4[6];
  if (v10 != 9)
  {
    uint64_t v44 = (float *)(v4 + 2);
    LOBYTE(v115) = 0;
    int v117 = -1;
    if (v10 != -1)
    {
      uint64_t result = ((uint64_t (*)(unsigned int **, double **, int *))off_1ECABEE88[v10])(&v109, &v115, v4 + 2);
      int v117 = v10;
    }
    unsigned int v45 = (float *)(v4 + 8);
    LOBYTE(v118) = 0;
    unsigned int v120 = -1;
    uint64_t v46 = v4[12];
    if (v46 != -1)
    {
      uint64_t result = ((uint64_t (*)(unsigned int **, unsigned int **, int *))off_1ECABEE88[v46])(&v109, &v118, v4 + 8);
      unsigned int v120 = v46;
      LODWORD(v10) = v117;
    }
    LOBYTE(v109) = 0;
    unsigned int v111 = -1;
    if (v10 != -1)
    {
      ((void (*)(double *, unsigned int **, double **))off_1ECABEE88[v10])(&v104, &v109, &v115);
      unsigned int v111 = v10;
      if (v10 == 8)
      {
        if (*(double *)&v109 == 0.0) {
          unsigned int v47 = 0;
        }
        else {
          unsigned int v47 = *v109;
        }
        uint64_t result = ((uint64_t (*)(double *, unsigned int **))off_1ECABECA0[0])(&v104, &v109);
        if (!v47)
        {
LABEL_193:
          switch(v4[6])
          {
            case 0:
              if (v4[12]) {
                goto LABEL_223;
              }
              *(float *)(a3 + 8) = *v44 - *v45;
              *(_DWORD *)(a3 + 24) = 0;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v95 = v120;
              if (v120 == -1) {
                goto LABEL_180;
              }
              goto LABEL_179;
            case 1:
              if (v4[12] != 1) {
                goto LABEL_223;
              }
              *(short float *)(a3 + 8) = *(short float *)v44 - *(short float *)v45;
              *(_DWORD *)(a3 + 24) = 1;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v95 = v120;
              if (v120 == -1) {
                goto LABEL_180;
              }
              goto LABEL_179;
            case 2:
              if (v4[12] != 2) {
                goto LABEL_223;
              }
              *(double *)(a3 + 8) = *(double *)v44 - *(double *)v45;
              *(_DWORD *)(a3 + 24) = 2;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v95 = v120;
              if (v120 == -1) {
                goto LABEL_180;
              }
              goto LABEL_179;
            case 3:
              if (v4[12] != 3) {
                goto LABEL_223;
              }
              *(_DWORD *)(a3 + 8) = *(_DWORD *)v44 - *(_DWORD *)v45;
              *(_DWORD *)(a3 + 24) = 3;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v95 = v120;
              if (v120 == -1) {
                goto LABEL_180;
              }
              goto LABEL_179;
            case 4:
              if (v4[12] != 4) {
                goto LABEL_223;
              }
              *(_DWORD *)(a3 + 8) = *(_DWORD *)v44 - *(_DWORD *)v45;
              *(_DWORD *)(a3 + 24) = 4;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v95 = v120;
              if (v120 == -1) {
                goto LABEL_180;
              }
              goto LABEL_179;
            case 5:
              if (v4[12] != 5) {
                goto LABEL_223;
              }
              *(void *)(a3 + 8) = *(void *)v44 - *(void *)v45;
              *(_DWORD *)(a3 + 24) = 5;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v95 = v120;
              if (v120 == -1) {
                goto LABEL_180;
              }
              goto LABEL_179;
            default:
              __break(0xC471u);
              JUMPOUT(0x1826737ECLL);
          }
        }
        goto LABEL_122;
      }
      uint64_t result = ((uint64_t (*)(double *, unsigned int **))off_1ECABEC60[v10])(&v104, &v109);
      LODWORD(v46) = v120;
    }
    LOBYTE(v109) = 0;
    unsigned int v111 = -1;
    if (v46 == -1) {
      goto LABEL_193;
    }
    uint64_t v69 = v46;
    ((void (*)(double *, unsigned int **, unsigned int **))off_1ECABEE88[v46])(&v104, &v109, &v118);
    unsigned int v111 = v46;
    if (v46 != 8 || *(double *)&v109 == 0.0) {
      unsigned int v47 = 0;
    }
    else {
      unsigned int v47 = *v109;
    }
    uint64_t result = ((uint64_t (*)(double *, unsigned int **))off_1ECABEC60[v69])(&v104, &v109);
    if (!v47) {
      goto LABEL_193;
    }
LABEL_122:
    uint64_t v101 = a3;
    uint64_t v74 = 24 * v47;
    uint64_t v75 = (unsigned int *)WTF::fastMalloc((WTF *)(v74 + 8));
    *uint64_t v75 = v47;
    uint64_t v76 = 6;
    bzero(v75 + 2, 24 * ((v74 - 24) / 0x18uLL) + 24);
    unint64_t v78 = 0;
    LODWORD(v109) = 0;
    unsigned int v111 = 0;
    LODWORD(v112) = 0;
    unsigned int v114 = 0;
    while (1)
    {
      if (v117 == 8)
      {
        if (v78 >= *(unsigned int *)v115) {
          goto LABEL_214;
        }
        uint64_t v77 = (uint64_t)&v115[(unint64_t)v76 / 2 - 2];
        uint64_t v79 = LODWORD(v115[(unint64_t)v76 / 2]);
        uint64_t v80 = v111;
        if (v111 == -1)
        {
          if (v79 == -1) {
            goto LABEL_136;
          }
        }
        else if (v79 == -1)
        {
          goto LABEL_131;
        }
        double v104 = COERCE_DOUBLE(&v109);
        ((void (*)(double *, unsigned int **, uint64_t))off_1ECABEEE0[v79])(&v104, &v109, v77);
      }
      else
      {
        uint64_t v80 = v111;
        if (v111 == -1)
        {
          if (v117 == -1) {
            goto LABEL_136;
          }
        }
        else if (v117 == -1)
        {
LABEL_131:
          ((void (*)(double *, unsigned int **, uint64_t))off_1ECABEC60[v80])(&v104, &v109, v77);
          unsigned int v111 = -1;
          goto LABEL_136;
        }
        double v104 = COERCE_DOUBLE(&v109);
        ((void (*)(double *, unsigned int **, double **))off_1ECABEEE0[v117])(&v104, &v109, &v115);
      }
LABEL_136:
      if (v120 == 8)
      {
        if (v78 >= *v118)
        {
LABEL_214:
          __break(0xC471u);
          JUMPOUT(0x182673684);
        }
        uint64_t v77 = (uint64_t)&v118[v76 - 4];
        uint64_t v81 = v118[v76];
        uint64_t v82 = v114;
        if (v114 != -1)
        {
          if (v81 != -1) {
            goto LABEL_147;
          }
LABEL_143:
          ((void (*)(double *, double *, uint64_t))off_1ECABEC60[v82])(&v104, &v112, v77);
          unsigned int v114 = -1;
          goto LABEL_148;
        }
        if (v81 != -1)
        {
LABEL_147:
          double v104 = COERCE_DOUBLE(&v112);
          ((void (*)(double *, double *, uint64_t))off_1ECABEEE0[v81])(&v104, &v112, v77);
        }
      }
      else
      {
        uint64_t v82 = v114;
        if (v114 != -1)
        {
          if (v120 != -1) {
            goto LABEL_145;
          }
          goto LABEL_143;
        }
        if (v120 != -1)
        {
LABEL_145:
          double v104 = COERCE_DOUBLE(&v112);
          ((void (*)(double *, double *, unsigned int **))off_1ECABEEE0[v120])(&v104, &v112, &v118);
        }
      }
LABEL_148:
      switch(v111)
      {
        case 0u:
          if (v114) {
            goto LABEL_223;
          }
          *(float *)&double v105 = *(float *)&v109 - *(float *)&v112;
          break;
        case 1u:
          if (v114 != 1) {
            goto LABEL_223;
          }
          *(short float *)&double v105 = *(short float *)&v109 - *(short float *)&v112;
          break;
        case 2u:
          if (v114 != 2) {
            goto LABEL_223;
          }
          double v105 = *(double *)&v109 - v112;
          break;
        case 3u:
          if (v114 != 3) {
            goto LABEL_223;
          }
          goto LABEL_156;
        case 4u:
          if (v114 != 4) {
            goto LABEL_223;
          }
LABEL_156:
          LODWORD(v105) = v109 - LODWORD(v112);
          break;
        case 5u:
          if (v114 != 5) {
            goto LABEL_223;
          }
          *(void *)&double v105 = (char *)v109 - *(void *)&v112;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x1826737ACLL);
      }
      unsigned int v107 = v111;
      int v108 = 0;
      if (v78 >= *v75)
      {
        __break(0xC471u);
        JUMPOUT(0x1826736A4);
      }
      uint64_t v103 = (uint64_t)&v75[v76 - 4];
      ((void (*)(uint64_t *))off_1ECABEF38[v111])(&v103);
      if (v108 != -1) {
        ((void (*)(uint64_t *, double *))off_1ECABED68[v108])(&v103, &v105);
      }
      ++v78;
      v76 += 6;
      if (v47 == v78)
      {
        uint64_t v83 = *v75;
        long long v84 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v83 + 8));
        unsigned int v86 = v84;
        _DWORD *v84 = v83;
        if (v83)
        {
          int v87 = v84 + 6;
          uint64_t v88 = 24 * v83;
          uint64_t v89 = v75 + 6;
          do
          {
            *((unsigned char *)v87 - 16) = 0;
            uint64_t v85 = v87 - 4;
            *int v87 = -1;
            uint64_t v90 = *v89;
            if (v90 != -1)
            {
              ((void (*)(double *, _DWORD *, unsigned int *))off_1ECABEE88[v90])(&v104, v85, v89 - 4);
              *int v87 = v90;
            }
            v87 += 6;
            v89 += 6;
            v88 -= 24;
          }
          while (v88);
        }
        *(void *)(v101 + 8) = v86;
        *(_DWORD *)(v101 + 24) = 8;
        *(_DWORD *)(v101 + 32) = 0;
        if (v114 != -1) {
          ((void (*)(double *, double *))off_1ECABEC60[v114])(&v104, &v112);
        }
        unsigned int v114 = -1;
        if (v111 != -1) {
          ((void (*)(double *, unsigned int **))off_1ECABEC60[v111])(&v104, &v109);
        }
        uint64_t v91 = *v75;
        if (v91)
        {
          uint64_t v92 = 24 * v91;
          unsigned int v93 = v75 + 6;
          do
          {
            uint64_t v85 = v93 - 4;
            uint64_t v94 = *v93;
            if (v94 != -1) {
              ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v94])(&v109, v85);
            }
            *unsigned int v93 = -1;
            v93 += 6;
            v92 -= 24;
          }
          while (v92);
        }
        uint64_t result = WTF::fastFree((WTF *)v75, v85);
        uint64_t v95 = v120;
        if (v120 != -1) {
LABEL_179:
        }
          uint64_t result = ((uint64_t (*)(unsigned int **, unsigned int **))off_1ECABEC60[v95])(&v109, &v118);
LABEL_180:
        unsigned int v120 = -1;
        if (v117 != -1) {
          return ((uint64_t (*)(unsigned int **, double **))off_1ECABEC60[v117])(&v109, &v115);
        }
        return result;
      }
    }
  }
  if (v4[12] != 9 || *(_DWORD *)(result + 48) != 2) {
LABEL_223:
  }
    std::__throw_bad_variant_access[abi:sn180100]();
  uint64_t v11 = v4[2];
  uint64_t v12 = v4[3];
  unsigned int v13 = v12 * v11;
  if (!(v12 * v11))
  {
    *(void *)(a3 + 8) = v11 | (v12 << 32);
    *(void *)(a3 + 16) = 0;
    *(_DWORD *)(a3 + 24) = 9;
    *(_DWORD *)(a3 + 32) = 0;
    return result;
  }
  uint64_t v97 = v11 | (v12 << 32);
  uint64_t v99 = a3;
  uint64_t v102 = *(void *)result;
  uint64_t v14 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v13 + 8));
  unsigned int *v14 = v13;
  uint64_t v98 = v14 + 2;
  bzero(v14 + 2, 24 * ((24 * (unint64_t)v13 - 24) / 0x18) + 24);
  unint64_t v15 = 0;
  do
  {
    unint64_t v16 = (unsigned int *)*((void *)v4 + 2);
    if (v15 >= *v16)
    {
      __break(0xC471u);
      JUMPOUT(0x1826736C4);
    }
    uint64_t v17 = &v16[6 * v15];
    LOBYTE(v115) = 0;
    int v117 = -1;
    uint64_t v18 = v17[6];
    if (v18 != -1)
    {
      ((void (*)(double *, double **, unsigned int *))off_1ECABEE88[v18])(&v104, &v115, v17 + 2);
      int v117 = v18;
    }
    uint64_t v19 = (unsigned int *)*((void *)v4 + 5);
    if (v15 >= *v19)
    {
      __break(0xC471u);
      JUMPOUT(0x1826736E4);
    }
    uint64_t v20 = &v19[6 * v15];
    LOBYTE(v118) = 0;
    unsigned int v120 = -1;
    uint64_t v21 = v20[6];
    if (v21 != -1)
    {
      ((void (*)(double *, unsigned int **, unsigned int *))off_1ECABEE88[v21])(&v104, &v118, v20 + 2);
      unsigned int v120 = v21;
    }
    uint64_t v22 = WTF::fastMalloc((WTF *)0x38);
    uint64_t v23 = (unsigned int *)v22;
    *(_OWORD *)(v22 + 8) = 0u;
    *(_DWORD *)uint64_t v22 = 2;
    *(_OWORD *)(v22 + 24) = 0u;
    *(_OWORD *)(v22 + 40) = 0u;
    uint64_t v103 = v22;
    if (v117 == -1)
    {
      *(_DWORD *)(v22 + 24) = -1;
      uint64_t v25 = (unsigned int *)(v22 + 32);
      uint64_t v26 = v120;
      if (v120 == -1)
      {
        uint64_t v24 = 0;
LABEL_26:
        ((void (*)(double *, unsigned int *))off_1ECABEC60[v24])(&v104, v25);
        v23[12] = -1;
LABEL_27:
        WGSL::constantMinus(&v109, v102, &v103);
        uint64_t v28 = *v23;
        if (!v28) {
          goto LABEL_34;
        }
        goto LABEL_30;
      }
    }
    else
    {
      *(void *)&double v104 = v22 + 8;
      ((void (*)(double *))off_1ECABEEE0[v117])(&v104);
      if (*v23 < 2)
      {
        __break(0xC471u);
        JUMPOUT(0x182673704);
      }
      uint64_t v24 = v23[12];
      uint64_t v25 = v23 + 8;
      uint64_t v26 = v120;
      if (v24 == -1)
      {
        if (v120 == 0xFFFFFFFFLL) {
          goto LABEL_27;
        }
      }
      else if (v120 == 0xFFFFFFFFLL)
      {
        goto LABEL_26;
      }
    }
    double v104 = *(double *)&v25;
    ((void (*)(double *))off_1ECABEEE0[v26])(&v104);
    WGSL::constantMinus(&v109, v102, &v103);
    uint64_t v28 = *v23;
    if (!v28) {
      goto LABEL_34;
    }
LABEL_30:
    uint64_t v29 = 24 * v28;
    uint64_t v30 = v23 + 6;
    do
    {
      uint64_t v27 = v30 - 4;
      uint64_t v31 = *v30;
      if (v31 != -1) {
        ((void (*)(double *, _DWORD *))off_1ECABEC60[v31])(&v104, v27);
      }
      *uint64_t v30 = -1;
      v30 += 6;
      v29 -= 24;
    }
    while (v29);
LABEL_34:
    WTF::fastFree((WTF *)v23, v27);
    if (v120 != -1) {
      ((void (*)(double *, unsigned int **))off_1ECABEC60[v120])(&v104, &v118);
    }
    unsigned int v120 = -1;
    if (v117 != -1) {
      ((void (*)(double *, double **))off_1ECABEC60[v117])(&v104, &v115);
    }
    int v33 = v113;
    if (v113)
    {
      if (v113 != 1) {
        goto LABEL_223;
      }
      uint64_t v34 = v110;
      if (v110) {
        *v110 += 2;
      }
      *(void *)(v99 + 8) = v34;
      *(_DWORD *)(v99 + 32) = 1;
    }
    else
    {
      if (v15 >= *v14)
      {
        __break(0xC471u);
        JUMPOUT(0x182673724);
      }
      uint64_t v35 = &v98[6 * v15];
      uint64_t v36 = v35[4];
      if (v36 == -1)
      {
        if (LODWORD(v112) == -1) {
          goto LABEL_49;
        }
      }
      else if (LODWORD(v112) == -1)
      {
        ((void (*)(double **, unsigned int *))off_1ECABEC60[v36])(&v115, &v98[6 * v15]);
        v35[4] = -1;
        goto LABEL_49;
      }
      uint64_t v115 = (double *)&v98[6 * v15];
      ((void (*)(double **, double *, _DWORD **))off_1ECABEF38[LODWORD(v112)])(&v115, v115, &v110);
    }
LABEL_49:
    if (v113 != -1) {
      ((void (*)(double **, _DWORD **))off_1ECABED68[v113])(&v115, &v110);
    }
    if (v33) {
      goto LABEL_114;
    }
    ++v15;
    unint64_t v37 = *v14;
  }
  while (v15 < v37);
  int v38 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v37 + 8));
  uint64_t v39 = v38;
  *int v38 = v37;
  if (v37)
  {
    uint64_t v40 = v38 + 6;
    uint64_t v41 = 24 * v37;
    char v42 = v14 + 6;
    do
    {
      *((unsigned char *)v40 - 16) = 0;
      uint64_t v32 = v40 - 4;
      _DWORD *v40 = -1;
      uint64_t v43 = *v42;
      if (v43 != -1)
      {
        ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v43])(&v115, v32, v42 - 4);
        _DWORD *v40 = v43;
      }
      v40 += 6;
      v42 += 6;
      v41 -= 24;
    }
    while (v41);
  }
  *(void *)(v99 + 8) = v97;
  *(void *)(v99 + 16) = v39;
  *(_DWORD *)(v99 + 24) = 9;
  *(_DWORD *)(v99 + 32) = 0;
LABEL_114:
  uint64_t v70 = *v14;
  if (v70)
  {
    uint64_t v71 = 24 * v70;
    uint64_t v72 = v14 + 6;
    do
    {
      uint64_t v32 = v72 - 4;
      uint64_t v73 = *v72;
      if (v73 != -1) {
        ((void (*)(double **, _DWORD *))off_1ECABEC60[v73])(&v115, v32);
      }
      *uint64_t v72 = -1;
      v72 += 6;
      v71 -= 24;
    }
    while (v71);
  }
  return WTF::fastFree((WTF *)v14, v32);
}

uint64_t WGSL::constantAdd@<X0>(uint64_t result@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = *MEMORY[0x1E4F143B8];
  int v4 = *a2;
  unsigned int v5 = **a2;
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x1826745C8);
  }
  uint64_t v6 = v4[6];
  if (v6 != 9)
  {
    if (v5 == 1)
    {
      __break(0xC471u);
      JUMPOUT(0x182674608);
    }
    uint64_t v40 = (float *)(v4 + 2);
    LOBYTE(v87[0]) = 0;
    int v88 = -1;
    if (v6 != -1)
    {
      uint64_t result = ((uint64_t (*)(unsigned int **, void *, unsigned int *))off_1ECABEE88[v6])(&v81, v87, v4 + 2);
      int v88 = v6;
    }
    uint64_t v41 = (float *)(v4 + 8);
    LOBYTE(v89[0]) = 0;
    unsigned int v90 = -1;
    uint64_t v42 = v4[12];
    if (v42 != -1)
    {
      uint64_t result = ((uint64_t (*)(unsigned int **, void *, unsigned int *))off_1ECABEE88[v42])(&v81, v89, v4 + 8);
      unsigned int v90 = v42;
      LODWORD(v6) = v88;
    }
    LOBYTE(v81) = 0;
    unsigned int v83 = -1;
    if (v6 != -1)
    {
      ((void (*)(double **, unsigned int **, void *))off_1ECABEE88[v6])(&v77, &v81, v87);
      unsigned int v83 = v6;
      if (v6 == 8)
      {
        if (*(double *)&v81 == 0.0) {
          unsigned int v43 = 0;
        }
        else {
          unsigned int v43 = *v81;
        }
        uint64_t result = ((uint64_t (*)(double **, unsigned int **))off_1ECABECA0[0])(&v77, &v81);
        if (!v43)
        {
LABEL_141:
          switch(v4[6])
          {
            case 0u:
              if (v4[12]) {
                goto LABEL_169;
              }
              *(float *)(a3 + 8) = *v40 + *v41;
              *(_DWORD *)(a3 + 24) = 0;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v70 = v90;
              if (v90 == -1) {
                goto LABEL_136;
              }
              goto LABEL_135;
            case 1u:
              if (v4[12] != 1) {
                goto LABEL_169;
              }
              *(short float *)(a3 + 8) = *(short float *)v40 + *(short float *)v41;
              *(_DWORD *)(a3 + 24) = 1;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v70 = v90;
              if (v90 == -1) {
                goto LABEL_136;
              }
              goto LABEL_135;
            case 2u:
              if (v4[12] != 2) {
                goto LABEL_169;
              }
              *(double *)(a3 + 8) = *(double *)v40 + *(double *)v41;
              *(_DWORD *)(a3 + 24) = 2;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v70 = v90;
              if (v90 == -1) {
                goto LABEL_136;
              }
              goto LABEL_135;
            case 3u:
              if (v4[12] != 3) {
                goto LABEL_169;
              }
              *(_DWORD *)(a3 + 8) = *(_DWORD *)v41 + *(_DWORD *)v40;
              *(_DWORD *)(a3 + 24) = 3;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v70 = v90;
              if (v90 == -1) {
                goto LABEL_136;
              }
              goto LABEL_135;
            case 4u:
              if (v4[12] != 4) {
                goto LABEL_169;
              }
              *(_DWORD *)(a3 + 8) = *(_DWORD *)v41 + *(_DWORD *)v40;
              *(_DWORD *)(a3 + 24) = 4;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v70 = v90;
              if (v90 == -1) {
                goto LABEL_136;
              }
              goto LABEL_135;
            case 5u:
              if (v4[12] != 5) {
                goto LABEL_169;
              }
              *(void *)(a3 + 8) = *(void *)v41 + *(void *)v40;
              *(_DWORD *)(a3 + 24) = 5;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v70 = v90;
              if (v90 == -1) {
                goto LABEL_136;
              }
              goto LABEL_135;
            default:
              __break(0xC471u);
              JUMPOUT(0x182674650);
          }
        }
        goto LABEL_78;
      }
      uint64_t result = ((uint64_t (*)(double **, unsigned int **))off_1ECABEC60[v6])(&v77, &v81);
      LODWORD(v42) = v90;
    }
    LOBYTE(v81) = 0;
    unsigned int v83 = -1;
    if (v42 == -1) {
      goto LABEL_141;
    }
    uint64_t v44 = v42;
    ((void (*)(double **, unsigned int **, void *))off_1ECABEE88[v42])(&v77, &v81, v89);
    unsigned int v83 = v42;
    if (v42 != 8 || *(double *)&v81 == 0.0) {
      unsigned int v43 = 0;
    }
    else {
      unsigned int v43 = *v81;
    }
    uint64_t result = ((uint64_t (*)(double **, unsigned int **))off_1ECABEC60[v44])(&v77, &v81);
    if (!v43) {
      goto LABEL_141;
    }
LABEL_78:
    uint64_t v74 = a3;
    uint64_t v49 = 24 * v43;
    unint64_t v50 = (unsigned int *)WTF::fastMalloc((WTF *)(v49 + 8));
    *unint64_t v50 = v43;
    uint64_t v51 = 24;
    bzero(v50 + 2, 24 * ((v49 - 24) / 0x18uLL) + 24);
    unint64_t v53 = 0;
    LODWORD(v81) = 0;
    unsigned int v83 = 0;
    LODWORD(v84) = 0;
    unsigned int v86 = 0;
    while (1)
    {
      if (v88 == 8)
      {
        if (v53 >= *(unsigned int *)v87[0]) {
          goto LABEL_160;
        }
        uint64_t v52 = v87[0] + v51 - 16;
        uint64_t v54 = *(unsigned int *)(v87[0] + v51);
        uint64_t v55 = v83;
        if (v83 == -1)
        {
          if (v54 == -1) {
            goto LABEL_92;
          }
        }
        else if (v54 == -1)
        {
          goto LABEL_87;
        }
        uint64_t v77 = (double *)&v81;
        ((void (*)(double **, unsigned int **, uint64_t))off_1ECABEEE0[v54])(&v77, &v81, v52);
      }
      else
      {
        uint64_t v55 = v83;
        if (v83 == -1)
        {
          if (v88 == -1) {
            goto LABEL_92;
          }
        }
        else if (v88 == -1)
        {
LABEL_87:
          ((void (*)(double **, unsigned int **, uint64_t))off_1ECABEC60[v55])(&v77, &v81, v52);
          unsigned int v83 = -1;
          goto LABEL_92;
        }
        uint64_t v77 = (double *)&v81;
        ((void (*)(double **, unsigned int **, void *))off_1ECABEEE0[v88])(&v77, &v81, v87);
      }
LABEL_92:
      if (v90 == 8)
      {
        if (v53 >= *(unsigned int *)v89[0])
        {
LABEL_160:
          __break(0xC471u);
          JUMPOUT(0x182674508);
        }
        uint64_t v52 = v89[0] + v51 - 16;
        uint64_t v56 = *(unsigned int *)(v89[0] + v51);
        uint64_t v57 = v86;
        if (v86 != -1)
        {
          if (v56 != -1) {
            goto LABEL_103;
          }
LABEL_99:
          ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v57])(&v77, &v84, v52);
          unsigned int v86 = -1;
          goto LABEL_104;
        }
        if (v56 != -1)
        {
LABEL_103:
          uint64_t v77 = &v84;
          ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v56])(&v77, &v84, v52);
        }
      }
      else
      {
        uint64_t v57 = v86;
        if (v86 != -1)
        {
          if (v90 != -1) {
            goto LABEL_101;
          }
          goto LABEL_99;
        }
        if (v90 != -1)
        {
LABEL_101:
          uint64_t v77 = &v84;
          ((void (*)(double **, double *, void *))off_1ECABEEE0[v90])(&v77, &v84, v89);
        }
      }
LABEL_104:
      switch(v83)
      {
        case 0u:
          if (v86) {
            goto LABEL_169;
          }
          *(float *)unint64_t v78 = *(float *)&v81 + *(float *)&v84;
          break;
        case 1u:
          if (v86 != 1) {
            goto LABEL_169;
          }
          *(short float *)unint64_t v78 = *(short float *)&v81 + *(short float *)&v84;
          break;
        case 2u:
          if (v86 != 2) {
            goto LABEL_169;
          }
          v78[0] = *(double *)&v81 + v84;
          break;
        case 3u:
          if (v86 != 3) {
            goto LABEL_169;
          }
          goto LABEL_112;
        case 4u:
          if (v86 != 4) {
            goto LABEL_169;
          }
LABEL_112:
          LODWORD(v78[0]) = LODWORD(v84) + v81;
          break;
        case 5u:
          if (v86 != 5) {
            goto LABEL_169;
          }
          *(void *)&v78[0] = (char *)v81 + *(void *)&v84;
          break;
        default:
          goto LABEL_170;
      }
      unsigned int v79 = v83;
      int v80 = 0;
      if (v53 >= *v50)
      {
        __break(0xC471u);
        JUMPOUT(0x182674528);
      }
      uint64_t v76 = (uint64_t)&v50[(unint64_t)v51 / 4 - 4];
      ((void (*)(uint64_t *))off_1ECABEF38[v83])(&v76);
      if (v80 != -1) {
        ((void (*)(uint64_t *, double *))off_1ECABED68[v80])(&v76, v78);
      }
      ++v53;
      v51 += 24;
      if (v43 == v53)
      {
        uint64_t v58 = *v50;
        int v59 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v58 + 8));
        uint64_t v61 = v59;
        _DWORD *v59 = v58;
        if (v58)
        {
          uint64_t v62 = v59 + 6;
          uint64_t v63 = 24 * v58;
          uint64_t v64 = v50 + 6;
          do
          {
            *((unsigned char *)v62 - 16) = 0;
            uint64_t v60 = v62 - 4;
            _DWORD *v62 = -1;
            uint64_t v65 = *v64;
            if (v65 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v65])(&v77, v60, v64 - 4);
              _DWORD *v62 = v65;
            }
            v62 += 6;
            v64 += 6;
            v63 -= 24;
          }
          while (v63);
        }
        *(void *)(v74 + 8) = v61;
        *(_DWORD *)(v74 + 24) = 8;
        *(_DWORD *)(v74 + 32) = 0;
        if (v86 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v86])(&v77, &v84);
        }
        unsigned int v86 = -1;
        if (v83 != -1) {
          ((void (*)(double **, unsigned int **))off_1ECABEC60[v83])(&v77, &v81);
        }
        uint64_t v66 = *v50;
        if (v66)
        {
          uint64_t v67 = 24 * v66;
          uint64_t v68 = v50 + 6;
          do
          {
            uint64_t v60 = v68 - 4;
            uint64_t v69 = *v68;
            if (v69 != -1) {
              ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v69])(&v81, v60);
            }
            *uint64_t v68 = -1;
            v68 += 6;
            v67 -= 24;
          }
          while (v67);
        }
        uint64_t result = WTF::fastFree((WTF *)v50, v60);
        uint64_t v70 = v90;
        if (v90 != -1) {
LABEL_135:
        }
          uint64_t result = ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v70])(&v81, v89);
LABEL_136:
        unsigned int v90 = -1;
        if (v88 != -1) {
          return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v88])(&v81, v87);
        }
        return result;
      }
    }
  }
  if (v5 <= 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826745E8);
  }
  if (v4[12] != 9 || *(_DWORD *)(result + 48) != 2)
  {
LABEL_169:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_170:
    __break(0xC471u);
    JUMPOUT(0x18267462CLL);
  }
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  unsigned int v9 = v8 * v7;
  if (!(v8 * v7))
  {
    *(void *)(a3 + 8) = v7 | (v8 << 32);
    *(void *)(a3 + 16) = 0;
    *(_DWORD *)(a3 + 24) = 9;
    *(_DWORD *)(a3 + 32) = 0;
    return result;
  }
  uint64_t v71 = v7 | (v8 << 32);
  uint64_t v73 = a3;
  uint64_t v75 = *(void *)result;
  uint64_t v10 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v9 + 8));
  *uint64_t v10 = v9;
  uint64_t v72 = v10 + 2;
  bzero(v10 + 2, 24 * ((24 * (unint64_t)v9 - 24) / 0x18) + 24);
  unint64_t v11 = 0;
  do
  {
    uint64_t v12 = (unsigned int *)*((void *)v4 + 2);
    if (v11 >= *v12)
    {
      __break(0xC471u);
      JUMPOUT(0x182674548);
    }
    unsigned int v13 = &v12[6 * v11];
    LOBYTE(v87[0]) = 0;
    int v88 = -1;
    uint64_t v14 = v13[6];
    if (v14 != -1)
    {
      ((void (*)(double **, void *, unsigned int *))off_1ECABEE88[v14])(&v77, v87, v13 + 2);
      int v88 = v14;
    }
    unint64_t v15 = (unsigned int *)*((void *)v4 + 5);
    if (v11 >= *v15)
    {
      __break(0xC471u);
      JUMPOUT(0x182674568);
    }
    unint64_t v16 = &v15[6 * v11];
    LOBYTE(v89[0]) = 0;
    unsigned int v90 = -1;
    uint64_t v17 = v16[6];
    if (v17 != -1)
    {
      ((void (*)(double **, void *, unsigned int *))off_1ECABEE88[v17])(&v77, v89, v16 + 2);
      unsigned int v90 = v17;
    }
    uint64_t v18 = WTF::fastMalloc((WTF *)0x38);
    uint64_t v19 = (unsigned int *)v18;
    *(_OWORD *)(v18 + 8) = 0u;
    *(_DWORD *)uint64_t v18 = 2;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;
    uint64_t v76 = v18;
    if (v88 == -1)
    {
      *(_DWORD *)(v18 + 24) = -1;
      uint64_t v21 = (double *)(v18 + 32);
      uint64_t v22 = v90;
      if (v90 == -1)
      {
        uint64_t v20 = 0;
LABEL_22:
        ((void (*)(double **, double *))off_1ECABEC60[v20])(&v77, v21);
        v19[12] = -1;
LABEL_23:
        WGSL::constantAdd(&v81, v75, &v76);
        uint64_t v24 = *v19;
        if (!v24) {
          goto LABEL_30;
        }
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v77 = (double *)(v18 + 8);
      ((void (*)(double **))off_1ECABEEE0[v88])(&v77);
      if (*v19 < 2)
      {
        __break(0xC471u);
        JUMPOUT(0x182674588);
      }
      uint64_t v20 = v19[12];
      uint64_t v21 = (double *)(v19 + 8);
      uint64_t v22 = v90;
      if (v20 == -1)
      {
        if (v90 == 0xFFFFFFFFLL) {
          goto LABEL_23;
        }
      }
      else if (v90 == 0xFFFFFFFFLL)
      {
        goto LABEL_22;
      }
    }
    uint64_t v77 = v21;
    ((void (*)(double **))off_1ECABEEE0[v22])(&v77);
    WGSL::constantAdd(&v81, v75, &v76);
    uint64_t v24 = *v19;
    if (!v24) {
      goto LABEL_30;
    }
LABEL_26:
    uint64_t v25 = 24 * v24;
    uint64_t v26 = v19 + 6;
    do
    {
      uint64_t v23 = v26 - 4;
      uint64_t v27 = *v26;
      if (v27 != -1) {
        ((void (*)(double **, _DWORD *))off_1ECABEC60[v27])(&v77, v23);
      }
      *uint64_t v26 = -1;
      v26 += 6;
      v25 -= 24;
    }
    while (v25);
LABEL_30:
    WTF::fastFree((WTF *)v19, v23);
    if (v90 != -1) {
      ((void (*)(double **, void *))off_1ECABEC60[v90])(&v77, v89);
    }
    unsigned int v90 = -1;
    if (v88 != -1) {
      ((void (*)(double **, void *))off_1ECABEC60[v88])(&v77, v87);
    }
    int v29 = v85;
    if (v85)
    {
      if (v85 != 1) {
        goto LABEL_169;
      }
      uint64_t v30 = v82;
      if (v82) {
        *v82 += 2;
      }
      *(void *)(v73 + 8) = v30;
      *(_DWORD *)(v73 + 32) = 1;
    }
    else
    {
      if (v11 >= *v10)
      {
        __break(0xC471u);
        JUMPOUT(0x1826745A8);
      }
      uint64_t v31 = &v72[6 * v11];
      uint64_t v32 = v31[4];
      if (v32 == -1)
      {
        if (LODWORD(v84) == -1) {
          goto LABEL_45;
        }
      }
      else if (LODWORD(v84) == -1)
      {
        ((void (*)(void *, unsigned int *))off_1ECABEC60[v32])(v87, &v72[6 * v11]);
        v31[4] = -1;
        goto LABEL_45;
      }
      v87[0] = &v72[6 * v11];
      ((void (*)(void *, void, _DWORD **))off_1ECABEF38[LODWORD(v84)])(v87, v87[0], &v82);
    }
LABEL_45:
    if (v85 != -1) {
      ((void (*)(void *, _DWORD **))off_1ECABED68[v85])(v87, &v82);
    }
    if (v29) {
      goto LABEL_70;
    }
    ++v11;
    unint64_t v33 = *v10;
  }
  while (v11 < v33);
  uint64_t v34 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v33 + 8));
  uint64_t v35 = v34;
  *uint64_t v34 = v33;
  if (v33)
  {
    uint64_t v36 = v34 + 6;
    uint64_t v37 = 24 * v33;
    int v38 = v10 + 6;
    do
    {
      *((unsigned char *)v36 - 16) = 0;
      uint64_t v28 = v36 - 4;
      *uint64_t v36 = -1;
      uint64_t v39 = *v38;
      if (v39 != -1)
      {
        ((void (*)(void *, _DWORD *, unsigned int *))off_1ECABEE88[v39])(v87, v28, v38 - 4);
        *uint64_t v36 = v39;
      }
      v36 += 6;
      v38 += 6;
      v37 -= 24;
    }
    while (v37);
  }
  *(void *)(v73 + 8) = v71;
  *(void *)(v73 + 16) = v35;
  *(_DWORD *)(v73 + 24) = 9;
  *(_DWORD *)(v73 + 32) = 0;
LABEL_70:
  uint64_t v45 = *v10;
  if (v45)
  {
    uint64_t v46 = 24 * v45;
    unsigned int v47 = v10 + 6;
    do
    {
      uint64_t v28 = v47 - 4;
      uint64_t v48 = *v47;
      if (v48 != -1) {
        ((void (*)(void *, _DWORD *))off_1ECABEC60[v48])(v87, v28);
      }
      _DWORD *v47 = -1;
      v47 += 6;
      v46 -= 24;
    }
    while (v46);
  }
  return WTF::fastFree((WTF *)v10, v28);
}

void WGSL::constantMultiply(uint64_t a1@<X0>, int **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v268 = *MEMORY[0x1E4F143B8];
  int v4 = *a2;
  int v5 = **a2;
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x182676B80);
  }
  uint64_t v6 = (unsigned int *)(v4 + 2);
  uint64_t v7 = v4[6];
  if (v7 == 9) {
    uint64_t v8 = (unsigned int *)(v4 + 2);
  }
  else {
    uint64_t v8 = 0;
  }
  if (v5 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182676BA0);
  }
  uint64_t v10 = v4[12];
  uint64_t v244 = (float *)(v4 + 8);
  if (v10 == 9) {
    unint64_t v11 = (unsigned int *)(v4 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  BOOL v12 = v7 == 9 && v10 == 9;
  uint64_t v239 = a3;
  if (v12)
  {
    if (*(_DWORD *)(a1 + 48) != 2) {
      goto LABEL_499;
    }
    unsigned int v245 = *(const WGSL::Type **)a1;
    unsigned int v17 = *v11;
    uint64_t v18 = v8[1];
    unsigned int v19 = v18 * *v11;
    uint64_t v227 = *v11;
    if (v19)
    {
      uint64_t v20 = v8[1];
      uint64_t v233 = (WTF *)WTF::fastMalloc((WTF *)(24 * v19 + 8));
      *(_DWORD *)uint64_t v233 = v19;
      bzero((char *)v233 + 8, 24 * ((24 * (unint64_t)v19 - 24) / 0x18) + 24);
      uint64_t v18 = v20;
      unsigned int v17 = *v11;
      if (!*v11) {
        goto LABEL_128;
      }
    }
    else
    {
      uint64_t v233 = 0;
      if (!v17) {
        goto LABEL_128;
      }
    }
    uint64_t v240 = 0;
    uint64_t v229 = (WTF *)((char *)v233 + 8);
    LODWORD(v23) = v8[1];
    uint64_t v224 = v18;
LABEL_38:
    if (!v23) {
      goto LABEL_127;
    }
    unint64_t v24 = 0;
    uint64_t v231 = (v18 * v240);
    while (1)
    {
      WGSL::zeroValue((WGSL *)v250, v245);
      if (*v8)
      {
        for (unsigned int i = 0; i < *v8; ++i)
        {
          unsigned int v26 = v24 + v8[1] * i;
          uint64_t v27 = (unsigned int *)*((void *)v8 + 1);
          if (*v27 <= v26)
          {
            __break(0xC471u);
            JUMPOUT(0x182676AC0);
          }
          uint64_t v28 = &v27[6 * v26];
          LOBYTE(v264[0]) = 0;
          int v265 = -1;
          uint64_t v29 = v28[6];
          if (v29 != -1)
          {
            ((void (*)(double **, void *, unsigned int *))off_1ECABEE88[v29])(&v253, v264, v28 + 2);
            int v265 = v29;
          }
          unsigned int v30 = i + v11[1] * v240;
          uint64_t v31 = (unsigned int *)*((void *)v11 + 1);
          if (*v31 <= v30)
          {
            __break(0xC471u);
            JUMPOUT(0x182676AE0);
          }
          uint64_t v32 = &v31[6 * v30];
          LOBYTE(v266[0]) = 0;
          unsigned int v267 = -1;
          uint64_t v33 = v32[6];
          if (v33 != -1)
          {
            ((void (*)(double **, void *, unsigned int *))off_1ECABEE88[v33])(&v253, v266, v32 + 2);
            unsigned int v267 = v33;
          }
          uint64_t v34 = WTF::fastMalloc((WTF *)0x38);
          uint64_t v35 = (unsigned int *)v34;
          *(_OWORD *)(v34 + 8) = 0u;
          *(_DWORD *)uint64_t v34 = 2;
          *(_OWORD *)(v34 + 24) = 0u;
          *(_OWORD *)(v34 + 40) = 0u;
          v248[0] = v34;
          if (v265 == -1)
          {
            *(_DWORD *)(v34 + 24) = -1;
            uint64_t v37 = (double *)(v34 + 32);
            uint64_t v38 = v267;
            if (v267 == -1)
            {
              uint64_t v36 = 0;
LABEL_56:
              ((void (*)(double **, double *))off_1ECABEC60[v36])(&v253, v37);
              v35[12] = -1;
LABEL_57:
              WGSL::constantMultiply(&v258);
              uint64_t v40 = *v35;
              if (!v40) {
                goto LABEL_64;
              }
              goto LABEL_60;
            }
          }
          else
          {
            unint64_t v253 = (double *)(v34 + 8);
            ((void (*)(double **))off_1ECABEEE0[v265])(&v253);
            if (*v35 < 2)
            {
              __break(0xC471u);
              JUMPOUT(0x182676B00);
            }
            uint64_t v36 = v35[12];
            uint64_t v37 = (double *)(v35 + 8);
            uint64_t v38 = v267;
            if (v36 == -1)
            {
              if (v267 == 0xFFFFFFFFLL) {
                goto LABEL_57;
              }
            }
            else if (v267 == 0xFFFFFFFFLL)
            {
              goto LABEL_56;
            }
          }
          unint64_t v253 = v37;
          ((void (*)(double **))off_1ECABEEE0[v38])(&v253);
          WGSL::constantMultiply(&v258);
          uint64_t v40 = *v35;
          if (!v40) {
            goto LABEL_64;
          }
LABEL_60:
          uint64_t v41 = 24 * v40;
          uint64_t v42 = v35 + 6;
          do
          {
            uint64_t v39 = v42 - 4;
            uint64_t v43 = *v42;
            if (v43 != -1) {
              ((void (*)(double **, _DWORD *))off_1ECABEC60[v43])(&v253, v39);
            }
            *uint64_t v42 = -1;
            v42 += 6;
            v41 -= 24;
          }
          while (v41);
LABEL_64:
          WTF::fastFree((WTF *)v35, v39);
          if (v267 != -1) {
            ((void (*)(double **, void *))off_1ECABEC60[v267])(&v253, v266);
          }
          unsigned int v267 = -1;
          if (v265 != -1) {
            ((void (*)(double **, void *))off_1ECABEC60[v265])(&v253, v264);
          }
          if (v262)
          {
            if (v262 != 1) {
              goto LABEL_499;
            }
            uint64_t v44 = v259;
            if (v259) {
              *v259 += 2;
            }
            *(void *)(v239 + 8) = v44;
            int v45 = 1;
            *(_DWORD *)(v239 + 32) = 1;
            uint64_t v46 = 1;
LABEL_114:
            ((void (*)(void *, _DWORD **))off_1ECABED68[v46])(v264, &v259);
            goto LABEL_115;
          }
          LOBYTE(v248[0]) = 0;
          unsigned int v249 = -1;
          uint64_t v47 = LODWORD(v261);
          if (LODWORD(v261) != -1)
          {
            ((void (*)(void *, void *, _DWORD **))off_1ECABECB8[LODWORD(v261)])(v264, v248, &v259);
            unsigned int v249 = v47;
          }
          LOBYTE(v264[0]) = 0;
          int v265 = -1;
          unsigned int v48 = v251;
          if (v251 != -1)
          {
            ((void (*)(uint64_t *, void *, void *))off_1ECABEE88[v251])(&v252, v264, v250);
            int v265 = v48;
            uint64_t v47 = v249;
          }
          LOBYTE(v266[0]) = 0;
          unsigned int v267 = -1;
          if (v47 != 0xFFFFFFFFLL)
          {
            ((void (*)(uint64_t *, void *, void *))off_1ECABEE88[v47])(&v252, v266, v248);
            unsigned int v267 = v47;
          }
          uint64_t v49 = WTF::fastMalloc((WTF *)0x38);
          unint64_t v50 = (unsigned int *)v49;
          *(_OWORD *)(v49 + 8) = 0u;
          *(_DWORD *)uint64_t v49 = 2;
          *(_OWORD *)(v49 + 24) = 0u;
          *(_OWORD *)(v49 + 40) = 0u;
          v247 = (unsigned int *)v49;
          if (v265 == -1)
          {
            *(_DWORD *)(v49 + 24) = -1;
            uint64_t v52 = (unsigned int *)(v49 + 32);
            uint64_t v53 = v267;
            if (v267 == -1)
            {
              uint64_t v51 = 0;
LABEL_87:
              ((void (*)(uint64_t *, unsigned int *))off_1ECABEC60[v51])(&v252, v52);
              v50[12] = -1;
LABEL_88:
              WGSL::constantAdd((uint64_t)v245, &v247, (uint64_t)&v253);
              uint64_t v55 = *v50;
              if (!v55) {
                goto LABEL_95;
              }
              goto LABEL_91;
            }
          }
          else
          {
            uint64_t v252 = v49 + 8;
            ((void (*)(uint64_t *))off_1ECABEEE0[v265])(&v252);
            if (*v50 < 2)
            {
              __break(0xC471u);
              JUMPOUT(0x182676B20);
            }
            uint64_t v51 = v50[12];
            uint64_t v52 = v50 + 8;
            uint64_t v53 = v267;
            if (v51 == -1)
            {
              if (v267 == 0xFFFFFFFFLL) {
                goto LABEL_88;
              }
            }
            else if (v267 == 0xFFFFFFFFLL)
            {
              goto LABEL_87;
            }
          }
          uint64_t v252 = (uint64_t)v52;
          ((void (*)(uint64_t *))off_1ECABEEE0[v53])(&v252);
          WGSL::constantAdd((uint64_t)v245, &v247, (uint64_t)&v253);
          uint64_t v55 = *v50;
          if (!v55) {
            goto LABEL_95;
          }
LABEL_91:
          uint64_t v56 = 24 * v55;
          uint64_t v57 = v50 + 6;
          do
          {
            uint64_t v54 = v57 - 4;
            uint64_t v58 = *v57;
            if (v58 != -1) {
              ((void (*)(uint64_t *, _DWORD *))off_1ECABEC60[v58])(&v252, v54);
            }
            _DWORD *v57 = -1;
            v57 += 6;
            v56 -= 24;
          }
          while (v56);
LABEL_95:
          WTF::fastFree((WTF *)v50, v54);
          if (v267 != -1) {
            ((void (*)(uint64_t *, void *))off_1ECABEC60[v267])(&v252, v266);
          }
          unsigned int v267 = -1;
          if (v265 != -1) {
            ((void (*)(uint64_t *, void *))off_1ECABEC60[v265])(&v252, v264);
          }
          int v45 = v257;
          if (v257)
          {
            if (v257 != 1) {
              goto LABEL_499;
            }
            double v59 = v254;
            if (v254 != 0.0) {
              **(_DWORD **)&v254 += 2;
            }
            *(double *)(v239 + 8) = v59;
            *(_DWORD *)(v239 + 32) = 1;
          }
          else
          {
            if (v251 == -1)
            {
              if (v256 == -1) {
                goto LABEL_109;
              }
            }
            else if (v256 == -1)
            {
              ((void (*)(void *, void *))off_1ECABEC60[v251])(v264, v250);
              unsigned int v251 = -1;
              goto LABEL_109;
            }
            v264[0] = v250;
            ((void (*)(void *, void *, double *))off_1ECABEF38[v256])(v264, v250, &v254);
          }
LABEL_109:
          if (v257 != -1) {
            ((void (*)(void *, double *))off_1ECABED68[v257])(v264, &v254);
          }
          if (v249 != -1) {
            ((void (*)(void *, void *))off_1ECABEC60[v249])(v264, v248);
          }
          uint64_t v46 = v262;
          if (v262 != -1) {
            goto LABEL_114;
          }
LABEL_115:
          if (v45)
          {
            if (v251 != -1) {
              ((void (*)(void *, void *))off_1ECABEC60[v251])(v264, v250);
            }
            uint64_t v64 = (unsigned int *)v233;
            if (!v233) {
              return;
            }
LABEL_214:
            uint64_t v95 = *v64;
            if (v95)
            {
              uint64_t v96 = 24 * v95;
              uint64_t v97 = v64 + 6;
              do
              {
                a2 = (int **)(v97 - 4);
                uint64_t v98 = *v97;
                if (v98 != -1) {
                  ((void (*)(void *, int **))off_1ECABEC60[v98])(v264, a2);
                }
                *uint64_t v97 = -1;
                v97 += 6;
                v96 -= 24;
              }
              while (v96);
            }
LABEL_417:
            WTF::fastFree((WTF *)v64, a2);
            return;
          }
        }
      }
      if (v24 + v231 >= *(unsigned int *)v233)
      {
        __break(0xC471u);
        JUMPOUT(0x182676BE0);
      }
      uint64_t v60 = (char *)v229 + 24 * v24 + 24 * v231;
      uint64_t v61 = *((unsigned int *)v60 + 4);
      if (v61 == -1)
      {
        if (v251 == -1) {
          goto LABEL_125;
        }
      }
      else if (v251 == -1)
      {
        ((void (*)(void *, char *))off_1ECABEC60[v61])(v264, (char *)v229 + 24 * v24 + 24 * v231);
        *((_DWORD *)v60 + 4) = -1;
        uint64_t v62 = v251;
        if (v251 == -1) {
          goto LABEL_125;
        }
LABEL_124:
        ((void (*)(void *, void *))off_1ECABEC60[v62])(v264, v250);
        goto LABEL_125;
      }
      v264[0] = (char *)v229 + 24 * v24 + 24 * v231;
      ((void (*)(void *, void, void *))off_1ECABEEE0[v251])(v264, v264[0], v250);
      uint64_t v62 = v251;
      if (v251 != -1) {
        goto LABEL_124;
      }
LABEL_125:
      ++v24;
      unint64_t v23 = v8[1];
      if (v24 >= v23)
      {
        unsigned int v17 = *v11;
        a3 = v239;
        uint64_t v18 = v224;
LABEL_127:
        if (++v240 >= (unint64_t)v17)
        {
LABEL_128:
          uint64_t v63 = v227 | (v18 << 32);
          uint64_t v64 = (unsigned int *)v233;
          if (!v233)
          {
            *(void *)(a3 + 8) = v63;
            *(void *)(a3 + 16) = 0;
            *(_DWORD *)(a3 + 24) = 9;
            *(_DWORD *)(a3 + 32) = 0;
            return;
          }
          uint64_t v65 = *(unsigned int *)v233;
          uint64_t v66 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v65 + 8));
          _DWORD *v66 = v65;
          if (v65)
          {
            unint64_t v67 = 0;
            uint64_t v68 = 24 * v65;
            do
            {
              LOBYTE(v66[v67 / 4 + 2]) = 0;
              a2 = (int **)&v66[v67 / 4 + 2];
              v66[v67 / 4 + 6] = -1;
              uint64_t v69 = *(unsigned int *)((char *)v233 + v67 + 24);
              if (v69 != -1)
              {
                ((void (*)(void *, int **, char *))off_1ECABEE88[v69])(v264, a2, (char *)v233 + v67 + 8);
                v66[v67 / 4 + 6] = v69;
              }
              v67 += 24;
            }
            while (v68 != v67);
            a3 = v239;
          }
          *(void *)(a3 + 8) = v63;
          *(void *)(a3 + 16) = v66;
          *(_DWORD *)(a3 + 24) = 9;
          *(_DWORD *)(a3 + 32) = 0;
          goto LABEL_214;
        }
        goto LABEL_38;
      }
    }
  }
  if (v7 != 9 && v10 != 9)
  {
    LOBYTE(v264[0]) = 0;
    int v265 = -1;
    if (v7 != -1)
    {
      ((void (*)(double *, void *, int *))off_1ECABEE88[v7])(&v258, v264, v4 + 2);
      int v265 = v7;
      LODWORD(v10) = v4[12];
    }
    LOBYTE(v266[0]) = 0;
    unsigned int v267 = -1;
    if (v10 != -1)
    {
      ((void (*)(double *, void *, float *))off_1ECABEE88[v10])(&v258, v266, v244);
      unsigned int v267 = v10;
      LODWORD(v7) = v265;
    }
    LOBYTE(v258) = 0;
    unsigned int v260 = -1;
    if (v7 != -1)
    {
      uint64_t v21 = v7;
      ((void (*)(double **, double *, void *))off_1ECABEE88[v7])(&v253, &v258, v264);
      unsigned int v260 = v7;
      if (v7 == 8)
      {
        if (v258 == 0.0) {
          unsigned int v22 = 0;
        }
        else {
          unsigned int v22 = **(_DWORD **)&v258;
        }
        ((void (*)(double **, double *))off_1ECABEC60[v21])(&v253, &v258);
        if (!v22)
        {
LABEL_297:
          switch(v4[6])
          {
            case 0:
              if (v4[12]) {
                goto LABEL_499;
              }
              *(float *)(a3 + 8) = *(float *)v6 * *v244;
              *(_DWORD *)(a3 + 24) = 0;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v94 = v267;
              if (v267 == -1) {
                goto LABEL_211;
              }
              goto LABEL_210;
            case 1:
              if (v4[12] != 1) {
                goto LABEL_499;
              }
              *(short float *)(a3 + 8) = *(short float *)v6 * *(short float *)v244;
              *(_DWORD *)(a3 + 24) = 1;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v94 = v267;
              if (v267 == -1) {
                goto LABEL_211;
              }
              goto LABEL_210;
            case 2:
              if (v4[12] != 2) {
                goto LABEL_499;
              }
              *(double *)(a3 + 8) = *(double *)v6 * *(double *)v244;
              *(_DWORD *)(a3 + 24) = 2;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v94 = v267;
              if (v267 == -1) {
                goto LABEL_211;
              }
              goto LABEL_210;
            case 3:
              if (v4[12] != 3) {
                goto LABEL_499;
              }
              *(_DWORD *)(a3 + 8) = *(_DWORD *)v244 * *v6;
              *(_DWORD *)(a3 + 24) = 3;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v94 = v267;
              if (v267 == -1) {
                goto LABEL_211;
              }
              goto LABEL_210;
            case 4:
              if (v4[12] != 4) {
                goto LABEL_499;
              }
              *(_DWORD *)(a3 + 8) = *(_DWORD *)v244 * *v6;
              *(_DWORD *)(a3 + 24) = 4;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v94 = v267;
              if (v267 == -1) {
                goto LABEL_211;
              }
              goto LABEL_210;
            case 5:
              if (v4[12] != 5) {
                goto LABEL_499;
              }
              *(void *)(a3 + 8) = *(void *)v244 * *(void *)v6;
              *(_DWORD *)(a3 + 24) = 5;
              *(_DWORD *)(a3 + 32) = 0;
              uint64_t v94 = v267;
              if (v267 == -1) {
                goto LABEL_211;
              }
              goto LABEL_210;
            default:
              __break(0xC471u);
              JUMPOUT(0x182676CE8);
          }
        }
        goto LABEL_153;
      }
      ((void (*)(double **, double *))off_1ECABEC60[v7])(&v253, &v258);
      LODWORD(v10) = v267;
    }
    LOBYTE(v258) = 0;
    unsigned int v260 = -1;
    if (v10 == -1) {
      goto LABEL_297;
    }
    ((void (*)(double **, double *, void *))off_1ECABEE88[v10])(&v253, &v258, v266);
    unsigned int v260 = v10;
    if (v10 != 8 || v258 == 0.0) {
      unsigned int v22 = 0;
    }
    else {
      unsigned int v22 = **(_DWORD **)&v258;
    }
    ((void (*)(double **, double *))off_1ECABEC60[v10])(&v253, &v258);
    if (!v22) {
      goto LABEL_297;
    }
LABEL_153:
    uint64_t v73 = 24 * v22;
    uint64_t v74 = (unsigned int *)WTF::fastMalloc((WTF *)(v73 + 8));
    *uint64_t v74 = v22;
    uint64_t v75 = 24;
    bzero(v74 + 2, 24 * ((v73 - 24) / 0x18uLL) + 24);
    unint64_t v77 = 0;
    LODWORD(v258) = 0;
    unsigned int v260 = 0;
    LODWORD(v261) = 0;
    unsigned int v263 = 0;
    while (1)
    {
      if (v265 == 8)
      {
        if (v77 >= *(unsigned int *)v264[0]) {
          goto LABEL_487;
        }
        uint64_t v76 = v264[0] + v75 - 16;
        uint64_t v78 = *(unsigned int *)(v264[0] + v75);
        uint64_t v79 = v260;
        if (v260 == -1)
        {
          if (v78 == -1) {
            goto LABEL_167;
          }
        }
        else if (v78 == -1)
        {
          goto LABEL_162;
        }
        unint64_t v253 = &v258;
        ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v78])(&v253, &v258, v76);
      }
      else
      {
        uint64_t v79 = v260;
        if (v260 == -1)
        {
          if (v265 == -1) {
            goto LABEL_167;
          }
        }
        else if (v265 == -1)
        {
LABEL_162:
          ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v79])(&v253, &v258, v76);
          unsigned int v260 = -1;
          goto LABEL_167;
        }
        unint64_t v253 = &v258;
        ((void (*)(double **, double *, void *))off_1ECABEEE0[v265])(&v253, &v258, v264);
      }
LABEL_167:
      if (v267 == 8)
      {
        if (v77 >= *(unsigned int *)v266[0])
        {
LABEL_487:
          __break(0xC471u);
          JUMPOUT(0x182676B40);
        }
        uint64_t v76 = v266[0] + v75 - 16;
        uint64_t v80 = *(unsigned int *)(v266[0] + v75);
        uint64_t v81 = v263;
        if (v263 != -1)
        {
          if (v80 != -1) {
            goto LABEL_178;
          }
LABEL_174:
          ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v81])(&v253, &v261, v76);
          unsigned int v263 = -1;
          goto LABEL_179;
        }
        if (v80 != -1)
        {
LABEL_178:
          unint64_t v253 = &v261;
          ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v80])(&v253, &v261, v76);
        }
      }
      else
      {
        uint64_t v81 = v263;
        if (v263 != -1)
        {
          if (v267 != -1) {
            goto LABEL_176;
          }
          goto LABEL_174;
        }
        if (v267 != -1)
        {
LABEL_176:
          unint64_t v253 = &v261;
          ((void (*)(double **, double *, void *))off_1ECABEEE0[v267])(&v253, &v261, v266);
        }
      }
LABEL_179:
      switch(v260)
      {
        case 0u:
          if (v263) {
            goto LABEL_499;
          }
          *(float *)&double v254 = *(float *)&v258 * *(float *)&v261;
          break;
        case 1u:
          if (v263 != 1) {
            goto LABEL_499;
          }
          *(short float *)&double v254 = *(short float *)&v258 * *(short float *)&v261;
          break;
        case 2u:
          if (v263 != 2) {
            goto LABEL_499;
          }
          double v254 = v258 * v261;
          break;
        case 3u:
          if (v263 != 3) {
            goto LABEL_499;
          }
          goto LABEL_187;
        case 4u:
          if (v263 != 4) {
            goto LABEL_499;
          }
LABEL_187:
          LODWORD(v254) = LODWORD(v261) * LODWORD(v258);
          break;
        case 5u:
          if (v263 != 5) {
            goto LABEL_499;
          }
          *(void *)&double v254 = *(void *)&v261 * *(void *)&v258;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x182676CC8);
      }
      unsigned int v256 = v260;
      int v257 = 0;
      if (v77 >= *v74)
      {
        __break(0xC471u);
        JUMPOUT(0x182676B60);
      }
      v250[0] = &v74[(unint64_t)v75 / 4 - 4];
      ((void (*)(void *))off_1ECABEF38[v260])(v250);
      if (v257 != -1) {
        ((void (*)(void *, double *))off_1ECABED68[v257])(v250, &v254);
      }
      ++v77;
      v75 += 24;
      if (v22 == v77)
      {
        uint64_t v82 = *v74;
        unsigned int v83 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v82 + 8));
        int v85 = v83;
        *unsigned int v83 = v82;
        if (v82)
        {
          unsigned int v86 = v83 + 6;
          uint64_t v87 = 24 * v82;
          int v88 = v74 + 6;
          do
          {
            *((unsigned char *)v86 - 16) = 0;
            double v84 = v86 - 4;
            _DWORD *v86 = -1;
            uint64_t v89 = *v88;
            if (v89 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v89])(&v253, v84, v88 - 4);
              _DWORD *v86 = v89;
            }
            v86 += 6;
            v88 += 6;
            v87 -= 24;
          }
          while (v87);
        }
        *(void *)(v239 + 8) = v85;
        *(_DWORD *)(v239 + 24) = 8;
        *(_DWORD *)(v239 + 32) = 0;
        if (v263 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v263])(&v253, &v261);
        }
        unsigned int v263 = -1;
        if (v260 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v260])(&v253, &v258);
        }
        uint64_t v90 = *v74;
        if (v90)
        {
          uint64_t v91 = 24 * v90;
          uint64_t v92 = v74 + 6;
          do
          {
            double v84 = v92 - 4;
            uint64_t v93 = *v92;
            if (v93 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v93])(&v258, v84);
            }
            *uint64_t v92 = -1;
            v92 += 6;
            v91 -= 24;
          }
          while (v91);
        }
        WTF::fastFree((WTF *)v74, v84);
        uint64_t v94 = v267;
        if (v267 != -1) {
LABEL_210:
        }
          ((void (*)(double *, void *))off_1ECABEC60[v94])(&v258, v266);
LABEL_211:
        unsigned int v267 = -1;
        if (v265 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v265])(&v258, v264);
        }
        return;
      }
    }
  }
  if (v10 == 8)
  {
    if (*(_DWORD *)(a1 + 48) == 1)
    {
      unsigned int v236 = *(const WGSL::Type **)a1;
      uint64_t v14 = (WTF *)*v8;
      uint64_t v15 = v8[1];
      if (v15)
      {
        int v228 = (WTF *)WTF::fastMalloc((WTF *)(24 * v15 + 8));
        *(_DWORD *)int v228 = v15;
        bzero((char *)v228 + 8, 24 * ((24 * v15 - 24) / 0x18uLL) + 24);
        if (v14) {
          goto LABEL_22;
        }
      }
      else
      {
        int v228 = 0;
        if (v14)
        {
LABEL_22:
          unint64_t v16 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * (void)v14 + 8));
          *unint64_t v16 = v14;
          bzero(v16 + 2, 24 * ((24 * (uint64_t)v14 - 24) / 0x18uLL) + 24);
          if (!v15)
          {
LABEL_287:
            if (v228)
            {
              uint64_t v130 = *(unsigned int *)v228;
              int v131 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v130 + 8));
              _DWORD *v131 = v130;
              if (v130)
              {
                unint64_t v132 = 0;
                uint64_t v133 = 24 * v130;
                do
                {
                  LOBYTE(v131[v132 / 4 + 2]) = 0;
                  a2 = (int **)&v131[v132 / 4 + 2];
                  v131[v132 / 4 + 6] = -1;
                  uint64_t v134 = *(unsigned int *)((char *)v228 + v132 + 24);
                  if (v134 != -1)
                  {
                    ((void (*)(void *, int **, char *))off_1ECABEE88[v134])(v264, a2, (char *)v228 + v132 + 8);
                    v131[v132 / 4 + 6] = v134;
                  }
                  v132 += 24;
                }
                while (v133 != v132);
              }
            }
            else
            {
              int v131 = 0;
            }
            *(void *)(a3 + 8) = v131;
            *(_DWORD *)(a3 + 24) = 8;
            *(_DWORD *)(a3 + 32) = 0;
LABEL_303:
            if (v16)
            {
              uint64_t v135 = *v16;
              if (v135)
              {
                uint64_t v136 = 24 * v135;
                uint64_t v137 = v16 + 6;
                do
                {
                  a2 = (int **)(v137 - 4);
                  uint64_t v138 = *v137;
                  if (v138 != -1) {
                    ((void (*)(void *, int **))off_1ECABEC60[v138])(v264, a2);
                  }
                  *uint64_t v137 = -1;
                  v137 += 6;
                  v136 -= 24;
                }
                while (v136);
              }
              WTF::fastFree((WTF *)v16, a2);
            }
            if (v228)
            {
              uint64_t v139 = *(unsigned int *)v228;
              if (v139)
              {
                uint64_t v140 = 24 * v139;
                uint64_t v141 = (_DWORD *)((char *)v228 + 24);
                do
                {
                  a2 = (int **)(v141 - 4);
                  uint64_t v142 = *v141;
                  if (v142 != -1) {
                    ((void (*)(void *, int **))off_1ECABEC60[v142])(v264, a2);
                  }
                  *uint64_t v141 = -1;
                  v141 += 6;
                  v140 -= 24;
                }
                while (v140);
              }
              WTF::fastFree(v228, a2);
            }
            return;
          }
          goto LABEL_224;
        }
      }
      unint64_t v16 = 0;
      if (!v15) {
        goto LABEL_287;
      }
LABEL_224:
      unint64_t v99 = 0;
      uint64_t v235 = v14;
      unsigned int v225 = (char *)v228 + 8;
      while (1)
      {
        unint64_t v241 = v99;
        if (v14)
        {
          unint64_t v100 = 0;
          unsigned int v101 = v99;
          uint64_t v102 = v16 + 6;
          while (1)
          {
            while (1)
            {
              uint64_t v103 = (unsigned int *)*((void *)v8 + 1);
              if (*v103 <= v101)
              {
                __break(0xC471u);
                JUMPOUT(0x182676A40);
              }
              if (v100 >= *v16)
              {
                __break(0xC471u);
                JUMPOUT(0x182676A60);
              }
              uint64_t v104 = *v102;
              uint64_t v105 = v103[6 * v101 + 6];
              if (v104 != -1) {
                break;
              }
              if (v105 != -1) {
                goto LABEL_228;
              }
LABEL_229:
              ++v100;
              v102 += 6;
              v101 += v15;
              if (v14 == (WTF *)v100) {
                goto LABEL_237;
              }
            }
            if (v105 != -1)
            {
LABEL_228:
              v264[0] = v102 - 4;
              ((void (*)(void *))off_1ECABEEE0[v105])(v264);
              goto LABEL_229;
            }
            ((void (*)(void *, _DWORD *))off_1ECABEC60[v104])(v264, v102 - 4);
            *uint64_t v102 = -1;
            v102 += 6;
            ++v100;
            v101 += v15;
            if (v14 == (WTF *)v100) {
              goto LABEL_237;
            }
          }
        }
        if (v16)
        {
LABEL_237:
          uint64_t v106 = *v16;
          unsigned int v107 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v106 + 8));
          *unsigned int v107 = v106;
          if (v106)
          {
            uint64_t v108 = 0;
            do
            {
              LOBYTE(v107[v108 + 2]) = 0;
              v107[v108 + 6] = -1;
              uint64_t v109 = v16[v108 + 6];
              if (v109 != -1)
              {
                ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v109])(&v253, &v107[v108 + 2], &v16[v108 + 2]);
                v107[v108 + 6] = v109;
              }
              v108 += 6;
            }
            while (6 * v106 != v108);
            uint64_t v14 = v235;
          }
          v264[0] = v107;
          int v265 = 8;
          unsigned int v110 = *(unsigned int **)v244;
          if (!*(void *)v244)
          {
LABEL_251:
            double v112 = 0;
            goto LABEL_252;
          }
        }
        else
        {
          v264[0] = 0;
          int v265 = 8;
          unsigned int v110 = *(unsigned int **)v244;
          if (!*(void *)v244) {
            goto LABEL_251;
          }
        }
        uint64_t v111 = *v110;
        double v112 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v111 + 8));
        _DWORD *v112 = v111;
        if (v111)
        {
          unint64_t v113 = 0;
          uint64_t v114 = 24 * v111;
          do
          {
            LOBYTE(v112[v113 / 4 + 2]) = 0;
            v112[v113 / 4 + 6] = -1;
            uint64_t v115 = v110[v113 / 4 + 6];
            if (v115 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v115])(&v253, &v112[v113 / 4 + 2], &v110[v113 / 4 + 2]);
              v112[v113 / 4 + 6] = v115;
            }
            v113 += 24;
          }
          while (v114 != v113);
          uint64_t v14 = v235;
        }
LABEL_252:
        v266[0] = v112;
        unsigned int v267 = 8;
        uint64_t v116 = WTF::fastMalloc((WTF *)0x38);
        int v117 = (unsigned int *)v116;
        *(_OWORD *)(v116 + 8) = 0u;
        *(_DWORD *)uint64_t v116 = 2;
        *(_OWORD *)(v116 + 24) = 0u;
        *(_OWORD *)(v116 + 40) = 0u;
        v250[0] = v116;
        if (v265 == -1)
        {
          *(_DWORD *)(v116 + 24) = -1;
          int v119 = (double *)(v116 + 32);
          uint64_t v120 = v267;
          if (v267 == -1)
          {
            uint64_t v118 = 0;
LABEL_260:
            ((void (*)(double **, double *))off_1ECABEC60[v118])(&v253, v119);
            v117[12] = -1;
LABEL_261:
            WGSL::constantDot(v236, (uint64_t)&v258);
            uint64_t v122 = *v117;
            if (!v122) {
              goto LABEL_268;
            }
            goto LABEL_264;
          }
        }
        else
        {
          unint64_t v253 = (double *)(v116 + 8);
          ((void (*)(double **))off_1ECABEEE0[v265])(&v253);
          if (*v117 < 2)
          {
            __break(0xC471u);
            JUMPOUT(0x182676BC0);
          }
          uint64_t v118 = v117[12];
          int v119 = (double *)(v117 + 8);
          uint64_t v120 = v267;
          if (v118 == -1)
          {
            if (v267 == 0xFFFFFFFFLL) {
              goto LABEL_261;
            }
          }
          else if (v267 == 0xFFFFFFFFLL)
          {
            goto LABEL_260;
          }
        }
        unint64_t v253 = v119;
        ((void (*)(double **))off_1ECABEEE0[v120])(&v253);
        WGSL::constantDot(v236, (uint64_t)&v258);
        uint64_t v122 = *v117;
        if (!v122) {
          goto LABEL_268;
        }
LABEL_264:
        uint64_t v123 = 24 * v122;
        unsigned int v124 = v117 + 6;
        do
        {
          uint64_t v121 = v124 - 4;
          uint64_t v125 = *v124;
          if (v125 != -1) {
            ((void (*)(double **, _DWORD *))off_1ECABEC60[v125])(&v253, v121);
          }
          _DWORD *v124 = -1;
          v124 += 6;
          v123 -= 24;
        }
        while (v123);
LABEL_268:
        WTF::fastFree((WTF *)v117, v121);
        if (v267 != -1) {
          ((void (*)(double **, void *))off_1ECABEC60[v267])(&v253, v266);
        }
        unsigned int v267 = -1;
        if (v265 != -1) {
          ((void (*)(double **, void *))off_1ECABEC60[v265])(&v253, v264);
        }
        unsigned int v126 = v262;
        if (v262)
        {
          if (v262 != 1) {
            break;
          }
          uint64_t v127 = v259;
          if (v259) {
            *v259 += 2;
          }
          *(void *)(a3 + 8) = v127;
          *(_DWORD *)(a3 + 32) = 1;
        }
        else
        {
          if (v241 >= *(unsigned int *)v228)
          {
            __break(0xC471u);
            JUMPOUT(0x182676C60);
          }
          unsigned int v128 = &v225[24 * v241];
          uint64_t v129 = *((unsigned int *)v128 + 4);
          if (v129 == -1)
          {
            if (LODWORD(v261) == -1) {
              goto LABEL_283;
            }
          }
          else if (LODWORD(v261) == -1)
          {
            ((void (*)(void *, char *))off_1ECABEC60[v129])(v264, &v225[24 * v241]);
            *((_DWORD *)v128 + 4) = -1;
            goto LABEL_283;
          }
          v264[0] = &v225[24 * v241];
          ((void (*)(void *, void, _DWORD **))off_1ECABEF38[LODWORD(v261)])(v264, v264[0], &v259);
        }
LABEL_283:
        if (v262 != -1) {
          ((void (*)(void *, _DWORD **))off_1ECABED68[v262])(v264, &v259);
        }
        if (v126) {
          goto LABEL_303;
        }
        unint64_t v99 = v241 + 1;
        if (v241 + 1 == v15) {
          goto LABEL_287;
        }
      }
    }
LABEL_499:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  if (v7 == 8)
  {
    if (*(_DWORD *)(a1 + 48) != 1) {
      goto LABEL_499;
    }
    int v234 = *(WTF **)a1;
    uint64_t v70 = *v11;
    uint64_t v71 = v11[1];
    if (v70)
    {
      uint64_t v64 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v70 + 8));
      *uint64_t v64 = v70;
      bzero(v64 + 2, 24 * ((24 * v70 - 24) / 0x18uLL) + 24);
      unsigned int v237 = (unsigned int **)(v4 + 2);
      if (v71) {
        goto LABEL_142;
      }
    }
    else
    {
      uint64_t v64 = 0;
      unsigned int v237 = (unsigned int **)(v4 + 2);
      if (v71)
      {
LABEL_142:
        uint64_t v72 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v71 + 8));
        *uint64_t v72 = v71;
        bzero(v72 + 2, 24 * ((24 * v71 - 24) / 0x18uLL) + 24);
        if (!v70)
        {
LABEL_380:
          if (v64)
          {
            uint64_t v175 = *v64;
            unsigned int v176 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v175 + 8));
            *unsigned int v176 = v175;
            if (v175)
            {
              unint64_t v177 = 0;
              uint64_t v178 = 24 * v175;
              do
              {
                LOBYTE(v176[v177 / 4 + 2]) = 0;
                a2 = (int **)&v176[v177 / 4 + 2];
                v176[v177 / 4 + 6] = -1;
                uint64_t v179 = v64[v177 / 4 + 6];
                if (v179 != -1)
                {
                  ((void (*)(void *, int **, unsigned int *))off_1ECABEE88[v179])(v264, a2, &v64[v177 / 4 + 2]);
                  v176[v177 / 4 + 6] = v179;
                }
                v177 += 24;
              }
              while (v178 != v177);
              a3 = v239;
            }
          }
          else
          {
            unsigned int v176 = 0;
          }
          *(void *)(a3 + 8) = v176;
          *(_DWORD *)(a3 + 24) = 8;
          *(_DWORD *)(a3 + 32) = 0;
LABEL_404:
          if (v72)
          {
            uint64_t v180 = *v72;
            if (v180)
            {
              uint64_t v181 = 24 * v180;
              unsigned int v182 = v72 + 6;
              do
              {
                a2 = (int **)(v182 - 4);
                uint64_t v183 = *v182;
                if (v183 != -1) {
                  ((void (*)(void *, int **))off_1ECABEC60[v183])(v264, a2);
                }
                *unsigned int v182 = -1;
                v182 += 6;
                v181 -= 24;
              }
              while (v181);
            }
            WTF::fastFree((WTF *)v72, a2);
          }
          if (!v64) {
            return;
          }
          uint64_t v184 = *v64;
          if (v184)
          {
            uint64_t v185 = 24 * v184;
            int16x8_t v186 = v64 + 6;
            do
            {
              a2 = (int **)(v186 - 4);
              uint64_t v187 = *v186;
              if (v187 != -1) {
                ((void (*)(void *, int **))off_1ECABEC60[v187])(v264, a2);
              }
              *int16x8_t v186 = -1;
              v186 += 6;
              v185 -= 24;
            }
            while (v185);
          }
          goto LABEL_417;
        }
        goto LABEL_319;
      }
    }
    uint64_t v72 = 0;
    if (!v70) {
      goto LABEL_380;
    }
LABEL_319:
    unsigned int v143 = 0;
    unint64_t v144 = 0;
    unsigned int v226 = v64;
    uint64_t v223 = v64 + 2;
    uint64_t v246 = 24 * v71;
    int v230 = v71;
    uint64_t v232 = v70;
    while (1)
    {
      unint64_t v242 = v144;
      uint64_t v145 = v143;
      if (v71)
      {
        unint64_t v146 = 0;
        unint64_t v147 = 0;
        uint64_t v148 = 6 * v143;
        do
        {
          while (1)
          {
            int v149 = (unsigned int *)*((void *)v11 + 1);
            if (v145 + v147 >= *v149)
            {
              __break(0xC471u);
              JUMPOUT(0x182676A80);
            }
            if (v147 >= *v72)
            {
              __break(0xC471u);
              JUMPOUT(0x182676AA0);
            }
            uint64_t v150 = v72[v146 / 4 + 6];
            uint64_t v151 = v149[v148 + 6 + v146 / 4];
            if (v150 != -1) {
              break;
            }
            if (v151 != -1) {
              goto LABEL_323;
            }
LABEL_324:
            ++v147;
            v146 += 24;
            if (v246 == v146) {
              goto LABEL_330;
            }
          }
          if (v151 != -1)
          {
LABEL_323:
            v264[0] = &v72[v146 / 4 + 2];
            ((void (*)(void *))off_1ECABEEE0[v151])(v264);
            goto LABEL_324;
          }
          ((void (*)(void *, unsigned int *))off_1ECABEC60[v150])(v264, &v72[v146 / 4 + 2]);
          v72[v146 / 4 + 6] = -1;
          ++v147;
          v146 += 24;
        }
        while (v246 != v146);
      }
LABEL_330:
      unint64_t v152 = *v237;
      if (*v237)
      {
        uint64_t v153 = *v152;
        uint16x8_t v154 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v153 + 8));
        *uint16x8_t v154 = v153;
        if (v153)
        {
          uint64_t v155 = 0;
          do
          {
            LOBYTE(v154[v155 + 2]) = 0;
            v154[v155 + 6] = -1;
            uint64_t v156 = v152[v155 + 6];
            if (v156 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v156])(&v253, &v154[v155 + 2], &v152[v155 + 2]);
              v154[v155 + 6] = v156;
            }
            v155 += 6;
          }
          while (6 * v153 != v155);
          a3 = v239;
          uint64_t v64 = v226;
        }
        v264[0] = v154;
        int v265 = 8;
        if (!v72)
        {
LABEL_345:
          unsigned int v158 = 0;
          goto LABEL_346;
        }
      }
      else
      {
        v264[0] = 0;
        int v265 = 8;
        if (!v72) {
          goto LABEL_345;
        }
      }
      uint64_t v157 = *v72;
      unsigned int v158 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v157 + 8));
      *unsigned int v158 = v157;
      if (v157)
      {
        uint64_t v159 = 0;
        do
        {
          LOBYTE(v158[v159 + 2]) = 0;
          v158[v159 + 6] = -1;
          uint64_t v160 = v72[v159 + 6];
          if (v160 != -1)
          {
            ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v160])(&v253, &v158[v159 + 2], &v72[v159 + 2]);
            v158[v159 + 6] = v160;
          }
          v159 += 6;
        }
        while (6 * v157 != v159);
        a3 = v239;
      }
LABEL_346:
      v266[0] = v158;
      unsigned int v267 = 8;
      uint64_t v161 = WTF::fastMalloc((WTF *)0x38);
      uint64_t v162 = (unsigned int *)v161;
      *(_OWORD *)(v161 + 8) = 0u;
      *(_DWORD *)uint64_t v161 = 2;
      *(_OWORD *)(v161 + 24) = 0u;
      *(_OWORD *)(v161 + 40) = 0u;
      v250[0] = v161;
      if (v265 == -1)
      {
        *(_DWORD *)(v161 + 24) = -1;
        unint64_t v164 = (double *)(v161 + 32);
        uint64_t v165 = v267;
        if (v267 == -1)
        {
          uint64_t v163 = 0;
LABEL_354:
          ((void (*)(double **, double *))off_1ECABEC60[v163])(&v253, v164);
          v162[12] = -1;
          goto LABEL_356;
        }
      }
      else
      {
        unint64_t v253 = (double *)(v161 + 8);
        ((void (*)(double **))off_1ECABEEE0[v265])(&v253);
        if (*v162 < 2)
        {
          __break(0xC471u);
          JUMPOUT(0x182676C40);
        }
        uint64_t v163 = v162[12];
        unint64_t v164 = (double *)(v162 + 8);
        uint64_t v165 = v267;
        if (v163 == -1)
        {
          if (v267 == 0xFFFFFFFFLL) {
            goto LABEL_356;
          }
        }
        else if (v267 == 0xFFFFFFFFLL)
        {
          goto LABEL_354;
        }
      }
      unint64_t v253 = v164;
      ((void (*)(double **))off_1ECABEEE0[v165])(&v253);
LABEL_356:
      WGSL::constantDot(v234, (uint64_t)&v258);
      uint64_t v167 = *v162;
      if (v167)
      {
        uint64_t v168 = 24 * v167;
        int v169 = v162 + 6;
        do
        {
          int8x16x2_t v166 = v169 - 4;
          uint64_t v170 = *v169;
          if (v170 != -1) {
            ((void (*)(double **, _DWORD *))off_1ECABEC60[v170])(&v253, v166);
          }
          _DWORD *v169 = -1;
          v169 += 6;
          v168 -= 24;
        }
        while (v168);
      }
      WTF::fastFree((WTF *)v162, v166);
      if (v267 != -1) {
        ((void (*)(double **, void *))off_1ECABEC60[v267])(&v253, v266);
      }
      unsigned int v267 = -1;
      if (v265 != -1) {
        ((void (*)(double **, void *))off_1ECABEC60[v265])(&v253, v264);
      }
      unsigned int v171 = v262;
      if (v262)
      {
        if (v262 != 1) {
          goto LABEL_499;
        }
        uint64_t v172 = v259;
        if (v259) {
          *v259 += 2;
        }
        *(void *)(a3 + 8) = v172;
        *(_DWORD *)(a3 + 32) = 1;
      }
      else
      {
        if (v242 >= *v64)
        {
          __break(0xC471u);
          JUMPOUT(0x182676CA0);
        }
        int8x16_t v173 = &v223[6 * v242];
        uint64_t v174 = v173[4];
        if (v174 == -1)
        {
          if (LODWORD(v261) == -1) {
            goto LABEL_376;
          }
        }
        else if (LODWORD(v261) == -1)
        {
          ((void (*)(void *, unsigned int *))off_1ECABEC60[v174])(v264, &v223[6 * v242]);
          v173[4] = -1;
          goto LABEL_376;
        }
        v264[0] = &v223[6 * v242];
        ((void (*)(void *, void, _DWORD **))off_1ECABEF38[LODWORD(v261)])(v264, v264[0], &v259);
      }
LABEL_376:
      if (v262 != -1) {
        ((void (*)(void *, _DWORD **))off_1ECABED68[v262])(v264, &v259);
      }
      if (v171) {
        goto LABEL_404;
      }
      unint64_t v144 = v242 + 1;
      LODWORD(v71) = v230;
      unsigned int v143 = v145 + v230;
      if (v242 + 1 == v232) {
        goto LABEL_380;
      }
    }
  }
  LODWORD(v253) = 0;
  int v255 = 0;
  if (v7 == 9)
  {
    if (v10 == -1)
    {
      int v255 = -1;
    }
    else
    {
      v264[0] = &v253;
      ((void (*)(void *, double **, float *))off_1ECABEEE0[v10])(v264, &v253, v244);
    }
  }
  else
  {
    if (v7 == -1)
    {
      int v255 = -1;
    }
    else
    {
      v264[0] = &v253;
      ((void (*)(void *, double **, int *))off_1ECABEEE0[v7])(v264, &v253, v4 + 2);
    }
    uint64_t v6 = v11;
  }
  if (*(_DWORD *)(a1 + 48) != 2) {
    goto LABEL_499;
  }
  uint64_t v188 = *v6;
  uint64_t v189 = v6[1];
  unsigned int v190 = v189 * v188;
  if (!(v189 * v188))
  {
    *(void *)(a3 + 8) = v188 | (v189 << 32);
    *(void *)(a3 + 16) = 0;
    *(_DWORD *)(a3 + 24) = 9;
    *(_DWORD *)(a3 + 32) = 0;
    goto LABEL_476;
  }
  uint64_t v238 = v188 | (v189 << 32);
  int v191 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v190 + 8));
  *int v191 = v190;
  int v243 = v191 + 2;
  bzero(v191 + 2, 24 * ((24 * (unint64_t)v190 - 24) / 0x18) + 24);
  unint64_t v192 = 0;
  do
  {
    unsigned int v193 = (unsigned int *)*((void *)v6 + 1);
    if (v192 >= *v193)
    {
      __break(0xC471u);
      JUMPOUT(0x182676C00);
    }
    int v194 = &v193[6 * v192];
    LOBYTE(v264[0]) = 0;
    int v265 = -1;
    uint64_t v195 = v194[6];
    if (v195 != -1)
    {
      ((void (*)(void *, void *, unsigned int *))off_1ECABEE88[v195])(v250, v264, v194 + 2);
      int v265 = v195;
    }
    LOBYTE(v266[0]) = 0;
    unsigned int v267 = -1;
    unsigned int v196 = v255;
    if (v255 != -1)
    {
      ((void (*)(void *, void *, double **))off_1ECABEE88[v255])(v250, v266, &v253);
      unsigned int v267 = v196;
    }
    uint64_t v197 = WTF::fastMalloc((WTF *)0x38);
    unsigned int v198 = (unsigned int *)v197;
    *(_OWORD *)(v197 + 8) = 0u;
    *(_DWORD *)uint64_t v197 = 2;
    *(_OWORD *)(v197 + 24) = 0u;
    *(_OWORD *)(v197 + 40) = 0u;
    v248[0] = v197;
    if (v265 == -1)
    {
      *(_DWORD *)(v197 + 24) = -1;
      int v200 = (unsigned int *)(v197 + 32);
      uint64_t v201 = v267;
      if (v267 == -1)
      {
        uint64_t v199 = 0;
LABEL_437:
        ((void (*)(void *, unsigned int *))off_1ECABEC60[v199])(v250, v200);
        v198[12] = -1;
        goto LABEL_439;
      }
    }
    else
    {
      v250[0] = v197 + 8;
      ((void (*)(void *))off_1ECABEEE0[v265])(v250);
      if (*v198 < 2)
      {
        __break(0xC471u);
        JUMPOUT(0x182676C20);
      }
      uint64_t v199 = v198[12];
      int v200 = v198 + 8;
      uint64_t v201 = v267;
      if (v199 == -1)
      {
        if (v267 == 0xFFFFFFFFLL) {
          goto LABEL_439;
        }
      }
      else if (v267 == 0xFFFFFFFFLL)
      {
        goto LABEL_437;
      }
    }
    v250[0] = v200;
    ((void (*)(void *))off_1ECABEEE0[v201])(v250);
LABEL_439:
    WGSL::constantMultiply(&v258);
    uint64_t v203 = *v198;
    if (v203)
    {
      uint64_t v204 = 24 * v203;
      unint64_t v205 = v198 + 6;
      do
      {
        uint64_t v202 = v205 - 4;
        uint64_t v206 = *v205;
        if (v206 != -1) {
          ((void (*)(void *, _DWORD *))off_1ECABEC60[v206])(v250, v202);
        }
        *unint64_t v205 = -1;
        v205 += 6;
        v204 -= 24;
      }
      while (v204);
    }
    WTF::fastFree((WTF *)v198, v202);
    if (v267 != -1) {
      ((void (*)(void *, void *))off_1ECABEC60[v267])(v250, v266);
    }
    unsigned int v267 = -1;
    if (v265 != -1) {
      ((void (*)(void *, void *))off_1ECABEC60[v265])(v250, v264);
    }
    unsigned int v208 = v262;
    if (v262)
    {
      if (v262 != 1) {
        goto LABEL_499;
      }
      int v209 = v259;
      if (v259) {
        *v259 += 2;
      }
      *(void *)(a3 + 8) = v209;
      *(_DWORD *)(a3 + 32) = 1;
    }
    else
    {
      if (v192 >= *v191)
      {
        __break(0xC471u);
        JUMPOUT(0x182676C80);
      }
      uint64_t v210 = &v243[6 * v192];
      uint64_t v211 = v210[4];
      if (v211 == -1)
      {
        if (LODWORD(v261) == -1) {
          goto LABEL_459;
        }
      }
      else if (LODWORD(v261) == -1)
      {
        ((void (*)(void *, unsigned int *))off_1ECABEC60[v211])(v264, &v243[6 * v192]);
        v210[4] = -1;
        goto LABEL_459;
      }
      v264[0] = &v243[6 * v192];
      ((void (*)(void *, void, _DWORD **))off_1ECABEF38[LODWORD(v261)])(v264, v264[0], &v259);
    }
LABEL_459:
    if (v262 != -1) {
      ((void (*)(void *, _DWORD **))off_1ECABED68[v262])(v264, &v259);
    }
    if (v208) {
      goto LABEL_470;
    }
    ++v192;
    unint64_t v212 = *v191;
  }
  while (v192 < v212);
  unsigned int v213 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v212 + 8));
  uint64_t v214 = v213;
  *unsigned int v213 = v212;
  if (v212)
  {
    uint64_t v215 = v213 + 6;
    uint64_t v216 = 24 * v212;
    uint64_t v217 = v191 + 6;
    do
    {
      *((unsigned char *)v215 - 16) = 0;
      unsigned int v207 = v215 - 4;
      _DWORD *v215 = -1;
      uint64_t v218 = *v217;
      if (v218 != -1)
      {
        ((void (*)(void *, _DWORD *, unsigned int *))off_1ECABEE88[v218])(v264, v207, v217 - 4);
        _DWORD *v215 = v218;
      }
      v215 += 6;
      v217 += 6;
      v216 -= 24;
    }
    while (v216);
  }
  *(void *)(v239 + 8) = v238;
  *(void *)(v239 + 16) = v214;
  *(_DWORD *)(v239 + 24) = 9;
  *(_DWORD *)(v239 + 32) = 0;
LABEL_470:
  uint64_t v219 = *v191;
  if (v219)
  {
    uint64_t v220 = 24 * v219;
    int v221 = v191 + 6;
    do
    {
      unsigned int v207 = v221 - 4;
      uint64_t v222 = *v221;
      if (v222 != -1) {
        ((void (*)(void *, _DWORD *))off_1ECABEC60[v222])(v264, v207);
      }
      *int v221 = -1;
      v221 += 6;
      v220 -= 24;
    }
    while (v220);
  }
  WTF::fastFree((WTF *)v191, v207);
LABEL_476:
  if (v255 != -1) {
    ((void (*)(void *, double **))off_1ECABEC60[v255])(v264, &v253);
  }
}

void WGSL::constantDivide(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  int v3 = **a1;
  if (!v3)
  {
    __break(0xC471u);
    JUMPOUT(0x1826777F8);
  }
  if (v3 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182677818);
  }
  int v4 = (float *)(v2 + 2);
  LOBYTE(v60[0]) = 0;
  int v61 = -1;
  uint64_t v5 = v2[6];
  if (v5 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v5])(&v54, v60, v2 + 2);
    int v61 = v5;
  }
  uint64_t v6 = (float *)(v2 + 8);
  LOBYTE(v62[0]) = 0;
  int v63 = -1;
  uint64_t v7 = v2[12];
  if (v7 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v7])(&v54, v62, v2 + 8);
    int v63 = v7;
    LODWORD(v5) = v61;
  }
  LOBYTE(v54) = 0;
  unsigned int v56 = -1;
  if (v5 != -1)
  {
    uint64_t v8 = v5;
    ((void (*)(double **, double *, void *))off_1ECABEE88[v5])(&v64, &v54, v60);
    unsigned int v56 = v5;
    if (v5 == 8)
    {
      if (v54 == 0.0) {
        unsigned int v9 = 0;
      }
      else {
        unsigned int v9 = **(_DWORD **)&v54;
      }
      ((void (*)(double **, double *))off_1ECABEC60[v8])(&v64, &v54);
      if (!v9)
      {
LABEL_102:
        switch(v2[6])
        {
          case 0:
            if (v2[12]) {
              goto LABEL_138;
            }
            *(float *)(a2 + 8) = *v4 / *v6;
            *(_DWORD *)(a2 + 24) = 0;
            *(_DWORD *)(a2 + 32) = 0;
            goto LABEL_125;
          case 1:
            int v40 = v2[12];
            if (v40 != 1) {
              goto LABEL_138;
            }
            uint64_t v41 = a2;
            *(short float *)(a2 + 8) = *(short float *)v4 / *(short float *)v6;
            goto LABEL_109;
          case 2:
            int v40 = v2[12];
            if (v40 != 2) {
              goto LABEL_138;
            }
            uint64_t v41 = a2;
            *(double *)(a2 + 8) = *(double *)v4 / *(double *)v6;
LABEL_109:
            *(_DWORD *)(v41 + 24) = v40;
            *(_DWORD *)(v41 + 32) = 0;
            goto LABEL_125;
          case 3:
            if (v2[12] != 3) {
              goto LABEL_138;
            }
            float v42 = *v6;
            if (!*(_DWORD *)v6) {
              goto LABEL_122;
            }
            int v43 = v2[2];
            if (v43 == 0x80000000 && v42 == NAN) {
              goto LABEL_122;
            }
            int v44 = 0;
            LODWORD(v55) = v43 / SLODWORD(v42);
            LODWORD(v57) = 3;
            break;
          case 4:
            if (v2[12] != 4) {
              goto LABEL_138;
            }
            if (*(_DWORD *)v6)
            {
              int v45 = 0;
              LODWORD(v55) = v2[2] / *(_DWORD *)v6;
              LODWORD(v57) = 4;
            }
            else
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              int v45 = 1;
            }
            unsigned int v58 = v45;
            *(unsigned char *)(a2 + 8) = 0;
            *(_DWORD *)(a2 + 32) = -1;
            ((void (*)(double **, uint64_t, uint64_t *))off_1ECABED78[v45])(&v64, a2 + 8, &v55);
            *(_DWORD *)(a2 + 32) = v45;
            uint64_t v48 = v58;
            if (v58 == -1) {
              goto LABEL_125;
            }
            goto LABEL_124;
          case 5:
            if (v2[12] != 5) {
              goto LABEL_138;
            }
            uint64_t v46 = *(void *)v6;
            if (!*(void *)v6 || (uint64_t v47 = *((void *)v2 + 1), v47 == 0x8000000000000000) && v46 == -1)
            {
LABEL_122:
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              int v44 = 1;
            }
            else
            {
              int v44 = 0;
              uint64_t v55 = v47 / v46;
              LODWORD(v57) = 5;
            }
            break;
          default:
            __break(0xC471u);
            JUMPOUT(0x182677860);
        }
        unsigned int v58 = v44;
        *(unsigned char *)(a2 + 8) = 0;
        *(_DWORD *)(a2 + 32) = -1;
        ((void (*)(double **, uint64_t, uint64_t *))off_1ECABED78[v44])(&v64, a2 + 8, &v55);
        *(_DWORD *)(a2 + 32) = v44;
        uint64_t v48 = v58;
        if (v58 != -1) {
LABEL_124:
        }
          ((void (*)(double **, uint64_t *))off_1ECABED68[v48])(&v64, &v55);
        goto LABEL_125;
      }
      goto LABEL_18;
    }
    ((void (*)(double **, double *))off_1ECABEC60[v5])(&v64, &v54);
    LODWORD(v7) = v63;
  }
  LOBYTE(v54) = 0;
  unsigned int v56 = -1;
  if (v7 == -1) {
    goto LABEL_102;
  }
  ((void (*)(double **, double *, void *))off_1ECABEE88[v7])(&v64, &v54, v62);
  unsigned int v56 = v7;
  if (v7 != 8 || v54 == 0.0) {
    unsigned int v9 = 0;
  }
  else {
    unsigned int v9 = **(_DWORD **)&v54;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v7])(&v64, &v54);
  if (!v9) {
    goto LABEL_102;
  }
LABEL_18:
  uint64_t v10 = v9;
  uint64_t v11 = 24 * v9;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v9;
  unsigned int v13 = (double *)(v12 + 2);
  unint64_t v14 = (v11 - 24) / 0x18uLL;
  uint64_t v15 = 24;
  bzero(v12 + 2, 24 * v14 + 24);
  unint64_t v18 = 0;
  LODWORD(v54) = 0;
  unsigned int v56 = 0;
  LODWORD(v57) = 0;
  unsigned int v59 = 0;
  while (2)
  {
    if (v61 == 8)
    {
      if (v18 >= *(unsigned int *)v60[0]) {
        goto LABEL_134;
      }
      uint64_t v17 = v60[0] + v15 - 16;
      uint64_t v19 = *(unsigned int *)(v60[0] + v15);
      uint64_t v20 = v56;
      if (v56 == -1)
      {
        if (v19 == -1) {
          goto LABEL_31;
        }
      }
      else if (v19 == -1)
      {
        goto LABEL_26;
      }
      uint64_t v64 = &v54;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v19])(&v64, &v54, v17);
    }
    else
    {
      uint64_t v20 = v56;
      if (v56 == -1)
      {
        if (v61 == -1) {
          goto LABEL_31;
        }
      }
      else if (v61 == -1)
      {
LABEL_26:
        ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v20])(&v64, &v54, v17);
        unsigned int v56 = -1;
        goto LABEL_31;
      }
      uint64_t v64 = &v54;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v61])(&v64, &v54, v60);
    }
LABEL_31:
    if (v63 == 8)
    {
      if (v18 >= *(unsigned int *)v62[0])
      {
LABEL_134:
        __break(0xC471u);
        JUMPOUT(0x1826777B8);
      }
      uint64_t v17 = v62[0] + v15 - 16;
      uint64_t v21 = *(unsigned int *)(v62[0] + v15);
      uint64_t v22 = v59;
      if (v59 == -1)
      {
        if (v21 == -1) {
          goto LABEL_43;
        }
      }
      else if (v21 == -1)
      {
        goto LABEL_38;
      }
      uint64_t v64 = &v57;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v21])(&v64, &v57, v17);
      goto LABEL_43;
    }
    uint64_t v22 = v59;
    if (v59 == -1)
    {
      if (v63 == -1) {
        goto LABEL_43;
      }
LABEL_40:
      uint64_t v64 = &v57;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v63])(&v64, &v57, v62);
      goto LABEL_43;
    }
    if (v63 != -1) {
      goto LABEL_40;
    }
LABEL_38:
    ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v22])(&v64, &v57, v17);
    unsigned int v59 = -1;
LABEL_43:
    switch(v56)
    {
      case 0u:
        if (v59) {
          goto LABEL_138;
        }
        *(float *)uint64_t v51 = *(float *)&v54 / *(float *)&v57;
        goto LABEL_50;
      case 1u:
        if (v59 != 1) {
          goto LABEL_138;
        }
        *(short float *)uint64_t v51 = *(short float *)&v54 / *(short float *)&v57;
        goto LABEL_50;
      case 2u:
        if (v59 != 2) {
          goto LABEL_138;
        }
        v51[0] = v54 / v57;
LABEL_50:
        unsigned int v52 = v56;
        unsigned int v53 = 0;
        goto LABEL_74;
      case 3u:
        if (v59 != 3) {
          goto LABEL_138;
        }
        if (!LODWORD(v57) || LODWORD(v54) == 0x80000000 && LODWORD(v57) == -1) {
          goto LABEL_63;
        }
        uint64_t v23 = 0;
        LODWORD(v65[0]) = SLODWORD(v54) / SLODWORD(v57);
        int v24 = 3;
        goto LABEL_65;
      case 4u:
        if (v59 != 4) {
          goto LABEL_138;
        }
        if (!LODWORD(v57)) {
          goto LABEL_63;
        }
        uint64_t v23 = 0;
        LODWORD(v65[0]) = LODWORD(v54) / LODWORD(v57);
        int v24 = 4;
        goto LABEL_65;
      case 5u:
        if (v59 != 5) {
          goto LABEL_138;
        }
        if (v57 == 0.0 || v54 == -0.0 && v57 == NAN)
        {
LABEL_63:
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          uint64_t v23 = 1;
        }
        else
        {
          uint64_t v23 = 0;
          v65[0] = *(void *)&v54 / *(uint64_t *)&v57;
          int v24 = 5;
LABEL_65:
          int v66 = v24;
        }
        int v67 = v23;
        LOBYTE(v51[0]) = 0;
        unsigned int v53 = -1;
        ((void (*)(char *, double *, void *))off_1ECABED78[v23])(&v50, v51, v65);
        unsigned int v53 = v23;
        if (v67 != -1) {
          ((void (*)(char *, void *))off_1ECABED68[v67])(&v50, v65);
        }
        if (!v53)
        {
LABEL_74:
          if (v18 >= *v12)
          {
            __break(0xC471u);
            JUMPOUT(0x1826777D8);
          }
          uint64_t v28 = v12[(unint64_t)v15 / 4];
          if (v28 == -1)
          {
            if (v52 == -1) {
              goto LABEL_80;
            }
          }
          else if (v52 == -1)
          {
            ((void (*)(double **, double *))off_1ECABEC60[v28])(&v64, v13);
            v12[(unint64_t)v15 / 4] = -1;
            goto LABEL_80;
          }
          uint64_t v64 = v13;
          ((void (*)(double **, double *, double *))off_1ECABEF38[v52])(&v64, v13, v51);
LABEL_80:
          char v26 = 1;
          uint64_t v27 = v53;
          if (v53 == -1) {
            goto LABEL_82;
          }
LABEL_81:
          ((void (*)(double **, double *))off_1ECABED68[v27])(&v64, v51);
          goto LABEL_82;
        }
        if (v53 != 1)
        {
LABEL_138:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_139:
          __break(0xC471u);
          JUMPOUT(0x18267783CLL);
        }
        double v25 = v51[0];
        if (*(void *)&v51[0]) {
          **(_DWORD **)&v51[0] += 2;
        }
        char v26 = 0;
        *(double *)(a2 + 8) = v25;
        *(_DWORD *)(a2 + 32) = 1;
        uint64_t v27 = v53;
        if (v53 != -1) {
          goto LABEL_81;
        }
LABEL_82:
        if ((v26 & 1) == 0) {
          goto LABEL_90;
        }
        ++v18;
        v13 += 3;
        v15 += 24;
        if (v10 != v18) {
          continue;
        }
        uint64_t v29 = *v12;
        unsigned int v30 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v29 + 8));
        uint64_t v31 = v30;
        *unsigned int v30 = v29;
        if (v29)
        {
          uint64_t v32 = v30 + 6;
          uint64_t v33 = 24 * v29;
          uint64_t v34 = v12 + 6;
          do
          {
            *((unsigned char *)v32 - 16) = 0;
            unint64_t v16 = v32 - 4;
            _DWORD *v32 = -1;
            uint64_t v35 = *v34;
            if (v35 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v35])(&v64, v16, v34 - 4);
              _DWORD *v32 = v35;
            }
            v32 += 6;
            v34 += 6;
            v33 -= 24;
          }
          while (v33);
        }
        *(void *)(a2 + 8) = v31;
        *(_DWORD *)(a2 + 24) = 8;
        *(_DWORD *)(a2 + 32) = 0;
LABEL_90:
        if (v59 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v59])(&v64, &v57);
        }
        unsigned int v59 = -1;
        if (v56 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v56])(&v64, &v54);
        }
        uint64_t v36 = *v12;
        if (v36)
        {
          uint64_t v37 = 24 * v36;
          uint64_t v38 = v12 + 6;
          do
          {
            unint64_t v16 = v38 - 4;
            uint64_t v39 = *v38;
            if (v39 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v39])(&v54, v16);
            }
            *uint64_t v38 = -1;
            v38 += 6;
            v37 -= 24;
          }
          while (v37);
        }
        WTF::fastFree((WTF *)v12, v16);
LABEL_125:
        if (v63 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v63])(&v54, v62);
        }
        int v63 = -1;
        if (v61 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v61])(&v54, v60);
        }
        return;
      default:
        goto LABEL_139;
    }
  }
}

void WGSL::constantModulo(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  int v3 = **a1;
  if (!v3)
  {
    __break(0xC471u);
    JUMPOUT(0x1826783A8);
  }
  if (v3 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826783C8);
  }
  int v4 = (float *)(v2 + 2);
  LOBYTE(v75[0]) = 0;
  int v76 = -1;
  uint64_t v5 = v2[6];
  if (v5 != -1)
  {
    ((void (*)(long double *, void *, int *))off_1ECABEE88[v5])(&__x, v75, v2 + 2);
    int v76 = v5;
  }
  uint64_t v6 = (float *)(v2 + 8);
  LOBYTE(v77[0]) = 0;
  int v78 = -1;
  uint64_t v7 = v2[12];
  if (v7 != -1)
  {
    ((void (*)(long double *, void *, int *))off_1ECABEE88[v7])(&__x, v77, v2 + 8);
    int v78 = v7;
    LODWORD(v5) = v76;
  }
  LOBYTE(__x) = 0;
  unsigned int v71 = -1;
  if (v5 != -1)
  {
    uint64_t v8 = v5;
    ((void (*)(long double **, long double *, void *))off_1ECABEE88[v5])(&p_x, &__x, v75);
    unsigned int v71 = v5;
    if (v5 == 8)
    {
      if (*(void *)&__x) {
        unsigned int v9 = **(_DWORD **)&__x;
      }
      else {
        unsigned int v9 = 0;
      }
      ((void (*)(long double **, long double *))off_1ECABEC60[v8])(&p_x, &__x);
      if (!v9)
      {
LABEL_102:
        switch(v2[6])
        {
          case 0:
            if (v2[12]) {
              goto LABEL_138;
            }
            *(float *)(a2 + 8) = fmodf(*v4, *v6);
            *(_DWORD *)(a2 + 24) = 0;
            *(_DWORD *)(a2 + 32) = 0;
            goto LABEL_125;
          case 1:
            if (v2[12] != 1) {
              goto LABEL_138;
            }
            _H0 = *(_WORD *)v4;
            _H1 = *(_WORD *)v6;
            __asm
            {
              FCVT            S0, H0; float
              FCVT            S1, H1; float
            }
            _S0 = fmodf(_S0, _S1);
            __asm { FCVT            H0, S0 }
            uint64_t v54 = a2;
            *(_WORD *)(a2 + 8) = LOWORD(_S0);
            int v55 = 1;
            goto LABEL_109;
          case 2:
            if (v2[12] != 2) {
              goto LABEL_138;
            }
            long double v56 = fmod(*(long double *)v4, *(long double *)v6);
            uint64_t v54 = a2;
            *(long double *)(a2 + 8) = v56;
            int v55 = 2;
LABEL_109:
            *(_DWORD *)(v54 + 24) = v55;
            *(_DWORD *)(v54 + 32) = 0;
            goto LABEL_125;
          case 3:
            if (v2[12] != 3) {
              goto LABEL_138;
            }
            float v57 = *v6;
            if (!*(_DWORD *)v6) {
              goto LABEL_122;
            }
            int v58 = v2[2];
            if (v58 == 0x80000000 && v57 == NAN) {
              goto LABEL_122;
            }
            int v59 = 0;
            LODWORD(v70) = v58 % SLODWORD(v57);
            LODWORD(__y) = 3;
            break;
          case 4:
            if (v2[12] != 4) {
              goto LABEL_138;
            }
            if (*(_DWORD *)v6)
            {
              int v60 = 0;
              LODWORD(v70) = v2[2] % *(_DWORD *)v6;
              LODWORD(__y) = 4;
            }
            else
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              int v60 = 1;
            }
            unsigned int v73 = v60;
            *(unsigned char *)(a2 + 8) = 0;
            *(_DWORD *)(a2 + 32) = -1;
            ((void (*)(long double **, uint64_t, uint64_t *))off_1ECABED78[v60])(&p_x, a2 + 8, &v70);
            *(_DWORD *)(a2 + 32) = v60;
            uint64_t v63 = v73;
            if (v73 == -1) {
              goto LABEL_125;
            }
            goto LABEL_124;
          case 5:
            if (v2[12] != 5) {
              goto LABEL_138;
            }
            long double v61 = *(double *)v6;
            if (!*(void *)v6 || (uint64_t v62 = *((void *)v2 + 1), v62 == 0x8000000000000000) && v61 == NAN)
            {
LABEL_122:
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              int v59 = 1;
            }
            else
            {
              int v59 = 0;
              uint64_t v70 = v62 % *(void *)&v61;
              LODWORD(__y) = 5;
            }
            break;
          default:
            __break(0xC471u);
            JUMPOUT(0x182678410);
        }
        unsigned int v73 = v59;
        *(unsigned char *)(a2 + 8) = 0;
        *(_DWORD *)(a2 + 32) = -1;
        ((void (*)(long double **, uint64_t, uint64_t *))off_1ECABED78[v59])(&p_x, a2 + 8, &v70);
        *(_DWORD *)(a2 + 32) = v59;
        uint64_t v63 = v73;
        if (v73 != -1) {
LABEL_124:
        }
          ((void (*)(long double **, uint64_t *))off_1ECABED68[v63])(&p_x, &v70);
        goto LABEL_125;
      }
      goto LABEL_18;
    }
    ((void (*)(long double **, long double *))off_1ECABEC60[v5])(&p_x, &__x);
    LODWORD(v7) = v78;
  }
  LOBYTE(__x) = 0;
  unsigned int v71 = -1;
  if (v7 == -1) {
    goto LABEL_102;
  }
  ((void (*)(long double **, long double *, void *))off_1ECABEE88[v7])(&p_x, &__x, v77);
  unsigned int v71 = v7;
  if (v7 == 8 && *(void *)&__x) {
    unsigned int v9 = **(_DWORD **)&__x;
  }
  else {
    unsigned int v9 = 0;
  }
  ((void (*)(long double **, long double *))off_1ECABEC60[v7])(&p_x, &__x);
  if (!v9) {
    goto LABEL_102;
  }
LABEL_18:
  uint64_t v10 = v9;
  uint64_t v11 = 24 * v9;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v9;
  unsigned int v13 = (long double *)(v12 + 2);
  uint64_t v14 = 24;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v16 = 0;
  LODWORD(__x) = 0;
  unsigned int v71 = 0;
  LODWORD(__y) = 0;
  unsigned int v74 = 0;
  while (2)
  {
    if (v76 == 8)
    {
      if (v16 >= *(unsigned int *)v75[0]) {
        goto LABEL_134;
      }
      uint64_t v15 = v75[0] + v14 - 16;
      uint64_t v17 = *(unsigned int *)(v75[0] + v14);
      uint64_t v18 = v71;
      if (v71 == -1)
      {
        if (v17 == -1) {
          goto LABEL_31;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_26;
      }
      p_x = &__x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v17])(&p_x, &__x, v15);
    }
    else
    {
      uint64_t v18 = v71;
      if (v71 == -1)
      {
        if (v76 == -1) {
          goto LABEL_31;
        }
      }
      else if (v76 == -1)
      {
LABEL_26:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v18])(&p_x, &__x, v15);
        unsigned int v71 = -1;
        goto LABEL_31;
      }
      p_x = &__x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v76])(&p_x, &__x, v75);
    }
LABEL_31:
    if (v78 == 8)
    {
      if (v16 >= *(unsigned int *)v77[0])
      {
LABEL_134:
        __break(0xC471u);
        JUMPOUT(0x182678368);
      }
      uint64_t v15 = v77[0] + v14 - 16;
      uint64_t v19 = *(unsigned int *)(v77[0] + v14);
      uint64_t v20 = v74;
      if (v74 == -1)
      {
        if (v19 == -1) {
          goto LABEL_43;
        }
      }
      else if (v19 == -1)
      {
        goto LABEL_38;
      }
      p_x = &__y;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v19])(&p_x, &__y, v15);
      goto LABEL_43;
    }
    uint64_t v20 = v74;
    if (v74 == -1)
    {
      if (v78 == -1) {
        goto LABEL_43;
      }
LABEL_40:
      p_x = &__y;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v78])(&p_x, &__y, v77);
      goto LABEL_43;
    }
    if (v78 != -1) {
      goto LABEL_40;
    }
LABEL_38:
    ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v20])(&p_x, &__y, v15);
    unsigned int v74 = -1;
LABEL_43:
    unsigned int v21 = v71;
    switch(v71)
    {
      case 0u:
        if (v74) {
          goto LABEL_138;
        }
        LODWORD(v66[0]) = fmodf(*(float *)&__x, *(float *)&__y);
        goto LABEL_50;
      case 1u:
        if (v74 != 1) {
          goto LABEL_138;
        }
        _H0 = LOWORD(__x);
        _H1 = LOWORD(__y);
        __asm
        {
          FCVT            S0, H0; float
          FCVT            S1, H1; float
        }
        _S0 = fmodf(_S0, _S1);
        __asm { FCVT            H0, S0 }
        LOWORD(v66[0]) = LOWORD(_S0);
        goto LABEL_50;
      case 2u:
        if (v74 != 2) {
          goto LABEL_138;
        }
        v66[0] = fmod(__x, __y);
LABEL_50:
        unsigned int v67 = v21;
        unsigned int v68 = 0;
        goto LABEL_74;
      case 3u:
        if (v74 != 3) {
          goto LABEL_138;
        }
        if (!LODWORD(__y) || LODWORD(__x) == 0x80000000 && LODWORD(__y) == -1) {
          goto LABEL_63;
        }
        uint64_t v32 = 0;
        LODWORD(v80[0]) = SLODWORD(__x) % SLODWORD(__y);
        int v33 = 3;
        goto LABEL_65;
      case 4u:
        if (v74 != 4) {
          goto LABEL_138;
        }
        if (!LODWORD(__y)) {
          goto LABEL_63;
        }
        uint64_t v32 = 0;
        LODWORD(v80[0]) = LODWORD(__x) % LODWORD(__y);
        int v33 = 4;
        goto LABEL_65;
      case 5u:
        if (v74 != 5) {
          goto LABEL_138;
        }
        if (!*(void *)&__y || *(void *)&__x == 0x8000000000000000 && *(void *)&__y == -1)
        {
LABEL_63:
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          uint64_t v32 = 1;
        }
        else
        {
          uint64_t v32 = 0;
          v80[0] = *(uint64_t *)&__x % *(void *)&__y;
          int v33 = 5;
LABEL_65:
          int v81 = v33;
        }
        int v82 = v32;
        LOBYTE(v66[0]) = 0;
        unsigned int v68 = -1;
        ((void (*)(char *, void *, void *))off_1ECABED78[v32])(&v65, v66, v80);
        unsigned int v68 = v32;
        if (v82 != -1) {
          ((void (*)(char *, void *))off_1ECABED68[v82])(&v65, v80);
        }
        if (!v68)
        {
LABEL_74:
          if (v16 >= *v12)
          {
            __break(0xC471u);
            JUMPOUT(0x182678388);
          }
          uint64_t v37 = v12[(unint64_t)v14 / 4];
          if (v37 == -1)
          {
            if (v67 == -1) {
              goto LABEL_80;
            }
          }
          else if (v67 == -1)
          {
            ((void (*)(long double **, long double *))off_1ECABEC60[v37])(&p_x, v13);
            v12[(unint64_t)v14 / 4] = -1;
            goto LABEL_80;
          }
          p_x = v13;
          ((void (*)(long double **, long double *, void *))off_1ECABEF38[v67])(&p_x, v13, v66);
LABEL_80:
          char v35 = 1;
          uint64_t v36 = v68;
          if (v68 == -1) {
            goto LABEL_82;
          }
LABEL_81:
          ((void (*)(long double **, void *))off_1ECABED68[v36])(&p_x, v66);
          goto LABEL_82;
        }
        if (v68 != 1)
        {
LABEL_138:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_139:
          __break(0xC471u);
          JUMPOUT(0x1826783ECLL);
        }
        uint64_t v34 = v66[0];
        if (v66[0]) {
          *(_DWORD *)v66[0] += 2;
        }
        char v35 = 0;
        *(void *)(a2 + 8) = v34;
        *(_DWORD *)(a2 + 32) = 1;
        uint64_t v36 = v68;
        if (v68 != -1) {
          goto LABEL_81;
        }
LABEL_82:
        if ((v35 & 1) == 0) {
          goto LABEL_90;
        }
        ++v16;
        v13 += 3;
        v14 += 24;
        if (v10 != v16) {
          continue;
        }
        uint64_t v38 = *v12;
        uint64_t v39 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v38 + 8));
        int v40 = v39;
        *uint64_t v39 = v38;
        if (v38)
        {
          uint64_t v41 = v39 + 6;
          uint64_t v42 = 24 * v38;
          int v43 = v12 + 6;
          do
          {
            *((unsigned char *)v41 - 16) = 0;
            uint64_t v22 = v41 - 4;
            *uint64_t v41 = -1;
            uint64_t v44 = *v43;
            if (v44 != -1)
            {
              ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v44])(&p_x, v22, v43 - 4);
              *uint64_t v41 = v44;
            }
            v41 += 6;
            v43 += 6;
            v42 -= 24;
          }
          while (v42);
        }
        *(void *)(a2 + 8) = v40;
        *(_DWORD *)(a2 + 24) = 8;
        *(_DWORD *)(a2 + 32) = 0;
LABEL_90:
        if (v74 != -1) {
          ((void (*)(long double **, long double *))off_1ECABEC60[v74])(&p_x, &__y);
        }
        unsigned int v74 = -1;
        if (v71 != -1) {
          ((void (*)(long double **, long double *))off_1ECABEC60[v71])(&p_x, &__x);
        }
        uint64_t v45 = *v12;
        if (v45)
        {
          uint64_t v46 = 24 * v45;
          uint64_t v47 = v12 + 6;
          do
          {
            uint64_t v22 = v47 - 4;
            uint64_t v48 = *v47;
            if (v48 != -1) {
              ((void (*)(long double *, _DWORD *))off_1ECABEC60[v48])(&__x, v22);
            }
            _DWORD *v47 = -1;
            v47 += 6;
            v46 -= 24;
          }
          while (v46);
        }
        WTF::fastFree((WTF *)v12, v22);
LABEL_125:
        if (v78 != -1) {
          ((void (*)(long double *, void *))off_1ECABEC60[v78])(&__x, v77);
        }
        int v78 = -1;
        if (v76 != -1) {
          ((void (*)(long double *, void *))off_1ECABEC60[v76])(&__x, v75);
        }
        return;
      default:
        goto LABEL_139;
    }
  }
}

void WGSL::constantEqual(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x182678C98);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182678CB8);
  }
  uint64_t v5 = (float *)(v3 + 2);
  LOBYTE(v49[0]) = 0;
  int v50 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v6])(v40, v49, v3 + 2);
    int v50 = v6;
  }
  uint64_t v7 = (float *)(v3 + 8);
  LOBYTE(v51[0]) = 0;
  unsigned int v52 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v8])(v40, v51, v3 + 8);
    unsigned int v52 = v8;
    LODWORD(v6) = v50;
  }
  LOBYTE(v40[0]) = 0;
  int v41 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v40[0]) = 0;
    int v41 = -1;
    if (v8 == -1
      || ((((void (*)(double **, double *, void *))off_1ECABEE88[v8])(&v45, v40, v51),
           int v41 = v8,
           v8 != 8)
       || !*(void *)&v40[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = **(_DWORD **)&v40[0]),
          ((void (*)(double **, double *))off_1ECABEC60[v8])(&v45, v40),
          !v10))
    {
LABEL_89:
      switch(v3[6])
      {
        case 0:
          if (v3[12]) {
            goto LABEL_115;
          }
          BOOL v37 = *v5 == *v7;
          goto LABEL_102;
        case 1:
          if (v3[12] != 1) {
            goto LABEL_115;
          }
          BOOL v37 = *(short float *)v5 == *(short float *)v7;
          goto LABEL_102;
        case 2:
          if (v3[12] != 2) {
            goto LABEL_115;
          }
          BOOL v37 = *(double *)v5 == *(double *)v7;
          goto LABEL_102;
        case 3:
          if (v3[12] != 3) {
            goto LABEL_115;
          }
          goto LABEL_99;
        case 4:
          if (v3[12] != 4) {
            goto LABEL_115;
          }
LABEL_99:
          BOOL v37 = *(_DWORD *)v5 == *(_DWORD *)v7;
          goto LABEL_102;
        case 5:
          if (v3[12] != 5) {
            goto LABEL_115;
          }
          BOOL v37 = *(void *)v5 == *(void *)v7;
LABEL_102:
          char v38 = v37;
          break;
        case 6:
          if (v3[12] != 6) {
            goto LABEL_115;
          }
          char v38 = (*(unsigned char *)v5 == 0) ^ (*(unsigned char *)v7 != 0);
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x182678D00);
      }
      *(unsigned char *)(a2 + 8) = v38;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v36 = v52;
      if (v52 == -1) {
        goto LABEL_107;
      }
LABEL_106:
      ((void (*)(double *, void *))off_1ECABEC60[v36])(v40, v51);
      goto LABEL_107;
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(double **, double *, void *))off_1ECABEE88[v6])(&v45, v40, v49);
  int v41 = v6;
  if (v6 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v6])(&v45, v40);
    LODWORD(v8) = v52;
    goto LABEL_12;
  }
  if (*(void *)&v40[0]) {
    unsigned int v10 = **(_DWORD **)&v40[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v45, v40);
  if (!v10) {
    goto LABEL_89;
  }
LABEL_18:
  uint64_t v39 = a2;
  uint64_t v11 = 24 * v10;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v10;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v14 = 0;
  unint64_t v15 = 0;
  LODWORD(v40[0]) = 0;
  int v41 = 0;
  LODWORD(v42[0]) = 0;
  int v43 = 0;
  while (2)
  {
    if (v50 == 8)
    {
      if (v15 >= *(unsigned int *)v49[0]) {
        goto LABEL_112;
      }
      uint64_t v17 = *(unsigned int *)(v49[0] + v14 + 24);
      if (v41 == -1)
      {
        if (v17 == -1) {
          goto LABEL_34;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_29;
      }
      uint64_t v45 = v40;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v17])(&v45, v40, v49[0] + v14 + 8);
    }
    else
    {
      if (v41 == -1)
      {
        if (v50 == -1) {
          goto LABEL_34;
        }
      }
      else if (v50 == -1)
      {
LABEL_29:
        ((void (*)(double **, double *))off_1ECABEC60[v41])(&v45, v40);
        int v41 = -1;
        goto LABEL_34;
      }
      uint64_t v45 = v40;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v50])(&v45, v40, v49);
    }
LABEL_34:
    if (v52 == 8)
    {
      if (v15 >= *(unsigned int *)v51[0])
      {
LABEL_112:
        __break(0xC471u);
        JUMPOUT(0x182678C78);
      }
      uint64_t v18 = *(unsigned int *)(v51[0] + v14 + 24);
      if (v43 == -1)
      {
        if (v18 == -1) {
          goto LABEL_46;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_41;
      }
      uint64_t v45 = v42;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v18])(&v45, v42, v51[0] + v14 + 8);
      goto LABEL_46;
    }
    if (v43 == -1)
    {
      if (v52 == -1) {
        goto LABEL_46;
      }
LABEL_43:
      uint64_t v45 = v42;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v52])(&v45, v42, v51);
      goto LABEL_46;
    }
    if (v52 != -1) {
      goto LABEL_43;
    }
LABEL_41:
    ((void (*)(double **, double *))off_1ECABEC60[v43])(&v45, v42);
    int v43 = -1;
LABEL_46:
    switch(v41)
    {
      case 0:
        if (v43) {
          goto LABEL_115;
        }
        v13.n128_u32[0] = LODWORD(v40[0]);
        BOOL v19 = *(float *)v40 == *(float *)v42;
        goto LABEL_59;
      case 1:
        if (v43 != 1) {
          goto LABEL_115;
        }
        v13.n128_u16[0] = LOWORD(v40[0]);
        BOOL v19 = *(short float *)v40 == *(short float *)v42;
        goto LABEL_59;
      case 2:
        if (v43 != 2) {
          goto LABEL_115;
        }
        v13.n128_f64[0] = v40[0];
        BOOL v19 = v40[0] == v42[0];
        goto LABEL_59;
      case 3:
        if (v43 == 3) {
          goto LABEL_56;
        }
        goto LABEL_115;
      case 4:
        if (v43 != 4) {
          goto LABEL_115;
        }
LABEL_56:
        BOOL v19 = LODWORD(v40[0]) == LODWORD(v42[0]);
        goto LABEL_59;
      case 5:
        if (v43 != 5) {
          goto LABEL_115;
        }
        BOOL v19 = *(void *)&v40[0] == *(void *)&v42[0];
LABEL_59:
        char v20 = v19;
        v46[0] = v20;
        int v47 = 6;
        unsigned int v48 = 0;
        if (v15 < *v12) {
          goto LABEL_63;
        }
        goto LABEL_70;
      case 6:
        if (v43 != 6)
        {
LABEL_115:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_116:
          __break(0xC471u);
          JUMPOUT(0x182678CDCLL);
        }
        char v20 = (LOBYTE(v40[0]) == 0) ^ (LOBYTE(v42[0]) != 0);
        v46[0] = v20;
        int v47 = 6;
        unsigned int v48 = 0;
        if (v15 >= *v12)
        {
LABEL_70:
          __break(0xC471u);
          JUMPOUT(0x182678978);
        }
LABEL_63:
        unsigned int v21 = &v12[v14 / 4];
        uint64_t v22 = (char *)&v12[v14 / 4 + 2];
        uint64_t v23 = v12[v14 / 4 + 6];
        if (v23 == 6)
        {
          uint64_t v16 = 0;
          *uint64_t v22 = v20;
LABEL_20:
          ((void (*)(char *, char *))off_1ECABED68[v16])(&v44, v46);
          goto LABEL_21;
        }
        if (v23 == -1)
        {
          uint64_t v16 = 0;
          *((unsigned char *)v21 + 8) = v20;
          v21[6] = 6;
          goto LABEL_20;
        }
        ((void (*)(char *, char *, __n128))off_1ECABEC60[v23])(&v44, v22, v13);
        uint64_t v16 = v48;
        *((unsigned char *)v21 + 8) = v46[0];
        v21[6] = 6;
        if (v16 != -1) {
          goto LABEL_20;
        }
LABEL_21:
        ++v15;
        v14 += 24;
        if (v11 != v14) {
          continue;
        }
        uint64_t v24 = *v12;
        double v25 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v24 + 8));
        uint64_t v27 = v25;
        _DWORD *v25 = v24;
        if (v24)
        {
          uint64_t v28 = v25 + 6;
          uint64_t v29 = 24 * v24;
          unsigned int v30 = v12 + 6;
          do
          {
            *((unsigned char *)v28 - 16) = 0;
            char v26 = v28 - 4;
            _DWORD *v28 = -1;
            uint64_t v31 = *v30;
            if (v31 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v31])(&v45, v26, v30 - 4);
              _DWORD *v28 = v31;
            }
            v28 += 6;
            v30 += 6;
            v29 -= 24;
          }
          while (v29);
        }
        *(void *)(v39 + 8) = v27;
        *(_DWORD *)(v39 + 24) = 8;
        *(_DWORD *)(v39 + 32) = 0;
        if (v43 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v43])(&v45, v42);
        }
        int v43 = -1;
        if (v41 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v41])(&v45, v40);
        }
        uint64_t v32 = *v12;
        if (v32)
        {
          uint64_t v33 = 24 * v32;
          uint64_t v34 = v12 + 6;
          do
          {
            char v26 = v34 - 4;
            uint64_t v35 = *v34;
            if (v35 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v35])(v40, v26);
            }
            *uint64_t v34 = -1;
            v34 += 6;
            v33 -= 24;
          }
          while (v33);
        }
        WTF::fastFree((WTF *)v12, v26);
        uint64_t v36 = v52;
        if (v52 != -1) {
          goto LABEL_106;
        }
LABEL_107:
        unsigned int v52 = -1;
        if (v50 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v50])(v40, v49);
        }
        return;
      default:
        goto LABEL_116;
    }
  }
}

void WGSL::constantNotEqual(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x182679590);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826795B0);
  }
  uint64_t v5 = (float *)(v3 + 2);
  LOBYTE(v49[0]) = 0;
  int v50 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v6])(v40, v49, v3 + 2);
    int v50 = v6;
  }
  uint64_t v7 = (float *)(v3 + 8);
  LOBYTE(v51[0]) = 0;
  unsigned int v52 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v8])(v40, v51, v3 + 8);
    unsigned int v52 = v8;
    LODWORD(v6) = v50;
  }
  LOBYTE(v40[0]) = 0;
  int v41 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v40[0]) = 0;
    int v41 = -1;
    if (v8 == -1
      || ((((void (*)(double **, double *, void *))off_1ECABEE88[v8])(&v45, v40, v51),
           int v41 = v8,
           v8 != 8)
       || !*(void *)&v40[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = **(_DWORD **)&v40[0]),
          ((void (*)(double **, double *))off_1ECABEC60[v8])(&v45, v40),
          !v10))
    {
LABEL_89:
      switch(v3[6])
      {
        case 0:
          if (v3[12]) {
            goto LABEL_115;
          }
          BOOL v37 = *v5 == *v7;
          goto LABEL_102;
        case 1:
          if (v3[12] != 1) {
            goto LABEL_115;
          }
          BOOL v37 = *(short float *)v5 == *(short float *)v7;
          goto LABEL_102;
        case 2:
          if (v3[12] != 2) {
            goto LABEL_115;
          }
          BOOL v37 = *(double *)v5 == *(double *)v7;
          goto LABEL_102;
        case 3:
          if (v3[12] != 3) {
            goto LABEL_115;
          }
          goto LABEL_99;
        case 4:
          if (v3[12] != 4) {
            goto LABEL_115;
          }
LABEL_99:
          BOOL v37 = *(_DWORD *)v5 == *(_DWORD *)v7;
          goto LABEL_102;
        case 5:
          if (v3[12] != 5) {
            goto LABEL_115;
          }
          BOOL v37 = *(void *)v5 == *(void *)v7;
LABEL_102:
          char v38 = !v37;
          break;
        case 6:
          if (v3[12] != 6) {
            goto LABEL_115;
          }
          char v38 = (*(unsigned char *)v5 != 0) ^ (*(unsigned char *)v7 != 0);
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x1826795F8);
      }
      *(unsigned char *)(a2 + 8) = v38;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v36 = v52;
      if (v52 == -1) {
        goto LABEL_107;
      }
LABEL_106:
      ((void (*)(double *, void *))off_1ECABEC60[v36])(v40, v51);
      goto LABEL_107;
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(double **, double *, void *))off_1ECABEE88[v6])(&v45, v40, v49);
  int v41 = v6;
  if (v6 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v6])(&v45, v40);
    LODWORD(v8) = v52;
    goto LABEL_12;
  }
  if (*(void *)&v40[0]) {
    unsigned int v10 = **(_DWORD **)&v40[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v45, v40);
  if (!v10) {
    goto LABEL_89;
  }
LABEL_18:
  uint64_t v39 = a2;
  uint64_t v11 = 24 * v10;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v10;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v14 = 0;
  unint64_t v15 = 0;
  LODWORD(v40[0]) = 0;
  int v41 = 0;
  LODWORD(v42[0]) = 0;
  int v43 = 0;
  while (2)
  {
    if (v50 == 8)
    {
      if (v15 >= *(unsigned int *)v49[0]) {
        goto LABEL_112;
      }
      uint64_t v17 = *(unsigned int *)(v49[0] + v14 + 24);
      if (v41 == -1)
      {
        if (v17 == -1) {
          goto LABEL_34;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_29;
      }
      uint64_t v45 = v40;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v17])(&v45, v40, v49[0] + v14 + 8);
    }
    else
    {
      if (v41 == -1)
      {
        if (v50 == -1) {
          goto LABEL_34;
        }
      }
      else if (v50 == -1)
      {
LABEL_29:
        ((void (*)(double **, double *))off_1ECABEC60[v41])(&v45, v40);
        int v41 = -1;
        goto LABEL_34;
      }
      uint64_t v45 = v40;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v50])(&v45, v40, v49);
    }
LABEL_34:
    if (v52 == 8)
    {
      if (v15 >= *(unsigned int *)v51[0])
      {
LABEL_112:
        __break(0xC471u);
        JUMPOUT(0x182679570);
      }
      uint64_t v18 = *(unsigned int *)(v51[0] + v14 + 24);
      if (v43 == -1)
      {
        if (v18 == -1) {
          goto LABEL_46;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_41;
      }
      uint64_t v45 = v42;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v18])(&v45, v42, v51[0] + v14 + 8);
      goto LABEL_46;
    }
    if (v43 == -1)
    {
      if (v52 == -1) {
        goto LABEL_46;
      }
LABEL_43:
      uint64_t v45 = v42;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v52])(&v45, v42, v51);
      goto LABEL_46;
    }
    if (v52 != -1) {
      goto LABEL_43;
    }
LABEL_41:
    ((void (*)(double **, double *))off_1ECABEC60[v43])(&v45, v42);
    int v43 = -1;
LABEL_46:
    switch(v41)
    {
      case 0:
        if (v43) {
          goto LABEL_115;
        }
        v13.n128_u32[0] = LODWORD(v40[0]);
        BOOL v19 = *(float *)v40 == *(float *)v42;
        goto LABEL_59;
      case 1:
        if (v43 != 1) {
          goto LABEL_115;
        }
        v13.n128_u16[0] = LOWORD(v40[0]);
        BOOL v19 = *(short float *)v40 == *(short float *)v42;
        goto LABEL_59;
      case 2:
        if (v43 != 2) {
          goto LABEL_115;
        }
        v13.n128_f64[0] = v40[0];
        BOOL v19 = v40[0] == v42[0];
        goto LABEL_59;
      case 3:
        if (v43 == 3) {
          goto LABEL_56;
        }
        goto LABEL_115;
      case 4:
        if (v43 != 4) {
          goto LABEL_115;
        }
LABEL_56:
        BOOL v19 = LODWORD(v40[0]) == LODWORD(v42[0]);
        goto LABEL_59;
      case 5:
        if (v43 != 5) {
          goto LABEL_115;
        }
        BOOL v19 = *(void *)&v40[0] == *(void *)&v42[0];
LABEL_59:
        char v20 = !v19;
        v46[0] = v20;
        int v47 = 6;
        unsigned int v48 = 0;
        if (v15 < *v12) {
          goto LABEL_63;
        }
        goto LABEL_70;
      case 6:
        if (v43 != 6)
        {
LABEL_115:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_116:
          __break(0xC471u);
          JUMPOUT(0x1826795D4);
        }
        char v20 = (LOBYTE(v40[0]) != 0) ^ (LOBYTE(v42[0]) != 0);
        v46[0] = v20;
        int v47 = 6;
        unsigned int v48 = 0;
        if (v15 >= *v12)
        {
LABEL_70:
          __break(0xC471u);
          JUMPOUT(0x182679270);
        }
LABEL_63:
        unsigned int v21 = &v12[v14 / 4];
        uint64_t v22 = (char *)&v12[v14 / 4 + 2];
        uint64_t v23 = v12[v14 / 4 + 6];
        if (v23 == 6)
        {
          uint64_t v16 = 0;
          *uint64_t v22 = v20;
LABEL_20:
          ((void (*)(char *, char *))off_1ECABED68[v16])(&v44, v46);
          goto LABEL_21;
        }
        if (v23 == -1)
        {
          uint64_t v16 = 0;
          *((unsigned char *)v21 + 8) = v20;
          v21[6] = 6;
          goto LABEL_20;
        }
        ((void (*)(char *, char *, __n128))off_1ECABEC60[v23])(&v44, v22, v13);
        uint64_t v16 = v48;
        *((unsigned char *)v21 + 8) = v46[0];
        v21[6] = 6;
        if (v16 != -1) {
          goto LABEL_20;
        }
LABEL_21:
        ++v15;
        v14 += 24;
        if (v11 != v14) {
          continue;
        }
        uint64_t v24 = *v12;
        double v25 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v24 + 8));
        uint64_t v27 = v25;
        _DWORD *v25 = v24;
        if (v24)
        {
          uint64_t v28 = v25 + 6;
          uint64_t v29 = 24 * v24;
          unsigned int v30 = v12 + 6;
          do
          {
            *((unsigned char *)v28 - 16) = 0;
            char v26 = v28 - 4;
            _DWORD *v28 = -1;
            uint64_t v31 = *v30;
            if (v31 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v31])(&v45, v26, v30 - 4);
              _DWORD *v28 = v31;
            }
            v28 += 6;
            v30 += 6;
            v29 -= 24;
          }
          while (v29);
        }
        *(void *)(v39 + 8) = v27;
        *(_DWORD *)(v39 + 24) = 8;
        *(_DWORD *)(v39 + 32) = 0;
        if (v43 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v43])(&v45, v42);
        }
        int v43 = -1;
        if (v41 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v41])(&v45, v40);
        }
        uint64_t v32 = *v12;
        if (v32)
        {
          uint64_t v33 = 24 * v32;
          uint64_t v34 = v12 + 6;
          do
          {
            char v26 = v34 - 4;
            uint64_t v35 = *v34;
            if (v35 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v35])(v40, v26);
            }
            *uint64_t v34 = -1;
            v34 += 6;
            v33 -= 24;
          }
          while (v33);
        }
        WTF::fastFree((WTF *)v12, v26);
        uint64_t v36 = v52;
        if (v52 != -1) {
          goto LABEL_106;
        }
LABEL_107:
        unsigned int v52 = -1;
        if (v50 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v50])(v40, v49);
        }
        return;
      default:
        goto LABEL_116;
    }
  }
}

void WGSL::constantLt(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x182679E94);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182679EB4);
  }
  uint64_t v5 = (float *)(v3 + 2);
  LOBYTE(v51[0]) = 0;
  int v52 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v6])(v42, v51, v3 + 2);
    int v52 = v6;
  }
  uint64_t v7 = (float *)(v3 + 8);
  LOBYTE(v53[0]) = 0;
  unsigned int v54 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v8])(v42, v53, v3 + 8);
    unsigned int v54 = v8;
    LODWORD(v6) = v52;
  }
  LOBYTE(v42[0]) = 0;
  int v43 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v42[0]) = 0;
    int v43 = -1;
    if (v8 == -1
      || ((((void (*)(double **, double *, void *))off_1ECABEE88[v8])(&v47, v42, v53),
           int v43 = v8,
           v8 != 8)
       || !*(void *)&v42[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = **(_DWORD **)&v42[0]),
          ((void (*)(double **, double *))off_1ECABEC60[v8])(&v47, v42),
          !v10))
    {
LABEL_93:
      switch(v3[6])
      {
        case 0:
          if (v3[12]) {
            goto LABEL_125;
          }
          BOOL v38 = *v5 < *v7;
          goto LABEL_100;
        case 1:
          if (v3[12] != 1) {
            goto LABEL_125;
          }
          BOOL v38 = *(short float *)v5 < *(short float *)v7;
          goto LABEL_100;
        case 2:
          if (v3[12] != 2) {
            goto LABEL_125;
          }
          BOOL v38 = *(double *)v5 < *(double *)v7;
LABEL_100:
          BOOL v39 = v38;
          break;
        case 3:
          if (v3[12] != 3) {
            goto LABEL_125;
          }
          BOOL v39 = *(_DWORD *)v5 < *(_DWORD *)v7;
          break;
        case 4:
          if (v3[12] != 4) {
            goto LABEL_125;
          }
          BOOL v39 = *(_DWORD *)v5 < *(_DWORD *)v7;
          break;
        case 5:
          if (v3[12] != 5) {
            goto LABEL_125;
          }
          BOOL v39 = *(void *)v5 < *(void *)v7;
          break;
        case 6:
          if (v3[12] != 6) {
            goto LABEL_125;
          }
          if (*(unsigned char *)v5) {
            BOOL v40 = 1;
          }
          else {
            BOOL v40 = *(unsigned char *)v7 == 0;
          }
          BOOL v39 = !v40;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x182679EFCLL);
      }
      *(unsigned char *)(a2 + 8) = v39;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v37 = v54;
      if (v54 == -1) {
        goto LABEL_118;
      }
LABEL_117:
      ((void (*)(double *, void *))off_1ECABEC60[v37])(v42, v53);
      goto LABEL_118;
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(double **, double *, void *))off_1ECABEE88[v6])(&v47, v42, v51);
  int v43 = v6;
  if (v6 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v6])(&v47, v42);
    LODWORD(v8) = v54;
    goto LABEL_12;
  }
  if (*(void *)&v42[0]) {
    unsigned int v10 = **(_DWORD **)&v42[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v47, v42);
  if (!v10) {
    goto LABEL_93;
  }
LABEL_18:
  uint64_t v41 = a2;
  uint64_t v11 = 24 * v10;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v10;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v14 = 0;
  unint64_t v15 = 0;
  LODWORD(v42[0]) = 0;
  int v43 = 0;
  LODWORD(v44[0]) = 0;
  int v45 = 0;
  while (2)
  {
    if (v52 == 8)
    {
      if (v15 >= *(unsigned int *)v51[0]) {
        goto LABEL_121;
      }
      uint64_t v17 = *(unsigned int *)(v51[0] + v14 + 24);
      if (v43 == -1)
      {
        if (v17 == -1) {
          goto LABEL_34;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_29;
      }
      int v47 = v42;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v17])(&v47, v42, v51[0] + v14 + 8);
    }
    else
    {
      if (v43 == -1)
      {
        if (v52 == -1) {
          goto LABEL_34;
        }
      }
      else if (v52 == -1)
      {
LABEL_29:
        ((void (*)(double **, double *))off_1ECABEC60[v43])(&v47, v42);
        int v43 = -1;
        goto LABEL_34;
      }
      int v47 = v42;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v52])(&v47, v42, v51);
    }
LABEL_34:
    if (v54 == 8)
    {
      if (v15 >= *(unsigned int *)v53[0])
      {
LABEL_121:
        __break(0xC471u);
        JUMPOUT(0x182679E54);
      }
      uint64_t v18 = *(unsigned int *)(v53[0] + v14 + 24);
      if (v45 == -1)
      {
        if (v18 == -1) {
          goto LABEL_46;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_41;
      }
      int v47 = v44;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v18])(&v47, v44, v53[0] + v14 + 8);
      goto LABEL_46;
    }
    if (v45 == -1)
    {
      if (v54 == -1) {
        goto LABEL_46;
      }
LABEL_43:
      int v47 = v44;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v54])(&v47, v44, v53);
      goto LABEL_46;
    }
    if (v54 != -1) {
      goto LABEL_43;
    }
LABEL_41:
    ((void (*)(double **, double *))off_1ECABEC60[v45])(&v47, v44);
    int v45 = -1;
LABEL_46:
    switch(v43)
    {
      case 0:
        if (v45) {
          goto LABEL_125;
        }
        v13.n128_u32[0] = LODWORD(v42[0]);
        BOOL v19 = *(float *)v42 < *(float *)v44;
        goto LABEL_55;
      case 1:
        if (v45 != 1) {
          goto LABEL_125;
        }
        v13.n128_u16[0] = LOWORD(v42[0]);
        BOOL v19 = *(short float *)v42 < *(short float *)v44;
        goto LABEL_55;
      case 2:
        if (v45 != 2) {
          goto LABEL_125;
        }
        v13.n128_f64[0] = v42[0];
        BOOL v19 = v42[0] < v44[0];
LABEL_55:
        BOOL v20 = v19;
        goto LABEL_69;
      case 3:
        if (v45 != 3) {
          goto LABEL_125;
        }
        BOOL v20 = SLODWORD(v42[0]) < SLODWORD(v44[0]);
        goto LABEL_69;
      case 4:
        if (v45 != 4) {
          goto LABEL_125;
        }
        BOOL v20 = LODWORD(v42[0]) < LODWORD(v44[0]);
        goto LABEL_69;
      case 5:
        if (v45 != 5) {
          goto LABEL_125;
        }
        BOOL v20 = *(void *)&v42[0] < *(void *)&v44[0];
        goto LABEL_69;
      case 6:
        if (v45 != 6)
        {
LABEL_125:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_126:
          __break(0xC471u);
          JUMPOUT(0x182679ED8);
        }
        if (LOBYTE(v42[0])) {
          BOOL v21 = 1;
        }
        else {
          BOOL v21 = LOBYTE(v44[0]) == 0;
        }
        BOOL v20 = !v21;
LABEL_69:
        v48[0] = v20;
        int v49 = 6;
        unsigned int v50 = 0;
        if (v15 >= *v12)
        {
          __break(0xC471u);
          JUMPOUT(0x182679E74);
        }
        uint64_t v22 = &v12[v14 / 4];
        uint64_t v23 = (BOOL *)&v12[v14 / 4 + 2];
        uint64_t v24 = v12[v14 / 4 + 6];
        if (v24 == 6)
        {
          uint64_t v16 = 0;
          *uint64_t v23 = v20;
LABEL_20:
          ((void (*)(char *, BOOL *))off_1ECABED68[v16])(&v46, v48);
          goto LABEL_21;
        }
        if (v24 == -1)
        {
          uint64_t v16 = 0;
          *((unsigned char *)v22 + 8) = v20;
          v22[6] = 6;
          goto LABEL_20;
        }
        ((void (*)(char *, BOOL *, __n128))off_1ECABEC60[v24])(&v46, v23, v13);
        uint64_t v16 = v50;
        *((unsigned char *)v22 + 8) = v48[0];
        v22[6] = 6;
        if (v16 != -1) {
          goto LABEL_20;
        }
LABEL_21:
        ++v15;
        v14 += 24;
        if (v11 != v14) {
          continue;
        }
        uint64_t v25 = *v12;
        char v26 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v25 + 8));
        uint64_t v28 = v26;
        *char v26 = v25;
        if (v25)
        {
          uint64_t v29 = v26 + 6;
          uint64_t v30 = 24 * v25;
          uint64_t v31 = v12 + 6;
          do
          {
            *((unsigned char *)v29 - 16) = 0;
            uint64_t v27 = v29 - 4;
            *uint64_t v29 = -1;
            uint64_t v32 = *v31;
            if (v32 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v32])(&v47, v27, v31 - 4);
              *uint64_t v29 = v32;
            }
            v29 += 6;
            v31 += 6;
            v30 -= 24;
          }
          while (v30);
        }
        *(void *)(v41 + 8) = v28;
        *(_DWORD *)(v41 + 24) = 8;
        *(_DWORD *)(v41 + 32) = 0;
        if (v45 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v45])(&v47, v44);
        }
        int v45 = -1;
        if (v43 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v43])(&v47, v42);
        }
        uint64_t v33 = *v12;
        if (v33)
        {
          uint64_t v34 = 24 * v33;
          uint64_t v35 = v12 + 6;
          do
          {
            uint64_t v27 = v35 - 4;
            uint64_t v36 = *v35;
            if (v36 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v36])(v42, v27);
            }
            *uint64_t v35 = -1;
            v35 += 6;
            v34 -= 24;
          }
          while (v34);
        }
        WTF::fastFree((WTF *)v12, v27);
        uint64_t v37 = v54;
        if (v54 != -1) {
          goto LABEL_117;
        }
LABEL_118:
        unsigned int v54 = -1;
        if (v52 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v52])(v42, v51);
        }
        return;
      default:
        goto LABEL_126;
    }
  }
}

void WGSL::constantLtEq(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267A790);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267A7B0);
  }
  uint64_t v5 = (float *)(v3 + 2);
  LOBYTE(v51[0]) = 0;
  int v52 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v6])(v42, v51, v3 + 2);
    int v52 = v6;
  }
  uint64_t v7 = (float *)(v3 + 8);
  LOBYTE(v53[0]) = 0;
  unsigned int v54 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v8])(v42, v53, v3 + 8);
    unsigned int v54 = v8;
    LODWORD(v6) = v52;
  }
  LOBYTE(v42[0]) = 0;
  int v43 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v42[0]) = 0;
    int v43 = -1;
    if (v8 == -1
      || ((((void (*)(double **, double *, void *))off_1ECABEE88[v8])(&v47, v42, v53),
           int v43 = v8,
           v8 != 8)
       || !*(void *)&v42[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = **(_DWORD **)&v42[0]),
          ((void (*)(double **, double *))off_1ECABEC60[v8])(&v47, v42),
          !v10))
    {
LABEL_93:
      switch(v3[6])
      {
        case 0:
          if (v3[12]) {
            goto LABEL_125;
          }
          BOOL v38 = *v5 > *v7;
          goto LABEL_104;
        case 1:
          if (v3[12] != 1) {
            goto LABEL_125;
          }
          BOOL v38 = *(short float *)v5 > *(short float *)v7;
          goto LABEL_104;
        case 2:
          if (v3[12] != 2) {
            goto LABEL_125;
          }
          BOOL v38 = *(double *)v5 > *(double *)v7;
          goto LABEL_104;
        case 3:
          if (v3[12] != 3) {
            goto LABEL_125;
          }
          BOOL v39 = *(_DWORD *)v5 <= *(_DWORD *)v7;
          break;
        case 4:
          if (v3[12] != 4) {
            goto LABEL_125;
          }
          BOOL v38 = *(_DWORD *)v5 > *(_DWORD *)v7;
LABEL_104:
          BOOL v39 = !v38;
          break;
        case 5:
          if (v3[12] != 5) {
            goto LABEL_125;
          }
          BOOL v39 = *(void *)v5 <= *(void *)v7;
          break;
        case 6:
          if (v3[12] != 6) {
            goto LABEL_125;
          }
          if (*(unsigned char *)v5) {
            BOOL v40 = *(unsigned char *)v7 == 0;
          }
          else {
            BOOL v40 = 0;
          }
          BOOL v39 = !v40;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x18267A7F8);
      }
      *(unsigned char *)(a2 + 8) = v39;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v37 = v54;
      if (v54 == -1) {
        goto LABEL_109;
      }
LABEL_108:
      ((void (*)(double *, void *))off_1ECABEC60[v37])(v42, v53);
      goto LABEL_109;
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(double **, double *, void *))off_1ECABEE88[v6])(&v47, v42, v51);
  int v43 = v6;
  if (v6 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v6])(&v47, v42);
    LODWORD(v8) = v54;
    goto LABEL_12;
  }
  if (*(void *)&v42[0]) {
    unsigned int v10 = **(_DWORD **)&v42[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v47, v42);
  if (!v10) {
    goto LABEL_93;
  }
LABEL_18:
  uint64_t v41 = a2;
  uint64_t v11 = 24 * v10;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v10;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v14 = 0;
  unint64_t v15 = 0;
  LODWORD(v42[0]) = 0;
  int v43 = 0;
  LODWORD(v44[0]) = 0;
  int v45 = 0;
  while (2)
  {
    if (v52 == 8)
    {
      if (v15 >= *(unsigned int *)v51[0]) {
        goto LABEL_121;
      }
      uint64_t v17 = *(unsigned int *)(v51[0] + v14 + 24);
      if (v43 == -1)
      {
        if (v17 == -1) {
          goto LABEL_34;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_29;
      }
      int v47 = v42;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v17])(&v47, v42, v51[0] + v14 + 8);
    }
    else
    {
      if (v43 == -1)
      {
        if (v52 == -1) {
          goto LABEL_34;
        }
      }
      else if (v52 == -1)
      {
LABEL_29:
        ((void (*)(double **, double *))off_1ECABEC60[v43])(&v47, v42);
        int v43 = -1;
        goto LABEL_34;
      }
      int v47 = v42;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v52])(&v47, v42, v51);
    }
LABEL_34:
    if (v54 == 8)
    {
      if (v15 >= *(unsigned int *)v53[0])
      {
LABEL_121:
        __break(0xC471u);
        JUMPOUT(0x18267A750);
      }
      uint64_t v18 = *(unsigned int *)(v53[0] + v14 + 24);
      if (v45 == -1)
      {
        if (v18 == -1) {
          goto LABEL_46;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_41;
      }
      int v47 = v44;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v18])(&v47, v44, v53[0] + v14 + 8);
      goto LABEL_46;
    }
    if (v45 == -1)
    {
      if (v54 == -1) {
        goto LABEL_46;
      }
LABEL_43:
      int v47 = v44;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v54])(&v47, v44, v53);
      goto LABEL_46;
    }
    if (v54 != -1) {
      goto LABEL_43;
    }
LABEL_41:
    ((void (*)(double **, double *))off_1ECABEC60[v45])(&v47, v44);
    int v45 = -1;
LABEL_46:
    switch(v43)
    {
      case 0:
        if (v45) {
          goto LABEL_125;
        }
        v13.n128_u32[0] = LODWORD(v42[0]);
        BOOL v19 = *(float *)v42 > *(float *)v44;
        goto LABEL_55;
      case 1:
        if (v45 != 1) {
          goto LABEL_125;
        }
        v13.n128_u16[0] = LOWORD(v42[0]);
        BOOL v19 = *(short float *)v42 > *(short float *)v44;
        goto LABEL_55;
      case 2:
        if (v45 != 2) {
          goto LABEL_125;
        }
        v13.n128_f64[0] = v42[0];
        BOOL v19 = v42[0] > v44[0];
        goto LABEL_55;
      case 3:
        if (v45 != 3) {
          goto LABEL_125;
        }
        BOOL v20 = SLODWORD(v42[0]) <= SLODWORD(v44[0]);
        goto LABEL_69;
      case 4:
        if (v45 != 4) {
          goto LABEL_125;
        }
        BOOL v19 = LODWORD(v42[0]) > LODWORD(v44[0]);
LABEL_55:
        BOOL v20 = !v19;
        goto LABEL_69;
      case 5:
        if (v45 != 5) {
          goto LABEL_125;
        }
        BOOL v20 = *(void *)&v42[0] <= *(void *)&v44[0];
        goto LABEL_69;
      case 6:
        if (v45 != 6)
        {
LABEL_125:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_126:
          __break(0xC471u);
          JUMPOUT(0x18267A7D4);
        }
        if (LOBYTE(v42[0])) {
          BOOL v21 = LOBYTE(v44[0]) == 0;
        }
        else {
          BOOL v21 = 0;
        }
        BOOL v20 = !v21;
LABEL_69:
        v48[0] = v20;
        int v49 = 6;
        unsigned int v50 = 0;
        if (v15 >= *v12)
        {
          __break(0xC471u);
          JUMPOUT(0x18267A770);
        }
        uint64_t v22 = &v12[v14 / 4];
        uint64_t v23 = (BOOL *)&v12[v14 / 4 + 2];
        uint64_t v24 = v12[v14 / 4 + 6];
        if (v24 == 6)
        {
          uint64_t v16 = 0;
          *uint64_t v23 = v20;
LABEL_20:
          ((void (*)(char *, BOOL *))off_1ECABED68[v16])(&v46, v48);
          goto LABEL_21;
        }
        if (v24 == -1)
        {
          uint64_t v16 = 0;
          *((unsigned char *)v22 + 8) = v20;
          v22[6] = 6;
          goto LABEL_20;
        }
        ((void (*)(char *, BOOL *, __n128))off_1ECABEC60[v24])(&v46, v23, v13);
        uint64_t v16 = v50;
        *((unsigned char *)v22 + 8) = v48[0];
        v22[6] = 6;
        if (v16 != -1) {
          goto LABEL_20;
        }
LABEL_21:
        ++v15;
        v14 += 24;
        if (v11 != v14) {
          continue;
        }
        uint64_t v25 = *v12;
        char v26 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v25 + 8));
        uint64_t v28 = v26;
        *char v26 = v25;
        if (v25)
        {
          uint64_t v29 = v26 + 6;
          uint64_t v30 = 24 * v25;
          uint64_t v31 = v12 + 6;
          do
          {
            *((unsigned char *)v29 - 16) = 0;
            uint64_t v27 = v29 - 4;
            *uint64_t v29 = -1;
            uint64_t v32 = *v31;
            if (v32 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v32])(&v47, v27, v31 - 4);
              *uint64_t v29 = v32;
            }
            v29 += 6;
            v31 += 6;
            v30 -= 24;
          }
          while (v30);
        }
        *(void *)(v41 + 8) = v28;
        *(_DWORD *)(v41 + 24) = 8;
        *(_DWORD *)(v41 + 32) = 0;
        if (v45 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v45])(&v47, v44);
        }
        int v45 = -1;
        if (v43 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v43])(&v47, v42);
        }
        uint64_t v33 = *v12;
        if (v33)
        {
          uint64_t v34 = 24 * v33;
          uint64_t v35 = v12 + 6;
          do
          {
            uint64_t v27 = v35 - 4;
            uint64_t v36 = *v35;
            if (v36 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v36])(v42, v27);
            }
            *uint64_t v35 = -1;
            v35 += 6;
            v34 -= 24;
          }
          while (v34);
        }
        WTF::fastFree((WTF *)v12, v27);
        uint64_t v37 = v54;
        if (v54 != -1) {
          goto LABEL_108;
        }
LABEL_109:
        unsigned int v54 = -1;
        if (v52 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v52])(v42, v51);
        }
        return;
      default:
        goto LABEL_126;
    }
  }
}

void WGSL::constantGt(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267B0B0);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267B0D0);
  }
  uint64_t v5 = (float *)(v3 + 2);
  LOBYTE(v50[0]) = 0;
  int v51 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v6])(v41, v50, v3 + 2);
    int v51 = v6;
  }
  uint64_t v7 = (float *)(v3 + 8);
  LOBYTE(v52[0]) = 0;
  unsigned int v53 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v8])(v41, v52, v3 + 8);
    unsigned int v53 = v8;
    LODWORD(v6) = v51;
  }
  LOBYTE(v41[0]) = 0;
  int v42 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v41[0]) = 0;
    int v42 = -1;
    if (v8 == -1
      || ((((void (*)(double **, double *, void *))off_1ECABEE88[v8])(&v46, v41, v52),
           int v42 = v8,
           v8 != 8)
       || !*(void *)&v41[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = **(_DWORD **)&v41[0]),
          ((void (*)(double **, double *))off_1ECABEC60[v8])(&v46, v41),
          !v10))
    {
LABEL_96:
      switch(v3[6])
      {
        case 0:
          if (v3[12]) {
            goto LABEL_127;
          }
          BOOL v37 = *v5 <= *v7;
          goto LABEL_109;
        case 1:
          if (v3[12] != 1) {
            goto LABEL_127;
          }
          BOOL v37 = *(short float *)v5 <= *(short float *)v7;
          goto LABEL_109;
        case 2:
          if (v3[12] != 2) {
            goto LABEL_127;
          }
          BOOL v37 = *(double *)v5 <= *(double *)v7;
          goto LABEL_109;
        case 3:
          if (v3[12] != 3) {
            goto LABEL_127;
          }
          BOOL v37 = *(_DWORD *)v5 <= *(_DWORD *)v7;
          goto LABEL_109;
        case 4:
          if (v3[12] != 4) {
            goto LABEL_127;
          }
          BOOL v38 = *(_DWORD *)v5 > *(_DWORD *)v7;
          break;
        case 5:
          if (v3[12] != 5) {
            goto LABEL_127;
          }
          BOOL v37 = *(void *)v5 <= *(void *)v7;
LABEL_109:
          BOOL v38 = !v37;
          break;
        case 6:
          if (v3[12] != 6) {
            goto LABEL_127;
          }
          if (*(unsigned char *)v5) {
            BOOL v39 = *(unsigned char *)v7 == 0;
          }
          else {
            BOOL v39 = 0;
          }
          BOOL v38 = v39;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x18267B118);
      }
      *(unsigned char *)(a2 + 8) = v38;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v36 = v53;
      if (v53 == -1) {
        goto LABEL_114;
      }
LABEL_113:
      ((void (*)(double *, void *))off_1ECABEC60[v36])(v41, v52);
      goto LABEL_114;
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(double **, double *, void *))off_1ECABEE88[v6])(&v46, v41, v50);
  int v42 = v6;
  if (v6 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v6])(&v46, v41);
    LODWORD(v8) = v53;
    goto LABEL_12;
  }
  if (*(void *)&v41[0]) {
    unsigned int v10 = **(_DWORD **)&v41[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v46, v41);
  if (!v10) {
    goto LABEL_96;
  }
LABEL_18:
  uint64_t v40 = a2;
  uint64_t v11 = 24 * v10;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v10;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v13 = 0;
  unint64_t v14 = 0;
  LODWORD(v41[0]) = 0;
  int v42 = 0;
  LODWORD(v43[0]) = 0;
  int v44 = 0;
  while (2)
  {
    if (v51 == 8)
    {
      if (v14 >= *(unsigned int *)v50[0]) {
        goto LABEL_124;
      }
      uint64_t v16 = *(unsigned int *)(v50[0] + v13 + 24);
      if (v42 == -1)
      {
        if (v16 == -1) {
          goto LABEL_34;
        }
      }
      else if (v16 == -1)
      {
        goto LABEL_29;
      }
      char v46 = v41;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v16])(&v46, v41, v50[0] + v13 + 8);
    }
    else
    {
      if (v42 == -1)
      {
        if (v51 == -1) {
          goto LABEL_34;
        }
      }
      else if (v51 == -1)
      {
LABEL_29:
        ((void (*)(double **, double *))off_1ECABEC60[v42])(&v46, v41);
        int v42 = -1;
        goto LABEL_34;
      }
      char v46 = v41;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v51])(&v46, v41, v50);
    }
LABEL_34:
    if (v53 == 8)
    {
      if (v14 >= *(unsigned int *)v52[0])
      {
LABEL_124:
        __break(0xC471u);
        JUMPOUT(0x18267B090);
      }
      uint64_t v17 = *(unsigned int *)(v52[0] + v13 + 24);
      if (v44 == -1)
      {
        if (v17 == -1) {
          goto LABEL_46;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_41;
      }
      char v46 = v43;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v17])(&v46, v43, v52[0] + v13 + 8);
      goto LABEL_46;
    }
    if (v44 == -1)
    {
      if (v53 == -1) {
        goto LABEL_46;
      }
LABEL_43:
      char v46 = v43;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v53])(&v46, v43, v52);
      goto LABEL_46;
    }
    if (v53 != -1) {
      goto LABEL_43;
    }
LABEL_41:
    ((void (*)(double **, double *))off_1ECABEC60[v44])(&v46, v43);
    int v44 = -1;
LABEL_46:
    switch(v42)
    {
      case 0:
        if (v44) {
          goto LABEL_127;
        }
        BOOL v18 = *(float *)v41 <= *(float *)v43;
        goto LABEL_60;
      case 1:
        if (v44 != 1) {
          goto LABEL_127;
        }
        BOOL v18 = *(short float *)v41 <= *(short float *)v43;
        goto LABEL_60;
      case 2:
        if (v44 != 2) {
          goto LABEL_127;
        }
        BOOL v18 = v41[0] <= v43[0];
        goto LABEL_60;
      case 3:
        if (v44 != 3) {
          goto LABEL_127;
        }
        BOOL v18 = SLODWORD(v41[0]) <= SLODWORD(v43[0]);
        goto LABEL_60;
      case 4:
        if (v44 != 4) {
          goto LABEL_127;
        }
        BOOL v19 = LODWORD(v41[0]) > LODWORD(v43[0]);
        v47[0] = LODWORD(v41[0]) > LODWORD(v43[0]);
        int v48 = 6;
        unsigned int v49 = 0;
        if (v14 >= *v12) {
          goto LABEL_77;
        }
        goto LABEL_64;
      case 5:
        if (v44 != 5) {
          goto LABEL_127;
        }
        BOOL v18 = *(void *)&v41[0] <= *(void *)&v43[0];
LABEL_60:
        BOOL v19 = !v18;
        v47[0] = v19;
        int v48 = 6;
        unsigned int v49 = 0;
        if (v14 < *v12) {
          goto LABEL_64;
        }
        goto LABEL_77;
      case 6:
        if (v44 != 6)
        {
LABEL_127:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_128:
          __break(0xC471u);
          JUMPOUT(0x18267B0F4);
        }
        if (LOBYTE(v41[0])) {
          BOOL v23 = LOBYTE(v43[0]) == 0;
        }
        else {
          BOOL v23 = 0;
        }
        BOOL v19 = v23;
        v47[0] = v19;
        int v48 = 6;
        unsigned int v49 = 0;
        if (v14 >= *v12)
        {
LABEL_77:
          __break(0xC471u);
          JUMPOUT(0x18267AD88);
        }
LABEL_64:
        BOOL v20 = &v12[v13 / 4];
        BOOL v21 = (BOOL *)&v12[v13 / 4 + 2];
        uint64_t v22 = v12[v13 / 4 + 6];
        if (v22 == 6)
        {
          uint64_t v15 = 0;
          *BOOL v21 = v19;
LABEL_20:
          ((void (*)(char *, BOOL *))off_1ECABED68[v15])(&v45, v47);
          goto LABEL_21;
        }
        if (v22 == -1)
        {
          uint64_t v15 = 0;
          *((unsigned char *)v20 + 8) = v19;
          v20[6] = 6;
          goto LABEL_20;
        }
        ((void (*)(char *, BOOL *))off_1ECABEC60[v22])(&v45, v21);
        uint64_t v15 = v49;
        *((unsigned char *)v20 + 8) = v47[0];
        v20[6] = 6;
        if (v15 != -1) {
          goto LABEL_20;
        }
LABEL_21:
        ++v14;
        v13 += 24;
        if (v11 != v13) {
          continue;
        }
        uint64_t v24 = *v12;
        uint64_t v25 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v24 + 8));
        uint64_t v27 = v25;
        _DWORD *v25 = v24;
        if (v24)
        {
          uint64_t v28 = v25 + 6;
          uint64_t v29 = 24 * v24;
          uint64_t v30 = v12 + 6;
          do
          {
            *((unsigned char *)v28 - 16) = 0;
            char v26 = v28 - 4;
            _DWORD *v28 = -1;
            uint64_t v31 = *v30;
            if (v31 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v31])(&v46, v26, v30 - 4);
              _DWORD *v28 = v31;
            }
            v28 += 6;
            v30 += 6;
            v29 -= 24;
          }
          while (v29);
        }
        *(void *)(v40 + 8) = v27;
        *(_DWORD *)(v40 + 24) = 8;
        *(_DWORD *)(v40 + 32) = 0;
        if (v44 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v44])(&v46, v43);
        }
        int v44 = -1;
        if (v42 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v42])(&v46, v41);
        }
        uint64_t v32 = *v12;
        if (v32)
        {
          uint64_t v33 = 24 * v32;
          uint64_t v34 = v12 + 6;
          do
          {
            char v26 = v34 - 4;
            uint64_t v35 = *v34;
            if (v35 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v35])(v41, v26);
            }
            *uint64_t v34 = -1;
            v34 += 6;
            v33 -= 24;
          }
          while (v33);
        }
        WTF::fastFree((WTF *)v12, v26);
        uint64_t v36 = v53;
        if (v53 != -1) {
          goto LABEL_113;
        }
LABEL_114:
        unsigned int v53 = -1;
        if (v51 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v51])(v41, v50);
        }
        return;
      default:
        goto LABEL_128;
    }
  }
}

void WGSL::constantGtEq(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267B9D0);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267B9F0);
  }
  uint64_t v5 = (float *)(v3 + 2);
  LOBYTE(v50[0]) = 0;
  int v51 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v6])(v41, v50, v3 + 2);
    int v51 = v6;
  }
  uint64_t v7 = (float *)(v3 + 8);
  LOBYTE(v52[0]) = 0;
  unsigned int v53 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(double *, void *, int *))off_1ECABEE88[v8])(v41, v52, v3 + 8);
    unsigned int v53 = v8;
    LODWORD(v6) = v51;
  }
  LOBYTE(v41[0]) = 0;
  int v42 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v41[0]) = 0;
    int v42 = -1;
    if (v8 == -1
      || ((((void (*)(double **, double *, void *))off_1ECABEE88[v8])(&v46, v41, v52),
           int v42 = v8,
           v8 != 8)
       || !*(void *)&v41[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = **(_DWORD **)&v41[0]),
          ((void (*)(double **, double *))off_1ECABEC60[v8])(&v46, v41),
          !v10))
    {
LABEL_96:
      switch(v3[6])
      {
        case 0:
          if (v3[12]) {
            goto LABEL_127;
          }
          BOOL v37 = *v5 < *v7;
          goto LABEL_109;
        case 1:
          if (v3[12] != 1) {
            goto LABEL_127;
          }
          BOOL v37 = *(short float *)v5 < *(short float *)v7;
          goto LABEL_109;
        case 2:
          if (v3[12] != 2) {
            goto LABEL_127;
          }
          BOOL v37 = *(double *)v5 < *(double *)v7;
          goto LABEL_109;
        case 3:
          if (v3[12] != 3) {
            goto LABEL_127;
          }
          BOOL v37 = *(_DWORD *)v5 < *(_DWORD *)v7;
          goto LABEL_109;
        case 4:
          if (v3[12] != 4) {
            goto LABEL_127;
          }
          BOOL v38 = *(_DWORD *)v5 >= *(_DWORD *)v7;
          break;
        case 5:
          if (v3[12] != 5) {
            goto LABEL_127;
          }
          BOOL v37 = *(void *)v5 < *(void *)v7;
LABEL_109:
          BOOL v38 = !v37;
          break;
        case 6:
          if (v3[12] != 6) {
            goto LABEL_127;
          }
          if (*(unsigned char *)v5) {
            BOOL v39 = 1;
          }
          else {
            BOOL v39 = *(unsigned char *)v7 == 0;
          }
          BOOL v38 = v39;
          break;
        default:
          __break(0xC471u);
          JUMPOUT(0x18267BA38);
      }
      *(unsigned char *)(a2 + 8) = v38;
      *(_DWORD *)(a2 + 24) = 6;
      *(_DWORD *)(a2 + 32) = 0;
      uint64_t v36 = v53;
      if (v53 == -1) {
        goto LABEL_114;
      }
LABEL_113:
      ((void (*)(double *, void *))off_1ECABEC60[v36])(v41, v52);
      goto LABEL_114;
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(double **, double *, void *))off_1ECABEE88[v6])(&v46, v41, v50);
  int v42 = v6;
  if (v6 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v6])(&v46, v41);
    LODWORD(v8) = v53;
    goto LABEL_12;
  }
  if (*(void *)&v41[0]) {
    unsigned int v10 = **(_DWORD **)&v41[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v46, v41);
  if (!v10) {
    goto LABEL_96;
  }
LABEL_18:
  uint64_t v40 = a2;
  uint64_t v11 = 24 * v10;
  BOOL v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *BOOL v12 = v10;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v13 = 0;
  unint64_t v14 = 0;
  LODWORD(v41[0]) = 0;
  int v42 = 0;
  LODWORD(v43[0]) = 0;
  int v44 = 0;
  while (2)
  {
    if (v51 == 8)
    {
      if (v14 >= *(unsigned int *)v50[0]) {
        goto LABEL_124;
      }
      uint64_t v16 = *(unsigned int *)(v50[0] + v13 + 24);
      if (v42 == -1)
      {
        if (v16 == -1) {
          goto LABEL_34;
        }
      }
      else if (v16 == -1)
      {
        goto LABEL_29;
      }
      char v46 = v41;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v16])(&v46, v41, v50[0] + v13 + 8);
    }
    else
    {
      if (v42 == -1)
      {
        if (v51 == -1) {
          goto LABEL_34;
        }
      }
      else if (v51 == -1)
      {
LABEL_29:
        ((void (*)(double **, double *))off_1ECABEC60[v42])(&v46, v41);
        int v42 = -1;
        goto LABEL_34;
      }
      char v46 = v41;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v51])(&v46, v41, v50);
    }
LABEL_34:
    if (v53 == 8)
    {
      if (v14 >= *(unsigned int *)v52[0])
      {
LABEL_124:
        __break(0xC471u);
        JUMPOUT(0x18267B9B0);
      }
      uint64_t v17 = *(unsigned int *)(v52[0] + v13 + 24);
      if (v44 == -1)
      {
        if (v17 == -1) {
          goto LABEL_46;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_41;
      }
      char v46 = v43;
      ((void (*)(double **, double *, unint64_t))off_1ECABEEE0[v17])(&v46, v43, v52[0] + v13 + 8);
      goto LABEL_46;
    }
    if (v44 == -1)
    {
      if (v53 == -1) {
        goto LABEL_46;
      }
LABEL_43:
      char v46 = v43;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v53])(&v46, v43, v52);
      goto LABEL_46;
    }
    if (v53 != -1) {
      goto LABEL_43;
    }
LABEL_41:
    ((void (*)(double **, double *))off_1ECABEC60[v44])(&v46, v43);
    int v44 = -1;
LABEL_46:
    switch(v42)
    {
      case 0:
        if (v44) {
          goto LABEL_127;
        }
        BOOL v18 = *(float *)v41 < *(float *)v43;
        goto LABEL_60;
      case 1:
        if (v44 != 1) {
          goto LABEL_127;
        }
        BOOL v18 = *(short float *)v41 < *(short float *)v43;
        goto LABEL_60;
      case 2:
        if (v44 != 2) {
          goto LABEL_127;
        }
        BOOL v18 = v41[0] < v43[0];
        goto LABEL_60;
      case 3:
        if (v44 != 3) {
          goto LABEL_127;
        }
        BOOL v18 = SLODWORD(v41[0]) < SLODWORD(v43[0]);
        goto LABEL_60;
      case 4:
        if (v44 != 4) {
          goto LABEL_127;
        }
        BOOL v19 = LODWORD(v41[0]) >= LODWORD(v43[0]);
        v47[0] = LODWORD(v41[0]) >= LODWORD(v43[0]);
        int v48 = 6;
        unsigned int v49 = 0;
        if (v14 >= *v12) {
          goto LABEL_77;
        }
        goto LABEL_64;
      case 5:
        if (v44 != 5) {
          goto LABEL_127;
        }
        BOOL v18 = *(void *)&v41[0] < *(void *)&v43[0];
LABEL_60:
        BOOL v19 = !v18;
        v47[0] = v19;
        int v48 = 6;
        unsigned int v49 = 0;
        if (v14 < *v12) {
          goto LABEL_64;
        }
        goto LABEL_77;
      case 6:
        if (v44 != 6)
        {
LABEL_127:
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_128:
          __break(0xC471u);
          JUMPOUT(0x18267BA14);
        }
        if (LOBYTE(v41[0])) {
          BOOL v23 = 1;
        }
        else {
          BOOL v23 = LOBYTE(v43[0]) == 0;
        }
        BOOL v19 = v23;
        v47[0] = v19;
        int v48 = 6;
        unsigned int v49 = 0;
        if (v14 >= *v12)
        {
LABEL_77:
          __break(0xC471u);
          JUMPOUT(0x18267B6A8);
        }
LABEL_64:
        BOOL v20 = &v12[v13 / 4];
        BOOL v21 = (BOOL *)&v12[v13 / 4 + 2];
        uint64_t v22 = v12[v13 / 4 + 6];
        if (v22 == 6)
        {
          uint64_t v15 = 0;
          *BOOL v21 = v19;
LABEL_20:
          ((void (*)(char *, BOOL *))off_1ECABED68[v15])(&v45, v47);
          goto LABEL_21;
        }
        if (v22 == -1)
        {
          uint64_t v15 = 0;
          *((unsigned char *)v20 + 8) = v19;
          v20[6] = 6;
          goto LABEL_20;
        }
        ((void (*)(char *, BOOL *))off_1ECABEC60[v22])(&v45, v21);
        uint64_t v15 = v49;
        *((unsigned char *)v20 + 8) = v47[0];
        v20[6] = 6;
        if (v15 != -1) {
          goto LABEL_20;
        }
LABEL_21:
        ++v14;
        v13 += 24;
        if (v11 != v13) {
          continue;
        }
        uint64_t v24 = *v12;
        uint64_t v25 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v24 + 8));
        uint64_t v27 = v25;
        _DWORD *v25 = v24;
        if (v24)
        {
          uint64_t v28 = v25 + 6;
          uint64_t v29 = 24 * v24;
          uint64_t v30 = v12 + 6;
          do
          {
            *((unsigned char *)v28 - 16) = 0;
            char v26 = v28 - 4;
            _DWORD *v28 = -1;
            uint64_t v31 = *v30;
            if (v31 != -1)
            {
              ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v31])(&v46, v26, v30 - 4);
              _DWORD *v28 = v31;
            }
            v28 += 6;
            v30 += 6;
            v29 -= 24;
          }
          while (v29);
        }
        *(void *)(v40 + 8) = v27;
        *(_DWORD *)(v40 + 24) = 8;
        *(_DWORD *)(v40 + 32) = 0;
        if (v44 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v44])(&v46, v43);
        }
        int v44 = -1;
        if (v42 != -1) {
          ((void (*)(double **, double *))off_1ECABEC60[v42])(&v46, v41);
        }
        uint64_t v32 = *v12;
        if (v32)
        {
          uint64_t v33 = 24 * v32;
          uint64_t v34 = v12 + 6;
          do
          {
            char v26 = v34 - 4;
            uint64_t v35 = *v34;
            if (v35 != -1) {
              ((void (*)(double *, _DWORD *))off_1ECABEC60[v35])(v41, v26);
            }
            *uint64_t v34 = -1;
            v34 += 6;
            v33 -= 24;
          }
          while (v33);
        }
        WTF::fastFree((WTF *)v12, v26);
        uint64_t v36 = v53;
        if (v53 != -1) {
          goto LABEL_113;
        }
LABEL_114:
        unsigned int v53 = -1;
        if (v51 != -1) {
          ((void (*)(double *, void *))off_1ECABEC60[v51])(v41, v50);
        }
        return;
      default:
        goto LABEL_128;
    }
  }
}

uint64_t WGSL::constantBitwiseNot@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267BF30);
  }
  LOBYTE(v39[0]) = 0;
  unsigned int v40 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_59;
  }
  uint64_t v5 = v3 + 2;
  uint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(unsigned int **, void *, _DWORD *))v6)(&v34, v39, v3 + 2);
  unsigned int v40 = v4;
  LOBYTE(v34) = 0;
  int v36 = -1;
  ((void (*)(void *, unsigned int **, void *))v6)(v31, &v34, v39);
  unsigned int v7 = 0;
  int v36 = v4;
  if (v4 == 8)
  {
    if (v34) {
      unsigned int v7 = *v34;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  uint64_t result = ((uint64_t (*)(void *, unsigned int **))off_1ECABEC60[v4])(v31, &v34);
  if (!v7)
  {
    int v29 = v3[6];
    switch(v29)
    {
      case 5:
        *(void *)(a2 + 8) = ~*v5;
        *(_DWORD *)(a2 + 24) = 5;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v28 = v40;
        if (v40 != -1) {
          return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v28])(&v34, v39);
        }
        return result;
      case 4:
        *(_DWORD *)(a2 + 8) = ~*(_DWORD *)v5;
        *(_DWORD *)(a2 + 24) = 4;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v28 = v40;
        if (v40 != -1) {
          return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v28])(&v34, v39);
        }
        return result;
      case 3:
        *(_DWORD *)(a2 + 8) = ~*(_DWORD *)v5;
        *(_DWORD *)(a2 + 24) = 3;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v28 = v40;
        if (v40 != -1) {
          return ((uint64_t (*)(void, void))off_1ECABEC60[v28])(&v34, v39);
        }
        return result;
    }
LABEL_59:
    __break(0xC471u);
    JUMPOUT(0x18267BF90);
  }
  uint64_t v30 = a2;
  uint64_t v9 = 24 * v7;
  unsigned int v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
  *unsigned int v10 = v7;
  uint64_t v11 = 6;
  bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
  unint64_t v13 = 0;
  LODWORD(v31[0]) = 0;
  unsigned int v32 = 0;
  do
  {
    if (v40 == 8)
    {
      if (v13 >= *(unsigned int *)v39[0])
      {
        __break(0xC471u);
        JUMPOUT(0x18267BF10);
      }
      uint64_t v12 = v39[0] + v11 * 4 - 16;
      uint64_t v14 = *(unsigned int *)(v39[0] + v11 * 4);
      uint64_t v15 = v32;
      if (v32 != -1)
      {
        if (v14 == -1) {
          goto LABEL_57;
        }
LABEL_21:
        uint64_t v34 = (unsigned int *)v31;
        ((void (*)(unsigned int **, void *, uint64_t))off_1ECABEEE0[v14])(&v34, v31, v12);
        goto LABEL_22;
      }
      if (v14 != -1) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v15 = v32;
      if (v32 == -1)
      {
        if (v40 == -1) {
          goto LABEL_58;
        }
      }
      else if (v40 == -1)
      {
LABEL_57:
        ((void (*)(unsigned int **, void *, uint64_t))off_1ECABEC60[v15])(&v34, v31, v12);
        unsigned int v32 = -1;
LABEL_58:
        __break(0xC471u);
        JUMPOUT(0x18267BF70);
      }
      uint64_t v34 = (unsigned int *)v31;
      ((void (*)(unsigned int **, void *, void *))off_1ECABEEE0[v40])(&v34, v31, v39);
    }
LABEL_22:
    if (v32 == 3 || v32 == 4)
    {
      LODWORD(v35) = ~LODWORD(v31[0]);
    }
    else
    {
      if (v32 != 5) {
        goto LABEL_58;
      }
      uint64_t v35 = ~v31[0];
    }
    unsigned int v37 = v32;
    int v38 = 0;
    if (v13 >= *v10)
    {
      __break(0xC471u);
      JUMPOUT(0x18267BEF0);
    }
    uint64_t v33 = (uint64_t)&v10[v11 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v32])(&v33);
    if (v38 != -1) {
      ((void (*)(uint64_t *, uint64_t *))off_1ECABED68[v38])(&v33, &v35);
    }
    ++v13;
    v11 += 6;
  }
  while (v7 != v13);
  uint64_t v16 = *v10;
  uint64_t v17 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v16 + 8));
  BOOL v19 = v17;
  *uint64_t v17 = v16;
  if (v16)
  {
    BOOL v20 = v17 + 6;
    uint64_t v21 = 24 * v16;
    uint64_t v22 = v10 + 6;
    do
    {
      *((unsigned char *)v20 - 16) = 0;
      BOOL v18 = v20 - 4;
      *BOOL v20 = -1;
      uint64_t v23 = *v22;
      if (v23 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v23])(&v34, v18, v22 - 4);
        *BOOL v20 = v23;
      }
      v20 += 6;
      v22 += 6;
      v21 -= 24;
    }
    while (v21);
  }
  *(void *)(v30 + 8) = v19;
  *(_DWORD *)(v30 + 24) = 8;
  *(_DWORD *)(v30 + 32) = 0;
  if (v32 != -1) {
    ((void (*)(unsigned int **, void *))off_1ECABEC60[v32])(&v34, v31);
  }
  uint64_t v24 = *v10;
  if (v24)
  {
    uint64_t v25 = 24 * v24;
    char v26 = v10 + 6;
    do
    {
      BOOL v18 = v26 - 4;
      uint64_t v27 = *v26;
      if (v27 != -1) {
        ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v27])(&v34, v18);
      }
      *char v26 = -1;
      v26 += 6;
      v25 -= 24;
    }
    while (v25);
  }
  uint64_t result = WTF::fastFree((WTF *)v10, v18);
  uint64_t v28 = v40;
  if (v40 != -1) {
    return ((uint64_t (*)(void, void))off_1ECABEC60[v28])(&v34, v39);
  }
  return result;
}

void WGSL::constantBitwiseXor(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267C6DCLL);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267C6FCLL);
  }
  uint64_t v5 = v3 + 2;
  LOBYTE(v44[0]) = 0;
  int v45 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v6])(v35, v44, v3 + 2);
    int v45 = v6;
  }
  unsigned int v7 = v3 + 8;
  LOBYTE(v46[0]) = 0;
  unsigned int v47 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v8])(v35, v46, v3 + 8);
    unsigned int v47 = v8;
    LODWORD(v6) = v45;
  }
  LOBYTE(v35[0]) = 0;
  unsigned int v36 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(v35[0]) = 0;
    unsigned int v36 = -1;
    if (v8 == -1
      || ((((void (*)(void **, void *, void *))off_1ECABEE88[v8])(&v40, v35, v46),
           unsigned int v36 = v8,
           v8 != 8)
       || !v35[0]
        ? (unsigned int v10 = 0)
        : (unsigned int v10 = *(_DWORD *)v35[0]),
          ((void (*)(void **, void *))off_1ECABEC60[v8])(&v40, v35),
          !v10))
    {
LABEL_77:
      int v33 = v3[6];
      switch(v33)
      {
        case 5:
          if (v3[12] == 5)
          {
            *(void *)(a2 + 8) = *v7 ^ *v5;
            *(_DWORD *)(a2 + 24) = 5;
            *(_DWORD *)(a2 + 32) = 0;
            uint64_t v32 = v47;
            if (v47 != -1) {
              goto LABEL_71;
            }
            goto LABEL_72;
          }
          break;
        case 4:
          if (v3[12] == 4)
          {
            *(_DWORD *)(a2 + 8) = *(_DWORD *)v7 ^ *(_DWORD *)v5;
            *(_DWORD *)(a2 + 24) = 4;
            *(_DWORD *)(a2 + 32) = 0;
            uint64_t v32 = v47;
            if (v47 != -1) {
              goto LABEL_71;
            }
            goto LABEL_72;
          }
          break;
        case 3:
          if (v3[12] == 3)
          {
            *(_DWORD *)(a2 + 8) = *(_DWORD *)v7 ^ *(_DWORD *)v5;
            *(_DWORD *)(a2 + 24) = 3;
            *(_DWORD *)(a2 + 32) = 0;
            uint64_t v32 = v47;
            if (v47 != -1) {
              goto LABEL_71;
            }
            goto LABEL_72;
          }
          break;
        default:
LABEL_95:
          __break(0xC471u);
          JUMPOUT(0x18267C69CLL);
      }
LABEL_93:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_94:
      __break(0xC471u);
      JUMPOUT(0x18267C720);
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(void **, void *, void *))off_1ECABEE88[v6])(&v40, v35, v44);
  unsigned int v36 = v6;
  if (v6 != 8)
  {
    ((void (*)(void **, void *))off_1ECABEC60[v6])(&v40, v35);
    LODWORD(v8) = v47;
    goto LABEL_12;
  }
  if (v35[0]) {
    unsigned int v10 = *(_DWORD *)v35[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(void **, void *))off_1ECABEC60[v9])(&v40, v35);
  if (!v10) {
    goto LABEL_77;
  }
LABEL_18:
  uint64_t v34 = a2;
  uint64_t v11 = 24 * v10;
  uint64_t v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *uint64_t v12 = v10;
  uint64_t v13 = 24;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v15 = 0;
  LODWORD(v35[0]) = 0;
  unsigned int v36 = 0;
  LODWORD(v37[0]) = 0;
  unsigned int v38 = 0;
  do
  {
    if (v45 == 8)
    {
      if (v15 >= *(unsigned int *)v44[0]) {
        goto LABEL_95;
      }
      uint64_t v14 = v44[0] + v13 - 16;
      uint64_t v16 = *(unsigned int *)(v44[0] + v13);
      uint64_t v17 = v36;
      if (v36 == -1)
      {
        if (v16 == -1) {
          goto LABEL_32;
        }
      }
      else if (v16 == -1)
      {
        goto LABEL_27;
      }
      unsigned int v40 = v35;
      ((void (*)(void **, void *, uint64_t))off_1ECABEEE0[v16])(&v40, v35, v14);
    }
    else
    {
      uint64_t v17 = v36;
      if (v36 == -1)
      {
        if (v45 == -1) {
          goto LABEL_32;
        }
      }
      else if (v45 == -1)
      {
LABEL_27:
        ((void (*)(void **, void *, uint64_t))off_1ECABEC60[v17])(&v40, v35, v14);
        unsigned int v36 = -1;
        goto LABEL_32;
      }
      unsigned int v40 = v35;
      ((void (*)(void **, void *, void *))off_1ECABEEE0[v45])(&v40, v35, v44);
    }
LABEL_32:
    if (v47 == 8)
    {
      if (v15 >= *(unsigned int *)v46[0]) {
        goto LABEL_95;
      }
      uint64_t v14 = v46[0] + v13 - 16;
      uint64_t v18 = *(unsigned int *)(v46[0] + v13);
      uint64_t v19 = v38;
      if (v38 == -1)
      {
        if (v18 == -1) {
          goto LABEL_44;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_39;
      }
      unsigned int v40 = v37;
      ((void (*)(void **, void *, uint64_t))off_1ECABEEE0[v18])(&v40, v37, v14);
    }
    else
    {
      uint64_t v19 = v38;
      if (v38 == -1)
      {
        if (v47 == -1) {
          goto LABEL_44;
        }
      }
      else if (v47 == -1)
      {
LABEL_39:
        ((void (*)(void **, void *, uint64_t))off_1ECABEC60[v19])(&v40, v37, v14);
        unsigned int v38 = -1;
        goto LABEL_44;
      }
      unsigned int v40 = v37;
      ((void (*)(void **, void *, void *))off_1ECABEEE0[v47])(&v40, v37, v46);
    }
LABEL_44:
    if (v36 == 3)
    {
      if (v38 != 3) {
        goto LABEL_93;
      }
LABEL_52:
      LODWORD(v41) = LODWORD(v37[0]) ^ LODWORD(v35[0]);
      goto LABEL_53;
    }
    if (v36 == 4)
    {
      if (v38 != 4) {
        goto LABEL_93;
      }
      goto LABEL_52;
    }
    if (v36 != 5) {
      goto LABEL_94;
    }
    if (v38 != 5) {
      goto LABEL_93;
    }
    uint64_t v41 = v37[0] ^ v35[0];
LABEL_53:
    unsigned int v42 = v36;
    int v43 = 0;
    if (v15 >= *v12)
    {
      __break(0xC471u);
      JUMPOUT(0x18267C6BCLL);
    }
    uint64_t v39 = (uint64_t)&v12[(unint64_t)v13 / 4 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v36])(&v39);
    if (v43 != -1) {
      ((void (*)(uint64_t *, uint64_t *))off_1ECABED68[v43])(&v39, &v41);
    }
    ++v15;
    v13 += 24;
  }
  while (v10 != v15);
  uint64_t v20 = *v12;
  uint64_t v21 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v20 + 8));
  uint64_t v23 = v21;
  *uint64_t v21 = v20;
  if (v20)
  {
    uint64_t v24 = v21 + 6;
    uint64_t v25 = 24 * v20;
    char v26 = v12 + 6;
    do
    {
      *((unsigned char *)v24 - 16) = 0;
      uint64_t v22 = v24 - 4;
      *uint64_t v24 = -1;
      uint64_t v27 = *v26;
      if (v27 != -1)
      {
        ((void (*)(void **, _DWORD *, unsigned int *))off_1ECABEE88[v27])(&v40, v22, v26 - 4);
        *uint64_t v24 = v27;
      }
      v24 += 6;
      v26 += 6;
      v25 -= 24;
    }
    while (v25);
  }
  *(void *)(v34 + 8) = v23;
  *(_DWORD *)(v34 + 24) = 8;
  *(_DWORD *)(v34 + 32) = 0;
  if (v38 != -1) {
    ((void (*)(void **, void *))off_1ECABEC60[v38])(&v40, v37);
  }
  unsigned int v38 = -1;
  if (v36 != -1) {
    ((void (*)(void **, void *))off_1ECABEC60[v36])(&v40, v35);
  }
  uint64_t v28 = *v12;
  if (v28)
  {
    uint64_t v29 = 24 * v28;
    uint64_t v30 = v12 + 6;
    do
    {
      uint64_t v22 = v30 - 4;
      uint64_t v31 = *v30;
      if (v31 != -1) {
        ((void (*)(void *, _DWORD *))off_1ECABEC60[v31])(v35, v22);
      }
      *uint64_t v30 = -1;
      v30 += 6;
      v29 -= 24;
    }
    while (v29);
  }
  WTF::fastFree((WTF *)v12, v22);
  uint64_t v32 = v47;
  if (v47 != -1) {
LABEL_71:
  }
    ((void (*)(void *, void *))off_1ECABEC60[v32])(v35, v46);
LABEL_72:
  unsigned int v47 = -1;
  if (v45 != -1) {
    ((void (*)(void *, void *))off_1ECABEC60[v45])(v35, v44);
  }
}

uint64_t WGSL::constantBitwiseShiftLeft@<X0>(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267CDFCLL);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267CE1CLL);
  }
  LOBYTE(v45[0]) = 0;
  int v46 = -1;
  uint64_t v5 = v3[6];
  if (v5 != -1)
  {
    ((void (*)(unsigned int *, void *, int *))off_1ECABEE88[v5])(v36, v45, v3 + 2);
    int v46 = v5;
  }
  LOBYTE(v47[0]) = 0;
  unsigned int v48 = -1;
  uint64_t v6 = v3[12];
  if (v6 != -1)
  {
    ((void (*)(unsigned int *, void *, int *))off_1ECABEE88[v6])(v36, v47, v3 + 8);
    unsigned int v48 = v6;
    LODWORD(v5) = v46;
  }
  LOBYTE(v36[0]) = 0;
  unsigned int v37 = -1;
  if (v5 == -1)
  {
LABEL_12:
    LOBYTE(v36[0]) = 0;
    unsigned int v37 = -1;
    if (v6 == -1
      || ((uint64_t v8 = v6,
           ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEE88[v6])(&v41, v36, v47), v37 = v6, v6 != 8)|| !*(void *)v36? (unsigned int v7 = 0): (unsigned int v7 = **(_DWORD **)v36), ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v8])(&v41, v36), !v7))
    {
LABEL_77:
      uint64_t result = WGSL::constantBitwiseShiftLeft(WGSL::Type const*,WTF::FixedVector<WGSL::ConstantValue> const&)::$_0::operator()<WGSL::ConstantValue,WGSL::ConstantValue>(a2, (unsigned int *)v3 + 2, v3[8], v3[12]);
      uint64_t v35 = v48;
      if (v48 == -1) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    goto LABEL_18;
  }
  ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEE88[v5])(&v41, v36, v45);
  unsigned int v37 = v5;
  if (v5 != 8)
  {
    ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v5])(&v41, v36);
    LODWORD(v6) = v48;
    goto LABEL_12;
  }
  if (*(void *)v36) {
    unsigned int v7 = **(_DWORD **)v36;
  }
  else {
    unsigned int v7 = 0;
  }
  ((void (*)(unsigned int **, unsigned int *))off_1ECABECA0[0])(&v41, v36);
  if (!v7) {
    goto LABEL_77;
  }
LABEL_18:
  uint64_t v9 = 24 * v7;
  unsigned int v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
  *unsigned int v10 = v7;
  uint64_t v11 = v10 + 2;
  uint64_t v12 = 24;
  bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
  unint64_t v14 = 0;
  v36[0] = 0;
  unsigned int v37 = 0;
  v38[0] = 0;
  unsigned int v39 = 0;
  do
  {
    if (v46 == 8)
    {
      if (v14 >= *(unsigned int *)v45[0]) {
        goto LABEL_82;
      }
      uint64_t v13 = v45[0] + v12 - 16;
      uint64_t v15 = *(unsigned int *)(v45[0] + v12);
      uint64_t v16 = v37;
      if (v37 == -1)
      {
        if (v15 == -1) {
          goto LABEL_31;
        }
      }
      else if (v15 == -1)
      {
        goto LABEL_26;
      }
      uint64_t v41 = v36;
      ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEEE0[v15])(&v41, v36, v13);
    }
    else
    {
      uint64_t v16 = v37;
      if (v37 == -1)
      {
        if (v46 == -1) {
          goto LABEL_31;
        }
      }
      else if (v46 == -1)
      {
LABEL_26:
        ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEC60[v16])(&v41, v36, v13);
        unsigned int v37 = -1;
        goto LABEL_31;
      }
      uint64_t v41 = v36;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEEE0[v46])(&v41, v36, v45);
    }
LABEL_31:
    if (v48 == 8)
    {
      if (v14 >= *(unsigned int *)v47[0])
      {
LABEL_82:
        __break(0xC471u);
        JUMPOUT(0x18267CDBCLL);
      }
      uint64_t v13 = v47[0] + v12 - 16;
      uint64_t v17 = *(unsigned int *)(v47[0] + v12);
      uint64_t v18 = v39;
      if (v39 == -1)
      {
        if (v17 == -1) {
          goto LABEL_43;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_38;
      }
      uint64_t v41 = v38;
      ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEEE0[v17])(&v41, v38, v13);
    }
    else
    {
      uint64_t v18 = v39;
      if (v39 == -1)
      {
        if (v48 == -1) {
          goto LABEL_43;
        }
      }
      else if (v48 == -1)
      {
LABEL_38:
        ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEC60[v18])(&v41, v38, v13);
        unsigned int v39 = -1;
        goto LABEL_43;
      }
      uint64_t v41 = v38;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEEE0[v48])(&v41, v38, v47);
    }
LABEL_43:
    WGSL::constantBitwiseShiftLeft(WGSL::Type const*,WTF::FixedVector<WGSL::ConstantValue> const&)::$_0::operator()<WGSL::ConstantValue,WGSL::ConstantValue>((uint64_t)&v41, v36, v38[0], v39);
    int v20 = v44;
    if (v44)
    {
      if (v44 != 1) {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      uint64_t v21 = v42[0];
      if (v42[0]) {
        *(_DWORD *)v42[0] += 2;
      }
      *(void *)(a2 + 8) = v21;
      *(_DWORD *)(a2 + 32) = 1;
    }
    else
    {
      if (v14 >= *v10)
      {
        __break(0xC471u);
        JUMPOUT(0x18267CDDCLL);
      }
      uint64_t v22 = v10[(unint64_t)v12 / 4];
      if (v22 == -1)
      {
        if (v43 == -1) {
          goto LABEL_54;
        }
      }
      else if (v43 == -1)
      {
        ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v22])(&v40, v11);
        v10[(unint64_t)v12 / 4] = -1;
        goto LABEL_54;
      }
      unsigned int v40 = v11;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEF38[v43])(&v40, v11, v42);
    }
LABEL_54:
    if (v44 != -1) {
      ((void (*)(unsigned int **, void *))off_1ECABED68[v44])(&v40, v42);
    }
    if (v20) {
      goto LABEL_64;
    }
    ++v14;
    v11 += 6;
    v12 += 24;
  }
  while (v7 != v14);
  uint64_t v23 = *v10;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v25 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    char v26 = v24 + 6;
    uint64_t v27 = 24 * v23;
    uint64_t v28 = v10 + 6;
    do
    {
      *((unsigned char *)v26 - 16) = 0;
      uint64_t v19 = v26 - 4;
      *char v26 = -1;
      uint64_t v29 = *v28;
      if (v29 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v29])(&v41, v19, v28 - 4);
        *char v26 = v29;
      }
      v26 += 6;
      v28 += 6;
      v27 -= 24;
    }
    while (v27);
  }
  *(void *)(a2 + 8) = v25;
  *(_DWORD *)(a2 + 24) = 8;
  *(_DWORD *)(a2 + 32) = 0;
LABEL_64:
  if (v39 != -1) {
    ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v39])(&v41, v38);
  }
  unsigned int v39 = -1;
  if (v37 != -1) {
    ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v37])(&v41, v36);
  }
  uint64_t v30 = *v10;
  if (v30)
  {
    uint64_t v31 = 24 * v30;
    uint64_t v32 = v10 + 6;
    do
    {
      uint64_t v19 = v32 - 4;
      uint64_t v33 = *v32;
      if (v33 != -1) {
        ((void (*)(unsigned int *, _DWORD *))off_1ECABEC60[v33])(v36, v19);
      }
      _DWORD *v32 = -1;
      v32 += 6;
      v31 -= 24;
    }
    while (v31);
  }
  uint64_t result = WTF::fastFree((WTF *)v10, v19);
  uint64_t v35 = v48;
  if (v48 != -1) {
LABEL_78:
  }
    uint64_t result = ((uint64_t (*)(unsigned int *, void *))off_1ECABEC60[v35])(v36, v47);
LABEL_79:
  unsigned int v48 = -1;
  if (v46 != -1) {
    return ((uint64_t (*)(unsigned int *, void *))off_1ECABEC60[v46])(v36, v45);
  }
  return result;
}

uint64_t WGSL::constantBitwiseShiftRight@<X0>(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267D4DCLL);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267D4FCLL);
  }
  LOBYTE(v45[0]) = 0;
  int v46 = -1;
  uint64_t v5 = v3[6];
  if (v5 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v5])(v36, v45, v3 + 2);
    int v46 = v5;
  }
  LOBYTE(v47[0]) = 0;
  unsigned int v48 = -1;
  uint64_t v6 = v3[12];
  if (v6 != -1)
  {
    ((void (*)(void *, void *, int *))off_1ECABEE88[v6])(v36, v47, v3 + 8);
    unsigned int v48 = v6;
    LODWORD(v5) = v46;
  }
  LOBYTE(v36[0]) = 0;
  unsigned int v37 = -1;
  if (v5 == -1)
  {
LABEL_12:
    LOBYTE(v36[0]) = 0;
    unsigned int v37 = -1;
    if (v6 == -1
      || ((uint64_t v8 = v6,
           ((void (*)(unsigned int **, void *, void *))off_1ECABEE88[v6])(&v41, v36, v47),
           unsigned int v37 = v6,
           v6 != 8)
       || !v36[0]
        ? (unsigned int v7 = 0)
        : (unsigned int v7 = *(_DWORD *)v36[0]),
          ((void (*)(unsigned int **, void *))off_1ECABEC60[v8])(&v41, v36),
          !v7))
    {
LABEL_77:
      uint64_t result = WGSL::constantBitwiseShiftRight(WGSL::Type const*,WTF::FixedVector<WGSL::ConstantValue> const&)::$_0::operator()<WGSL::ConstantValue,WGSL::ConstantValue>(a2, (uint64_t)(v3 + 2), v3[8], v3[12]);
      uint64_t v35 = v48;
      if (v48 == -1) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    goto LABEL_18;
  }
  ((void (*)(unsigned int **, void *, void *))off_1ECABEE88[v5])(&v41, v36, v45);
  unsigned int v37 = v5;
  if (v5 != 8)
  {
    ((void (*)(unsigned int **, void *))off_1ECABEC60[v5])(&v41, v36);
    LODWORD(v6) = v48;
    goto LABEL_12;
  }
  if (v36[0]) {
    unsigned int v7 = *(_DWORD *)v36[0];
  }
  else {
    unsigned int v7 = 0;
  }
  ((void (*)(unsigned int **, void *))off_1ECABECA0[0])(&v41, v36);
  if (!v7) {
    goto LABEL_77;
  }
LABEL_18:
  uint64_t v9 = 24 * v7;
  unsigned int v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
  *unsigned int v10 = v7;
  uint64_t v11 = v10 + 2;
  uint64_t v12 = 24;
  bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
  unint64_t v14 = 0;
  LODWORD(v36[0]) = 0;
  unsigned int v37 = 0;
  v38[0] = 0;
  unsigned int v39 = 0;
  do
  {
    if (v46 == 8)
    {
      if (v14 >= *(unsigned int *)v45[0]) {
        goto LABEL_82;
      }
      uint64_t v13 = v45[0] + v12 - 16;
      uint64_t v15 = *(unsigned int *)(v45[0] + v12);
      uint64_t v16 = v37;
      if (v37 == -1)
      {
        if (v15 == -1) {
          goto LABEL_31;
        }
      }
      else if (v15 == -1)
      {
        goto LABEL_26;
      }
      uint64_t v41 = (unsigned int *)v36;
      ((void (*)(unsigned int **, void *, uint64_t))off_1ECABEEE0[v15])(&v41, v36, v13);
    }
    else
    {
      uint64_t v16 = v37;
      if (v37 == -1)
      {
        if (v46 == -1) {
          goto LABEL_31;
        }
      }
      else if (v46 == -1)
      {
LABEL_26:
        ((void (*)(unsigned int **, void *, uint64_t))off_1ECABEC60[v16])(&v41, v36, v13);
        unsigned int v37 = -1;
        goto LABEL_31;
      }
      uint64_t v41 = (unsigned int *)v36;
      ((void (*)(unsigned int **, void *, void *))off_1ECABEEE0[v46])(&v41, v36, v45);
    }
LABEL_31:
    if (v48 == 8)
    {
      if (v14 >= *(unsigned int *)v47[0])
      {
LABEL_82:
        __break(0xC471u);
        JUMPOUT(0x18267D49CLL);
      }
      uint64_t v13 = v47[0] + v12 - 16;
      uint64_t v17 = *(unsigned int *)(v47[0] + v12);
      uint64_t v18 = v39;
      if (v39 == -1)
      {
        if (v17 == -1) {
          goto LABEL_43;
        }
      }
      else if (v17 == -1)
      {
        goto LABEL_38;
      }
      uint64_t v41 = v38;
      ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEEE0[v17])(&v41, v38, v13);
    }
    else
    {
      uint64_t v18 = v39;
      if (v39 == -1)
      {
        if (v48 == -1) {
          goto LABEL_43;
        }
      }
      else if (v48 == -1)
      {
LABEL_38:
        ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEC60[v18])(&v41, v38, v13);
        unsigned int v39 = -1;
        goto LABEL_43;
      }
      uint64_t v41 = v38;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEEE0[v48])(&v41, v38, v47);
    }
LABEL_43:
    WGSL::constantBitwiseShiftRight(WGSL::Type const*,WTF::FixedVector<WGSL::ConstantValue> const&)::$_0::operator()<WGSL::ConstantValue,WGSL::ConstantValue>((uint64_t)&v41, (uint64_t)v36, v38[0], v39);
    int v20 = v44;
    if (v44)
    {
      if (v44 != 1) {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      uint64_t v21 = v42[0];
      if (v42[0]) {
        *(_DWORD *)v42[0] += 2;
      }
      *(void *)(a2 + 8) = v21;
      *(_DWORD *)(a2 + 32) = 1;
    }
    else
    {
      if (v14 >= *v10)
      {
        __break(0xC471u);
        JUMPOUT(0x18267D4BCLL);
      }
      uint64_t v22 = v10[(unint64_t)v12 / 4];
      if (v22 == -1)
      {
        if (v43 == -1) {
          goto LABEL_54;
        }
      }
      else if (v43 == -1)
      {
        ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v22])(&v40, v11);
        v10[(unint64_t)v12 / 4] = -1;
        goto LABEL_54;
      }
      unsigned int v40 = v11;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEF38[v43])(&v40, v11, v42);
    }
LABEL_54:
    if (v44 != -1) {
      ((void (*)(unsigned int **, void *))off_1ECABED68[v44])(&v40, v42);
    }
    if (v20) {
      goto LABEL_64;
    }
    ++v14;
    v11 += 6;
    v12 += 24;
  }
  while (v7 != v14);
  uint64_t v23 = *v10;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v25 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    char v26 = v24 + 6;
    uint64_t v27 = 24 * v23;
    uint64_t v28 = v10 + 6;
    do
    {
      *((unsigned char *)v26 - 16) = 0;
      uint64_t v19 = v26 - 4;
      *char v26 = -1;
      uint64_t v29 = *v28;
      if (v29 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v29])(&v41, v19, v28 - 4);
        *char v26 = v29;
      }
      v26 += 6;
      v28 += 6;
      v27 -= 24;
    }
    while (v27);
  }
  *(void *)(a2 + 8) = v25;
  *(_DWORD *)(a2 + 24) = 8;
  *(_DWORD *)(a2 + 32) = 0;
LABEL_64:
  if (v39 != -1) {
    ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v39])(&v41, v38);
  }
  unsigned int v39 = -1;
  if (v37 != -1) {
    ((void (*)(unsigned int **, void *))off_1ECABEC60[v37])(&v41, v36);
  }
  uint64_t v30 = *v10;
  if (v30)
  {
    uint64_t v31 = 24 * v30;
    uint64_t v32 = v10 + 6;
    do
    {
      uint64_t v19 = v32 - 4;
      uint64_t v33 = *v32;
      if (v33 != -1) {
        ((void (*)(void *, _DWORD *))off_1ECABEC60[v33])(v36, v19);
      }
      _DWORD *v32 = -1;
      v32 += 6;
      v31 -= 24;
    }
    while (v31);
  }
  uint64_t result = WTF::fastFree((WTF *)v10, v19);
  uint64_t v35 = v48;
  if (v48 != -1) {
LABEL_78:
  }
    uint64_t result = ((uint64_t (*)(void *, void *))off_1ECABEC60[v35])(v36, v47);
LABEL_79:
  unsigned int v48 = -1;
  if (v46 != -1) {
    return ((uint64_t (*)(void *, void *))off_1ECABEC60[v46])(v36, v45);
  }
  return result;
}

uint64_t WGSL::constantBool@<X0>(const WGSL::Type *a1@<X0>, _DWORD **a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = *a2;
  if (*a2 && *v4)
  {
    LOBYTE(v17[0]) = 0;
    int v18 = -1;
    uint64_t v5 = v4[6];
    if (v5 != -1)
    {
      ((void (*)(unsigned char *, double *, _DWORD *))off_1ECABEE88[v5])(v15, v17, v4 + 2);
      int v18 = v5;
      switch((int)v5)
      {
        case 0:
          _Q0.n128_u32[0] = LODWORD(v17[0]);
          _ZF = *(float *)v17 == 0.0;
          goto LABEL_13;
        case 1:
          __asm { FCMP            H0, #0 }
          goto LABEL_13;
        case 2:
          _Q0.n128_f64[0] = v17[0];
          _ZF = v17[0] == 0.0;
          goto LABEL_13;
        case 3:
        case 4:
          _ZF = LODWORD(v17[0]) == 0;
          goto LABEL_13;
        case 5:
          _ZF = *(void *)&v17[0] == 0;
LABEL_13:
          char v13 = !_ZF;
          goto LABEL_16;
        case 6:
          char v13 = LOBYTE(v17[0]);
LABEL_16:
          v15[0] = v13;
          int v9 = 6;
          unsigned int v16 = 6;
          ((void (*)(char *, double *, __n128))off_1ECABEC60[v5])(&v19, v17, _Q0);
          *(unsigned char *)(a3 + 8) = 0;
          *(_DWORD *)(a3 + 24) = -1;
          goto LABEL_17;
        default:
          break;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x18267D6C8);
  }
  uint64_t result = WGSL::zeroValue((WGSL *)v15, a1);
  int v9 = v16;
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  if (v9 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
LABEL_17:
    uint64_t result = ((uint64_t (*)(double *))off_1ECABECB8[v9])(v17);
    *(_DWORD *)(a3 + 24) = v9;
    uint64_t v14 = v16;
    *(_DWORD *)(a3 + 32) = 0;
    if (v14 != -1) {
      return ((uint64_t (*)(double *, unsigned char *))off_1ECABEC60[v14])(v17, v15);
    }
  }
  return result;
}

char *WGSL::constantI32@<X0>(char *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  if (*a2 && *(_DWORD *)v4)
  {
    uint64_t v5 = *(unsigned int *)(v4 + 24);
    if (v5 != 5)
    {
      LOBYTE(v19[0]) = 0;
      int v20 = -1;
      if (v5 != -1)
      {
        ((void (*)(char *, double *, uint64_t))off_1ECABEE88[v5])(&v21, v19, v4 + 8);
        int v20 = v5;
        switch((int)v5)
        {
          case 0:
            int v8 = (int)*(float *)v19;
            goto LABEL_27;
          case 1:
            int v8 = (int)*(short float *)v19;
            goto LABEL_27;
          case 2:
            int v8 = (int)v19[0];
            goto LABEL_27;
          case 3:
          case 4:
            int v8 = LODWORD(v19[0]);
            goto LABEL_27;
          case 6:
            int v8 = LOBYTE(v19[0]);
LABEL_27:
            int v7 = 3;
            v17[0] = v8;
            unsigned int v18 = 3;
            ((void (*)(char *, double *))off_1ECABEC60[v5])(&v21, v19);
            *(unsigned char *)(a3 + 8) = 0;
            *(_DWORD *)(a3 + 24) = -1;
            goto LABEL_28;
          default:
            break;
        }
      }
      __break(0xC471u);
      JUMPOUT(0x18267D96CLL);
    }
    unint64_t v6 = *(void *)(v4 + 8);
    if (v6 == (int)v6)
    {
      *(_DWORD *)(a3 + 8) = v6;
      *(_DWORD *)(a3 + 24) = 3;
LABEL_7:
      *(_DWORD *)(a3 + 32) = 0;
      return result;
    }
    if ((v6 & 0x8000000000000000) != 0)
    {
      unint64_t v12 = -(uint64_t)v6;
      int v9 = 1;
      do
      {
        ++v9;
        BOOL v13 = v12 >= 0xA;
        v12 /= 0xAuLL;
      }
      while (v13);
    }
    else
    {
      int v9 = 0;
      unint64_t v10 = v6;
      do
      {
        ++v9;
        BOOL v11 = v10 > 9;
        v10 /= 0xAuLL;
      }
      while (v11);
    }
    if (v9 < 0
      || (v14 = __OFADD__(v9, 31), int v15 = v9 + 31, v14)
      || __OFADD__(v15, 6)
      || (uint64_t result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((char *)v19, v15 + 6, "value ", 6u, v6, " cannot be represented as 'i32'", 0x1Fu), !*(void *)&v19[0]))
    {
      __break(0xC471u);
      JUMPOUT(0x18267D974);
    }
    *(double *)(a3 + 8) = v19[0];
    *(_DWORD *)(a3 + 32) = 1;
  }
  else
  {
    uint64_t result = (char *)WGSL::zeroValue((WGSL *)v17, (const WGSL::Type *)result);
    int v7 = v18;
    *(unsigned char *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 24) = -1;
    if (v7 == -1) {
      goto LABEL_7;
    }
LABEL_28:
    uint64_t result = (char *)((uint64_t (*)(double *))off_1ECABECB8[v7])(v19);
    *(_DWORD *)(a3 + 24) = v7;
    uint64_t v16 = v18;
    *(_DWORD *)(a3 + 32) = 0;
    if (v16 != -1) {
      return (char *)((uint64_t (*)(double *, _DWORD *))off_1ECABEC60[v16])(v19, v17);
    }
  }
  return result;
}

char *WGSL::constantU32@<X0>(char *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  if (*a2 && *(_DWORD *)v4)
  {
    uint64_t v5 = *(unsigned int *)(v4 + 24);
    if (v5 != 5)
    {
      LOBYTE(v19[0]) = 0;
      int v20 = -1;
      if (v5 != -1)
      {
        ((void (*)(char *, double *, uint64_t))off_1ECABEE88[v5])(&v21, v19, v4 + 8);
        int v20 = v5;
        switch((int)v5)
        {
          case 0:
            unsigned int v8 = *(float *)v19;
            goto LABEL_27;
          case 1:
            unsigned int v8 = *(short float *)v19;
            goto LABEL_27;
          case 2:
            unsigned int v8 = v19[0];
            goto LABEL_27;
          case 3:
          case 4:
            unsigned int v8 = LODWORD(v19[0]);
            goto LABEL_27;
          case 6:
            unsigned int v8 = LOBYTE(v19[0]);
LABEL_27:
            int v7 = 4;
            v17[0] = v8;
            unsigned int v18 = 4;
            ((void (*)(char *, double *))off_1ECABEC60[v5])(&v21, v19);
            *(unsigned char *)(a3 + 8) = 0;
            *(_DWORD *)(a3 + 24) = -1;
            goto LABEL_28;
          default:
            break;
        }
      }
      __break(0xC471u);
      JUMPOUT(0x18267DC18);
    }
    unint64_t v6 = *(void *)(v4 + 8);
    if (!HIDWORD(v6))
    {
      *(_DWORD *)(a3 + 8) = v6;
      *(_DWORD *)(a3 + 24) = 4;
LABEL_7:
      *(_DWORD *)(a3 + 32) = 0;
      return result;
    }
    if ((v6 & 0x8000000000000000) != 0)
    {
      unint64_t v12 = -(uint64_t)v6;
      int v9 = 1;
      do
      {
        ++v9;
        BOOL v13 = v12 >= 0xA;
        v12 /= 0xAuLL;
      }
      while (v13);
    }
    else
    {
      int v9 = 0;
      unint64_t v10 = v6;
      do
      {
        ++v9;
        BOOL v11 = v10 > 9;
        v10 /= 0xAuLL;
      }
      while (v11);
    }
    if (v9 < 0
      || (v14 = __OFADD__(v9, 31), int v15 = v9 + 31, v14)
      || __OFADD__(v15, 6)
      || (uint64_t result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<long long,void>,WTF::StringTypeAdapter<WTF::ASCIILiteral,void>>((char *)v19, v15 + 6, "value ", 6u, v6, " cannot be represented as 'u32'", 0x1Fu), !*(void *)&v19[0]))
    {
      __break(0xC471u);
      JUMPOUT(0x18267DC20);
    }
    *(double *)(a3 + 8) = v19[0];
    *(_DWORD *)(a3 + 32) = 1;
  }
  else
  {
    uint64_t result = (char *)WGSL::zeroValue((WGSL *)v17, (const WGSL::Type *)result);
    int v7 = v18;
    *(unsigned char *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 24) = -1;
    if (v7 == -1) {
      goto LABEL_7;
    }
LABEL_28:
    uint64_t result = (char *)((uint64_t (*)(double *))off_1ECABECB8[v7])(v19);
    *(_DWORD *)(a3 + 24) = v7;
    uint64_t v16 = v18;
    *(_DWORD *)(a3 + 32) = 0;
    if (v16 != -1) {
      return (char *)((uint64_t (*)(double *, _DWORD *))off_1ECABEC60[v16])(v19, v17);
    }
  }
  return result;
}

uint64_t WGSL::constantF32@<X0>(const WGSL::Type *a1@<X0>, _DWORD **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  if (*a2 && *v4)
  {
    LOBYTE(v17[0]) = 0;
    int v18 = -1;
    uint64_t v5 = v4[6];
    if (v5 != -1)
    {
      ((void (*)(_DWORD *, double *, _DWORD *))off_1ECABEE88[v5])(v15, v17, v4 + 2);
      int v18 = v5;
      switch((int)v5)
      {
        case 0:
          _S0 = *(float *)v17;
          goto LABEL_16;
        case 1:
          _H0 = LOWORD(v17[0]);
          __asm { FCVT            S0, H0 }
          goto LABEL_16;
        case 2:
          _S0 = v17[0];
          goto LABEL_16;
        case 3:
          _S0 = (float)SLODWORD(v17[0]);
          goto LABEL_16;
        case 4:
          _S0 = (float)LODWORD(v17[0]);
          goto LABEL_16;
        case 5:
          _S0 = (float)*(uint64_t *)&v17[0];
          goto LABEL_16;
        case 6:
          _S0 = 0.0;
          if (LOBYTE(v17[0])) {
            _S0 = 1.0;
          }
LABEL_16:
          *(float *)int v15 = _S0;
          unsigned int v16 = 0;
          ((void (*)(char *, double *))off_1ECABEC60[v5])(&v19, v17);
          unsigned int v8 = 0;
          *(unsigned char *)(a3 + 8) = 0;
          *(_DWORD *)(a3 + 24) = -1;
          goto LABEL_17;
        default:
          break;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x18267DE08);
  }
  uint64_t result = WGSL::zeroValue((WGSL *)v15, a1);
  unsigned int v8 = v16;
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  if (v8 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
LABEL_17:
    uint64_t result = ((uint64_t (*)(double *))off_1ECABECB8[v8])(v17);
    *(_DWORD *)(a3 + 24) = v8;
    uint64_t v14 = v16;
    *(_DWORD *)(a3 + 32) = 0;
    if (v14 != -1) {
      return ((uint64_t (*)(double *, _DWORD *))off_1ECABEC60[v14])(v17, v15);
    }
  }
  return result;
}

uint64_t WGSL::constantF16@<X0>(const WGSL::Type *a1@<X0>, _DWORD **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  if (*a2 && *v4)
  {
    LOBYTE(v18[0]) = 0;
    int v19 = -1;
    uint64_t v5 = v4[6];
    if (v5 != -1)
    {
      ((void (*)(_WORD *, unsigned int *, _DWORD *))off_1ECABEE88[v5])(v16, v18, v4 + 2);
      int v19 = v5;
      switch((int)v5)
      {
        case 0:
          _S0 = *(float *)v18;
          goto LABEL_14;
        case 1:
          _H0 = v18[0];
          goto LABEL_17;
        case 2:
          _D0 = *(void *)v18;
          __asm { FCVT            H0, D0 }
          goto LABEL_17;
        case 3:
          _S0 = (float)(int)v18[0];
          goto LABEL_14;
        case 4:
          _S0 = (float)v18[0];
          goto LABEL_14;
        case 5:
          _S0 = (float)*(uint64_t *)v18;
LABEL_14:
          __asm { FCVT            H0, S0 }
          goto LABEL_17;
        case 6:
          _H0 = 0;
          if (LOBYTE(v18[0])) {
            _H0 = COERCE_UNSIGNED_INT(1.0);
          }
LABEL_17:
          v16[0] = _H0;
          int v8 = 1;
          unsigned int v17 = 1;
          ((void (*)(char *, unsigned int *))off_1ECABEC60[v5])(&v20, v18);
          *(unsigned char *)(a3 + 8) = 0;
          *(_DWORD *)(a3 + 24) = -1;
          goto LABEL_18;
        default:
          break;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x18267DFFCLL);
  }
  uint64_t result = WGSL::zeroValue((WGSL *)v16, a1);
  int v8 = v17;
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  if (v8 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
LABEL_18:
    uint64_t result = ((uint64_t (*)(unsigned int *))off_1ECABECB8[v8])(v18);
    *(_DWORD *)(a3 + 24) = v8;
    uint64_t v15 = v17;
    *(_DWORD *)(a3 + 32) = 0;
    if (v15 != -1) {
      return ((uint64_t (*)(unsigned int *, _WORD *))off_1ECABEC60[v15])(v18, v16);
    }
  }
  return result;
}

void WGSL::constantVec2(const WGSL::Type *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantVector((WGSL *)v6, a1, a2, 2u);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, unsigned char *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantVec3(const WGSL::Type *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantVector((WGSL *)v6, a1, a2, 3u);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, unsigned char *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantVec4(const WGSL::Type *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantVector((WGSL *)v6, a1, a2, 4u);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, unsigned char *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat2x2(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 2u, 2);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat2x3(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 2u, 3);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat2x4(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 2u, 4);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat3x2(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 3u, 2);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat3x3(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 3u, 3);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat3x4(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 3u, 4);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat4x2(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 4u, 2);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat4x3(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 4u, 3);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantMat4x4(uint64_t a1@<X0>, unsigned int **a2@<X1>, uint64_t a3@<X8>)
{
  WGSL::constantMatrix(v6, a1, a2, 4u, 4);
  *(unsigned char *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 24) = -1;
  unsigned int v4 = v7;
  if (v7 == -1)
  {
    *(_DWORD *)(a3 + 32) = 0;
  }
  else
  {
    ((void (*)(char *))off_1ECABECB8[v7])(&v8);
    *(_DWORD *)(a3 + 24) = v4;
    uint64_t v5 = v7;
    *(_DWORD *)(a3 + 32) = 0;
    if (v5 != -1) {
      ((void (*)(char *, void *))off_1ECABEC60[v5])(&v8, v6);
    }
  }
}

void WGSL::constantAll(void *a1@<X1>, uint64_t a2@<X8>)
{
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267E9DCLL);
  }
  int v4 = v3[6];
  if (v4 == 8)
  {
    unint64_t v6 = (unsigned int *)*((void *)v3 + 1);
    if (v6) {
      unsigned int v7 = v6 + 2;
    }
    else {
      unsigned int v7 = 0;
    }
    if (v6)
    {
      uint64_t v8 = (uint64_t)&v6[6 * *v6 + 2];
      if (v7 != (unsigned int *)v8)
      {
LABEL_12:
        do
        {
          v11[0] = 0;
          int v12 = -1;
          uint64_t v9 = v7[4];
          if (v9 == -1) {
            goto LABEL_20;
          }
          ((void (*)(char *, unsigned char *, unsigned int *))off_1ECABEE88[v9])(&v13, v11, v7);
          int v12 = v9;
          if (v9 != 6) {
            goto LABEL_20;
          }
          if (!v11[0])
          {
            *(unsigned char *)(a2 + 8) = 0;
            *(_DWORD *)(a2 + 24) = 6;
            *(_DWORD *)(a2 + 32) = 0;
            ((void (*)(char *, unsigned char *))off_1ECABEC60[v9])(&v13, v11);
            return;
          }
          v7 += 6;
        }
        while (v7 != (unsigned int *)v8);
      }
    }
    else
    {
      uint64_t v8 = 0;
      if (v7) {
        goto LABEL_12;
      }
    }
    char v5 = 1;
    goto LABEL_17;
  }
  if (v4 == 6)
  {
    char v5 = *((unsigned char *)v3 + 8);
LABEL_17:
    *(unsigned char *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 24) = 6;
    *(_DWORD *)(a2 + 32) = 0;
    return;
  }
LABEL_20:
  uint64_t v10 = std::__throw_bad_variant_access[abi:sn180100]();
  WGSL::constantAny(v10);
}

void WGSL::constantAny(void *a1@<X1>, uint64_t a2@<X8>)
{
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267EB44);
  }
  int v4 = v3[6];
  if (v4 == 8)
  {
    char v5 = (unsigned int *)*((void *)v3 + 1);
    if (v5) {
      unint64_t v6 = v5 + 2;
    }
    else {
      unint64_t v6 = 0;
    }
    if (v5)
    {
      uint64_t v7 = (uint64_t)&v5[6 * *v5 + 2];
      if (v6 != (unsigned int *)v7)
      {
LABEL_12:
        do
        {
          v10[0] = 0;
          int v11 = -1;
          uint64_t v8 = v6[4];
          if (v8 == -1) {
            goto LABEL_20;
          }
          ((void (*)(char *, unsigned char *, unsigned int *))off_1ECABEE88[v8])(&v12, v10, v6);
          int v11 = v8;
          if (v8 != 6) {
            goto LABEL_20;
          }
          if (v10[0])
          {
            *(unsigned char *)(a2 + 8) = 1;
            *(_DWORD *)(a2 + 24) = 6;
            *(_DWORD *)(a2 + 32) = 0;
            ((void (*)(char *, unsigned char *))off_1ECABEC60[v8])(&v12, v10);
            return;
          }
          v6 += 6;
        }
        while (v6 != (unsigned int *)v7);
      }
    }
    else
    {
      uint64_t v7 = 0;
      if (v6) {
        goto LABEL_12;
      }
    }
    *(unsigned char *)(a2 + 8) = 0;
    goto LABEL_17;
  }
  if (v4 == 6)
  {
    *(unsigned char *)(a2 + 8) = *((unsigned char *)v3 + 8);
LABEL_17:
    *(_DWORD *)(a2 + 24) = 6;
    *(_DWORD *)(a2 + 32) = 0;
    return;
  }
LABEL_20:
  uint64_t v9 = std::__throw_bad_variant_access[abi:sn180100]();
  WGSL::constantSelect(v9);
}

void WGSL::constantSelect(unsigned int **a1@<X1>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  unsigned int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x18267EEF4);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267EF14);
  }
  if (v4 <= 2)
  {
    __break(0xC471u);
    JUMPOUT(0x18267EF34);
  }
  char v5 = (unsigned int **)(v3 + 2);
  unint64_t v6 = (unsigned int **)(v3 + 8);
  unsigned int v7 = v3[18];
  if (v7 == 6)
  {
    if (*((unsigned char *)v3 + 56)) {
      uint64_t v8 = v3 + 8;
    }
    else {
      uint64_t v8 = v3 + 2;
    }
    *(unsigned char *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 24) = -1;
    uint64_t v9 = v8[4];
    if (v9 != -1)
    {
      ((void (*)(char *))off_1ECABEE88[v9])(&v34);
      *(_DWORD *)(a2 + 24) = v9;
    }
    goto LABEL_35;
  }
  if (v3[6] != 8 || v3[12] != 8 || v7 != 8)
  {
LABEL_49:
    uint64_t v33 = std::__throw_bad_variant_access[abi:sn180100]();
    WGSL::constantAcos(v33);
    return;
  }
  uint64_t v10 = (unsigned int *)*((void *)v3 + 7);
  if (v10)
  {
    uint64_t v11 = *v10;
    if (v11)
    {
      uint64_t v12 = 24 * v11;
      char v13 = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v11 + 8));
      unsigned int *v13 = v11;
      bzero(v13 + 2, 24 * ((24 * v11 - 24) / 0x18uLL) + 24);
      unint64_t v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        while (1)
        {
          unsigned int v16 = (unsigned int *)*((void *)v3 + 7);
          if (v15 >= *v16)
          {
            __break(0xC471u);
            JUMPOUT(0x18267EE74);
          }
          unsigned int v17 = &v16[v14 / 4];
          if (v17[6] != 6) {
            goto LABEL_49;
          }
          if (*((unsigned char *)v17 + 8))
          {
            uint64_t v18 = (uint64_t)*v6;
            if (v15 >= **v6)
            {
              __break(0xC471u);
              JUMPOUT(0x18267EEB4);
            }
          }
          else
          {
            uint64_t v18 = (uint64_t)*v5;
            if (v15 >= **v5)
            {
              __break(0xC471u);
              JUMPOUT(0x18267EED4);
            }
          }
          if (v15 >= *v13)
          {
            __break(0xC471u);
            JUMPOUT(0x18267EE94);
          }
          uint64_t v19 = v13[v14 / 4 + 6];
          uint64_t v20 = *(unsigned int *)(v18 + v14 + 24);
          if (v19 != -1) {
            break;
          }
          if (v20 != -1) {
            goto LABEL_17;
          }
LABEL_18:
          ++v15;
          v14 += 24;
          if (v12 == v14) {
            goto LABEL_29;
          }
        }
        if (v20 != -1)
        {
LABEL_17:
          uint64_t v37 = (uint64_t)&v13[v14 / 4 + 2];
          ((void (*)(uint64_t *))off_1ECABEEE0[v20])(&v37);
          goto LABEL_18;
        }
        ((void (*)(char *, unsigned int *))off_1ECABEC60[v19])(&v38, &v13[v14 / 4 + 2]);
        v13[v14 / 4 + 6] = -1;
        ++v15;
        v14 += 24;
        if (v12 == v14)
        {
LABEL_29:
          uint64_t v21 = *v13;
          uint64_t v22 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v21 + 8));
          uint64_t v24 = v22;
          *uint64_t v22 = v21;
          if (v21)
          {
            uint64_t v25 = v22 + 6;
            uint64_t v26 = 24 * v21;
            uint64_t v27 = v13 + 6;
            do
            {
              *((unsigned char *)v25 - 16) = 0;
              uint64_t v23 = v25 - 4;
              _DWORD *v25 = -1;
              uint64_t v28 = *v27;
              if (v28 != -1)
              {
                ((void (*)(char *, _DWORD *, unsigned int *))off_1ECABEE88[v28])(&v35, v23, v27 - 4);
                _DWORD *v25 = v28;
              }
              v25 += 6;
              v27 += 6;
              v26 -= 24;
            }
            while (v26);
          }
          *(void *)(a2 + 8) = v24;
          *(_DWORD *)(a2 + 24) = 8;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v29 = *v13;
          if (v29)
          {
            uint64_t v30 = 24 * v29;
            uint64_t v31 = v13 + 6;
            do
            {
              uint64_t v23 = v31 - 4;
              uint64_t v32 = *v31;
              if (v32 != -1) {
                ((void (*)(char *, _DWORD *))off_1ECABEC60[v32])(&v36, v23);
              }
              *uint64_t v31 = -1;
              v31 += 6;
              v30 -= 24;
            }
            while (v30);
          }
          WTF::fastFree((WTF *)v13, v23);
          return;
        }
      }
    }
  }
  *(void *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 24) = 8;
LABEL_35:
  *(_DWORD *)(a2 + 32) = 0;
}

__int16 WGSL::constantAcos@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267F414);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = acos(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = acosf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = acosf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x18267F474);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x18267F3F4);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x18267F454);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = acosf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = acos(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = acosf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x18267F3D4);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantAsin@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267F954);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = asin(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = asinf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = asinf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x18267F9B4);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x18267F934);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x18267F994);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = asinf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = asin(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = asinf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x18267F914);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantAtan@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x18267FE94);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = atan(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = atanf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = atanf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x18267FEF4);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x18267FE74);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x18267FED4);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = atanf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = atan(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = atanf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x18267FE54);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantCos@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826803D4);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = cos(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = cosf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = cosf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182680434);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1826803B4);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182680414);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = cosf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = cos(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = cosf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182680394);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantSin@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182680914);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = sin(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = sinf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = sinf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182680974);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1826808F4);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182680954);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = sinf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = sin(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = sinf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1826808D4);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantTan@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182680E54);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = tan(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = tanf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = tanf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182680EB4);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182680E34);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182680E94);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = tanf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = tan(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = tanf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182680E14);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantAcosh@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182681394);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = acosh(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = acoshf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = acoshf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x1826813F4);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182681374);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x1826813D4);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = acoshf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = acosh(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = acoshf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182681354);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantAsinh@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826818D4);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = asinh(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = asinhf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = asinhf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182681934);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1826818B4);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182681914);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = asinhf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = asinh(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = asinhf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182681894);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantAtanh@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182681E14);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = atanh(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = atanhf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = atanhf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182681E74);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182681DF4);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182681E54);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = atanhf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = atanh(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = atanhf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182681DD4);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantCosh@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182682354);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = cosh(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = coshf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = coshf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x1826823B4);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182682334);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182682394);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = coshf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = cosh(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = coshf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182682314);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantSinh@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182682894);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = sinh(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = sinhf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = sinhf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x1826828F4);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182682874);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x1826828D4);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = sinhf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = sinh(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = sinhf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182682854);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

__int16 WGSL::constantTanh@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182682DD4);
  }
  LOBYTE(v50[0]) = 0;
  unsigned int v51 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (long double *)(v3 + 2);
  unint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(long double **, void *, _DWORD *))v6)(&v45, v50, v3 + 2);
  unsigned int v51 = v4;
  LOBYTE(v45) = 0;
  int v47 = -1;
  ((void (*)(long double *, long double **, void *))v6)(__x, &v45, v50);
  unsigned int v7 = 0;
  int v47 = v4;
  if (v4 == 8)
  {
    if (v45) {
      unsigned int v7 = *(_DWORD *)v45;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(long double *, long double **))off_1ECABEC60[v4])(__x, &v45);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        _D0 = tanh(*v5);
        *(long double *)(a2 + 8) = _D0;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            S0, H0; float }
        *(float *)&_D0 = tanhf(_S0);
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
      case 0:
        *(float *)&_D0 = tanhf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(_D0);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v51;
        if (v51 != -1) {
          goto LABEL_44;
        }
        return LOWORD(_D0);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182682E34);
  }
  uint64_t v41 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v43 = 0;
  do
  {
    if (v51 == 8)
    {
      if (v12 >= *(unsigned int *)v50[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182682DB4);
      }
      uint64_t v11 = v50[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v50[0] + v10 * 4);
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v13])(&v45, __x, v11);
    }
    else
    {
      uint64_t v14 = v43;
      if (v43 == -1)
      {
        if (v51 == -1) {
          goto LABEL_59;
        }
      }
      else if (v51 == -1)
      {
LABEL_58:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v14])(&v45, __x, v11);
        unsigned int v43 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182682E14);
      }
      int v45 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v51])(&v45, __x, v50);
    }
LABEL_22:
    uint64_t v15 = v43;
    if (v43)
    {
      if (v43 == 1)
      {
        _H0 = LOWORD(__x[0]);
        __asm { FCVT            S0, H0; float }
        _S0 = tanhf(_S0);
        __asm { FCVT            H0, S0 }
        LOWORD(v46) = LOWORD(_S0);
      }
      else
      {
        if (v43 != 2) {
          goto LABEL_59;
        }
        long double v46 = tanh(__x[0]);
      }
    }
    else
    {
      LODWORD(v46) = tanhf(*(float *)__x);
    }
    int v48 = v15;
    int v49 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182682D94);
    }
    uint64_t v44 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v15])(&v44);
    if (v49 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v49])(&v44, &v46);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v23 = *v9;
  uint64_t v24 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v23 + 8));
  uint64_t v26 = v24;
  *uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v27 = v24 + 6;
    uint64_t v28 = 24 * v23;
    uint64_t v29 = v9 + 6;
    do
    {
      *((unsigned char *)v27 - 16) = 0;
      uint64_t v25 = v27 - 4;
      *uint64_t v27 = -1;
      uint64_t v30 = *v29;
      if (v30 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v30])(&v45, v25, v29 - 4);
        *uint64_t v27 = v30;
      }
      v27 += 6;
      v29 += 6;
      v28 -= 24;
    }
    while (v28);
  }
  *(void *)(v41 + 8) = v26;
  *(_DWORD *)(v41 + 24) = 8;
  *(_DWORD *)(v41 + 32) = 0;
  if (v43 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v43])(&v45, __x);
  }
  uint64_t v31 = *v9;
  if (v31)
  {
    uint64_t v32 = 24 * v31;
    uint64_t v33 = v9 + 6;
    do
    {
      uint64_t v25 = v33 - 4;
      uint64_t v34 = *v33;
      if (v34 != -1) {
        ((void (*)(long double **, _DWORD *))off_1ECABEC60[v34])(&v45, v25);
      }
      *uint64_t v33 = -1;
      v33 += 6;
      v32 -= 24;
    }
    while (v32);
  }
  WTF::fastFree((WTF *)v9, v25);
  uint64_t v36 = v51;
  if (v51 != -1) {
LABEL_44:
  }
    ((void (*)(long double **, void *))off_1ECABEC60[v36])(&v45, v50);
  return LOWORD(_D0);
}

uint64_t WGSL::constantAbs@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182683424);
  }
  LOBYTE(v42[0]) = 0;
  unsigned int v43 = -1;
  uint64_t v4 = v3[6];
  if (v4 != -1)
  {
    char v5 = (float *)(v3 + 2);
    unint64_t v6 = off_1ECABEE88[v4];
    ((void (*)(double **, void *, _DWORD *))v6)(&v37, v42, v3 + 2);
    unsigned int v43 = v4;
    LOBYTE(v37) = 0;
    int v39 = -1;
    ((void (*)(double *, double **, void *))v6)(v34, &v37, v42);
    unsigned int v7 = 0;
    int v39 = v4;
    if (v4 == 8)
    {
      if (v37) {
        unsigned int v7 = *(_DWORD *)v37;
      }
      else {
        unsigned int v7 = 0;
      }
    }
    uint64_t result = ((uint64_t (*)(double *, double **))off_1ECABEC60[v4])(v34, &v37);
    if (v7)
    {
      uint64_t v33 = a2;
      uint64_t v9 = 24 * v7;
      uint64_t v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
      *uint64_t v10 = v7;
      uint64_t v11 = 6;
      bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
      unint64_t v13 = 0;
      LODWORD(v34[0]) = 0;
      unsigned int v35 = 0;
      while (2)
      {
        if (v43 == 8)
        {
          if (v13 >= *(unsigned int *)v42[0])
          {
            __break(0xC471u);
            JUMPOUT(0x182683404);
          }
          uint64_t v12 = v42[0] + v11 * 4 - 16;
          uint64_t v14 = *(unsigned int *)(v42[0] + v11 * 4);
          uint64_t v15 = v35;
          if (v35 != -1)
          {
            if (v14 == -1)
            {
LABEL_75:
              ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v15])(&v37, v34, v12);
              unsigned int v35 = -1;
              goto LABEL_76;
            }
            goto LABEL_21;
          }
          if (v14 != -1)
          {
LABEL_21:
            int v37 = v34;
            ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v14])(&v37, v34, v12);
          }
        }
        else
        {
          uint64_t v15 = v35;
          if (v35 == -1)
          {
            if (v43 == -1)
            {
LABEL_76:
              __break(0xC471u);
              JUMPOUT(0x182683464);
            }
          }
          else if (v43 == -1)
          {
            goto LABEL_75;
          }
          int v37 = v34;
          ((void (*)(double **, double *, void *))off_1ECABEEE0[v43])(&v37, v34, v42);
        }
        switch(v35)
        {
          case 0u:
            LODWORD(v38) = fabsf(*(float *)v34);
            unsigned int v40 = v35;
            int v41 = 0;
            if (v13 >= *v10) {
              goto LABEL_72;
            }
            goto LABEL_38;
          case 1u:
            LOWORD(v38) = fabsl(*(short float *)v34);
            unsigned int v40 = v35;
            int v41 = 0;
            if (v13 >= *v10) {
              goto LABEL_72;
            }
            goto LABEL_38;
          case 2u:
            double v38 = fabs(v34[0]);
            unsigned int v40 = v35;
            int v41 = 0;
            if (v13 >= *v10) {
              goto LABEL_72;
            }
            goto LABEL_38;
          case 3u:
            int v16 = LODWORD(v34[0]);
            if (SLODWORD(v34[0]) < 0) {
              int v16 = -LODWORD(v34[0]);
            }
            goto LABEL_33;
          case 4u:
            int v16 = LODWORD(v34[0]);
LABEL_33:
            LODWORD(v38) = v16;
            unsigned int v40 = v35;
            int v41 = 0;
            if (v13 >= *v10) {
              goto LABEL_72;
            }
            goto LABEL_38;
          case 5u:
            double v17 = v34[0];
            if (v34[0] < 0.0) {
              *(void *)&double v17 = -*(void *)&v34[0];
            }
            double v38 = v17;
            unsigned int v40 = v35;
            int v41 = 0;
            if (v13 >= *v10)
            {
LABEL_72:
              __break(0xC471u);
              JUMPOUT(0x1826833E4);
            }
LABEL_38:
            uint64_t v36 = (uint64_t)&v10[v11 - 4];
            ((void (*)(uint64_t *))off_1ECABEF38[v35])(&v36);
            if (v41 != -1) {
              ((void (*)(uint64_t *, double *))off_1ECABED68[v41])(&v36, &v38);
            }
            ++v13;
            v11 += 6;
            if (v7 != v13) {
              continue;
            }
            uint64_t v18 = *v10;
            uint64_t v19 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v18 + 8));
            uint64_t v21 = v19;
            *uint64_t v19 = v18;
            if (v18)
            {
              uint64_t v22 = v19 + 6;
              uint64_t v23 = 24 * v18;
              uint64_t v24 = v10 + 6;
              do
              {
                *((unsigned char *)v22 - 16) = 0;
                uint64_t v20 = v22 - 4;
                *uint64_t v22 = -1;
                uint64_t v25 = *v24;
                if (v25 != -1)
                {
                  ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v25])(&v37, v20, v24 - 4);
                  *uint64_t v22 = v25;
                }
                v22 += 6;
                v24 += 6;
                v23 -= 24;
              }
              while (v23);
            }
            *(void *)(v33 + 8) = v21;
            *(_DWORD *)(v33 + 24) = 8;
            *(_DWORD *)(v33 + 32) = 0;
            if (v35 != -1) {
              ((void (*)(double **, double *))off_1ECABEC60[v35])(&v37, v34);
            }
            uint64_t v26 = *v10;
            if (v26)
            {
              uint64_t v27 = 24 * v26;
              uint64_t v28 = v10 + 6;
              do
              {
                uint64_t v20 = v28 - 4;
                uint64_t v29 = *v28;
                if (v29 != -1) {
                  ((void (*)(double **, _DWORD *))off_1ECABEC60[v29])(&v37, v20);
                }
                _DWORD *v28 = -1;
                v28 += 6;
                v27 -= 24;
              }
              while (v27);
            }
            uint64_t result = WTF::fastFree((WTF *)v10, v20);
            uint64_t v30 = v43;
            if (v43 != -1) {
              return ((uint64_t (*)(double **, void *))off_1ECABEC60[v30])(&v37, v42);
            }
            return result;
          default:
            goto LABEL_76;
        }
      }
    }
    switch(v3[6])
    {
      case 0:
        *(float *)(a2 + 8) = fabsf(*v5);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v30 = v43;
        if (v43 == -1) {
          return result;
        }
        return ((uint64_t (*)(double **, void *))off_1ECABEC60[v30])(&v37, v42);
      case 1:
        *(short float *)(a2 + 8) = fabsl(*(short float *)v5);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v30 = v43;
        if (v43 == -1) {
          return result;
        }
        return ((uint64_t (*)(void, void))off_1ECABEC60[v30])(&v37, v42);
      case 2:
        *(double *)(a2 + 8) = fabs(*(double *)v5);
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v30 = v43;
        if (v43 == -1) {
          return result;
        }
        return ((uint64_t (*)(void, void))off_1ECABEC60[v30])(&v37, v42);
      case 3:
        float v31 = *v5;
        if (*(int *)v5 < 0) {
          LODWORD(v31) = -LODWORD(v31);
        }
        *(float *)(a2 + 8) = v31;
        *(_DWORD *)(a2 + 24) = 3;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v30 = v43;
        if (v43 == -1) {
          return result;
        }
        return ((uint64_t (*)(void, void))off_1ECABEC60[v30])(&v37, v42);
      case 4:
        *(float *)(a2 + 8) = *v5;
        *(_DWORD *)(a2 + 24) = 4;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v30 = v43;
        if (v43 == -1) {
          return result;
        }
        return ((uint64_t (*)(void, void))off_1ECABEC60[v30])(&v37, v42);
      case 5:
        uint64_t v32 = *(void *)v5;
        if (*(uint64_t *)v5 < 0) {
          uint64_t v32 = -v32;
        }
        *(void *)(a2 + 8) = v32;
        *(_DWORD *)(a2 + 24) = 5;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v30 = v43;
        if (v43 == -1) {
          return result;
        }
        return ((uint64_t (*)(void, void))off_1ECABEC60[v30])(&v37, v42);
      default:
        break;
    }
  }
  __break(0xC471u);
  JUMPOUT(0x182683488);
}

void WGSL::constantAtan2(int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  int v3 = *a1;
  int v4 = **a1;
  if (!v4)
  {
    __break(0xC471u);
    JUMPOUT(0x182683C14);
  }
  if (v4 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182683C34);
  }
  char v5 = (long double *)(v3 + 2);
  LOBYTE(v59[0]) = 0;
  int v60 = -1;
  uint64_t v6 = v3[6];
  if (v6 != -1)
  {
    ((void (*)(long double *, void *, int *))off_1ECABEE88[v6])(__y, v59, v3 + 2);
    int v60 = v6;
  }
  unsigned int v7 = (long double *)(v3 + 8);
  LOBYTE(v61[0]) = 0;
  unsigned int v62 = -1;
  uint64_t v8 = v3[12];
  if (v8 != -1)
  {
    ((void (*)(long double *, void *, int *))off_1ECABEE88[v8])(__y, v61, v3 + 8);
    unsigned int v62 = v8;
    LODWORD(v6) = v60;
  }
  LOBYTE(__y[0]) = 0;
  unsigned int v51 = -1;
  if (v6 == -1)
  {
LABEL_12:
    LOBYTE(__y[0]) = 0;
    unsigned int v51 = -1;
    if (v8 == -1
      || ((((void (*)(long double **, long double *, void *))off_1ECABEE88[v8])(&v55, __y, v61), v51 = v8, v8 != 8)|| !*(void *)&__y[0]? (unsigned int v10 = 0): (unsigned int v10 = **(_DWORD **)&__y[0]), ((void (*)(long double **, long double *))off_1ECABEC60[v8])(&v55, __y), !v10))
    {
LABEL_74:
      int v43 = v3[6];
      if (v43 == 2)
      {
        if (v3[12] == 2)
        {
          *(long double *)(a2 + 8) = atan2(*v5, *v7);
          *(_DWORD *)(a2 + 24) = 2;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v42 = v62;
          if (v62 == -1) {
            goto LABEL_86;
          }
LABEL_85:
          ((void (*)(long double *, void *))off_1ECABEC60[v42])(__y, v61);
          goto LABEL_86;
        }
      }
      else if (v43 == 1)
      {
        if (v3[12] == 1)
        {
          _H0 = *(_WORD *)v5;
          _H1 = *(_WORD *)v7;
          __asm
          {
            FCVT            S0, H0; float
            FCVT            S1, H1; float
          }
          _S0 = atan2f(_S0, _S1);
          __asm { FCVT            H0, S0 }
          *(_WORD *)(a2 + 8) = LOWORD(_S0);
          *(_DWORD *)(a2 + 24) = 1;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v42 = v62;
          if (v62 == -1) {
            goto LABEL_86;
          }
          goto LABEL_85;
        }
      }
      else
      {
        if (v43)
        {
LABEL_95:
          __break(0xC471u);
          JUMPOUT(0x182683BD4);
        }
        if (!v3[12])
        {
          *(float *)(a2 + 8) = atan2f(*(float *)v5, *(float *)v7);
          *(_DWORD *)(a2 + 24) = 0;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v42 = v62;
          if (v62 == -1) {
            goto LABEL_86;
          }
          goto LABEL_85;
        }
      }
LABEL_93:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_94:
      __break(0xC471u);
      JUMPOUT(0x182683C58);
    }
    goto LABEL_18;
  }
  uint64_t v9 = v6;
  ((void (*)(long double **, long double *, void *))off_1ECABEE88[v6])(&v55, __y, v59);
  unsigned int v51 = v6;
  if (v6 != 8)
  {
    ((void (*)(long double **, long double *))off_1ECABEC60[v6])(&v55, __y);
    LODWORD(v8) = v62;
    goto LABEL_12;
  }
  if (*(void *)&__y[0]) {
    unsigned int v10 = **(_DWORD **)&__y[0];
  }
  else {
    unsigned int v10 = 0;
  }
  ((void (*)(long double **, long double *))off_1ECABEC60[v9])(&v55, __y);
  if (!v10) {
    goto LABEL_74;
  }
LABEL_18:
  uint64_t v49 = a2;
  uint64_t v11 = 24 * v10;
  uint64_t v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *uint64_t v12 = v10;
  uint64_t v13 = 24;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v15 = 0;
  LODWORD(__y[0]) = 0;
  unsigned int v51 = 0;
  LODWORD(__x[0]) = 0;
  unsigned int v53 = 0;
  do
  {
    if (v60 == 8)
    {
      if (v15 >= *(unsigned int *)v59[0]) {
        goto LABEL_95;
      }
      uint64_t v14 = v59[0] + v13 - 16;
      uint64_t v16 = *(unsigned int *)(v59[0] + v13);
      uint64_t v17 = v51;
      if (v51 == -1)
      {
        if (v16 == -1) {
          goto LABEL_32;
        }
      }
      else if (v16 == -1)
      {
        goto LABEL_27;
      }
      uint64_t v55 = __y;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v16])(&v55, __y, v14);
    }
    else
    {
      uint64_t v17 = v51;
      if (v51 == -1)
      {
        if (v60 == -1) {
          goto LABEL_32;
        }
      }
      else if (v60 == -1)
      {
LABEL_27:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v17])(&v55, __y, v14);
        unsigned int v51 = -1;
        goto LABEL_32;
      }
      uint64_t v55 = __y;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v60])(&v55, __y, v59);
    }
LABEL_32:
    if (v62 == 8)
    {
      if (v15 >= *(unsigned int *)v61[0]) {
        goto LABEL_95;
      }
      uint64_t v14 = v61[0] + v13 - 16;
      uint64_t v18 = *(unsigned int *)(v61[0] + v13);
      uint64_t v19 = v53;
      if (v53 == -1)
      {
        if (v18 == -1) {
          goto LABEL_44;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_39;
      }
      uint64_t v55 = __x;
      ((void (*)(long double **, long double *, uint64_t))off_1ECABEEE0[v18])(&v55, __x, v14);
    }
    else
    {
      uint64_t v19 = v53;
      if (v53 == -1)
      {
        if (v62 == -1) {
          goto LABEL_44;
        }
      }
      else if (v62 == -1)
      {
LABEL_39:
        ((void (*)(long double **, long double *, uint64_t))off_1ECABEC60[v19])(&v55, __x, v14);
        unsigned int v53 = -1;
        goto LABEL_44;
      }
      uint64_t v55 = __x;
      ((void (*)(long double **, long double *, void *))off_1ECABEEE0[v62])(&v55, __x, v61);
    }
LABEL_44:
    uint64_t v20 = v51;
    if (v51)
    {
      if (v51 == 1)
      {
        if (v53 != 1) {
          goto LABEL_93;
        }
        _H0 = LOWORD(__y[0]);
        _H1 = LOWORD(__x[0]);
        __asm
        {
          FCVT            S0, H0; float
          FCVT            S1, H1; float
        }
        _S0 = atan2f(_S0, _S1);
        __asm { FCVT            H0, S0 }
        LOWORD(v56[0]) = LOWORD(_S0);
      }
      else
      {
        if (v51 != 2) {
          goto LABEL_94;
        }
        if (v53 != 2) {
          goto LABEL_93;
        }
        v56[0] = atan2(__y[0], __x[0]);
      }
    }
    else
    {
      if (v53) {
        goto LABEL_93;
      }
      LODWORD(v56[0]) = atan2f(*(float *)__y, *(float *)__x);
    }
    int v57 = v20;
    int v58 = 0;
    if (v15 >= *v12)
    {
      __break(0xC471u);
      JUMPOUT(0x182683BF4);
    }
    uint64_t v54 = (uint64_t)&v12[(unint64_t)v13 / 4 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v20])(&v54);
    if (v58 != -1) {
      ((void (*)(uint64_t *, long double *))off_1ECABED68[v58])(&v54, v56);
    }
    ++v15;
    v13 += 24;
  }
  while (v10 != v15);
  uint64_t v30 = *v12;
  float v31 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v30 + 8));
  uint64_t v33 = v31;
  *float v31 = v30;
  if (v30)
  {
    uint64_t v34 = v31 + 6;
    uint64_t v35 = 24 * v30;
    uint64_t v36 = v12 + 6;
    do
    {
      *((unsigned char *)v34 - 16) = 0;
      uint64_t v32 = v34 - 4;
      *uint64_t v34 = -1;
      uint64_t v37 = *v36;
      if (v37 != -1)
      {
        ((void (*)(long double **, _DWORD *, unsigned int *))off_1ECABEE88[v37])(&v55, v32, v36 - 4);
        *uint64_t v34 = v37;
      }
      v34 += 6;
      v36 += 6;
      v35 -= 24;
    }
    while (v35);
  }
  *(void *)(v49 + 8) = v33;
  *(_DWORD *)(v49 + 24) = 8;
  *(_DWORD *)(v49 + 32) = 0;
  if (v53 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v53])(&v55, __x);
  }
  unsigned int v53 = -1;
  if (v51 != -1) {
    ((void (*)(long double **, long double *))off_1ECABEC60[v51])(&v55, __y);
  }
  uint64_t v38 = *v12;
  if (v38)
  {
    uint64_t v39 = 24 * v38;
    unsigned int v40 = v12 + 6;
    do
    {
      uint64_t v32 = v40 - 4;
      uint64_t v41 = *v40;
      if (v41 != -1) {
        ((void (*)(long double *, _DWORD *))off_1ECABEC60[v41])(__y, v32);
      }
      _DWORD *v40 = -1;
      v40 += 6;
      v39 -= 24;
    }
    while (v39);
  }
  WTF::fastFree((WTF *)v12, v32);
  uint64_t v42 = v62;
  if (v62 != -1) {
    goto LABEL_85;
  }
LABEL_86:
  unsigned int v62 = -1;
  if (v60 != -1) {
    ((void (*)(long double *, void *))off_1ECABEC60[v60])(__y, v59);
  }
}

__int16 WGSL::constantCeil@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182684138);
  }
  LOBYTE(v40[0]) = 0;
  unsigned int v41 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  char v5 = (double *)(v3 + 2);
  uint64_t v6 = off_1ECABEE88[v4];
  ((void (*)(double **, void *, _DWORD *))v6)(&v35, v40, v3 + 2);
  unsigned int v41 = v4;
  LOBYTE(v35) = 0;
  int v37 = -1;
  ((void (*)(double *, double **, void *))v6)(v32, &v35, v40);
  unsigned int v7 = 0;
  int v37 = v4;
  if (v4 == 8)
  {
    if (v35) {
      unsigned int v7 = *(_DWORD *)v35;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  ((void (*)(double *, double **))off_1ECABEC60[v4])(v32, &v35);
  if (!v7)
  {
    int v29 = v3[6];
    switch(v29)
    {
      case 2:
        double v27 = ceil(*v5);
        *(double *)(a2 + 8) = v27;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v28 = v41;
        if (v41 != -1) {
          goto LABEL_44;
        }
        return LOWORD(v27);
      case 1:
        *(short float *)&double v27 = ceill(*(short float *)v5);
        *(_WORD *)(a2 + 8) = LOWORD(v27);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v28 = v41;
        if (v41 != -1) {
          goto LABEL_44;
        }
        return LOWORD(v27);
      case 0:
        *(float *)&double v27 = ceilf(*(float *)v5);
        *(_DWORD *)(a2 + 8) = LODWORD(v27);
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v28 = v41;
        if (v41 != -1) {
          goto LABEL_44;
        }
        return LOWORD(v27);
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182684198);
  }
  uint64_t v31 = a2;
  uint64_t v8 = 24 * v7;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v7;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  LODWORD(v32[0]) = 0;
  unsigned int v33 = 0;
  do
  {
    if (v41 == 8)
    {
      if (v12 >= *(unsigned int *)v40[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182684118);
      }
      uint64_t v11 = v40[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v40[0] + v10 * 4);
      uint64_t v14 = v33;
      if (v33 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_58;
      }
      uint64_t v35 = v32;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v13])(&v35, v32, v11);
    }
    else
    {
      uint64_t v14 = v33;
      if (v33 == -1)
      {
        if (v41 == -1) {
          goto LABEL_59;
        }
      }
      else if (v41 == -1)
      {
LABEL_58:
        ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v14])(&v35, v32, v11);
        unsigned int v33 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x182684178);
      }
      uint64_t v35 = v32;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v41])(&v35, v32, v40);
    }
LABEL_22:
    if (v33)
    {
      if (v33 == 1)
      {
        LOWORD(v36) = ceill(*(short float *)v32);
      }
      else
      {
        if (v33 != 2) {
          goto LABEL_59;
        }
        double v36 = ceil(v32[0]);
      }
    }
    else
    {
      LODWORD(v36) = ceilf(*(float *)v32);
    }
    unsigned int v38 = v33;
    int v39 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x1826840F8);
    }
    uint64_t v34 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v33])(&v34);
    if (v39 != -1) {
      ((void (*)(uint64_t *, double *))off_1ECABED68[v39])(&v34, &v36);
    }
    ++v12;
    v10 += 6;
  }
  while (v7 != v12);
  uint64_t v15 = *v9;
  uint64_t v16 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v15 + 8));
  uint64_t v18 = v16;
  *uint64_t v16 = v15;
  if (v15)
  {
    uint64_t v19 = v16 + 6;
    uint64_t v20 = 24 * v15;
    uint64_t v21 = v9 + 6;
    do
    {
      *((unsigned char *)v19 - 16) = 0;
      uint64_t v17 = v19 - 4;
      *uint64_t v19 = -1;
      uint64_t v22 = *v21;
      if (v22 != -1)
      {
        ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v22])(&v35, v17, v21 - 4);
        *uint64_t v19 = v22;
      }
      v19 += 6;
      v21 += 6;
      v20 -= 24;
    }
    while (v20);
  }
  *(void *)(v31 + 8) = v18;
  *(_DWORD *)(v31 + 24) = 8;
  *(_DWORD *)(v31 + 32) = 0;
  if (v33 != -1) {
    ((void (*)(double **, double *))off_1ECABEC60[v33])(&v35, v32);
  }
  uint64_t v23 = *v9;
  if (v23)
  {
    uint64_t v24 = 24 * v23;
    uint64_t v25 = v9 + 6;
    do
    {
      uint64_t v17 = v25 - 4;
      uint64_t v26 = *v25;
      if (v26 != -1) {
        ((void (*)(double **, _DWORD *))off_1ECABEC60[v26])(&v35, v17);
      }
      _DWORD *v25 = -1;
      v25 += 6;
      v24 -= 24;
    }
    while (v24);
  }
  WTF::fastFree((WTF *)v9, v17);
  uint64_t v28 = v41;
  if (v41 != -1) {
LABEL_44:
  }
    ((void (*)(double **, void *))off_1ECABEC60[v28])(&v35, v40);
  return LOWORD(v27);
}

void WGSL::constantClamp(unsigned int **a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (float *)*a1;
  unsigned int v3 = **a1;
  if (!v3)
  {
    __break(0xC471u);
    JUMPOUT(0x182684CCCLL);
  }
  if (v3 == 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182684CECLL);
  }
  if (v3 <= 2)
  {
    __break(0xC471u);
    JUMPOUT(0x182684D0CLL);
  }
  LOBYTE(v59[0]) = 0;
  unsigned int v60 = -1;
  uint64_t v4 = *((unsigned int *)v2 + 6);
  if (v4 != -1)
  {
    ((void (*)(double *, void *, float *))off_1ECABEE88[v4])(v48, v59, v2 + 2);
    unsigned int v60 = v4;
  }
  char v5 = v2 + 8;
  LOBYTE(v61[0]) = 0;
  unsigned int v62 = -1;
  uint64_t v6 = *((unsigned int *)v2 + 12);
  if (v6 != -1)
  {
    ((void (*)(double *, void *, float *))off_1ECABEE88[v6])(v48, v61, v2 + 8);
    unsigned int v62 = v6;
  }
  unsigned int v7 = v2 + 14;
  LOBYTE(v63[0]) = 0;
  unsigned int v64 = -1;
  uint64_t v8 = *((unsigned int *)v2 + 18);
  if (v8 != -1)
  {
    ((void (*)(double *, void *, float *))off_1ECABEE88[v8])(v48, v63, v2 + 14);
    unsigned int v64 = v8;
  }
  LOBYTE(v48[0]) = 0;
  unsigned int v49 = -1;
  uint64_t v9 = v60;
  if (v60 != -1)
  {
    ((void (*)(double **, double *, void *))off_1ECABEE88[v60])(&v55, v48, v59);
    unsigned int v49 = v9;
    if (v9 == 8) {
      goto LABEL_18;
    }
    ((void (*)(double **, double *))off_1ECABEC60[v9])(&v55, v48);
  }
  LOBYTE(v48[0]) = 0;
  unsigned int v49 = -1;
  uint64_t v9 = v62;
  if (v62 == -1) {
    goto LABEL_16;
  }
  ((void (*)(double **, double *, void *))off_1ECABEE88[v62])(&v55, v48, v61);
  unsigned int v49 = v9;
  if (v9 != 8)
  {
    ((void (*)(double **, double *))off_1ECABEC60[v9])(&v55, v48);
LABEL_16:
    LOBYTE(v48[0]) = 0;
    unsigned int v49 = -1;
    uint64_t v9 = v64;
    if (v64 == -1)
    {
LABEL_129:
      switch(*((_DWORD *)v2 + 6))
      {
        case 0:
          if (*((_DWORD *)v2 + 12) || *((_DWORD *)v2 + 18)) {
            goto LABEL_183;
          }
          float v41 = v2[2];
          if (v41 < *v5) {
            float v41 = *v5;
          }
          if (v41 > *v7) {
            float v41 = *v7;
          }
          *(float *)(a2 + 8) = v41;
          *(_DWORD *)(a2 + 24) = 0;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v40 = v64;
          if (v64 == -1) {
            goto LABEL_124;
          }
          goto LABEL_123;
        case 1:
          if (*((_DWORD *)v2 + 12) != 1 || *((_DWORD *)v2 + 18) != 1) {
            goto LABEL_183;
          }
          short float v42 = *((short float *)v2 + 4);
          if (v42 < *(short float *)v5) {
            short float v42 = *(short float *)v5;
          }
          if (v42 > *(short float *)v7) {
            short float v42 = *(short float *)v7;
          }
          *(short float *)(a2 + 8) = v42;
          *(_DWORD *)(a2 + 24) = 1;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v40 = v64;
          if (v64 == -1) {
            goto LABEL_124;
          }
          goto LABEL_123;
        case 2:
          if (*((_DWORD *)v2 + 12) != 2 || *((_DWORD *)v2 + 18) != 2) {
            goto LABEL_183;
          }
          double v43 = *((double *)v2 + 1);
          if (v43 < *(double *)v5) {
            double v43 = *(double *)v5;
          }
          if (v43 > *(double *)v7) {
            double v43 = *(double *)v7;
          }
          *(double *)(a2 + 8) = v43;
          *(_DWORD *)(a2 + 24) = 2;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v40 = v64;
          if (v64 == -1) {
            goto LABEL_124;
          }
          goto LABEL_123;
        case 3:
          if (*((_DWORD *)v2 + 12) != 3 || *((_DWORD *)v2 + 18) != 3) {
            goto LABEL_183;
          }
          float v44 = v2[2];
          if (SLODWORD(v44) <= *(_DWORD *)v5) {
            float v44 = *v5;
          }
          if (SLODWORD(v44) >= *(_DWORD *)v7) {
            float v44 = *v7;
          }
          *(float *)(a2 + 8) = v44;
          *(_DWORD *)(a2 + 24) = 3;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v40 = v64;
          if (v64 == -1) {
            goto LABEL_124;
          }
          goto LABEL_123;
        case 4:
          if (*((_DWORD *)v2 + 12) != 4 || *((_DWORD *)v2 + 18) != 4) {
            goto LABEL_183;
          }
          float v45 = v2[2];
          if (LODWORD(v45) <= *(_DWORD *)v5) {
            float v45 = *v5;
          }
          if (LODWORD(v45) >= *(_DWORD *)v7) {
            float v45 = *v7;
          }
          *(float *)(a2 + 8) = v45;
          *(_DWORD *)(a2 + 24) = 4;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v40 = v64;
          if (v64 == -1) {
            goto LABEL_124;
          }
          goto LABEL_123;
        case 5:
          if (*((_DWORD *)v2 + 12) != 5 || *((_DWORD *)v2 + 18) != 5)
          {
LABEL_183:
            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_184:
            __break(0xC471u);
            JUMPOUT(0x182684D30);
          }
          uint64_t v46 = *((void *)v2 + 1);
          if (v46 <= *(void *)v5) {
            uint64_t v46 = *(void *)v5;
          }
          if (v46 >= *(void *)v7) {
            uint64_t v46 = *(void *)v7;
          }
          *(void *)(a2 + 8) = v46;
          *(_DWORD *)(a2 + 24) = 5;
          *(_DWORD *)(a2 + 32) = 0;
          uint64_t v40 = v64;
          if (v64 == -1) {
            goto LABEL_124;
          }
          goto LABEL_123;
        default:
          __break(0xC471u);
          JUMPOUT(0x182684D54);
      }
    }
    ((void (*)(double **, double *, void *))off_1ECABEE88[v64])(&v55, v48, v63);
    unsigned int v49 = v9;
    if (v9 != 8) {
      goto LABEL_20;
    }
  }
LABEL_18:
  if (*(void *)&v48[0])
  {
    unsigned int v10 = **(_DWORD **)&v48[0];
    goto LABEL_21;
  }
LABEL_20:
  unsigned int v10 = 0;
LABEL_21:
  ((void (*)(double **, double *))off_1ECABEC60[v9])(&v55, v48);
  if (!v10) {
    goto LABEL_129;
  }
  uint64_t v11 = 24 * v10;
  unint64_t v12 = (unsigned int *)WTF::fastMalloc((WTF *)(v11 + 8));
  *unint64_t v12 = v10;
  uint64_t v13 = 24;
  bzero(v12 + 2, 24 * ((v11 - 24) / 0x18uLL) + 24);
  unint64_t v15 = 0;
  LODWORD(v48[0]) = 0;
  unsigned int v49 = 0;
  LODWORD(v50[0]) = 0;
  unsigned int v51 = 0;
  LODWORD(v52[0]) = 0;
  unsigned int v53 = 0;
  do
  {
    if (v60 == 8)
    {
      if (v15 >= *(unsigned int *)v59[0]) {
        goto LABEL_178;
      }
      uint64_t v14 = v59[0] + v13 - 16;
      uint64_t v16 = *(unsigned int *)(v59[0] + v13);
      uint64_t v17 = v49;
      if (v49 == -1)
      {
        if (v16 == -1) {
          goto LABEL_36;
        }
      }
      else if (v16 == -1)
      {
        goto LABEL_31;
      }
      uint64_t v55 = v48;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v16])(&v55, v48, v14);
    }
    else
    {
      uint64_t v17 = v49;
      if (v49 == -1)
      {
        if (v60 == -1) {
          goto LABEL_36;
        }
      }
      else if (v60 == -1)
      {
LABEL_31:
        ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v17])(&v55, v48, v14);
        unsigned int v49 = -1;
        goto LABEL_36;
      }
      uint64_t v55 = v48;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v60])(&v55, v48, v59);
    }
LABEL_36:
    if (v62 == 8)
    {
      if (v15 >= *(unsigned int *)v61[0]) {
        goto LABEL_178;
      }
      uint64_t v14 = v61[0] + v13 - 16;
      uint64_t v18 = *(unsigned int *)(v61[0] + v13);
      uint64_t v19 = v51;
      if (v51 == -1)
      {
        if (v18 == -1) {
          goto LABEL_48;
        }
      }
      else if (v18 == -1)
      {
        goto LABEL_43;
      }
      uint64_t v55 = v50;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v18])(&v55, v50, v14);
    }
    else
    {
      uint64_t v19 = v51;
      if (v51 == -1)
      {
        if (v62 == -1) {
          goto LABEL_48;
        }
      }
      else if (v62 == -1)
      {
LABEL_43:
        ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v19])(&v55, v50, v14);
        unsigned int v51 = -1;
        goto LABEL_48;
      }
      uint64_t v55 = v50;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v62])(&v55, v50, v61);
    }
LABEL_48:
    if (v64 == 8)
    {
      if (v15 >= *(unsigned int *)v63[0])
      {
LABEL_178:
        __break(0xC471u);
        JUMPOUT(0x182684C8CLL);
      }
      uint64_t v14 = v63[0] + v13 - 16;
      uint64_t v20 = *(unsigned int *)(v63[0] + v13);
      uint64_t v21 = v53;
      if (v53 == -1)
      {
        if (v20 == -1) {
          goto LABEL_60;
        }
      }
      else if (v20 == -1)
      {
        goto LABEL_55;
      }
      uint64_t v55 = v52;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v20])(&v55, v52, v14);
    }
    else
    {
      uint64_t v21 = v53;
      if (v53 == -1)
      {
        if (v64 == -1) {
          goto LABEL_60;
        }
      }
      else if (v64 == -1)
      {
LABEL_55:
        ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v21])(&v55, v52, v14);
        unsigned int v53 = -1;
        goto LABEL_60;
      }
      uint64_t v55 = v52;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v64])(&v55, v52, v63);
    }
LABEL_60:
    switch(v49)
    {
      case 0u:
        if (v51 || v53) {
          goto LABEL_183;
        }
        float v22 = *(float *)v48;
        if (*(float *)v48 < *(float *)v50) {
          float v22 = *(float *)v50;
        }
        if (v22 > *(float *)v52) {
          float v22 = *(float *)v52;
        }
        *(float *)long double v56 = v22;
        break;
      case 1u:
        if (v51 != 1 || v53 != 1) {
          goto LABEL_183;
        }
        short float v23 = *(short float *)v48;
        if (*(short float *)v48 < *(short float *)v50) {
          short float v23 = *(short float *)v50;
        }
        if (v23 > *(short float *)v52) {
          short float v23 = *(short float *)v52;
        }
        *(short float *)long double v56 = v23;
        break;
      case 2u:
        if (v51 != 2 || v53 != 2) {
          goto LABEL_183;
        }
        double v24 = v48[0];
        if (v48[0] < v50[0]) {
          double v24 = v50[0];
        }
        if (v24 > v52[0]) {
          double v24 = v52[0];
        }
        v56[0] = v24;
        break;
      case 3u:
        if (v51 != 3 || v53 != 3) {
          goto LABEL_183;
        }
        int v25 = LODWORD(v48[0]);
        if (SLODWORD(v48[0]) <= SLODWORD(v50[0])) {
          int v25 = LODWORD(v50[0]);
        }
        if (v25 >= SLODWORD(v52[0])) {
          int v25 = LODWORD(v52[0]);
        }
        LODWORD(v56[0]) = v25;
        break;
      case 4u:
        if (v51 != 4 || v53 != 4) {
          goto LABEL_183;
        }
        unsigned int v26 = LODWORD(v48[0]);
        if (LODWORD(v48[0]) <= LODWORD(v50[0])) {
          unsigned int v26 = LODWORD(v50[0]);
        }
        if (v26 >= LODWORD(v52[0])) {
          unsigned int v26 = LODWORD(v52[0]);
        }
        LODWORD(v56[0]) = v26;
        break;
      case 5u:
        if (v51 != 5 || v53 != 5) {
          goto LABEL_183;
        }
        double v27 = v48[0];
        if (*(uint64_t *)&v48[0] <= *(uint64_t *)&v50[0]) {
          double v27 = v50[0];
        }
        if (*(uint64_t *)&v27 >= *(uint64_t *)&v52[0]) {
          double v27 = v52[0];
        }
        v56[0] = v27;
        break;
      default:
        goto LABEL_184;
    }
    unsigned int v57 = v49;
    int v58 = 0;
    if (v15 >= *v12)
    {
      __break(0xC471u);
      JUMPOUT(0x182684CACLL);
    }
    uint64_t v54 = (uint64_t)&v12[(unint64_t)v13 / 4 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v49])(&v54);
    if (v58 != -1) {
      ((void (*)(uint64_t *, double *))off_1ECABED68[v58])(&v54, v56);
    }
    ++v15;
    v13 += 24;
  }
  while (v10 != v15);
  uint64_t v28 = *v12;
  int v29 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v28 + 8));
  uint64_t v31 = v29;
  *int v29 = v28;
  if (v28)
  {
    uint64_t v32 = v29 + 6;
    uint64_t v33 = 24 * v28;
    uint64_t v34 = v12 + 6;
    do
    {
      *((unsigned char *)v32 - 16) = 0;
      uint64_t v30 = v32 - 4;
      _DWORD *v32 = -1;
      uint64_t v35 = *v34;
      if (v35 != -1)
      {
        ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v35])(&v55, v30, v34 - 4);
        _DWORD *v32 = v35;
      }
      v32 += 6;
      v34 += 6;
      v33 -= 24;
    }
    while (v33);
  }
  *(void *)(a2 + 8) = v31;
  *(_DWORD *)(a2 + 24) = 8;
  *(_DWORD *)(a2 + 32) = 0;
  if (v53 != -1) {
    ((void (*)(double **, double *))off_1ECABEC60[v53])(&v55, v52);
  }
  unsigned int v53 = -1;
  if (v51 != -1) {
    ((void (*)(double **, double *))off_1ECABEC60[v51])(&v55, v50);
  }
  unsigned int v51 = -1;
  if (v49 != -1) {
    ((void (*)(double **, double *))off_1ECABEC60[v49])(&v55, v48);
  }
  uint64_t v36 = *v12;
  if (v36)
  {
    uint64_t v37 = 24 * v36;
    unsigned int v38 = v12 + 6;
    do
    {
      uint64_t v30 = v38 - 4;
      uint64_t v39 = *v38;
      if (v39 != -1) {
        ((void (*)(double *, _DWORD *))off_1ECABEC60[v39])(v48, v30);
      }
      *unsigned int v38 = -1;
      v38 += 6;
      v37 -= 24;
    }
    while (v37);
  }
  WTF::fastFree((WTF *)v12, v30);
  uint64_t v40 = v64;
  if (v64 != -1) {
LABEL_123:
  }
    ((void (*)(double *, void *))off_1ECABEC60[v40])(v48, v63);
LABEL_124:
  unsigned int v64 = -1;
  if (v62 != -1) {
    ((void (*)(double *, void *))off_1ECABEC60[v62])(v48, v61);
  }
  unsigned int v62 = -1;
  if (v60 != -1) {
    ((void (*)(double *, void *))off_1ECABEC60[v60])(v48, v59);
  }
}

uint64_t WGSL::constantCountLeadingZeros@<X0>(void *a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826851DCLL);
  }
  LOBYTE(v37[0]) = 0;
  unsigned int v38 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_48;
  }
  char v5 = off_1ECABEE88[v4];
  ((void (*)(unsigned int **, void *, _DWORD *))v5)(&v32, v37, v3 + 2);
  unsigned int v38 = v4;
  LOBYTE(v32) = 0;
  int v34 = -1;
  ((void (*)(unsigned int *, unsigned int **, void *))v5)(v29, &v32, v37);
  unsigned int v6 = 0;
  int v34 = v4;
  if (v4 == 8)
  {
    if (v32) {
      unsigned int v6 = *v32;
    }
    else {
      unsigned int v6 = 0;
    }
  }
  uint64_t result = ((uint64_t (*)(unsigned int *, unsigned int **))off_1ECABEC60[v4])(v29, &v32);
  if (!v6)
  {
    int v28 = v3[6];
    if ((v28 - 3) < 2)
    {
      a2[2] = __clz(v3[2]);
      a2[6] = v28;
      a2[8] = 0;
      uint64_t v27 = v38;
      if (v38 != -1) {
        return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v27])(&v32, v37);
      }
      return result;
    }
LABEL_48:
    __break(0xC471u);
    JUMPOUT(0x18268521CLL);
  }
  uint64_t v8 = 24 * v6;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v6;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  v29[0] = 0;
  unsigned int v30 = 0;
  do
  {
    if (v38 == 8)
    {
      if (v12 >= *(unsigned int *)v37[0])
      {
        __break(0xC471u);
        JUMPOUT(0x1826851BCLL);
      }
      uint64_t v11 = v37[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v37[0] + v10 * 4);
      uint64_t v14 = v30;
      if (v30 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_17;
      }
      uint64_t v32 = v29;
      ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEEE0[v13])(&v32, v29, v11);
    }
    else
    {
      uint64_t v14 = v30;
      if (v30 == -1)
      {
        if (v38 == -1) {
          goto LABEL_22;
        }
      }
      else if (v38 == -1)
      {
LABEL_17:
        ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEC60[v14])(&v32, v29, v11);
        unsigned int v30 = -1;
        goto LABEL_22;
      }
      uint64_t v32 = v29;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEEE0[v38])(&v32, v29, v37);
    }
LABEL_22:
    if (v30 - 3 > 1)
    {
      __break(0xC471u);
      JUMPOUT(0x1826851FCLL);
    }
    unsigned int v33 = __clz(v29[0]);
    unsigned int v35 = v30;
    int v36 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x18268519CLL);
    }
    uint64_t v31 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v30])(&v31);
    if (v36 != -1) {
      ((void (*)(uint64_t *, unsigned int *))off_1ECABED68[v36])(&v31, &v33);
    }
    ++v12;
    v10 += 6;
  }
  while (v6 != v12);
  uint64_t v15 = *v9;
  uint64_t v16 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v15 + 8));
  uint64_t v18 = v16;
  *uint64_t v16 = v15;
  if (v15)
  {
    uint64_t v19 = v16 + 6;
    uint64_t v20 = 24 * v15;
    uint64_t v21 = v9 + 6;
    do
    {
      *((unsigned char *)v19 - 16) = 0;
      uint64_t v17 = v19 - 4;
      *uint64_t v19 = -1;
      uint64_t v22 = *v21;
      if (v22 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v22])(&v32, v17, v21 - 4);
        *uint64_t v19 = v22;
      }
      v19 += 6;
      v21 += 6;
      v20 -= 24;
    }
    while (v20);
  }
  *((void *)a2 + 1) = v18;
  a2[6] = 8;
  a2[8] = 0;
  if (v30 != -1) {
    ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v30])(&v32, v29);
  }
  uint64_t v23 = *v9;
  if (v23)
  {
    uint64_t v24 = 24 * v23;
    int v25 = v9 + 6;
    do
    {
      uint64_t v17 = v25 - 4;
      uint64_t v26 = *v25;
      if (v26 != -1) {
        ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v26])(&v32, v17);
      }
      _DWORD *v25 = -1;
      v25 += 6;
      v24 -= 24;
    }
    while (v24);
  }
  uint64_t result = WTF::fastFree((WTF *)v9, v17);
  uint64_t v27 = v38;
  if (v38 != -1) {
    return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v27])(&v32, v37);
  }
  return result;
}

__int16 WGSL::constantCountOneBits@<H0>(void *a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182685690);
  }
  LOBYTE(v41[0]) = 0;
  unsigned int v42 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_48;
  }
  char v5 = off_1ECABEE88[v4];
  ((void (*)(unsigned int **, void *, _DWORD *))v5)(&v36, v41, v3 + 2);
  unsigned int v42 = v4;
  LOBYTE(v36) = 0;
  int v38 = -1;
  ((void (*)(_DWORD *, unsigned int **, void *))v5)(v33, &v36, v41);
  unsigned int v6 = 0;
  int v38 = v4;
  if (v4 == 8)
  {
    if (v36) {
      unsigned int v6 = *v36;
    }
    else {
      unsigned int v6 = 0;
    }
  }
  ((void (*)(_DWORD *, unsigned int **))off_1ECABEC60[v4])(v33, &v36);
  if (!v6)
  {
    int v31 = v3[6];
    if ((v31 - 3) < 2)
    {
      v7.i32[0] = v3[2];
      uint8x8_t v29 = (uint8x8_t)vcnt_s8(v7);
      v29.i16[0] = vaddlv_u8(v29);
      a2[2] = v29.i32[0];
      a2[6] = v31;
      a2[8] = 0;
      uint64_t v30 = v42;
      if (v42 != -1) {
        goto LABEL_39;
      }
      return v29.i16[0];
    }
LABEL_48:
    __break(0xC471u);
    JUMPOUT(0x1826856D0);
  }
  uint64_t v8 = 24 * v6;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v6;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v13 = 0;
  v33[0] = 0;
  unsigned int v34 = 0;
  do
  {
    if (v42 == 8)
    {
      if (v13 >= *(unsigned int *)v41[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182685670);
      }
      uint64_t v11 = v41[0] + v10 * 4 - 16;
      uint64_t v14 = *(unsigned int *)(v41[0] + v10 * 4);
      uint64_t v15 = v34;
      if (v34 == -1)
      {
        if (v14 == -1) {
          goto LABEL_22;
        }
      }
      else if (v14 == -1)
      {
        goto LABEL_17;
      }
      int v36 = v33;
      ((void (*)(unsigned int **, _DWORD *, uint64_t))off_1ECABEEE0[v14])(&v36, v33, v11);
    }
    else
    {
      uint64_t v15 = v34;
      if (v34 == -1)
      {
        if (v42 == -1) {
          goto LABEL_22;
        }
      }
      else if (v42 == -1)
      {
LABEL_17:
        ((void (*)(unsigned int **, _DWORD *, uint64_t))off_1ECABEC60[v15])(&v36, v33, v11);
        unsigned int v34 = -1;
        goto LABEL_22;
      }
      int v36 = v33;
      ((void (*)(unsigned int **, _DWORD *, void *))off_1ECABEEE0[v42])(&v36, v33, v41);
    }
LABEL_22:
    if (v34 - 3 > 1)
    {
      __break(0xC471u);
      JUMPOUT(0x1826856B0);
    }
    v12.i32[0] = v33[0];
    uint8x8_t v16 = (uint8x8_t)vcnt_s8(v12);
    v16.i16[0] = vaddlv_u8(v16);
    __int32 v37 = v16.i32[0];
    unsigned int v39 = v34;
    int v40 = 0;
    if (v13 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182685650);
    }
    uint64_t v35 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v34])(&v35);
    if (v40 != -1) {
      ((void (*)(uint64_t *, __int32 *))off_1ECABED68[v40])(&v35, &v37);
    }
    ++v13;
    v10 += 6;
  }
  while (v6 != v13);
  uint64_t v17 = *v9;
  uint64_t v18 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v17 + 8));
  uint64_t v20 = v18;
  *uint64_t v18 = v17;
  if (v17)
  {
    uint64_t v21 = v18 + 6;
    uint64_t v22 = 24 * v17;
    uint64_t v23 = v9 + 6;
    do
    {
      *((unsigned char *)v21 - 16) = 0;
      uint64_t v19 = v21 - 4;
      *uint64_t v21 = -1;
      uint64_t v24 = *v23;
      if (v24 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v24])(&v36, v19, v23 - 4);
        *uint64_t v21 = v24;
      }
      v21 += 6;
      v23 += 6;
      v22 -= 24;
    }
    while (v22);
  }
  *((void *)a2 + 1) = v20;
  a2[6] = 8;
  a2[8] = 0;
  if (v34 != -1) {
    ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v34])(&v36, v33);
  }
  uint64_t v25 = *v9;
  if (v25)
  {
    uint64_t v26 = 24 * v25;
    uint64_t v27 = v9 + 6;
    do
    {
      uint64_t v19 = v27 - 4;
      uint64_t v28 = *v27;
      if (v28 != -1) {
        ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v28])(&v36, v19);
      }
      *uint64_t v27 = -1;
      v27 += 6;
      v26 -= 24;
    }
    while (v26);
  }
  WTF::fastFree((WTF *)v9, v19);
  uint64_t v30 = v42;
  if (v42 != -1) {
LABEL_39:
  }
    ((void (*)(unsigned int **, void *))off_1ECABEC60[v30])(&v36, v41);
  return v29.i16[0];
}

uint64_t WGSL::constantCountTrailingZeros@<X0>(void *a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x182685B34);
  }
  LOBYTE(v37[0]) = 0;
  unsigned int v38 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_48;
  }
  char v5 = off_1ECABEE88[v4];
  ((void (*)(unsigned int **, void *, _DWORD *))v5)(&v32, v37, v3 + 2);
  unsigned int v38 = v4;
  LOBYTE(v32) = 0;
  int v34 = -1;
  ((void (*)(unsigned int *, unsigned int **, void *))v5)(v29, &v32, v37);
  unsigned int v6 = 0;
  int v34 = v4;
  if (v4 == 8)
  {
    if (v32) {
      unsigned int v6 = *v32;
    }
    else {
      unsigned int v6 = 0;
    }
  }
  uint64_t result = ((uint64_t (*)(unsigned int *, unsigned int **))off_1ECABEC60[v4])(v29, &v32);
  if (!v6)
  {
    int v28 = v3[6];
    if ((v28 - 3) < 2)
    {
      a2[2] = __clz(__rbit32(v3[2]));
      a2[6] = v28;
      a2[8] = 0;
      uint64_t v27 = v38;
      if (v38 != -1) {
        return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v27])(&v32, v37);
      }
      return result;
    }
LABEL_48:
    __break(0xC471u);
    JUMPOUT(0x182685B74);
  }
  uint64_t v8 = 24 * v6;
  uint64_t v9 = (unsigned int *)WTF::fastMalloc((WTF *)(v8 + 8));
  *uint64_t v9 = v6;
  uint64_t v10 = 6;
  bzero(v9 + 2, 24 * ((v8 - 24) / 0x18uLL) + 24);
  unint64_t v12 = 0;
  v29[0] = 0;
  unsigned int v30 = 0;
  do
  {
    if (v38 == 8)
    {
      if (v12 >= *(unsigned int *)v37[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182685B14);
      }
      uint64_t v11 = v37[0] + v10 * 4 - 16;
      uint64_t v13 = *(unsigned int *)(v37[0] + v10 * 4);
      uint64_t v14 = v30;
      if (v30 == -1)
      {
        if (v13 == -1) {
          goto LABEL_22;
        }
      }
      else if (v13 == -1)
      {
        goto LABEL_17;
      }
      uint64_t v32 = v29;
      ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEEE0[v13])(&v32, v29, v11);
    }
    else
    {
      uint64_t v14 = v30;
      if (v30 == -1)
      {
        if (v38 == -1) {
          goto LABEL_22;
        }
      }
      else if (v38 == -1)
      {
LABEL_17:
        ((void (*)(unsigned int **, unsigned int *, uint64_t))off_1ECABEC60[v14])(&v32, v29, v11);
        unsigned int v30 = -1;
        goto LABEL_22;
      }
      uint64_t v32 = v29;
      ((void (*)(unsigned int **, unsigned int *, void *))off_1ECABEEE0[v38])(&v32, v29, v37);
    }
LABEL_22:
    if (v30 - 3 > 1)
    {
      __break(0xC471u);
      JUMPOUT(0x182685B54);
    }
    unsigned int v33 = __clz(__rbit32(v29[0]));
    unsigned int v35 = v30;
    int v36 = 0;
    if (v12 >= *v9)
    {
      __break(0xC471u);
      JUMPOUT(0x182685AF4);
    }
    uint64_t v31 = (uint64_t)&v9[v10 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v30])(&v31);
    if (v36 != -1) {
      ((void (*)(uint64_t *, unsigned int *))off_1ECABED68[v36])(&v31, &v33);
    }
    ++v12;
    v10 += 6;
  }
  while (v6 != v12);
  uint64_t v15 = *v9;
  uint8x8_t v16 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v15 + 8));
  uint64_t v18 = v16;
  *uint8x8_t v16 = v15;
  if (v15)
  {
    uint64_t v19 = v16 + 6;
    uint64_t v20 = 24 * v15;
    uint64_t v21 = v9 + 6;
    do
    {
      *((unsigned char *)v19 - 16) = 0;
      uint64_t v17 = v19 - 4;
      *uint64_t v19 = -1;
      uint64_t v22 = *v21;
      if (v22 != -1)
      {
        ((void (*)(unsigned int **, _DWORD *, unsigned int *))off_1ECABEE88[v22])(&v32, v17, v21 - 4);
        *uint64_t v19 = v22;
      }
      v19 += 6;
      v21 += 6;
      v20 -= 24;
    }
    while (v20);
  }
  *((void *)a2 + 1) = v18;
  a2[6] = 8;
  a2[8] = 0;
  if (v30 != -1) {
    ((void (*)(unsigned int **, unsigned int *))off_1ECABEC60[v30])(&v32, v29);
  }
  uint64_t v23 = *v9;
  if (v23)
  {
    uint64_t v24 = 24 * v23;
    uint64_t v25 = v9 + 6;
    do
    {
      uint64_t v17 = v25 - 4;
      uint64_t v26 = *v25;
      if (v26 != -1) {
        ((void (*)(unsigned int **, _DWORD *))off_1ECABEC60[v26])(&v32, v17);
      }
      _DWORD *v25 = -1;
      v25 += 6;
      v24 -= 24;
    }
    while (v24);
  }
  uint64_t result = WTF::fastFree((WTF *)v9, v17);
  uint64_t v27 = v38;
  if (v38 != -1) {
    return ((uint64_t (*)(unsigned int **, void *))off_1ECABEC60[v27])(&v32, v37);
  }
  return result;
}

uint64_t WGSL::constantCross@<X0>(unsigned int **a1@<X1>, uint64_t a2@<X8>)
{
  unsigned int v3 = *a1;
  unsigned int v4 = **a1;
  if (!v4) {
    goto LABEL_92;
  }
  if (v3[6] != 8) {
    goto LABEL_91;
  }
  if (v4 <= 1)
  {
    __break(0xC471u);
    JUMPOUT(0x182686270);
  }
  if (v3[12] != 8) {
    goto LABEL_91;
  }
  uint64_t v5 = *((void *)v3 + 1);
  unsigned int v6 = *(_DWORD *)v5;
  if (!*(_DWORD *)v5)
  {
    __break(0xC471u);
    JUMPOUT(0x182686290);
  }
  int v7 = *(_DWORD *)(v5 + 24);
  if (v7 != 2)
  {
    if (v7 != 1)
    {
      if (!v7)
      {
        if (v6 <= 1)
        {
          __break(0xC471u);
          JUMPOUT(0x1826862B0);
        }
        if (!*(_DWORD *)(v5 + 48))
        {
          if (v6 <= 2)
          {
            __break(0xC471u);
            JUMPOUT(0x182686310);
          }
          if (!*(_DWORD *)(v5 + 72))
          {
            uint64_t v8 = *((void *)v3 + 4);
            unsigned int v9 = *(_DWORD *)v8;
            if (!*(_DWORD *)v8)
            {
              __break(0xC471u);
              JUMPOUT(0x182686370);
            }
            if (!*(_DWORD *)(v8 + 24))
            {
              if (v9 <= 1)
              {
                __break(0xC471u);
                JUMPOUT(0x1826863D0);
              }
              if (!*(_DWORD *)(v8 + 48))
              {
                if (v9 <= 2)
                {
                  __break(0xC471u);
                  JUMPOUT(0x182686430);
                }
                if (!*(_DWORD *)(v8 + 72))
                {
                  float v10 = *(float *)(v5 + 8);
                  float v11 = *(float *)(v5 + 32);
                  float v12 = *(float *)(v5 + 56);
                  float v13 = *(float *)(v8 + 8);
                  float v14 = *(float *)(v8 + 32);
                  float v15 = *(float *)(v8 + 56);
                  uint8x8_t v16 = (unsigned int *)WTF::fastMalloc((WTF *)0x50);
                  *uint8x8_t v16 = 3;
                  *((float *)v16 + 2) = (float)(v11 * v15) - (float)(v12 * v14);
                  *(_OWORD *)(v16 + 7) = 0u;
                  *(_OWORD *)(v16 + 11) = 0u;
                  *(_OWORD *)(v16 + 15) = 0u;
                  v16[19] = 0;
                  *((float *)v16 + 8) = (float)(v12 * v13) - (float)(v10 * v15);
                  *(_OWORD *)(v16 + 3) = 0u;
                  *((float *)v16 + 14) = (float)(v10 * v14) - (float)(v11 * v13);
                  uint64_t v17 = WTF::fastMalloc((WTF *)0x50);
                  *(_DWORD *)uint64_t v17 = 3;
                  *(unsigned char *)(v17 + 8) = 0;
                  *(_DWORD *)(v17 + 24) = -1;
                  uint64_t v18 = v16[6];
                  if (v18 != -1)
                  {
                    ((void (*)(char *, uint64_t, unsigned int *))off_1ECABEE88[v18])(&v75, v17 + 8, v16 + 2);
                    *(_DWORD *)(v17 + 24) = v18;
                  }
                  *(unsigned char *)(v17 + 32) = 0;
                  *(_DWORD *)(v17 + 48) = -1;
                  uint64_t v19 = v16[12];
                  if (v19 != -1)
                  {
                    ((void (*)(char *))off_1ECABEE88[v19])(&v75);
                    *(_DWORD *)(v17 + 48) = v19;
                  }
                  *(unsigned char *)(v17 + 56) = 0;
                  uint64_t v20 = (void *)(v17 + 56);
                  *(_DWORD *)(v17 + 72) = -1;
                  uint64_t v21 = v16[18];
                  if (v21 != -1)
                  {
                    ((void (*)(char *))off_1ECABEE88[v21])(&v75);
                    *(_DWORD *)(v17 + 72) = v21;
                  }
                  *(void *)(a2 + 8) = v17;
                  *(_DWORD *)(a2 + 24) = 8;
                  *(_DWORD *)(a2 + 32) = 0;
                  uint64_t v22 = *v16;
                  if (v22)
                  {
                    unint64_t v23 = 0;
                    uint64_t v24 = 24 * v22;
                    do
                    {
                      uint64_t v25 = &v16[v23 / 4];
                      uint64_t v26 = v16[v23 / 4 + 6];
                      if (v26 != -1) {
                        ((void (*)(char *, unsigned int *))off_1ECABEC60[v26])(&v76, v25 + 2);
                      }
                      v25[6] = -1;
                      v23 += 24;
                    }
                    while (v24 != v23);
                  }
                  return WTF::fastFree((WTF *)v16, v20);
                }
              }
            }
          }
        }
        goto LABEL_91;
      }
LABEL_92:
      __break(0xC471u);
      JUMPOUT(0x182686250);
    }
    if (v6 <= 1)
    {
      __break(0xC471u);
      JUMPOUT(0x1826862F0);
    }
    if (*(_DWORD *)(v5 + 48) == 1)
    {
      if (v6 <= 2)
      {
        __break(0xC471u);
        JUMPOUT(0x182686350);
      }
      if (*(_DWORD *)(v5 + 72) == 1)
      {
        uint64_t v44 = *((void *)v3 + 4);
        unsigned int v45 = *(_DWORD *)v44;
        if (!*(_DWORD *)v44)
        {
          __break(0xC471u);
          JUMPOUT(0x1826863B0);
        }
        if (*(_DWORD *)(v44 + 24) == 1)
        {
          if (v45 <= 1)
          {
            __break(0xC471u);
            JUMPOUT(0x182686410);
          }
          if (*(_DWORD *)(v44 + 48) == 1)
          {
            if (v45 <= 2)
            {
              __break(0xC471u);
              JUMPOUT(0x182686470);
            }
            if (*(_DWORD *)(v44 + 72) == 1)
            {
              _H8 = *(_WORD *)(v5 + 8);
              _H9 = *(_WORD *)(v5 + 32);
              _H10 = *(_WORD *)(v5 + 56);
              _H11 = *(_WORD *)(v44 + 8);
              _H12 = *(_WORD *)(v44 + 32);
              _H13 = *(_WORD *)(v44 + 56);
              uint8x8_t v16 = (unsigned int *)WTF::fastMalloc((WTF *)0x50);
              *uint8x8_t v16 = 3;
              *(_OWORD *)(v16 + 2) = 0u;
              *(_OWORD *)(v16 + 6) = 0u;
              *(_OWORD *)(v16 + 10) = 0u;
              *((void *)v16 + 9) = 0;
              *(_OWORD *)(v16 + 14) = 0u;
              __asm
              {
                FCVT            S0, H9
                FCVT            S1, H13
                FCVT            S2, H10
                FCVT            S3, H12
              }
              _S4 = (float)(_S0 * _S1) - (float)(_S2 * _S3);
              __asm { FCVT            H4, S4 }
              *((_WORD *)v16 + 4) = LOWORD(_S4);
              v16[6] = 1;
              __asm
              {
                FCVT            S4, H11
                FCVT            S5, H8
              }
              _S1 = (float)(_S2 * _S4) - (float)(_S5 * _S1);
              __asm { FCVT            H1, S1 }
              *((_WORD *)v16 + 16) = LOWORD(_S1);
              v16[12] = 1;
              _S0 = (float)(_S5 * _S3) - (float)(_S0 * _S4);
              __asm { FCVT            H0, S0 }
              *((_WORD *)v16 + 28) = LOWORD(_S0);
              v16[18] = 1;
              uint64_t v65 = WTF::fastMalloc((WTF *)0x50);
              *(_DWORD *)uint64_t v65 = 3;
              *(unsigned char *)(v65 + 8) = 0;
              *(_DWORD *)(v65 + 24) = -1;
              uint64_t v66 = v16[6];
              if (v66 != -1)
              {
                ((void (*)(char *, uint64_t, unsigned int *))off_1ECABEE88[v66])(&v77, v65 + 8, v16 + 2);
                *(_DWORD *)(v65 + 24) = v66;
              }
              *(unsigned char *)(v65 + 32) = 0;
              *(_DWORD *)(v65 + 48) = -1;
              uint64_t v67 = v16[12];
              if (v67 != -1)
              {
                ((void (*)(char *))off_1ECABEE88[v67])(&v77);
                *(_DWORD *)(v65 + 48) = v67;
              }
              *(unsigned char *)(v65 + 56) = 0;
              uint64_t v20 = (void *)(v65 + 56);
              *(_DWORD *)(v65 + 72) = -1;
              uint64_t v68 = v16[18];
              if (v68 != -1)
              {
                ((void (*)(char *))off_1ECABEE88[v68])(&v77);
                *(_DWORD *)(v65 + 72) = v68;
              }
              *(void *)(a2 + 8) = v65;
              *(_DWORD *)(a2 + 24) = 8;
              *(_DWORD *)(a2 + 32) = 0;
              uint64_t v69 = *v16;
              if (v69)
              {
                unint64_t v70 = 0;
                uint64_t v71 = 24 * v69;
                do
                {
                  uint64_t v72 = &v16[v70 / 4];
                  uint64_t v73 = v16[v70 / 4 + 6];
                  if (v73 != -1) {
                    ((void (*)(char *, unsigned int *))off_1ECABEC60[v73])(&v78, v72 + 2);
                  }
                  v72[6] = -1;
                  v70 += 24;
                }
                while (v71 != v70);
              }
              return WTF::fastFree((WTF *)v16, v20);
            }
          }
        }
      }
    }
LABEL_91:
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_92;
  }
  if (v6 <= 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826862D0);
  }
  if (*(_DWORD *)(v5 + 48) != 2) {
    goto LABEL_91;
  }
  if (v6 <= 2)
  {
    __break(0xC471u);
    JUMPOUT(0x182686330);
  }
  if (*(_DWORD *)(v5 + 72) != 2) {
    goto LABEL_91;
  }
  uint64_t v27 = *((void *)v3 + 4);
  unsigned int v28 = *(_DWORD *)v27;
  if (!*(_DWORD *)v27)
  {
    __break(0xC471u);
    JUMPOUT(0x182686390);
  }
  if (*(_DWORD *)(v27 + 24) != 2) {
    goto LABEL_91;
  }
  if (v28 <= 1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826863F0);
  }
  if (*(_DWORD *)(v27 + 48) != 2) {
    goto LABEL_91;
  }
  if (v28 <= 2)
  {
    __break(0xC471u);
    JUMPOUT(0x182686450);
  }
  if (*(_DWORD *)(v27 + 72) != 2) {
    goto LABEL_91;
  }
  double v29 = *(double *)(v5 + 8);
  double v30 = *(double *)(v5 + 32);
  double v31 = *(double *)(v5 + 56);
  double v32 = *(double *)(v27 + 8);
  double v33 = *(double *)(v27 + 32);
  double v34 = *(double *)(v27 + 56);
  uint8x8_t v16 = (unsigned int *)WTF::fastMalloc((WTF *)0x50);
  *uint8x8_t v16 = 3;
  *((double *)v16 + 1) = v30 * v34 - v31 * v33;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *((_OWORD *)v16 + 4) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  v16[6] = 2;
  *((double *)v16 + 4) = v31 * v32 - v29 * v34;
  v16[12] = 2;
  *((double *)v16 + 7) = v29 * v33 - v30 * v32;
  v16[18] = 2;
  uint64_t v35 = WTF::fastMalloc((WTF *)0x50);
  *(_DWORD *)uint64_t v35 = 3;
  *(unsigned char *)(v35 + 8) = 0;
  *(_DWORD *)(v35 + 24) = -1;
  uint64_t v36 = v16[6];
  if (v36 != -1)
  {
    ((void (*)(char *, uint64_t, unsigned int *))off_1ECABEE88[v36])(&v79, v35 + 8, v16 + 2);
    *(_DWORD *)(v35 + 24) = v36;
  }
  *(unsigned char *)(v35 + 32) = 0;
  *(_DWORD *)(v35 + 48) = -1;
  uint64_t v37 = v16[12];
  if (v37 != -1)
  {
    ((void (*)(char *))off_1ECABEE88[v37])(&v79);
    *(_DWORD *)(v35 + 48) = v37;
  }
  *(unsigned char *)(v35 + 56) = 0;
  uint64_t v20 = (void *)(v35 + 56);
  *(_DWORD *)(v35 + 72) = -1;
  uint64_t v38 = v16[18];
  if (v38 != -1)
  {
    ((void (*)(char *))off_1ECABEE88[v38])(&v79);
    *(_DWORD *)(v35 + 72) = v38;
  }
  *(void *)(a2 + 8) = v35;
  *(_DWORD *)(a2 + 24) = 8;
  *(_DWORD *)(a2 + 32) = 0;
  uint64_t v39 = *v16;
  if (v39)
  {
    unint64_t v40 = 0;
    uint64_t v41 = 24 * v39;
    do
    {
      unsigned int v42 = &v16[v40 / 4];
      uint64_t v43 = v16[v40 / 4 + 6];
      if (v43 != -1) {
        ((void (*)(char *, unsigned int *))off_1ECABEC60[v43])(&v80, v42 + 2);
      }
      v42[6] = -1;
      v40 += 24;
    }
    while (v41 != v40);
  }
  return WTF::fastFree((WTF *)v16, v20);
}

uint64_t WGSL::constantDegrees@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1)
  {
    __break(0xC471u);
    JUMPOUT(0x1826869A0);
  }
  LOBYTE(v51[0]) = 0;
  unsigned int v52 = -1;
  uint64_t v4 = v3[6];
  if (v4 == -1) {
    goto LABEL_60;
  }
  uint64_t v5 = (double *)(v3 + 2);
  unsigned int v6 = off_1ECABEE88[v4];
  ((void (*)(double **, void *, _DWORD *))v6)(&v46, v51, v3 + 2);
  unsigned int v52 = v4;
  LOBYTE(v46) = 0;
  int v48 = -1;
  ((void (*)(double *, double **, void *))v6)(v43, &v46, v51);
  unsigned int v7 = 0;
  int v48 = v4;
  if (v4 == 8)
  {
    if (v46) {
      unsigned int v7 = *(_DWORD *)v46;
    }
    else {
      unsigned int v7 = 0;
    }
  }
  uint64_t result = ((uint64_t (*)(double *, double **))off_1ECABEC60[v4])(v43, &v46);
  if (!v7)
  {
    int v37 = v3[6];
    switch(v37)
    {
      case 2:
        *(double *)(a2 + 8) = *v5 * 57.2957795;
        *(_DWORD *)(a2 + 24) = 2;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v52;
        if (v52 != -1) {
          return ((uint64_t (*)(double **, void *))off_1ECABEC60[v36])(&v46, v51);
        }
        return result;
      case 1:
        _H0 = *(_WORD *)v5;
        __asm { FCVT            D0, H0 }
        _D0 = _D0 * 57.2957795;
        __asm { FCVT            H0, D0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v52;
        if (v52 != -1) {
          return ((uint64_t (*)(double **, void *))off_1ECABEC60[v36])(&v46, v51);
        }
        return result;
      case 0:
        float v38 = *(float *)v5 * 57.2957795;
        *(float *)(a2 + 8) = v38;
        *(_DWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 32) = 0;
        uint64_t v36 = v52;
        if (v52 != -1) {
          return ((uint64_t (*)(void, void))off_1ECABEC60[v36])(&v46, v51);
        }
        return result;
    }
LABEL_60:
    __break(0xC471u);
    JUMPOUT(0x182686A00);
  }
  uint64_t v42 = a2;
  uint64_t v9 = 24 * v7;
  float v10 = (unsigned int *)WTF::fastMalloc((WTF *)(v9 + 8));
  *float v10 = v7;
  uint64_t v11 = 6;
  bzero(v10 + 2, 24 * ((v9 - 24) / 0x18uLL) + 24);
  unint64_t v13 = 0;
  LODWORD(v43[0]) = 0;
  unsigned int v44 = 0;
  do
  {
    if (v52 == 8)
    {
      if (v13 >= *(unsigned int *)v51[0])
      {
        __break(0xC471u);
        JUMPOUT(0x182686980);
      }
      uint64_t v12 = v51[0] + v11 * 4 - 16;
      uint64_t v14 = *(unsigned int *)(v51[0] + v11 * 4);
      uint64_t v15 = v44;
      if (v44 == -1)
      {
        if (v14 == -1) {
          goto LABEL_22;
        }
      }
      else if (v14 == -1)
      {
        goto LABEL_58;
      }
      uint64_t v46 = v43;
      ((void (*)(double **, double *, uint64_t))off_1ECABEEE0[v14])(&v46, v43, v12);
    }
    else
    {
      uint64_t v15 = v44;
      if (v44 == -1)
      {
        if (v52 == -1) {
          goto LABEL_59;
        }
      }
      else if (v52 == -1)
      {
LABEL_58:
        ((void (*)(double **, double *, uint64_t))off_1ECABEC60[v15])(&v46, v43, v12);
        unsigned int v44 = -1;
LABEL_59:
        __break(0xC471u);
        JUMPOUT(0x1826869E0);
      }
      uint64_t v46 = v43;
      ((void (*)(double **, double *, void *))off_1ECABEEE0[v52])(&v46, v43, v51);
    }
LABEL_22:
    if (v44)
    {
      if (v44 == 1)
      {
        _H0 = LOWORD(v43[0]);
        __asm { FCVT            D0, H0 }
        _D0 = _D0 * 57.2957795;
        __asm { FCVT            H0, D0 }
        LOWORD(v47) = LOWORD(_D0);
      }
      else
      {
        if (v44 != 2) {
          goto LABEL_59;
        }
        double v47 = v43[0] * 57.2957795;
      }
    }
    else
    {
      float v16 = *(float *)v43 * 57.2957795;
      *(float *)&double v47 = v16;
    }
    unsigned int v49 = v44;
    int v50 = 0;
    if (v13 >= *v10)
    {
      __break(0xC471u);
      JUMPOUT(0x182686960);
    }
    uint64_t v45 = (uint64_t)&v10[v11 - 4];
    ((void (*)(uint64_t *))off_1ECABEF38[v44])(&v45);
    if (v50 != -1) {
      ((void (*)(uint64_t *, double *))off_1ECABED68[v50])(&v45, &v47);
    }
    ++v13;
    v11 += 6;
  }
  while (v7 != v13);
  uint64_t v24 = *v10;
  uint64_t v25 = (_DWORD *)WTF::fastMalloc((WTF *)(24 * v24 + 8));
  uint64_t v27 = v25;
  _DWORD *v25 = v24;
  if (v24)
  {
    unsigned int v28 = v25 + 6;
    uint64_t v29 = 24 * v24;
    double v30 = v10 + 6;
    do
    {
      *((unsigned char *)v28 - 16) = 0;
      uint64_t v26 = v28 - 4;
      _DWORD *v28 = -1;
      uint64_t v31 = *v30;
      if (v31 != -1)
      {
        ((void (*)(double **, _DWORD *, unsigned int *))off_1ECABEE88[v31])(&v46, v26, v30 - 4);
        _DWORD *v28 = v31;
      }
      v28 += 6;
      v30 += 6;
      v29 -= 24;
    }
    while (v29);
  }
  *(void *)(v42 + 8) = v27;
  *(_DWORD *)(v42 + 24) = 8;
  *(_DWORD *)(v42 + 32) = 0;
  if (v44 != -1) {
    ((void (*)(double **, double *))off_1ECABEC60[v44])(&v46, v43);
  }
  uint64_t v32 = *v10;
  if (v32)
  {
    uint64_t v33 = 24 * v32;
    double v34 = v10 + 6;
    do
    {
      uint64_t v26 = v34 - 4;
      uint64_t v35 = *v34;
      if (v35 != -1) {
        ((void (*)(double **, _DWORD *))off_1ECABEC60[v35])(&v46, v26);
      }
      *double v34 = -1;
      v34 += 6;
      v33 -= 24;
    }
    while (v33);
  }
  uint64_t result = WTF::fastFree((WTF *)v10, v26);
  uint64_t v36 = v52;
  if (v52 != -1) {
    return ((uint64_t (*)(void, void))off_1ECABEC60[v36])(&v46, v51);
  }
  return result;
}

__int16 WGSL::constantDeterminant@<H0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2 = (_DWORD *)*a1;
  if (!*(_DWORD *)*a1) {
    goto LABEL_182;
  }
  if (v2[6] != 9) {
    goto LABEL_178;
  }
  uint64_t v3 = *((void *)v2 + 2);
  unsigned int v4 = *(_DWORD *)v3;
  if (!*(_DWORD *)v3)
  {
    __break(0xC471u);
    JUMPOUT(0x182687488);
  }
  int v5 = v2[2];
  int v6 = *(_DWORD *)(v3 + 24);
  if (v6 == 2)
  {
    switch(v5)
    {
      case 4:
        if (v4 <= 4)
        {
          __break(0xC471u);
          JUMPOUT(0x182687548);
        }
        if (*(_DWORD *)(v3 + 120) == 2)
        {
          if (v4 <= 8)
          {
            __break(0xC471u);
            JUMPOUT(0x182687668);
          }
          if (*(_DWORD *)(v3 + 216) == 2)
          {
            if (v4 <= 0xC)
            {
              __break(0xC471u);
              JUMPOUT(0x182687728);
            }
            if (*(_DWORD *)(v3 + 312) == 2
              && *(_DWORD *)(v3 + 48) == 2
              && *(_DWORD *)(v3 + 144) == 2
              && *(_DWORD *)(v3 + 240) == 2)
            {
              if (v4 <= 0xD)
              {
                __break(0xC471u);
                JUMPOUT(0x1826877E8);
              }
              if (*(_DWORD *)(v3 + 336) == 2
                && *(_DWORD *)(v3 + 72) == 2
                && *(_DWORD *)(v3 + 168) == 2
                && *(_DWORD *)(v3 + 264) == 2)
              {
                if (v4 <= 0xE)
                {
                  __break(0xC471u);
                  JUMPOUT(0x182687888);
                }
                if (*(_DWORD *)(v3 + 360) == 2
                  && *(_DWORD *)(v3 + 96) == 2
                  && *(_DWORD *)(v3 + 192) == 2
                  && *(_DWORD *)(v3 + 288) == 2)
                {
                  if (v4 <= 0xF)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x1826878E8);
                  }
                  if (*(_DWORD *)(v3 + 384) == 2)
                  {
                    double v34 = *(double *)(v3 + 32);
                    double v35 = *(double *)(v3 + 128);
                    double v36 = *(double *)(v3 + 224);
                    double v37 = *(double *)(v3 + 320);
                    double v38 = *(double *)(v3 + 56);
                    double v39 = *(double *)(v3 + 152);
                    double v40 = *(double *)(v3 + 248);
                    double v41 = *(double *)(v3 + 344);
                    double v42 = *(double *)(v3 + 80);
                    double v43 = *(double *)(v3 + 176);
                    double v44 = *(double *)(v3 + 272);
                    double v45 = *(double *)(v3 + 368);
                    double v46 = -(v37 * v40);
                    double v47 = -(v36 * v39);
                    _D0 = *(double *)(v3 + 8)
                        * (v36 * v41 * v43
                         + v35 * v40 * v45
                         + v37 * v39 * v44
                         + v46 * v43
                         + v47 * v45
                         + -(v35 * v41) * v44)
                        - (v36 * v41 * v42
                         + v34 * v40 * v45
                         + v37 * v38 * v44
                         + v46 * v42
                         + -(v36 * v38) * v45
                         + -(v34 * v41) * v44)
                        * *(double *)(v3 + 104)
                        + *(double *)(v3 + 200)
                        * (v35 * v41 * v42
                         + v34 * v39 * v45
                         + v37 * v38 * v43
                         + -(v37 * v39) * v42
                         + -(v35 * v38) * v45
                         + -(v34 * v41) * v43)
                        - *(double *)(v3 + 296)
                        * (v35 * v40 * v42
                         + v34 * v39 * v44
                         + v36 * v38 * v43
                         + v47 * v42
                         + -(v35 * v38) * v44
                         + -(v34 * v40) * v43);
                    *(double *)(a2 + 8) = _D0;
                    *(_DWORD *)(a2 + 24) = 2;
                    *(_DWORD *)(a2 + 32) = 0;
                    return LOWORD(_D0);
                  }
                }
              }
            }
          }
        }
        break;
      case 3:
        if (v4 <= 3)
        {
          __break(0xC471u);
          JUMPOUT(0x182687568);
        }
        if (*(_DWORD *)(v3 + 96) == 2)
        {
          if (v4 <= 6)
          {
            __break(0xC471u);
            JUMPOUT(0x182687688);
          }
          if (*(_DWORD *)(v3 + 168) == 2 && *(_DWORD *)(v3 + 48) == 2 && *(_DWORD *)(v3 + 120) == 2)
          {
            if (v4 <= 7)
            {
              __break(0xC471u);
              JUMPOUT(0x182687748);
            }
            if (*(_DWORD *)(v3 + 192) == 2 && *(_DWORD *)(v3 + 72) == 2 && *(_DWORD *)(v3 + 144) == 2)
            {
              if (v4 <= 8)
              {
                __break(0xC471u);
                JUMPOUT(0x182687808);
              }
              if (*(_DWORD *)(v3 + 216) == 2)
              {
                _D0 = *(double *)(v3 + 80) * *(double *)(v3 + 176) * *(double *)(v3 + 56)
                    + *(double *)(v3 + 8) * *(double *)(v3 + 104) * *(double *)(v3 + 200)
                    + *(double *)(v3 + 152) * *(double *)(v3 + 32) * *(double *)(v3 + 128)
                    + -(*(double *)(v3 + 152) * *(double *)(v3 + 104)) * *(double *)(v3 + 56)
                    + -(*(double *)(v3 + 80) * *(double *)(v3 + 32)) * *(double *)(v3 + 200)
                    + -(*(double *)(v3 + 8) * *(double *)(v3 + 176)) * *(double *)(v3 + 128);
                *(double *)(a2 + 8) = _D0;
                *(_DWORD *)(a2 + 24) = 2;
                *(_DWORD *)(a2 + 32) = 0;
                return LOWORD(_D0);
              }
            }
          }
        }
        break;
      case 2:
        if (v4 <= 2)
        {
          __break(0xC471u);
          JUMPOUT(0x1826874C8);
        }
        if (*(_DWORD *)(v3 + 72) == 2 && *(_DWORD *)(v3 + 48) == 2)
        {
          if (v4 <= 3)
          {
            __break(0xC471u);
            JUMPOUT(0x1826875E8);
          }
          if (*(_DWORD *)(v3 + 96) == 2)
          {
            _D0 = *(double *)(v3 + 8) * *(double *)(v3 + 80) - *(double *)(v3 + 56) * *(double *)(v3 + 32);
            *(double *)(a2 + 8) = _D0;
            *(_DWORD *)(a2 + 24) = 2;
            *(_DWORD *)(a2 + 32) = 0;
            return LOWORD(_D0);
          }
        }
        break;
      default:
        __break(0xC471u);
        JUMPOUT(0x18268796CLL);
    }
    goto LABEL_178;
  }
  if (v6 == 1)
  {
    switch(v5)
    {
      case 4:
        if (v4 <= 4)
        {
          __break(0xC471u);
          JUMPOUT(0x182687588);
        }
        if (*(_DWORD *)(v3 + 120) != 1) {
          goto LABEL_178;
        }
        if (v4 <= 8)
        {
          __break(0xC471u);
          JUMPOUT(0x1826876A8);
        }
        if (*(_DWORD *)(v3 + 216) != 1) {
          goto LABEL_178;
        }
        if (v4 <= 0xC)
        {
          __break(0xC471u);
          JUMPOUT(0x182687768);
        }
        if (*(_DWORD *)(v3 + 312) != 1
          || *(_DWORD *)(v3 + 48) != 1
          || *(_DWORD *)(v3 + 144) != 1
          || *(_DWORD *)(v3 + 240) != 1)
        {
          goto LABEL_178;
        }
        if (v4 <= 0xD)
        {
          __break(0xC471u);
          JUMPOUT(0x182687828);
        }
        if (*(_DWORD *)(v3 + 336) != 1
          || *(_DWORD *)(v3 + 72) != 1
          || *(_DWORD *)(v3 + 168) != 1
          || *(_DWORD *)(v3 + 264) != 1)
        {
          goto LABEL_178;
        }
        if (v4 <= 0xE)
        {
          __break(0xC471u);
          JUMPOUT(0x1826878A8);
        }
        if (*(_DWORD *)(v3 + 360) != 1
          || *(_DWORD *)(v3 + 96) != 1
          || *(_DWORD *)(v3 + 192) != 1
          || *(_DWORD *)(v3 + 288) != 1)
        {
          goto LABEL_178;
        }
        if (v4 <= 0xF)
        {
          __break(0xC471u);
          JUMPOUT(0x182687908);
        }
        if (*(_DWORD *)(v3 + 384) != 1) {
          goto LABEL_178;
        }
        _H1 = *(_WORD *)(v3 + 8);
        _H2 = *(_WORD *)(v3 + 104);
        _H3 = *(_WORD *)(v3 + 200);
        _H0 = *(_WORD *)(v3 + 296);
        _H4 = *(_WORD *)(v3 + 32);
        _H5 = *(_WORD *)(v3 + 128);
        _H6 = *(_WORD *)(v3 + 224);
        _H7 = *(_WORD *)(v3 + 320);
        _H16 = *(_WORD *)(v3 + 56);
        _H17 = *(_WORD *)(v3 + 152);
        _H18 = *(_WORD *)(v3 + 248);
        _H19 = *(_WORD *)(v3 + 344);
        _H20 = *(_WORD *)(v3 + 80);
        _H21 = *(_WORD *)(v3 + 176);
        _H22 = *(_WORD *)(v3 + 272);
        _H23 = *(_WORD *)(v3 + 368);
        __asm
        {
          FCVT            S1, H1
          FCVT            S5, H5
          FCVT            S18, H18
        }
        float v67 = _S5 * _S18;
        __asm
        {
          FCVT            S23, H23
          FCVT            S6, H6
          FCVT            S19, H19
          FCVT            S21, H21
          FCVT            S7, H7
          FCVT            S17, H17
          FCVT            S22, H22
        }
        float v75 = -(float)(_S7 * _S18);
        float v76 = -(float)(_S6 * _S17);
        _S26 = (float)((float)((float)((float)((float)((float)(_S6 * _S19) * _S21) + (float)((float)(_S5 * _S18) * _S23))
                                     + (float)((float)(_S7 * _S17) * _S22))
                             + (float)(v75 * _S21))
                     + (float)(v76 * _S23))
             + (float)((float)-(float)(_S5 * _S19) * _S22);
        __asm
        {
          FCVT            H26, S26
          FCVT            S26, H26
          FCVT            S2, H2
          FCVT            S4, H4
          FCVT            S20, H20
          FCVT            S16, H16
        }
        float v83 = (float)((float)((float)((float)((float)(_S6 * _S19) * _S20) + (float)((float)(_S4 * _S18) * _S23))
                            + (float)((float)(_S7 * _S16) * _S22))
                    + (float)(v75 * _S20))
            + (float)((float)-(float)(_S6 * _S16) * _S23);
        float v84 = -(float)(_S4 * _S19);
        _S25 = v83 + (float)(v84 * _S22);
        __asm
        {
          FCVT            H25, S25
          FCVT            S25, H25
        }
        float v87 = (float)(_S1 * _S26) - (float)(_S2 * _S25);
        __asm { FCVT            S2, H3 }
        float v89 = (float)((float)((float)(_S5 * _S19) * _S20) + (float)((float)(_S4 * _S17) * _S23))
            + (float)((float)(_S7 * _S16) * _S21);
        float v90 = -(float)(_S5 * _S16);
        _S7 = (float)((float)(v89 + (float)((float)-(float)(_S7 * _S17) * _S20)) + (float)(v90 * _S23))
            + (float)(v84 * _S21);
        __asm
        {
          FCVT            H7, S7
          FCVT            S7, H7
        }
        float v93 = v87 + (float)(_S2 * _S7);
        __asm { FCVT            S0, H0 }
        _S2 = (float)((float)((float)((float)((float)(v67 * _S20) + (float)((float)(_S4 * _S17) * _S22))
                                    + (float)((float)(_S6 * _S16) * _S21))
                            + (float)(v76 * _S20))
                    + (float)(v90 * _S22))
            + (float)((float)-(float)(_S4 * _S18) * _S21);
        __asm
        {
          FCVT            H2, S2
          FCVT            S2, H2
        }
        *(float *)&_D0 = v93 - (float)(_S0 * _S2);
        goto LABEL_139;
      case 3:
        if (v4 <= 3)
        {
          __break(0xC471u);
          JUMPOUT(0x1826875A8);
        }
        if (*(_DWORD *)(v3 + 96) != 1) {
          goto LABEL_178;
        }
        if (v4 <= 6)
        {
          __break(0xC471u);
          JUMPOUT(0x1826876C8);
        }
        if (*(_DWORD *)(v3 + 168) != 1 || *(_DWORD *)(v3 + 48) != 1 || *(_DWORD *)(v3 + 120) != 1) {
          goto LABEL_178;
        }
        if (v4 <= 7)
        {
          __break(0xC471u);
          JUMPOUT(0x182687788);
        }
        if (*(_DWORD *)(v3 + 192) != 1 || *(_DWORD *)(v3 + 72) != 1 || *(_DWORD *)(v3 + 144) != 1) {
          goto LABEL_178;
        }
        if (v4 <= 8)
        {
          __break(0xC471u);
          JUMPOUT(0x182687848);
        }
        if (*(_DWORD *)(v3 + 216) != 1) {
          goto LABEL_178;
        }
        _H0 = *(_WORD *)(v3 + 8);
        _H1 = *(_WORD *)(v3 + 80);
        _H2 = *(_WORD *)(v3 + 152);
        _H3 = *(_WORD *)(v3 + 32);
        _H4 = *(_WORD *)(v3 + 104);
        _H5 = *(_WORD *)(v3 + 176);
        _H6 = *(_WORD *)(v3 + 56);
        _H7 = *(_WORD *)(v3 + 128);
        _H16 = *(_WORD *)(v3 + 200);
        __asm
        {
          FCVT            S0, H0
          FCVT            S4, H4
          FCVT            S16, H16
          FCVT            S1, H1
          FCVT            S5, H5
          FCVT            S6, H6
          FCVT            S2, H2
          FCVT            S3, H3
          FCVT            S7, H7
        }
        *(float *)&_D0 = (float)((float)((float)((float)((float)((float)(_S1 * _S5) * _S6)
                                                       + (float)((float)(_S0 * _S4) * _S16))
                                               + (float)((float)(_S2 * _S3) * _S7))
                                       + (float)((float)-(float)(_S2 * _S4) * _S6))
                               + (float)((float)-(float)(_S1 * _S3) * _S16))
                       + (float)((float)-(float)(_S0 * _S5) * _S7);
        goto LABEL_139;
      case 2:
        if (v4 <= 2)
        {
          __break(0xC471u);
          JUMPOUT(0x1826874E8);
        }
        if (*(_DWORD *)(v3 + 72) != 1 || *(_DWORD *)(v3 + 48) != 1) {
          goto LABEL_178;
        }
        if (v4 <= 3)
        {
          __break(0xC471u);
          JUMPOUT(0x182687608);
        }
        if (*(_DWORD *)(v3 + 96) != 1) {
          goto LABEL_178;
        }
        _H0 = *(_WORD *)(v3 + 8);
        _H1 = *(_WORD *)(v3 + 56);
        _H2 = *(_WORD *)(v3 + 32);
        _H3 = *(_WORD *)(v3 + 80);
        __asm
        {
          FCVT            S0, H0
          FCVT            S3, H3
          FCVT            S1, H1
          FCVT            S2, H2
        }
        *(float *)&_D0 = (float)(_S0 * _S3) - (float)(_S1 * _S2);
LABEL_139:
        __asm { FCVT            H0, S0 }
        *(_WORD *)(a2 + 8) = LOWORD(_D0);
        *(_DWORD *)(a2 + 24) = 1;
        *(_DWORD *)(a2 + 32) = 0;
        return LOWORD(_D0);
    }
LABEL_182:
    __break(0xC471u);
    JUMPOUT(0x182687468);
  }
  if (v6)
  {
LABEL_179:
    __break(0xC471u);
    JUMPOUT(0x18268792CLL);
  }
  if (v5 == 4)
  {
    if (v4 <= 4)
    {
      __break(0xC471u);
      JUMPOUT(0x182687508);
    }
    if (!*(_DWORD *)(v3 + 120))
    {
      if (v4 <= 8)
      {
        __break(0xC471u);
        JUMPOUT(0x182687628);
      }
      if (!*(_DWORD *)(v3 + 216))
      {
        if (v4 <= 0xC)
        {
          __break(0xC471u);
          JUMPOUT(0x1826876E8);
        }
        if (!*(_DWORD *)(v3 + 312) && !*(_DWORD *)(v3 + 48) && !*(_DWORD *)(v3 + 144) && !*(_DWORD *)(v3 + 240))
        {
          if (v4 <= 0xD)
          {
            __break(0xC471u);
            JUMPOUT(0x1826877A8);
          }
          if (!*(_DWORD *)(v3 + 336) && !*(_DWORD *)(v3 + 72) && !*(_DWORD *)(v3 + 168) && !*(_DWORD *)(v3 + 264))
          {
            if (v4 <= 0xE)
            {
              __break(0xC471u);
              JUMPOUT(0x182687868);
            }
            if (!*(_DWORD *)(v3 + 360) && !*(_DWORD *)(v3 + 96) && !*(_DWORD *)(v3 + 192) && !*(_DWORD *)(v3 + 288))
            {
              if (v4 <= 0xF)
              {
                __break(0xC471u);
                JUMPOUT(0x1826878C8);
              }
              if (!*(_DWORD *)(v3 + 384))
              {
                float v20 = *(float *)(v3 + 32);
                float v21 = *(float *)(v3 + 128);
                float v22 = *(float *)(v3 + 224);
                float v23 = *(float *)(v3 + 320);
                float v24 = *(float *)(v3 + 56);
                float v25 = *(float *)(v3 + 152);
                float v26 = *(float *)(v3 + 248);
                float v27 = *(float *)(v3 + 344);
                float v28 = *(float *)(v3 + 80);
                float v29 = *(float *)(v3 + 176);
                float v30 = *(float *)(v3 + 272);
                float v31 = *(float *)(v3 + 368);
                float v32 = -(float)(v23 * v26);
                float v33 = -(float)(v22 * v25);
                *(float *)&_D0 = (float)((float)((float)(*(float *)(v3 + 8)
                                                       * (float)((float)((float)((float)((float)((float)((float)(v22 * v27) * v29)
                                                                                               + (float)((float)(v21 * v26) * v31))
                                                                                       + (float)((float)(v23 * v25) * v30))
                                                                               + (float)(v32 * v29))
                                                                       + (float)(v33 * v31))
                                                               + (float)((float)-(float)(v21 * v27) * v30)))
                                               - (float)((float)((float)((float)((float)((float)((float)((float)(v22 * v27) * v28)
                                                                                               + (float)((float)(v20 * v26) * v31))
                                                                                       + (float)((float)(v23 * v24) * v30))
                                                                               + (float)(v32 * v28))
                                                                       + (float)((float)-(float)(v22 * v24) * v31))
                                                               + (float)((float)-(float)(v20 * v27) * v30))
                                                       * *(float *)(v3 + 104)))
                                       + (float)(*(float *)(v3 + 200)
                                               * (float)((float)((float)((float)((float)((float)((float)(v21 * v27) * v28)
                                                                                       + (float)((float)(v20 * v25) * v31))
                                                                               + (float)((float)(v23 * v24) * v29))
                                                                       + (float)((float)-(float)(v23 * v25) * v28))
                                                               + (float)((float)-(float)(v21 * v24) * v31))
                                                       + (float)((float)-(float)(v20 * v27) * v29))))
                               - (float)(*(float *)(v3 + 296)
                                       * (float)((float)((float)((float)((float)((float)((float)(v21 * v26) * v28)
                                                                               + (float)((float)(v20 * v25) * v30))
                                                                       + (float)((float)(v22 * v24) * v29))
                                                               + (float)(v33 * v28))
                                                       + (float)((float)-(float)(v21 * v24) * v30))
                                               + (float)((float)-(float)(v20 * v26) * v29)));
                *(_DWORD *)(a2 + 8) = LODWORD(_D0);
                *(_DWORD *)(a2 + 24) = 0;
                *(_DWORD *)(a2 + 32) = 0;
                return LOWORD(_D0);
              }
            }
          }
        }
      }
    }
    goto LABEL_178;
  }
  if (v5 == 3)
  {
    if (v4 <= 3)
    {
      __break(0xC471u);
      JUMPOUT(0x182687528);
    }
    if (!*(_DWORD *)(v3 + 96))
    {
      if (v4 <= 6)
      {
        __break(0xC471u);
        JUMPOUT(0x182687648);
      }
      if (!*(_DWORD *)(v3 + 168) && !*(_DWORD *)(v3 + 48) && !*(_DWORD *)(v3 + 120))
      {
        if (v4 <= 7)
        {
          __break(0xC471u);
          JUMPOUT(0x182687708);
        }
        if (!*(_DWORD *)(v3 + 192) && !*(_DWORD *)(v3 + 72) && !*(_DWORD *)(v3 + 144))
        {
          if (v4 <= 8)
          {
            __break(0xC471u);
            JUMPOUT(0x1826877C8);
          }
          if (!*(_DWORD *)(v3 + 216))
          {
            *(float *)&_D0 = (float)((float)((float)((float)((float)((float)(*(float *)(v3 + 80) * *(float *)(v3 + 176))
                                                                   * *(float *)(v3 + 56))
                                                           + (float)((float)(*(float *)(v3 + 8) * *(float *)(v3 + 104))
                                                                   * *(float *)(v3 + 200)))
                                                   + (float)((float)(*(float *)(v3 + 152) * *(float *)(v3 + 32))
                                                           * *(float *)(v3 + 128)))
                                           + (float)((float)-(float)(*(float *)(v3 + 152) * *(float *)(v3 + 104))
                                                   * *(float *)(v3 + 56)))
                                   + (float)((float)-(float)(*(float *)(v3 + 80) * *(float *)(v3 + 32))
                                           * *(float *)(v3 + 200)))
                           + (float)((float)-(float)(*(float *)(v3 + 8) * *(float *)(v3 + 176)) * *(float *)(v3 + 128));
            *(_DWORD *)(a2 + 8) = LODWORD(_D0);
            *(_DWORD *)(a2 + 24) = 0;
            *(_DWORD *)(a2 + 32) = 0;
            return LOWORD(_D0);
          }
        }
      }
    }
    goto LABEL_178;
  }
  if (v5 != 2)
  {
    __break(0xC471u);
    JUMPOUT(0x18268794CLL);
  }
  if (v4 <= 2)
  {
    __break(0xC471u);
    JUMPOUT(0x1826874A8);
  }
  if (*(_DWORD *)(v3 + 72) || *(_DWORD *)(v3 + 48)) {
    goto LABEL_178;
  }
  if (v4 <= 3)
  {
    __break(0xC471u);
    JUMPOUT(0x1826875C8);
  }
  if (*(_DWORD *)(v3 + 96))
  {
LABEL_178:
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_179;
  }
  *(float *)&_D0 = (float)(*(float *)(v3 + 8) * *(float *)(v3 + 80))
                 - (float)(*(float *)(v3 + 56) * *(float *)(v3 + 32));
  *(_DWORD *)(a2 + 8) = LODWORD(_D0);
  *(_DWORD *)(a2 + 24) = 0;
  *(_DWORD *)(a2 + 32) = 0;
  return LOWORD(_D0);
}