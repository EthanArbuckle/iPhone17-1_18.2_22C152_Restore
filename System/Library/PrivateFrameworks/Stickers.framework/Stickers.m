id sub_25E3BD314()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Versioning()), sel_init);
  qword_26B388EF8 = (uint64_t)result;
  return result;
}

id static Versioning.shared.getter()
{
  if (qword_26B388F00 != -1) {
    swift_once();
  }
  v0 = (void *)qword_26B388EF8;
  return v0;
}

uint64_t sub_25E3BD40C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3BD4A8(a1, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride, a2);
}

uint64_t sub_25E3BD418(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E3BD50C(a1, a2, a3, a4, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride);
}

uint64_t sub_25E3BD424()
{
  return sub_25E3BD574(&OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride);
}

uint64_t sub_25E3BD430(uint64_t a1, char a2)
{
  return sub_25E3BD5C8(a1, a2, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride);
}

uint64_t (*sub_25E3BD43C())()
{
  return j__swift_endAccess;
}

uint64_t sub_25E3BD49C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3BD4A8(a1, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride, a2);
}

uint64_t sub_25E3BD4A8@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 8);
  *(void *)a3 = *(void *)v4;
  *(unsigned char *)(a3 + 8) = v6;
  return result;
}

uint64_t sub_25E3BD500(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E3BD50C(a1, a2, a3, a4, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride);
}

uint64_t sub_25E3BD50C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  char v6 = *((unsigned char *)a1 + 8);
  uint64_t v7 = *a2 + *a5;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v7 = v5;
  *(unsigned char *)(v7 + 8) = v6;
  return result;
}

uint64_t sub_25E3BD568()
{
  return sub_25E3BD574(&OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride);
}

uint64_t sub_25E3BD574(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  return *(void *)v2;
}

uint64_t sub_25E3BD5BC(uint64_t a1, char a2)
{
  return sub_25E3BD5C8(a1, a2, &OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride);
}

uint64_t sub_25E3BD5C8(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = v3 + *a3;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_25E3BD624())()
{
  return j_j__swift_endAccess;
}

id Versioning.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Versioning();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Versioning()
{
  return self;
}

uint64_t method lookup function for Versioning(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Versioning);
}

uint64_t dispatch thunk of Versioning.currentStickerVersionOverride.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of Versioning.currentStickerVersionOverride.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))((*MEMORY[0x263F8EED0] & *v2) + 0x68))(a1, a2 & 1);
}

uint64_t dispatch thunk of Versioning.currentStickerVersionOverride.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Versioning.currentStickerRepresentationVersionOverride.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Versioning.currentStickerRepresentationVersionOverride.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))((*MEMORY[0x263F8EED0] & *v2) + 0x80))(a1, a2 & 1);
}

uint64_t dispatch thunk of Versioning.currentStickerRepresentationVersionOverride.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

void type metadata accessor for Name(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_25E3BD898(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E3BD8B8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_25E3BD8F4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_25E3BD93C(uint64_t a1, uint64_t a2)
{
  return sub_25E3BDC60(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_25E3BD954(uint64_t a1, id *a2)
{
  uint64_t result = sub_25E4258D0();
  *a2 = 0;
  return result;
}

uint64_t sub_25E3BD9CC(uint64_t a1, id *a2)
{
  char v3 = sub_25E4258E0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25E3BDA4C@<X0>(uint64_t *a1@<X8>)
{
  sub_25E4258F0();
  uint64_t v2 = sub_25E4258C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25E3BDA90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25E4258C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25E3BDAD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E4258F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25E3BDB04(uint64_t a1)
{
  uint64_t v2 = sub_25E3BDC04(&qword_26A6ED670);
  uint64_t v3 = sub_25E3BDC04(&qword_26A6ED678);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25E3BDB9C()
{
  return sub_25E3BDC04(&qword_26A6ED658);
}

uint64_t sub_25E3BDBD0()
{
  return sub_25E3BDC04(&qword_26A6ED660);
}

uint64_t sub_25E3BDC04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Name(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E3BDC48(uint64_t a1, uint64_t a2)
{
  return sub_25E3BDC60(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_25E3BDC60(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_25E4258F0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25E3BDCA4()
{
  sub_25E4258F0();
  sub_25E425960();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E3BDCF8()
{
  sub_25E4258F0();
  sub_25E426220();
  sub_25E425960();
  uint64_t v0 = sub_25E426240();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25E3BDD6C()
{
  uint64_t v0 = sub_25E4258F0();
  uint64_t v2 = v1;
  if (v0 == sub_25E4258F0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25E426160();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_25E3BDDF8()
{
  return sub_25E3BDC04(&qword_26A6ED668);
}

id static ManagedRepresentation.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v1 = (void *)sub_25E4258C0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_25E3BDE9C()
{
  return MEMORY[0x263F8D1F8];
}

void sub_25E3BDEA8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_data);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_25E4253D0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_25E3BDF10(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_25E4253B0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setData_);
}

uint64_t sub_25E3BDF88@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  if (v3)
  {
    id v4 = v3;
    sub_25E4254C0();

    uint64_t v5 = sub_25E4254F0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_25E4254F0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

void sub_25E3BE050(uint64_t a1, void **a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3BE5EC(a1, (uint64_t)v5);
  unint64_t v6 = *a2;
  uint64_t v7 = sub_25E4254F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    uint64_t v9 = (void *)sub_25E4254A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  objc_msgSend(v6, sel_setIdentifier_, v9);
}

void sub_25E3BE17C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_25E4258F0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_25E3BE1E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v7 = sub_25E4258C0();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  [v6 *a5];
}

uint64_t sub_25E3BE250@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedRepresentation();
  uint64_t result = sub_25E425EC0();
  *a1 = result;
  return result;
}

char *keypath_get_selector_isPreferred()
{
  return sel_isPreferred;
}

id sub_25E3BE2A0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isPreferred);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E3BE2D4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsPreferred_, *a1);
}

char *keypath_get_selector_index()
{
  return sel_index;
}

id sub_25E3BE2F4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_25E3BE328(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

char *keypath_get_selector_byteCount()
{
  return sel_byteCount;
}

id sub_25E3BE348@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_byteCount);
  *a2 = result;
  return result;
}

id sub_25E3BE37C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setByteCount_, *a1);
}

char *keypath_get_selector_data()
{
  return sel_data;
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

char *keypath_get_selector_role()
{
  return sel_role;
}

void sub_25E3BE3C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E3BE3E4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_size_h()
{
  return sel_size_h;
}

id sub_25E3BE410@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_size_h);
  *a2 = v4;
  return result;
}

id sub_25E3BE444(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSize_h_, *a1);
}

char *keypath_get_selector_size_w()
{
  return sel_size_w;
}

id sub_25E3BE464@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_size_w);
  *a2 = v4;
  return result;
}

id sub_25E3BE498(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSize_w_, *a1);
}

void *keypath_get_selector_uti()
{
  return &sel_uti;
}

void sub_25E3BE4B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E3BE4D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_version()
{
  return sel_version;
}

id sub_25E3BE504@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_version);
  *a2 = result;
  return result;
}

id sub_25E3BE538(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

char *keypath_get_selector_sticker()
{
  return sel_sticker;
}

id sub_25E3BE558@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sticker);
  *a2 = result;
  return result;
}

id sub_25E3BE594(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSticker_, *a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25E3BE5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E3BE654()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26B388F50);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B388F50);
  return sub_25E425690();
}

uint64_t sub_25E3BE6CC()
{
  uint64_t v0 = sub_25E4256B0();
  __swift_allocate_value_buffer(v0, qword_26B388E68);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_26B388E68) = 5;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);
  return v1();
}

uint64_t sub_25E3BE75C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v17 = a2;
  uint64_t v5 = sub_25E425C50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25E4256F0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_25E425C40();
  MEMORY[0x270FA5388](v10 - 8);
  v11 = (int *)type metadata accessor for StickerContainer(0);
  uint64_t v12 = v11[5];
  *(void *)(a3 + v12) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33690]), sel_init);
  uint64_t v13 = a3 + v11[7];
  *(_OWORD *)uint64_t v13 = xmmword_25E4275F0;
  *(unsigned char *)(v13 + 16) = 1;
  uint64_t v14 = v11[8];
  sub_25E3CE930(0, &qword_26B388D38);
  sub_25E425C30();
  sub_25E4256E0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F130], v5);
  *(void *)(a3 + v14) = sub_25E425C70();
  uint64_t result = sub_25E3CE96C(a1, a3, type metadata accessor for CoreDataDataMapper.StoreType);
  *(unsigned char *)(a3 + v11[6]) = v17;
  return result;
}

uint64_t sub_25E3BE9A8@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389340);
  MEMORY[0x270FA5388]();
  id v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25E4252B0();
  v14[0] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25E425390();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v11(v6, *MEMORY[0x263F06E30], v3);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v12(v2, 1, 1, v7);
  sub_25E425380();
  v11(v6, *MEMORY[0x263F06E38], v14[0]);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  v12(v2, 0, 1, v7);
  sub_25E425380();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_25E3BEC40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v83 = a1;
  v69 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v4 - 8);
  v68 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25E425710();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v78 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v80 = (char *)&v68 - v9;
  uint64_t v77 = sub_25E4256D0();
  MEMORY[0x270FA5388](v77);
  v75 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StickerContainer(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v79 = v11 - 8;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11 - 8);
  v15 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int v17 = (char *)&v68 - v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_25E427600;
  uint64_t v70 = v18 + 16;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  v71 = (void **)(v19 + 16);
  dispatch_group_t v72 = dispatch_group_create();
  v73 = type metadata accessor for StickerContainer;
  v74 = v17;
  sub_25E3C9F8C(v3, (uint64_t)v17, type metadata accessor for StickerContainer);
  sub_25E3C9F8C((uint64_t)v17, (uint64_t)v15, type metadata accessor for StickerContainer);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  sub_25E3CE96C((uint64_t)v15, v24 + v20, type metadata accessor for StickerContainer);
  *(void *)(v24 + v21) = v18;
  v25 = (uint64_t *)(v24 + v22);
  uint64_t v26 = v76;
  uint64_t *v25 = v83;
  v25[1] = v26;
  *(void *)(v24 + v23) = v19;
  dispatch_group_t v27 = v72;
  *(void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v72;
  aBlock[4] = sub_25E3CEA84;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C3F30;
  aBlock[3] = &block_descriptor_133;
  _Block_copy(aBlock);
  v84 = (void *)MEMORY[0x263F8EE78];
  sub_25E3CA200(&qword_26B388E60, MEMORY[0x263F8F030]);
  uint64_t v83 = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E90);
  sub_25E3CC5A8();
  v29 = v78;
  sub_25E425DF0();
  sub_25E425740();
  swift_allocObject();
  sub_25E425720();
  sub_25E3CA100((uint64_t)v74, v73);
  swift_release();
  dispatch_group_enter(v28);
  sub_25E425C60();
  sub_25E425700();
  if (qword_26B388E88 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_25E4256B0();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_26B388E68);
  v32 = v80;
  MEMORY[0x2611D64A0](v29, v31);
  uint64_t v33 = v82;
  v34 = *(void (**)(char *, uint64_t))(v81 + 8);
  v34(v29, v82);
  sub_25E425C20();
  v34(v32, v33);
  if (sub_25E4256C0())
  {
    sub_25E425730();
    sub_25E3CC3F0();
    swift_allocError();
    char v36 = 15;
LABEL_30:
    char *v35 = v36;
    goto LABEL_31;
  }
  v37 = v71;
  swift_beginAccess();
  v38 = *v37;
  if (*v37)
  {
    v84 = *v37;
    id v39 = v38;
    id v40 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    if (swift_dynamicCast())
    {
      if (v86 == 11)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v41 = sub_25E4256A0();
        __swift_project_value_buffer(v41, (uint64_t)qword_26B388F50);
        v42 = sub_25E425680();
        os_log_type_t v43 = sub_25E425BF0();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v44 = 0;
          _os_log_impl(&dword_25E3BB000, v42, v43, "Cannot perform a managed object model operation on an un-initialized persistence container.", v44, 2u);
          MEMORY[0x2611D77B0](v44, -1, -1);
        }

        uint64_t v45 = sub_25E425B50();
        uint64_t v46 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v68, 1, 1, v45);
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = 0;
        *(void *)(v47 + 24) = 0;
        v48 = &unk_26A6ED820;
LABEL_20:
        sub_25E3C4014(v46, (uint64_t)v48, v47);
        swift_release();
        sub_25E3CE8D4(v46, &qword_26B388FD0);
        goto LABEL_31;
      }
      goto LABEL_31;
    }
    v84 = v38;
    id v49 = v38;
    if (swift_dynamicCast())
    {
      if ((v86 & 0xFE) == 2)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v50 = sub_25E4256A0();
        __swift_project_value_buffer(v50, (uint64_t)qword_26B388F50);
        v51 = sub_25E425680();
        os_log_type_t v52 = sub_25E425C00();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v53 = 0;
          _os_log_impl(&dword_25E3BB000, v51, v52, "Potential corruption detected. Will perform in depth corruption check.", v53, 2u);
          MEMORY[0x2611D77B0](v53, -1, -1);
        }

        uint64_t v54 = sub_25E425B50();
        uint64_t v46 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v68, 1, 1, v54);
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = 0;
        *(void *)(v47 + 24) = 0;
        v48 = &unk_26A6ED818;
        goto LABEL_20;
      }
LABEL_31:
      swift_willThrow();
      swift_release();
      swift_release();

      swift_release();
      return;
    }
    v55 = (void *)sub_25E425280();
    BOOL v56 = sub_25E3F0DF8();

    if (v56)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_25E4256A0();
      __swift_project_value_buffer(v57, (uint64_t)qword_26B388F50);
      v58 = sub_25E425680();
      os_log_type_t v59 = sub_25E425BF0();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_25E3BB000, v58, v59, "Stickers database is corrupt. Will attempt remediation.", v60, 2u);
        MEMORY[0x2611D77B0](v60, -1, -1);
      }

      id v61 = objc_msgSend(self, sel_standardUserDefaults);
      v62 = (void *)sub_25E4258C0();
      objc_msgSend(v61, sel_setBool_forKey_, 1, v62);

      sub_25E3CC3F0();
      v63 = (void *)swift_allocError();
      unsigned char *v64 = 17;
      sub_25E3CC64C(v63);
    }
  }
  swift_beginAccess();
  unint64_t v65 = *(void *)(v83 + 24);
  if (v65 >> 60 == 11)
  {
    sub_25E3CC3F0();
    swift_allocError();
    char v36 = 16;
    goto LABEL_30;
  }
  uint64_t v66 = *(void *)(v83 + 16);
  sub_25E3CEA9C(v66, *(void *)(v83 + 24));
  swift_release();
  swift_release();
  swift_release();

  v67 = v69;
  uint64_t *v69 = v66;
  v67[1] = v65;
}

uint64_t sub_25E3BF744(uint64_t a1, uint64_t a2)
{
  uint64_t v76 = a1;
  uint64_t v81 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v3 - 8);
  v69 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425710();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  v73 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v80 = (char *)&v68 - v8;
  uint64_t v78 = sub_25E4256D0();
  MEMORY[0x270FA5388](v78);
  uint64_t v77 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StickerContainer(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v79 = v10 - 8;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 256;
  uint64_t v70 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  v71 = (void **)(v18 + 16);
  dispatch_group_t v72 = dispatch_group_create();
  v74 = type metadata accessor for StickerContainer;
  v75 = v16;
  sub_25E3C9F8C(v2, (uint64_t)v16, type metadata accessor for StickerContainer);
  sub_25E3C9F8C((uint64_t)v16, (uint64_t)v14, type metadata accessor for StickerContainer);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v23 + v19;
  v25 = v73;
  sub_25E3CE96C((uint64_t)v14, v24, type metadata accessor for StickerContainer);
  *(void *)(v23 + v20) = v17;
  uint64_t v26 = (void *)(v23 + v21);
  uint64_t v27 = v81;
  *uint64_t v26 = v76;
  v26[1] = v27;
  *(void *)(v23 + v22) = v18;
  dispatch_group_t v28 = v72;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v72;
  uint64_t v29 = v17;
  aBlock[4] = sub_25E3CE68C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C3F30;
  aBlock[3] = &block_descriptor_49;
  _Block_copy(aBlock);
  v84 = (void *)MEMORY[0x263F8EE78];
  sub_25E3CA200(&qword_26B388E60, MEMORY[0x263F8F030]);
  swift_retain();
  swift_retain();
  uint64_t v81 = v18;
  swift_retain();
  uint64_t v30 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E90);
  sub_25E3CC5A8();
  sub_25E425DF0();
  sub_25E425740();
  swift_allocObject();
  sub_25E425720();
  sub_25E3CA100((uint64_t)v75, v74);
  swift_release();
  dispatch_group_enter(v30);
  sub_25E425C60();
  sub_25E425700();
  if (qword_26B388E88 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_25E4256B0();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_26B388E68);
  uint64_t v33 = v80;
  MEMORY[0x2611D64A0](v25, v32);
  uint64_t v34 = v83;
  v35 = *(void (**)(char *, uint64_t))(v82 + 8);
  v35(v25, v83);
  sub_25E425C20();
  v35(v33, v34);
  if (sub_25E4256C0())
  {
    sub_25E425730();
    sub_25E3CC3F0();
    swift_allocError();
    char v37 = 15;
LABEL_30:
    *char v36 = v37;
    goto LABEL_31;
  }
  v38 = v71;
  swift_beginAccess();
  id v39 = *v38;
  if (*v38)
  {
    v84 = *v38;
    id v40 = v39;
    id v41 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    if (swift_dynamicCast())
    {
      if (v86 == 11)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_25E4256A0();
        __swift_project_value_buffer(v42, (uint64_t)qword_26B388F50);
        os_log_type_t v43 = sub_25E425680();
        os_log_type_t v44 = sub_25E425BF0();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl(&dword_25E3BB000, v43, v44, "Cannot perform a managed object model operation on an un-initialized persistence container.", v45, 2u);
          MEMORY[0x2611D77B0](v45, -1, -1);
        }

        uint64_t v46 = sub_25E425B50();
        uint64_t v47 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v69, 1, 1, v46);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = 0;
        *(void *)(v48 + 24) = 0;
        id v49 = &unk_26A6ED7D0;
LABEL_20:
        sub_25E3C4014(v47, (uint64_t)v49, v48);
        swift_release();
        sub_25E3CE8D4(v47, &qword_26B388FD0);
        goto LABEL_31;
      }
      goto LABEL_31;
    }
    v84 = v39;
    id v50 = v39;
    if (swift_dynamicCast())
    {
      if ((v86 & 0xFE) == 2)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v51 = sub_25E4256A0();
        __swift_project_value_buffer(v51, (uint64_t)qword_26B388F50);
        os_log_type_t v52 = sub_25E425680();
        os_log_type_t v53 = sub_25E425C00();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v54 = 0;
          _os_log_impl(&dword_25E3BB000, v52, v53, "Potential corruption detected. Will perform in depth corruption check.", v54, 2u);
          MEMORY[0x2611D77B0](v54, -1, -1);
        }

        uint64_t v55 = sub_25E425B50();
        uint64_t v47 = (uint64_t)v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v69, 1, 1, v55);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = 0;
        *(void *)(v48 + 24) = 0;
        id v49 = &unk_26A6ED7C8;
        goto LABEL_20;
      }
LABEL_31:
      swift_willThrow();
      swift_release();
      swift_release();

      return swift_release();
    }
    BOOL v56 = (void *)sub_25E425280();
    BOOL v57 = sub_25E3F0DF8();

    if (v57)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_25E4256A0();
      __swift_project_value_buffer(v58, (uint64_t)qword_26B388F50);
      os_log_type_t v59 = sub_25E425680();
      os_log_type_t v60 = sub_25E425BF0();
      if (os_log_type_enabled(v59, v60))
      {
        id v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v61 = 0;
        _os_log_impl(&dword_25E3BB000, v59, v60, "Stickers database is corrupt. Will attempt remediation.", v61, 2u);
        MEMORY[0x2611D77B0](v61, -1, -1);
      }

      id v62 = objc_msgSend(self, sel_standardUserDefaults);
      v63 = (void *)sub_25E4258C0();
      objc_msgSend(v62, sel_setBool_forKey_, 1, v63);

      sub_25E3CC3F0();
      v64 = (void *)swift_allocError();
      *unint64_t v65 = 17;
      sub_25E3CC64C(v64);
    }
  }
  swift_beginAccess();
  if (*(unsigned char *)(v29 + 17))
  {
    sub_25E3CC3F0();
    swift_allocError();
    char v37 = 16;
    goto LABEL_30;
  }
  char v67 = *(unsigned char *)(v29 + 16);
  swift_release();
  swift_release();
  swift_release();

  return v67 & 1;
}

uint64_t sub_25E3C0210(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = a2;
  uint64_t v78 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v3 - 8);
  v64 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425710();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  v73 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v75 = (char *)&v63 - v8;
  uint64_t v72 = sub_25E4256D0();
  MEMORY[0x270FA5388](v72);
  v71 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StickerContainer(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v74 = v10 - 8;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v65 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  uint64_t v66 = v18 + 16;
  dispatch_group_t v67 = dispatch_group_create();
  uint64_t v68 = type metadata accessor for StickerContainer;
  v69 = v16;
  sub_25E3C9F8C(v2, (uint64_t)v16, type metadata accessor for StickerContainer);
  sub_25E3C9F8C((uint64_t)v16, (uint64_t)v14, type metadata accessor for StickerContainer);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_25E3CE96C((uint64_t)v14, v23 + v19, type metadata accessor for StickerContainer);
  *(void *)(v23 + v20) = v17;
  uint64_t v24 = (uint64_t *)(v23 + v21);
  uint64_t v25 = v70;
  *uint64_t v24 = v78;
  v24[1] = v25;
  *(void *)(v23 + v22) = v18;
  dispatch_group_t v26 = v67;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v67;
  aBlock[4] = sub_25E3CE87C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C3F30;
  aBlock[3] = &block_descriptor_109;
  _Block_copy(aBlock);
  uint64_t v79 = (void *)MEMORY[0x263F8EE78];
  sub_25E3CA200(&qword_26B388E60, MEMORY[0x263F8F030]);
  uint64_t v78 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E90);
  sub_25E3CC5A8();
  dispatch_group_t v28 = v73;
  sub_25E425DF0();
  sub_25E425740();
  swift_allocObject();
  sub_25E425720();
  sub_25E3CA100((uint64_t)v69, v68);
  swift_release();
  dispatch_group_enter(v27);
  sub_25E425C60();
  sub_25E425700();
  if (qword_26B388E88 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_25E4256B0();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_26B388E68);
  uint64_t v31 = v75;
  MEMORY[0x2611D64A0](v28, v30);
  uint64_t v32 = v77;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v76 + 8);
  v33(v28, v77);
  uint64_t v34 = sub_25E425C20() & 1;
  v33(v31, v32);
  if (sub_25E4256C0())
  {
    sub_25E425730();
    sub_25E3CC3F0();
    swift_allocError();
    char v36 = 15;
LABEL_30:
    char *v35 = v36;
    goto LABEL_31;
  }
  uint64_t v34 = v66;
  swift_beginAccess();
  char v37 = *(void **)v34;
  if (!*(void *)v34)
  {
LABEL_28:
    swift_beginAccess();
    if ((*(unsigned char *)(v78 + 24) & 1) == 0)
    {
      uint64_t v34 = *(void *)(v78 + 16);
      swift_release();
      swift_release();
      swift_release();

      return v34;
    }
    sub_25E3CC3F0();
    swift_allocError();
    char v36 = 16;
    goto LABEL_30;
  }
  uint64_t v79 = *(void **)v34;
  id v38 = v37;
  id v39 = v37;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
  if (swift_dynamicCast())
  {
    if (v81 == 11)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_25E4256A0();
      __swift_project_value_buffer(v40, (uint64_t)qword_26B388F50);
      id v41 = sub_25E425680();
      os_log_type_t v42 = sub_25E425BF0();
      if (os_log_type_enabled(v41, v42))
      {
        os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v43 = 0;
        _os_log_impl(&dword_25E3BB000, v41, v42, "Cannot perform a managed object model operation on an un-initialized persistence container.", v43, 2u);
        MEMORY[0x2611D77B0](v43, -1, -1);
      }

      uint64_t v44 = sub_25E425B50();
      uint64_t v34 = (uint64_t)v64;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v64, 1, 1, v44);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = 0;
      *(void *)(v45 + 24) = 0;
      uint64_t v46 = &unk_26A6ED808;
LABEL_20:
      sub_25E3C4014(v34, (uint64_t)v46, v45);
      swift_release();
      sub_25E3CE8D4(v34, &qword_26B388FD0);
      goto LABEL_31;
    }
    goto LABEL_31;
  }
  uint64_t v79 = v37;
  id v47 = v37;
  if ((swift_dynamicCast() & 1) == 0)
  {
    os_log_type_t v53 = (void *)sub_25E425280();
    uint64_t v34 = sub_25E3F0DF8();

    if (v34)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_25E4256A0();
      __swift_project_value_buffer(v54, (uint64_t)qword_26B388F50);
      uint64_t v55 = sub_25E425680();
      os_log_type_t v56 = sub_25E425BF0();
      if (os_log_type_enabled(v55, v56))
      {
        BOOL v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v57 = 0;
        _os_log_impl(&dword_25E3BB000, v55, v56, "Stickers database is corrupt. Will attempt remediation.", v57, 2u);
        MEMORY[0x2611D77B0](v57, -1, -1);
      }

      id v58 = objc_msgSend(self, sel_standardUserDefaults);
      os_log_type_t v59 = (void *)sub_25E4258C0();
      objc_msgSend(v58, sel_setBool_forKey_, 1, v59);

      sub_25E3CC3F0();
      os_log_type_t v60 = (void *)swift_allocError();
      *id v61 = 17;
      sub_25E3CC64C(v60);
    }

    goto LABEL_28;
  }
  if ((v81 & 0xFE) == 2)
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_25E4256A0();
    __swift_project_value_buffer(v48, (uint64_t)qword_26B388F50);
    id v49 = sub_25E425680();
    os_log_type_t v50 = sub_25E425C00();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_25E3BB000, v49, v50, "Potential corruption detected. Will perform in depth corruption check.", v51, 2u);
      MEMORY[0x2611D77B0](v51, -1, -1);
    }

    uint64_t v52 = sub_25E425B50();
    uint64_t v34 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v64, 1, 1, v52);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = 0;
    *(void *)(v45 + 24) = 0;
    uint64_t v46 = &unk_26A6ED800;
    goto LABEL_20;
  }
LABEL_31:
  swift_willThrow();
  swift_release();
  swift_release();

  swift_release();
  return v34;
}

uint64_t sub_25E3C0CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = a1;
  uint64_t v78 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v3 - 8);
  dispatch_group_t v67 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425710();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v77 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v79 = (char *)&v66 - v8;
  uint64_t v75 = sub_25E4256D0();
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StickerContainer(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v76 = v10 - 8;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v66 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v68 = (uint64_t *)(v17 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  v69 = (void **)(v18 + 16);
  dispatch_group_t v70 = dispatch_group_create();
  v71 = type metadata accessor for StickerContainer;
  uint64_t v72 = v16;
  sub_25E3C9F8C(v2, (uint64_t)v16, type metadata accessor for StickerContainer);
  sub_25E3C9F8C((uint64_t)v16, (uint64_t)v14, type metadata accessor for StickerContainer);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_25E3CE96C((uint64_t)v14, v23 + v19, type metadata accessor for StickerContainer);
  *(void *)(v23 + v20) = v17;
  uint64_t v24 = (void *)(v23 + v21);
  uint64_t v25 = v78;
  *uint64_t v24 = v73;
  v24[1] = v25;
  *(void *)(v23 + v22) = v18;
  dispatch_group_t v26 = v70;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v70;
  aBlock[4] = sub_25E3CC578;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C3F30;
  aBlock[3] = &block_descriptor;
  _Block_copy(aBlock);
  uint64_t v82 = (void *)MEMORY[0x263F8EE78];
  sub_25E3CA200(&qword_26B388E60, MEMORY[0x263F8F030]);
  swift_retain();
  swift_retain();
  uint64_t v78 = v18;
  swift_retain();
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E90);
  sub_25E3CC5A8();
  sub_25E425DF0();
  sub_25E425740();
  swift_allocObject();
  sub_25E425720();
  sub_25E3CA100((uint64_t)v72, v71);
  swift_release();
  dispatch_group_enter(v27);
  dispatch_group_t v28 = v77;
  sub_25E425C60();
  sub_25E425700();
  if (qword_26B388E88 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_25E4256B0();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_26B388E68);
  uint64_t v31 = v79;
  MEMORY[0x2611D64A0](v28, v30);
  uint64_t v32 = v81;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v80 + 8);
  v33(v28, v81);
  uint64_t v34 = sub_25E425C20() & 1;
  v33(v31, v32);
  if ((sub_25E4256C0() & 1) == 0)
  {
    id v38 = v69;
    swift_beginAccess();
    id v39 = *v38;
    if (*v38)
    {
      uint64_t v82 = *v38;
      id v40 = v39;
      id v41 = v39;
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
      if (swift_dynamicCast())
      {
        if (v84 != 11) {
          goto LABEL_6;
        }
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_25E4256A0();
        __swift_project_value_buffer(v42, (uint64_t)qword_26B388F50);
        os_log_type_t v43 = sub_25E425680();
        os_log_type_t v44 = sub_25E425BF0();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v45 = 0;
          _os_log_impl(&dword_25E3BB000, v43, v44, "Cannot perform a managed object model operation on an un-initialized persistence container.", v45, 2u);
          MEMORY[0x2611D77B0](v45, -1, -1);
        }

        uint64_t v46 = sub_25E425B50();
        uint64_t v34 = (uint64_t)v67;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v67, 1, 1, v46);
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = 0;
        *(void *)(v47 + 24) = 0;
        uint64_t v48 = &unk_26A6ED7A8;
LABEL_23:
        sub_25E3C4014(v34, (uint64_t)v48, v47);
        swift_release();
        sub_25E3CE8D4(v34, &qword_26B388FD0);
        goto LABEL_6;
      }
      uint64_t v82 = v39;
      id v49 = v39;
      if (swift_dynamicCast())
      {
        if ((v84 & 0xFE) != 2) {
          goto LABEL_6;
        }
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v50 = sub_25E4256A0();
        __swift_project_value_buffer(v50, (uint64_t)qword_26B388F50);
        uint64_t v51 = sub_25E425680();
        os_log_type_t v52 = sub_25E425C00();
        if (os_log_type_enabled(v51, v52))
        {
          os_log_type_t v53 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v53 = 0;
          _os_log_impl(&dword_25E3BB000, v51, v52, "Potential corruption detected. Will perform in depth corruption check.", v53, 2u);
          MEMORY[0x2611D77B0](v53, -1, -1);
        }

        uint64_t v54 = sub_25E425B50();
        uint64_t v34 = (uint64_t)v67;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v67, 1, 1, v54);
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = 0;
        *(void *)(v47 + 24) = 0;
        uint64_t v48 = &unk_26A6ED798;
        goto LABEL_23;
      }
      uint64_t v55 = (void *)sub_25E425280();
      BOOL v56 = sub_25E3F0DF8();

      if (v56)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_25E4256A0();
        __swift_project_value_buffer(v57, (uint64_t)qword_26B388F50);
        id v58 = sub_25E425680();
        os_log_type_t v59 = sub_25E425BF0();
        if (os_log_type_enabled(v58, v59))
        {
          os_log_type_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v60 = 0;
          _os_log_impl(&dword_25E3BB000, v58, v59, "Stickers database is corrupt. Will attempt remediation.", v60, 2u);
          MEMORY[0x2611D77B0](v60, -1, -1);
        }

        id v61 = objc_msgSend(self, sel_standardUserDefaults);
        id v62 = (void *)sub_25E4258C0();
        objc_msgSend(v61, sel_setBool_forKey_, 1, v62);

        sub_25E3CC3F0();
        uint64_t v63 = (void *)swift_allocError();
        unsigned char *v64 = 17;
        sub_25E3CC64C(v63);
      }
    }
    uint64_t v65 = v68;
    swift_beginAccess();
    uint64_t v34 = *v65;
    if (v34)
    {
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      swift_release();

      return v34;
    }
    sub_25E3CC3F0();
    swift_allocError();
    char v36 = 16;
    goto LABEL_5;
  }
  sub_25E425730();
  sub_25E3CC3F0();
  swift_allocError();
  char v36 = 15;
LABEL_5:
  char *v35 = v36;
LABEL_6:
  swift_willThrow();
  swift_release();
  swift_release();

  swift_release();
  return v34;
}

uint64_t sub_25E3C17BC(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v79 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v68 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425710();
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v78 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v80 = (char *)&v67 - v8;
  uint64_t v76 = sub_25E4256D0();
  MEMORY[0x270FA5388](v76);
  uint64_t v75 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StickerContainer(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v77 = v10 - 8;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v67 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  v69 = (id *)(v17 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  dispatch_group_t v70 = (void **)(v18 + 16);
  dispatch_group_t v71 = dispatch_group_create();
  uint64_t v72 = type metadata accessor for StickerContainer;
  uint64_t v73 = v16;
  sub_25E3C9F8C(v2, (uint64_t)v16, type metadata accessor for StickerContainer);
  sub_25E3C9F8C((uint64_t)v16, (uint64_t)v14, type metadata accessor for StickerContainer);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_25E3CE96C((uint64_t)v14, v23 + v19, type metadata accessor for StickerContainer);
  *(void *)(v23 + v20) = v17;
  uint64_t v24 = (void *)(v23 + v21);
  uint64_t v25 = v79;
  *uint64_t v24 = v74;
  v24[1] = v25;
  *(void *)(v23 + v22) = v18;
  dispatch_group_t v26 = v71;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v71;
  aBlock[4] = sub_25E3CE850;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C3F30;
  aBlock[3] = &block_descriptor_89;
  _Block_copy(aBlock);
  uint64_t v83 = (void *)MEMORY[0x263F8EE78];
  sub_25E3CA200(&qword_26B388E60, MEMORY[0x263F8F030]);
  swift_retain();
  swift_retain();
  uint64_t v79 = v18;
  swift_retain();
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E90);
  sub_25E3CC5A8();
  sub_25E425DF0();
  sub_25E425740();
  swift_allocObject();
  sub_25E425720();
  sub_25E3CA100((uint64_t)v73, v72);
  swift_release();
  dispatch_group_enter(v27);
  dispatch_group_t v28 = v78;
  sub_25E425C60();
  sub_25E425700();
  if (qword_26B388E88 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_25E4256B0();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_26B388E68);
  uint64_t v31 = v80;
  MEMORY[0x2611D64A0](v28, v30);
  uint64_t v32 = v82;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v81 + 8);
  v33(v28, v82);
  sub_25E425C20();
  v33(v31, v32);
  if (sub_25E4256C0())
  {
    sub_25E425730();
    sub_25E3CC3F0();
    swift_allocError();
    char v35 = 15;
LABEL_5:
    *uint64_t v34 = v35;
LABEL_6:
    swift_willThrow();
    swift_release();
    swift_release();

    return swift_release();
  }
  char v37 = v70;
  swift_beginAccess();
  id v38 = *v37;
  if (*v37)
  {
    uint64_t v83 = *v37;
    id v39 = v38;
    id v40 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    if (swift_dynamicCast())
    {
      if (v85 != 11) {
        goto LABEL_6;
      }
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_25E4256A0();
      __swift_project_value_buffer(v41, (uint64_t)qword_26B388F50);
      uint64_t v42 = sub_25E425680();
      os_log_type_t v43 = sub_25E425BF0();
      if (os_log_type_enabled(v42, v43))
      {
        os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v44 = 0;
        _os_log_impl(&dword_25E3BB000, v42, v43, "Cannot perform a managed object model operation on an un-initialized persistence container.", v44, 2u);
        MEMORY[0x2611D77B0](v44, -1, -1);
      }

      uint64_t v45 = sub_25E425B50();
      uint64_t v46 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v68, 1, 1, v45);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = 0;
      *(void *)(v47 + 24) = 0;
      uint64_t v48 = &unk_26A6ED7F8;
LABEL_22:
      sub_25E3C4014(v46, (uint64_t)v48, v47);
      swift_release();
      sub_25E3CE8D4(v46, &qword_26B388FD0);
      goto LABEL_6;
    }
    uint64_t v83 = v38;
    id v49 = v38;
    if (swift_dynamicCast())
    {
      if ((v85 & 0xFE) != 2) {
        goto LABEL_6;
      }
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_25E4256A0();
      __swift_project_value_buffer(v50, (uint64_t)qword_26B388F50);
      uint64_t v51 = sub_25E425680();
      os_log_type_t v52 = sub_25E425C00();
      if (os_log_type_enabled(v51, v52))
      {
        os_log_type_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v53 = 0;
        _os_log_impl(&dword_25E3BB000, v51, v52, "Potential corruption detected. Will perform in depth corruption check.", v53, 2u);
        MEMORY[0x2611D77B0](v53, -1, -1);
      }

      uint64_t v54 = sub_25E425B50();
      uint64_t v46 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v68, 1, 1, v54);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = 0;
      *(void *)(v47 + 24) = 0;
      uint64_t v48 = &unk_26A6ED7F0;
      goto LABEL_22;
    }
    uint64_t v55 = (void *)sub_25E425280();
    BOOL v56 = sub_25E3F0DF8();

    if (v56)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_25E4256A0();
      __swift_project_value_buffer(v57, (uint64_t)qword_26B388F50);
      id v58 = sub_25E425680();
      os_log_type_t v59 = sub_25E425BF0();
      if (os_log_type_enabled(v58, v59))
      {
        os_log_type_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v60 = 0;
        _os_log_impl(&dword_25E3BB000, v58, v59, "Stickers database is corrupt. Will attempt remediation.", v60, 2u);
        MEMORY[0x2611D77B0](v60, -1, -1);
      }

      id v61 = objc_msgSend(self, sel_standardUserDefaults);
      id v62 = (void *)sub_25E4258C0();
      objc_msgSend(v61, sel_setBool_forKey_, 1, v62);

      sub_25E3CC3F0();
      uint64_t v63 = (void *)swift_allocError();
      unsigned char *v64 = 17;
      sub_25E3CC64C(v63);
    }
  }
  uint64_t v65 = v69;
  swift_beginAccess();
  if (!*v65)
  {
    sub_25E3CC3F0();
    swift_allocError();
    char v35 = 16;
    goto LABEL_5;
  }
  id v66 = *v65;
  swift_release();
  swift_release();
  swift_release();

  return (uint64_t)v66;
}

void sub_25E3C2284(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = a1;
  uint64_t v77 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v3 - 8);
  id v66 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425710();
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v76 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v78 = (char *)&v65 - v8;
  uint64_t v74 = sub_25E4256D0();
  MEMORY[0x270FA5388](v74);
  uint64_t v73 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StickerContainer(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v75 = v10 - 8;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 1;
  uint64_t v67 = (unsigned char *)(v17 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  uint64_t v68 = (void **)(v18 + 16);
  dispatch_group_t v69 = dispatch_group_create();
  dispatch_group_t v70 = type metadata accessor for StickerContainer;
  dispatch_group_t v71 = v16;
  sub_25E3C9F8C(v2, (uint64_t)v16, type metadata accessor for StickerContainer);
  sub_25E3C9F8C((uint64_t)v16, (uint64_t)v14, type metadata accessor for StickerContainer);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_25E3CE96C((uint64_t)v14, v23 + v19, type metadata accessor for StickerContainer);
  *(void *)(v23 + v20) = v17;
  uint64_t v24 = (void *)(v23 + v21);
  uint64_t v25 = v77;
  *uint64_t v24 = v72;
  v24[1] = v25;
  *(void *)(v23 + v22) = v18;
  dispatch_group_t v26 = v69;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v69;
  aBlock[4] = sub_25E3CE7CC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C3F30;
  aBlock[3] = &block_descriptor_69;
  _Block_copy(aBlock);
  uint64_t v81 = (void *)MEMORY[0x263F8EE78];
  sub_25E3CA200(&qword_26B388E60, MEMORY[0x263F8F030]);
  swift_retain();
  swift_retain();
  uint64_t v77 = v18;
  swift_retain();
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E90);
  sub_25E3CC5A8();
  sub_25E425DF0();
  sub_25E425740();
  swift_allocObject();
  sub_25E425720();
  sub_25E3CA100((uint64_t)v71, v70);
  swift_release();
  dispatch_group_enter(v27);
  dispatch_group_t v28 = v76;
  sub_25E425C60();
  sub_25E425700();
  if (qword_26B388E88 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_25E4256B0();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_26B388E68);
  uint64_t v31 = v78;
  MEMORY[0x2611D64A0](v28, v30);
  uint64_t v32 = v80;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v79 + 8);
  v33(v28, v80);
  sub_25E425C20();
  v33(v31, v32);
  if (sub_25E4256C0())
  {
    sub_25E425730();
    sub_25E3CC3F0();
    swift_allocError();
    char v35 = 15;
LABEL_30:
    *uint64_t v34 = v35;
    goto LABEL_31;
  }
  char v36 = v68;
  swift_beginAccess();
  char v37 = *v36;
  if (*v36)
  {
    uint64_t v81 = *v36;
    id v38 = v37;
    id v39 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    if (swift_dynamicCast())
    {
      if (v83 == 11)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_25E4256A0();
        __swift_project_value_buffer(v40, (uint64_t)qword_26B388F50);
        uint64_t v41 = sub_25E425680();
        os_log_type_t v42 = sub_25E425BF0();
        if (os_log_type_enabled(v41, v42))
        {
          os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v43 = 0;
          _os_log_impl(&dword_25E3BB000, v41, v42, "Cannot perform a managed object model operation on an un-initialized persistence container.", v43, 2u);
          MEMORY[0x2611D77B0](v43, -1, -1);
        }

        uint64_t v44 = sub_25E425B50();
        uint64_t v45 = (uint64_t)v66;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v66, 1, 1, v44);
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = 0;
        *(void *)(v46 + 24) = 0;
        uint64_t v47 = &unk_26A6ED7E8;
LABEL_20:
        sub_25E3C4014(v45, (uint64_t)v47, v46);
        swift_release();
        sub_25E3CE8D4(v45, &qword_26B388FD0);
        goto LABEL_31;
      }
      goto LABEL_31;
    }
    uint64_t v81 = v37;
    id v48 = v37;
    if (swift_dynamicCast())
    {
      if ((v83 & 0xFE) == 2)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_25E4256A0();
        __swift_project_value_buffer(v49, (uint64_t)qword_26B388F50);
        uint64_t v50 = sub_25E425680();
        os_log_type_t v51 = sub_25E425C00();
        if (os_log_type_enabled(v50, v51))
        {
          os_log_type_t v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v52 = 0;
          _os_log_impl(&dword_25E3BB000, v50, v51, "Potential corruption detected. Will perform in depth corruption check.", v52, 2u);
          MEMORY[0x2611D77B0](v52, -1, -1);
        }

        uint64_t v53 = sub_25E425B50();
        uint64_t v45 = (uint64_t)v66;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v66, 1, 1, v53);
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = 0;
        *(void *)(v46 + 24) = 0;
        uint64_t v47 = &unk_26A6ED7E0;
        goto LABEL_20;
      }
LABEL_31:
      swift_willThrow();
      swift_release();
      swift_release();

      swift_release();
      return;
    }
    uint64_t v54 = (void *)sub_25E425280();
    BOOL v55 = sub_25E3F0DF8();

    if (v55)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_25E4256A0();
      __swift_project_value_buffer(v56, (uint64_t)qword_26B388F50);
      uint64_t v57 = sub_25E425680();
      os_log_type_t v58 = sub_25E425BF0();
      if (os_log_type_enabled(v57, v58))
      {
        os_log_type_t v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v59 = 0;
        _os_log_impl(&dword_25E3BB000, v57, v58, "Stickers database is corrupt. Will attempt remediation.", v59, 2u);
        MEMORY[0x2611D77B0](v59, -1, -1);
      }

      id v60 = objc_msgSend(self, sel_standardUserDefaults);
      id v61 = (void *)sub_25E4258C0();
      objc_msgSend(v60, sel_setBool_forKey_, 1, v61);

      sub_25E3CC3F0();
      id v62 = (void *)swift_allocError();
      unsigned char *v63 = 17;
      sub_25E3CC64C(v62);
    }
  }
  v64 = v67;
  swift_beginAccess();
  if (*v64)
  {
    sub_25E3CC3F0();
    swift_allocError();
    char v35 = 16;
    goto LABEL_30;
  }
  swift_release();
  swift_release();
  swift_release();
}

void sub_25E3C2D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v8 = (void **)(a5 + 16);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for StickerContainer(0) + 28);
  uint64_t v10 = *(void **)v9;
  if (*(unsigned char *)(v9 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_25E4256A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B388F50);
    uint64_t v12 = sub_25E425680();
    os_log_type_t v13 = sub_25E425BF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v16 = (_BYTE)v10;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      void *v15 = v25;
      _os_log_impl(&dword_25E3BB000, v12, v13, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v15, -1, -1);
      MEMORY[0x2611D77B0](v14, -1, -1);
    }

    sub_25E3CC3F0();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = (_BYTE)v10;
    swift_beginAccess();
    unint64_t v19 = *v8;
    *uint64_t v8 = (void *)v17;
  }
  else
  {
    id v20 = v10;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_newBackgroundContext);
    MEMORY[0x270FA5388](v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3892B8);
    sub_25E425CB0();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v22 = *(void *)(a2 + 16);
    unint64_t v23 = *(void *)(a2 + 24);
    *(_OWORD *)(a2 + 16) = v24;
    sub_25E3CEB08(v22, v23);
  }
  dispatch_group_leave(a6);
}

void sub_25E3C304C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v8 = (void **)(a5 + 16);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for StickerContainer(0) + 28);
  uint64_t v10 = *(void **)v9;
  if (*(unsigned char *)(v9 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_25E4256A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B388F50);
    uint64_t v12 = sub_25E425680();
    os_log_type_t v13 = sub_25E425BF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v16 = (_BYTE)v10;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      void *v15 = v23;
      _os_log_impl(&dword_25E3BB000, v12, v13, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v15, -1, -1);
      MEMORY[0x2611D77B0](v14, -1, -1);
    }

    sub_25E3CC3F0();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = (_BYTE)v10;
    swift_beginAccess();
    unint64_t v19 = *v8;
    *uint64_t v8 = (void *)v17;
  }
  else
  {
    id v20 = v10;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_newBackgroundContext);
    MEMORY[0x270FA5388](v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED7D8);
    sub_25E425CB0();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = v22;
    *(unsigned char *)(a2 + 17) = 0;
  }
  dispatch_group_leave(a6);
}

void sub_25E3C334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v8 = (void **)(a5 + 16);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for StickerContainer(0) + 28);
  uint64_t v10 = *(void **)v9;
  if (*(unsigned char *)(v9 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_25E4256A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B388F50);
    uint64_t v12 = sub_25E425680();
    os_log_type_t v13 = sub_25E425BF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v16 = (_BYTE)v10;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      void *v15 = v23;
      _os_log_impl(&dword_25E3BB000, v12, v13, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v15, -1, -1);
      MEMORY[0x2611D77B0](v14, -1, -1);
    }

    sub_25E3CC3F0();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = (_BYTE)v10;
    swift_beginAccess();
    unint64_t v19 = *v8;
    *uint64_t v8 = (void *)v17;
  }
  else
  {
    id v20 = v10;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_newBackgroundContext);
    MEMORY[0x270FA5388](v21);
    sub_25E425CB0();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(a2 + 16) = v22;
    *(unsigned char *)(a2 + 24) = 0;
  }
  dispatch_group_leave(a6);
}

void sub_25E3C3640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v8 = (void **)(a5 + 16);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for StickerContainer(0) + 28);
  uint64_t v10 = *(void **)v9;
  if (*(unsigned char *)(v9 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_25E4256A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B388F50);
    uint64_t v12 = sub_25E425680();
    os_log_type_t v13 = sub_25E425BF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v16 = (_BYTE)v10;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      void *v15 = v23;
      _os_log_impl(&dword_25E3BB000, v12, v13, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v15, -1, -1);
      MEMORY[0x2611D77B0](v14, -1, -1);
    }

    sub_25E3CC3F0();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = (_BYTE)v10;
    swift_beginAccess();
    unint64_t v19 = *v8;
    *uint64_t v8 = (void *)v17;
  }
  else
  {
    id v20 = v10;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_newBackgroundContext);
    MEMORY[0x270FA5388](v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894D8);
    sub_25E425CB0();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(a2 + 16) = v22;
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a6);
}

void sub_25E3C3940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v8 = (void **)(a5 + 16);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for StickerContainer(0) + 28);
  uint64_t v10 = *(void **)v9;
  if (*(unsigned char *)(v9 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_25E4256A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B388F50);
    uint64_t v12 = sub_25E425680();
    os_log_type_t v13 = sub_25E425BF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v16 = (_BYTE)v10;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      void *v15 = v24;
      _os_log_impl(&dword_25E3BB000, v12, v13, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v15, -1, -1);
      MEMORY[0x2611D77B0](v14, -1, -1);
    }

    sub_25E3CC3F0();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = (_BYTE)v10;
    swift_beginAccess();
    unint64_t v19 = *v8;
    *uint64_t v8 = (void *)v17;
  }
  else
  {
    id v20 = v10;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_newBackgroundContext);
    MEMORY[0x270FA5388](v21);
    type metadata accessor for Sticker(0);
    sub_25E425CB0();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v22 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = v23;
  }
  dispatch_group_leave(a6);
}

void sub_25E3C3C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v8 = (void **)(a5 + 16);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for StickerContainer(0) + 28);
  uint64_t v10 = *(void **)v9;
  if (*(unsigned char *)(v9 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_25E4256A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B388F50);
    uint64_t v12 = sub_25E425680();
    os_log_type_t v13 = sub_25E425BF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v16 = (_BYTE)v10;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      void *v15 = v22;
      _os_log_impl(&dword_25E3BB000, v12, v13, "Could not perform CoreData operation because the container wasn’t properly set up: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v15, -1, -1);
      MEMORY[0x2611D77B0](v14, -1, -1);
    }

    sub_25E3CC3F0();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = (_BYTE)v10;
    swift_beginAccess();
    unint64_t v19 = *v8;
    *uint64_t v8 = (void *)v17;
  }
  else
  {
    id v20 = v10;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_newBackgroundContext);
    MEMORY[0x270FA5388](v21);
    sub_25E425CB0();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = 0;
  }
  dispatch_group_leave(a6);
}

uint64_t sub_25E3C3F30(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_25E3C3F74()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_26A6ED7B0 + dword_26A6ED7B0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E3CF048;
  return v3();
}

uint64_t sub_25E3C4014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3CE364(a1, (uint64_t)v8);
  uint64_t v9 = sub_25E425B50();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_25E3CE8D4((uint64_t)v8, &qword_26B388FD0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_25E425B30();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_25E425B40();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_25E3C4200()
{
  unint64_t v1 = *(void *)(sub_25E3C45B0(3, 300) + 16);
  swift_bridgeObjectRelease();
  if (v1 > 2)
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_25E4256A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B388F50);
    uint64_t v11 = sub_25E425680();
    os_log_type_t v12 = sub_25E425BF0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = sub_25E3C45B0(3, 300);
      uint64_t v16 = sub_25E425470();
      uint64_t v17 = MEMORY[0x2611D6820](v15, v16);
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_25E3C8F74(v17, v19, &v23);
      sub_25E425D80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v11, v12, "Have failed to recover the database multiple times. Will not attempt again right now. %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v14, -1, -1);
      MEMORY[0x2611D77B0](v13, -1, -1);
    }

    char v20 = 0;
  }
  else
  {
    sub_25E3C49C4(3, 300);
    sub_25E3C4B74();
    if (v0)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_25E4256A0();
      __swift_project_value_buffer(v2, (uint64_t)qword_26B388F50);
      id v3 = v0;
      id v4 = v0;
      uint64_t v5 = sub_25E425680();
      os_log_type_t v6 = sub_25E425BF0();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v8 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 138412290;
        id v9 = v0;
        uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
        sub_25E425D80();
        *uint64_t v8 = v23;

        _os_log_impl(&dword_25E3BB000, v5, v6, "Failed to remove shared datastore: %@", v7, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v8, -1, -1);
        MEMORY[0x2611D77B0](v7, -1, -1);
      }
      else
      {
      }
      sub_25E3CC3F0();
      swift_allocError();
      *id v21 = 12;
      swift_willThrow();
    }
    else
    {
      char v20 = 1;
    }
  }
  return v20 & 1;
}

uint64_t sub_25E3C45B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED780);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v34 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425470();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)v29 - v9;
  id v10 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v11 = (void *)sub_25E4258C0();
  id v12 = objc_msgSend(v10, sel_arrayForKey_, v11);

  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v13 = sub_25E425AC0();

  uint64_t v14 = sub_25E3C77DC(v13);
  swift_bridgeObjectRelease();
  uint64_t result = MEMORY[0x263F8EE78];
  if (v14)
  {
    uint64_t v41 = MEMORY[0x263F8EE78];
    uint64_t v39 = *(void *)(v14 + 16);
    if (v39)
    {
      unint64_t v16 = 0;
      uint64_t v35 = v6;
      uint64_t v36 = v6 + 48;
      uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      double v18 = (double)a2;
      uint64_t v37 = v6 + 56;
      uint64_t v38 = v6 + 16;
      v29[1] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
      unint64_t v19 = v33;
      uint64_t v20 = (uint64_t)v34;
      uint64_t v31 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      uint64_t v32 = v14;
      while (v16 < *(void *)(v14 + 16))
      {
        unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        uint64_t v22 = *(void *)(v6 + 72);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v20, v14 + v21 + v22 * v16, v5);
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v23(v20, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5) == 1) {
          goto LABEL_18;
        }
        uint64_t v24 = *v17;
        (*v17)(v19, v20, v5);
        sub_25E425440();
        if (-v25 >= v18)
        {
          uint64_t result = (*v30)(v19, v5);
        }
        else
        {
          v24(v40, (uint64_t)v19, v5);
          uint64_t v26 = v41;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25E3EAA20(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v41;
          }
          unint64_t v28 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_25E3EAA20(v27 > 1, v28 + 1, 1);
            uint64_t v26 = v41;
          }
          *(void *)(v26 + 16) = v28 + 1;
          uint64_t v17 = v31;
          uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v26 + v21 + v28 * v22, v40, v5);
          uint64_t v41 = v26;
          unint64_t v19 = v33;
          uint64_t v20 = (uint64_t)v34;
          uint64_t v14 = v32;
        }
        ++v16;
        uint64_t v6 = v35;
        if (v39 == v16) {
          goto LABEL_17;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v20 = (uint64_t)v34;
LABEL_17:
      v23(v20, 1, 1, v5);
LABEL_18:
      swift_bridgeObjectRelease();
      sub_25E3CE8D4(v20, &qword_26A6ED780);
      return v41;
    }
  }
  return result;
}

void sub_25E3C49C4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  sub_25E3C45B0(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED778);
  sub_25E425470();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25E427610;
  sub_25E425460();
  sub_25E3D3E6C(v5);
  uint64_t v6 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  id v7 = (id)sub_25E4258C0();
  objc_msgSend(v4, sel_setObject_forKey_, v6);
}

void sub_25E3C4B74()
{
  v55[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED760);
  unint64_t v54 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED768);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25E425390();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v45 - v12;
  sub_25E3BE9A8((uint64_t)v11);
  if (!v0)
  {
    os_log_type_t v51 = v3;
    uint64_t v52 = v1;
    sub_25E425310();
    unint64_t v16 = *(void (**)(void, void))(v8 + 8);
    uint64_t v14 = v8 + 8;
    uint64_t v15 = v16;
    v16(v11, v7);
    id v17 = objc_msgSend(self, sel_defaultManager);
    sub_25E425350();
    double v18 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
    v55[0] = 0;
    id v19 = objc_msgSend(v17, sel_contentsOfDirectoryAtPath_error_, v18, v55);

    id v20 = v55[0];
    if (v19)
    {
      id v46 = v17;
      uint64_t v47 = v15;
      id v48 = v13;
      uint64_t v49 = v14;
      uint64_t v50 = v7;
      uint64_t v21 = sub_25E425AC0();
      id v22 = v20;

      v55[0] = (id)MEMORY[0x263F8EE78];
      uint64_t v23 = *(void *)(v21 + 16);
      v45[1] = v21;
      if (v23)
      {
        uint64_t v24 = (void (**)(char *, uint64_t))(v54 + 8);
        double v25 = (uint64_t *)(v21 + 40);
        uint64_t v53 = (void *)MEMORY[0x263F8EE78];
        unint64_t v54 = 0x800000025E429AC0;
        uint64_t v26 = v51;
        uint64_t v27 = v52;
        do
        {
          uint64_t v28 = *(v25 - 1);
          uint64_t v29 = *v25;
          swift_bridgeObjectRetain();
          sub_25E425570();
          sub_25E425580();
          (*v24)(v26, v27);
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED770);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v6, 1, v30) == 1)
          {
            sub_25E3CE8D4((uint64_t)v6, &qword_26A6ED768);
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_25E3CE8D4((uint64_t)v6, &qword_26A6ED768);
            uint64_t v31 = v53;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_25E3EAA00(0, v31[2] + 1, 1);
              uint64_t v26 = v51;
            }
            uint64_t v32 = v55[0];
            unint64_t v34 = *((void *)v55[0] + 2);
            unint64_t v33 = *((void *)v55[0] + 3);
            uint64_t v35 = (void *)(v34 + 1);
            if (v34 >= v33 >> 1)
            {
              uint64_t v53 = (void *)(v34 + 1);
              sub_25E3EAA00(v33 > 1, v34 + 1, 1);
              uint64_t v35 = v53;
              uint64_t v26 = v51;
              uint64_t v32 = v55[0];
            }
            v32[2] = v35;
            uint64_t v53 = v32;
            uint64_t v36 = (char *)&v32[2 * v34];
            *((void *)v36 + 4) = v28;
            *((void *)v36 + 5) = v29;
            uint64_t v27 = v52;
          }
          v25 += 2;
          --v23;
        }
        while (v23);
      }
      else
      {
        uint64_t v53 = (void *)MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = v53[2];
      if (v38)
      {
        uint64_t v39 = (void **)(swift_retain() + 40);
        uint64_t v40 = v50;
        os_log_type_t v42 = v47;
        uint64_t v41 = (uint64_t)v48;
        os_log_type_t v43 = v46;
        do
        {
          uint64_t v44 = *v39;
          v55[0] = *(v39 - 1);
          v55[1] = v44;
          swift_bridgeObjectRetain();
          sub_25E3C5150((uint64_t *)v55, v43, v41);
          v39 += 2;
          swift_bridgeObjectRelease();
          --v38;
        }
        while (v38);
        swift_release();
      }
      else
      {
        uint64_t v40 = v50;
        os_log_type_t v42 = v47;
        uint64_t v41 = (uint64_t)v48;
        os_log_type_t v43 = v46;
      }
      v42(v41, v40);
      swift_release();
    }
    else
    {
      id v37 = v55[0];
      sub_25E425290();

      swift_willThrow();
      v15((uint64_t)v13, v7);
    }
  }
}

void sub_25E3C5150(uint64_t *a1, void *a2, uint64_t a3)
{
  v36[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v34 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v32 = *a1;
  sub_25E425300();
  uint64_t v12 = (void *)sub_25E4252F0();
  unint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
  v33(v11, v6);
  v36[0] = 0;
  unsigned int v13 = objc_msgSend(a2, sel_removeItemAtURL_error_, v12, v36);

  id v14 = v36[0];
  if (v13)
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_25E4256A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B388F50);
    unint64_t v16 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v34, a3, v6);
    swift_bridgeObjectRetain_n();
    id v17 = sub_25E425680();
    os_log_type_t v18 = sub_25E425C00();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v36[0] = v31;
      *(_DWORD *)id v19 = 136315138;
      uint64_t v29 = v19 + 4;
      uint64_t v30 = v19;
      sub_25E425300();
      sub_25E3CA200((unint64_t *)&qword_26B388CE0, MEMORY[0x263F06EA8]);
      uint64_t v20 = sub_25E426140();
      unint64_t v22 = v21;
      uint64_t v23 = v11;
      uint64_t v24 = v33;
      v33(v23, v6);
      uint64_t v35 = sub_25E3C8F74(v20, v22, (uint64_t *)v36);
      sub_25E425D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24(v34, v6);
      swift_bridgeObjectRelease();
      os_log_type_t v25 = v18;
      uint64_t v26 = v30;
      _os_log_impl(&dword_25E3BB000, v17, v25, "Removed %s", v30, 0xCu);
      uint64_t v27 = v31;
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v27, -1, -1);
      MEMORY[0x2611D77B0](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      v33(v16, v6);

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v28 = v14;
    sub_25E425290();

    swift_willThrow();
  }
}

void sub_25E3C5540(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25E425390();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v50 = v11 + 56;
  os_log_type_t v51 = v12;
  v12(v9, 1, 2, v10);
  char v13 = sub_25E3F9740(a1, (uint64_t)v9);
  sub_25E3CA100((uint64_t)v9, type metadata accessor for CoreDataDataMapper.StoreType);
  if (v13 & 1) != 0 && (a2)
  {
    uint64_t v48 = v10;
    uint64_t v49 = v3;
    sub_25E3C5E30(3, 300);
    sub_25E3CC9EC();
    id v47 = self;
    id v14 = objc_msgSend(v47, sel_standardUserDefaults);
    uint64_t v15 = (void *)sub_25E4258C0();
    unsigned int v16 = objc_msgSend(v14, sel_BOOLForKey_, v15);

    if (v16)
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_25E4256A0();
      __swift_project_value_buffer(v17, (uint64_t)qword_26B388F50);
      os_log_type_t v18 = sub_25E425680();
      os_log_type_t v19 = sub_25E425C00();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = a1;
        char v21 = a2;
        unint64_t v22 = a3;
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_25E3BB000, v18, v19, "Stickers have been marked as corrupt. Will attempt to reset.", v23, 2u);
        uint64_t v24 = v23;
        a3 = v22;
        a2 = v21;
        a1 = v20;
        MEMORY[0x2611D77B0](v24, -1, -1);
      }

      sub_25E3C4B74();
      id v46 = a3;
      id v25 = v47;
      id v26 = objc_msgSend(v47, sel_standardUserDefaults);
      uint64_t v27 = (void *)sub_25E4258C0();
      objc_msgSend(v26, sel_setBool_forKey_, 0, v27);

      id v28 = objc_msgSend(v25, sel_standardUserDefaults);
      uint64_t v29 = (void *)sub_25E4258C0();
      objc_msgSend(v28, sel_setBool_forKey_, 1, v29);

      sub_25E3C5F30(3, 300);
      uint64_t v30 = sub_25E425680();
      os_log_type_t v31 = sub_25E425C00();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_25E3BB000, v30, v31, "Stickers were successfully reset.", v32, 2u);
        MEMORY[0x2611D77B0](v32, -1, -1);
      }

      a3 = v46;
    }
    uint64_t v10 = v48;
  }
  unint64_t v33 = sub_25E3CCD6C();
  id v34 = sub_25E3CD244(a1, v33, a2 & 1);
  sub_25E3C6328(v34, 1);
  id v46 = a3;
  if (a2) {
    sub_25E3CDDA8(v34);
  }
  uint64_t v53 = MEMORY[0x263F8EE78];
  v51(v9, 1, 2, v10);
  char v35 = sub_25E3F9740(a1, (uint64_t)v9);
  sub_25E3CA100((uint64_t)v9, type metadata accessor for CoreDataDataMapper.StoreType);
  if ((v35 & 1) == 0 || (a2 & 1) == 0)
  {

LABEL_27:
    uint64_t v43 = v53;
    uint64_t v44 = v46;
    *id v46 = v34;
    v44[1] = v43;
    *((unsigned char *)v44 + 16) = 0;
    return;
  }
  id v36 = objc_msgSend(v34, sel_persistentStoreCoordinator);
  id v37 = objc_msgSend(v34, sel_persistentStoreDescriptions);
  sub_25E3CE930(0, &qword_26B388FE8);
  unint64_t v38 = sub_25E425AC0();

  if (!(v38 >> 62))
  {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_18;
    }
LABEL_26:

    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_25E425F80();
  if (!v39) {
    goto LABEL_26;
  }
LABEL_18:
  if (v39 >= 1)
  {
    uint64_t v40 = 0;
    do
    {
      if ((v38 & 0xC000000000000001) != 0) {
        id v41 = (id)MEMORY[0x2611D6C30](v40, v38);
      }
      else {
        id v41 = *(id *)(v38 + 8 * v40 + 32);
      }
      os_log_type_t v42 = v41;
      ++v40;
      id v52 = v41;
      sub_25E3C6098(&v52, (uint64_t)v36, &v53);
    }
    while (v39 != v40);
    goto LABEL_26;
  }
  __break(1u);
}

void sub_25E3C5E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(sub_25E3C45B0(a1, a2) + 16);
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v5 = objc_msgSend(self, sel_standardUserDefaults);
    sub_25E3C45B0(a1, a2);
    sub_25E425470();
    uint64_t v6 = (void *)sub_25E425AB0();
    swift_bridgeObjectRelease();
    id v7 = (id)sub_25E4258C0();
    objc_msgSend(v5, sel_setObject_forKey_, v6, v7);
  }
}

void sub_25E3C5F30(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(sub_25E3C45B0(a1, a2) + 16);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_standardUserDefaults);
  if (v4 < 2)
  {
    id v10 = (id)sub_25E4258C0();
    objc_msgSend(v5, sel_removeObjectForKey_, v10);
  }
  else
  {
    uint64_t v6 = sub_25E3C45B0(a1, a2);
    uint64_t v7 = *(void *)(sub_25E3C45B0(a1, a2) + 16);
    swift_bridgeObjectRelease();
    sub_25E42198C(v7 - 1, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED810);
    uint64_t v8 = sub_25E426190();
    uint64_t v9 = (void *)sub_25E4258C0();
    objc_msgSend(v5, sel_setObject_forKey_, v8, v9);

    swift_unknownObjectRelease();
  }
}

void sub_25E3C6098(void *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = (void *)*a1;
  id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StickerSpotlightDelegate()), sel_initForStoreWithDescription_coordinator_, *a1, a2);
  objc_msgSend(v5, sel_startSpotlightIndexing);
  id v6 = v5;
  MEMORY[0x2611D67F0]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25E425AF0();
  }
  sub_25E425B10();
  sub_25E425AE0();
  if (qword_26B388F70 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_25E4256A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B388F50);
  id v8 = v6;
  id v9 = v4;
  id v10 = v8;
  id v11 = v9;
  uint64_t v12 = sub_25E425680();
  os_log_type_t v13 = sub_25E425C00();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412546;
    log = v12;
    id v16 = v10;
    sub_25E425D80();
    void *v15 = v10;

    *(_WORD *)(v14 + 12) = 2112;
    id v17 = v11;
    sub_25E425D80();
    v15[1] = v11;

    _os_log_impl(&dword_25E3BB000, log, v13, "Made indexer %@ for store %@", (uint8_t *)v14, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v15, -1, -1);
    MEMORY[0x2611D77B0](v14, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_25E3C6328(void *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  id v6 = (void **)(v5 + 16);
  aBlock[4] = sub_25E3CE8CC;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3C6A24;
  aBlock[3] = &block_descriptor_123;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_loadPersistentStoresWithCompletionHandler_, v7);
  _Block_release(v7);
  swift_beginAccess();
  id v8 = *v6;
  if (*v6)
  {
    id v9 = v8;
    id v10 = (void *)sub_25E425280();
    BOOL v11 = sub_25E3F0DF8();

    if (v11)
    {
      uint64_t v12 = a2 - 1;
      if (a2 >= 1)
      {
        unint64_t v13 = *(void *)(sub_25E3C45B0(3, 300) + 16);
        swift_bridgeObjectRelease();
        if (v13 <= 2)
        {
          if (qword_26B388F70 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_25E4256A0();
          __swift_project_value_buffer(v14, (uint64_t)qword_26B388F50);
          id v15 = v8;
          id v16 = v8;
          id v17 = sub_25E425680();
          os_log_type_t v18 = sub_25E425BF0();
          if (os_log_type_enabled(v17, v18))
          {
            os_log_type_t type = v18;
            uint64_t v19 = swift_slowAlloc();
            uint64_t v43 = (void *)swift_slowAlloc();
            uint64_t v42 = swift_slowAlloc();
            uint64_t v45 = v42;
            *(_DWORD *)uint64_t v19 = 138412802;
            id v20 = v8;
            uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
            sub_25E425D80();
            *uint64_t v43 = v21;

            *(_WORD *)(v19 + 12) = 2048;
            sub_25E425D80();
            *(_WORD *)(v19 + 22) = 2080;
            if (a2 == 1) {
              uint64_t v22 = 1701669236;
            }
            else {
              uint64_t v22 = 0x73656D6974;
            }
            if (a2 == 1) {
              unint64_t v23 = 0xE400000000000000;
            }
            else {
              unint64_t v23 = 0xE500000000000000;
            }
            sub_25E3C8F74(v22, v23, &v45);
            sub_25E425D80();
            uint64_t v12 = a2 - 1;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_25E3BB000, v17, type, "Could not load the container (%@). Will retry %ld more %s", (uint8_t *)v19, 0x20u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
            swift_arrayDestroy();
            MEMORY[0x2611D77B0](v43, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x2611D77B0](v42, -1, -1);
            MEMORY[0x2611D77B0](v19, -1, -1);
          }
          else
          {
          }
          sub_25E3C4200();
          if (!v2) {
            sub_25E3C6328(a1, v12);
          }
          goto LABEL_26;
        }
      }
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_25E4256A0();
      __swift_project_value_buffer(v34, (uint64_t)qword_26B388F50);
      id v35 = v8;
      id v36 = v8;
      uint64_t v27 = sub_25E425680();
      os_log_type_t v28 = sub_25E425BF0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138412290;
        id v37 = v8;
        uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v45 = v38;
        sub_25E425D80();
        *uint64_t v30 = v38;

        unint64_t v33 = "Could not load container and out of retries: %@";
        goto LABEL_23;
      }
    }
    else
    {
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_25E4256A0();
      __swift_project_value_buffer(v24, (uint64_t)qword_26B388F50);
      id v25 = v8;
      id v26 = v8;
      uint64_t v27 = sub_25E425680();
      os_log_type_t v28 = sub_25E425BF0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138412290;
        id v31 = v8;
        uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v45 = v32;
        sub_25E425D80();
        *uint64_t v30 = v32;

        unint64_t v33 = "Could not load container: %@";
LABEL_23:
        _os_log_impl(&dword_25E3BB000, v27, v28, v33, v29, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v30, -1, -1);
        MEMORY[0x2611D77B0](v29, -1, -1);
LABEL_25:

        sub_25E3CC3F0();
        swift_allocError();
        *uint64_t v39 = 11;
        swift_willThrow();
LABEL_26:

        return swift_release();
      }
    }

    goto LABEL_25;
  }
  return swift_release();
}

void sub_25E3C69C4(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a2;
  id v6 = a2;
}

void sub_25E3C6A24(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_25E3C6AB0()
{
  return swift_deallocClassInstance();
}

id sub_25E3C6AC0()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33558]), sel_init);
  qword_26B38BBF8 = (uint64_t)result;
  return result;
}

uint64_t sub_25E3C6AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 120) = a4;
  *(void *)(v5 + 128) = a5;
  return MEMORY[0x270FA2498](sub_25E3C6B14, 0, 0);
}

uint64_t sub_25E3C6B14()
{
  if (objc_msgSend(*(id *)(v0 + 120), sel_isIndexingEnabled))
  {
    uint64_t v1 = *(void **)(v0 + 120);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_25E3C6E8C;
    uint64_t v2 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_25E3C7744;
    *(void *)(v0 + 104) = &block_descriptor_153;
    *(void *)(v0 + 112) = v2;
    objc_msgSend(v1, sel_deleteSpotlightIndexWithCompletionHandler_, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
  else
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_25E4256A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B388F50);
    unint64_t v4 = sub_25E425680();
    os_log_type_t v5 = sub_25E425BD0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 128);
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v7 = 134217984;
      *(void *)(v0 + 80) = v6;
      sub_25E425D80();
      _os_log_impl(&dword_25E3BB000, v4, v5, "Will initiate reindexing #%llu", v7, 0xCu);
      MEMORY[0x2611D77B0](v7, -1, -1);
    }
    id v8 = *(void **)(v0 + 120);

    objc_msgSend(v8, sel_stopSpotlightIndexing);
    id v9 = sub_25E425680();
    os_log_type_t v10 = sub_25E425BD0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134217984;
      *(void *)(v0 + 80) = v11;
      sub_25E425D80();
      _os_log_impl(&dword_25E3BB000, v9, v10, "Will delete current index #%llu", v12, 0xCu);
      MEMORY[0x2611D77B0](v12, -1, -1);
    }
    unint64_t v13 = *(void **)(v0 + 120);

    objc_msgSend(v13, sel_startSpotlightIndexing);
    uint64_t v14 = sub_25E425680();
    os_log_type_t v15 = sub_25E425BD0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = *(void *)(v0 + 128);
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v17 = 134217984;
      *(void *)(v0 + 80) = v16;
      sub_25E425D80();
      _os_log_impl(&dword_25E3BB000, v14, v15, "Resumed indexing #%llu", v17, 0xCu);
      MEMORY[0x2611D77B0](v17, -1, -1);
    }

    os_log_type_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_25E3C6E8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_25E3C7310;
  }
  else {
    uint64_t v2 = sub_25E3C6F9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25E3C6F9C()
{
  if (qword_26B388F70 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_25E4256A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B388F50);
  uint64_t v2 = sub_25E425680();
  os_log_type_t v3 = sub_25E425BD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[16];
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 134217984;
    v0[10] = v4;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v2, v3, "Did delete current index #%llu", v5, 0xCu);
    MEMORY[0x2611D77B0](v5, -1, -1);
  }

  if (qword_26B388F70 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v1, (uint64_t)qword_26B388F50);
  uint64_t v6 = sub_25E425680();
  os_log_type_t v7 = sub_25E425BD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[16];
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v9 = 134217984;
    v0[10] = v8;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v6, v7, "Will initiate reindexing #%llu", v9, 0xCu);
    MEMORY[0x2611D77B0](v9, -1, -1);
  }
  os_log_type_t v10 = (void *)v0[15];

  objc_msgSend(v10, sel_stopSpotlightIndexing);
  uint64_t v11 = sub_25E425680();
  os_log_type_t v12 = sub_25E425BD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = v0[16];
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    v0[10] = v13;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v11, v12, "Will delete current index #%llu", v14, 0xCu);
    MEMORY[0x2611D77B0](v14, -1, -1);
  }
  os_log_type_t v15 = (void *)v0[15];

  objc_msgSend(v15, sel_startSpotlightIndexing);
  uint64_t v16 = sub_25E425680();
  os_log_type_t v17 = sub_25E425BD0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = v0[16];
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134217984;
    v0[10] = v18;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v16, v17, "Resumed indexing #%llu", v19, 0xCu);
    MEMORY[0x2611D77B0](v19, -1, -1);
  }

  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_25E3C7310()
{
  swift_willThrow();
  p_vtable = STKStickerRepresentation.vtable;
  if (qword_26B388F70 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[17];
  uint64_t v3 = sub_25E4256A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B388F50);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_25E425680();
  os_log_type_t v7 = sub_25E425BF0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  id v9 = (void *)v0[17];
  if (v8)
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v13;
    sub_25E425D80();
    void *v11 = v13;

    _os_log_impl(&dword_25E3BB000, v6, v7, "Error while deleting spotlight item index: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v11, -1, -1);
    uint64_t v14 = v10;
    p_vtable = (void **)(STKStickerRepresentation + 24);
    MEMORY[0x2611D77B0](v14, -1, -1);
  }
  else
  {
  }
  if (p_vtable[494] != (void *)-1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_26B388F50);
  os_log_type_t v15 = sub_25E425680();
  os_log_type_t v16 = sub_25E425BD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = v0[16];
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    v0[10] = v17;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v15, v16, "Will initiate reindexing #%llu", v18, 0xCu);
    MEMORY[0x2611D77B0](v18, -1, -1);
  }
  uint64_t v19 = (void *)v0[15];

  objc_msgSend(v19, sel_stopSpotlightIndexing);
  uint64_t v20 = sub_25E425680();
  os_log_type_t v21 = sub_25E425BD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = v0[16];
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v23 = 134217984;
    v0[10] = v22;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v20, v21, "Will delete current index #%llu", v23, 0xCu);
    MEMORY[0x2611D77B0](v23, -1, -1);
  }
  uint64_t v24 = (void *)v0[15];

  objc_msgSend(v24, sel_startSpotlightIndexing);
  id v25 = sub_25E425680();
  os_log_type_t v26 = sub_25E425BD0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = v0[16];
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v28 = 134217984;
    v0[10] = v27;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v25, v26, "Resumed indexing #%llu", v28, 0xCu);
    MEMORY[0x2611D77B0](v28, -1, -1);
  }

  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_25E3C7744(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    uint64_t v4 = swift_allocError();
    *id v5 = a2;
    id v6 = a2;
    return MEMORY[0x270FA2410](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x270FA2408](v7);
  }
}

uint64_t sub_25E3C77DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED780);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E425470();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v28 = (char *)&v24 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_25E3EAA20(0, v11, 0);
  if (!v11) {
    return v30;
  }
  uint64_t v12 = a1 + 32;
  uint64_t v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v26 = v6;
  uint64_t v27 = MEMORY[0x263F8EE58] + 8;
  id v25 = v9;
  while (1)
  {
    sub_25E3CC4A8(v12, (uint64_t)v29);
    int v15 = swift_dynamicCast();
    os_log_type_t v16 = *v13;
    if (!v15) {
      break;
    }
    v16(v4, 0, 1, v5);
    uint64_t v17 = *v14;
    uint64_t v18 = v28;
    (*v14)(v28, v4, v5);
    v17(v9, v18, v5);
    uint64_t v19 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25E3EAA20(0, *(void *)(v19 + 16) + 1, 1);
      uint64_t v19 = v30;
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_25E3EAA20(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v30;
    }
    *(void *)(v19 + 16) = v21 + 1;
    unint64_t v22 = v19
        + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
        + *(void *)(v26 + 72) * v21;
    id v9 = v25;
    v17((char *)v22, v25, v5);
    uint64_t v30 = v19;
    v12 += 32;
    if (!--v11) {
      return v19;
    }
  }
  v16(v4, 1, 1, v5);
  swift_release();
  sub_25E3CE8D4((uint64_t)v4, &qword_26A6ED780);
  return 0;
}

uint64_t sub_25E3C7ABC()
{
  uint64_t v0 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StickerReindexer(0);
  __swift_allocate_value_buffer(v3, qword_26B388F18);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_26B388F18);
  uint64_t v5 = sub_25E425390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 2, v5);
  sub_25E3BE75C((uint64_t)v2, 0, v4);
  *(unsigned char *)(v4 + *(int *)(v3 + 20)) = 0;
  uint64_t v6 = *(int *)(v3 + 24);
  *(void *)(v4 + v6) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33690]), sel_init);
  return sub_25E425690();
}

uint64_t static StickerReindexer.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B388F38 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for StickerReindexer(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B388F18);
  swift_beginAccess();
  return sub_25E3C9F8C(v3, a1, type metadata accessor for StickerReindexer);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for StickerReindexer(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B388F40);
}

uint64_t static StickerReindexer.shared.setter(uint64_t a1)
{
  if (qword_26B388F38 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for StickerReindexer(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B388F18);
  swift_beginAccess();
  sub_25E3C7DB0(a1, v3);
  swift_endAccess();
  return sub_25E3CA100(a1, type metadata accessor for StickerReindexer);
}

uint64_t sub_25E3C7DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StickerReindexer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static StickerReindexer.shared.modify())()
{
  if (qword_26B388F38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for StickerReindexer(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B388F18);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_25E3C7EA8()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for StickerReindexer(0) + 24));
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_25E3CEE64;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_25E3CEE7C;
  v7[5] = v3;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_25E3C80E8;
  v7[3] = &block_descriptor_162;
  uint64_t v4 = _Block_copy(v7);
  id v5 = v1;
  swift_retain();
  swift_release();
  CNRunWithLock();
  _Block_release(v4);
  swift_release();

  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

int *sub_25E3C8008(uint64_t a1)
{
  uint64_t result = (int *)type metadata accessor for StickerReindexer(0);
  uint64_t v3 = result[5];
  if ((*(unsigned char *)(a1 + v3) & 1) == 0)
  {
    uint64_t v4 = (int *)type metadata accessor for StickerContainer(0);
    id v5 = *(void **)(a1 + v4[5]);
    objc_msgSend(v5, sel_lock);
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_25E3C5540(a1, *(unsigned char *)(a1 + v4[6]), v10);
    swift_release();
    uint64_t v6 = v10[0];
    uint64_t v7 = v10[1];
    char v8 = v11;
    uint64_t v9 = a1 + v4[7];
    sub_25E3CA64C(*(void **)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
    *(void *)uint64_t v9 = v6;
    *(void *)(v9 + 8) = v7;
    *(unsigned char *)(v9 + 16) = v8;
    uint64_t result = (int *)objc_msgSend(v5, sel_unlock);
    *(unsigned char *)(a1 + v3) = 1;
  }
  return result;
}

uint64_t sub_25E3C80E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall StickerReindexer.reindexStickers(with:)(Swift::OpaquePointer with)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25E4256A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StickerReindexer(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + *(int *)(v7 + 28), v3);
  swift_bridgeObjectRetain_n();
  char v8 = sub_25E425680();
  os_log_type_t v9 = sub_25E425C00();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v20 = v2;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v3;
    char v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = v12;
    *(_DWORD *)char v11 = 136315138;
    v18[1] = v11 + 4;
    uint64_t v13 = sub_25E4254F0();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = MEMORY[0x2611D6820](v14, v13);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_25E3C8F74(v15, v17, &v22);
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v8, v9, "Will reindex: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v12, -1, -1);
    MEMORY[0x2611D77B0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_25E3C7EA8();
  sub_25E3C9C78();
}

uint64_t StickerReindexer.dataForManagedRepresentation(uri:)(uint64_t a1)
{
  uint64_t v3 = sub_25E4256A0();
  void v14[2] = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_25E425390();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3C7EA8();
  sub_25E3C9F8C(v1, (uint64_t)v10, type metadata accessor for StickerContainer);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, v7, v4);
  sub_25E3BEC40((uint64_t)sub_25E3CA084, v12, &v15);
  sub_25E3CA100((uint64_t)v10, type metadata accessor for StickerContainer);
  swift_release();
  return v15;
}

void sub_25E3C87A4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v25[1] = *(id *)MEMORY[0x263EF8340];
  id v6 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v6
    || (uint64_t v7 = v6,
        uint64_t v8 = (void *)sub_25E4252F0(),
        id v9 = objc_msgSend(v7, sel_managedObjectIDForURIRepresentation_, v8),
        v7,
        v8,
        !v9))
  {
    type metadata accessor for StickerReindexerError(0);
    sub_25E3CA200(&qword_26A6ED740, (void (*)(uint64_t))type metadata accessor for StickerReindexerError);
    swift_allocError();
    uint64_t v21 = v20;
    uint64_t v22 = sub_25E425390();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a2, v22);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  v25[0] = 0;
  id v10 = objc_msgSend(a1, sel_existingObjectWithID_error_, v9, v25);
  id v11 = v25[0];
  if (!v10)
  {
    id v23 = v25[0];
    sub_25E425290();

    swift_willThrow();
    return;
  }
  uint64_t v12 = v10;
  type metadata accessor for ManagedRepresentation();
  uint64_t v13 = (void *)swift_dynamicCastClass();
  id v14 = v11;
  if (!v13)
  {

    type metadata accessor for StickerReindexerError(0);
    sub_25E3CA200(&qword_26A6ED740, (void (*)(uint64_t))type metadata accessor for StickerReindexerError);
    swift_allocError();
    *uint64_t v24 = v9;
    goto LABEL_8;
  }
  id v15 = objc_msgSend(v13, sel_data);
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v17 = sub_25E4253D0();
    uint64_t v19 = v18;

    *a3 = v17;
    a3[1] = v19;
  }
  else
  {
    type metadata accessor for StickerReindexerError(0);
    sub_25E3CA200(&qword_26A6ED740, (void (*)(uint64_t))type metadata accessor for StickerReindexerError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
}

unint64_t StickerReindexerError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25E425390();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StickerReindexerError(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (void **)((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25E3C9F8C(v1, (uint64_t)v8, type metadata accessor for StickerReindexerError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      id v10 = *v8;
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_25E425EA0();
      swift_bridgeObjectRelease();
      strcpy((char *)v14, "no object for ");
      HIBYTE(v14[1]) = -18;
      id v11 = objc_msgSend(v10, sel_description);
      sub_25E4258F0();

      sub_25E425970();
      swift_bridgeObjectRelease();
      return v14[0];
    }
    else
    {
      return 0xD000000000000069;
    }
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_25E425EA0();
    swift_bridgeObjectRelease();
    v14[0] = 0xD000000000000011;
    v14[1] = 0x800000025E429A40;
    sub_25E3CA200((unint64_t *)&qword_26B388CE0, MEMORY[0x263F06EA8]);
    sub_25E426140();
    sub_25E425970();
    swift_bridgeObjectRelease();
    uint64_t v12 = v14[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v12;
}

uint64_t sub_25E3C8DA0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25E3C8E7C;
  return v6(a1);
}

uint64_t sub_25E3C8E7C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25E3C8F74(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25E3C9048(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25E3CC4A8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25E3CC4A8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_25E3C9048(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25E425D90();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25E3C9204(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25E425F00();
  if (!v8)
  {
    sub_25E425F70();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25E425FD0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25E3C9204(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25E3C929C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25E3C9414(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25E3C9414(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25E3C929C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25E407484(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25E425EB0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25E425F70();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25E425980();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25E425FD0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25E425F70();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_25E3C9414(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389530);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

void sub_25E3C9564(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  MEMORY[0x270FA5388](v5 - 8);
  int64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25E425390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 2, v11);
  LOBYTE(a2) = sub_25E3F9740(a2, (uint64_t)v10);
  sub_25E3CA100((uint64_t)v10, type metadata accessor for CoreDataDataMapper.StoreType);
  if (a2)
  {
    if (qword_26B388F10 != -1) {
      swift_once();
    }
    id v12 = objc_msgSend((id)qword_26B38BBF8, sel_nextUnsignedInteger);
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_25E4256A0();
    uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_26B388F50);
    swift_bridgeObjectRetain_n();
    uint64_t v49 = v14;
    id v15 = sub_25E425680();
    os_log_type_t v16 = sub_25E425BE0();
    unint64_t v17 = a1 >> 62;
    if (!os_log_type_enabled(v15, v16))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    uint64_t v2 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 134218240;
    uint64_t v50 = (uint64_t)v12;
    sub_25E425D80();
    *(_WORD *)(v2 + 12) = 2048;
    if (v17) {
      goto LABEL_38;
    }
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      swift_bridgeObjectRelease();
      uint64_t v50 = v18;
      sub_25E425D80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v15, v16, "Will reindex #%llu with %ld delegate(s)", (uint8_t *)v2, 0x16u);
      MEMORY[0x2611D77B0](v2, -1, -1);

LABEL_16:
      if (v17)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_25E425F80();
        if (!v23)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_36;
        }
      }
      if (v23 >= 1) {
        break;
      }
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_25E425F80();
      swift_bridgeObjectRelease();
    }
    id v48 = v12;
    uint64_t v25 = 0;
    unint64_t v45 = a1 & 0xC000000000000001;
    *(void *)&long long v24 = 134218242;
    long long v43 = v24;
    uint64_t v44 = MEMORY[0x263F8EE60] + 8;
    uint64_t v46 = v23;
    unint64_t v47 = a1;
    while (1)
    {
      if (v45) {
        id v26 = (id)MEMORY[0x2611D6C30](v25, a1);
      }
      else {
        id v26 = *(id *)(a1 + 8 * v25 + 32);
      }
      uint64_t v27 = v26;
      os_log_type_t v28 = sub_25E425680();
      os_log_type_t v29 = sub_25E425BD0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = v43;
        id v32 = v48;
        *(void *)(v30 + 4) = v48;
        *(_WORD *)(v30 + 12) = 2112;
        *(void *)(v30 + 14) = v27;
        *uint64_t v31 = v27;
        _os_log_impl(&dword_25E3BB000, v28, v29, "Will initiate reindexing #%llu for %@", (uint8_t *)v30, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v31, -1, -1);
        MEMORY[0x2611D77B0](v30, -1, -1);
      }
      else
      {

        os_log_type_t v28 = v27;
        id v32 = v48;
      }

      uint64_t v33 = sub_25E425B50();
      uint64_t v34 = *(void *)(v33 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v7, 1, 1, v33);
      id v35 = (void *)swift_allocObject();
      v35[2] = 0;
      id v36 = v35 + 2;
      v35[3] = 0;
      v35[4] = v27;
      v35[5] = v32;
      int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v33);
      uint64_t v38 = v27;
      if (v37 == 1)
      {
        sub_25E3CE8D4((uint64_t)v7, &qword_26B388FD0);
        if (!*v36) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_25E425B40();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v33);
        if (!*v36)
        {
LABEL_32:
          uint64_t v39 = 0;
          uint64_t v41 = 0;
          goto LABEL_33;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v39 = sub_25E425B30();
      uint64_t v41 = v40;
      swift_unknownObjectRelease();
LABEL_33:
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = &unk_26A6ED838;
      *(void *)(v42 + 24) = v35;
      if (v41 | v39)
      {
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        uint64_t v53 = v39;
        uint64_t v54 = v41;
      }
      a1 = v47;
      ++v25;
      swift_task_create();

      swift_release();
      if (v46 == v25) {
        goto LABEL_36;
      }
    }
  }
  if (qword_26B388F70 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_25E4256A0();
  __swift_project_value_buffer(v19, (uint64_t)qword_26B388F50);
  uint64_t v20 = sub_25E425680();
  os_log_type_t v21 = sub_25E425C00();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_25E3BB000, v20, v21, "Request to index ignored: this store is not indexable", v22, 2u);
    MEMORY[0x2611D77B0](v22, -1, -1);
  }
}

id sub_25E3C9C78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StickerContainer(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(int *)(v3 + 20);
  int64_t v7 = *(void **)(v0 + v6);
  objc_msgSend(v7, sel_lock);
  uint64_t v8 = v1 + *(int *)(v2 + 28);
  if (*(unsigned char *)(v8 + 16))
  {
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_25E4256A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B388F50);
    sub_25E3C9F8C(v1, (uint64_t)v5, type metadata accessor for StickerContainer);
    uint64_t v10 = sub_25E425680();
    os_log_type_t v11 = sub_25E425BF0();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v24 = v13;
      *(_DWORD *)id v12 = 136315138;
      uint64_t v14 = &v5[*(int *)(v2 + 28)];
      id v15 = (void *)*((void *)v14 + 1);
      char v16 = v14[16];
      v22[0] = *(void **)v14;
      v22[1] = v15;
      char v23 = v16;
      sub_25E3CA4C8(v22[0], (uint64_t)v15, v16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED828);
      uint64_t v17 = sub_25E425910();
      v22[0] = (void *)sub_25E3C8F74(v17, v18, &v24);
      sub_25E425D80();
      swift_bridgeObjectRelease();
      sub_25E3CA100((uint64_t)v5, type metadata accessor for StickerContainer);
      _os_log_impl(&dword_25E3BB000, v10, v11, "Reindexing container not available: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v13, -1, -1);
      MEMORY[0x2611D77B0](v12, -1, -1);
    }
    else
    {
      sub_25E3CA100((uint64_t)v5, type metadata accessor for StickerContainer);
    }

    return objc_msgSend(*(id *)(v1 + v6), sel_unlock);
  }
  else
  {
    id v19 = *(id *)v8;
    unint64_t v20 = swift_bridgeObjectRetain();
    sub_25E3C9564(v20, v1);
    swift_bridgeObjectRelease();

    return objc_msgSend(v7, sel_unlock);
  }
}

uint64_t type metadata accessor for StickerContainer(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B3895B0);
}

uint64_t sub_25E3C9F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E3C9FF4()
{
  uint64_t v1 = sub_25E425390();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_25E3CA084(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_25E425390() - 8);
  sub_25E3C87A4(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_25E3CA100(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for StickerReindexerError(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26A6ED748);
}

uint64_t sub_25E3CA180(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E3CA1B8()
{
  return sub_25E3CA200(&qword_26A6ED740, (void (*)(uint64_t))type metadata accessor for StickerReindexerError);
}

uint64_t sub_25E3CA200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StickerContainer.LoadMethod()
{
  return self;
}

uint64_t type metadata accessor for StickerContainer.ReindexMethod()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for StickerReindexer(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25E425390();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      uint64_t v9 = type metadata accessor for CoreDataDataMapper.StoreType(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
    os_log_type_t v11 = (int *)type metadata accessor for StickerContainer(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
    uint64_t v14 = v11[7];
    id v15 = (char *)a1 + v14;
    char v16 = (char *)a2 + v14;
    uint64_t v17 = *(void **)v16;
    uint64_t v18 = *((void *)v16 + 1);
    char v19 = v16[16];
    id v20 = v13;
    sub_25E3CA4C8(v17, v18, v19);
    *(void *)id v15 = v17;
    *((void *)v15 + 1) = v18;
    v15[16] = v19;
    uint64_t v21 = v11[8];
    uint64_t v22 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = (uint64_t)v22;
    uint64_t v23 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v23) = (uint64_t)v24;
    uint64_t v25 = a3[7];
    id v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_25E4256A0();
    os_log_type_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    id v30 = v22;
    id v31 = v24;
    v29(v26, v27, v28);
  }
  return a1;
}

void *sub_25E3CA4C8(void *result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    id v4 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for StickerReindexer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425390();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = (int *)type metadata accessor for StickerContainer(0);

  sub_25E3CA64C(*(void **)(a1 + v6[7]), *(void *)(a1 + v6[7] + 8), *(unsigned char *)(a1 + v6[7] + 16));
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_25E4256A0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *sub_25E3CA64C(void *result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    uint64_t v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  uint64_t v9 = (int *)type metadata accessor for StickerContainer(0);
  uint64_t v10 = v9[5];
  os_log_type_t v11 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v11;
  a1[v9[6]] = a2[v9[6]];
  uint64_t v12 = v9[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  id v15 = *(void **)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  id v18 = v11;
  sub_25E3CA4C8(v15, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  v13[16] = v17;
  uint64_t v19 = v9[8];
  id v20 = *(void **)&a2[v19];
  *(void *)&a1[v19] = v20;
  uint64_t v21 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v22 = *(void **)&a2[v21];
  *(void *)&a1[v21] = v22;
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_25E4256A0();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  id v28 = v20;
  id v29 = v22;
  v27(v24, v25, v26);
  return a1;
}

char *assignWithCopy for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  uint64_t v12 = (int *)type metadata accessor for StickerContainer(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = *(void **)&a2[v13];
  id v15 = *(void **)&a1[v13];
  *(void *)&a1[v13] = v14;
  id v16 = v14;

  a1[v12[6]] = a2[v12[6]];
  uint64_t v17 = v12[7];
  id v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  id v20 = *(void **)v19;
  uint64_t v21 = *((void *)v19 + 1);
  char v22 = v19[16];
  sub_25E3CA4C8(*(void **)v19, v21, v22);
  uint64_t v23 = *(void **)v18;
  uint64_t v24 = *((void *)v18 + 1);
  char v25 = v18[16];
  *(void *)id v18 = v20;
  *((void *)v18 + 1) = v21;
  v18[16] = v22;
  sub_25E3CA64C(v23, v24, v25);
  uint64_t v26 = v12[8];
  uint64_t v27 = *(void **)&a2[v26];
  id v28 = *(void **)&a1[v26];
  *(void *)&a1[v26] = v27;
  id v29 = v27;

  a1[a3[5]] = a2[a3[5]];
  uint64_t v30 = a3[6];
  id v31 = *(void **)&a2[v30];
  id v32 = *(void **)&a1[v30];
  *(void *)&a1[v30] = v31;
  id v33 = v31;

  uint64_t v34 = a3[7];
  id v35 = &a1[v34];
  id v36 = &a2[v34];
  uint64_t v37 = sub_25E4256A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

char *initializeWithTake for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    uint64_t v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  int v9 = (int *)type metadata accessor for StickerContainer(0);
  *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
  a1[v9[6]] = a2[v9[6]];
  uint64_t v10 = v9[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  v11[16] = v12[16];
  *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
  uint64_t v13 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[7];
  id v15 = &a1[v14];
  id v16 = &a2[v14];
  uint64_t v17 = sub_25E4256A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

char *assignWithTake for StickerReindexer(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  uint64_t v12 = (int *)type metadata accessor for StickerContainer(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = *(void **)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];

  a1[v12[6]] = a2[v12[6]];
  uint64_t v15 = v12[7];
  id v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  char v18 = v17[16];
  uint64_t v19 = *(void **)v16;
  uint64_t v20 = *((void *)v16 + 1);
  char v21 = v16[16];
  *(_OWORD *)id v16 = *(_OWORD *)v17;
  v16[16] = v18;
  sub_25E3CA64C(v19, v20, v21);
  uint64_t v22 = v12[8];
  uint64_t v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  uint64_t v24 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  char v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  id v28 = &a2[v26];
  uint64_t v29 = sub_25E4256A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerReindexer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E3CAEF4);
}

uint64_t sub_25E3CAEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StickerContainer(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_25E4256A0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for StickerReindexer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E3CB034);
}

uint64_t sub_25E3CB034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StickerContainer(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_25E4256A0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_25E3CB160()
{
  uint64_t result = type metadata accessor for StickerContainer(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25E4256A0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StickerReindexerError(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v10 = *a2;
      *(void *)a1 = *a2;
      uint64_t v11 = v10;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_25E425390();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for StickerReindexerError(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    int v5 = *a1;
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = sub_25E425390();
    uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
  }
}

void **initializeWithCopy for StickerReindexerError(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    id v9 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_25E425390();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **assignWithCopy for StickerReindexerError(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E3CA100((uint64_t)a1, type metadata accessor for StickerReindexerError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *a2;
      *a1 = *a2;
      id v9 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_25E425390();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for StickerReindexerError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_25E425390();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for StickerReindexerError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E3CA100((uint64_t)a1, type metadata accessor for StickerReindexerError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25E425390();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerReindexerError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for StickerReindexerError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25E3CB7C0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25E3CB7D0()
{
  uint64_t result = sub_25E425390();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_25E3CB864(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25E425390();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      uint64_t v9 = type metadata accessor for CoreDataDataMapper.StoreType(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    id v16 = (char *)a2 + v14;
    uint64_t v17 = *(void **)v16;
    uint64_t v18 = *((void *)v16 + 1);
    char v19 = v16[16];
    id v20 = v13;
    sub_25E3CA4C8(v17, v18, v19);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    v15[16] = v19;
    uint64_t v21 = a3[8];
    uint64_t v22 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = (uint64_t)v22;
    id v23 = v22;
  }
  return a1;
}

void sub_25E3CBA28(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25E425390();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }

  sub_25E3CA64C(*(void **)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8), *(unsigned char *)(a1 + a2[7] + 16));
  uint64_t v6 = *(void **)(a1 + a2[8]);
}

char *sub_25E3CBB14(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    uint64_t v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  a1[v10] = a2[v10];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void **)v14;
  uint64_t v16 = *((void *)v14 + 1);
  char v17 = v14[16];
  id v18 = v11;
  sub_25E3CA4C8(v15, v16, v17);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  v13[16] = v17;
  uint64_t v19 = a3[8];
  id v20 = *(void **)&a2[v19];
  *(void *)&a1[v19] = v20;
  id v21 = v20;
  return a1;
}

char *sub_25E3CBC88(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = *(void **)&a2[v12];
  uint64_t v14 = *(void **)&a1[v12];
  *(void *)&a1[v12] = v13;
  id v15 = v13;

  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  char v17 = &a1[v16];
  id v18 = &a2[v16];
  uint64_t v19 = *(void **)v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v21 = v18[16];
  sub_25E3CA4C8(*(void **)v18, v20, v21);
  uint64_t v22 = *(void **)v17;
  uint64_t v23 = *((void *)v17 + 1);
  char v24 = v17[16];
  *(void *)char v17 = v19;
  *((void *)v17 + 1) = v20;
  v17[16] = v21;
  sub_25E3CA64C(v22, v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = *(void **)&a2[v25];
  uint64_t v27 = *(void **)&a1[v25];
  *(void *)&a1[v25] = v26;
  id v28 = v26;

  return a1;
}

char *sub_25E3CBE78(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    uint64_t v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  a1[v9] = a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  return a1;
}

char *sub_25E3CBFC8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = type metadata accessor for CoreDataDataMapper.StoreType(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  id v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  char v17 = v16[16];
  id v18 = *(void **)v15;
  uint64_t v19 = *((void *)v15 + 1);
  char v20 = v15[16];
  *(_OWORD *)id v15 = *(_OWORD *)v16;
  v15[16] = v17;
  sub_25E3CA64C(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  return a1;
}

uint64_t sub_25E3CC19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E3CC1B0);
}

uint64_t sub_25E3CC1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25E3CC270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E3CC284);
}

uint64_t sub_25E3CC284(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CoreDataDataMapper.StoreType(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25E3CC340()
{
  uint64_t result = type metadata accessor for CoreDataDataMapper.StoreType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_25E3CC3F0()
{
  unint64_t result = qword_26A6ED758;
  if (!qword_26A6ED758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED758);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_25E3CC4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25E3CC504()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E3CC53C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E3CC578()
{
  return sub_25E3CE6A4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E3C3640);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_25E3CC5A8()
{
  unint64_t result = qword_26B388E98;
  if (!qword_26B388E98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B388E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388E98);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void sub_25E3CC64C(void *a1)
{
  if (qword_26B388F70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25E4256A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B388F50);
  id v3 = a1;
  id v4 = a1;
  uint64_t v5 = sub_25E425680();
  os_log_type_t v6 = sub_25E425BF0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = a1;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    sub_25E425D80();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_25E3BB000, v5, v6, "Process was asked to exit. %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v8, -1, -1);
    MEMORY[0x2611D77B0](v7, -1, -1);
  }
  else
  {
  }
  unint64_t v10 = (void *)sub_25E425280();
  uint64_t v11 = (uint64_t)objc_msgSend(v10, sel_code);

  if (v11 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v11 <= 0x7FFFFFFF)
  {
    exit(v11);
  }
  __break(1u);
}

uint64_t sub_25E3CC824()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_25E3CF048;
  id v4 = (uint64_t (__cdecl *)())((char *)&dword_26A6ED7B0 + dword_26A6ED7B0);
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E3CF048;
  return v4();
}

uint64_t sub_25E3CC908()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_25E3CF048;
  id v4 = (uint64_t (__cdecl *)())((char *)&dword_26A6ED7B0 + dword_26A6ED7B0);
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E3CF048;
  return v4();
}

void sub_25E3CC9EC()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_standardUserDefaults);
  uint64_t v2 = (void *)sub_25E4258C0();
  unsigned __int8 v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if ((v3 & 1) == 0)
  {
    id v4 = objc_msgSend(v0, sel_standardUserDefaults);
    uint64_t v5 = (void *)sub_25E4258C0();
    unsigned __int8 v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

    if ((v6 & 1) == 0)
    {
      uint64_t v7 = sub_25E3EDE90();
      if (!v7
        || (uint64_t v8 = v7, (sub_25E3EDA30(0xD000000000000016, 0x800000025E429BE0, v7) & 1) != 0)
        && (sub_25E3EDA30(0xD00000000000001DLL, 0x800000025E429C00, v8) & 1) != 0
        && (sub_25E3EDA30(0xD000000000000024, 0x800000025E429C20, v8) & 1) != 0)
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_25E4256A0();
        __swift_project_value_buffer(v9, (uint64_t)qword_26B388F50);
        unint64_t v10 = sub_25E425680();
        os_log_type_t v11 = sub_25E425C00();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v12 = 0;
          _os_log_impl(&dword_25E3BB000, v10, v11, "Sticker container passed initial verification.", v12, 2u);
          MEMORY[0x2611D77B0](v12, -1, -1);
        }
      }
      else
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_25E4256A0();
        __swift_project_value_buffer(v13, (uint64_t)qword_26B388F50);
        unint64_t v10 = sub_25E425680();
        os_log_type_t v14 = sub_25E425C00();
        if (os_log_type_enabled(v10, v14))
        {
          id v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v15 = 0;
          _os_log_impl(&dword_25E3BB000, v10, v14, "Sticker container failed initial verification. Will repair.", v15, 2u);
          MEMORY[0x2611D77B0](v15, -1, -1);
        }
      }

      id v16 = objc_msgSend(v0, sel_standardUserDefaults);
      id v17 = (id)sub_25E4258C0();
      objc_msgSend(v16, sel_setBool_forKey_, 1);
    }
  }
}

NSObject *sub_25E3CCD6C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389340);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25E425390();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v29 = (char *)&v28 - v8;
  type metadata accessor for CoreDataDataMapper(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  os_log_type_t v11 = (void *)sub_25E4258C0();
  uint64_t v12 = (void *)sub_25E4258C0();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (v13)
  {
    sub_25E425330();

    os_log_type_t v14 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v14(v2, v7, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      id v15 = v29;
      v14(v29, v2, v3);
      id v16 = objc_allocWithZone(MEMORY[0x263EFF298]);
      id v17 = (void *)sub_25E4252F0();
      id v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      if (v18)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
      }
      else
      {
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_25E4256A0();
        __swift_project_value_buffer(v24, (uint64_t)qword_26B388F50);
        id v18 = sub_25E425680();
        os_log_type_t v25 = sub_25E425BF0();
        if (os_log_type_enabled(v18, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v26 = 0;
          _os_log_impl(&dword_25E3BB000, v18, v25, "Could not load the database model", v26, 2u);
          MEMORY[0x2611D77B0](v26, -1, -1);
        }

        sub_25E3CC3F0();
        swift_allocError();
        *uint64_t v27 = 9;
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
      }
      return v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_25E3CE8D4((uint64_t)v2, (uint64_t *)&unk_26B389340);
  if (qword_26B388F70 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_25E4256A0();
  __swift_project_value_buffer(v19, (uint64_t)qword_26B388F50);
  id v18 = sub_25E425680();
  os_log_type_t v20 = sub_25E425BF0();
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_25E3BB000, v18, v20, "Could not locate the database model", v21, 2u);
    MEMORY[0x2611D77B0](v21, -1, -1);
  }

  sub_25E3CC3F0();
  swift_allocError();
  *uint64_t v22 = 8;
  swift_willThrow();

  return v18;
}

id sub_25E3CD244(uint64_t a1, void *a2, int a3)
{
  uint64_t v6 = sub_25E4252B0();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  MEMORY[0x270FA5388](v6);
  v90 = &v84[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389340);
  MEMORY[0x270FA5388](v8 - 8);
  v88 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_25E425390();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v87 = &v84[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v89 = &v84[-v15];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v93 = &v84[-v17];
  MEMORY[0x270FA5388](v16);
  char v86 = &v84[-v18];
  uint64_t v19 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = &v84[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = &v84[-v23];
  uint64_t v97 = v11;
  uint64_t v98 = v10;
  os_log_type_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v25(&v84[-v23], 1, 2, v10);
  int v26 = sub_25E3F9740(a1, (uint64_t)v24);
  sub_25E3CA100((uint64_t)v24, type metadata accessor for CoreDataDataMapper.StoreType);
  int v85 = v26 & a3;
  if (v26 & a3) {
    uint64_t v27 = (objc_class *)MEMORY[0x263EFF2C0];
  }
  else {
    uint64_t v27 = (objc_class *)MEMORY[0x263EFF2E8];
  }
  id v28 = objc_allocWithZone(v27);
  id v29 = a2;
  uint64_t v30 = (void *)sub_25E4258C0();
  id v31 = objc_msgSend(v28, sel_initWithName_managedObjectModel_, v30, v29);

  id v95 = v31;
  id v32 = objc_msgSend(v31, sel_persistentStoreDescriptions);
  sub_25E3CE930(0, &qword_26B388FE8);
  unint64_t v33 = sub_25E425AC0();

  uint64_t v34 = v98;
  if (!(v33 >> 62))
  {
    uint64_t v35 = v97;
    if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return v95;
  }
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_25E425F80();
  swift_bridgeObjectRelease();
  uint64_t v35 = v97;
  if (!v82) {
    goto LABEL_33;
  }
LABEL_6:
  if ((v33 & 0xC000000000000001) != 0)
  {
    id v36 = (id)MEMORY[0x2611D6C30](0, v33);
    goto LABEL_9;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v36 = *(id *)(v33 + 32);
LABEL_9:
    id v94 = v36;
    swift_bridgeObjectRelease();
    sub_25E3C9F8C(a1, (uint64_t)v22, type metadata accessor for CoreDataDataMapper.StoreType);
    int v37 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48))(v22, 2, v34);
    if (!v37)
    {
      uint64_t v46 = v93;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 32))(v93, v22, v34);
      if (qword_26B388F70 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_25E4256A0();
      __swift_project_value_buffer(v47, (uint64_t)qword_26B388F50);
      id v48 = v89;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v89, v46, v34);
      uint64_t v49 = sub_25E425680();
      os_log_type_t v50 = sub_25E425C00();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v100 = v52;
        *(_DWORD *)uint64_t v51 = 136315138;
        sub_25E3CA200((unint64_t *)&qword_26B388CE0, MEMORY[0x263F06EA8]);
        uint64_t v53 = sub_25E426140();
        uint64_t v99 = sub_25E3C8F74(v53, v54, &v100);
        sub_25E425D80();
        swift_bridgeObjectRelease();
        BOOL v55 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
        v55(v48, v98);
        _os_log_impl(&dword_25E3BB000, v49, v50, "Using custom database (%s)", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v52, -1, -1);
        uint64_t v56 = v51;
        uint64_t v34 = v98;
        MEMORY[0x2611D77B0](v56, -1, -1);
      }
      else
      {
        BOOL v55 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
        v55(v48, v34);
      }

      uint64_t v65 = v93;
      id v66 = (void *)sub_25E4252F0();
      objc_msgSend(v94, sel_setURL_, v66);

      v55(v65, v34);
      goto LABEL_27;
    }
    if (v37 == 1)
    {
      if (qword_26B388F70 == -1) {
        goto LABEL_12;
      }
      goto LABEL_38;
    }
    if (qword_26B388F70 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_25E4256A0();
    __swift_project_value_buffer(v57, (uint64_t)qword_26B388F50);
    os_log_type_t v58 = sub_25E425680();
    os_log_type_t v59 = sub_25E425C00();
    if (os_log_type_enabled(v58, v59))
    {
      id v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v60 = 0;
      _os_log_impl(&dword_25E3BB000, v58, v59, "Using in-memory database", v60, 2u);
      id v61 = v60;
      uint64_t v34 = v98;
      MEMORY[0x2611D77B0](v61, -1, -1);
    }

    v25(v88, 1, 1, v34);
    (*(void (**)(unsigned char *, void, uint64_t))(v91 + 104))(v90, *MEMORY[0x263F06E50], v92);
    id v62 = v87;
    sub_25E425380();
    uint64_t v63 = (void *)sub_25E4252F0();
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v62, v34);
    id v64 = v94;
    objc_msgSend(v94, sel_setURL_, v63);

    return v95;
  }
  __break(1u);
LABEL_38:
  swift_once();
LABEL_12:
  uint64_t v38 = sub_25E4256A0();
  __swift_project_value_buffer(v38, (uint64_t)qword_26B388F50);
  uint64_t v39 = sub_25E425680();
  os_log_type_t v40 = sub_25E425C00();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v42 = (uint64_t)v86;
  if (v41)
  {
    long long v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v43 = 0;
    _os_log_impl(&dword_25E3BB000, v39, v40, "Using shared database", v43, 2u);
    uint64_t v35 = v97;
    MEMORY[0x2611D77B0](v43, -1, -1);
  }

  uint64_t v44 = v96;
  sub_25E3BE9A8(v42);
  if (!v44)
  {
    dispatch_group_t v70 = (void *)sub_25E4252F0();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v42, v34);
    objc_msgSend(v94, sel_setURL_, v70);

    if (v85)
    {
      dispatch_group_t v71 = sub_25E425680();
      os_log_type_t v72 = sub_25E425C00();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v73 = 0;
        _os_log_impl(&dword_25E3BB000, v71, v72, "Configuring CloudKit", v73, 2u);
        MEMORY[0x2611D77B0](v73, -1, -1);
      }

      sub_25E3CE930(0, (unint64_t *)&qword_26B389510);
      uint64_t v74 = (void *)sub_25E425D00();
      id v75 = v94;
      objc_msgSend(v94, sel_setOption_forKey_, v74, *MEMORY[0x263EFF0B0]);

      uint64_t v76 = (void *)sub_25E4258C0();
      objc_msgSend(v75, sel_setConfiguration_, v76);

      id v77 = objc_allocWithZone(MEMORY[0x263EFF2E0]);
      uint64_t v78 = (void *)sub_25E4258C0();
      id v79 = objc_msgSend(v77, sel_initWithContainerIdentifier_, v78);

      uint64_t v80 = (void *)sub_25E4258C0();
      objc_msgSend(v79, sel_setApsConnectionMachServiceName_, v80);

      objc_msgSend(v79, sel_setUseDeviceToDeviceEncryption_, 1);
      uint64_t v81 = (void *)sub_25E425D10();
      objc_msgSend(v79, sel_setCkAssetThresholdBytes_, v81);

      objc_msgSend(v75, sel_setCloudKitContainerOptions_, v79);
    }
LABEL_27:
    id v45 = v95;
    sub_25E3CE930(0, (unint64_t *)&qword_26B389510);
    uint64_t v67 = (void *)sub_25E425D00();
    id v68 = (id)*MEMORY[0x263EFF0B0];
    id v69 = v94;
    objc_msgSend(v94, sel_setOption_forKey_, v67, v68);

    return v45;
  }
  id v45 = v95;

  return v45;
}

void sub_25E3CDDA8(void *a1)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  if os_variant_has_internal_content() && ((sub_25E3EE298() & 1) != 0 || (sub_25E3EE350()))
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      v22[0] = 0;
      id v4 = a1;
      if (objc_msgSend(v3, sel_initializeCloudKitSchemaWithOptions_error_, 0, v22))
      {
        uint64_t v5 = qword_26B388F70;
        id v6 = v22[0];
        if (v5 != -1) {
          swift_once();
        }
        uint64_t v7 = sub_25E4256A0();
        __swift_project_value_buffer(v7, (uint64_t)qword_26B388F50);
        uint64_t v8 = sub_25E425680();
        os_log_type_t v9 = sub_25E425BD0();
        if (os_log_type_enabled(v8, v9))
        {
          uint64_t v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v10 = 0;
          _os_log_impl(&dword_25E3BB000, v8, v9, "[Internal] CloudKit schema initialized", v10, 2u);
          MEMORY[0x2611D77B0](v10, -1, -1);
        }
      }
      else
      {
        id v11 = v22[0];
        uint64_t v12 = (void *)sub_25E425290();

        swift_willThrow();
        if (qword_26B388F70 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_25E4256A0();
        __swift_project_value_buffer(v13, (uint64_t)qword_26B388F50);
        id v14 = v12;
        id v15 = v12;
        uint64_t v16 = sub_25E425680();
        os_log_type_t v17 = sub_25E425BF0();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v19 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v18 = 138412290;
          id v20 = v12;
          uint64_t v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v22[0] = v21;
          sub_25E425D80();
          *uint64_t v19 = v21;

          _os_log_impl(&dword_25E3BB000, v16, v17, "[Internal] Could not initialize CloudKit schema: %@", v18, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
          swift_arrayDestroy();
          MEMORY[0x2611D77B0](v19, -1, -1);
          MEMORY[0x2611D77B0](v18, -1, -1);
        }
        else
        {
        }
      }
    }
  }
}

uint64_t sub_25E3CE0F0()
{
  return MEMORY[0x270FA2498](sub_25E3CE10C, 0, 0);
}

uint64_t sub_25E3CE10C()
{
  uint64_t v1 = sub_25E3EDE90();
  if (v1)
  {
    uint64_t v2 = v1;
    if ((sub_25E3EDA30(0xD000000000000016, 0x800000025E429BE0, v1) & 1) != 0
      && (sub_25E3EDA30(0xD00000000000001DLL, 0x800000025E429C00, v2) & 1) != 0)
    {
      char v3 = sub_25E3EDA30(0xD000000000000024, 0x800000025E429C20, v2) ^ 1;
    }
    else
    {
      char v3 = 1;
    }
  }
  else
  {
    char v3 = 0;
  }
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_standardUserDefaults);
  id v6 = (void *)sub_25E4258C0();
  unsigned int v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  if ((v3 & 1) != v7)
  {
    id v8 = objc_msgSend(v4, sel_standardUserDefaults);
    os_log_type_t v9 = (void *)sub_25E4258C0();
    if (v3)
    {
      objc_msgSend(v8, sel_setBool_forKey_, 1, v9);

      sub_25E3CC3F0();
      uint64_t v10 = (void *)swift_allocError();
      unsigned char *v11 = 17;
      sub_25E3CC64C(v10);
    }
    objc_msgSend(v8, sel_setBool_forKey_, 0, v9);

    id v12 = objc_msgSend(v4, sel_standardUserDefaults);
    uint64_t v13 = (void *)sub_25E4258C0();
    objc_msgSend(v12, sel_setBool_forKey_, 1, v13);
  }
  id v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_25E3CE364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E3CE3CC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_25E3CF048;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A6ED7B8 + dword_26A6ED7B8);
  return v6(a1, v4);
}

void *sub_25E3CE484@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void))(v1 + 16))(&v5, *(void *)(v1 + 32));
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_25E3CE4D0()
{
  return MEMORY[0x270FA0238](v0, 18, 7);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v1 = (int *)type metadata accessor for StickerContainer(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 2, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  unint64_t v8 = (((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  sub_25E3CA64C(*(void **)(v5 + v1[7]), *(void *)(v5 + v1[7] + 8), *(unsigned char *)(v5 + v1[7] + 16));
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v8 + 8, v2 | 7);
}

uint64_t sub_25E3CE68C()
{
  return sub_25E3CE6A4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E3C304C);
}

uint64_t sub_25E3CE6A4(uint64_t (*a1)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for StickerContainer(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v4);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a1(v1 + v3, v7, v8, v9, v10, v11);
}

void *sub_25E3CE76C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, void))(v1 + 16))(&v5, *(void *)(v1 + 32));
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_25E3CE7B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25E3CE7CC()
{
  return sub_25E3CE6A4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E3C3C3C);
}

uint64_t sub_25E3CE7E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_25E3CE814()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E3CE850()
{
  return sub_25E3CE6A4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E3C3940);
}

uint64_t sub_25E3CE868()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3CE87C()
{
  return sub_25E3CE6A4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E3C334C);
}

uint64_t sub_25E3CE894()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_25E3CE8CC(uint64_t a1, void *a2)
{
  sub_25E3C69C4(a1, a2, v2);
}

uint64_t sub_25E3CE8D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25E3CE930(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_25E3CE96C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E3CE9D4()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000) {
    sub_25E3CEA28(*(void *)(v0 + 16), v1);
  }
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3CEA28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_25E3CEA84()
{
  return sub_25E3CE6A4((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25E3C2D50);
}

uint64_t sub_25E3CEA9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25E3CEAB0(a1, a2);
  }
  return a1;
}

uint64_t sub_25E3CEAB0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_25E3CEB08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_25E3CEB1C(a1, a2);
  }
  return a1;
}

uint64_t sub_25E3CEB1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25E3CEA28(a1, a2);
  }
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_25E3CEB84()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25E3CEBC4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_25E3CEC70;
  v4[15] = v2;
  v4[16] = v3;
  return MEMORY[0x270FA2498](sub_25E3C6B14, 0, 0);
}

uint64_t sub_25E3CEC70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25E3CED64()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3CED9C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25E3CEC70;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A6ED7B8 + dword_26A6ED7B8);
  return v6(a1, v4);
}

uint64_t sub_25E3CEE54()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

int *sub_25E3CEE64()
{
  return sub_25E3C8008(*(void *)(v0 + 16));
}

uint64_t sub_25E3CEE6C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3CEE7C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *initializeBufferWithCopyOfBuffer for StickerContainer.StickerContainerImpl(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StickerContainer.StickerContainerImpl(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for StickerContainer.StickerContainerImpl(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for StickerContainer.StickerContainerImpl(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerContainer.StickerContainerImpl(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerContainer.StickerContainerImpl(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerContainer.StickerContainerImpl()
{
  return &type metadata for StickerContainer.StickerContainerImpl;
}

uint64_t sub_25E3CF0BC(char *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v38 - v8;
  uint64_t v45 = v7;
  uint64_t v10 = *(int *)(v7 + 48);
  uint64_t v11 = v1 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter;
  uint64_t v12 = sub_25E417874((uint64_t)v38 - v8, "touch spotlight item", 20, 2);
  uint64_t v44 = v10;
  *(void *)&v9[v10] = v12;
  uint64_t aBlock = 0xD000000000000015;
  unint64_t v48 = 0x800000025E429FF0;
  uint64_t v13 = &a1[OBJC_IVAR___STKSticker_identifier];
  uint64_t v14 = sub_25E4254F0();
  unint64_t v15 = sub_25E3D016C();
  uint64_t v42 = v14;
  long long v43 = v13;
  unint64_t v41 = v15;
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  uint64_t v16 = aBlock;
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_25E4256A0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B38BC60);
  uint64_t v18 = a1;
  uint64_t v19 = sub_25E425680();
  os_log_type_t v20 = sub_25E425BE0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    v38[1] = v16;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t aBlock = v23;
    uint64_t v39 = v6;
    uint64_t v40 = v11;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v24 = sub_25E426140();
    uint64_t v46 = sub_25E3C8F74(v24, v25, &aBlock);
    id v6 = v39;
    sub_25E425D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v19, v20, "Will touch spotlight items for sticker: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v23, -1, -1);
    MEMORY[0x2611D77B0](v22, -1, -1);
  }
  else
  {
  }
  id v26 = objc_allocWithZone(MEMORY[0x263F02AC8]);
  uint64_t v27 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  id v28 = (void *)sub_25E425AB0();
  id v29 = objc_msgSend(v26, sel_initWithQueryString_attributes_, v27, v28);

  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v18;
  uint64_t v51 = sub_25E3D01FC;
  uint64_t v52 = v30;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v48 = 1107296256;
  uint64_t v49 = sub_25E3CFEEC;
  os_log_type_t v50 = &block_descriptor_0;
  id v31 = _Block_copy(&aBlock);
  id v32 = v18;
  swift_release();
  objc_msgSend(v29, sel_setFoundItemsHandler_, v31);
  _Block_release(v31);
  objc_msgSend(v29, sel_start);

  uint64_t v33 = *(int *)(v45 + 48);
  uint64_t v34 = sub_25E4255F0();
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v6, v9, v34);
  uint64_t v36 = *(void *)&v9[v44];
  *(void *)&v6[v33] = v36;
  swift_retain();
  sub_25E41A428("touch spotlight item", 20, 2, (uint64_t)v6, v36);
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v34);
  return sub_25E3D021C((uint64_t)v9);
}

void sub_25E3CF570(void (**a1)(char *, uint64_t), void *a2)
{
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25E4256A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B38BC60);
  swift_bridgeObjectRetain_n();
  id v5 = a2;
  id v6 = sub_25E425680();
  os_log_type_t v7 = sub_25E425BE0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    aBlock[0] = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    if ((unint64_t)a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_25E425F80();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_25E425D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    sub_25E4254F0();
    sub_25E3D016C();
    uint64_t v10 = sub_25E426140();
    sub_25E3C8F74(v10, v11, aBlock);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v6, v7, "Total %ld spotlight items found for sticker %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v9, -1, -1);
    MEMORY[0x2611D77B0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v12 = v5;
  sub_25E3D02BC(a1, (uint64_t)v12);

  id v13 = objc_msgSend(self, sel_defaultSearchableIndex);
  sub_25E3D027C();
  uint64_t v14 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  aBlock[4] = (uint64_t)sub_25E3D0508;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_25E3CFE80;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v12;
  swift_release();
  objc_msgSend(v13, sel_indexSearchableItems_completionHandler_, v14, v16);
  _Block_release(v16);

  id v18 = v17;
  uint64_t v19 = sub_25E425680();
  os_log_type_t v20 = sub_25E425BE0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    sub_25E4254F0();
    sub_25E3D016C();
    uint64_t v23 = sub_25E426140();
    sub_25E3C8F74(v23, v24, aBlock);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v19, v20, "Done touching spotlight items for sticker: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v22, -1, -1);
    MEMORY[0x2611D77B0](v21, -1, -1);
  }
  else
  {
  }
}

void sub_25E3CFA24(void *a1, void *a2)
{
  if (a1)
  {
    id v4 = a1;
    if (qword_26B389398 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_25E4256A0();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B38BC60);
    id v6 = a2;
    id v7 = a1;
    id v8 = v6;
    id v9 = a1;
    oslog = sub_25E425680();
    os_log_type_t v10 = sub_25E425BF0();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      id v12 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v26 = v13;
      *(_DWORD *)uint64_t v11 = 136315394;
      sub_25E4254F0();
      sub_25E3D016C();
      uint64_t v14 = sub_25E426140();
      sub_25E3C8F74(v14, v15, &v26);
      sub_25E425D80();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2112;
      id v16 = a1;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      *id v12 = v25;

      _os_log_impl(&dword_25E3BB000, oslog, v10, "Error while touching spotlight item with sticker identifier %s: %@", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v13, -1, -1);
      MEMORY[0x2611D77B0](v11, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_26B389398 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_25E4256A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B38BC60);
    oslog = a2;
    id v18 = sub_25E425680();
    os_log_type_t v19 = sub_25E425BD0();
    if (os_log_type_enabled(v18, v19))
    {
      os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v20 = 136315138;
      uint64_t v26 = v21;
      sub_25E4254F0();
      sub_25E3D016C();
      uint64_t v22 = sub_25E426140();
      sub_25E3C8F74(v22, v23, &v26);
      sub_25E425D80();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v18, v19, "Done touching sticker spotlight item with sticker identifier %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v21, -1, -1);
      MEMORY[0x2611D77B0](v20, -1, -1);

      return;
    }
  }
}

void sub_25E3CFE80(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_25E3CFEEC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_25E3D027C();
  uint64_t v2 = sub_25E425AC0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E3CFF60()
{
  return sub_25E3D0110(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter);
}

uint64_t sub_25E3CFF70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  uint64_t v2 = sub_25E4256A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25E3D0110(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter);
  return swift_deallocClassInstance();
}

uint64_t sub_25E3D002C()
{
  return _s5TouchCMa();
}

uint64_t _s5TouchCMa()
{
  uint64_t result = qword_26A6ED848;
  if (!qword_26A6ED848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E3D0080()
{
  uint64_t result = sub_25E425620();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25E3D0110(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StickerSignposter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25E3D016C()
{
  unint64_t result = qword_26B389360;
  if (!qword_26B389360)
  {
    sub_25E4254F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389360);
  }
  return result;
}

uint64_t sub_25E3D01C4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_25E3D01FC(void (**a1)(char *, uint64_t))
{
  sub_25E3CF570(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_25E3D021C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25E3D027C()
{
  unint64_t result = qword_26A6ED858;
  if (!qword_26A6ED858)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6ED858);
  }
  return result;
}

uint64_t sub_25E3D02BC(void (**a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = sub_25E425470();
  id v6 = *(void (***)(char *, uint64_t))(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v9) {
      break;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E425F30();
    if (v9 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = v3;
    uint64_t v17 = a1;
    unint64_t v11 = (unint64_t)a1 & 0xC000000000000001;
    a2 += OBJC_IVAR___STKSticker_lastUsedDate;
    swift_beginAccess();
    uint64_t v12 = 0;
    a1 = v6 + 1;
    while (v9 != v12)
    {
      if (v11) {
        uint64_t v13 = (void (*)(char *, uint64_t))MEMORY[0x2611D6C30](v12, v17);
      }
      else {
        uint64_t v13 = v17[v12 + 4];
      }
      id v6 = (void (**)(char *, uint64_t))v13;
      ++v12;
      id v14 = objc_msgSend(v13, sel_attributeSet);
      sub_25E4253F0();
      unint64_t v15 = (void *)sub_25E425430();
      (*a1)(v8, v18);
      objc_msgSend(v14, sel_setLastUsedDate_, v15);

      objc_msgSend(v6, sel_setIsUpdate_, 1);
      sub_25E425F10();
      uint64_t v3 = *(void *)(v19 + 16);
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      if (v9 == v12) {
        return v19;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_25E3D0508(void *a1)
{
  sub_25E3CFA24(a1, *(void **)(v1 + 16));
}

id _STKTextInputObjCStoreFacade.init()()
{
  uint64_t v1 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = v0;
  sub_25E425690();
  uint64_t v5 = sub_25E425390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 3, v5);
  uint64_t v6 = type metadata accessor for StickerStore();
  swift_allocObject();
  uint64_t v7 = StickerStore.init(persistence:)((uint64_t)v3);
  id v8 = (uint64_t *)&v4[OBJC_IVAR____STKTextInputObjCStoreFacade_store];
  v8[3] = v6;
  v8[4] = (uint64_t)&protocol witness table for StickerStore;
  *id v8 = v7;

  uint64_t v9 = (objc_class *)type metadata accessor for _STKTextInputObjCStoreFacade(0);
  v11.receiver = v4;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, sel_init);
}

id _STKTextInputObjCStoreFacade.__allocating_init(store:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_25E425690();
  sub_25E3D930C(a1, (uint64_t)v3 + OBJC_IVAR____STKTextInputObjCStoreFacade_store);

  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id _STKTextInputObjCStoreFacade.init(store:)(uint64_t a1)
{
  id v3 = v1;
  sub_25E425690();
  sub_25E3D930C(a1, (uint64_t)v3 + OBJC_IVAR____STKTextInputObjCStoreFacade_store);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for _STKTextInputObjCStoreFacade(0);
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

uint64_t sub_25E3D096C(uint64_t a1, uint64_t a2)
{
  void (*v45)(void **__return_ptr, uint64_t *, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  long long v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (**v68)(char *, void *);
  void (**v69)(char *, char *, void *);
  uint64_t v70;
  void (*v71)(char *, unint64_t, void *);
  unsigned int (**v72)(char *, uint64_t, void *);
  char **v73;
  long long v74;
  char *v75;
  void *v76;
  char *v77;
  uint64_t v78[4];
  long long v79;
  char v80;
  uint64_t v81;
  char v82;
  void *v83[19];
  char v84[8];
  id v85;
  id v86;
  uint64_t v87;
  long long v88;
  char v89;
  uint64_t v90;
  char v91;

  uint64_t v76 = (void *)sub_25E4254F0();
  uint64_t v65 = *(v76 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v76);
  uint64_t v67 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v77 = (char *)&v58 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v7 - 8);
  id v75 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v78[0]) = 2;
  v83[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)v78, 0, v83, 0, 0, 0, 1, 8, (uint64_t)v84, 0);
  v84[0] = 1;
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v9 = swift_allocObject();
  uint64_t v74 = xmmword_25E4277F0;
  *(_OWORD *)(v9 + 16) = xmmword_25E4277F0;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_25E3D4418();
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 32) = 0x696669746E656469;
  *(void *)(v9 + 40) = 0xEA00000000007265;
  *(void *)(v9 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8A0);
  *(void *)(v9 + 104) = sub_25E3D926C((unint64_t *)&qword_26A6ED8A8, &qword_26A6ED8A0);
  *(void *)(v9 + 72) = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_25E425BC0();

  int v85 = v12;
  if (a2)
  {
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v74;
    *(void *)(v13 + 56) = v10;
    *(void *)(v13 + 64) = v11;
    *(void *)(v13 + 32) = 1701605234;
    *(void *)(v13 + 40) = 0xE400000000000000;
    *(void *)(v13 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
    *(void *)(v13 + 104) = sub_25E3D926C(&qword_26A6ED8B8, &qword_26A6ED8B0);
    *(void *)(v13 + 72) = a2;
    swift_bridgeObjectRetain();
    id v14 = (void *)sub_25E425BC0();
    sub_25E3D446C(v86);
    char v86 = v14;
  }
  else
  {
    sub_25E3D446C(v86);
    char v86 = 0;
  }
  unint64_t v15 = &v62[OBJC_IVAR____STKTextInputObjCStoreFacade_logger];
  swift_bridgeObjectRetain();
  *(void *)&uint64_t v74 = v15;
  uint64_t v16 = sub_25E425680();
  os_log_type_t v17 = sub_25E425BE0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = v67;
  if (v18)
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v20 = 134217984;
    v83[0] = *(void **)(a1 + 16);
    sub_25E425D80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v16, v17, "Representations requested for %ld identifiers", v20, 0xCu);
    MEMORY[0x2611D77B0](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v21 = v76;
  uint64_t v22 = *(void *)(a1 + 16);
  id v61 = a1;
  os_log_type_t v59 = v22;
  if (v22)
  {
    unint64_t v24 = *(void (**)(char *, unint64_t, void *))(v65 + 16);
    uint64_t v23 = v65 + 16;
    unint64_t v25 = a1 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
    uint64_t v26 = *(void *)(v65 + 72);
    os_log_type_t v72 = (unsigned int (**)(char *, uint64_t, void *))(v65 + 48);
    id v69 = (void (**)(char *, char *, void *))(v65 + 32);
    dispatch_group_t v70 = v26;
    uint64_t v27 = v24;
    swift_bridgeObjectRetain();
    uint64_t v73 = (char **)(v23 + 40);
    os_log_type_t v58 = (v23 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    *(void *)&long long v28 = 136315138;
    id v64 = v28;
    id v68 = (void (**)(char *, void *))(v23 - 8);
    id v66 = (v23 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v63 = MEMORY[0x263F8EE58] + 8;
    id v29 = v75;
    uint64_t v65 = v23;
    dispatch_group_t v71 = v24;
    while (1)
    {
      v27(v29, v25, v21);
      uint64_t v67 = *v73;
      ((void (*)(char *, void, uint64_t, void *))v67)(v29, 0, 1, v21);
      if ((*v72)(v29, 1, v21) == 1) {
        break;
      }
      id v31 = v77;
      (*v69)(v77, v29, v21);
      v27(v19, (unint64_t)v31, v21);
      id v32 = v19;
      uint64_t v33 = sub_25E425680();
      os_log_type_t v34 = sub_25E425BE0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        v83[0] = v36;
        *(_DWORD *)uint64_t v35 = v64;
        sub_25E3D9224((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
        uint64_t v37 = sub_25E426140();
        *(void *)(v35 + 4) = sub_25E3C8F74(v37, v38, (uint64_t *)v83);
        swift_bridgeObjectRelease();
        uint64_t v30 = *v68;
        (*v68)(v32, v76);
        _os_log_impl(&dword_25E3BB000, v33, v34, " - %s", (uint8_t *)v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v36, -1, -1);
        uint64_t v39 = v35;
        uint64_t v21 = v76;
        MEMORY[0x2611D77B0](v39, -1, -1);
      }
      else
      {

        uint64_t v30 = *v68;
        (*v68)(v32, v21);
      }
      uint64_t v19 = v32;
      v30(v77, v21);
      uint64_t v27 = v71;
      v25 += v70;
      --v22;
      id v29 = v75;
      if (!v22)
      {
        ((void (*)(char *, uint64_t, uint64_t, void *))v67)(v75, 1, 1, v21);
        break;
      }
    }
  }
  else
  {
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, void *))(v65 + 56);
    swift_bridgeObjectRetain();
    v40(v75, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)&v62[OBJC_IVAR____STKTextInputObjCStoreFacade_store + 24];
  uint64_t v42 = *(void *)&v62[OBJC_IVAR____STKTextInputObjCStoreFacade_store + 32];
  __swift_project_boxed_opaque_existential_1(&v62[OBJC_IVAR____STKTextInputObjCStoreFacade_store], v41);
  id v43 = v86;
  uint64_t v44 = (char *)v87;
  LOBYTE(v78[0]) = v84[0];
  v78[1] = (uint64_t)v85;
  v78[2] = (uint64_t)v86;
  v78[3] = v87;
  id v79 = v88;
  uint64_t v80 = v89;
  uint64_t v81 = v90;
  uint64_t v82 = v91;
  uint64_t v45 = *(void (**)(void **__return_ptr, uint64_t *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v46 = v85;
  sub_25E3D44C0(v43);
  swift_bridgeObjectRetain();
  uint64_t v47 = v60;
  v45(v83, v78, v41, v42);

  sub_25E3D446C(v43);
  if (v47)
  {

    swift_bridgeObjectRelease();
    sub_25E3D446C(v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v76 = v43;
    id v77 = v44;
    unint64_t v48 = v61;
    swift_bridgeObjectRelease();
    uint64_t v49 = v62;
    os_log_type_t v50 = (unint64_t)sub_25E3D5FD4((uint64_t)v83);

    if ((v50 & 0x8000000000000000) != 0 || (v50 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = swift_bridgeObjectRetain();
      uint64_t v51 = (uint64_t)sub_25E3D46D0(v57, (void (*)(void))type metadata accessor for _STKSticker, &qword_26A6ED918, &qword_26A6ED910, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25E3D5704);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v51 = v50 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v78[0] = v51;
    swift_bridgeObjectRetain();
    sub_25E3D8D2C(v78, v48, (uint64_t (*)(uint64_t))sub_25E3F972C, (void (*)(void *, uint64_t))sub_25E3D6C2C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v41 = v78[0];
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v52 = sub_25E425680();
    uint64_t v53 = sub_25E425BE0();
    if (os_log_type_enabled(v52, v53))
    {
      unint64_t v54 = swift_slowAlloc();
      *(_DWORD *)unint64_t v54 = 134218240;
      swift_bridgeObjectRelease();
      v78[0] = v59;
      sub_25E425D80();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2048;
      if (v41 < 0 || (v41 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        BOOL v55 = sub_25E425F80();
        swift_release();
      }
      else
      {
        BOOL v55 = *(void *)(v41 + 16);
      }
      swift_release();
      v78[0] = v55;
      sub_25E425D80();
      swift_release();
      _os_log_impl(&dword_25E3BB000, v52, v53, "Identifiers given: %ld, Stickers found: %ld", (uint8_t *)v54, 0x16u);
      MEMORY[0x2611D77B0](v54, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    sub_25E3D789C((uint64_t)v83);

    sub_25E3D446C(v76);
    swift_bridgeObjectRelease();
  }
  return v41;
}

id sub_25E3D13C4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_25E4254F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (char *)*a1;
  uint64_t v46 = sub_25E3D1BA4(*a1);
  uint64_t v7 = &v6[OBJC_IVAR___STKSticker_attributionInfo];
  swift_beginAccess();
  uint64_t v8 = *(void *)v7;
  if (*(void *)v7)
  {
    uint64_t v9 = *(void **)(v8 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
    uint64_t v10 = (uint64_t *)(v8 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
    swift_beginAccess();
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v14 = *(void *)(v8 + OBJC_IVAR___STKStickerAttributionInfo_name);
    uint64_t v13 = *(void *)(v8 + OBJC_IVAR___STKStickerAttributionInfo_name + 8);
    unint64_t v15 = (objc_class *)type metadata accessor for _STKStickerAttributionInfo();
    uint64_t v16 = (char *)objc_allocWithZone(v15);
    *(void *)&v16[OBJC_IVAR____STKStickerAttributionInfo_adamID] = v9;
    os_log_type_t v17 = &v16[OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier];
    *(void *)os_log_type_t v17 = v12;
    *((void *)v17 + 1) = v11;
    BOOL v18 = &v16[OBJC_IVAR____STKStickerAttributionInfo_name];
    *(void *)BOOL v18 = v14;
    *((void *)v18 + 1) = v13;
    v48.receiver = v16;
    v48.super_class = v15;
    id v19 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v45 = objc_msgSendSuper2(&v48, sel_init);
  }
  else
  {
    id v45 = 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v49, &v6[OBJC_IVAR___STKSticker_identifier], v3);
  os_log_type_t v20 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_name];
  swift_beginAccess();
  uint64_t v21 = v20[1];
  uint64_t v44 = *v20;
  uint64_t v22 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_effect];
  swift_beginAccess();
  uint64_t v43 = *v22;
  uint64_t v23 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_externalURI];
  swift_beginAccess();
  uint64_t v24 = v23[1];
  uint64_t v42 = *v23;
  unint64_t v25 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_accessibilityName];
  swift_beginAccess();
  uint64_t v26 = *v25;
  uint64_t v27 = v25[1];
  uint64_t v41 = v26;
  long long v28 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_metadata];
  swift_beginAccess();
  uint64_t v29 = *v28;
  unint64_t v30 = v28[1];
  id v31 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  uint64_t v40 = v32;
  os_log_type_t v34 = (uint64_t *)&v6[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  id v37 = objc_allocWithZone((Class)type metadata accessor for _STKSticker(0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E3CEA9C(v29, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = sub_25E3D264C(v49, v46, v44, v21, v43, v42, v24, v41, v27, v29, v30, (uint64_t)v45, v40, v33, v36, v35);
  *uint64_t v47 = result;
  return result;
}

unint64_t sub_25E3D180C(uint64_t a1, uint64_t a2)
{
  unint64_t result = sub_25E3D096C(a1, a2);
  unint64_t v5 = result;
  if (v2) {
    return result;
  }
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25E425F80();
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        swift_bridgeObjectRelease_n();
        unint64_t result = swift_release();
        __break(1u);
        return result;
      }
      if ((v5 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = 0;
        do
        {
          uint64_t v8 = MEMORY[0x2611D6C30](v7++, v5);
          unint64_t v9 = *(void *)(v8 + OBJC_IVAR____STKSticker_representations);
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_25E3D4214(v9);
        }
        while (v6 != v7);
      }
      else
      {
        unint64_t v10 = v5 + 32;
        do
        {
          v10 += 8;
          unint64_t v11 = swift_bridgeObjectRetain();
          sub_25E3D4214(v11);
          --v6;
        }
        while (v6);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t)sub_25E3D46D0(v13, (void (*)(void))type metadata accessor for _STKStickerRepresentation, &qword_26A6ED908, &qword_26A6ED900, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25E3D5698);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v14 = v12;
  swift_bridgeObjectRetain();
  sub_25E3D8D2C(&v14, a1, (uint64_t (*)(uint64_t))sub_25E3FC08C, (void (*)(void *, uint64_t))sub_25E3D80CC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v14;
}

id sub_25E3D1A68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), void (*a7)(void))
{
  sub_25E4254F0();
  uint64_t v11 = sub_25E425AC0();
  if (a4) {
    uint64_t v12 = sub_25E425AC0();
  }
  else {
    uint64_t v12 = 0;
  }
  id v13 = a1;
  a6(v11, v12);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  a7(0);
  uint64_t v14 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_25E3D1BA4(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = sub_25E425680();
  os_log_type_t v3 = sub_25E425BE0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    unint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    v19[4] = (uint64_t)v1;
    uint64_t v6 = v1;
    sub_25E425D80();
    *unint64_t v5 = v1;

    _os_log_impl(&dword_25E3BB000, v2, v3, "Building rep for %@", v4, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v5, -1, -1);
    MEMORY[0x2611D77B0](v4, -1, -1);
  }
  else
  {
  }
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR___STKSticker_effect];
  swift_beginAccess();
  uint64_t v8 = (void *)sub_25E3D5DE8(*v7);
  unint64_t v9 = (unint64_t *)&v1[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  unint64_t v10 = *v9;
  if ((*v9 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    id v18 = v8;
    uint64_t v11 = (uint64_t)sub_25E3D46D0(v10, (void (*)(void))type metadata accessor for Sticker.Representation, &qword_26A6ED8F8, &qword_26B3894D0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25E3D5698);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    id v12 = v8;
  }
  v19[0] = v11;
  sub_25E3D3DD0(v19);
  swift_bridgeObjectRelease();
  unint64_t v13 = v19[0];
  uint64_t v14 = v1;
  unint64_t v15 = v8;
  uint64_t v16 = sub_25E3D58BC(v13, v14, v15);
  swift_release();

  return v16;
}

uint64_t sub_25E3D1E3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____STKTextInputObjCStoreFacade_store + 24);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____STKTextInputObjCStoreFacade_store + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____STKTextInputObjCStoreFacade_store), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 72))(a1, v3, v4);
}

id _STKTextInputObjCStoreFacade.__deallocating_deinit()
{
  return sub_25E3D2298(0, (uint64_t (*)(void))type metadata accessor for _STKTextInputObjCStoreFacade);
}

uint64_t _STKStickerRepresentationRole.keyboardPreview.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerRepresentationRole_keyboardPreview);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _STKStickerRepresentationRole.stillVariant.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerRepresentationRole_stillVariant);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _STKStickerRepresentationRole.animatedVariant.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerRepresentationRole_animatedVariant);
  swift_bridgeObjectRetain();
  return v1;
}

id _STKStickerRepresentationRole.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR____STKStickerRepresentationRole_keyboardPreview];
  *(void *)uint64_t v1 = 0xD000000000000020;
  *((void *)v1 + 1) = 0x800000025E42A050;
  uint64_t v2 = &v0[OBJC_IVAR____STKStickerRepresentationRole_stillVariant];
  *(void *)uint64_t v2 = 0xD00000000000001DLL;
  *((void *)v2 + 1) = 0x800000025E42A080;
  uint64_t v3 = &v0[OBJC_IVAR____STKStickerRepresentationRole_animatedVariant];
  *(void *)uint64_t v3 = 0xD000000000000020;
  *((void *)v3 + 1) = 0x800000025E42A0A0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for _STKStickerRepresentationRole();
  return objc_msgSendSuper2(&v5, sel_init);
}

id _STKStickerRepresentationRole.__deallocating_deinit(uint64_t a1)
{
  return sub_25E3D2298(a1, type metadata accessor for _STKStickerRepresentationRole);
}

id sub_25E3D2298(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t _STKSticker.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E3D309C(&OBJC_IVAR____STKSticker_identifier, MEMORY[0x263F07508], a1);
}

uint64_t _STKSticker.representations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _STKSticker.name.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKSticker_name);
}

uint64_t _STKSticker.effectType.getter()
{
  return *(void *)(v0 + OBJC_IVAR____STKSticker_effectType);
}

uint64_t _STKSticker.externalURI.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKSticker_externalURI);
}

uint64_t _STKSticker.accessibilityName.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKSticker_accessibilityName);
}

uint64_t _STKSticker.metadata.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKSticker_metadata);
  sub_25E3CEA9C(v1, *(void *)(v0 + OBJC_IVAR____STKSticker_metadata + 8));
  return v1;
}

void *_STKSticker.attributionInfo.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____STKSticker_attributionInfo);
  id v2 = v1;
  return v1;
}

uint64_t _STKSticker.searchText.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKSticker_searchText);
}

id sub_25E3D259C(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t _STKSticker.sanitizedPrompt.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKSticker_sanitizedPrompt);
}

uint64_t sub_25E3D2614(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

id sub_25E3D264C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v22 = &v16[OBJC_IVAR____STKSticker_identifier];
  uint64_t v23 = sub_25E4254F0();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  *(void *)&v16[OBJC_IVAR____STKSticker_representations] = a2;
  unint64_t v25 = &v16[OBJC_IVAR____STKSticker_name];
  *(void *)unint64_t v25 = a3;
  *((void *)v25 + 1) = a4;
  *(void *)&v16[OBJC_IVAR____STKSticker_effectType] = a5;
  uint64_t v26 = &v16[OBJC_IVAR____STKSticker_externalURI];
  *(void *)uint64_t v26 = a6;
  *((void *)v26 + 1) = a7;
  uint64_t v27 = &v16[OBJC_IVAR____STKSticker_accessibilityName];
  *(void *)uint64_t v27 = a8;
  *((void *)v27 + 1) = a9;
  long long v28 = &v16[OBJC_IVAR____STKSticker_metadata];
  *(void *)long long v28 = a10;
  *((void *)v28 + 1) = a11;
  *(void *)&v16[OBJC_IVAR____STKSticker_attributionInfo] = a12;
  uint64_t v29 = &v16[OBJC_IVAR____STKSticker_searchText];
  *(void *)uint64_t v29 = a13;
  *((void *)v29 + 1) = a14;
  unint64_t v30 = &v16[OBJC_IVAR____STKSticker_sanitizedPrompt];
  *(void *)unint64_t v30 = a15;
  *((void *)v30 + 1) = a16;
  v36.receiver = v16;
  v36.super_class = (Class)type metadata accessor for _STKSticker(0);
  id v31 = objc_msgSendSuper2(&v36, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v31;
}

uint64_t sub_25E3D2860()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_25E427800;
  strcpy((char *)v10, "identifier=");
  HIDWORD(v10[1]) = -352321536;
  sub_25E4254F0();
  sub_25E3D9224((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v10[0];
  *(void *)(v1 + 40) = v10[1];
  v10[1] = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0x3D656D616ELL;
  *(void *)(v1 + 56) = v10[1];
  strcpy((char *)v10, "effectType=");
  HIDWORD(v10[1]) = -352321536;
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  uint64_t v2 = v10[1];
  *(void *)(v1 + 64) = v10[0];
  *(void *)(v1 + 72) = v2;
  strcpy((char *)v10, "externalURI=");
  BYTE5(v10[1]) = 0;
  HIWORD(v10[1]) = -5120;
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  uint64_t v3 = v10[1];
  *(void *)(v1 + 80) = v10[0];
  *(void *)(v1 + 88) = v3;
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  *(void *)(v1 + 96) = 0xD000000000000012;
  *(void *)(v1 + 104) = 0x800000025E42A0D0;
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  v10[0] = 0xD000000000000010;
  v10[1] = 0x800000025E42A0F0;
  objc_super v4 = *(void **)(v0 + OBJC_IVAR____STKSticker_attributionInfo);
  if (v4)
  {
    id v5 = objc_msgSend(v4, sel_description);
    sub_25E4258F0();
  }
  sub_25E425970();
  swift_bridgeObjectRelease();
  uint64_t v6 = v10[1];
  *(void *)(v1 + 112) = v10[0];
  *(void *)(v1 + 120) = v6;
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for _STKStickerRepresentation(0);
  uint64_t v8 = swift_bridgeObjectRetain();
  MEMORY[0x2611D6820](v8, v7);
  sub_25E425970();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = 0xD000000000000010;
  *(void *)(v1 + 136) = 0x800000025E42A110;
  swift_getObjectType();
  sub_25E426290();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
  sub_25E3D926C((unint64_t *)&qword_26A6EDA90, &qword_26A6ED8B0);
  sub_25E425880();
  swift_bridgeObjectRelease();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  return 60;
}

id _STKSticker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void _STKSticker.init()()
{
}

id _STKSticker.__deallocating_deinit()
{
  return sub_25E3D2298(0, (uint64_t (*)(void))type metadata accessor for _STKSticker);
}

uint64_t _STKStickerRepresentation.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E3D309C(&OBJC_IVAR____STKStickerRepresentation_identifier, MEMORY[0x263F07508], a1);
}

uint64_t _STKStickerRepresentation.stickerIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E3D309C(&OBJC_IVAR____STKStickerRepresentation_stickerIdentifier, MEMORY[0x263F07508], a1);
}

uint64_t _STKStickerRepresentation.data.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerRepresentation_data);
  sub_25E3CEAB0(v1, *(void *)(v0 + OBJC_IVAR____STKStickerRepresentation_data + 8));
  return v1;
}

uint64_t _STKStickerRepresentation.uti.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E3D309C(&OBJC_IVAR____STKStickerRepresentation_uti, MEMORY[0x263F8F3A0], a1);
}

uint64_t sub_25E3D309C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

id sub_25E3D311C()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _STKStickerRepresentation.role.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerRepresentation_role);
  swift_bridgeObjectRetain();
  return v1;
}

double _STKStickerRepresentation.size.getter()
{
  return *(double *)(v0 + OBJC_IVAR____STKStickerRepresentation_size);
}

id _STKStickerRepresentation.effect.getter()
{
  return *(id *)(v0 + OBJC_IVAR____STKStickerRepresentation_effect);
}

id sub_25E3D31FC(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerRepresentationRole, &qword_26A6ED860);
}

id static _STKStickerRepresentation.roles.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED4F0, (void **)&qword_26A6ED860);
}

uint64_t sub_25E3D32B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_25E427810;
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = 0x3D656C6F72;
  *(void *)(v2 + 40) = 0xE500000000000000;
  sub_25E4255B0();
  sub_25E3D9224(&qword_26A6EDCA0, MEMORY[0x263F8F3A0]);
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = 1030321269;
  *(void *)(v2 + 56) = 0xE400000000000000;
  sub_25E4254F0();
  sub_25E3D9224((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = 0x3D72656B63697473;
  *(void *)(v2 + 72) = 0xE800000000000000;
  id v3 = *(id *)(v0 + OBJC_IVAR____STKStickerRepresentation_effect);
  id v4 = objc_msgSend(v3, sel_description);
  sub_25E4258F0();

  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = 0x3D746365666665;
  *(void *)(v2 + 88) = 0xE700000000000000;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____STKStickerRepresentation_data);
  unint64_t v6 = *(void *)(v1 + OBJC_IVAR____STKStickerRepresentation_data + 8);
  uint64_t v7 = 0;
  switch(v6 >> 62)
  {
    case 1uLL:
      BOOL v8 = __OFSUB__(HIDWORD(v5), v5);
      int v9 = HIDWORD(v5) - v5;
      if (v8)
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x25E3D36A0);
      }
      uint64_t v7 = v9;
LABEL_6:
      id v13 = objc_msgSend(self, sel_stringFromByteCount_countStyle_, v7, 0);
      sub_25E4258F0();

      sub_25E425970();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 96) = 0x3D61746164;
      *(void *)(v2 + 104) = 0xE500000000000000;
      swift_getObjectType();
      sub_25E426290();
      sub_25E425970();
      swift_bridgeObjectRelease();
      sub_25E425970();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
      sub_25E3D926C((unint64_t *)&qword_26A6EDA90, &qword_26A6ED8B0);
      sub_25E425880();
      swift_bridgeObjectRelease();
      sub_25E425970();
      swift_bridgeObjectRelease();
      sub_25E425970();
      return 60;
    case 2uLL:
      uint64_t v12 = v5 + 16;
      uint64_t v10 = *(void *)(v5 + 16);
      uint64_t v11 = *(void *)(v12 + 8);
      uint64_t v7 = v11 - v10;
      if (!__OFSUB__(v11, v10)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v7 = BYTE6(v6);
      goto LABEL_6;
  }
}

void _STKStickerRepresentation.init()()
{
}

id _STKStickerRepresentation.__deallocating_deinit()
{
  return sub_25E3D2298(0, (uint64_t (*)(void))type metadata accessor for _STKStickerRepresentation);
}

id sub_25E3D3848(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerEffect, &qword_26A6ED868);
}

id static _STKStickerEffect.doNotUseEffectView.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED4F8, (void **)&qword_26A6ED868);
}

id sub_25E3D388C(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerEffect, &qword_26A6ED870);
}

id static _STKStickerEffect.none.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED500, (void **)&qword_26A6ED870);
}

id sub_25E3D38D0(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerEffect, &qword_26A6ED878);
}

id static _STKStickerEffect.stroke.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED508, (void **)&qword_26A6ED878);
}

id sub_25E3D3914(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerEffect, &qword_26A6ED880);
}

id static _STKStickerEffect.comic.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED510, (void **)&qword_26A6ED880);
}

id sub_25E3D3958(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerEffect, &qword_26A6ED888);
}

id static _STKStickerEffect.puffy.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED518, (void **)&qword_26A6ED888);
}

id sub_25E3D399C(uint64_t a1)
{
  return sub_25E3D39BC(a1, type metadata accessor for _STKStickerEffect, &qword_26A6ED890);
}

id sub_25E3D39BC(uint64_t a1, uint64_t (*a2)(void), void *a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)a2()), sel_init);
  *a3 = result;
  return result;
}

id static _STKStickerEffect.iridescent.getter()
{
  return sub_25E3D3A1C(&qword_26A6ED520, (void **)&qword_26A6ED890);
}

id sub_25E3D3A1C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;
  return v3;
}

id sub_25E3D3A80(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25E3D3AF0()
{
  sub_25E3CE930(0, (unint64_t *)&unk_26A6EDAA0);
  if (qword_26A6ED500 != -1) {
    swift_once();
  }
  if (sub_25E425D30()) {
    return 0x656E6F6E2ELL;
  }
  if (qword_26A6ED508 != -1) {
    swift_once();
  }
  if (sub_25E425D30()) {
    return 0x656B6F7274732ELL;
  }
  if (qword_26A6ED510 != -1) {
    swift_once();
  }
  if (sub_25E425D30()) {
    return 0x63696D6F632ELL;
  }
  if (qword_26A6ED518 != -1) {
    swift_once();
  }
  if (sub_25E425D30()) {
    return 0x79666675702ELL;
  }
  if (qword_26A6ED520 != -1) {
    swift_once();
  }
  if (sub_25E425D30()) {
    return 0x637365646972692ELL;
  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for _STKStickerEffect();
  id v2 = objc_msgSendSuper2(&v4, sel_description);
  uint64_t v1 = sub_25E4258F0();

  return v1;
}

id _STKStickerEffect.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _STKStickerEffect();
  return objc_msgSendSuper2(&v2, sel_init);
}

id _STKStickerEffect.__deallocating_deinit(uint64_t a1)
{
  return sub_25E3D2298(a1, type metadata accessor for _STKStickerEffect);
}

uint64_t sub_25E3D3DD0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_25E3FC08C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_25E3D47F8(v6);
  return sub_25E425F20();
}

uint64_t type metadata accessor for _STKTextInputObjCStoreFacade(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B389318);
}

uint64_t sub_25E3D3E6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_25E3EA420(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_25E425470() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3D4010(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25E425F80();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x2611D6C40](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_25E3D5460(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, (void (*)(void))type metadata accessor for Sticker, &qword_26A6ED8F0, &qword_26B3894D8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25E3D5698);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_25E425AE0();
}

uint64_t sub_25E3D4214(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25E425F80();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x2611D6C40](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_25E3D5460(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, (void (*)(void))type metadata accessor for _STKStickerRepresentation, &qword_26A6ED908, &qword_26A6ED900, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25E3D5698);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_25E425AE0();
}

unint64_t sub_25E3D4418()
{
  unint64_t result = qword_26B388FA0;
  if (!qword_26B388FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388FA0);
  }
  return result;
}

void sub_25E3D446C(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

id sub_25E3D44C0(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

uint64_t sub_25E3D44D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_25E3D4500(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Sticker);
}

uint64_t sub_25E3D44E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_25E3D4500(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Sticker.Representation);
}

uint64_t sub_25E3D4500(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        a5(0);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

void *sub_25E3D4694(unint64_t a1)
{
  return sub_25E3D46D0(a1, (void (*)(void))type metadata accessor for ManagedRepresentation, &qword_26A6ED8E8, &qword_26A6ED8E0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25E3D5698);
}

void *sub_25E3D46D0(unint64_t a1, void (*a2)(void), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v10 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v10;
      v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_25E3D5460((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))v10) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v10) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v11;
}

uint64_t sub_25E3D47F8(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1[1];
  uint64_t result = sub_25E426130();
  uint64_t v138 = v2;
  if (result >= v2)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v2 < 2) {
        return result;
      }
      uint64_t v9 = (void *)*v1;
      uint64_t v10 = *v1 + 8;
      uint64_t v11 = -1;
      uint64_t v12 = 1;
      while (1)
      {
        uint64_t v13 = v9[v12];
        unint64_t v14 = (uint64_t *)v10;
        uint64_t v15 = v11;
        do
        {
          unint64_t v16 = (unsigned char *)(v13 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
          uint64_t result = swift_beginAccess();
          if (*v16 != 1) {
            break;
          }
          if (!v9) {
            goto LABEL_254;
          }
          uint64_t v13 = *v14;
          *unint64_t v14 = *(v14 - 1);
          *--unint64_t v14 = v13;
          BOOL v17 = __CFADD__(v15++, 1);
        }
        while (!v17);
        ++v12;
        --v11;
        v10 += 8;
        if (v12 == v138) {
          return result;
        }
      }
    }
LABEL_253:
    __break(1u);
LABEL_254:
    __break(1u);
LABEL_255:
    __break(1u);
LABEL_256:
    __break(1u);
LABEL_257:
    __break(1u);
    goto LABEL_258;
  }
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  if (v2 < -1) {
    goto LABEL_259;
  }
  uint64_t v5 = result;
  if (v2 < 2)
  {
    id v18 = (char *)MEMORY[0x263F8EE78];
    uint64_t v155 = MEMORY[0x263F8EE78];
    unint64_t v8 = (MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32;
    if (v2 != 1)
    {
      unint64_t v22 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v22 < 2) {
        goto LABEL_226;
      }
      goto LABEL_158;
    }
  }
  else
  {
    uint64_t v6 = v4 >> 1;
    type metadata accessor for Sticker.Representation();
    uint64_t v7 = sub_25E425B00();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    unint64_t v8 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v155 = v7;
  }
  uint64_t v136 = v5;
  uint64_t v19 = 0;
  v135 = v1;
  BOOL v20 = (char *)*v1;
  uint64_t v139 = *v1 - 8;
  id v18 = (char *)MEMORY[0x263F8EE78];
  v143 = (char *)*v1;
  __dst = (char *)v8;
  uint64_t v21 = v2;
  do
  {
    uint64_t v23 = v19 + 1;
    if (v19 + 1 < v21)
    {
      uint64_t v24 = (unsigned __int8 *)(*(void *)&v20[8 * v23] + OBJC_IVAR___STKStickerRepresentation_isPreferred);
      swift_beginAccess();
      int v25 = *v24;
      uint64_t v23 = v19 + 2;
      if (v19 + 2 < v21)
      {
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(*(void *)&v20[8 * v23] + OBJC_IVAR___STKStickerRepresentation_isPreferred);
          swift_beginAccess();
          if (v25 != *v26) {
            break;
          }
          if (v21 == ++v23)
          {
            uint64_t v23 = v21;
            break;
          }
        }
      }
      if (v25)
      {
        if (v23 < v19) {
          goto LABEL_249;
        }
        if (v19 < v23)
        {
          uint64_t v27 = (uint64_t *)(v139 + 8 * v23);
          uint64_t v28 = v23;
          uint64_t v29 = v19;
          unint64_t v30 = (uint64_t *)&v20[8 * v19];
          do
          {
            if (v29 != --v28)
            {
              if (!v20) {
                goto LABEL_256;
              }
              uint64_t v31 = *v30;
              *unint64_t v30 = *v27;
              *uint64_t v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
    }
    if (v23 < v21)
    {
      if (__OFSUB__(v23, v19)) {
        goto LABEL_248;
      }
      if (v23 - v19 < v136)
      {
        if (__OFADD__(v19, v136)) {
          goto LABEL_250;
        }
        if (v19 + v136 >= v21) {
          uint64_t v32 = v21;
        }
        else {
          uint64_t v32 = v19 + v136;
        }
        if (v32 < v19) {
          goto LABEL_251;
        }
        if (v23 != v32)
        {
          uint64_t v33 = &v20[8 * v23];
          do
          {
            uint64_t v34 = *(void *)&v20[8 * v23];
            uint64_t v35 = (uint64_t *)v33;
            uint64_t v36 = v19;
            do
            {
              id v37 = (unsigned char *)(v34 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
              swift_beginAccess();
              if (*v37 != 1) {
                break;
              }
              if (!v20) {
                goto LABEL_252;
              }
              uint64_t v34 = *v35;
              uint64_t *v35 = *(v35 - 1);
              *(v35 - 1) = v34;
              ++v36;
              --v35;
            }
            while (v23 != v36);
            ++v23;
            v33 += 8;
          }
          while (v23 != v32);
          uint64_t v23 = v32;
          unint64_t v8 = (unint64_t)__dst;
        }
      }
    }
    if (v23 < v19) {
      goto LABEL_243;
    }
    uint64_t v137 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v18 = sub_25E3F78EC(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v39 = *((void *)v18 + 2);
    unint64_t v38 = *((void *)v18 + 3);
    unint64_t v22 = v39 + 1;
    if (v39 >= v38 >> 1) {
      id v18 = sub_25E3F78EC((char *)(v38 > 1), v39 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v22;
    uint64_t v40 = v18 + 32;
    uint64_t v41 = &v18[16 * v39 + 32];
    *(void *)uint64_t v41 = v19;
    *((void *)v41 + 1) = v137;
    if (v39)
    {
      v140 = v18 + 32;
      v141 = v18;
      while (1)
      {
        unint64_t v42 = v22 - 1;
        if (v22 >= 4)
        {
          uint64_t v47 = &v40[16 * v22];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_232;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_233;
          }
          unint64_t v54 = v22 - 2;
          BOOL v55 = &v40[16 * v22 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_235;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_238;
          }
          if (v59 >= v50)
          {
            id v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_242;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_90;
          }
        }
        else
        {
          if (v22 != 3)
          {
            uint64_t v71 = *((void *)v18 + 4);
            uint64_t v72 = *((void *)v18 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_84;
          }
          uint64_t v44 = *((void *)v18 + 4);
          uint64_t v43 = *((void *)v18 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_234;
        }
        unint64_t v54 = v22 - 2;
        id v60 = &v40[16 * v22 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_237;
        }
        id v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_240;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_241;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_90:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v65) {
          goto LABEL_236;
        }
        uint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_239;
        }
        if (v76 < v64) {
          goto LABEL_21;
        }
LABEL_92:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v22)
        {
          __break(1u);
LABEL_229:
          __break(1u);
LABEL_230:
          __break(1u);
LABEL_231:
          __break(1u);
LABEL_232:
          __break(1u);
LABEL_233:
          __break(1u);
LABEL_234:
          __break(1u);
LABEL_235:
          __break(1u);
LABEL_236:
          __break(1u);
LABEL_237:
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
LABEL_244:
          __break(1u);
LABEL_245:
          __break(1u);
LABEL_246:
          __break(1u);
LABEL_247:
          __break(1u);
LABEL_248:
          __break(1u);
LABEL_249:
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
          goto LABEL_253;
        }
        if (!v20) {
          goto LABEL_255;
        }
        v148 = &v40[16 * v81];
        int64_t v149 = v42;
        uint64_t v82 = &v40[16 * v42];
        uint64_t v83 = *(void *)v82;
        v146 = v82;
        uint64_t v151 = *(void *)v148;
        uint64_t v153 = *((void *)v82 + 1);
        char v84 = &v20[8 * *(void *)v148];
        int v85 = &v20[8 * *(void *)v82];
        unint64_t v86 = (unint64_t)&v20[8 * v153];
        uint64_t v87 = v85 - v84;
        uint64_t v88 = v85 - v84 + 7;
        if (v85 - v84 >= 0) {
          uint64_t v88 = v85 - v84;
        }
        uint64_t v89 = v88 >> 3;
        uint64_t v90 = v86 - (void)v85;
        uint64_t v91 = v86 - (void)v85 + 7;
        if ((uint64_t)(v86 - (void)v85) >= 0) {
          uint64_t v91 = v86 - (void)v85;
        }
        uint64_t v92 = v91 >> 3;
        if (v89 >= v91 >> 3)
        {
          if (v90 < -7) {
            goto LABEL_258;
          }
          if ((unint64_t)__dst >= v86 || __dst != v85) {
            memmove(__dst, v85, 8 * v92);
          }
          v93 = &__dst[8 * v92];
          BOOL v20 = v143;
          if (v151 >= v83 || v90 < 8)
          {
            unint64_t v8 = (unint64_t)__dst;
            id v94 = __dst;
            goto LABEL_144;
          }
          uint64_t v99 = (char *)(v139 + 8 * v153);
          unint64_t v8 = (unint64_t)__dst;
          while (2)
          {
            uint64_t v100 = v99 + 8;
            v101 = v93 - 8;
            v102 = (unsigned char *)(*((void *)v93 - 1) + OBJC_IVAR___STKStickerRepresentation_isPreferred);
            swift_beginAccess();
            if (*v102 == 1)
            {
              v101 = v85 - 8;
              if (v100 == v85)
              {
                BOOL v17 = v99 >= v85;
                v85 -= 8;
                if (!v17) {
                  goto LABEL_137;
                }
              }
              else
              {
                v85 -= 8;
              }
            }
            else if (v100 == v93)
            {
              BOOL v17 = v99 >= v93;
              v93 -= 8;
              if (!v17) {
                goto LABEL_137;
              }
            }
            else
            {
              v93 -= 8;
            }
            *(void *)uint64_t v99 = *(void *)v101;
LABEL_137:
            if (__dst >= v93 || (v99 -= 8, v84 >= v85))
            {
              id v94 = __dst;
              goto LABEL_142;
            }
            continue;
          }
        }
        if (v87 < -7) {
          goto LABEL_258;
        }
        unint64_t v8 = (unint64_t)__dst;
        if (__dst != v84 || __dst >= v85) {
          memmove(__dst, v84, 8 * v89);
        }
        v93 = &__dst[8 * v89];
        if (v83 < v153 && v87 >= 8)
        {
          id v94 = __dst;
          while (1)
          {
            id v95 = (unsigned char *)(*(void *)v85 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
            swift_beginAccess();
            if (*v95 != 1) {
              break;
            }
            uint64_t v96 = v85;
            BOOL v97 = v84 == v85;
            v85 += 8;
            if (!v97) {
              goto LABEL_114;
            }
LABEL_115:
            v84 += 8;
            if (v94 >= v93 || (unint64_t)v85 >= v86) {
              goto LABEL_141;
            }
          }
          uint64_t v98 = v94 + 8;
          uint64_t v96 = v94;
          if (v84 == v94)
          {
            v94 += 8;
            if (v84 < v98) {
              goto LABEL_115;
            }
          }
          else
          {
            v94 += 8;
          }
LABEL_114:
          *(void *)char v84 = *(void *)v96;
          goto LABEL_115;
        }
        id v94 = __dst;
LABEL_141:
        int v85 = v84;
LABEL_142:
        BOOL v20 = v143;
LABEL_144:
        uint64_t v103 = v93 - v94 + 7;
        if (v93 - v94 >= 0) {
          uint64_t v103 = v93 - v94;
        }
        id v18 = v141;
        if (v93 - v94 <= -8) {
          goto LABEL_258;
        }
        uint64_t v104 = v103 >> 3;
        uint64_t v40 = v140;
        if (v85 != v94 || v85 >= &v94[8 * v104]) {
          memmove(v85, v94, 8 * v104);
        }
        if (v153 < v151) {
          goto LABEL_229;
        }
        if (v149 > *((void *)v141 + 2)) {
          goto LABEL_230;
        }
        *(void *)v148 = v151;
        *(void *)&v140[16 * v81 + 8] = v153;
        unint64_t v105 = *((void *)v141 + 2);
        if (v149 >= (uint64_t)v105) {
          goto LABEL_231;
        }
        unint64_t v22 = v105 - 1;
        memmove(v146, v146 + 16, 16 * (v105 - 1 - v149));
        *((void *)v141 + 2) = v105 - 1;
        if (v105 <= 2) {
          goto LABEL_21;
        }
      }
    }
    unint64_t v22 = 1;
LABEL_21:
    uint64_t v19 = v137;
    uint64_t v21 = v138;
  }
  while (v137 < v138);
  uint64_t v1 = v135;
  if (v22 < 2)
  {
LABEL_226:
    swift_bridgeObjectRelease();
    *(void *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_25E425AE0();
    return swift_bridgeObjectRelease();
  }
LABEL_158:
  v106 = (char *)*v1;
  __dsta = (char *)(*v1 - 8);
  v147 = (char *)*v1;
LABEL_159:
  if (v22 < 2) {
    goto LABEL_244;
  }
  if (!v106) {
    goto LABEL_257;
  }
  v107 = (char *)v8;
  v142 = v18;
  int64_t v150 = v22 - 2;
  uint64_t v108 = *(void *)&v18[16 * v22];
  uint64_t v109 = *(void *)&v18[16 * v22 + 16];
  uint64_t v152 = *(void *)&v18[16 * v22 + 24];
  uint64_t v154 = v108;
  v110 = &v106[8 * v108];
  v111 = &v106[8 * v109];
  unint64_t v112 = (unint64_t)&v106[8 * v152];
  uint64_t v113 = v111 - v110;
  uint64_t v114 = v111 - v110 + 7;
  if (v111 - v110 >= 0) {
    uint64_t v114 = v111 - v110;
  }
  uint64_t v115 = v114 >> 3;
  uint64_t v116 = v112 - (void)v111;
  uint64_t v117 = v112 - (void)v111 + 7;
  if ((uint64_t)(v112 - (void)v111) >= 0) {
    uint64_t v117 = v112 - (void)v111;
  }
  uint64_t v118 = v117 >> 3;
  if (v115 >= v117 >> 3)
  {
    if (v116 < -7) {
      goto LABEL_258;
    }
    if ((unint64_t)v107 >= v112 || v107 != v111)
    {
      uint64_t v126 = v109;
      memmove(v107, &v106[8 * v109], 8 * v118);
      uint64_t v109 = v126;
    }
    v120 = &v107[8 * v118];
    id v18 = v142;
    if (v154 >= v109 || v116 < 8)
    {
      unint64_t v8 = (unint64_t)v107;
      v122 = v107;
      goto LABEL_213;
    }
    v127 = &__dsta[8 * v152];
    while (1)
    {
      v128 = v127 + 8;
      v129 = v120 - 8;
      v130 = (unsigned char *)(*((void *)v120 - 1) + OBJC_IVAR___STKStickerRepresentation_isPreferred);
      swift_beginAccess();
      if (*v130 == 1)
      {
        v129 = v111 - 8;
        if (v128 != v111)
        {
          v111 -= 8;
LABEL_203:
          unint64_t v8 = (unint64_t)v107;
LABEL_204:
          *(void *)v127 = *(void *)v129;
          goto LABEL_205;
        }
        BOOL v17 = v127 >= v111;
        v111 -= 8;
        unint64_t v8 = (unint64_t)v107;
        if (v17) {
          goto LABEL_204;
        }
      }
      else
      {
        if (v128 != v120)
        {
          v120 -= 8;
          goto LABEL_203;
        }
        BOOL v17 = v127 >= v120;
        v120 -= 8;
        unint64_t v8 = (unint64_t)v107;
        if (v17) {
          goto LABEL_204;
        }
      }
LABEL_205:
      if (v8 >= (unint64_t)v120)
      {
        v122 = (char *)v8;
LABEL_212:
        id v18 = v142;
LABEL_213:
        uint64_t v121 = v152;
LABEL_214:
        uint64_t v131 = v120 - v122 + 7;
        if (v120 - v122 >= 0) {
          uint64_t v131 = v120 - v122;
        }
        if (v120 - v122 <= -8) {
          goto LABEL_258;
        }
        uint64_t v132 = v131 >> 3;
        if (v111 != v122 || v111 >= &v122[8 * v132]) {
          memmove(v111, v122, 8 * v132);
        }
        if (v121 < v154) {
          goto LABEL_245;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v18 = sub_25E3F7AA8((uint64_t)v18);
        }
        if (v150 >= *((void *)v18 + 2)) {
          goto LABEL_246;
        }
        v133 = &v18[16 * v150 + 32];
        *(void *)v133 = v154;
        *((void *)v133 + 1) = v121;
        unint64_t v134 = *((void *)v18 + 2);
        if (v22 > v134) {
          goto LABEL_247;
        }
        memmove(&v18[16 * v22 + 16], &v18[16 * v22 + 32], 16 * (v134 - v22));
        *((void *)v18 + 2) = v134 - 1;
        unint64_t v22 = v134 - 1;
        v106 = v147;
        if (v134 <= 2) {
          goto LABEL_226;
        }
        goto LABEL_159;
      }
      v127 -= 8;
      if (v110 >= v111)
      {
        unint64_t v8 = (unint64_t)v107;
        v122 = v107;
        goto LABEL_212;
      }
    }
  }
  if (v113 >= -7)
  {
    unint64_t v8 = (unint64_t)v107;
    if (v107 != v110 || v107 >= v111)
    {
      uint64_t v119 = v109;
      memmove(v107, &v106[8 * v108], 8 * v115);
      uint64_t v109 = v119;
    }
    v120 = &v107[8 * v115];
    uint64_t v121 = v152;
    if (v109 >= v152 || v113 < 8)
    {
      v122 = (char *)v8;
LABEL_209:
      v111 = v110;
      id v18 = v142;
      goto LABEL_214;
    }
    v122 = (char *)v8;
    while (2)
    {
      v123 = (unsigned char *)(*(void *)v111 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
      swift_beginAccess();
      if (*v123 == 1)
      {
        v124 = v111;
        BOOL v97 = v110 == v111;
        v111 += 8;
        if (!v97) {
          goto LABEL_181;
        }
      }
      else
      {
        v125 = v122 + 8;
        v124 = v122;
        if (v110 != v122)
        {
          v122 += 8;
          goto LABEL_181;
        }
        v122 += 8;
        if (v110 >= v125) {
LABEL_181:
        }
          *(void *)v110 = *(void *)v124;
      }
      v110 += 8;
      if (v122 >= v120 || (unint64_t)v111 >= v112) {
        goto LABEL_209;
      }
      continue;
    }
  }
LABEL_258:
  sub_25E425FD0();
  __break(1u);
LABEL_259:
  uint64_t result = sub_25E425F70();
  __break(1u);
  return result;
}

uint64_t sub_25E3D5460(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_25E3D926C(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          unint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t (*sub_25E3D5698(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25E3D57B4(v6, a2, a3);
  return sub_25E3D5700;
}

uint64_t (*sub_25E3D5704(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25E3D5834(v6, a2, a3);
  return sub_25E3D5700;
}

void sub_25E3D576C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_25E3D57B4(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2611D6C30](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_25E3D93D4;
  }
  __break(1u);
  return result;
}

void (*sub_25E3D5834(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2611D6C30](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_25E3D58B4;
  }
  __break(1u);
  return result;
}

void sub_25E3D58B4(id *a1)
{
}

uint64_t sub_25E3D58BC(unint64_t a1, void (**a2)(char *, uint64_t), char *a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a3;
  uint64_t v52 = sub_25E4255B0();
  uint64_t v7 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_25E4254F0();
  uint64_t v9 = *(char **)(v43 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v43);
  unint64_t v54 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  BOOL v53 = (char *)&v34 - v12;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v13) {
      break;
    }
    uint64_t v56 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E425F30();
    if (v13 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v34 = v4;
    uint64_t v4 = 0;
    unint64_t v40 = a1 & 0xC000000000000001;
    unint64_t v39 = (char *)a2 + OBJC_IVAR___STKSticker_identifier;
    unint64_t v38 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    id v37 = (void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v36 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v35 = (void (**)(char *, uint64_t))(v9 + 8);
    unint64_t v42 = a1;
    uint64_t v41 = v13;
    while (v13 != v4)
    {
      if (v40) {
        uint64_t v15 = (char *)MEMORY[0x2611D6C30](v4, a1);
      }
      else {
        uint64_t v15 = (char *)*(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v50 = v4 + 1;
      uint64_t v16 = *v38;
      uint64_t v17 = v15;
      id v49 = v15;
      uint64_t v18 = v43;
      v16(v53, &v15[OBJC_IVAR___STKStickerRepresentation_identifier], v43);
      v16(v54, v39, v18);
      uint64_t v19 = (uint64_t *)&v17[OBJC_IVAR___STKStickerRepresentation_data];
      swift_beginAccess();
      uint64_t v21 = *v19;
      unint64_t v20 = v19[1];
      uint64_t v48 = *v37;
      v48(v51, &v17[OBJC_IVAR___STKStickerRepresentation_uti], v52);
      unint64_t v22 = &v17[OBJC_IVAR___STKStickerRepresentation_role];
      swift_beginAccess();
      uint64_t v23 = *(void *)v22;
      uint64_t v45 = *((void *)v22 + 1);
      uint64_t v46 = v23;
      uint64_t v24 = *(void *)&v17[OBJC_IVAR___STKStickerRepresentation_size];
      uint64_t v25 = *(void *)&v17[OBJC_IVAR___STKStickerRepresentation_size + 8];
      Class v47 = (Class)type metadata accessor for _STKStickerRepresentation(0);
      uint64_t v26 = (char *)objc_allocWithZone(v47);
      v16(&v26[OBJC_IVAR____STKStickerRepresentation_identifier], v53, v18);
      v16(&v26[OBJC_IVAR____STKStickerRepresentation_stickerIdentifier], v54, v18);
      uint64_t v27 = (uint64_t *)&v26[OBJC_IVAR____STKStickerRepresentation_data];
      *uint64_t v27 = v21;
      v27[1] = v20;
      uint64_t v28 = v51;
      uint64_t v29 = v52;
      v48(&v26[OBJC_IVAR____STKStickerRepresentation_uti], v51, v52);
      unint64_t v30 = &v26[OBJC_IVAR____STKStickerRepresentation_role];
      uint64_t v7 = v45;
      *(void *)unint64_t v30 = v46;
      *((void *)v30 + 1) = v7;
      uint64_t v31 = &v26[OBJC_IVAR____STKStickerRepresentation_size];
      *(void *)uint64_t v31 = v24;
      *((void *)v31 + 1) = v25;
      uint64_t v9 = v44;
      *(void *)&v26[OBJC_IVAR____STKStickerRepresentation_effect] = v44;
      sub_25E3CEAB0(v21, v20);
      v55.receiver = v26;
      v55.super_class = v47;
      swift_bridgeObjectRetain();
      uint64_t v32 = v9;
      objc_msgSendSuper2(&v55, sel_init);
      (*v36)(v28, v29);
      a2 = v35;
      uint64_t v33 = *v35;
      (*v35)(v54, v18);
      v33(v53, v18);

      sub_25E425F10();
      sub_25E425F40();
      uint64_t v4 = v50;
      sub_25E425F50();
      sub_25E425F20();
      uint64_t v13 = v41;
      a1 = v42;
      if (v41 == v4) {
        return v56;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E3D5DE8(uint64_t a1)
{
  switch(a1)
  {
    case -1:
      if (qword_26A6ED4F8 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_26A6ED868;
      break;
    case 0:
      if (qword_26A6ED500 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_26A6ED870;
      break;
    case 1:
      if (qword_26A6ED508 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_26A6ED878;
      break;
    case 2:
      if (qword_26A6ED510 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_26A6ED880;
      break;
    case 3:
      if (qword_26A6ED518 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_26A6ED888;
      break;
    case 4:
      if (qword_26A6ED520 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_26A6ED890;
      break;
    default:
      sub_25E426180();
      __break(1u);
      JUMPOUT(0x25E3D5FBCLL);
  }
  return *v1;
}

id sub_25E3D5FD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v48 = MEMORY[0x263F8EE78];
  sub_25E425F30();
  sub_25E3D92B0(a1, (uint64_t)v34);
  uint64_t v4 = v44;
  uint64_t v27 = v45;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v6 = sub_25E3D930C((uint64_t)v34, (uint64_t)v33);
  uint64_t v7 = v36;
  uint64_t v8 = v37;
  LOBYTE(v28[0]) = v35;
  v28[1] = v36;
  v28[2] = v37;
  v28[3] = v38;
  long long v29 = v39;
  char v30 = v40;
  uint64_t v31 = v41;
  char v32 = v42;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v10, v5, v4);
  id v12 = v7;
  sub_25E3D44C0(v8);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v33, (uint64_t)v10, v4, (uint64_t)v46);
  for (id result = (id)sub_25E3D789C((uint64_t)v34); ; id result = (id)sub_25E425F20())
  {
    unint64_t v14 = v47;
    unint64_t v15 = v47 >> 62;
    if (v47 >> 62) {
      break;
    }
    if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    id result = (id)sub_25E4103A0();
    unint64_t v21 = v47;
    unint64_t v22 = v47 >> 62;
    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v23)
      {
LABEL_33:
        sub_25E41AC8C(0);
LABEL_34:
        sub_25E3D9370((uint64_t)v46);
        return (id)v48;
      }
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25E425F80();
      id result = (id)swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_25E425F80();
      id result = (id)swift_bridgeObjectRelease();
      if (!v25) {
        goto LABEL_40;
      }
    }
    else if (!*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_33;
    }
    if ((v21 & 0xC000000000000001) != 0)
    {
      id result = (id)MEMORY[0x2611D6C30](0, v21);
      uint64_t v16 = result;
      if (!v22) {
        goto LABEL_17;
      }
    }
    else
    {
      if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_36;
      }
      id result = *(id *)(v21 + 32);
      uint64_t v16 = result;
      if (!v22)
      {
LABEL_17:
        if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_25E425F80();
    id result = (id)swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_38;
    }
LABEL_29:
    sub_25E3EBDA8(0, 1);
    sub_25E41AC8C(v16);
    if (!v16) {
      goto LABEL_34;
    }
LABEL_30:
    v34[0] = v16;
    sub_25E3D13C4(v34, v28);
    if (v2)
    {

      sub_25E3D9370((uint64_t)v46);
      return (id)swift_release();
    }
    uint64_t v2 = 0;

    sub_25E425F10();
    sub_25E425F40();
    sub_25E425F50();
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25E425F80();
  id result = (id)swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_25E425F80();
  id result = (id)swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_39;
  }
LABEL_4:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id result = (id)MEMORY[0x2611D6C30](0, v14);
    uint64_t v16 = result;
    if (v15) {
      goto LABEL_20;
    }
LABEL_7:
    uint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
    if (!v17) {
      goto LABEL_37;
    }
    sub_25E3EBDA8(0, 1);
    goto LABEL_30;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id result = *(id *)(v14 + 32);
    uint64_t v16 = result;
    if (!v15) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_25E425F80();
    id result = (id)swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_25E3D6440(void **__src, void **a2, unint64_t a3, void **__dst, uint64_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v6 = __src;
  uint64_t v7 = (char *)a2 - (char *)__src;
  uint64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    uint64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v64 = __src;
  BOOL v63 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        long long v29 = a2;
        memmove(__dst, a2, 8 * v12);
        a2 = v29;
      }
      char v30 = &v5[v12];
      uint64_t v62 = v30;
      uint64_t v64 = a2;
      uint64_t v31 = (void **)a3;
      if (v6 < a2 && v10 >= 8)
      {
        uint64_t v32 = *(void *)(a5 + 16);
        BOOL v53 = v6;
        objc_super v55 = v5;
        while (1)
        {
          uint64_t v33 = v31 - 1;
          uint64_t v34 = v30 - 1;
          char v35 = *(v30 - 1);
          if (v32) {
            break;
          }
LABEL_57:
          uint64_t v62 = v34;
          if (v31 < v30 || v33 >= v30 || v31 != v30) {
            *uint64_t v33 = *v34;
          }
          uint64_t v36 = a2;
          char v30 = v34;
          if (a2 <= v6) {
            goto LABEL_63;
          }
LABEL_62:
          a2 = v36;
          uint64_t v31 = v33;
          if (v30 <= v5) {
            goto LABEL_63;
          }
        }
        uint64_t v48 = v30 - 1;
        id v49 = v31 - 1;
        uint64_t v51 = v30;
        uint64_t v59 = v31;
        uint64_t v61 = a2;
        uint64_t v36 = a2 - 1;
        id v37 = *(a2 - 1);
        uint64_t v38 = *(void *)(sub_25E4254F0() - 8);
        uint64_t v39 = a5 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
        uint64_t v40 = *(void *)(v38 + 72);
        sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
        id v47 = v35;
        id v57 = v37;
        uint64_t v41 = 0;
        uint64_t v42 = v39;
        while ((sub_25E4258A0() & 1) == 0)
        {
          ++v41;
          v42 += v40;
          if (v32 == v41)
          {
            uint64_t v41 = 0x7FFFFFFFFFFFFFFFLL;
            break;
          }
        }
        uint64_t v43 = 0;
        while ((sub_25E4258A0() & 1) == 0)
        {
          uint64_t v44 = v43 + 1;
          if (__OFADD__(v43, 1))
          {
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          ++v43;
          v39 += v40;
          if (v44 == v32)
          {

            uint64_t v6 = v53;
            uint64_t v5 = v55;
            uint64_t v31 = v59;
            a2 = v61;
            uint64_t v33 = v49;
            char v30 = v51;
            uint64_t v34 = v48;
            if (v41 == 0x7FFFFFFFFFFFFFFFLL) {
              goto LABEL_57;
            }
            goto LABEL_51;
          }
        }

        BOOL v28 = v41 < v43;
        uint64_t v6 = v53;
        uint64_t v5 = v55;
        uint64_t v31 = v59;
        a2 = v61;
        uint64_t v33 = v49;
        char v30 = v51;
        uint64_t v34 = v48;
        if (!v28) {
          goto LABEL_57;
        }
LABEL_51:
        if (v31 != a2 || v33 >= a2) {
          *uint64_t v33 = *v36;
        }
        uint64_t v64 = v36;
        if (v36 > v6) {
          goto LABEL_62;
        }
      }
      goto LABEL_63;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      uint64_t v13 = a2;
      memmove(__dst, __src, 8 * v9);
      a2 = v13;
    }
    uint64_t v50 = &v5[v9];
    uint64_t v62 = v50;
    unint64_t v14 = a3;
    if ((unint64_t)a2 < a3 && v7 >= 8)
    {
      uint64_t v15 = *(void *)(a5 + 16);
      do
      {
        if (v15)
        {
          uint64_t v52 = v6;
          unint64_t v54 = v5;
          id v60 = a2;
          uint64_t v16 = *a2;
          uint64_t v17 = *v5;
          uint64_t v18 = *(void *)(sub_25E4254F0() - 8);
          uint64_t v19 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
          uint64_t v20 = *(void *)(v18 + 72);
          sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
          id v56 = v16;
          id v21 = v17;
          uint64_t v22 = 0;
          uint64_t v23 = v19;
          while ((sub_25E4258A0() & 1) == 0)
          {
            ++v22;
            v23 += v20;
            if (v15 == v22)
            {
              uint64_t v22 = 0x7FFFFFFFFFFFFFFFLL;
              break;
            }
          }
          uint64_t v24 = 0;
          while ((sub_25E4258A0() & 1) == 0)
          {
            uint64_t v25 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_65;
            }
            ++v24;
            v19 += v20;
            if (v25 == v15)
            {

              BOOL v26 = v22 == 0x7FFFFFFFFFFFFFFFLL;
              uint64_t v6 = v52;
              uint64_t v5 = v54;
              unint64_t v14 = a3;
              a2 = v60;
              if (v26) {
                goto LABEL_28;
              }
              goto LABEL_23;
            }
          }

          BOOL v28 = v22 < v24;
          uint64_t v6 = v52;
          uint64_t v5 = v54;
          unint64_t v14 = a3;
          a2 = v60;
          if (!v28) {
            goto LABEL_28;
          }
LABEL_23:
          uint64_t v27 = a2 + 1;
          if (v6 < a2 || v6 >= v27 || v6 != a2) {
            *uint64_t v6 = *a2;
          }
        }
        else
        {
LABEL_28:
          if (v6 != v5) {
            *uint64_t v6 = *v5;
          }
          BOOL v63 = ++v5;
          uint64_t v27 = a2;
        }
        ++v6;
        if (v5 >= v50) {
          break;
        }
        a2 = v27;
      }
      while ((unint64_t)v27 < v14);
      uint64_t v64 = v6;
    }
LABEL_63:
    sub_25E3F79E8(&v64, &v63, &v62);
    return 1;
  }
LABEL_66:
  swift_bridgeObjectRelease();
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

void sub_25E3D69EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = *(void *)(a5 + 16);
    do
    {
      uint64_t v7 = *(void **)(v5 + 8 * a3);
      uint64_t v19 = a3;
      while (2)
      {
        if (v6)
        {
          uint64_t v24 = a3;
          uint64_t v22 = a3 - 1;
          uint64_t v8 = *(void **)(v5 + 8 * (a3 - 1));
          uint64_t v9 = *(void *)(sub_25E4254F0() - 8);
          uint64_t v10 = a5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
          uint64_t v11 = *(void *)(v9 + 72);
          sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
          id v23 = v7;
          id v25 = v8;
          uint64_t v12 = 0;
          uint64_t v13 = v10;
          while ((sub_25E4258A0() & 1) == 0)
          {
            ++v12;
            v13 += v11;
            if (v6 == v12)
            {
              uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
              break;
            }
          }
          uint64_t v14 = 0;
          while ((sub_25E4258A0() & 1) == 0)
          {
            uint64_t v15 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              goto LABEL_22;
            }
            ++v14;
            v10 += v11;
            if (v15 == v6)
            {

              uint64_t v16 = v24;
              if (v12 == 0x7FFFFFFFFFFFFFFFLL) {
                goto LABEL_4;
              }
              goto LABEL_18;
            }
          }

          uint64_t v16 = v24;
          if (v12 >= v14) {
            break;
          }
LABEL_18:
          if (!v5)
          {
LABEL_22:
            __break(1u);
            return;
          }
          uint64_t v17 = 8 * v16;
          uint64_t v7 = *(void **)(v5 + v17);
          *(void *)(v5 + v17) = *(void *)(v5 + 8 * v22);
          *(void *)(v5 + 8 * v22) = v7;
          a3 = v22;
          if (v22 != a1) {
            continue;
          }
        }
        break;
      }
LABEL_4:
      a3 = v19 + 1;
    }
    while (v19 + 1 != a2);
  }
}

uint64_t sub_25E3D6C2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1;
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_25E426130();
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_25E3D69EC(0, v5, 1, v4, a2);
      }
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_174;
  }
  uint64_t v124 = v6;
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_183;
  }
  uint64_t v149 = a2;
  uint64_t v127 = v5;
  uint64_t v137 = v2;
  v123 = v4;
  if (v5 < 2)
  {
    uint64_t v12 = v5;
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    uint64_t v150 = MEMORY[0x263F8EE78];
    __dst = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v12 != 1)
    {
      unint64_t v60 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_136:
      if (v60 < 2)
      {
LABEL_149:
        swift_bridgeObjectRelease();
        *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_25E425AE0();
LABEL_150:
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
      uint64_t v113 = *v123;
      uint64_t v148 = *v123;
      while (1)
      {
        unint64_t v114 = v60 - 2;
        if (v60 < 2) {
          goto LABEL_169;
        }
        v135 = v13;
        if (!v113) {
          goto LABEL_182;
        }
        uint64_t v115 = *(void *)&v13[16 * v114 + 32];
        uint64_t v116 = *(void *)&v13[16 * v60 + 24];
        uint64_t v117 = (void **)(v113 + 8 * v115);
        uint64_t v118 = (void **)(v113 + 8 * *(void *)&v13[16 * v60 + 16]);
        unint64_t v119 = v113 + 8 * v116;
        swift_bridgeObjectRetain();
        sub_25E3D6440(v117, v118, v119, __dst, v149);
        if (v137) {
          goto LABEL_148;
        }
        swift_bridgeObjectRelease();
        if (v116 < v115) {
          goto LABEL_170;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v135 = sub_25E3F7AA8((uint64_t)v13);
        }
        if (v114 >= *((void *)v135 + 2)) {
          goto LABEL_171;
        }
        v120 = &v135[16 * v114 + 32];
        *(void *)v120 = v115;
        *((void *)v120 + 1) = v116;
        unint64_t v121 = *((void *)v135 + 2);
        if (v60 > v121) {
          goto LABEL_172;
        }
        memmove(&v135[16 * v60 + 16], &v135[16 * v60 + 32], 16 * (v121 - v60));
        *((void *)v135 + 2) = v121 - 1;
        unint64_t v60 = v121 - 1;
        uint64_t v113 = v148;
        uint64_t v13 = v135;
        if (v121 <= 2) {
          goto LABEL_149;
        }
      }
    }
  }
  else
  {
    uint64_t v8 = v4;
    uint64_t v9 = v7 >> 1;
    type metadata accessor for _STKSticker(0);
    uint64_t v10 = sub_25E425B00();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v4 = v8;
    __dst = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v150 = v10;
  }
  uint64_t v14 = 0;
  uint64_t v15 = *v4;
  uint64_t v122 = *v4 - 8;
  uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  uint64_t v16 = v127;
  uint64_t v138 = *v4;
  while (2)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v14 + 1;
    uint64_t v136 = v14;
    if (v14 + 1 >= v16) {
      goto LABEL_54;
    }
    uint64_t v132 = v13;
    uint64_t v19 = *(void *)(a2 + 16);
    if (v19)
    {
      uint64_t v129 = v14 + 1;
      uint64_t v20 = *(void **)(v15 + 8 * v18);
      id v21 = *(void **)(v15 + 8 * v14);
      uint64_t v22 = *(void *)(sub_25E4254F0() - 8);
      unint64_t v23 = a2 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      uint64_t v24 = *(void *)(v22 + 72);
      sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
      id v141 = v20;
      id v144 = v21;
      uint64_t v25 = 0;
      unint64_t v26 = v23;
      while ((sub_25E4258A0() & 1) == 0)
      {
        ++v25;
        v26 += v24;
        if (v19 == v25)
        {
          uint64_t v125 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_22;
        }
      }
      uint64_t v125 = v25;
LABEL_22:
      uint64_t v27 = 0;
      while ((sub_25E4258A0() & 1) == 0)
      {
        uint64_t v28 = v27 + 1;
        if (__OFADD__(v27, 1)) {
          goto LABEL_157;
        }
        ++v27;
        v23 += v24;
        if (v28 == v19)
        {
          uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
          break;
        }
      }

      uint64_t v15 = v138;
      uint64_t v18 = v129;
    }
    else
    {
      uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v125 = 0x7FFFFFFFFFFFFFFFLL;
    }
    uint64_t v29 = v136 + 2;
    if (v136 + 2 >= v127) {
      goto LABEL_45;
    }
    while (1)
    {
      if (!v19)
      {
        if (v125 < v27)
        {
          a2 = v149;
          uint64_t v13 = v132;
          uint64_t v17 = v136;
          if (v29 < v136) {
            goto LABEL_176;
          }
LABEL_47:
          if (v17 < v29)
          {
            uint64_t v39 = (uint64_t *)(v122 + 8 * v29);
            uint64_t v40 = v29;
            uint64_t v41 = v17;
            uint64_t v42 = (uint64_t *)(v15 + 8 * v17);
            do
            {
              if (v41 != --v40)
              {
                if (!v15) {
                  goto LABEL_181;
                }
                uint64_t v43 = *v42;
                uint64_t *v42 = *v39;
                *uint64_t v39 = v43;
              }
              ++v41;
              --v39;
              ++v42;
            }
            while (v41 < v40);
          }
          uint64_t v18 = v29;
          goto LABEL_54;
        }
        goto LABEL_31;
      }
      uint64_t v142 = v29;
      char v30 = *(void **)(v15 + 8 * v29);
      uint64_t v31 = *(void **)(v15 + 8 * v18);
      uint64_t v32 = *(void *)(sub_25E4254F0() - 8);
      unint64_t v33 = v149 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
      uint64_t v34 = *(void *)(v32 + 72);
      sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
      id v139 = v30;
      id v145 = v31;
      uint64_t v35 = 0;
      unint64_t v36 = v33;
      while ((sub_25E4258A0() & 1) == 0)
      {
        ++v35;
        v36 += v34;
        if (v19 == v35)
        {
          uint64_t v35 = 0x7FFFFFFFFFFFFFFFLL;
          break;
        }
      }
      uint64_t v37 = 0;
      do
      {
        if (sub_25E4258A0()) {
          goto LABEL_42;
        }
        uint64_t v38 = v37 + 1;
        if (__OFADD__(v37, 1))
        {
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
          goto LABEL_176;
        }
        ++v37;
        v33 += v34;
      }
      while (v38 != v19);
      uint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_42:

      uint64_t v15 = v138;
      uint64_t v29 = v142;
      if (v125 < v27 == v35 >= v37) {
        break;
      }
LABEL_31:
      uint64_t v18 = v29++;
      if (v29 == v127)
      {
        uint64_t v29 = v127;
        break;
      }
    }
LABEL_45:
    uint64_t v18 = v29;
    a2 = v149;
    uint64_t v13 = v132;
    uint64_t v17 = v136;
    if (v125 < v27)
    {
      if (v29 >= v136) {
        goto LABEL_47;
      }
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
LABEL_54:
    if (v18 >= v127)
    {
LABEL_83:
      if (v18 < v17) {
        goto LABEL_173;
      }
      uint64_t v131 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_25E3F78EC(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v59 = *((void *)v13 + 2);
      unint64_t v58 = *((void *)v13 + 3);
      unint64_t v60 = v59 + 1;
      uint64_t v15 = v138;
      uint64_t v14 = v131;
      if (v59 >= v58 >> 1)
      {
        unint64_t v112 = sub_25E3F78EC((char *)(v58 > 1), v59 + 1, 1, v13);
        uint64_t v14 = v131;
        uint64_t v15 = v138;
        uint64_t v13 = v112;
      }
      *((void *)v13 + 2) = v60;
      uint64_t v61 = v13 + 32;
      uint64_t v62 = &v13[16 * v59 + 32];
      *(void *)uint64_t v62 = v17;
      *((void *)v62 + 1) = v14;
      if (!v59)
      {
        unint64_t v60 = 1;
LABEL_132:
        uint64_t v16 = v127;
        a2 = v149;
        if (v14 >= v127) {
          goto LABEL_136;
        }
        continue;
      }
      unint64_t v134 = v13;
      v147 = v13 + 32;
      while (1)
      {
        unint64_t v63 = v60 - 1;
        if (v60 >= 4)
        {
          uint64_t v68 = &v61[16 * v60];
          uint64_t v69 = *((void *)v68 - 8);
          uint64_t v70 = *((void *)v68 - 7);
          BOOL v74 = __OFSUB__(v70, v69);
          uint64_t v71 = v70 - v69;
          if (v74) {
            goto LABEL_158;
          }
          uint64_t v73 = *((void *)v68 - 6);
          uint64_t v72 = *((void *)v68 - 5);
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v66 = v72 - v73;
          char v67 = v74;
          if (v74) {
            goto LABEL_159;
          }
          unint64_t v75 = v60 - 2;
          uint64_t v76 = &v61[16 * v60 - 32];
          uint64_t v78 = *(void *)v76;
          uint64_t v77 = *((void *)v76 + 1);
          BOOL v74 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v74) {
            goto LABEL_161;
          }
          BOOL v74 = __OFADD__(v66, v79);
          uint64_t v80 = v66 + v79;
          if (v74) {
            goto LABEL_164;
          }
          if (v80 >= v71)
          {
            uint64_t v98 = &v61[16 * v63];
            uint64_t v100 = *(void *)v98;
            uint64_t v99 = *((void *)v98 + 1);
            BOOL v74 = __OFSUB__(v99, v100);
            uint64_t v101 = v99 - v100;
            if (v74) {
              goto LABEL_168;
            }
            BOOL v91 = v66 < v101;
            goto LABEL_121;
          }
        }
        else
        {
          if (v60 != 3)
          {
            uint64_t v92 = *((void *)v13 + 4);
            uint64_t v93 = *((void *)v13 + 5);
            BOOL v74 = __OFSUB__(v93, v92);
            uint64_t v85 = v93 - v92;
            char v86 = v74;
            goto LABEL_115;
          }
          uint64_t v65 = *((void *)v13 + 4);
          uint64_t v64 = *((void *)v13 + 5);
          BOOL v74 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          char v67 = v74;
        }
        if (v67) {
          goto LABEL_160;
        }
        unint64_t v75 = v60 - 2;
        unint64_t v81 = &v61[16 * v60 - 32];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v84 = __OFSUB__(v82, v83);
        uint64_t v85 = v82 - v83;
        char v86 = v84;
        if (v84) {
          goto LABEL_163;
        }
        uint64_t v87 = &v61[16 * v63];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v74 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v74) {
          goto LABEL_166;
        }
        if (__OFADD__(v85, v90)) {
          goto LABEL_167;
        }
        if (v85 + v90 >= v66)
        {
          BOOL v91 = v66 < v90;
LABEL_121:
          if (v91) {
            unint64_t v63 = v75;
          }
          goto LABEL_123;
        }
LABEL_115:
        if (v86) {
          goto LABEL_162;
        }
        id v94 = &v61[16 * v63];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v74 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v74) {
          goto LABEL_165;
        }
        if (v97 < v85)
        {
          uint64_t v14 = v131;
          goto LABEL_132;
        }
LABEL_123:
        unint64_t v102 = v63 - 1;
        if (v63 - 1 >= v60) {
          goto LABEL_153;
        }
        if (!v15) {
          goto LABEL_180;
        }
        uint64_t v103 = &v61[16 * v102];
        uint64_t v104 = *(void *)v103;
        unint64_t v105 = v63;
        v106 = &v61[16 * v63];
        uint64_t v107 = *((void *)v106 + 1);
        uint64_t v108 = (void **)(v15 + 8 * *(void *)v103);
        uint64_t v109 = (void **)(v15 + 8 * *(void *)v106);
        unint64_t v110 = v15 + 8 * v107;
        swift_bridgeObjectRetain();
        sub_25E3D6440(v108, v109, v110, __dst, v149);
        if (v137)
        {
LABEL_148:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_25E425AE0();
          goto LABEL_150;
        }
        swift_bridgeObjectRelease();
        if (v107 < v104) {
          goto LABEL_154;
        }
        uint64_t v13 = v134;
        if (v105 > *((void *)v134 + 2)) {
          goto LABEL_155;
        }
        *(void *)uint64_t v103 = v104;
        uint64_t v61 = v147;
        *(void *)&v147[16 * v102 + 8] = v107;
        unint64_t v111 = *((void *)v134 + 2);
        if (v105 >= v111) {
          goto LABEL_156;
        }
        unint64_t v60 = v111 - 1;
        memmove(v106, v106 + 16, 16 * (v111 - 1 - v105));
        *((void *)v134 + 2) = v111 - 1;
        uint64_t v15 = v138;
        uint64_t v14 = v131;
        if (v111 <= 2) {
          goto LABEL_132;
        }
      }
    }
    break;
  }
  if (__OFSUB__(v18, v17)) {
    goto LABEL_175;
  }
  if (v18 - v17 >= v124) {
    goto LABEL_83;
  }
  uint64_t v44 = v17 + v124;
  if (__OFADD__(v17, v124)) {
    goto LABEL_177;
  }
  if (v44 >= v127) {
    uint64_t v44 = v127;
  }
  if (v44 >= v17)
  {
    if (v18 != v44)
    {
      v133 = v13;
      uint64_t v45 = *(void *)(a2 + 16);
      uint64_t v126 = v44;
      do
      {
        uint64_t v46 = *(void **)(v15 + 8 * v18);
        uint64_t v130 = v18;
        do
        {
          if (!v45) {
            break;
          }
          uint64_t v146 = v18;
          uint64_t v140 = v18 - 1;
          id v47 = *(void **)(v15 + 8 * (v18 - 1));
          uint64_t v48 = *(void *)(sub_25E4254F0() - 8);
          unint64_t v49 = v149 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
          uint64_t v50 = *(void *)(v48 + 72);
          sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
          id v143 = v46;
          id v51 = v47;
          uint64_t v52 = 0;
          unint64_t v53 = v49;
          while ((sub_25E4258A0() & 1) == 0)
          {
            ++v52;
            v53 += v50;
            if (v45 == v52)
            {
              uint64_t v52 = 0x7FFFFFFFFFFFFFFFLL;
              break;
            }
          }
          uint64_t v54 = 0;
          do
          {
            if (sub_25E4258A0())
            {

              uint64_t v15 = v138;
              uint64_t v17 = v136;
              uint64_t v56 = v146;
              if (v52 >= v54) {
                goto LABEL_63;
              }
              goto LABEL_77;
            }
            uint64_t v55 = v54 + 1;
            if (__OFADD__(v54, 1))
            {
              __break(1u);
              goto LABEL_152;
            }
            ++v54;
            v49 += v50;
          }
          while (v55 != v45);

          uint64_t v15 = v138;
          uint64_t v17 = v136;
          uint64_t v56 = v146;
          if (v52 == 0x7FFFFFFFFFFFFFFFLL) {
            break;
          }
LABEL_77:
          if (!v15) {
            goto LABEL_179;
          }
          uint64_t v57 = 8 * v56;
          uint64_t v46 = *(void **)(v15 + v57);
          *(void *)(v15 + v57) = *(void *)(v15 + 8 * v140);
          *(void *)(v15 + 8 * v140) = v46;
          uint64_t v18 = v140;
        }
        while (v140 != v17);
LABEL_63:
        uint64_t v18 = v130 + 1;
      }
      while (v130 + 1 != v126);
      uint64_t v18 = v126;
      uint64_t v13 = v133;
    }
    goto LABEL_83;
  }
LABEL_178:
  __break(1u);
LABEL_179:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_180:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_181:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_182:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_25E425F70();
  __break(1u);
  return result;
}

uint64_t sub_25E3D789C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E3D78F0(void **__src, void **a2, void **a3, void **__dst, uint64_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v6 = a3;
  uint64_t v7 = __src;
  uint64_t v8 = (char *)a2 - (char *)__src;
  uint64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    uint64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v62 = __src;
  uint64_t v61 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        uint64_t v28 = a2;
        memmove(__dst, a2, 8 * v13);
        a2 = v28;
      }
      uint64_t v29 = &v5[v13];
      unint64_t v60 = v29;
      uint64_t v62 = a2;
      if (v7 < a2 && v11 >= 8)
      {
        uint64_t v30 = *(void *)(a5 + 16);
        id v51 = v7;
        unint64_t v53 = v5;
        do
        {
          uint64_t v31 = v6 - 1;
          unint64_t v33 = v29 - 1;
          uint64_t v32 = *(v29 - 1);
          if (v30)
          {
            id v47 = v6 - 1;
            unint64_t v49 = v29;
            uint64_t v55 = v6;
            unint64_t v59 = a2;
            uint64_t v34 = *(a2 - 1);
            uint64_t v44 = a2 - 1;
            uint64_t v35 = *(void *)(sub_25E4254F0() - 8);
            uint64_t v36 = a5 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
            uint64_t v37 = *(void *)(v35 + 72);
            sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
            id v46 = v32;
            id v57 = v34;
            uint64_t v38 = 0;
            uint64_t v39 = v36;
            while ((sub_25E4258A0() & 1) == 0)
            {
              ++v38;
              v39 += v37;
              if (v30 == v38)
              {
                uint64_t v38 = 0;
                break;
              }
            }
            uint64_t v40 = 0;
            while ((sub_25E4258A0() & 1) == 0)
            {
              uint64_t v41 = v40 + 1;
              if (__OFADD__(v40, 1))
              {
                __break(1u);
LABEL_67:
                __break(1u);
                goto LABEL_68;
              }
              ++v40;
              v36 += v37;
              if (v41 == v30)
              {

                uint64_t v7 = v51;
                uint64_t v5 = v53;
                uint64_t v6 = v55;
                a2 = v59;
                uint64_t v31 = v47;
                uint64_t v29 = v49;
                goto LABEL_58;
              }
            }

            BOOL v26 = v38 < v40;
            uint64_t v7 = v51;
            uint64_t v5 = v53;
            uint64_t v6 = v55;
            a2 = v59;
            uint64_t v31 = v47;
            uint64_t v29 = v49;
            if (!v26) {
              goto LABEL_58;
            }
            uint64_t v42 = v44;
            if (v55 != v59 || v47 >= v59) {
              *id v47 = *v44;
            }
            uint64_t v62 = v44;
          }
          else
          {
LABEL_58:
            unint64_t v60 = v33;
            if (v6 < v29 || v31 >= v29 || v6 != v29) {
              *uint64_t v31 = *v33;
            }
            uint64_t v42 = a2;
            uint64_t v29 = v33;
          }
          if (v42 <= v7) {
            break;
          }
          a2 = v42;
          uint64_t v6 = v31;
        }
        while (v29 > v5);
      }
      goto LABEL_65;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      uint64_t v14 = a2;
      memmove(__dst, __src, 8 * v10);
      a2 = v14;
    }
    uint64_t v48 = &v5[v10];
    unint64_t v60 = v48;
    if (a2 < v6 && v8 >= 8)
    {
      uint64_t v15 = *(void *)(a5 + 16);
      uint64_t v54 = v6;
      do
      {
        if (!v15) {
          goto LABEL_29;
        }
        uint64_t v50 = v7;
        uint64_t v52 = v5;
        unint64_t v58 = a2;
        uint64_t v16 = *a2;
        uint64_t v17 = *v5;
        uint64_t v18 = *(void *)(sub_25E4254F0() - 8);
        uint64_t v19 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v20 = *(void *)(v18 + 72);
        sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
        id v56 = v16;
        id v21 = v17;
        uint64_t v22 = 0;
        uint64_t v23 = v19;
        while ((sub_25E4258A0() & 1) == 0)
        {
          ++v22;
          v23 += v20;
          if (v15 == v22)
          {
            uint64_t v22 = 0;
            break;
          }
        }
        uint64_t v24 = 0;
        while ((sub_25E4258A0() & 1) == 0)
        {
          uint64_t v25 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_67;
          }
          ++v24;
          v19 += v20;
          if (v25 == v15)
          {

            uint64_t v7 = v50;
            uint64_t v5 = v52;
            uint64_t v6 = v54;
            a2 = v58;
            goto LABEL_29;
          }
        }

        BOOL v26 = v22 < v24;
        uint64_t v7 = v50;
        uint64_t v5 = v52;
        uint64_t v6 = v54;
        a2 = v58;
        if (v26)
        {
          uint64_t v27 = v58 + 1;
          if (v50 < v58 || v50 >= v27 || v50 != v58) {
            *uint64_t v50 = *v58;
          }
        }
        else
        {
LABEL_29:
          if (v7 != v5) {
            *uint64_t v7 = *v5;
          }
          uint64_t v61 = ++v5;
          uint64_t v27 = a2;
        }
        ++v7;
        if (v5 >= v48) {
          break;
        }
        a2 = v27;
      }
      while (v27 < v6);
      uint64_t v62 = v7;
    }
LABEL_65:
    sub_25E3F79E8(&v62, &v61, &v60);
    return 1;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

void sub_25E3D7E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *(void *)(a5 + 16);
    uint64_t v21 = *a4;
    do
    {
      if (v7)
      {
        uint64_t v8 = *(void *)(sub_25E4254F0() - 8);
        uint64_t v25 = a5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        uint64_t v9 = *(void **)(v6 + 8 * v5);
        uint64_t v10 = *(void *)(v8 + 72);
        sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
        uint64_t v11 = v5;
        do
        {
          uint64_t v23 = v11;
          uint64_t v12 = v11 - 1;
          uint64_t v13 = *(void **)(v6 + 8 * (v11 - 1));
          id v24 = v9;
          id v26 = v13;
          unint64_t v14 = 0;
          uint64_t v15 = v25;
          uint64_t v22 = v12;
          while ((sub_25E4258A0() & 1) == 0)
          {
            ++v14;
            v15 += v10;
            if (v7 == v14)
            {
              unint64_t v14 = 0;
              break;
            }
          }
          unint64_t v16 = 0;
          uint64_t v17 = v25;
          while ((sub_25E4258A0() & 1) == 0)
          {
            ++v16;
            v17 += v10;
            if (v7 == v16)
            {

              uint64_t v6 = v21;
              goto LABEL_4;
            }
          }

          uint64_t v6 = v21;
          if (v14 >= v16) {
            break;
          }
          if (!v21)
          {
            __break(1u);
            return;
          }
          uint64_t v9 = *(void **)(v21 + 8 * v23);
          *(void *)(v21 + 8 * v23) = *(void *)(v21 + 8 * v22);
          *(void *)(v21 + 8 * v22) = v9;
          uint64_t v11 = v22;
        }
        while (v22 != a1);
      }
LABEL_4:
      ++v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_25E3D80CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1;
  uint64_t v5 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v126 = sub_25E426130();
  if (v126 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_179;
    }
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_25E3D7E90(0, v5, 1, v4, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v5 >= 0) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_187;
  }
  uint64_t v146 = a2;
  uint64_t v147 = v2;
  uint64_t v124 = v4;
  if (v5 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    uint64_t v149 = MEMORY[0x263F8EE78];
    __dst = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      unint64_t v61 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_141:
      uint64_t v142 = v11;
      if (v61 >= 2)
      {
        uint64_t v116 = *v124;
        do
        {
          unint64_t v117 = v61 - 2;
          if (v61 < 2) {
            goto LABEL_173;
          }
          if (!v116) {
            goto LABEL_186;
          }
          uint64_t v118 = *(void *)&v142[16 * v117 + 32];
          uint64_t v119 = *(void *)&v142[16 * v61 + 24];
          v120 = (void **)(v116 + 8 * *(void *)&v142[16 * v61 + 16]);
          swift_bridgeObjectRetain();
          sub_25E3D78F0((void **)(v116 + 8 * v118), v120, (void **)(v116 + 8 * v119), __dst, v146);
          if (v147) {
            goto LABEL_153;
          }
          swift_bridgeObjectRelease();
          if (v119 < v118) {
            goto LABEL_175;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v142 = sub_25E3F7AA8((uint64_t)v142);
          }
          if (v117 >= *((void *)v142 + 2)) {
            goto LABEL_176;
          }
          unint64_t v121 = &v142[16 * v117 + 32];
          *(void *)unint64_t v121 = v118;
          *((void *)v121 + 1) = v119;
          unint64_t v122 = *((void *)v142 + 2);
          if (v61 > v122) {
            goto LABEL_177;
          }
          memmove(&v142[16 * v61 + 16], &v142[16 * v61 + 32], 16 * (v122 - v61));
          *((void *)v142 + 2) = v122 - 1;
          unint64_t v61 = v122 - 1;
        }
        while (v122 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_25E425AE0();
LABEL_155:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v4;
    uint64_t v8 = v6 >> 1;
    type metadata accessor for _STKStickerRepresentation(0);
    uint64_t v9 = sub_25E425B00();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    uint64_t v4 = v7;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v149 = v9;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *v4;
  uint64_t v123 = *v4 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v129 = v5;
  uint64_t v148 = *v4;
LABEL_14:
  uint64_t v14 = v12 + 1;
  uint64_t v128 = v12;
  if (v12 + 1 >= v5) {
    goto LABEL_86;
  }
  id v139 = v11;
  uint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    unint64_t v16 = *(void **)(v13 + 8 * v14);
    uint64_t v17 = *(void **)(v13 + 8 * v12);
    uint64_t v18 = *(void *)(sub_25E4254F0() - 8);
    unint64_t v19 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v20 = *(void *)(v18 + 72);
    sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
    id v135 = v16;
    id v21 = v17;
    uint64_t v22 = 0;
    unint64_t v23 = v19;
    while ((sub_25E4258A0() & 1) == 0)
    {
      ++v22;
      v23 += v20;
      if (v15 == v22)
      {
        uint64_t v130 = 0;
        goto LABEL_23;
      }
    }
    uint64_t v130 = v22;
LABEL_23:
    uint64_t v24 = 0;
    while ((sub_25E4258A0() & 1) == 0)
    {
      uint64_t v26 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_161;
      }
      ++v24;
      v19 += v20;
      if (v26 == v15)
      {
        uint64_t v24 = 0;
        break;
      }
    }

    uint64_t v25 = v126;
    uint64_t v12 = v128;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v130 = 0;
    uint64_t v25 = v126;
  }
  uint64_t v27 = v12 + 2;
  if (v12 + 2 >= v129)
  {
    uint64_t v28 = v148;
    goto LABEL_48;
  }
  uint64_t v28 = v148;
  while (!v15)
  {
    if (v130 < v24)
    {
      uint64_t v38 = v146;
      uint64_t v11 = v139;
      uint64_t v12 = v128;
      uint64_t v39 = v129;
      if (v27 < v128) {
        goto LABEL_180;
      }
      goto LABEL_51;
    }
LABEL_32:
    uint64_t v14 = v27++;
    if (v27 == v129)
    {
      uint64_t v27 = v129;
      goto LABEL_47;
    }
  }
  uint64_t v136 = v27;
  uint64_t v29 = *(void **)(v28 + 8 * v27);
  uint64_t v30 = *(void **)(v28 + 8 * v14);
  uint64_t v31 = *(void *)(sub_25E4254F0() - 8);
  unint64_t v32 = v146 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  uint64_t v33 = *(void *)(v31 + 72);
  sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
  id v132 = v29;
  id v143 = v30;
  uint64_t v34 = 0;
  unint64_t v35 = v32;
  while ((sub_25E4258A0() & 1) == 0)
  {
    ++v34;
    v35 += v33;
    if (v15 == v34)
    {
      uint64_t v34 = 0;
      break;
    }
  }
  uint64_t v36 = 0;
  while (1)
  {
    if (sub_25E4258A0()) {
      goto LABEL_43;
    }
    uint64_t v37 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    ++v36;
    v32 += v33;
    if (v37 == v15)
    {
      uint64_t v36 = 0;
LABEL_43:

      uint64_t v25 = v126;
      uint64_t v28 = v148;
      uint64_t v27 = v136;
      if (v130 < v24 != v34 >= v36) {
        goto LABEL_32;
      }
LABEL_47:
      uint64_t v12 = v128;
LABEL_48:
      uint64_t v14 = v27;
      BOOL v93 = v130 < v24;
      uint64_t v38 = v146;
      uint64_t v11 = v139;
      uint64_t v39 = v129;
      if (v93)
      {
        if (v27 < v12) {
          goto LABEL_180;
        }
LABEL_51:
        if (v12 >= v27)
        {
          uint64_t v14 = v27;
          goto LABEL_59;
        }
        uint64_t v40 = (uint64_t *)(v123 + 8 * v27);
        uint64_t v41 = v12;
        uint64_t v42 = v27;
        uint64_t v43 = v41;
        uint64_t v44 = (uint64_t *)(v28 + 8 * v41);
        do
        {
          if (v43 != --v42)
          {
            if (!v28) {
              goto LABEL_185;
            }
            uint64_t v45 = *v44;
            uint64_t *v44 = *v40;
            *uint64_t v40 = v45;
          }
          ++v43;
          --v40;
          ++v44;
        }
        while (v43 < v42);
        uint64_t v14 = v27;
        uint64_t v12 = v128;
        if (v27 >= v39) {
          goto LABEL_86;
        }
LABEL_60:
        if (__OFSUB__(v14, v12)) {
          goto LABEL_178;
        }
        if (v14 - v12 >= v25) {
          goto LABEL_86;
        }
        uint64_t v46 = v12 + v25;
        if (__OFADD__(v12, v25)) {
          goto LABEL_181;
        }
        if (v46 >= v39) {
          uint64_t v46 = v39;
        }
        if (v46 >= v12)
        {
          if (v14 != v46)
          {
            uint64_t v140 = v11;
            uint64_t v47 = *(void *)(v38 + 16);
            uint64_t v125 = v46;
            do
            {
              uint64_t v144 = v14;
              if (!v47) {
                goto LABEL_68;
              }
              uint64_t v48 = *(void *)(sub_25E4254F0() - 8);
              uint64_t v49 = v14;
              unint64_t v50 = v146 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
              id v51 = *(void **)(v148 + 8 * v14);
              uint64_t v52 = *(void *)(v48 + 72);
              sub_25E3D9224((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
              uint64_t v53 = v148;
              unint64_t v127 = v50;
              do
              {
                uint64_t v131 = v49 - 1;
                uint64_t v133 = v49;
                uint64_t v54 = *(void **)(v53 + 8 * (v49 - 1));
                id v137 = v51;
                id v55 = v54;
                unint64_t v56 = 0;
                unint64_t v57 = v50;
                while ((sub_25E4258A0() & 1) == 0)
                {
                  ++v56;
                  v57 += v52;
                  if (v47 == v56)
                  {
                    unint64_t v56 = 0;
                    break;
                  }
                }
                unint64_t v58 = 0;
                while ((sub_25E4258A0() & 1) == 0)
                {
                  ++v58;
                  v50 += v52;
                  if (v47 == v58)
                  {

                    goto LABEL_68;
                  }
                }

                if (v56 >= v58) {
                  break;
                }
                uint64_t v53 = v148;
                if (!v148) {
                  goto LABEL_184;
                }
                id v51 = *(void **)(v148 + 8 * v133);
                *(void *)(v148 + 8 * v133) = *(void *)(v148 + 8 * v131);
                *(void *)(v148 + 8 * v131) = v51;
                uint64_t v49 = v131;
                unint64_t v50 = v127;
              }
              while (v131 != v128);
LABEL_68:
              ++v14;
            }
            while (v144 + 1 != v125);
            uint64_t v14 = v125;
            uint64_t v11 = v140;
            uint64_t v12 = v128;
          }
          goto LABEL_86;
        }
        goto LABEL_182;
      }
LABEL_59:
      if (v14 < v39) {
        goto LABEL_60;
      }
LABEL_86:
      if (v14 < v12) {
        goto LABEL_174;
      }
      uint64_t v145 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_25E3F78EC(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v60 = *((void *)v11 + 2);
      unint64_t v59 = *((void *)v11 + 3);
      unint64_t v61 = v60 + 1;
      uint64_t v13 = v148;
      uint64_t v62 = v128;
      if (v60 >= v59 >> 1)
      {
        uint64_t v115 = sub_25E3F78EC((char *)(v59 > 1), v60 + 1, 1, v11);
        uint64_t v62 = v128;
        uint64_t v13 = v148;
        uint64_t v11 = v115;
      }
      *((void *)v11 + 2) = v61;
      unint64_t v63 = v11 + 32;
      uint64_t v64 = &v11[16 * v60 + 32];
      *(void *)uint64_t v64 = v62;
      *((void *)v64 + 1) = v145;
      if (v60)
      {
        uint64_t v138 = v11 + 32;
        id v141 = v11;
        while (1)
        {
          unint64_t v65 = v61 - 1;
          if (v61 >= 4)
          {
            uint64_t v70 = &v63[16 * v61];
            uint64_t v71 = *((void *)v70 - 8);
            uint64_t v72 = *((void *)v70 - 7);
            BOOL v76 = __OFSUB__(v72, v71);
            uint64_t v73 = v72 - v71;
            if (v76) {
              goto LABEL_162;
            }
            uint64_t v75 = *((void *)v70 - 6);
            uint64_t v74 = *((void *)v70 - 5);
            BOOL v76 = __OFSUB__(v74, v75);
            uint64_t v68 = v74 - v75;
            char v69 = v76;
            if (v76) {
              goto LABEL_163;
            }
            unint64_t v77 = v61 - 2;
            uint64_t v78 = &v63[16 * v61 - 32];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v76 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v76) {
              goto LABEL_165;
            }
            BOOL v76 = __OFADD__(v68, v81);
            uint64_t v82 = v68 + v81;
            if (v76) {
              goto LABEL_168;
            }
            if (v82 >= v73)
            {
              uint64_t v100 = &v63[16 * v65];
              uint64_t v102 = *(void *)v100;
              uint64_t v101 = *((void *)v100 + 1);
              BOOL v76 = __OFSUB__(v101, v102);
              uint64_t v103 = v101 - v102;
              if (v76) {
                goto LABEL_172;
              }
              BOOL v93 = v68 < v103;
              goto LABEL_124;
            }
          }
          else
          {
            if (v61 != 3)
            {
              uint64_t v94 = *((void *)v11 + 4);
              uint64_t v95 = *((void *)v11 + 5);
              BOOL v76 = __OFSUB__(v95, v94);
              uint64_t v87 = v95 - v94;
              char v88 = v76;
              goto LABEL_118;
            }
            uint64_t v67 = *((void *)v11 + 4);
            uint64_t v66 = *((void *)v11 + 5);
            BOOL v76 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            char v69 = v76;
          }
          if (v69) {
            goto LABEL_164;
          }
          unint64_t v77 = v61 - 2;
          uint64_t v83 = &v63[16 * v61 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v86 = __OFSUB__(v84, v85);
          uint64_t v87 = v84 - v85;
          char v88 = v86;
          if (v86) {
            goto LABEL_167;
          }
          uint64_t v89 = &v63[16 * v65];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v76 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v76) {
            goto LABEL_170;
          }
          if (__OFADD__(v87, v92)) {
            goto LABEL_171;
          }
          if (v87 + v92 >= v68)
          {
            BOOL v93 = v68 < v92;
LABEL_124:
            if (v93) {
              unint64_t v65 = v77;
            }
            goto LABEL_126;
          }
LABEL_118:
          if (v88) {
            goto LABEL_166;
          }
          uint64_t v96 = &v63[16 * v65];
          uint64_t v98 = *(void *)v96;
          uint64_t v97 = *((void *)v96 + 1);
          BOOL v76 = __OFSUB__(v97, v98);
          uint64_t v99 = v97 - v98;
          if (v76) {
            goto LABEL_169;
          }
          if (v99 < v87) {
            goto LABEL_135;
          }
LABEL_126:
          unint64_t v104 = v65 - 1;
          if (v65 - 1 >= v61) {
            goto LABEL_157;
          }
          if (!v13) {
            goto LABEL_183;
          }
          unint64_t v105 = v63;
          v106 = &v63[16 * v104];
          uint64_t v107 = *(void *)v106;
          unint64_t v108 = v65;
          uint64_t v109 = &v105[16 * v65];
          uint64_t v110 = *((void *)v109 + 1);
          unint64_t v111 = (void **)(v13 + 8 * *(void *)v106);
          unint64_t v112 = (void **)(v13 + 8 * *(void *)v109);
          uint64_t v113 = (void **)(v13 + 8 * v110);
          swift_bridgeObjectRetain();
          sub_25E3D78F0(v111, v112, v113, __dst, v146);
          if (v147)
          {
LABEL_153:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_25E425AE0();
            goto LABEL_155;
          }
          swift_bridgeObjectRelease();
          if (v110 < v107) {
            goto LABEL_158;
          }
          uint64_t v11 = v141;
          if (v108 > *((void *)v141 + 2)) {
            goto LABEL_159;
          }
          *(void *)v106 = v107;
          unint64_t v63 = v138;
          *(void *)&v138[16 * v104 + 8] = v110;
          unint64_t v114 = *((void *)v141 + 2);
          if (v108 >= v114) {
            goto LABEL_160;
          }
          unint64_t v61 = v114 - 1;
          memmove(v109, v109 + 16, 16 * (v114 - 1 - v108));
          *((void *)v141 + 2) = v114 - 1;
          uint64_t v13 = v148;
          if (v114 <= 2) {
            goto LABEL_135;
          }
        }
      }
      unint64_t v61 = 1;
LABEL_135:
      uint64_t v5 = v129;
      uint64_t v12 = v145;
      a2 = v146;
      if (v145 >= v129) {
        goto LABEL_141;
      }
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_25E425F70();
  __break(1u);
  return result;
}

uint64_t sub_25E3D8D2C(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(void *, uint64_t))
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = a3(v8);
    *a1 = v8;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  v12[0] = v8 + 32;
  v12[1] = v10;
  swift_bridgeObjectRetain();
  a4(v12, a2);
  swift_bridgeObjectRelease();
  sub_25E425F20();
  return swift_bridgeObjectRelease_n();
}

uint64_t type metadata accessor for _STKStickerRepresentationRole()
{
  return self;
}

uint64_t type metadata accessor for _STKStickerRepresentation(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B389300);
}

uint64_t type metadata accessor for _STKSticker(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B3892F0);
}

uint64_t type metadata accessor for _STKStickerEffect()
{
  return self;
}

uint64_t sub_25E3D8E78()
{
  return type metadata accessor for _STKTextInputObjCStoreFacade(0);
}

uint64_t sub_25E3D8E80()
{
  uint64_t result = sub_25E4256A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _STKTextInputObjCStoreFacade(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _STKTextInputObjCStoreFacade);
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.stickers(with:roles:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.representationsForStickers(identifiers:roles:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of _STKTextInputObjCStoreFacade.touchSticker(identifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t sub_25E3D9020()
{
  return type metadata accessor for _STKSticker(0);
}

uint64_t sub_25E3D9028()
{
  uint64_t result = sub_25E4254F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _STKSticker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _STKSticker);
}

uint64_t sub_25E3D9110()
{
  return type metadata accessor for _STKStickerRepresentation(0);
}

uint64_t sub_25E3D9118()
{
  uint64_t result = sub_25E4254F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25E4255B0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for _STKStickerRepresentation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _STKStickerRepresentation);
}

uint64_t sub_25E3D9224(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E3D926C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E3D92B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25E3D930C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25E3D9370(uint64_t a1)
{
  return a1;
}

void sub_25E3D93D8()
{
  id v1 = objc_allocWithZone(MEMORY[0x263EFF260]);
  unint64_t v2 = (void *)sub_25E4258C0();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_25E4277F0;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 64) = sub_25E3D4418();
  *(void *)(v4 + 32) = 0x696669746E656469;
  *(void *)(v4 + 40) = 0xEA00000000007265;
  uint64_t v5 = sub_25E4254A0();
  *(void *)(v4 + 96) = sub_25E3CE930(0, &qword_26B3894F8);
  *(void *)(v4 + 104) = sub_25E3D9AE8();
  *(void *)(v4 + 72) = v5;
  uint64_t v6 = (void *)sub_25E425BC0();
  objc_msgSend(v3, sel_setPredicate_, v6);

  sub_25E3CE930(0, (unint64_t *)&qword_26B389510);
  uint64_t v7 = sub_25E425CC0();
  if (v0)
  {

    id v8 = v0;
    id v9 = v0;
    uint64_t v10 = sub_25E425680();
    os_log_type_t v11 = sub_25E425BF0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      id v14 = v0;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      *uint64_t v13 = v20;

      _os_log_impl(&dword_25E3BB000, v10, v11, "Could not fetch stickers to delete: %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v13, -1, -1);
      MEMORY[0x2611D77B0](v12, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v15 = v7;

    if (!v15) {
      return;
    }
    unint64_t v16 = sub_25E425680();
    os_log_type_t v17 = sub_25E425BF0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_25E3BB000, v16, v17, "Could not add new sticker: duplicate identifier", v18, 2u);
      MEMORY[0x2611D77B0](v18, -1, -1);
    }

    sub_25E3CC3F0();
    swift_allocError();
    *unint64_t v19 = 4;
  }
  swift_willThrow();
}

void sub_25E3D9794()
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = *(void **)(v0 + 16);
  v13[0] = 0;
  if (objc_msgSend(v1, sel_save_, v13))
  {
    id v2 = v13[0];
  }
  else
  {
    id v3 = v13[0];
    uint64_t v4 = (void *)sub_25E425290();

    swift_willThrow();
    id v5 = v4;
    id v6 = v4;
    uint64_t v7 = sub_25E425680();
    os_log_type_t v8 = sub_25E425BF0();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)id v9 = 138412290;
      id v11 = v4;
      uint64_t v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_25E425D80();
      *uint64_t v10 = v12;

      _os_log_impl(&dword_25E3BB000, v7, v8, "Could not save new sticker: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v10, -1, -1);
      MEMORY[0x2611D77B0](v9, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_25E3D99B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  uint64_t v2 = sub_25E4256A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_25E3D9A5C()
{
  return _s3AddCMa();
}

uint64_t _s3AddCMa()
{
  uint64_t result = qword_26B3892C0;
  if (!qword_26B3892C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E3D9AB0()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_25E3D9AE8()
{
  unint64_t result = qword_26A6ED920;
  if (!qword_26A6ED920)
  {
    sub_25E3CE930(255, &qword_26B3894F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED920);
  }
  return result;
}

uint64_t Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)@<X0>(char *a1@<X0>, void *a2@<X1>, void **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v19 = *a1;
  uint64_t v13 = *a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389338);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25E427610;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x2611D5F60](KeyPath, 1);
  id v15 = a2;
  sub_25E3D44C0(v13);
  sub_25E3D446C(0);
  if (!a4)
  {
    a4 = swift_allocObject();
    *(_OWORD *)(a4 + 16) = xmmword_25E427610;
    uint64_t v16 = swift_getKeyPath();
    MEMORY[0x2611D5F60](v16, 1);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v17 = v15;
  sub_25E3D44C0(v13);

  sub_25E3D446C(v13);
  *(unsigned char *)a9 = v19;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = v13;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;

  sub_25E3D446C(v13);
  return swift_bridgeObjectRelease();
}

void Sticker.FetchRequest.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Sticker.FetchRequest.type.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Sticker.FetchRequest.type.modify())()
{
  return nullsub_1;
}

void *Sticker.FetchRequest.predicate.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void Sticker.FetchRequest.predicate.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*Sticker.FetchRequest.predicate.modify())()
{
  return nullsub_1;
}

id Sticker.FetchRequest.representations.getter@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return sub_25E3D44C0(v2);
}

void Sticker.FetchRequest.representations.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  sub_25E3D446C(*(id *)(v1 + 16));
  *(void *)(v1 + 16) = v2;
}

uint64_t (*Sticker.FetchRequest.representations.modify())()
{
  return nullsub_1;
}

double sub_25E3D9E4C@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (double *)(*a1 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

double sub_25E3D9EA4@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (double *)(*a1 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_25E3D9EFC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR___STKSticker_libraryIndex);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

uint64_t sub_25E3D9F58(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR___STKSticker_libraryIndex);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

uint64_t Sticker.FetchRequest.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Sticker.FetchRequest.sortDescriptors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Sticker.FetchRequest.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t Sticker.FetchRequest.offset.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Sticker.FetchRequest.offset.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*Sticker.FetchRequest.offset.modify())()
{
  return nullsub_1;
}

uint64_t Sticker.FetchRequest.limit.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Sticker.FetchRequest.limit.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*Sticker.FetchRequest.limit.modify())()
{
  return nullsub_1;
}

uint64_t Sticker.FetchRequest.batchSize.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t Sticker.FetchRequest.batchSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*Sticker.FetchRequest.batchSize.modify())()
{
  return nullsub_1;
}

BOOL sub_25E3DA0B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s8Stickers17StickerStoreErrorO9hashValueSivg_0()
{
  return sub_25E426240();
}

uint64_t sub_25E3DA10C()
{
  return sub_25E426230();
}

uint64_t sub_25E3DA138()
{
  return sub_25E426240();
}

uint64_t sub_25E3DA17C()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7461636964657270;
      break;
    case 2:
      uint64_t result = 0x6E65736572706572;
      break;
    case 3:
      uint64_t result = 0x6373654474726F73;
      break;
    case 4:
      uint64_t result = 0x74657366666FLL;
      break;
    case 5:
      uint64_t result = 0x74696D696CLL;
      break;
    case 6:
      uint64_t result = 0x7A69536863746162;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E3DA278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25E3DB588(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25E3DA2A0()
{
  return 0;
}

void sub_25E3DA2AC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_25E3DA2B8(uint64_t a1)
{
  unint64_t v2 = sub_25E3DA8DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E3DA2F4(uint64_t a1)
{
  unint64_t v2 = sub_25E3DA8DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Sticker.FetchRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389338);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E427610;
  uint64_t v33 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x2611D5F60](KeyPath, 1);
  uint64_t v11 = a1[3];
  unint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_25E3DA8DC();
  sub_25E426250();
  if (v2)
  {
    id v12 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  }
  else
  {
    uint64_t v31 = v6;
    char v37 = 1;
    sub_25E3DA930();
    sub_25E426030();
    uint64_t v13 = v5;
    id v14 = v8;
    unint64_t v15 = v35;
    if (v35 >> 60 == 15)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v17 = (uint64_t)v34;
      id v18 = objc_allocWithZone(MEMORY[0x263F08928]);
      sub_25E3CEA9C(v17, v15);
      id v19 = sub_25E3DB8C8();
      sub_25E3CEB1C(v17, v15);
      sub_25E3DB988();
      uint64_t v16 = (void *)sub_25E425CE0();
      objc_msgSend(v19, sel_finishDecoding);

      sub_25E3CEB1C(v17, v15);
    }
    uint64_t v20 = v14;
    char v37 = 0;
    sub_25E3DA984();
    sub_25E426030();
    char v21 = (char)v34;
    char v37 = 2;
    sub_25E3DA9D8();
    sub_25E426090();
    id v12 = v34;
    sub_25E3D44C0(v34);
    sub_25E3D446C(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894C8);
    char v37 = 3;
    sub_25E3DBAE4((unint64_t *)&unk_26B388FB8, (unint64_t *)&unk_26B388EA0);
    sub_25E426090();
    uint64_t v23 = (uint64_t)v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v34) = 4;
    uint64_t v24 = sub_25E426080();
    uint64_t v33 = v23;
    LOBYTE(v34) = 5;
    uint64_t v25 = v20;
    uint64_t v30 = sub_25E426020();
    int v36 = v26 & 1;
    LOBYTE(v34) = 6;
    uint64_t v27 = sub_25E426080();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v13);
    id v28 = v16;
    sub_25E3D44C0(v12);
    sub_25E3D446C(v12);

    *(unsigned char *)a2 = v21;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v12;
    uint64_t v29 = (uint64_t)v32;
    *(void *)(a2 + 24) = v33;
    *(void *)(a2 + 32) = v24;
    *(void *)(a2 + 40) = v30;
    *(unsigned char *)(a2 + 48) = v36;
    *(void *)(a2 + 56) = v27;
    *(unsigned char *)(a2 + 64) = 0;
    __swift_destroy_boxed_opaque_existential_0(v29);
  }
  sub_25E3D446C(v12);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25E3DA8DC()
{
  unint64_t result = qword_26B389448;
  if (!qword_26B389448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389448);
  }
  return result;
}

unint64_t sub_25E3DA930()
{
  unint64_t result = qword_26B389350;
  if (!qword_26B389350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389350);
  }
  return result;
}

unint64_t sub_25E3DA984()
{
  unint64_t result = qword_26B389420;
  if (!qword_26B389420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389420);
  }
  return result;
}

unint64_t sub_25E3DA9D8()
{
  unint64_t result = qword_26B388F78;
  if (!qword_26B388F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388F78);
  }
  return result;
}

uint64_t Sticker.FetchRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E38);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v31 = *v1;
  uint64_t v9 = (void *)*((void *)v1 + 1);
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v27 = *((void *)v1 + 3);
  uint64_t v28 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v25 = *((void *)v1 + 5);
  uint64_t v26 = v10;
  int v24 = v1[48];
  uint64_t v23 = *((void *)v1 + 7);
  int v22 = v1[64];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E3DA8DC();
  sub_25E426260();
  if (v9)
  {
    id v11 = objc_allocWithZone(MEMORY[0x263F08910]);
    id v12 = v9;
    id v13 = objc_msgSend(v11, sel_initRequiringSecureCoding_, 1);
    id v14 = v12;
    unint64_t v15 = (void *)sub_25E4258C0();
    objc_msgSend(v13, sel_encodeObject_forKey_, v14, v15);

    objc_msgSend(v13, sel_finishEncoding);
    id v16 = objc_msgSend(v13, sel_encodedData);
    uint64_t v17 = sub_25E4253D0();
    unint64_t v19 = v18;

    uint64_t v29 = v17;
    unint64_t v30 = v19;
    char v32 = 1;
    sub_25E3DBC18();
    sub_25E426100();
    if (v2)
    {

      sub_25E3CEA28(v17, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    sub_25E3CEA28(v17, v19);
  }
  LOBYTE(v29) = v31;
  char v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388DA0);
  sub_25E3DB9C8();
  sub_25E426100();
  if (!v2)
  {
    uint64_t v29 = v28;
    char v32 = 2;
    sub_25E3DBA90();
    sub_25E426100();
    uint64_t v29 = v27;
    char v32 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894C8);
    sub_25E3DBAE4((unint64_t *)&unk_26B388DE8, (unint64_t *)&unk_26B388D50);
    sub_25E426100();
    LOBYTE(v29) = 4;
    sub_25E4260F0();
    uint64_t v29 = v25;
    LOBYTE(v30) = v24;
    char v32 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E8);
    sub_25E3DBBAC();
    sub_25E426100();
    uint64_t v29 = v23;
    LOBYTE(v30) = v22;
    char v32 = 6;
    sub_25E426100();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Sticker.FetchRequest.RepresentationSpecifier.description.getter()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0xD000000000000010;
  }
  if (v1 == (void *)1) {
    return 0x67616D69206C6C61;
  }
  if (v1 == (void *)2) {
    return 0x6567616D69206F6ELL;
  }
  sub_25E3D44C0(v1);
  id v3 = objc_msgSend(v1, sel_description);
  sub_25E4258F0();

  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E3D446C(v1);
  return 0x206572656877;
}

BOOL sub_25E3DAF60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_25E3DAF80()
{
  if (*v0) {
    return 0x6572506572656877;
  }
  else {
    return 0x65756C6156776172;
  }
}

uint64_t sub_25E3DAFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25E3DC86C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25E3DAFF0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25E3DAFFC(uint64_t a1)
{
  unint64_t v2 = sub_25E3DBC6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E3DB038(uint64_t a1)
{
  unint64_t v2 = sub_25E3DBC6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Sticker.FetchRequest.RepresentationSpecifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389000);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E3DBC6C();
  sub_25E426250();
  if (!v2)
  {
    char v17 = 0;
    uint64_t v9 = sub_25E426080();
    uint64_t v10 = v9;
    switch(v9)
    {
      case 0:
        goto LABEL_10;
      case 1:
        uint64_t v10 = 1;
        goto LABEL_10;
      case 2:
        char v16 = 1;
        sub_25E426050();
        id v12 = (void *)sub_25E4258C0();
        swift_bridgeObjectRelease();
        id v13 = (void *)sub_25E425AB0();
        uint64_t v10 = (uint64_t)objc_msgSend(self, sel_predicateWithFormat_argumentArray_, v12, v13);

        goto LABEL_10;
      case 3:
        uint64_t v10 = 2;
LABEL_10:
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v10;
        break;
      default:
        sub_25E3DBCC0();
        swift_allocError();
        unsigned char *v11 = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void Sticker.FetchRequest.RepresentationSpecifier.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E3DBC6C();
  sub_25E426260();
  if (!v8)
  {
    char v12 = 0;
    goto LABEL_7;
  }
  if (v8 == (void *)1)
  {
    char v13 = 0;
    goto LABEL_7;
  }
  if (v8 == (void *)2)
  {
    char v16 = 0;
LABEL_7:
    sub_25E4260F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }
  char v15 = 0;
  id v9 = v8;
  sub_25E4260F0();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    id v10 = objc_msgSend(v9, sel_predicateFormat);
    sub_25E4258F0();

    char v14 = 1;
    sub_25E4260C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
  }
  sub_25E3D446C(v8);
}

uint64_t sub_25E3DB528@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Sticker.FetchRequest.RepresentationSpecifier.init(from:)(a1, a2);
}

void sub_25E3DB540(void *a1)
{
}

uint64_t sub_25E3DB558@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Sticker.FetchRequest.init(from:)(a1, a2);
}

uint64_t sub_25E3DB570(void *a1)
{
  return Sticker.FetchRequest.encode(to:)(a1);
}

uint64_t sub_25E3DB588(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636964657270 && a2 == 0xEF74616D726F4665 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65736572706572 && a2 == 0xEF736E6F69746174 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6373654474726F73 && a2 == 0xEF73726F74706972 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7A69536863746162 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25E426160();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

id sub_25E3DB8C8()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_25E4253B0();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_25E425290();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_25E3DB988()
{
  unint64_t result = qword_26B388FD8;
  if (!qword_26B388FD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B388FD8);
  }
  return result;
}

unint64_t sub_25E3DB9C8()
{
  unint64_t result = qword_26B388DA8;
  if (!qword_26B388DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B388DA0);
    sub_25E3DBA3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388DA8);
  }
  return result;
}

unint64_t sub_25E3DBA3C()
{
  unint64_t result = qword_26B389410;
  if (!qword_26B389410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389410);
  }
  return result;
}

unint64_t sub_25E3DBA90()
{
  unint64_t result = qword_26B388DB0;
  if (!qword_26B388DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388DB0);
  }
  return result;
}

uint64_t sub_25E3DBAE4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B3894C8);
    sub_25E3DBB64(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E3DBB64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B389338);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25E3DBBAC()
{
  unint64_t result = qword_26B388E08;
  if (!qword_26B388E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B3894E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388E08);
  }
  return result;
}

unint64_t sub_25E3DBC18()
{
  unint64_t result = qword_26B388EB0;
  if (!qword_26B388EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388EB0);
  }
  return result;
}

unint64_t sub_25E3DBC6C()
{
  unint64_t result = qword_26B389460;
  if (!qword_26B389460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389460);
  }
  return result;
}

unint64_t sub_25E3DBCC0()
{
  unint64_t result = qword_26A6ED928;
  if (!qword_26A6ED928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED928);
  }
  return result;
}

uint64_t _s12FetchRequestVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s12FetchRequestVwxx(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if ((unint64_t)v2 >= 3) {

  }
  return swift_bridgeObjectRelease();
}

uint64_t _s12FetchRequestVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;
  if ((unint64_t)v5 >= 3) {
    id v7 = v5;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v8;
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12FetchRequestVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  id v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void **)(a2 + 16);
  if ((unint64_t)v7 >= 3)
  {
    if ((unint64_t)v8 >= 3)
    {
      *(void *)(a1 + 16) = v8;
      id v10 = v8;

      goto LABEL_8;
    }

    uint64_t v8 = *(void **)(a2 + 16);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 3)
  {
LABEL_6:
    *(void *)(a1 + 16) = v8;
    goto LABEL_8;
  }
  *(void *)(a1 + 16) = v8;
  id v9 = v8;
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v11;
  uint64_t v12 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v12;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s12FetchRequestVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 16);
  unint64_t v6 = *(void *)(a2 + 16);
  if ((unint64_t)v5 >= 3)
  {
    if (v6 >= 3)
    {
      *(void *)(a1 + 16) = v6;

      goto LABEL_6;
    }
  }
  *(void *)(a1 + 16) = v6;
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s12FetchRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12FetchRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Sticker.FetchRequest()
{
  return &type metadata for Sticker.FetchRequest;
}

void *_s12FetchRequestV23RepresentationSpecifierOwCP(void *a1, void **a2)
{
  long long v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void _s12FetchRequestV23RepresentationSpecifierOwxx(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **_s12FetchRequestV23RepresentationSpecifierOwca(void **a1, void **a2)
{
  long long v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void **_s12FetchRequestV23RepresentationSpecifierOwta(void **a1, unint64_t *a2)
{
  long long v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s12FetchRequestV23RepresentationSpecifierOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s12FetchRequestV23RepresentationSpecifierOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_25E3DC254(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25E3DC26C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Sticker.FetchRequest.RepresentationSpecifier()
{
  return &type metadata for Sticker.FetchRequest.RepresentationSpecifier;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *_s12FetchRequestV23RepresentationSpecifierO11CodingErrorOMa()
{
  return &_s12FetchRequestV23RepresentationSpecifierO11CodingErrorON;
}

uint64_t getEnumTagSinglePayload for Sticker.StickerType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12FetchRequestV23RepresentationSpecifierO11CodingErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E3DC41CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25E3DC444(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25E3DC44C(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *_s12FetchRequestV23RepresentationSpecifierO10CodingKeysOMa()
{
  return &_s12FetchRequestV23RepresentationSpecifierO10CodingKeysON;
}

uint64_t _s12FetchRequestV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12FetchRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E3DC5C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_25E3DC5EC(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *_s12FetchRequestV10CodingKeysOMa()
{
  return &_s12FetchRequestV10CodingKeysON;
}

unint64_t sub_25E3DC608()
{
  unint64_t result = qword_26A6ED930;
  if (!qword_26A6ED930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED930);
  }
  return result;
}

unint64_t sub_25E3DC660()
{
  unint64_t result = qword_26A6ED938;
  if (!qword_26A6ED938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED938);
  }
  return result;
}

unint64_t sub_25E3DC6B8()
{
  unint64_t result = qword_26A6ED940;
  if (!qword_26A6ED940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED940);
  }
  return result;
}

unint64_t sub_25E3DC710()
{
  unint64_t result = qword_26B389470;
  if (!qword_26B389470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389470);
  }
  return result;
}

unint64_t sub_25E3DC768()
{
  unint64_t result = qword_26B389468;
  if (!qword_26B389468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389468);
  }
  return result;
}

unint64_t sub_25E3DC7C0()
{
  unint64_t result = qword_26B389458;
  if (!qword_26B389458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389458);
  }
  return result;
}

unint64_t sub_25E3DC818()
{
  unint64_t result = qword_26B389450;
  if (!qword_26B389450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389450);
  }
  return result;
}

uint64_t sub_25E3DC86C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6156776172 && a2 == 0xE800000000000000;
  if (v2 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572506572656877 && a2 == 0xEE00657461636964)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25E426160();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static StickerStoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StickerStoreError.hash(into:)()
{
  return sub_25E426230();
}

unint64_t StickerStoreError.errorDescription.getter()
{
  unint64_t result = 0x6420737365636341;
  switch(*v0)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x2068637573206F4ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000026;
      break;
    case 9:
      unint64_t result = 0xD000000000000027;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000022;
      break;
    case 0xB:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0xC:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000038;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000020;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000035;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000045;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000037;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25E3DCC1C()
{
  unint64_t result = qword_26A6ED948;
  if (!qword_26A6ED948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED948);
  }
  return result;
}

unint64_t sub_25E3DCC78()
{
  unint64_t result = qword_26A6ED950;
  if (!qword_26A6ED950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED950);
  }
  return result;
}

uint64_t dispatch thunk of StickerStoreProtocol.count(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StickerStoreProtocol.stickers(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of StickerStoreProtocol.count(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StickerStoreProtocol.sticker(at:type:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of StickerStoreProtocol.stickers(at:type:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of StickerStoreProtocol.sticker(identifier:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of StickerStoreProtocol.stickers(identifiers:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of StickerStoreProtocol.sticker(uri:representationSpecifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of StickerStoreProtocol.touchSticker(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of StickerStoreProtocol.addSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of StickerStoreProtocol.updateSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of StickerStoreProtocol.donateStickerToRecents(with:representations:stickerEffect:externalURI:name:accessibilityName:metadata:attributionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(a16 + 96))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of StickerStoreProtocol.moveSticker(at:to:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of StickerStoreProtocol.removeStickers(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of StickerStoreProtocol.reindexAllStickers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.count(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.fetch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.addSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.removeStickers(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.updateSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.touchSpotlightItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of StickerStoreDataMapper.reindexAllStickers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t getEnumTagSinglePayload for StickerStoreError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StickerStoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E3DD1BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerStoreError()
{
  return &type metadata for StickerStoreError;
}

uint64_t getEnumTagSinglePayload for ManagedStickerDecodingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ManagedStickerDecodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E3DD350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedStickerDecodingError()
{
  return &type metadata for ManagedStickerDecodingError;
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_addSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_updateSticker(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_removeStickers(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StickerStoreProtocolInternal._internal_only_touchStickSpotlightItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_25E3DD438()
{
  sub_25E3DD648();
  uint64_t v1 = sub_25E425CC0();
  if (v0)
  {
    id v2 = v0;
    id v3 = v0;
    unsigned int v4 = sub_25E425680();
    os_log_type_t v5 = sub_25E425BF0();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      BOOL v7 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned int v6 = 138412290;
      id v8 = v0;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      sub_25E425D80();
      *BOOL v7 = v10;

      _os_log_impl(&dword_25E3BB000, v4, v5, "Could not count stickers: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v7, -1, -1);
      MEMORY[0x2611D77B0](v6, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_25E3DD5F4()
{
  return _s5CountCMa();
}

uint64_t _s5CountCMa()
{
  uint64_t result = qword_26B389578;
  if (!qword_26B389578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25E3DD648()
{
  unint64_t result = qword_26B389510;
  if (!qword_26B389510)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B389510);
  }
  return result;
}

uint64_t sub_25E3DD688(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  v9[0] = *(unsigned char *)a1;
  long long v10 = *(_OWORD *)(a1 + 8);
  uint64_t v11 = v3;
  long long v12 = *(_OWORD *)(a1 + 32);
  char v13 = v4;
  uint64_t v14 = v5;
  char v15 = v6;
  unint64_t v7 = sub_25E3DD74C((uint64_t)v9);
  if (!v1)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_25E425F80();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v2 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_25E3DD74C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void **)(a1 + 8);
  char v4 = *(void **)(a1 + 16);
  uint64_t v36 = *v1;
  id v37 = v4;
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  int v38 = *(unsigned __int8 *)(a1 + 48);
  swift_beginAccess();
  unint64_t v9 = v1[2];
  unint64_t v40 = v9;
  if (v5)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v5;
    v34[2] = sub_25E3E08A8;
    v34[3] = MEMORY[0x270FA5388](v10);
    swift_bridgeObjectRetain_n();
    id v11 = v5;
    unint64_t v9 = sub_25E3DF328(v9, sub_25E3E0114, (uint64_t)v34);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v40 = v9;
    if (!*(void *)(v6 + 16)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  if (*(void *)(v6 + 16))
  {
LABEL_3:
    uint64_t v39 = v6;
    v34[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894D8);
    uint64_t v35 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389338);
    sub_25E3D926C(&qword_26A6ED958, &qword_26B3894D8);
    sub_25E3D926C(&qword_26A6ED960, &qword_26B3894D8);
    sub_25E3D926C(&qword_26A6ED968, &qword_26B3894C8);
    sub_25E3D926C(&qword_26A6ED970, &qword_26B389338);
    uint64_t v3 = v35;
    sub_25E425890();
    unint64_t v9 = v40;
  }
LABEL_4:
  unint64_t v12 = v9 >> 62;
  if (!(v9 >> 62))
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v14 = v13;
    if (v7 >= v13) {
      goto LABEL_37;
    }
    if (v13 >= v7) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v7 >= v23) {
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_25E425F80();
  uint64_t result = swift_bridgeObjectRelease();
  if ((uint64_t)v14 >= v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v13 >= v7)
    {
LABEL_7:
      if (v7 < 0)
      {
        __break(1u);
      }
      else
      {
        if (v12)
        {
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_25E425F80();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v13 >= (uint64_t)v14)
        {
          if ((v14 & 0x8000000000000000) == 0)
          {
            if ((v9 & 0xC000000000000001) != 0 && v7 != v14)
            {
              if (v7 >= v14)
              {
                __break(1u);
                goto LABEL_53;
              }
              type metadata accessor for Sticker(0);
              uint64_t v15 = v7;
              do
              {
                uint64_t v16 = v15 + 1;
                sub_25E425ED0();
                uint64_t v15 = v16;
              }
              while (v14 != v16);
            }
            if (v12)
            {
              swift_bridgeObjectRetain();
              uint64_t v13 = sub_25E425F90();
              uint64_t v3 = v17;
              uint64_t v7 = v18;
              unint64_t v14 = v19;
              swift_bridgeObjectRelease_n();
              if (v14) {
                goto LABEL_25;
              }
            }
            else
            {
              uint64_t v13 = v9 & 0xFFFFFFFFFFFFFF8;
              uint64_t v3 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
              unint64_t v14 = (2 * v14) | 1;
              if (v14)
              {
LABEL_25:
                sub_25E426170();
                swift_unknownObjectRetain_n();
                uint64_t v21 = swift_dynamicCastClass();
                if (!v21)
                {
                  swift_unknownObjectRelease();
                  uint64_t v21 = MEMORY[0x263F8EE78];
                }
                uint64_t v22 = *(void *)(v21 + 16);
                swift_release();
                if (!__OFSUB__(v14 >> 1, v7))
                {
                  if (v22 == (v14 >> 1) - v7)
                  {
                    unint64_t v20 = swift_dynamicCastClass();
                    swift_unknownObjectRelease();
                    if (!v20)
                    {
                      swift_unknownObjectRelease();
                      unint64_t v20 = MEMORY[0x263F8EE78];
                    }
LABEL_31:
                    if (v38) {
                      goto LABEL_46;
                    }
                    goto LABEL_38;
                  }
                  goto LABEL_54;
                }
LABEL_53:
                __break(1u);
LABEL_54:
                swift_unknownObjectRelease();
              }
            }
            unint64_t v20 = sub_25E3D44D0(v13, v3, v7, v14);
            swift_unknownObjectRelease();
            goto LABEL_31;
          }
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
      }
      __break(1u);
      goto LABEL_49;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRelease();
    unint64_t v20 = MEMORY[0x263F8EE78];
    if (v38) {
      goto LABEL_46;
    }
LABEL_38:
    unint64_t v9 = sub_25E4223B4(v8, v20);
    uint64_t v8 = v25;
    unint64_t v14 = v26;
    uint64_t v13 = v27;
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_39:
      sub_25E3D44D0(v9, v8, v14, v13);
LABEL_45:
      swift_unknownObjectRelease();
      goto LABEL_46;
    }
    sub_25E426170();
    swift_unknownObjectRetain_n();
    uint64_t v28 = swift_dynamicCastClass();
    if (!v28)
    {
      swift_unknownObjectRelease();
      uint64_t v28 = MEMORY[0x263F8EE78];
    }
    uint64_t v29 = *(void *)(v28 + 16);
    swift_release();
    if (!__OFSUB__((unint64_t)v13 >> 1, v14))
    {
      if (v29 == ((unint64_t)v13 >> 1) - v14)
      {
        uint64_t v30 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v30) {
          goto LABEL_45;
        }
LABEL_46:
        id v31 = v37;
        sub_25E3D44C0(v37);
        unint64_t v32 = swift_bridgeObjectRetain();
        uint64_t v33 = sub_25E3DF1EC(v32, v36, v31);
        swift_bridgeObjectRelease_n();
        sub_25E3D446C(v31);
        return v33;
      }
LABEL_51:
      swift_unknownObjectRelease();
      goto LABEL_39;
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E3DDD44(uint64_t a1)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_25E3DF728((unint64_t *)(v1 + 16), a1);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v1 + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25E425F80();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 >= v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v3)
    {
LABEL_3:
      sub_25E3EBDA8(v3, v6);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

void sub_25E3DDE2C(void *a1)
{
  uint64_t v3 = (unint64_t *)(v1 + 16);
  swift_beginAccess();
  id v4 = a1;
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_25E3DFF6C(v5, (uint64_t)v4);
  char v8 = v7;
  swift_bridgeObjectRelease();

  if (v8)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *unint64_t v14 = 2;
    swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    unint64_t v9 = *v3;
    id v10 = v4;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v3 = v9;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v9 & 0x8000000000000000) != 0
      || (v9 & 0x4000000000000000) != 0)
    {
      sub_25E3DF170(v9);
      unint64_t v9 = v12;
      *uint64_t v3 = v12;
    }
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v13 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v10;

      sub_25E425AE0();
      sub_25E3DDF88(v3);
      swift_endAccess();
      return;
    }
    __break(1u);
  }
}

uint64_t sub_25E3DDF88(unint64_t *a1)
{
  unint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_25E3DF170(v2);
    unint64_t v2 = v4;
    *a1 = v4;
  }
  uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v7[1] = v5;
  sub_25E3DE334(v7);
  return sub_25E425AE0();
}

id sub_25E3DE010(uint64_t a1, void *a2)
{
  sub_25E3E01A8(a1, (uint64_t)v11);
  uint64_t v3 = v12;
  if (v12)
  {
    unint64_t v4 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v4);
    char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_25E426150();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(a2, sel_evaluateWithObject_, v8);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_25E3DE154(void *a1, uint64_t (*a2)(void *), uint64_t a3, uint64_t (*a4)(void))
{
  v9[3] = a4(0);
  v9[0] = a1;
  id v6 = a1;
  char v7 = a2(v9);
  sub_25E3E0148((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_25E3DE1C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InMemoryDataMapper()
{
  return self;
}

uint64_t sub_25E3DE224(uint64_t a1)
{
  return sub_25E3DD688(a1);
}

uint64_t sub_25E3DE248(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  char v2 = *(unsigned char *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  v6[0] = *(unsigned char *)a1;
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v8 = v1;
  long long v9 = *(_OWORD *)(a1 + 32);
  char v10 = v2;
  uint64_t v11 = v3;
  char v12 = v4;
  return sub_25E3DD74C((uint64_t)v6);
}

void *sub_25E3DE2B0(void *a1)
{
  char v2 = (void *)sub_25E3DF5E8(a1);
  uint64_t v3 = v2;
  if (!v1) {
    id v4 = v2;
  }
  return v3;
}

uint64_t sub_25E3DE2EC(uint64_t a1)
{
  return sub_25E3DDD44(a1);
}

void sub_25E3DE310(void *a1)
{
}

uint64_t sub_25E3DE334(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25E426130();
  uint64_t v141 = v3;
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      sub_25E425FD0();
      __break(1u);
      goto LABEL_200;
    }
    if ((unint64_t)v3 >= 2)
    {
      long long v9 = (uint64_t *)*a1;
      uint64_t v10 = -1;
      uint64_t v11 = 1;
      char v12 = v9;
      do
      {
        uint64_t v13 = v9[v11];
        uint64_t v14 = v10;
        uint64_t v15 = v12;
        do
        {
          uint64_t v16 = *v15;
          uint64_t v17 = (double *)(v13 + OBJC_IVAR___STKSticker_libraryIndex);
          swift_beginAccess();
          double v18 = *v17;
          unint64_t v19 = (double *)(v16 + OBJC_IVAR___STKSticker_libraryIndex);
          uint64_t result = swift_beginAccess();
          if (*v19 >= v18) {
            break;
          }
          if (!v9) {
            goto LABEL_195;
          }
          uint64_t v20 = *v15;
          uint64_t v13 = v15[1];
          uint64_t *v15 = v13;
          v15[1] = v20;
          --v15;
          BOOL v21 = __CFADD__(v14++, 1);
        }
        while (!v21);
        ++v11;
        ++v12;
        --v10;
      }
      while (v11 != v141);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_200:
      uint64_t result = sub_25E425F70();
      __break(1u);
      return result;
    }
    uint64_t v140 = result;
    uint64_t v138 = a1;
    if (v3 >= 2)
    {
      uint64_t v6 = v5 >> 1;
      type metadata accessor for Sticker(0);
      uint64_t v7 = sub_25E425B00();
      *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      unint64_t v8 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v157 = v7;
      goto LABEL_19;
    }
    uint64_t v22 = (char *)MEMORY[0x263F8EE78];
    uint64_t v157 = MEMORY[0x263F8EE78];
    unint64_t v8 = (MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32;
    if (v3 == 1)
    {
LABEL_19:
      uint64_t v23 = 0;
      uint64_t v139 = *a1 + 16;
      uint64_t v145 = *a1;
      uint64_t v142 = *a1 - 8;
      uint64_t v22 = (char *)MEMORY[0x263F8EE78];
      __dst = (char *)v8;
      while (1)
      {
        uint64_t v25 = v23++;
        uint64_t v154 = v25;
        if (v23 >= v3)
        {
          uint64_t v26 = v145;
        }
        else
        {
          uint64_t v26 = v145;
          uint64_t v27 = *(void *)(v145 + 8 * v25);
          uint64_t v28 = (double *)(*(void *)(v145 + 8 * v23) + OBJC_IVAR___STKSticker_libraryIndex);
          swift_beginAccess();
          double v29 = *v28;
          uint64_t v30 = (double *)(v27 + OBJC_IVAR___STKSticker_libraryIndex);
          swift_beginAccess();
          double v31 = *v30;
          uint64_t v23 = v25 + 2;
          if (v25 + 2 < v3)
          {
            unint64_t v32 = (void *)(v139 + 8 * v25);
            while (1)
            {
              uint64_t v33 = *(v32 - 1);
              id v34 = (double *)(*v32 + OBJC_IVAR___STKSticker_libraryIndex);
              swift_beginAccess();
              double v35 = *v34;
              uint64_t v36 = (double *)(v33 + OBJC_IVAR___STKSticker_libraryIndex);
              swift_beginAccess();
              if (v31 < v29 == *v36 >= v35) {
                break;
              }
              ++v23;
              ++v32;
              if (v3 == v23)
              {
                uint64_t v23 = v3;
                break;
              }
            }
            unint64_t v8 = (unint64_t)__dst;
          }
          if (v31 < v29)
          {
            if (v23 < v25) {
              goto LABEL_190;
            }
            if (v25 < v23)
            {
              id v37 = (uint64_t *)(v142 + 8 * v23);
              uint64_t v38 = v23;
              uint64_t v39 = v25;
              unint64_t v40 = (uint64_t *)(v145 + 8 * v25);
              do
              {
                if (v39 != --v38)
                {
                  if (!v145) {
                    goto LABEL_197;
                  }
                  uint64_t v41 = *v40;
                  *unint64_t v40 = *v37;
                  *id v37 = v41;
                }
                ++v39;
                --v37;
                ++v40;
              }
              while (v39 < v38);
            }
          }
        }
        if (v23 < v3)
        {
          if (__OFSUB__(v23, v25)) {
            goto LABEL_185;
          }
          if (v23 - v25 < v140)
          {
            if (__OFADD__(v25, v140)) {
              goto LABEL_191;
            }
            if (v25 + v140 >= v3) {
              uint64_t v42 = v3;
            }
            else {
              uint64_t v42 = v25 + v140;
            }
            if (v42 < v25) {
              goto LABEL_192;
            }
            if (v23 != v42)
            {
              uint64_t v43 = (uint64_t *)(v142 + 8 * v23);
              uint64_t v152 = v42;
              do
              {
                uint64_t v44 = *(void *)(v26 + 8 * v23);
                uint64_t v45 = v25;
                uint64_t v46 = v43;
                do
                {
                  uint64_t v47 = *v46;
                  uint64_t v48 = (double *)(v44 + OBJC_IVAR___STKSticker_libraryIndex);
                  swift_beginAccess();
                  double v49 = *v48;
                  unint64_t v50 = (double *)(v47 + OBJC_IVAR___STKSticker_libraryIndex);
                  swift_beginAccess();
                  if (*v50 >= v49) {
                    break;
                  }
                  if (!v26) {
                    goto LABEL_193;
                  }
                  uint64_t v51 = *v46;
                  uint64_t v44 = v46[1];
                  *uint64_t v46 = v44;
                  v46[1] = v51;
                  --v46;
                  ++v45;
                }
                while (v23 != v45);
                ++v23;
                ++v43;
                uint64_t v25 = v154;
              }
              while (v23 != v152);
              uint64_t v23 = v152;
              unint64_t v8 = (unint64_t)__dst;
            }
          }
        }
        if (v23 < v25) {
          goto LABEL_184;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_25E3F78EC(0, *((void *)v22 + 2) + 1, 1, v22);
        }
        unint64_t v53 = *((void *)v22 + 2);
        unint64_t v52 = *((void *)v22 + 3);
        unint64_t v24 = v53 + 1;
        if (v53 >= v52 >> 1) {
          uint64_t v22 = sub_25E3F78EC((char *)(v52 > 1), v53 + 1, 1, v22);
        }
        *((void *)v22 + 2) = v24;
        uint64_t v146 = v22 + 32;
        uint64_t v54 = &v22[16 * v53 + 32];
        *(void *)uint64_t v54 = v25;
        *((void *)v54 + 1) = v23;
        if (v53) {
          break;
        }
        unint64_t v24 = 1;
LABEL_21:
        uint64_t v3 = v141;
        if (v23 >= v141) {
          goto LABEL_156;
        }
      }
      id v55 = v22 + 32;
      uint64_t v143 = v23;
      uint64_t v144 = v22;
      while (1)
      {
        unint64_t v56 = v24 - 1;
        if (v24 >= 4)
        {
          unint64_t v61 = &v55[16 * v24];
          uint64_t v62 = *((void *)v61 - 8);
          uint64_t v63 = *((void *)v61 - 7);
          BOOL v67 = __OFSUB__(v63, v62);
          uint64_t v64 = v63 - v62;
          if (v67) {
            goto LABEL_173;
          }
          uint64_t v66 = *((void *)v61 - 6);
          uint64_t v65 = *((void *)v61 - 5);
          BOOL v67 = __OFSUB__(v65, v66);
          uint64_t v59 = v65 - v66;
          char v60 = v67;
          if (v67) {
            goto LABEL_174;
          }
          unint64_t v68 = v24 - 2;
          char v69 = &v55[16 * v24 - 32];
          uint64_t v71 = *(void *)v69;
          uint64_t v70 = *((void *)v69 + 1);
          BOOL v67 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          if (v67) {
            goto LABEL_176;
          }
          BOOL v67 = __OFADD__(v59, v72);
          uint64_t v73 = v59 + v72;
          if (v67) {
            goto LABEL_179;
          }
          if (v73 >= v64)
          {
            uint64_t v91 = &v55[16 * v56];
            uint64_t v93 = *(void *)v91;
            uint64_t v92 = *((void *)v91 + 1);
            BOOL v67 = __OFSUB__(v92, v93);
            uint64_t v94 = v92 - v93;
            if (v67) {
              goto LABEL_183;
            }
            BOOL v84 = v59 < v94;
            goto LABEL_94;
          }
        }
        else
        {
          if (v24 != 3)
          {
            uint64_t v85 = *((void *)v22 + 4);
            uint64_t v86 = *((void *)v22 + 5);
            BOOL v67 = __OFSUB__(v86, v85);
            uint64_t v78 = v86 - v85;
            char v79 = v67;
            goto LABEL_88;
          }
          uint64_t v58 = *((void *)v22 + 4);
          uint64_t v57 = *((void *)v22 + 5);
          BOOL v67 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          char v60 = v67;
        }
        if (v60) {
          goto LABEL_175;
        }
        unint64_t v68 = v24 - 2;
        uint64_t v74 = &v55[16 * v24 - 32];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v77 = __OFSUB__(v75, v76);
        uint64_t v78 = v75 - v76;
        char v79 = v77;
        if (v77) {
          goto LABEL_178;
        }
        uint64_t v80 = &v55[16 * v56];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v67 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v67) {
          goto LABEL_181;
        }
        if (__OFADD__(v78, v83)) {
          goto LABEL_182;
        }
        if (v78 + v83 >= v59)
        {
          BOOL v84 = v59 < v83;
LABEL_94:
          if (v84) {
            unint64_t v56 = v68;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v79) {
          goto LABEL_177;
        }
        uint64_t v87 = &v55[16 * v56];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v67 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v67) {
          goto LABEL_180;
        }
        if (v90 < v78) {
          goto LABEL_21;
        }
LABEL_96:
        if (v56 - 1 >= v24)
        {
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        if (!v145) {
          goto LABEL_196;
        }
        unint64_t v149 = v56 - 1;
        int64_t v150 = v56;
        uint64_t v148 = &v55[16 * v56 - 16];
        uint64_t v95 = &v55[16 * v56];
        uint64_t v96 = *(void *)v95;
        uint64_t v147 = v95;
        uint64_t v151 = *(void *)v148;
        uint64_t v153 = *((void *)v95 + 1);
        uint64_t v97 = (char *)(v145 + 8 * *(void *)v148);
        uint64_t v98 = (char *)(v145 + 8 * *(void *)v95);
        unint64_t v99 = v145 + 8 * v153;
        uint64_t v100 = v98 - v97;
        uint64_t v101 = v98 - v97 + 7;
        if (v98 - v97 >= 0) {
          uint64_t v101 = v98 - v97;
        }
        uint64_t v102 = v101 >> 3;
        uint64_t v103 = v99 - (void)v98;
        uint64_t v104 = v99 - (void)v98 + 7;
        if ((uint64_t)(v99 - (void)v98) >= 0) {
          uint64_t v104 = v99 - (void)v98;
        }
        uint64_t v105 = v104 >> 3;
        if (v102 >= v104 >> 3)
        {
          if (v103 < -7) {
            goto LABEL_199;
          }
          if ((unint64_t)__dst >= v99 || __dst != v98) {
            memmove(__dst, v98, 8 * v105);
          }
          unint64_t v114 = &__dst[8 * v105];
          uint64_t v115 = v151;
          unint64_t v8 = (unint64_t)__dst;
          if (v151 >= v96 || v103 < 8)
          {
            uint64_t v107 = __dst;
            goto LABEL_144;
          }
          uint64_t v116 = (char *)(v142 + 8 * v153);
          uint64_t v155 = v97;
          while (2)
          {
            unint64_t v117 = v114 - 8;
            uint64_t v118 = v116 + 8;
            v120 = v98 - 8;
            uint64_t v119 = *((void *)v98 - 1);
            unint64_t v121 = v98;
            unint64_t v122 = (unint64_t)v114;
            uint64_t v123 = (double *)(*((void *)v114 - 1) + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            double v124 = *v123;
            uint64_t v125 = (double *)(v119 + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            if (*v125 < v124)
            {
              if (v118 == v121)
              {
                BOOL v21 = v116 >= v121;
                uint64_t v126 = v120;
                unint64_t v8 = (unint64_t)__dst;
                unint64_t v114 = (char *)v122;
                unint64_t v127 = v155;
                if (!v21) {
                  goto LABEL_137;
                }
              }
              else
              {
                uint64_t v126 = v120;
                unint64_t v127 = v155;
                unint64_t v8 = (unint64_t)__dst;
                unint64_t v114 = (char *)v122;
              }
              goto LABEL_136;
            }
            uint64_t v126 = v121;
            v120 = v117;
            if (v118 != (char *)v122)
            {
              unint64_t v114 = v117;
              unint64_t v127 = v155;
              unint64_t v8 = (unint64_t)__dst;
              goto LABEL_136;
            }
            unint64_t v114 = v117;
            unint64_t v8 = (unint64_t)__dst;
            unint64_t v127 = v155;
            if ((unint64_t)v116 >= v122) {
LABEL_136:
            }
              *(void *)uint64_t v116 = *(void *)v120;
LABEL_137:
            uint64_t v98 = v126;
            if (v127 >= v126 || (v116 -= 8, v8 >= (unint64_t)v114))
            {
              uint64_t v107 = (char *)v8;
              goto LABEL_142;
            }
            continue;
          }
        }
        if (v100 < -7) {
          goto LABEL_199;
        }
        unint64_t v8 = (unint64_t)__dst;
        if (__dst != v97 || __dst >= v98) {
          memmove(__dst, v97, 8 * v102);
        }
        v106 = &__dst[8 * v102];
        if (v96 < v153 && v100 >= 8)
        {
          uint64_t v107 = __dst;
          while (1)
          {
            uint64_t v108 = *(void *)v107;
            uint64_t v109 = (double *)(*(void *)v98 + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            double v110 = *v109;
            unint64_t v111 = (double *)(v108 + OBJC_IVAR___STKSticker_libraryIndex);
            swift_beginAccess();
            if (*v111 >= v110) {
              break;
            }
            unint64_t v112 = v98;
            BOOL v113 = v97 == v98;
            v98 += 8;
            if (!v113) {
              goto LABEL_115;
            }
LABEL_116:
            v97 += 8;
            if (v107 >= v106 || (unint64_t)v98 >= v99)
            {
              unint64_t v114 = v106;
              goto LABEL_141;
            }
          }
          unint64_t v112 = v107;
          BOOL v113 = v97 == v107;
          v107 += 8;
          if (v113) {
            goto LABEL_116;
          }
LABEL_115:
          *(void *)uint64_t v97 = *(void *)v112;
          goto LABEL_116;
        }
        unint64_t v114 = v106;
        uint64_t v107 = __dst;
LABEL_141:
        uint64_t v98 = v97;
LABEL_142:
        uint64_t v115 = v151;
LABEL_144:
        uint64_t v128 = v114 - v107 + 7;
        if (v114 - v107 >= 0) {
          uint64_t v128 = v114 - v107;
        }
        uint64_t v22 = v144;
        if (v114 - v107 <= -8) {
          goto LABEL_199;
        }
        uint64_t v129 = v128 >> 3;
        if (v98 != v107 || v98 >= &v107[8 * v129]) {
          memmove(v98, v107, 8 * v129);
        }
        if (v153 < v115) {
          goto LABEL_170;
        }
        if (v150 > *((void *)v144 + 2)) {
          goto LABEL_171;
        }
        *(void *)uint64_t v148 = v115;
        id v55 = v146;
        *(void *)&v146[16 * v149 + 8] = v153;
        unint64_t v130 = *((void *)v144 + 2);
        if (v150 >= (uint64_t)v130) {
          goto LABEL_172;
        }
        unint64_t v24 = v130 - 1;
        memmove(v147, v147 + 16, 16 * (v130 - 1 - v150));
        *((void *)v144 + 2) = v130 - 1;
        BOOL v84 = v130 > 2;
        uint64_t v23 = v143;
        if (!v84) {
          goto LABEL_21;
        }
      }
    }
    unint64_t v24 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_156:
    if (v24 >= 2)
    {
      uint64_t v131 = *v138;
      while (1)
      {
        unint64_t v132 = v24 - 2;
        if (v24 < 2) {
          break;
        }
        if (!v131) {
          goto LABEL_198;
        }
        uint64_t v133 = (char *)v8;
        uint64_t v134 = *(void *)&v22[16 * v132 + 32];
        uint64_t v135 = *(void *)&v22[16 * v24 + 24];
        sub_25E3DEE44((char *)(v131 + 8 * v134), (char *)(v131 + 8 * *(void *)&v22[16 * v24 + 16]), v131 + 8 * v135, v133);
        if (v1) {
          goto LABEL_167;
        }
        if (v135 < v134) {
          goto LABEL_187;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_25E3F7AA8((uint64_t)v22);
        }
        if (v132 >= *((void *)v22 + 2)) {
          goto LABEL_188;
        }
        uint64_t v136 = &v22[16 * v132 + 32];
        *(void *)uint64_t v136 = v134;
        *((void *)v136 + 1) = v135;
        unint64_t v137 = *((void *)v22 + 2);
        if (v24 > v137) {
          goto LABEL_189;
        }
        memmove(&v22[16 * v24 + 16], &v22[16 * v24 + 32], 16 * (v137 - v24));
        *((void *)v22 + 2) = v137 - 1;
        unint64_t v24 = v137 - 1;
        unint64_t v8 = (unint64_t)v133;
        if (v137 <= 2) {
          goto LABEL_167;
        }
      }
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
      goto LABEL_194;
    }
LABEL_167:
    swift_bridgeObjectRelease();
    *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_25E425AE0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E3DEE44(char *__src, char *a2, unint64_t a3, char *__dst)
{
  id v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v33 = __dst;
  id v34 = __src;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_45;
    }
    if (__dst != a2 || &a2[8 * v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    uint64_t v20 = &v4[8 * v13];
    unint64_t v32 = v20;
    id v34 = v6;
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_44;
    }
    BOOL v21 = (char *)(a3 - 8);
    uint64_t v22 = v6;
    double v31 = v4;
    while (1)
    {
      uint64_t v23 = v21 + 8;
      unint64_t v24 = v20 - 8;
      uint64_t v25 = *((void *)v22 - 1);
      v22 -= 8;
      uint64_t v26 = (double *)(*((void *)v20 - 1) + OBJC_IVAR___STKSticker_libraryIndex);
      swift_beginAccess();
      double v27 = *v26;
      uint64_t v28 = (double *)(v25 + OBJC_IVAR___STKSticker_libraryIndex);
      swift_beginAccess();
      if (*v28 >= v27)
      {
        unint64_t v32 = v20 - 8;
        if (v23 >= v20 && v21 < v20)
        {
          double v29 = v31;
          if (v23 != v20) {
            *(void *)BOOL v21 = *(void *)v24;
          }
          uint64_t v22 = v6;
          v20 -= 8;
          goto LABEL_42;
        }
        *(void *)BOOL v21 = *(void *)v24;
        uint64_t v22 = v6;
        v20 -= 8;
      }
      else
      {
        if (v23 != v6 || v21 >= v6) {
          *(void *)BOOL v21 = *(void *)v22;
        }
        id v34 = v22;
      }
      double v29 = v31;
LABEL_42:
      if (v22 > v7)
      {
        v21 -= 8;
        uint64_t v6 = v22;
        if (v20 > v29) {
          continue;
        }
      }
      goto LABEL_44;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    unint64_t v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        uint64_t v15 = *(void *)v4;
        uint64_t v16 = (double *)(*(void *)v6 + OBJC_IVAR___STKSticker_libraryIndex);
        swift_beginAccess();
        double v17 = *v16;
        double v18 = (double *)(v15 + OBJC_IVAR___STKSticker_libraryIndex);
        swift_beginAccess();
        if (*v18 >= v17)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v33 = v4;
          unint64_t v19 = v6;
        }
        else
        {
          unint64_t v19 = v6 + 8;
          if (v7 < v6 || v7 >= v19 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v19;
      }
      while ((unint64_t)v19 < a3);
      id v34 = v7;
    }
LABEL_44:
    sub_25E3F79E8(&v34, &v33, &v32);
    return 1;
  }
LABEL_45:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

void sub_25E3DF170(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2611D6C40);
}

uint64_t sub_25E3DF1EC(unint64_t a1, uint64_t a2, void *a3)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v5) {
      break;
    }
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E425F30();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        int64_t v8 = (char *)MEMORY[0x2611D6C30](v7, a1);
      }
      else {
        int64_t v8 = (char *)*(id *)(a1 + 8 * v7 + 32);
      }
      int64_t v9 = v8;
      ++v7;
      sub_25E3E0508(v8, a3);

      sub_25E425F10();
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      if (v5 == v7) {
        return v10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E3DF328(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  unint64_t v6 = a1;
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v6 & 0xC000000000000001;
      unint64_t v15 = v6;
      while (v17)
      {
        id v9 = (id)MEMORY[0x2611D6C30](v8, v6);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        uint64_t v12 = a3;
        char v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_25E425F10();
          sub_25E425F40();
          unint64_t v6 = v15;
          sub_25E425F50();
          sub_25E425F20();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_25E425F80();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_25E3DF4D0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_25E425F80())
  {
    a2 += OBJC_IVAR___STKSticker_identifier;
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2611D6C30](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if (sub_25E4254B0())
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25E3DF5E8(void *a1)
{
  swift_beginAccess();
  id v3 = a1;
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_25E3DF4D0(v4, (uint64_t)v3);
  swift_bridgeObjectRelease();

  if (v5)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *id v6 = 4;
    swift_willThrow();
    return (uint64_t)v3;
  }
  swift_beginAccess();
  if (!(*(void *)(v1 + 16) >> 62))
  {
    id v7 = v3;
LABEL_5:
    sub_25E3EB13C(0, 0, (uint64_t)v3);
    swift_endAccess();
    return (uint64_t)v3;
  }
  id v9 = v3;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_25E425F80();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0) {
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E3DF728(unint64_t *a1, uint64_t a2)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_25E4254F0();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v65 = (char *)&v55 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v69 = (char *)&v55 - v12;
  uint64_t v63 = a1;
  unint64_t v13 = *a1;
  if (*a1 >> 62)
  {
LABEL_77:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25E425F80();
    if (v14) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_3:
      unint64_t v15 = 0;
      unint64_t v62 = v13 & 0xC000000000000001;
      uint64_t v16 = *(void *)(v67 + 16);
      unint64_t v60 = v13;
      unint64_t v56 = v13 + 32;
      uint64_t v75 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v61 + 48);
      uint64_t v76 = v61 + 16;
      uint64_t v72 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v73 = (void (**)(char *, unint64_t, uint64_t))(v61 + 32);
      char v79 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
      unint64_t v58 = (v61 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v59 = v14;
      uint64_t v68 = v16;
      unint64_t v13 = (unint64_t)v69;
      while (1)
      {
        unint64_t v17 = v62 ? (char *)MEMORY[0x2611D6C30](v15, v60) : (char *)*(id *)(v56 + 8 * v15);
        unint64_t v66 = v15;
        id v64 = v17;
        if (v16) {
          break;
        }
        uint64_t v25 = *v79;
        swift_bridgeObjectRetain();
        v25(v13, 1, 1, v3);
LABEL_14:

        swift_bridgeObjectRelease();
        unint64_t v15 = v66 + 1;
        if (__OFADD__(v66, 1))
        {
LABEL_76:
          __break(1u);
          goto LABEL_77;
        }
        uint64_t v16 = v68;
        if (v15 == v59) {
          goto LABEL_78;
        }
      }
      uint64_t v70 = (void (*)(char *, unint64_t, uint64_t))&v17[OBJC_IVAR___STKSticker_identifier];
      unint64_t v57 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      uint64_t v18 = v67 + v57;
      uint64_t v71 = *(void *)(v61 + 72);
      BOOL v77 = *(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v77(v13, v18, v3);
        unint64_t v19 = *v79;
        (*v79)(v13, 0, 1, v3);
        uint64_t v74 = *v75;
        if (v74(v13, 1, v3) == 1) {
          goto LABEL_14;
        }
        uint64_t v78 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19;
        uint64_t v20 = *v73;
        BOOL v21 = v65;
        (*v73)(v65, v13, v3);
        unint64_t v13 = sub_25E3E0084();
        char v22 = sub_25E4258A0();
        uint64_t v23 = v21;
        unint64_t v24 = *v72;
        (*v72)(v23, v3);
        if (v22) {
          break;
        }
        v18 += v71;
        --v16;
        unint64_t v13 = (unint64_t)v69;
        if (!v16)
        {
          v78(v69, 1, 1, v3);
          goto LABEL_14;
        }
      }
      char v69 = (char *)v13;
      uint64_t v70 = v20;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v26 = v66;
      unint64_t v27 = v66 + 1;
      if (__OFADD__(v66, 1))
      {
        __break(1u);
      }
      else
      {
        unint64_t v13 = (unint64_t)v63;
        if (!(*v63 >> 62))
        {
          uint64_t v28 = *(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_25E425F80();
      swift_bridgeObjectRelease();
      unint64_t v27 = v26 + 1;
LABEL_20:
      double v29 = v70;
      if (v27 == v28) {
        return v26;
      }
      unint64_t v62 = v67 + v57;
      while (2)
      {
        uint64_t v30 = *(void *)v13;
        BOOL v31 = (*(void *)v13 & 0xC000000000000001) == 0;
        uint64_t v65 = (char *)v27;
        unint64_t v66 = v26;
        if (!v31)
        {
          id v52 = (id)MEMORY[0x2611D6C30]();
          goto LABEL_27;
        }
        if ((v27 & 0x8000000000000000) != 0)
        {
LABEL_66:
          __break(1u);
        }
        else if (v27 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v52 = *(id *)(v30 + 8 * v27 + 32);
LABEL_27:
          id v64 = v52;
          swift_bridgeObjectRetain();
          unint64_t v13 = 0;
          unint64_t v32 = v62;
          do
          {
            v77((unint64_t)v11, v32, v3);
            unint64_t v33 = v13 + 1;
            if (__OFADD__(v13, 1))
            {
              __break(1u);
              goto LABEL_66;
            }
            v78(v11, 0, 1, v3);
            if (v74((unint64_t)v11, 1, v3) == 1) {
              goto LABEL_33;
            }
            v29(v6, (unint64_t)v11, v3);
            char v34 = sub_25E4258A0();
            v24(v6, v3);
            if (v34)
            {

              swift_bridgeObjectRelease();
              unint64_t v13 = (unint64_t)v63;
              uint64_t v26 = v66;
              unint64_t v27 = (unint64_t)(v65 + 1);
              if (__OFADD__(v65, 1)) {
                goto LABEL_68;
              }
              goto LABEL_58;
            }
            ++v13;
            double v29 = v70;
            v32 += v71;
          }
          while (v33 != v68);
          v78(v11, 1, 1, v3);
LABEL_33:

          swift_bridgeObjectRelease();
          double v35 = v65;
          unint64_t v36 = v66;
          unint64_t v13 = (unint64_t)v63;
          if ((char *)v66 != v65)
          {
            unint64_t v37 = *v63;
            uint64_t v38 = v63;
            if ((*v63 & 0xC000000000000001) != 0)
            {
              uint64_t v39 = v65;
              unint64_t v13 = v66;
              id v40 = (id)MEMORY[0x2611D6C30](v66, v37);
              unint64_t v37 = *v63;
            }
            else
            {
              if ((v66 & 0x8000000000000000) != 0) {
                goto LABEL_70;
              }
              if (v66 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_71;
              }
              uint64_t v39 = v65;
              unint64_t v13 = v66;
              id v40 = *(id *)(v37 + 8 * v66 + 32);
            }
            id v64 = v40;
            if ((v37 & 0xC000000000000001) != 0)
            {
              uint64_t v41 = v39;
              id v42 = (id)MEMORY[0x2611D6C30](v39, v37);
              unint64_t v37 = *v38;
            }
            else
            {
              if (((unint64_t)v39 & 0x8000000000000000) != 0) {
                goto LABEL_72;
              }
              if ((unint64_t)v39 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_73;
              }
              uint64_t v41 = v39;
              id v42 = *(id *)(v37 + 8 * (void)v39 + 32);
            }
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            unint64_t *v38 = v37;
            if (!isUniquelyReferenced_nonNull_bridgeObject
              || (v37 & 0x8000000000000000) != 0
              || (v37 & 0x4000000000000000) != 0)
            {
              sub_25E3DF170(v37);
              unint64_t v37 = v44;
              unint64_t *v38 = v44;
            }
            uint64_t v45 = *(void **)((v37 & 0xFFFFFFFFFFFFFF8) + 8 * v13 + 0x20);
            *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 8 * v13 + 0x20) = v42;

            sub_25E425AE0();
            unint64_t v46 = *v38;
            int v47 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            unint64_t *v38 = v46;
            if (!v47 || (v46 & 0x8000000000000000) != 0 || (v46 & 0x4000000000000000) != 0)
            {
              sub_25E3DF170(v46);
              unint64_t v46 = v48;
              unint64_t *v38 = v48;
            }
            if (((unint64_t)v41 & 0x8000000000000000) != 0) {
              goto LABEL_74;
            }
            if ((unint64_t)v41 >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_75;
            }
            double v49 = *(void **)((v46 & 0xFFFFFFFFFFFFFF8) + 8 * (void)v41 + 0x20);
            *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 8 * (void)v41 + 0x20) = v64;

            sub_25E425AE0();
            double v35 = v41;
            unint64_t v36 = v13;
            unint64_t v13 = (unint64_t)v38;
          }
          BOOL v50 = __OFADD__(v36, 1);
          uint64_t v26 = v36 + 1;
          if (v50) {
            goto LABEL_69;
          }
          BOOL v50 = __OFADD__(v35, 1);
          unint64_t v27 = (unint64_t)(v35 + 1);
          if (!v50)
          {
LABEL_58:
            if (*(void *)v13 >> 62)
            {
              unint64_t v53 = v27;
              swift_bridgeObjectRetain();
              uint64_t v51 = sub_25E425F80();
              swift_bridgeObjectRelease();
              unint64_t v27 = v53;
            }
            else
            {
              uint64_t v51 = *(void *)((*(void *)v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            double v29 = v70;
            if (v27 != v51) {
              continue;
            }
            return v26;
          }
          goto LABEL_68;
        }
        break;
      }
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
  }
LABEL_78:
  swift_bridgeObjectRelease();
  if (!(*v63 >> 62)) {
    return *(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_25E425F80();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_25E3DFF6C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25E425F80();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR___STKSticker_identifier;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2611D6C30](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = sub_25E4254B0();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

unint64_t sub_25E3E0084()
{
  unint64_t result = qword_26B388D60;
  if (!qword_26B388D60)
  {
    sub_25E4254F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388D60);
  }
  return result;
}

uint64_t sub_25E3E00DC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E3E0114(void *a1)
{
  return sub_25E3DE154(a1, *(uint64_t (**)(void *))(v1 + 16), *(void *)(v1 + 24), type metadata accessor for Sticker) & 1;
}

uint64_t sub_25E3E0148(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389560);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E3E01A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25E3E0210(unint64_t a1, void **a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = *a2;
  if (!*a2)
  {
    uint64_t v5 = a1 >> 62;
    if (a1 >> 62)
    {
      unint64_t v21 = a1 >> 62;
      if ((a1 & 0x8000000000000000) != 0) {
        uint64_t v9 = a1;
      }
      else {
        uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_25E425F80();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (v10 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v5 >= 1) {
        uint64_t v18 = 1;
      }
      else {
        uint64_t v18 = v5;
      }
      if (v5 < 0) {
        uint64_t v6 = 1;
      }
      else {
        uint64_t v6 = v18;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (v19 < v6) {
        __break(1u);
      }
      uint64_t v5 = v21;
      if ((v3 & 0xC000000000000001) == 0)
      {
LABEL_14:
        if (v5)
        {
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_25E425F90();
          uint64_t v10 = v12;
          uint64_t v5 = v13;
          unint64_t v2 = v14;
          swift_bridgeObjectRelease_n();
          if (v2) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v9 = v3 & 0xFFFFFFFFFFFFFF8;
          uint64_t v10 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
          unint64_t v2 = (2 * v6) | 1;
          if (v2)
          {
LABEL_20:
            sub_25E426170();
            swift_unknownObjectRetain_n();
            uint64_t v15 = swift_dynamicCastClass();
            if (!v15)
            {
              swift_unknownObjectRelease();
              uint64_t v15 = MEMORY[0x263F8EE78];
            }
            uint64_t v16 = *(void *)(v15 + 16);
            swift_release();
            if (!__OFSUB__(v2 >> 1, v5))
            {
              if (v16 == (v2 >> 1) - v5)
              {
                unint64_t v3 = swift_dynamicCastClass();
                swift_unknownObjectRelease();
                if (v3) {
                  return v3;
                }
                swift_unknownObjectRelease();
                return MEMORY[0x263F8EE78];
              }
              goto LABEL_33;
            }
LABEL_32:
            __break(1u);
LABEL_33:
            swift_unknownObjectRelease();
          }
        }
        unint64_t v3 = sub_25E3D44E8(v9, v10, v5, v2);
        swift_unknownObjectRelease();
        return v3;
      }
    }
    else
    {
      if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
        uint64_t v6 = 1;
      }
      else {
        uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRetain();
      if ((v3 & 0xC000000000000001) == 0) {
        goto LABEL_14;
      }
    }
    if (v6)
    {
      type metadata accessor for Sticker.Representation();
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = v7 + 1;
        sub_25E425ED0();
        uint64_t v7 = v8;
      }
      while (v6 != v8);
    }
    goto LABEL_14;
  }
  if (v4 == (void *)1)
  {
    swift_bridgeObjectRetain();
    return v3;
  }
  if (v4 != (void *)2)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v4;
    v20[2] = sub_25E3E0854;
    v20[3] = MEMORY[0x270FA5388](v11);
    swift_bridgeObjectRetain();
    sub_25E3D44C0(v4);
    unint64_t v3 = sub_25E3DF328(v3, sub_25E3E0874, (uint64_t)v20);
    swift_release();
    return v3;
  }
  return MEMORY[0x263F8EE78];
}

char *sub_25E3E0508(char *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  unint64_t v33 = a2;
  unint64_t v8 = swift_bridgeObjectRetain();
  unint64_t v9 = sub_25E3E0210(v8, &v33);
  swift_bridgeObjectRelease();
  uint64_t v10 = *v7;
  swift_bridgeObjectRetain();
  unsigned __int8 v11 = sub_25E3FF500(v9, v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = a1;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v34 = a1[OBJC_IVAR___STKSticker_type];
    uint64_t v13 = &a1[OBJC_IVAR___STKSticker_identifier];
    uint64_t v14 = sub_25E4254F0();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v6, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
    uint64_t v16 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_name];
    swift_beginAccess();
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v32 = v17;
    uint64_t v19 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_metadata];
    swift_beginAccess();
    uint64_t v20 = *v19;
    unint64_t v21 = (char *)v19[1];
    char v22 = (unint64_t *)&a1[OBJC_IVAR___STKSticker_externalURI];
    swift_beginAccess();
    unint64_t v24 = *v22;
    uint64_t v23 = (void (*)(void, void))v22[1];
    uint64_t v25 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_creationDate];
    swift_beginAccess();
    uint64_t v26 = *v25;
    unint64_t v27 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_lastUsedDate];
    swift_beginAccess();
    uint64_t v28 = *v27;
    double v29 = (double *)&a1[OBJC_IVAR___STKSticker_libraryIndex];
    swift_beginAccess();
    double v30 = *v29;
    objc_allocWithZone((Class)type metadata accessor for Sticker(0));
    swift_bridgeObjectRetain();
    sub_25E3CEA9C(v20, (unint64_t)v21);
    swift_bridgeObjectRetain();
    uint64_t v12 = (char *)sub_25E408210((unsigned __int8 *)&v34, (uint64_t)v6, v9, v32, v18, 0, v20, v21, v30, v24, v23, 0, 0, 0, 0, 0, v26, 0, v28,
                    0,
                    0,
                    0);
    sub_25E3CEB1C(v20, (unint64_t)v21);
  }
  return v12;
}

unint64_t sub_25E3E0854(uint64_t a1)
{
  return (unint64_t)sub_25E3DE010(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_25E3E0874(void *a1)
{
  return sub_25E3DE154(a1, *(uint64_t (**)(void *))(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))type metadata accessor for Sticker.Representation) & 1;
}

uint64_t StickerStore.__allocating_init(persistence:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  StickerStore.init(persistence:)(a1);
  return v2;
}

id sub_25E3E08F0(uint64_t a1)
{
  uint64_t v2 = sub_25E4254F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x263F8EE78];
  sub_25E3EAA7C(0, 0, 0);
  sub_25E3D92B0(a1, (uint64_t)v43);
  uint64_t v6 = v52;
  unint64_t v33 = v53;
  uint64_t v32 = __swift_project_boxed_opaque_existential_1(v51, v52);
  uint64_t v7 = sub_25E3D930C((uint64_t)v43, (uint64_t)v42);
  unint64_t v8 = v44;
  unint64_t v9 = v45;
  char v34 = v43[40];
  double v35 = v44;
  unint64_t v36 = v45;
  uint64_t v37 = v46;
  long long v38 = v47;
  char v39 = v48;
  uint64_t v40 = v49;
  char v41 = v50;
  MEMORY[0x270FA5388](v7);
  unsigned __int8 v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void *, uint64_t))(v12 + 16))(v11, v32, v6);
  id v13 = v8;
  sub_25E3D44C0(v9);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v42, (uint64_t)v11, v6, (uint64_t)v54);
  id result = (id)sub_25E3D789C((uint64_t)v43);
  uint64_t v32 = (void *)(v3 + 32);
  unint64_t v33 = &v55;
  while (1)
  {
    unint64_t v15 = v55;
    unint64_t v16 = v55 >> 62;
    if (v55 >> 62) {
      break;
    }
    if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    id result = (id)sub_25E4103A0();
    unint64_t v22 = v55;
    unint64_t v23 = v55 >> 62;
    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v24)
      {
LABEL_35:
        sub_25E41AC8C(0);
LABEL_36:
        sub_25E3D9370((uint64_t)v54);
        return (id)v56;
      }
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_25E425F80();
      id result = (id)swift_bridgeObjectRelease();
      if (!v25) {
        goto LABEL_44;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_25E425F80();
      id result = (id)swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_42;
      }
    }
    else if (!*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_35;
    }
    if ((v22 & 0xC000000000000001) != 0)
    {
      id result = (id)MEMORY[0x2611D6C30](0, v22);
      uint64_t v17 = result;
      if (!v23) {
        goto LABEL_17;
      }
    }
    else
    {
      if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      id result = *(id *)(v22 + 32);
      uint64_t v17 = result;
      if (!v23)
      {
LABEL_17:
        if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_25E425F80();
    id result = (id)swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_40;
    }
LABEL_29:
    sub_25E3EBDA8(0, 1);
    sub_25E41AC8C(v17);
    if (!v17) {
      goto LABEL_36;
    }
LABEL_30:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v17 + OBJC_IVAR___STKSticker_identifier, v2);

    uint64_t v28 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25E3EAA7C(0, *(void *)(v28 + 16) + 1, 1);
      uint64_t v28 = v56;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_25E3EAA7C(v29 > 1, v30 + 1, 1);
      uint64_t v28 = v56;
    }
    *(void *)(v28 + 16) = v30 + 1;
    id result = (id)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(v28+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v30, v5, v2);
    uint64_t v56 = v28;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_25E425F80();
  id result = (id)swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_25E425F80();
  id result = (id)swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_41;
  }
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id result = (id)MEMORY[0x2611D6C30](0, v15);
    uint64_t v17 = result;
    if (v16) {
      goto LABEL_20;
    }
LABEL_7:
    uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
    if (!v18) {
      goto LABEL_39;
    }
    sub_25E3EBDA8(0, 1);
    goto LABEL_30;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id result = *(id *)(v15 + 32);
    uint64_t v17 = result;
    if (!v16) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25E425F80();
    id result = (id)swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_25E3E0E3C()
{
  uint64_t result = sub_25E4258C0();
  qword_26B3893C8 = result;
  return result;
}

id static StickerStore.stickersDidChange.getter()
{
  if (qword_26B3893D8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B3893C8;
  return v0;
}

uint64_t sub_25E3E0ED0()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v2 = v0;
    if (qword_26B3893D8 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_26B3893C8;
    uint64_t v4 = self;
    id v5 = v3;
    swift_retain();
    id v6 = objc_msgSend(v4, sel_currentEnvironment);
    id v7 = objc_msgSend(v6, sel_notificationCenter);

    _s33CoalescingNotificationBroadcasterCMa();
    swift_allocObject();
    uint64_t v1 = sub_25E40CCC0(v5, v2, v7);
    *(void *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t static StickerStore.createAPIStore()()
{
  uint64_t v0 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_25E425390();
  uint64_t v4 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 2, 3, v3);
  type metadata accessor for StickerStore();
  uint64_t v5 = swift_allocObject();
  StickerStore.init(persistence:)((uint64_t)v2);
  v4(v2, 2, 3, v3);
  sub_25E3E113C((uint64_t)v2, 1, (uint64_t *)v8);
  sub_25E3EC278((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StickerStore.PersistenceType);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v5 + 16);
  sub_25E3E1568(v8, v5 + 16);
  swift_endAccess();
  return v5;
}

uint64_t sub_25E3E113C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3ED944(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StickerStore.PersistenceType);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 3, v6))
  {
    case 1u:
      uint64_t v23 = type metadata accessor for XPCDataMapper();
      uint64_t result = swift_allocObject();
      *(void *)(result + 40) = &type metadata for XPCProxyProvider;
      *(void *)(result + 48) = &off_270B22820;
      unint64_t v22 = &protocol witness table for XPCDataMapper;
      a3[3] = v23;
      goto LABEL_7;
    case 2u:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 2, v6);
      uint64_t v19 = type metadata accessor for CoreDataDataMapper(0);
      swift_allocObject();
      int v20 = a2 & 1;
      uint64_t v21 = (uint64_t)v12;
      goto LABEL_5;
    case 3u:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 2, 2, v6);
      uint64_t v19 = type metadata accessor for CoreDataDataMapper(0);
      swift_allocObject();
      uint64_t v21 = (uint64_t)v12;
      int v20 = 0;
LABEL_5:
      uint64_t result = sub_25E3F22D4(v21, v20);
      unint64_t v22 = &off_270B22498;
      a3[3] = v19;
LABEL_7:
      a3[4] = (uint64_t)v22;
      *a3 = result;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 2, v6);
      uint64_t v16 = type metadata accessor for CoreDataDataMapper(0);
      swift_allocObject();
      uint64_t v17 = sub_25E3F22D4((uint64_t)v12, 0);
      a3[3] = v16;
      a3[4] = (uint64_t)&off_270B22498;
      *a3 = v17;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
  }
  return result;
}

uint64_t StickerStore.init(persistence:)(uint64_t a1)
{
  *(void *)(v1 + 56) = 0;
  sub_25E3E113C(a1, 0, (uint64_t *)v4);
  sub_25E3EC278(a1, (uint64_t (*)(void))type metadata accessor for StickerStore.PersistenceType);
  sub_25E3E1568(v4, v1 + 16);
  return v1;
}

uint64_t type metadata accessor for StickerStore.PersistenceType()
{
  uint64_t result = qword_26B389328;
  if (!qword_26B389328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for StickerStore()
{
  return self;
}

uint64_t sub_25E3E1568(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t StickerStore.__allocating_init(dataMappper:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 56) = 0;
  sub_25E3E1568(a1, v2 + 16);
  return v2;
}

uint64_t StickerStore.init(dataMappper:)(long long *a1)
{
  *(void *)(v1 + 56) = 0;
  sub_25E3E1568(a1, v1 + 16);
  return v1;
}

uint64_t sub_25E3E15EC(unsigned __int8 *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v40 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (double *)((char *)&v35 - v6);
  int v8 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  uint64_t v46 = *((void *)a1 + 1);
  uint64_t v47 = v9;
  uint64_t v11 = *((void *)a1 + 4);
  uint64_t v48 = *((void *)a1 + 5);
  int v44 = a1[48];
  int v45 = v8;
  uint64_t v36 = *((void *)a1 + 7);
  uint64_t v12 = v36;
  unsigned __int8 v13 = a1[64];
  uint64_t v41 = v5;
  uint64_t v14 = (char *)&v35 + *(int *)(v5 + 48) - v6;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v15 = *(int *)(v37 + 48);
  v52[0] = v8;
  uint64_t v17 = v46;
  uint64_t v16 = v47;
  uint64_t v53 = v46;
  uint64_t v54 = v47;
  uint64_t v55 = v10;
  uint64_t v56 = v11;
  uint64_t v57 = v48;
  char v58 = v44;
  uint64_t v59 = v12;
  unsigned __int8 v60 = v13;
  uint64_t v18 = sub_25E417B68(v14, v52);
  uint64_t v43 = v7;
  *(void *)uint64_t v7 = v19;
  id v42 = v14;
  uint64_t v39 = v15;
  *(void *)&v14[v15] = v18;
  uint64_t v20 = v38 + 16;
  swift_beginAccess();
  sub_25E3D930C(v20, (uint64_t)v49);
  uint64_t v21 = v50;
  uint64_t v22 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  v52[0] = v45;
  uint64_t v53 = v17;
  uint64_t v54 = v16;
  uint64_t v38 = v10;
  uint64_t v55 = v10;
  uint64_t v56 = v11;
  uint64_t v23 = v11;
  uint64_t v57 = v48;
  LOBYTE(v15) = v44;
  char v58 = v44;
  uint64_t v24 = v36;
  uint64_t v59 = v36;
  unsigned __int8 v60 = v13;
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 8))(v52, v21, v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  v52[0] = v45;
  uint64_t v53 = v46;
  uint64_t v54 = v47;
  uint64_t v55 = v38;
  uint64_t v56 = v23;
  uint64_t v57 = v48;
  char v58 = v15;
  uint64_t v59 = v24;
  unsigned __int8 v60 = v13;
  uint64_t v26 = (uint64_t)v40 + *(int *)(v41 + 48);
  uint64_t v27 = *(int *)(v37 + 48);
  uint64_t v28 = (uint64_t)v43;
  double v29 = *v43;
  *uint64_t v40 = *(void *)v43;
  uint64_t v30 = sub_25E4255F0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v26, v42, v30);
  uint64_t v33 = *(void *)&v32[v39];
  *(void *)(v26 + v27) = v33;
  swift_retain();
  sub_25E41B7B0((uint64_t)v52, v26, v33, v29);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v26, v30);
  sub_25E3CE8D4(v28, &qword_26B3894E0);
  return v25;
}

uint64_t sub_25E3E1950@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  v57[0] = a2;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v3 = MEMORY[0x270FA5388](v75);
  unint64_t v62 = (void *)((char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (double *)((char *)v57 - v5);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v65 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v57 - v11;
  int v13 = *a1;
  uint64_t v14 = (void *)*((void *)a1 + 1);
  uint64_t v15 = *((void *)a1 + 3);
  uint64_t v68 = (void *)*((void *)a1 + 2);
  char v69 = v14;
  uint64_t v16 = *((void *)a1 + 5);
  uint64_t v66 = *((void *)a1 + 4);
  int v67 = a1[48];
  uint64_t v74 = *((void *)a1 + 7);
  int v17 = a1[64];
  int v72 = v13;
  int v73 = v17;
  uint64_t v18 = *(int *)(v10 + 48);
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for StickerSignposter();
  uint64_t v61 = __swift_project_value_buffer(v19, (uint64_t)qword_26B38BC78);
  uint64_t v20 = sub_25E417874((uint64_t)v12, "fetch stickers", 14, 2);
  uint64_t v63 = v18;
  id v64 = v12;
  *(void *)&v12[v18] = v20;
  uint64_t v21 = (char *)v6 + *(int *)(v75 + 48);
  uint64_t v71 = v7;
  uint64_t v22 = *(int *)(v7 + 48);
  uint64_t v76 = v6;
  char v23 = v72;
  LOBYTE(v80) = v72;
  uint64_t v25 = v68;
  uint64_t v24 = v69;
  *((void *)&v80 + 1) = v69;
  *(void *)&long long v81 = v68;
  uint64_t v60 = v15;
  *((void *)&v81 + 1) = v15;
  uint64_t v26 = v66;
  *(void *)&long long v82 = v66;
  *((void *)&v82 + 1) = v16;
  char v27 = v67;
  LOBYTE(v83) = v67;
  *((void *)&v83 + 1) = v74;
  LOBYTE(v84) = v73;
  uint64_t result = sub_25E417B7C(v21, (char *)&v80);
  *(void *)uint64_t v76 = v29;
  uint64_t v58 = v22;
  uint64_t v59 = v21;
  *(void *)&v21[v22] = result;
  uint64_t v70 = v16;
  if (v27)
  {
    char v30 = v23;
    uint64_t v31 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_8:
    uint64_t v32 = v57[1] + 16;
    swift_beginAccess();
    sub_25E3D930C(v32, (uint64_t)v89);
    sub_25E3D930C((uint64_t)v89, (uint64_t)&v80);
    BYTE8(v82) = v30;
    uint64_t v33 = v24;
    *(void *)&long long v83 = v24;
    *((void *)&v83 + 1) = v25;
    uint64_t v34 = v60;
    *(void *)&long long v84 = v60;
    *((void *)&v84 + 1) = v26;
    *(void *)&long long v85 = v70;
    BYTE8(v85) = v27;
    uint64_t v35 = v74;
    *(void *)&long long v86 = v74;
    char v36 = v73;
    BYTE8(v86) = v73;
    uint64_t v78 = &type metadata for RangeGenerator;
    unint64_t v79 = sub_25E3EC0B4();
    uint64_t v37 = swift_allocObject();
    *(void *)&long long v77 = v37;
    *(void *)(v37 + 16) = v26;
    *(void *)(v37 + 24) = v31;
    *(void *)(v37 + 32) = v35;
    *(unsigned char *)(v37 + 40) = v36;
    id v38 = v33;
    sub_25E3D44C0(v25);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v89);
    sub_25E3E1568(&v77, (uint64_t)v87);
    long long v39 = v87[0];
    uint64_t v40 = v57[0];
    *(_OWORD *)(v57[0] + 96) = v86;
    *(_OWORD *)(v40 + 112) = v39;
    *(_OWORD *)(v40 + 128) = v87[1];
    *(void *)(v40 + 144) = v88;
    long long v41 = v83;
    *(_OWORD *)(v40 + 32) = v82;
    *(_OWORD *)(v40 + 48) = v41;
    long long v42 = v85;
    *(_OWORD *)(v40 + 64) = v84;
    *(_OWORD *)(v40 + 80) = v42;
    long long v43 = v81;
    *(_OWORD *)uint64_t v40 = v80;
    *(_OWORD *)(v40 + 16) = v43;
    LOBYTE(v80) = v72;
    *((void *)&v80 + 1) = v33;
    *(void *)&long long v81 = v25;
    *((void *)&v81 + 1) = v34;
    *(void *)&long long v82 = v26;
    *((void *)&v82 + 1) = v70;
    LOBYTE(v83) = v27;
    *((void *)&v83 + 1) = v35;
    LOBYTE(v84) = v36;
    uint64_t v44 = (uint64_t)v76;
    uint64_t v45 = (uint64_t)v62 + *(int *)(v75 + 48);
    uint64_t v46 = *(int *)(v71 + 48);
    double v47 = *v76;
    void *v62 = *(void *)v76;
    uint64_t v48 = sub_25E4255F0();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 16);
    uint64_t v51 = v59;
    v50(v45, v59, v48);
    uint64_t v52 = *(void *)&v51[v58];
    *(void *)(v45 + v46) = v52;
    swift_retain();
    sub_25E41B7BC((uint64_t)&v80, v45, v52, v47);
    swift_release();
    uint64_t v75 = *(void *)(v49 + 8);
    ((void (*)(uint64_t, uint64_t))v75)(v45, v48);
    sub_25E3CE8D4(v44, &qword_26B3894E0);
    uint64_t v53 = *(int *)(v71 + 48);
    uint64_t v55 = (uint64_t)v64;
    uint64_t v54 = (uint64_t)v65;
    v50((uint64_t)v65, v64, v48);
    uint64_t v56 = *(void *)(v55 + v63);
    *(void *)(v54 + v53) = v56;
    swift_retain();
    sub_25E41A428("fetch stickers", 14, 2, v54, v56);
    swift_release();
    ((void (*)(uint64_t, uint64_t))v75)(v54, v48);
    return sub_25E3CE8D4(v55, (uint64_t *)&unk_26B389380);
  }
  uint64_t v31 = v16 + v26;
  if (!__OFADD__(v16, v26))
  {
    if (v31 >= v26)
    {
      char v30 = v23;
      goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E3E1E5C(char *a1)
{
  char v18 = *a1;
  v5[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v18, 0, v5, 0, 0, 0, 1, 8, (uint64_t)v10, 0);
  uint64_t v2 = v11;
  uint64_t v1 = v12;
  LOBYTE(v5[0]) = v10[0];
  v5[1] = v11;
  v5[2] = v12;
  v5[3] = v13;
  long long v6 = v14;
  char v7 = v15;
  uint64_t v8 = v16;
  char v9 = v17;
  uint64_t v3 = sub_25E3E15EC((unsigned __int8 *)v5);

  sub_25E3D446C(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_25E3E1F34(uint64_t a1, char *a2, uint64_t *a3)
{
  char v6 = *a2;
  uint64_t v7 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389030);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_25E427610;
  *(void *)(v8 + 32) = a1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED978);
  uint64_t v17 = sub_25E3D926C(&qword_26A6ED980, &qword_26A6ED978);
  v15[0] = v8;
  char v14 = v6;
  uint64_t v13 = v7;
  sub_25E3E2474(v15, &v14, &v13, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  if (!v4)
  {
    uint64_t v9 = v19;
    uint64_t v10 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v15[2] = v9;
    uint64_t v16 = v10;
    sub_25E425A50();
    uint64_t v3 = v13;
    if (!v13)
    {
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v12 = 1;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  return v3;
}

id sub_25E3E20B4()
{
  sub_25E3D92B0(v0, (uint64_t)v31);
  uint64_t v1 = v40;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v39, v40);
  uint64_t v3 = sub_25E3D930C((uint64_t)v31, (uint64_t)v30);
  uint64_t v5 = v32;
  uint64_t v4 = v33;
  v22[0] = v31[40];
  char v23 = v32;
  uint64_t v24 = v33;
  uint64_t v25 = v34;
  long long v26 = v35;
  char v27 = v36;
  uint64_t v28 = v37;
  char v29 = v38;
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void *, uint64_t))(v8 + 16))(v7, v2, v1);
  id v9 = v5;
  sub_25E3D44C0(v4);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v30, (uint64_t)v7, v1, (uint64_t)v41);
  sub_25E3D789C((uint64_t)v31);
  unint64_t v10 = v42;
  unint64_t v11 = v42 >> 62;
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_25E425F80();
      id result = (id)swift_bridgeObjectRelease();
      if (!v14)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_3:
        if ((v10 & 0xC000000000000001) != 0)
        {
          id v12 = (id)MEMORY[0x2611D6C30](0, v10);
          if (!v11)
          {
LABEL_6:
            if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_7:
              sub_25E3EBDA8(0, 1);
LABEL_29:
              sub_25E3D9370((uint64_t)v41);
              return v12;
            }
            goto LABEL_21;
          }
        }
        else
        {
          if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
          id v12 = *(id *)(v10 + 32);
          if (!v11) {
            goto LABEL_6;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_25E425F80();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_7;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      __break(1u);
    }
  }
  else if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  id result = (id)sub_25E4103A0();
  unint64_t v10 = v42;
  unint64_t v11 = v42 >> 62;
  if (!(v42 >> 62))
  {
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
LABEL_27:
    id v12 = 0;
    goto LABEL_28;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25E425F80();
  id result = (id)swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_25E425F80();
    id result = (id)swift_bridgeObjectRelease();
    if (!v20)
    {
      __break(1u);
      goto LABEL_27;
    }
LABEL_14:
    if ((v10 & 0xC000000000000001) != 0)
    {
      id result = (id)MEMORY[0x2611D6C30](0, v10);
      id v12 = result;
      if (!v11)
      {
LABEL_17:
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_18:
          sub_25E3EBDA8(0, 1);
LABEL_28:
          sub_25E41AC8C(v12);
          goto LABEL_29;
        }
        goto LABEL_32;
      }
    }
    else
    {
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      id result = *(id *)(v10 + 32);
      id v12 = result;
      if (!v11) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25E425F80();
    id result = (id)swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_18;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25E3E2474@<X0>(void *a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v50 = a4;
  uint64_t v9 = sub_25E425530();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  uint64_t v52 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_25E425550();
  uint64_t v74 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v15 = *a2;
  *(void *)&long long v49 = *a3;
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x270FA5388](v16);
  (*(void (**)(unsigned char *))(v18 + 16))(&v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_25E3EC1CC(&qword_26A6ED988, MEMORY[0x263F07978]);
  uint64_t v55 = v12;
  sub_25E425DE0();
  v67[0] = v15;
  uint64_t v68 = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v67, 0, &v68, 0, 0, 0, 1, 8, (uint64_t)v59, 0);
  uint64_t v20 = *(void **)&v59[8];
  uint64_t v19 = *(void **)&v59[16];
  LOBYTE(v68) = v59[0];
  long long v69 = *(_OWORD *)&v59[8];
  *(void *)uint64_t v70 = *(void *)&v59[24];
  *(_OWORD *)&v70[8] = v60;
  char v71 = v61;
  uint64_t v72 = *((void *)&v61 + 1);
  unsigned __int8 v73 = v62;
  uint64_t v21 = v54;
  uint64_t v22 = sub_25E3E15EC((unsigned __int8 *)&v68);
  if (v21)
  {

    sub_25E3D446C(v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v22;
    uint64_t v48 = 0;
    *(void *)&long long v54 = v5;
    uint64_t v24 = v53;

    sub_25E3D446C(v19);
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_25E425520();
    if ((v26 & 1) == 0 && (v25 & 0x8000000000000000) == 0 && v25 < v23)
    {
      uint64_t v27 = sub_25E425510();
      if ((v28 & 1) == 0 && (v27 & 0x8000000000000000) == 0 && v27 < v23)
      {
        uint64_t v29 = v54 + 16;
        swift_beginAccess();
        sub_25E3D930C(v29, (uint64_t)v67);
        LOBYTE(v56) = v15;
        *(void *)uint64_t v59 = v49;
        sub_25E3D44C0((id)v49);
        Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)&v56, 0, (void **)v59, 0, 0, 0, 1, 8, (uint64_t)&v68, 0);
        char v30 = (char)v68;
        long long v54 = v69;
        long long v49 = *(_OWORD *)v70;
        uint64_t v31 = *(void *)&v70[16];
        char v32 = v71;
        double v47 = v14;
        uint64_t v33 = v72;
        int v46 = v73;
        uint64_t v34 = v24;
        sub_25E425540();
        long long v35 = v50;
        v50[3] = (uint64_t)&type metadata for StickerSequence;
        v35[4] = sub_25E3EC118();
        uint64_t v36 = swift_allocObject();
        uint64_t *v35 = v36;
        sub_25E3D930C((uint64_t)v67, (uint64_t)v59);
        BYTE8(v60) = v30;
        long long v61 = v54;
        long long v62 = v49;
        *(void *)&long long v63 = v31;
        BYTE8(v63) = v32;
        *(void *)&long long v64 = v33;
        BYTE8(v64) = v46;
        uint64_t v37 = v51;
        uint64_t v57 = v51;
        uint64_t v58 = sub_25E3EC1CC(&qword_26A6ED998, MEMORY[0x263F07960]);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v56);
        (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v52 + 32))(boxed_opaque_existential_1, v34, v37);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
        sub_25E3E1568(&v56, (uint64_t)v65);
        long long v39 = v65[0];
        *(_OWORD *)(v36 + 112) = v64;
        *(_OWORD *)(v36 + 128) = v39;
        *(_OWORD *)(v36 + 144) = v65[1];
        *(void *)(v36 + 160) = v66;
        long long v40 = v61;
        *(_OWORD *)(v36 + 48) = v60;
        *(_OWORD *)(v36 + 64) = v40;
        long long v41 = v63;
        *(_OWORD *)(v36 + 80) = v62;
        *(_OWORD *)(v36 + 96) = v41;
        long long v42 = *(_OWORD *)&v59[16];
        *(_OWORD *)(v36 + 16) = *(_OWORD *)v59;
        *(_OWORD *)(v36 + 32) = v42;
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v74 + 8))(v47, v55);
      }
    }
    sub_25E3CC3F0();
    swift_allocError();
    unsigned char *v44 = 1;
    swift_willThrow();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v74 + 8))(v14, v55);
}

id sub_25E3E29F4(uint64_t a1, void **a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = *a2;
  v13[0] = 2;
  v21[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v13, 0, v21, 0, 0, 0, 1, 8, (uint64_t)v22, 0);
  uint64_t v6 = v24;
  sub_25E3D44C0(v5);
  sub_25E3D446C(v6);
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_25E4277F0;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 64) = sub_25E3D4418();
  *(void *)(v7 + 32) = 0x696669746E656469;
  *(void *)(v7 + 40) = 0xEA00000000007265;
  uint64_t v8 = sub_25E4254A0();
  *(void *)(v7 + 96) = sub_25E3CE930(0, &qword_26B3894F8);
  *(void *)(v7 + 104) = sub_25E3D9AE8();
  *(void *)(v7 + 72) = v8;
  uint64_t v9 = (void *)sub_25E425BC0();

  v13[0] = v22[0];
  uint64_t v14 = v9;
  char v15 = v5;
  uint64_t v16 = v25;
  long long v17 = v26;
  char v18 = v27;
  uint64_t v19 = v28;
  char v20 = v29;
  id v10 = v9;
  sub_25E3D44C0(v5);
  swift_bridgeObjectRetain();
  id v11 = v4;
  sub_25E3E1950((unsigned __int8 *)v13, (uint64_t)v21);

  sub_25E3D446C(v5);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v11 = sub_25E3E20B4();
    sub_25E3D789C((uint64_t)v21);
  }
  sub_25E3D446C(v5);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_25E3E2C28@<X0>(void *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  long long v40 = a3;
  uint64_t v5 = *a2;
  v22[0] = 2;
  *(void *)&v30[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)v22, 0, (void **)v30, 0, 0, 0, 1, 8, (uint64_t)v32, v21);
  uint64_t v6 = v34;
  sub_25E3D44C0(v5);
  sub_25E3D446C(v6);
  uint64_t v34 = v5;
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_25E4277F0;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 64) = sub_25E3D4418();
  *(void *)(v7 + 32) = 0x696669746E656469;
  *(void *)(v7 + 40) = 0xEA00000000007265;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(unsigned __int8 *))(v10 + 16))(&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_25E4254F0();
  uint64_t v11 = sub_25E425B20();
  *(void *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8A0);
  *(void *)(v7 + 104) = sub_25E3D926C((unint64_t *)&qword_26A6ED8A8, &qword_26A6ED8A0);
  *(void *)(v7 + 72) = v11;
  uint64_t v12 = (void *)sub_25E425BC0();

  v22[0] = v32[0];
  id v23 = v12;
  uint64_t v24 = v5;
  uint64_t v25 = v35;
  long long v26 = v36;
  char v27 = v37;
  uint64_t v28 = v38;
  char v29 = v39;
  id v13 = v12;
  sub_25E3D44C0(v5);
  swift_bridgeObjectRetain();
  sub_25E3E1950(v22, (uint64_t)v30);

  sub_25E3D446C(v5);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v40;
    v40[3] = (uint64_t)&type metadata for StickerSequence;
    void v14[4] = sub_25E3EC118();
    uint64_t v15 = swift_allocObject();
    *uint64_t v14 = v15;
    long long v16 = v30[7];
    *(_OWORD *)(v15 + 112) = v30[6];
    *(_OWORD *)(v15 + 128) = v16;
    *(_OWORD *)(v15 + 144) = v30[8];
    *(void *)(v15 + 160) = v31;
    long long v17 = v30[3];
    *(_OWORD *)(v15 + 48) = v30[2];
    *(_OWORD *)(v15 + 64) = v17;
    long long v18 = v30[5];
    *(_OWORD *)(v15 + 80) = v30[4];
    *(_OWORD *)(v15 + 96) = v18;
    long long v19 = v30[1];
    *(_OWORD *)(v15 + 16) = v30[0];
    *(_OWORD *)(v15 + 32) = v19;
  }
  sub_25E3D446C(v5);
  return swift_bridgeObjectRelease();
}

void *sub_25E3E2F7C(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6 = sub_25E4254F0();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  long long v40 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Sticker.URIType(0);
  uint64_t v8 = MEMORY[0x270FA5388](v39);
  uint64_t v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v41 = (char *)&v36 - v10;
  uint64_t v11 = *a3;
  LOBYTE(v44[0]) = 2;
  v49[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)v44, 0, v49, 0, 0, 0, 1, 8, (uint64_t)v50, 0);
  uint64_t v12 = v52;
  sub_25E3D44C0(v11);
  sub_25E3D446C(v12);
  uint64_t v52 = v11;
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_25E4277F0;
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(v13 + 56) = MEMORY[0x263F8D310];
  unint64_t v15 = sub_25E3D4418();
  *(void *)(v13 + 32) = 0x6C616E7265747865;
  *(void *)(v13 + 40) = 0xEB00000000495255;
  *(void *)(v13 + 96) = v14;
  *(void *)(v13 + 104) = v15;
  *(void *)(v13 + 64) = v15;
  *(void *)(v13 + 72) = a1;
  *(void *)(v13 + 80) = a2;
  swift_bridgeObjectRetain();
  long long v16 = (void *)sub_25E425BC0();

  id v51 = v16;
  LOBYTE(v44[0]) = v50[0];
  v44[1] = v16;
  v44[2] = v11;
  v44[3] = v53;
  long long v45 = v54;
  char v46 = v55;
  uint64_t v47 = v56;
  char v48 = v57;
  id v17 = v16;
  sub_25E3D44C0(v11);
  swift_bridgeObjectRetain();
  long long v18 = v58;
  uint64_t v19 = v42;
  sub_25E3E1950((unsigned __int8 *)v44, (uint64_t)v49);
  if (v19)
  {

    sub_25E3D446C(v11);
    swift_bridgeObjectRelease();
    sub_25E3D446C(v11);
LABEL_3:
    swift_bridgeObjectRelease();
    return v18;
  }
  uint64_t v42 = 0;
  char v20 = v41;

  sub_25E3D446C(v11);
  swift_bridgeObjectRelease();
  id v21 = sub_25E3E20B4();
  if (!v21)
  {
    type metadata accessor for Sticker(0);
    uint64_t v23 = (uint64_t)v20;
    sub_25E404734(v20);
    uint64_t v24 = v38;
    sub_25E3ED944((uint64_t)v20, v38, type metadata accessor for Sticker.URIType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v26 = (uint64_t)v40;
    uint64_t v27 = v42;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v31 = *(void *)v24;
        char v43 = *(unsigned char *)(v24 + 8);
        v44[0] = 0;
        uint64_t v32 = sub_25E3E1F34(v31, &v43, (uint64_t *)v44);
        if (v27) {
          goto LABEL_17;
        }
        long long v18 = (void *)v32;
        goto LABEL_20;
      case 2:
        goto LABEL_14;
      case 3:
        goto LABEL_15;
      case 4:
        swift_bridgeObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_15:
        swift_bridgeObjectRelease();
        sub_25E3CC3F0();
        swift_allocError();
        *id v33 = 2;
        swift_willThrow();
        sub_25E3EC278((uint64_t)v20, type metadata accessor for Sticker.URIType);
        sub_25E3D789C((uint64_t)v49);
        id v34 = v51;
        long long v18 = v52;
        goto LABEL_18;
      case 5:
        sub_25E3CC3F0();
        swift_allocError();
        unsigned char *v35 = 3;
        swift_willThrow();
        goto LABEL_17;
      default:
        uint64_t v29 = v36;
        uint64_t v28 = v37;
        (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v40, v24, v37);
        v44[0] = 0;
        id v30 = sub_25E3E29F4(v26, v44);
        if (!v27)
        {
          long long v18 = v30;
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
LABEL_20:
          sub_25E3EC278(v23, type metadata accessor for Sticker.URIType);
          sub_25E3D789C((uint64_t)v49);
          id v17 = v51;
          uint64_t v11 = v52;
          goto LABEL_6;
        }
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
LABEL_17:
        sub_25E3EC278(v23, type metadata accessor for Sticker.URIType);
        sub_25E3D789C((uint64_t)v49);
        id v34 = v51;
        long long v18 = v52;
LABEL_18:

        sub_25E3D446C(v18);
        break;
    }
    goto LABEL_3;
  }
  long long v18 = v21;
  sub_25E3D789C((uint64_t)v49);
LABEL_6:

  sub_25E3D446C(v11);
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_25E3E3540(uint64_t a1, uint64_t a2, void **a3)
{
  unint64_t v5 = v3;
  uint64_t v8 = *a3;
  v21[0] = 2;
  v29[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v21, 0, v29, 0, 0, 0, 1, 8, (uint64_t)v30, 0);
  uint64_t v9 = v32;
  sub_25E3D44C0(v8);
  sub_25E3D446C(v9);
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25E4277F0;
  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  unint64_t v12 = sub_25E3D4418();
  *(void *)(v10 + 32) = 0x6C616E7265747865;
  *(void *)(v10 + 40) = 0xEB00000000495255;
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = v12;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 72) = a1;
  *(void *)(v10 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_25E425BC0();

  v21[0] = v30[0];
  uint64_t v22 = v13;
  uint64_t v23 = v8;
  uint64_t v24 = v33;
  long long v25 = v34;
  char v26 = v35;
  uint64_t v27 = v36;
  char v28 = v37;
  id v14 = v13;
  sub_25E3D44C0(v8);
  swift_bridgeObjectRetain();
  unint64_t v15 = v5;
  sub_25E3E1950((unsigned __int8 *)v21, (uint64_t)v29);

  sub_25E3D446C(v8);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_25E3EB428((uint64_t)v29);
    unint64_t v15 = v16;
    sub_25E3D789C((uint64_t)v29);
    if ((v15 & 0x8000000000000000) != 0 || (v15 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v18 = sub_25E425F80();
      swift_release();
      if (v18) {
        goto LABEL_6;
      }
    }
    else if (*(void *)(v15 + 16))
    {
LABEL_6:

      sub_25E3D446C(v8);
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_release();
    v29[0] = 0;
    uint64_t v19 = sub_25E3E2F7C(a1, a2, v29);
    if (v19)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_25E4280D0;
      *(void *)(v20 + 32) = v19;
      v29[0] = (void *)v20;
      sub_25E425AE0();
      unint64_t v15 = (unint64_t)v29[0];
    }
    else
    {
      unint64_t v15 = MEMORY[0x263F8EE78];
    }
    goto LABEL_6;
  }

  swift_bridgeObjectRelease();
  sub_25E3D446C(v8);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_25E3E3810@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = *a2;
  char v16 = 2;
  v11[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v16, 0, v11, 0, 0, 0, 1, 8, (uint64_t)v17, 0);
  uint64_t v6 = v19;
  sub_25E3D44C0(v5);
  sub_25E3D446C(v6);
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_25E4277F0;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 64) = sub_25E3D4418();
  *(void *)(v7 + 32) = 0x6C616E7265747865;
  *(void *)(v7 + 40) = 0xEB00000000495255;
  *(void *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
  *(void *)(v7 + 104) = sub_25E3D926C(&qword_26A6ED8B8, &qword_26A6ED8B0);
  *(void *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_25E425BC0();

  LOBYTE(v11[0]) = v17[0];
  v11[1] = v8;
  v11[2] = v5;
  void v11[3] = v20;
  long long v12 = v21;
  char v13 = v22;
  uint64_t v14 = v23;
  char v15 = v24;
  id v9 = v8;
  sub_25E3D44C0(v5);
  swift_bridgeObjectRetain();
  sub_25E3E1950((unsigned __int8 *)v11, a3);

  sub_25E3D446C(v5);
  swift_bridgeObjectRelease();
  sub_25E3D446C(v5);
  return swift_bridgeObjectRelease();
}

unsigned char *sub_25E3E3A28(unsigned char *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v4 - 8);
  if ((a1[OBJC_IVAR___STKSticker_type] & 1) == 0)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *long long v34 = 5;
    swift_willThrow();
    return a1;
  }
  char v48 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v58 = v2;
  uint64_t v6 = (unint64_t *)&a1[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  unint64_t v56 = *v6;
  uint64_t v7 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_name];
  swift_beginAccess();
  uint64_t v8 = v7[1];
  uint64_t v57 = *v7;
  uint64_t v55 = v8;
  id v9 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_metadata];
  swift_beginAccess();
  unint64_t v11 = v9[1];
  uint64_t v54 = *v9;
  uint64_t v10 = v54;
  uint64_t v63 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25E3CEA9C(v10, v11);
  sub_25E425490();
  unint64_t v61 = 0xD00000000000001BLL;
  unint64_t v62 = 0x800000025E42A830;
  sub_25E425970();
  swift_bridgeObjectRelease();
  unint64_t v52 = v62;
  unint64_t v53 = v61;
  long long v12 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_accessibilityName];
  swift_beginAccess();
  uint64_t v13 = v12[1];
  uint64_t v49 = *v12;
  uint64_t v14 = (void **)&a1[OBJC_IVAR___STKSticker_attributionInfo];
  swift_beginAccess();
  char v15 = *v14;
  char v16 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  uint64_t v17 = v16[1];
  uint64_t v50 = *v16;
  id v18 = (uint64_t *)&a1[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v51 = v19;
  v60[0] = 0;
  id v21 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = v15;
  swift_bridgeObjectRetain();
  uint64_t v47 = v13;
  uint64_t v23 = v54;
  char v24 = (char *)sub_25E408C3C(v60, v56, v57, v55, v54, v11, v53, v52, v49, v47, v15);

  sub_25E3CEB1C(v23, v11);
  long long v25 = &v24[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  *(void *)long long v25 = v50;
  *((void *)v25 + 1) = v17;
  char v26 = v24;
  swift_bridgeObjectRelease();
  uint64_t v27 = &v26[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  *(void *)uint64_t v27 = v51;
  *((void *)v27 + 1) = v20;

  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E4280E0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = v26;
  v59[0] = inited;
  sub_25E425AE0();
  unint64_t v29 = v59[0];
  id v30 = v26;
  id v31 = a1;
  id v32 = v58;
  uint64_t v33 = sub_25E3E44F4(v29);
  swift_bridgeObjectRelease();
  if (v32)
  {

    return a1;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
    a1 = (unsigned char *)MEMORY[0x2611D6C30](0, v33);
    char v37 = (char *)MEMORY[0x2611D6C30](1, v33);
LABEL_9:
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    id v58 = v38;
    uint64_t v39 = &v38[OBJC_IVAR___STKSticker_identifier];
    uint64_t v40 = sub_25E4254F0();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v48, v39, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
    uint64_t v43 = (uint64_t)&a1[OBJC_IVAR___STKSticker__companionRecentUUID];
    swift_beginAccess();
    sub_25E3EC670(v42, v43);
    swift_endAccess();
    uint64_t v44 = sub_25E3E0ED0();
    LOBYTE(v59[0]) = 0;
    long long v45 = *(void **)(v44 + 64);
    objc_msgSend(v45, sel_lock);
    sub_25E40CDD8(v44, v59);
    objc_msgSend(v45, sel_unlock);
    if (v59[0])
    {
      objc_msgSend(*(id *)(v44 + 32), sel_postNotificationName_object_, *(void *)(v44 + 16), swift_weakLoadStrong());

      swift_release();
    }
    else
    {
    }
    swift_release();

    return a1;
  }
  uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v35)
  {
    if (v35 != 1)
    {
      uint64_t v36 = *(void **)(v33 + 40);
      a1 = *(id *)(v33 + 32);
      char v37 = v36;
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  id result = objc_msgSend(&OBJC_IVAR___STKSticker_identifier, sel_unlock);
  __break(1u);
  return result;
}

uint64_t sub_25E3E401C(double *a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v40 = (id *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (double *)((char *)&v34 - v8);
  uint64_t v10 = (char *)&v34 + *(int *)(v7 + 48) - v8;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v11 = *(int *)(v38 + 48);
  uint64_t v12 = sub_25E417E90(v10, a1);
  *(void *)id v9 = v13;
  uint64_t v37 = v11;
  *(void *)&v10[v11] = v12;
  swift_beginAccess();
  sub_25E3D930C(v2 + 16, (uint64_t)v45);
  uint64_t v14 = type metadata accessor for StickerStore();
  uint64_t v43 = v14;
  uint64_t v44 = &off_270B22588;
  v42[0] = v2;
  type metadata accessor for StickerStore.AddStickerMethod();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, v43);
  MEMORY[0x270FA5388](v16);
  id v18 = (id *)((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *))(v19 + 16))(v18);
  inited[7] = *v18;
  inited[10] = v14;
  inited[11] = &off_270B22588;
  sub_25E3E1568(v45, (uint64_t)(inited + 2));
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  uint64_t v20 = v39;
  uint64_t v39 = sub_25E3E997C((uint64_t)v36);
  if (v20)
  {
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    uint64_t v21 = (uint64_t)v40 + *(int *)(v4 + 48);
    uint64_t v22 = *(int *)(v38 + 48);
    double v23 = *v9;
    *uint64_t v40 = *(void *)v9;
    uint64_t v24 = sub_25E4255F0();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v21, v10, v24);
    uint64_t v26 = *(void *)&v10[v37];
  }
  else
  {
    uint64_t v36 = v9;
    uint64_t v35 = v10;
    uint64_t v27 = v37;
    char v28 = (void *)sub_25E3E0ED0();
    char v41 = 0;
    unint64_t v29 = (void *)v28[8];
    objc_msgSend(v29, sel_lock);
    sub_25E40CDD8((uint64_t)v28, &v41);
    objc_msgSend(v29, sel_unlock);
    uint64_t v30 = v4;
    if (v41)
    {
      id v34 = (id)v28[4];
      objc_msgSend(v34, sel_postNotificationName_object_, v28[2], swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    uint64_t v31 = v27;
    id v32 = v35;
    id v9 = v36;
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    uint64_t v21 = (uint64_t)v40 + *(int *)(v30 + 48);
    uint64_t v22 = *(int *)(v38 + 48);
    double v23 = *v9;
    *uint64_t v40 = *(void *)v9;
    uint64_t v24 = sub_25E4255F0();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v21, v32, v24);
    uint64_t v26 = *(void *)&v32[v31];
  }
  *(void *)(v21 + v22) = v26;
  swift_retain();
  sub_25E41C264(v21, v26, v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
  sub_25E3CE8D4((uint64_t)v9, &qword_26B3894E0);
  return v39;
}

uint64_t sub_25E3E44F4(unint64_t a1)
{
  unint64_t v34 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v37 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (double *)((char *)&v31 - v7);
  id v9 = (char *)&v31 + *(int *)(v6 + 48) - v7;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v10 = *(int *)(v36 + 48);
  uint64_t v11 = sub_25E418604(v9, a1);
  *(void *)uint64_t v8 = v12;
  uint64_t v33 = v10;
  *(void *)&v9[v10] = v11;
  swift_beginAccess();
  sub_25E3D930C(v1 + 16, (uint64_t)v42);
  uint64_t v13 = type metadata accessor for StickerStore();
  uint64_t v40 = v13;
  char v41 = &off_270B22588;
  v39[0] = v1;
  type metadata accessor for StickerStore.AddStickerMethod();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *))(v18 + 16))(v17);
  inited[7] = *v17;
  inited[10] = v13;
  inited[11] = &off_270B22588;
  sub_25E3E1568(v42, (uint64_t)(inited + 2));
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  swift_retain();
  unint64_t v19 = v35;
  uint64_t v35 = sub_25E3EC434(v34);
  if (v19)
  {
    unint64_t v34 = v19;
    swift_release();
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    uint64_t v20 = (uint64_t)v37 + *(int *)(v3 + 48);
    uint64_t v21 = *(int *)(v36 + 48);
    double v22 = *v8;
    *uint64_t v37 = *(void *)v8;
  }
  else
  {
    swift_release();
    double v23 = (void *)sub_25E3E0ED0();
    char v38 = 0;
    uint64_t v24 = (void *)v23[8];
    objc_msgSend(v24, sel_lock);
    sub_25E40CDD8((uint64_t)v23, &v38);
    unint64_t v34 = 0;
    objc_msgSend(v24, sel_unlock);
    if (v38)
    {
      id v32 = (id)v23[4];
      objc_msgSend(v32, sel_postNotificationName_object_, v23[2], swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    uint64_t v25 = v37;
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 2));
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(inited + 7));
    uint64_t v20 = (uint64_t)v25 + *(int *)(v3 + 48);
    uint64_t v26 = v25;
    uint64_t v21 = *(int *)(v36 + 48);
    double v22 = *v8;
    *uint64_t v26 = *(void *)v8;
  }
  uint64_t v27 = sub_25E4255F0();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v20, v9, v27);
  uint64_t v29 = *(void *)&v9[v33];
  *(void *)(v20 + v21) = v29;
  swift_retain();
  sub_25E41C6E4(v20, v29, v22);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v20, v27);
  sub_25E3CE8D4((uint64_t)v8, &qword_26B3894E0);
  return v35;
}

id sub_25E3E4964(uint64_t a1)
{
  uint64_t v98 = sub_25E4254F0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v98);
  long long v84 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v97 = (char *)&v81 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v89 = (uint64_t *)((char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (double *)((char *)&v81 - v10);
  uint64_t v88 = v9;
  uint64_t v12 = (char *)&v81 + *(int *)(v9 + 48) - v10;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v13 = *(int *)(v87 + 48);
  uint64_t v14 = sub_25E418EA8(v12, a1);
  *(void *)uint64_t v11 = v15;
  *(void *)&v12[v13] = v14;
  uint64_t v85 = v1;
  swift_beginAccess();
  sub_25E3D930C(v1 + 16, (uint64_t)&v108);
  uint64_t v16 = v110;
  uint64_t v17 = v111;
  __swift_project_boxed_opaque_existential_1(&v108, v110);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  uint64_t v95 = a1;
  uint64_t v19 = v96;
  v18(a1, v16, v17);
  uint64_t v90 = v19;
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v108);
    uint64_t v20 = (uint64_t)v89 + *(int *)(v88 + 48);
    uint64_t v21 = v12;
    uint64_t v22 = *(int *)(v87 + 48);
    double v23 = *v11;
    void *v89 = *(void *)v11;
    uint64_t v24 = sub_25E4255F0();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v20, v21, v24);
    uint64_t v26 = *(void *)&v21[v13];
    *(void *)(v20 + v22) = v26;
    swift_retain();
    sub_25E41BD00(v20, v26, v23);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v20, v24);
    return (id)sub_25E3CE8D4((uint64_t)v11, &qword_26B3894E0);
  }
  uint64_t v81 = v1 + 16;
  long long v82 = v12;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v108);
  uint64_t v27 = v95;
  int64_t v28 = *(void *)(v95 + 16);
  uint64_t v29 = MEMORY[0x263F8EE78];
  uint64_t v96 = v13;
  long long v83 = v11;
  if (v28)
  {
    v113[0] = MEMORY[0x263F8EE78];
    sub_25E3EAA00(0, v28, 0);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v86 + 16);
    unint64_t v31 = v27 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    uint64_t v93 = *(void *)(v86 + 72);
    uint64_t v94 = v30;
    uint64_t v95 = v86 + 16;
    unint64_t v91 = 0x800000025E42A830;
    uint64_t v92 = (void (**)(char *, uint64_t))(v86 + 8);
    do
    {
      uint64_t v33 = v97;
      uint64_t v32 = v98;
      v94(v97, v31, v98);
      sub_25E425490();
      unint64_t v108 = 0xD00000000000001BLL;
      unint64_t v109 = v91;
      sub_25E425970();
      swift_bridgeObjectRelease();
      unint64_t v34 = v108;
      unint64_t v35 = v109;
      (*v92)(v33, v32);
      uint64_t v29 = v113[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E3EAA00(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v113[0];
      }
      unint64_t v37 = *(void *)(v29 + 16);
      unint64_t v36 = *(void *)(v29 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_25E3EAA00(v36 > 1, v37 + 1, 1);
        uint64_t v29 = v113[0];
      }
      *(void *)(v29 + 16) = v37 + 1;
      uint64_t v38 = v29 + 16 * v37;
      *(void *)(v38 + 32) = v34;
      *(void *)(v38 + 40) = v35;
      v31 += v93;
      --v28;
      uint64_t v13 = v96;
    }
    while (v28);
    uint64_t v11 = v83;
  }
  unint64_t v108 = 0;
  uint64_t v39 = v90;
  sub_25E3E3810(v29, (void **)&v108, (uint64_t)v113);
  if (v39)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v89 + *(int *)(v88 + 48);
    uint64_t v41 = *(int *)(v87 + 48);
    double v42 = *v11;
    void *v89 = *(void *)v11;
    uint64_t v43 = sub_25E4255F0();
    uint64_t v44 = *(void *)(v43 - 8);
    long long v45 = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v40, v82, v43);
    uint64_t v46 = *(void *)&v45[v13];
LABEL_68:
    *(void *)(v40 + v41) = v46;
    swift_retain();
    sub_25E41BD00(v40, v46, v42);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v40, v43);
    return (id)sub_25E3CE8D4((uint64_t)v11, &qword_26B3894E0);
  }
  uint64_t v90 = 0;
  swift_bridgeObjectRelease();
  uint64_t v47 = v123;
  char v48 = v124;
  uint64_t v49 = __swift_project_boxed_opaque_existential_1(v122, v123);
  uint64_t v50 = sub_25E3D930C((uint64_t)v113, (uint64_t)v107);
  uint64_t v51 = v115;
  unint64_t v52 = v116;
  char v99 = v114;
  uint64_t v100 = v115;
  uint64_t v101 = v116;
  uint64_t v102 = v117;
  long long v103 = v118;
  char v104 = v119;
  uint64_t v105 = v120;
  char v106 = v121;
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v81 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void *, uint64_t))(v55 + 16))(v54, v49, v47);
  id v56 = v51;
  sub_25E3D44C0(v52);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v107, (uint64_t)v54, v47, (uint64_t)&v108);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v86 + 16);
  uint64_t v97 = (char *)(v86 + 32);
  unint64_t v58 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v59 = v112;
    unint64_t v60 = (unint64_t)v112 >> 62;
    if ((unint64_t)v112 >> 62) {
      break;
    }
    if (!*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_36;
    }
LABEL_20:
    if ((v59 & 0xC000000000000001) != 0)
    {
      unint64_t v61 = (unsigned char *)MEMORY[0x2611D6C30](0, v59);
      if (v60) {
        goto LABEL_44;
      }
    }
    else
    {
      if (!*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      unint64_t v61 = *(id *)(v59 + 32);
      if (v60)
      {
LABEL_44:
        swift_bridgeObjectRetain();
        char v48 = (void *)sub_25E425F80();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    char v48 = *(void **)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_45:
    if (!v48) {
      goto LABEL_72;
    }
    sub_25E3EBDA8(0, 1);
LABEL_16:
    if ((v61[OBJC_IVAR___STKSticker_type] & 1) == 0)
    {
      (*v57)(v84, (uint64_t)&v61[OBJC_IVAR___STKSticker_identifier], v98);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v62 = v58;
      }
      else {
        unint64_t v62 = sub_25E3EA444(0, *(void *)(v58 + 16) + 1, 1, v58, &qword_26B389028, MEMORY[0x263F07508], MEMORY[0x263F07508]);
      }
      unint64_t v64 = *(void *)(v62 + 16);
      unint64_t v63 = *(void *)(v62 + 24);
      if (v64 >= v63 >> 1) {
        unint64_t v62 = sub_25E3EA444(v63 > 1, v64 + 1, 1, v62, &qword_26B389028, MEMORY[0x263F07508], MEMORY[0x263F07508]);
      }
      *(void *)(v62 + 16) = v64 + 1;
      unint64_t v58 = v62;
      (*(void (**)(unint64_t))(v86 + 32))(v62+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v64);
    }
  }
  if (v112 < 0) {
    char v48 = (void *)v112;
  }
  else {
    char v48 = (void *)(v112 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v65)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v66) {
      goto LABEL_76;
    }
    swift_bridgeObjectRetain();
    char v48 = (void *)sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v48) {
      goto LABEL_74;
    }
    goto LABEL_20;
  }
LABEL_36:
  sub_25E4103A0();
  uint64_t v67 = v112;
  unint64_t v68 = (unint64_t)v112 >> 62;
  if (!((unint64_t)v112 >> 62))
  {
    if (!*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_57;
    }
    goto LABEL_38;
  }
  if (v112 < 0) {
    char v48 = (void *)v112;
  }
  else {
    char v48 = (void *)(v112 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v69)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v70) {
      goto LABEL_77;
    }
    swift_bridgeObjectRetain();
    char v48 = (void *)sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v48) {
      goto LABEL_75;
    }
LABEL_38:
    if ((v67 & 0xC000000000000001) != 0)
    {
      unint64_t v61 = (unsigned char *)MEMORY[0x2611D6C30](0, v67);
      if (v68) {
        goto LABEL_14;
      }
LABEL_41:
      if (!*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_73;
      }
    }
    else
    {
      if (!*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_71;
      }
      unint64_t v61 = *(id *)(v67 + 32);
      if (!v68) {
        goto LABEL_41;
      }
LABEL_14:
      swift_bridgeObjectRetain();
      char v48 = (void *)sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v48) {
        goto LABEL_73;
      }
    }
    sub_25E3EBDA8(0, 1);
    sub_25E41AC8C(v61);
    if (!v61) {
      goto LABEL_58;
    }
    goto LABEL_16;
  }
LABEL_57:
  sub_25E41AC8C(0);
LABEL_58:
  sub_25E3D9370((uint64_t)&v108);
  if (*(void *)(v58 + 16))
  {
    sub_25E3D930C(v81, (uint64_t)&v108);
    uint64_t v71 = v110;
    uint64_t v72 = v111;
    __swift_project_boxed_opaque_existential_1(&v108, v110);
    uint64_t v73 = v90;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v72 + 32))(v58, v71, v72);
    uint64_t v74 = v73;
    uint64_t v11 = v83;
    if (v73)
    {
      sub_25E3D789C((uint64_t)v113);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v108);
      uint64_t v40 = (uint64_t)v89 + *(int *)(v88 + 48);
      uint64_t v41 = *(int *)(v87 + 48);
      double v42 = *v11;
      void *v89 = *(void *)v11;
LABEL_67:
      uint64_t v43 = sub_25E4255F0();
      uint64_t v44 = *(void *)(v43 - 8);
      unint64_t v79 = v82;
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v40, v82, v43);
      uint64_t v46 = *(void *)&v79[v96];
      goto LABEL_68;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v108);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v83;
    uint64_t v74 = v90;
  }
  uint64_t v75 = sub_25E3E0ED0();
  LOBYTE(v108) = 0;
  char v48 = *(void **)(v75 + 64);
  objc_msgSend(v48, sel_lock);
  sub_25E40CDD8(v75, &v108);
  if (!v74)
  {
    objc_msgSend(v48, sel_unlock);
    if (v108)
    {
      objc_msgSend(*(id *)(v75 + 32), sel_postNotificationName_object_, *(void *)(v75 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    uint64_t v76 = v88;
    long long v77 = v89;
    uint64_t v78 = v87;
    sub_25E3D789C((uint64_t)v113);
    uint64_t v40 = (uint64_t)v77 + *(int *)(v76 + 48);
    uint64_t v41 = *(int *)(v78 + 48);
    double v42 = *v11;
    *long long v77 = *(void *)v11;
    goto LABEL_67;
  }
LABEL_78:
  id result = objc_msgSend(v48, sel_unlock);
  __break(1u);
  return result;
}

uint64_t sub_25E3E5558()
{
  swift_beginAccess();
  sub_25E3D930C(v0 + 16, (uint64_t)v7);
  uint64_t v2 = v8;
  uint64_t v3 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  if (!v1)
  {
    uint64_t v5 = sub_25E3E0ED0();
    LOBYTE(v7[0]) = 0;
    uint64_t v6 = *(void **)(v5 + 64);
    objc_msgSend(v6, sel_lock);
    sub_25E40CDD8(v5, v7);
    objc_msgSend(v6, sel_unlock);
    if (v7[0])
    {
      objc_msgSend(*(id *)(v5 + 32), sel_postNotificationName_object_, *(void *)(v5 + 16), swift_weakLoadStrong());
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25E3E56AC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (double *)((char *)&v37 - v8);
  uint64_t v10 = (char *)&v37 + *(int *)(v7 + 48) - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v12 = *(int *)(v11 + 48);
  uint64_t v13 = sub_25E418EA8(v10, a1);
  *(void *)uint64_t v9 = v14;
  uint64_t v40 = v12;
  *(void *)&v10[v12] = v13;
  uint64_t v38 = v1;
  swift_beginAccess();
  sub_25E3D930C(v1 + 16, (uint64_t)v41);
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  uint64_t v17 = v39;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(a1, v15, v16);
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    uint64_t v18 = (uint64_t)v6 + *(int *)(v3 + 48);
    uint64_t v19 = *(int *)(v11 + 48);
    double v20 = *v9;
    *uint64_t v6 = *(void *)v9;
    uint64_t v21 = sub_25E4255F0();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v18, v10, v21);
    uint64_t v23 = *(void *)&v10[v40];
    *(void *)(v18 + v19) = v23;
    swift_retain();
    sub_25E41BD00(v18, v23, v20);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v18, v21);
    uint64_t v24 = (uint64_t)v9;
  }
  else
  {
    uint64_t v25 = v9;
    uint64_t v39 = v11;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    uint64_t v26 = sub_25E3E0ED0();
    LOBYTE(v41[0]) = 0;
    uint64_t v27 = *(void **)(v26 + 64);
    objc_msgSend(v27, sel_lock);
    sub_25E40CDD8(v26, v41);
    objc_msgSend(v27, sel_unlock);
    if (v41[0])
    {
      objc_msgSend(*(id *)(v26 + 32), sel_postNotificationName_object_, *(void *)(v26 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    uint64_t v28 = v40;
    uint64_t v29 = v25;
    uint64_t v30 = (uint64_t)v6 + *(int *)(v3 + 48);
    uint64_t v31 = *(int *)(v39 + 48);
    double v32 = *v25;
    *uint64_t v6 = *(void *)v25;
    uint64_t v33 = sub_25E4255F0();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v30, v10, v33);
    uint64_t v35 = *(void *)&v10[v28];
    *(void *)(v30 + v31) = v35;
    swift_retain();
    sub_25E41BD00(v30, v35, v32);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v30, v33);
    uint64_t v24 = (uint64_t)v29;
  }
  return sub_25E3CE8D4(v24, &qword_26B3894E0);
}

id sub_25E3E5A5C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v82 = (unint64_t *)((char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (unint64_t *)((char *)&v75 - v7);
  uint64_t v84 = v6;
  uint64_t v9 = (char *)&v75 + *(int *)(v6 + 48) - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v11 = *(int *)(v10 + 48);
  uint64_t v12 = sub_25E419554(v9, a1);
  *uint64_t v8 = v13;
  uint64_t v83 = v11;
  *(void *)&v9[v11] = v12;
  uint64_t v81 = v1;
  swift_beginAccess();
  sub_25E3D930C(v1 + 16, (uint64_t)&v86);
  uint64_t v15 = v88;
  uint64_t v14 = v89;
  __swift_project_boxed_opaque_existential_1(&v86, v88);
  uint64_t v16 = *(void (**)(void *, uint64_t, uint64_t))(v14 + 40);
  long long v80 = a1;
  uint64_t v17 = v85;
  v16(a1, v15, v14);
  uint64_t v18 = v17;
  if (v17)
  {
    uint64_t v85 = v17;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
    uint64_t v19 = (uint64_t)v82 + *(int *)(v84 + 48);
    uint64_t v20 = *(int *)(v10 + 48);
    double v21 = *(double *)v8;
    *long long v82 = *v8;
    uint64_t v22 = sub_25E4255F0();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v19, v9, v22);
LABEL_3:
    uint64_t v24 = *(void *)&v9[v83];
    goto LABEL_10;
  }
  uint64_t v76 = v1 + 16;
  long long v77 = v9;
  uint64_t v78 = v10;
  unint64_t v79 = v8;
  uint64_t v25 = v84;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
  uint64_t v26 = &OBJC_IVAR___STKSticker_type;
  uint64_t v27 = v80;
  if (v80[OBJC_IVAR___STKSticker_type] == 1)
  {
    sub_25E425490();
    unint64_t v86 = 0xD00000000000001BLL;
    uint64_t v87 = 0x800000025E42A830;
    sub_25E425970();
    swift_bridgeObjectRelease();
    int64_t v28 = v86;
    unint64_t v86 = 0;
    uint64_t v18 = 0;
    unint64_t v34 = sub_25E3E3540(v28, v87, (void **)&v86);
    swift_bridgeObjectRelease();
    if (v34 >> 62) {
      goto LABEL_36;
    }
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v36 = &OBJC_IVAR___STKSticker_type;
    if (v35)
    {
      while (2)
      {
        uint64_t v26 = (uint64_t *)v35;
        if ((v34 & 0xC000000000000001) == 0)
        {
          uint64_t v37 = (char *)*(id *)(v34 + 32);
          goto LABEL_15;
        }
        while (1)
        {
          uint64_t v37 = (char *)MEMORY[0x2611D6C30](0, v34);
LABEL_15:
          if (v37[*v36] != 1)
          {
            uint64_t v38 = v37;
            uint64_t v85 = v18;
LABEL_19:
            swift_bridgeObjectRelease_n();
            uint64_t v39 = (uint64_t *)&v27[OBJC_IVAR___STKSticker_name];
            swift_beginAccess();
            uint64_t v41 = *v39;
            uint64_t v40 = v39[1];
            uint64_t v42 = &v38[OBJC_IVAR___STKSticker_name];
            swift_beginAccess();
            *(void *)uint64_t v42 = v41;
            *((void *)v42 + 1) = v40;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v43 = (uint64_t *)&v27[OBJC_IVAR___STKSticker_effect];
            swift_beginAccess();
            uint64_t v44 = *v43;
            long long v45 = &v38[OBJC_IVAR___STKSticker_effect];
            swift_beginAccess();
            *(void *)long long v45 = v44;
            uint64_t v46 = (uint64_t *)&v27[OBJC_IVAR___STKSticker_metadata];
            swift_beginAccess();
            uint64_t v48 = *v46;
            unint64_t v47 = v46[1];
            uint64_t v49 = (uint64_t *)&v38[OBJC_IVAR___STKSticker_metadata];
            swift_beginAccess();
            uint64_t v50 = *v49;
            unint64_t v75 = v49[1];
            *uint64_t v49 = v48;
            v49[1] = v47;
            sub_25E3CEA9C(v48, v47);
            sub_25E3CEB1C(v50, v75);
            uint64_t v51 = (uint64_t *)&v27[OBJC_IVAR___STKSticker_externalURI];
            swift_beginAccess();
            uint64_t v53 = *v51;
            uint64_t v52 = v51[1];
            uint64_t v54 = &v38[OBJC_IVAR___STKSticker_externalURI];
            swift_beginAccess();
            *(void *)uint64_t v54 = v53;
            *((void *)v54 + 1) = v52;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v55 = (uint64_t *)&v27[OBJC_IVAR___STKSticker_accessibilityName];
            swift_beginAccess();
            uint64_t v57 = *v55;
            uint64_t v56 = v55[1];
            unint64_t v58 = &v38[OBJC_IVAR___STKSticker_accessibilityName];
            swift_beginAccess();
            *(void *)unint64_t v58 = v57;
            *((void *)v58 + 1) = v56;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v59 = (void **)&v27[OBJC_IVAR___STKSticker_attributionInfo];
            swift_beginAccess();
            unint64_t v60 = *v59;
            unint64_t v61 = (void **)&v38[OBJC_IVAR___STKSticker_attributionInfo];
            swift_beginAccess();
            unint64_t v62 = *v61;
            *unint64_t v61 = v60;
            id v63 = v60;

            unint64_t v64 = (uint64_t *)&v27[OBJC_IVAR___STKSticker_representations];
            swift_beginAccess();
            uint64_t v65 = *v64;
            uint64_t v66 = &v38[OBJC_IVAR___STKSticker_representations];
            swift_beginAccess();
            *(void *)uint64_t v66 = v65;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_25E402BDC();
            sub_25E3D930C(v76, (uint64_t)&v86);
            uint64_t v67 = v88;
            uint64_t v68 = v89;
            __swift_project_boxed_opaque_existential_1(&v86, v88);
            uint64_t v69 = v85;
            (*(void (**)(char *, uint64_t, uint64_t))(v68 + 40))(v38, v67, v68);
            uint64_t v18 = v69;
            if (v69)
            {
              uint64_t v85 = v69;

              __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
              uint64_t v19 = (uint64_t)v82 + *(int *)(v25 + 48);
              uint64_t v8 = v79;
              uint64_t v20 = *(int *)(v78 + 48);
              double v21 = *(double *)v79;
              *long long v82 = *v79;
              uint64_t v22 = sub_25E4255F0();
              uint64_t v23 = *(void *)(v22 - 8);
              uint64_t v9 = v77;
              (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v19, v77, v22);
              goto LABEL_3;
            }

            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v86);
            goto LABEL_6;
          }

          if (v35 == 1) {
            goto LABEL_17;
          }
          if ((v34 & 0xC000000000000001) != 0) {
            break;
          }
          uint64_t v72 = 5;
          while (1)
          {
            uint64_t v73 = v72 - 3;
            if (__OFADD__(v72 - 4, 1)) {
              break;
            }
            uint64_t v74 = *(void **)(v34 + 8 * v72);
            if ((*((unsigned char *)v74 + *v36) & 1) == 0)
            {
              uint64_t v85 = v18;
              uint64_t v38 = v74;
              goto LABEL_19;
            }
            ++v72;
            if (v73 == v35) {
              goto LABEL_17;
            }
          }
          __break(1u);
        }
        uint64_t v85 = v18;
        uint64_t v70 = 1;
        while (1)
        {
          uint64_t v71 = MEMORY[0x2611D6C30](v70, v34);
          uint64_t v18 = v70 + 1;
          if (__OFADD__(v70, 1)) {
            break;
          }
          if (*(unsigned char *)(v71 + *v36) != 1)
          {
            uint64_t v38 = (char *)v71;
            goto LABEL_19;
          }
          swift_unknownObjectRelease();
          ++v70;
          if (v18 == v35)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v18 = v85;
            goto LABEL_6;
          }
        }
        __break(1u);
LABEL_36:
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_25E425F80();
        unint64_t v36 = v26;
        if (v35) {
          continue;
        }
        break;
      }
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
  }
LABEL_6:
  uint64_t v29 = sub_25E3E0ED0();
  LOBYTE(v86) = 0;
  uint64_t v30 = *(void **)(v29 + 64);
  objc_msgSend(v30, sel_lock);
  sub_25E40CDD8(v29, &v86);
  if (!v18)
  {
    uint64_t v85 = 0;
    objc_msgSend(v30, sel_unlock);
    uint64_t v31 = v83;
    double v32 = v77;
    uint64_t v8 = v79;
    if (v86)
    {
      objc_msgSend(*(id *)(v29 + 32), sel_postNotificationName_object_, *(void *)(v29 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    uint64_t v19 = (uint64_t)v82 + *(int *)(v25 + 48);
    uint64_t v20 = *(int *)(v78 + 48);
    double v21 = *(double *)v8;
    *long long v82 = *v8;
    uint64_t v22 = sub_25E4255F0();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v19, v32, v22);
    uint64_t v24 = *(void *)&v32[v31];
LABEL_10:
    *(void *)(v19 + v20) = v24;
    swift_retain();
    sub_25E41C6F8(v19, v24, v21);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v19, v22);
    return (id)sub_25E3CE8D4((uint64_t)v8, &qword_26B3894E0);
  }
  id result = objc_msgSend(v30, sel_unlock);
  __break(1u);
  return result;
}

uint64_t sub_25E3E6344(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (double *)((char *)&v37 - v8);
  uint64_t v10 = (char *)&v37 + *(int *)(v7 + 48) - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v12 = *(int *)(v11 + 48);
  uint64_t v13 = sub_25E419554(v10, a1);
  *(void *)uint64_t v9 = v14;
  uint64_t v40 = v12;
  *(void *)&v10[v12] = v13;
  uint64_t v38 = v1;
  swift_beginAccess();
  sub_25E3D930C(v1 + 16, (uint64_t)v41);
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  uint64_t v17 = v39;
  (*(void (**)(void *, uint64_t, uint64_t))(v16 + 40))(a1, v15, v16);
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    uint64_t v18 = (uint64_t)v6 + *(int *)(v3 + 48);
    uint64_t v19 = *(int *)(v11 + 48);
    double v20 = *v9;
    *uint64_t v6 = *(void *)v9;
    uint64_t v21 = sub_25E4255F0();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v18, v10, v21);
    uint64_t v23 = *(void *)&v10[v40];
    *(void *)(v18 + v19) = v23;
    swift_retain();
    sub_25E41C6F8(v18, v23, v20);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v18, v21);
    uint64_t v24 = (uint64_t)v9;
  }
  else
  {
    uint64_t v25 = v9;
    uint64_t v39 = v11;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    uint64_t v26 = sub_25E3E0ED0();
    LOBYTE(v41[0]) = 0;
    uint64_t v27 = *(void **)(v26 + 64);
    objc_msgSend(v27, sel_lock);
    sub_25E40CDD8(v26, v41);
    objc_msgSend(v27, sel_unlock);
    if (v41[0])
    {
      objc_msgSend(*(id *)(v26 + 32), sel_postNotificationName_object_, *(void *)(v26 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    uint64_t v28 = v40;
    uint64_t v29 = v25;
    uint64_t v30 = (uint64_t)v6 + *(int *)(v3 + 48);
    uint64_t v31 = *(int *)(v39 + 48);
    double v32 = *v25;
    *uint64_t v6 = *(void *)v25;
    uint64_t v33 = sub_25E4255F0();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v30, v10, v33);
    uint64_t v35 = *(void *)&v10[v28];
    *(void *)(v30 + v31) = v35;
    swift_retain();
    sub_25E41C6F8(v30, v35, v32);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v30, v33);
    uint64_t v24 = (uint64_t)v29;
  }
  return sub_25E3CE8D4(v24, &qword_26B3894E0);
}

uint64_t sub_25E3E66F4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (void *)((char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (void *)((char *)v85 - v12);
  LODWORD(v96) = *a3;
  uint64_t v14 = (char *)v85 + *(int *)(v11 + 48) - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v16 = *(int *)(v15 + 48);
  uint64_t v17 = sub_25E419964(v14, a1, a2);
  double v19 = v18;
  uint64_t v20 = v17;
  *(double *)uint64_t v13 = v18;
  *(void *)&v14[v16] = v17;
  unint64_t v95 = a1;
  if (a1 == a2)
  {
    uint64_t v21 = (uint64_t)v10 + *(int *)(v7 + 48);
    uint64_t v22 = *(int *)(v15 + 48);
    *(double *)uint64_t v10 = v18;
    uint64_t v23 = sub_25E4255F0();
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v21, v14, v23);
    *(void *)(v21 + v22) = v20;
    swift_retain();
    sub_25E41C70C(v21, v20, v19);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
    return sub_25E3CE8D4((uint64_t)v13, &qword_26B3894E0);
  }
  uint64_t v93 = v15;
  uint64_t v94 = v7;
  uint64_t v92 = v10;
  uint64_t v89 = v16;
  uint64_t v90 = v14;
  unint64_t v91 = v13;
  uint64_t v25 = v97 + 16;
  swift_beginAccess();
  sub_25E3D930C(v25, (uint64_t)&v112);
  uint64_t v26 = v113;
  uint64_t v27 = v114;
  __swift_project_boxed_opaque_existential_1(&v112, v113);
  char v115 = (char)v96;
  v99[0] = 0;
  swift_retain();
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v115, 0, v99, 0, 0, 0, 1, 8, (uint64_t)&v104, 0);
  uint64_t v29 = v105;
  uint64_t v28 = v106;
  uint64_t v30 = v107;
  LOBYTE(v99[0]) = v104;
  v99[1] = v105;
  v99[2] = v106;
  v99[3] = v107;
  long long v100 = v108;
  char v101 = v109;
  uint64_t v102 = v110;
  char v103 = v111;
  uint64_t v31 = v98;
  uint64_t v32 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 8))(v99, v26, v27);
  if (v31)
  {

    sub_25E3D446C(v28);
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v112);
    uint64_t v33 = v92;
    uint64_t v34 = (uint64_t)v92 + *(int *)(v94 + 48);
    uint64_t v35 = *(int *)(v93 + 48);
    uint64_t v13 = v91;
LABEL_15:
    double v41 = *(double *)v13;
    *uint64_t v33 = *v13;
    uint64_t v42 = sub_25E4255F0();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v34, v90, v42);
    uint64_t v45 = *(void *)&v44[v89];
    *(void *)(v34 + v35) = v45;
    swift_retain();
    sub_25E41C70C(v34, v45, v41);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v34, v42);
    return sub_25E3CE8D4((uint64_t)v13, &qword_26B3894E0);
  }
  uint64_t v36 = v32;
  uint64_t v88 = v25;

  sub_25E3D446C(v28);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v112);
  uint64_t v13 = v91;
  if ((v95 & 0x8000000000000000) != 0 || v36 <= (uint64_t)v95 || a2 < 0 || v36 < a2)
  {
    swift_release();
    sub_25E3CC3F0();
    swift_allocError();
    *uint64_t v40 = 1;
    swift_willThrow();
    uint64_t v33 = v92;
    uint64_t v34 = (uint64_t)v92 + *(int *)(v94 + 48);
    uint64_t v35 = *(int *)(v93 + 48);
    goto LABEL_15;
  }
  uint64_t v37 = (double *)v92;
  uint64_t v38 = v94;
  if (v95 >= a2)
  {
    char v39 = (char)v96;
    goto LABEL_18;
  }
  char v39 = (char)v96;
  if (!__OFADD__(a2, 1))
  {
    if (v36 >= a2 + 1) {
      ++a2;
    }
    else {
      a2 = v36;
    }
LABEL_18:
    LOBYTE(v104) = v39;
    sub_25E3E726C(a2, v36, (char *)&v104);
    uint64_t v3 = v47;
    uint64_t v30 = 0;
    if (qword_26B389390 == -1) {
      goto LABEL_19;
    }
    goto LABEL_28;
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_19:
  uint64_t v48 = type metadata accessor for StickerSignposter();
  uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_26B38BC78);
  uint64_t v50 = (uint64_t)v37 + *(int *)(v38 + 48);
  *uint64_t v37 = v19;
  uint64_t v51 = *(int *)(v93 + 48);
  uint64_t v52 = sub_25E4255F0();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = v90;
  unint64_t v86 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 16);
  v86(v50, v90, v52);
  *(void *)(v50 + v51) = v20;
  swift_retain();
  v85[1] = v49;
  sub_25E419C34("Index position determined", 25, 2, v50, v20);
  swift_release();
  uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v87(v50, v52);
  LOBYTE(v99[0]) = (_BYTE)v96;
  uint64_t v104 = 0;
  uint64_t v55 = sub_25E3E1F34(v95, (char *)v99, &v104);
  uint64_t v98 = v30;
  if (v30)
  {
    swift_release();
    uint64_t v56 = (uint64_t)v92 + *(int *)(v94 + 48);
    uint64_t v57 = *(int *)(v93 + 48);
    uint64_t v13 = v91;
    double v58 = *(double *)v91;
    *uint64_t v92 = *v91;
    v86(v56, v54, v52);
    uint64_t v59 = *(void *)&v54[v89];
    *(void *)(v56 + v57) = v59;
    swift_retain();
    sub_25E41C70C(v56, v59, v58);
    swift_release();
    v87(v56, v52);
  }
  else
  {
    unint64_t v60 = (double *)v92;
    uint64_t v61 = (uint64_t)v92 + *(int *)(v94 + 48);
    *(double *)uint64_t v92 = v19;
    uint64_t v62 = *(int *)(v93 + 48);
    uint64_t v96 = (char *)v55;
    id v63 = v86;
    v86(v61, v54, v52);
    *(void *)(v61 + v62) = v20;
    swift_retain();
    sub_25E419C34("Existing sticker fetched", 24, 2, v61, v20);
    swift_release();
    v87(v61, v52);
    unint64_t v64 = &v96[OBJC_IVAR___STKSticker_libraryIndex];
    swift_beginAccess();
    *(void *)unint64_t v64 = v3;
    uint64_t v65 = (uint64_t)v60 + *(int *)(v94 + 48);
    double *v60 = v19;
    uint64_t v66 = *(int *)(v93 + 48);
    v63(v65, v54, v52);
    *(void *)(v65 + v66) = v20;
    uint64_t v67 = v96;
    sub_25E419C34("Sticker assigned", 16, 2, v65, v20);
    swift_release();
    v87(v65, v52);
    sub_25E3D930C(v88, (uint64_t)&v104);
    uint64_t v68 = v107;
    uint64_t v69 = v108;
    __swift_project_boxed_opaque_existential_1(&v104, (uint64_t)v107);
    uint64_t v70 = v98;
    (*(void (**)(void *, void *, uint64_t))(v69 + 40))(v67, v68, v69);
    if (v70)
    {

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v104);
      uint64_t v71 = (uint64_t)v92 + *(int *)(v94 + 48);
      uint64_t v72 = *(int *)(v93 + 48);
      uint64_t v13 = v91;
      double v73 = *(double *)v91;
      *uint64_t v92 = *v91;
      uint64_t v74 = v90;
      v86(v71, v90, v52);
      uint64_t v75 = *(void *)&v74[v89];
      *(void *)(v71 + v72) = v75;
      swift_retain();
      sub_25E41C70C(v71, v75, v73);
      swift_release();
      v87(v71, v52);
    }
    else
    {
      uint64_t v76 = v87;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v104);
      uint64_t v77 = sub_25E3E0ED0();
      LOBYTE(v104) = 0;
      uint64_t v78 = *(void **)(v77 + 64);
      objc_msgSend(v78, sel_lock);
      sub_25E40CDD8(v77, &v104);
      uint64_t v98 = 0;
      objc_msgSend(v78, sel_unlock);
      if (v104)
      {
        objc_msgSend(*(id *)(v77 + 32), sel_postNotificationName_object_, *(void *)(v77 + 16), swift_weakLoadStrong());

        swift_release();
      }
      else
      {
      }
      swift_release();
      unint64_t v79 = v76;
      uint64_t v80 = (uint64_t)v92 + *(int *)(v94 + 48);
      uint64_t v81 = *(int *)(v93 + 48);
      uint64_t v13 = v91;
      double v82 = *(double *)v91;
      *uint64_t v92 = *v91;
      uint64_t v83 = v90;
      v86(v80, v90, v52);
      uint64_t v84 = *(void *)&v83[v89];
      *(void *)(v80 + v81) = v84;
      swift_retain();
      sub_25E41C70C(v80, v84, v82);
      swift_release();
      v79(v80, v52);
    }
  }
  return sub_25E3CE8D4((uint64_t)v13, &qword_26B3894E0);
}

void sub_25E3E726C(uint64_t a1, uint64_t a2, char *a3)
{
  char v6 = *a3;
  if (!a1)
  {
    if (a2 >= 1)
    {
      LOBYTE(v22[0]) = *a3;
      v23[0] = 0;
      uint64_t v9 = sub_25E3E1F34(0, (char *)v22, v23);
      if (!v4) {
        goto LABEL_5;
      }
    }
    return;
  }
  if (a1 != a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389030);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_25E4277F0;
    if (!__OFSUB__(a1, 1))
    {
      uint64_t v12 = v11;
      *(void *)(v11 + 32) = a1 - 1;
      *(void *)(v11 + 40) = a1;
      v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED978);
      v22[4] = sub_25E3D926C(&qword_26A6ED980, &qword_26A6ED978);
      v22[0] = v12;
      char v21 = v6;
      uint64_t v20 = 0;
      sub_25E3E2474(v22, &v21, &v20, v23);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
      if (v4) {
        return;
      }
      uint64_t v13 = __swift_project_boxed_opaque_existential_1(v23, v23[3]);
      MEMORY[0x270FA5388](v13);
      (*(void (**)(char *))(v15 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      type metadata accessor for Sticker(0);
      uint64_t v3 = sub_25E425B20();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      unint64_t v5 = v3 & 0xC000000000000001;
      if ((v3 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_25;
        }
        id v16 = *(id *)(v3 + 32);
LABEL_16:
        uint64_t v17 = v16;
        swift_beginAccess();

        if (v5)
        {
          id v18 = (id)MEMORY[0x2611D6C30](1, v3);
LABEL_20:
          double v19 = v18;
          swift_bridgeObjectRelease();
          swift_beginAccess();

          return;
        }
        if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
        {
          id v18 = *(id *)(v3 + 40);
          goto LABEL_20;
        }
LABEL_25:
        __break(1u);
        return;
      }
LABEL_23:
      id v16 = (id)MEMORY[0x2611D6C30](0, v3);
      goto LABEL_16;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  LOBYTE(v22[0]) = *a3;
  v23[0] = 0;
  uint64_t v9 = sub_25E3E1F34(v8, (char *)v22, v23);
  if (!v4)
  {
LABEL_5:
    uint64_t v10 = (void *)v9;
    swift_beginAccess();
  }
}

uint64_t sub_25E3E75E4()
{
  char v18 = 2;
  v5[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v18, 0, v5, 0, 0, 0, 1, 8, (uint64_t)v10, 0);
  uint64_t v1 = v11;
  uint64_t v0 = v12;
  LOBYTE(v5[0]) = v10[0];
  v5[1] = v11;
  v5[2] = v12;
  v5[3] = v13;
  long long v6 = v14;
  char v7 = v15;
  uint64_t v8 = v16;
  char v9 = v17;
  sub_25E3E1950((unsigned __int8 *)v5, (uint64_t)v10);
  sub_25E3EB428((uint64_t)v10);
  uint64_t v3 = v2;
  sub_25E3D789C((uint64_t)v10);

  sub_25E3D446C(v0);
  swift_bridgeObjectRelease();
  return v3;
}

void sub_25E3E76C0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, int a5, unint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14)
{
  uint64_t v116 = a8;
  int v133 = a5;
  uint64_t v117 = a4;
  unint64_t v119 = a3;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389340);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v123 = (uint8_t *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25E425390();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v120 = v20;
  uint64_t v121 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v114 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  long long v118 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v112 - v26;
  uint64_t v28 = sub_25E4254F0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v113 = (char *)&v112 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v112 - v32;
  uint64_t v34 = a6;
  unint64_t v131 = a6;
  unint64_t v132 = (void (*)(void, void))a7;
  swift_bridgeObjectRetain();
  uint64_t v115 = a1;
  sub_25E425480();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    uint64_t v122 = v29;
    uint64_t v124 = v28;
    sub_25E3CE8D4((uint64_t)v27, &qword_26B389370);
    goto LABEL_3;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v33, v27, v28);
  v130[0] = (void *)1;
  uint64_t v48 = v125;
  uint64_t v49 = (char *)sub_25E3E29F4((uint64_t)v33, v130);
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v28);
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v52 = v49;
  uint64_t v122 = v29;
  uint64_t v124 = v28;
  uint64_t v125 = 0;
  if (!v49)
  {
    (*(void (**)(char *, uint64_t))(v122 + 8))(v33, v124);
LABEL_3:
    uint64_t v35 = v125;
    if (qword_26B389398 != -1) {
      swift_once();
    }
    uint64_t v113 = a14;
    uint64_t v36 = sub_25E4256A0();
    uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_26B38BC60);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v112 = v37;
    uint64_t v38 = sub_25E425680();
    os_log_type_t v39 = sub_25E425BE0();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v125 = v35;
    if (v40)
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      v130[0] = v42;
      *(_DWORD *)uint64_t v41 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v127 = sub_25E3C8F74(v115, a2, (uint64_t *)v130);
      sub_25E425D80();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2080;
      if (a7) {
        uint64_t v43 = v34;
      }
      else {
        uint64_t v43 = 0;
      }
      if (a7) {
        unint64_t v44 = a7;
      }
      else {
        unint64_t v44 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v127 = sub_25E3C8F74(v43, v44, (uint64_t *)v130);
      sub_25E425D80();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v38, v39, "Donating recent with non-store identifier %s externalURI %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      uint64_t v45 = v42;
      uint64_t v35 = v125;
      MEMORY[0x2611D77B0](v45, -1, -1);
      MEMORY[0x2611D77B0](v41, -1, -1);

      uint64_t v46 = (uint64_t)v123;
      uint64_t v47 = v124;
      if (!a7)
      {
LABEL_32:
        swift_beginAccess();
        unint64_t v74 = (unint64_t)v132;
        if (v132)
        {
          uint64_t v75 = v131;
          v126[0] = 0;
          swift_bridgeObjectRetain();
          uint64_t v76 = (char *)sub_25E3E2F7C(v75, v74, v126);
          if (v35)
          {
            swift_bridgeObjectRelease();
            uint64_t v77 = v35;
LABEL_35:
            v126[0] = v77;
            id v78 = v77;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
            if (!swift_dynamicCast() || v134 != 2)
            {
              swift_bridgeObjectRelease();

              return;
            }

            unint64_t v80 = v131;
            unint64_t v79 = (unint64_t)v132;
            swift_bridgeObjectRetain_n();
            uint64_t v81 = sub_25E425680();
            os_log_type_t v82 = sub_25E425BE0();
            if (os_log_type_enabled(v81, v82))
            {
              uint64_t v124 = v47;
              uint64_t v83 = (uint8_t *)swift_slowAlloc();
              uint64_t v84 = swift_slowAlloc();
              uint64_t v129 = v84;
              *(_DWORD *)uint64_t v83 = 136315138;
              if (v79) {
                uint64_t v85 = v80;
              }
              else {
                uint64_t v85 = 0x3E726F7272653CLL;
              }
              if (v79) {
                unint64_t v86 = v79;
              }
              else {
                unint64_t v86 = 0xE700000000000000;
              }
              swift_bridgeObjectRetain();
              uint64_t v128 = sub_25E3C8F74(v85, v86, &v129);
              uint64_t v47 = v124;
              sub_25E425D80();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_25E3BB000, v81, v82, "No existing sticker with externalURI %s", v83, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2611D77B0](v84, -1, -1);
              MEMORY[0x2611D77B0](v83, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            uint64_t v125 = 0;

            goto LABEL_58;
          }
          uint64_t v87 = v76;
          if (v76)
          {
            swift_bridgeObjectRetain();
            uint64_t v88 = sub_25E425680();
            os_log_type_t v89 = sub_25E425BE0();
            if (os_log_type_enabled(v88, v89))
            {
              uint64_t v125 = 0;
              uint64_t v90 = (uint8_t *)swift_slowAlloc();
              unint64_t v91 = (void *)swift_slowAlloc();
              v126[0] = v91;
              uint64_t v124 = v47;
              *(_DWORD *)uint64_t v90 = 136315138;
              swift_bridgeObjectRetain();
              uint64_t v129 = sub_25E3C8F74(v75, v74, (uint64_t *)v126);
              uint64_t v35 = v125;
              uint64_t v47 = v124;
              sub_25E425D80();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_25E3BB000, v88, v89, "Donating existing sticker with externalURI %s", v90, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2611D77B0](v91, -1, -1);
              MEMORY[0x2611D77B0](v90, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            sub_25E3E8760(v87);
            uint64_t v77 = v35;
            if (!v35)
            {

              swift_bridgeObjectRelease();
              return;
            }

            goto LABEL_35;
          }
          uint64_t v125 = 0;
          swift_bridgeObjectRelease();
        }
LABEL_58:
        uint64_t v124 = a10;
        LOBYTE(v126[0]) = 0;
        uint64_t v92 = (uint64_t)v118;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v118, 1, 1, v47);
        if (a9) {
          uint64_t v93 = v116;
        }
        else {
          uint64_t v93 = 0;
        }
        unint64_t v94 = 0xE000000000000000;
        if (a9) {
          unint64_t v94 = a9;
        }
        uint64_t v122 = v94;
        uint64_t v123 = (uint8_t *)v93;
        if (v133) {
          uint64_t v95 = -1;
        }
        else {
          uint64_t v95 = v117;
        }
        uint64_t v96 = v132;
        unint64_t v120 = v131;
        uint64_t v121 = v95;
        objc_allocWithZone((Class)type metadata accessor for Sticker(0));
        uint64_t v97 = v113;
        uint64_t v98 = v113;
        swift_bridgeObjectRetain();
        sub_25E3CEA9C(a12, (unint64_t)a13);
        swift_bridgeObjectRetain();
        unint64_t v99 = v119;
        swift_bridgeObjectRetain();
        long long v100 = (double *)sub_25E408210((unsigned __int8 *)v126, v92, v99, (uint64_t)v123, v122, v121, a12, a13, 0.0, v120, v96, v124, a11, v97, 0, 0, 0, 1, 0,
                           1,
                           0,
                           0);

        sub_25E3CEB1C(a12, (unint64_t)a13);
        char v101 = v125;
        uint64_t v102 = (void *)sub_25E3E401C(v100);

        if (!v101) {
        return;
        }
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v46 = (uint64_t)v123;
      uint64_t v47 = v124;
      if (!a7) {
        goto LABEL_32;
      }
    }
    sub_25E425370();
    unint64_t v51 = v120;
    uint64_t v50 = v121;
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v121 + 48))(v46, 1, v120) == 1)
    {
      sub_25E3CE8D4(v46, (uint64_t *)&unk_26B389340);
      goto LABEL_32;
    }
    unint64_t v64 = v114;
    (*(void (**)(void))(v50 + 32))();
    if ((sub_25E4252A0() & 1) == 0
      || (uint64_t v65 = v113) == 0
      || (uint64_t v66 = &v113[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier],
          swift_beginAccess(),
          (uint64_t v67 = (void *)*((void *)v66 + 1)) == 0))
    {
      (*(void (**)(char *, unint64_t))(v50 + 8))(v64, v51);
      goto LABEL_32;
    }
    v130[0] = *(void **)v66;
    v130[1] = v67;
    v126[0] = (void *)58;
    v126[1] = (void *)0xE100000000000000;
    sub_25E3EC74C();
    uint64_t v68 = v65;
    uint64_t v69 = (void *)sub_25E425DA0();
    if (v69[2] != 3)
    {
      (*(void (**)(char *, unint64_t))(v50 + 8))(v114, v51);

      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    uint64_t v124 = v47;
    uint64_t v71 = v69[4];
    uint64_t v70 = v69[5];
    uint64_t v73 = v69[6];
    uint64_t v72 = v69[7];
    uint64_t v123 = (uint8_t *)v69[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v71 == 0xD000000000000032 && v70 == 0x800000025E42A8B0)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = v125;
      uint64_t v47 = v124;
    }
    else
    {
      char v103 = sub_25E426160();
      swift_bridgeObjectRelease();
      uint64_t v35 = v125;
      uint64_t v47 = v124;
      if ((v103 & 1) == 0) {
        goto LABEL_75;
      }
    }
    if ((v73 != 0x3030303030303030 || v72 != 0xEA00000000003030) && (sub_25E426160() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v104 = v114;
      sub_25E4252E0();
      unint64_t v105 = sub_25E4092F8();
      unint64_t v107 = v106;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v131 = v105;
      unint64_t v132 = (void (*)(void, void))v107;
      swift_bridgeObjectRetain_n();
      long long v108 = sub_25E425680();
      os_log_type_t v109 = sub_25E425BE0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        char v111 = (void *)swift_slowAlloc();
        v130[0] = v111;
        *(_DWORD *)uint64_t v110 = 136315138;
        uint64_t v123 = v110 + 4;
        swift_bridgeObjectRetain();
        v126[0] = (void *)sub_25E3C8F74(v105, v107, (uint64_t *)v130);
        uint64_t v47 = v124;
        sub_25E425D80();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25E3BB000, v108, v109, "Converted externalURI to %s", v110, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v111, -1, -1);
        MEMORY[0x2611D77B0](v110, -1, -1);

        (*(void (**)(char *, unint64_t))(v121 + 8))(v114, v120);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, unint64_t))(v121 + 8))(v104, v120);
      }
      uint64_t v35 = v125;
      goto LABEL_32;
    }
LABEL_75:
    (*(void (**)(char *, unint64_t))(v121 + 8))(v114, v120);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_25E4256A0();
  __swift_project_value_buffer(v53, (uint64_t)qword_26B38BC60);
  uint64_t v54 = v122;
  uint64_t v55 = v113;
  uint64_t v56 = v124;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v113, v33, v124);
  uint64_t v57 = sub_25E425680();
  os_log_type_t v58 = sub_25E425BE0();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    unint64_t v60 = (void *)swift_slowAlloc();
    v130[0] = v60;
    *(_DWORD *)uint64_t v59 = 136315138;
    uint64_t v123 = v59 + 4;
    sub_25E3EC1CC((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
    uint64_t v61 = sub_25E426140();
    uint64_t v127 = sub_25E3C8F74(v61, v62, (uint64_t *)v130);
    sub_25E425D80();
    swift_bridgeObjectRelease();
    id v63 = *(void (**)(char *, uint64_t))(v122 + 8);
    v63(v113, v56);
    _os_log_impl(&dword_25E3BB000, v57, v58, "Donating recent with identifier %s", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v60, -1, -1);
    MEMORY[0x2611D77B0](v59, -1, -1);
  }
  else
  {
    id v63 = *(void (**)(char *, uint64_t))(v54 + 8);
    v63(v55, v56);
  }

  sub_25E3E8760(v52);
  v63(v33, v56);
}

void sub_25E3E8760(char *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (void **)&a1[OBJC_IVAR___STKSticker_externalURI];
  swift_beginAccess();
  if (v9[1])
  {
    uint64_t v10 = (uint64_t)*v9;
    uint64_t v11 = (uint64_t)v9[1];
  }
  else
  {
    sub_25E425490();
    unint64_t v73 = 0xD00000000000001BLL;
    unint64_t v74 = 0x800000025E42A830;
    sub_25E425970();
    swift_bridgeObjectRelease();
    uint64_t v10 = v73;
    uint64_t v11 = v74;
  }
  unint64_t v73 = 1;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_25E3E3540(v10, v11, (void **)&v73);
  if (v3) {
    goto LABEL_5;
  }
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((a1[OBJC_IVAR___STKSticker_type] & 1) == 0)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (char *)sub_25E425F80();
      if (!v8) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v8 = *(char **)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v8) {
        goto LABEL_44;
      }
    }
    unint64_t v15 = v13 & 0xC000000000000001;
    if ((v13 & 0xC000000000000001) != 0) {
      uint64_t v22 = (void **)MEMORY[0x2611D6C30](0, v13);
    }
    else {
      uint64_t v22 = (void **)*(id *)(v13 + 32);
    }
    char v9 = v22;
    if (*((unsigned char *)v22 + OBJC_IVAR___STKSticker_type))
    {
LABEL_26:
      swift_bridgeObjectRelease_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E4280E0;
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = v9;
      unint64_t v73 = inited;
      sub_25E425AE0();
      unint64_t v24 = v73;
      uint64_t v25 = a1;
      uint64_t v26 = v9;
      unint64_t v27 = v24;
LABEL_48:
      sub_25E3E8FC0(v27);
      swift_bridgeObjectRelease();

      return;
    }

    if (v8 != (char *)1)
    {
      if (v15)
      {
        uint64_t v28 = 1;
        while (1)
        {
          uint64_t v29 = MEMORY[0x2611D6C30](v28, v13);
          uint64_t v30 = (char *)(v28 + 1);
          if (__OFADD__(v28, 1)) {
            goto LABEL_51;
          }
          char v9 = (void **)v29;
          if (*(unsigned char *)(v29 + OBJC_IVAR___STKSticker_type)) {
            break;
          }
          swift_unknownObjectRelease();
          ++v28;
          if (v30 == v8) {
            goto LABEL_44;
          }
        }
      }
      else
      {
        uint64_t v54 = 5;
        while (1)
        {
          uint64_t v55 = (char *)(v54 - 3);
          if (__OFADD__(v54 - 4, 1)) {
            goto LABEL_57;
          }
          uint64_t v56 = *(unsigned char **)(v13 + 8 * v54);
          if (v56[OBJC_IVAR___STKSticker_type] == 1) {
            break;
          }
          ++v54;
          if (v55 == v8) {
            goto LABEL_44;
          }
        }
        char v9 = v56;
      }
      goto LABEL_26;
    }
LABEL_44:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
    uint64_t v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = xmmword_25E4280D0;
    *(void *)(v57 + 32) = a1;
    unint64_t v73 = v57;
    sub_25E425AE0();
    unint64_t v58 = v73;
    uint64_t v59 = a1;
    sub_25E3E8FC0(v58);
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v71 = v4;
  if (v13 >> 62) {
    goto LABEL_52;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v14; uint64_t v14 = sub_25E425F80())
  {
    uint64_t v72 = (char *)v14;
    unint64_t v15 = v13 & 0xC000000000000001;
    if ((v13 & 0xC000000000000001) == 0)
    {
      id v16 = *(id *)(v13 + 32);
      goto LABEL_12;
    }
    while (1)
    {
      id v16 = (id)MEMORY[0x2611D6C30](0, v13);
LABEL_12:
      id v17 = v16;
      if (*((unsigned char *)v16 + OBJC_IVAR___STKSticker_type) != 1)
      {
LABEL_47:
        swift_bridgeObjectRelease_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
        uint64_t v60 = swift_initStackObject();
        *(_OWORD *)(v60 + 16) = xmmword_25E4280E0;
        *(void *)(v60 + 32) = a1;
        *(void *)(v60 + 40) = v17;
        unint64_t v73 = v60;
        sub_25E425AE0();
        unint64_t v61 = v73;
        unint64_t v62 = a1;
        uint64_t v26 = (void **)v17;
        unint64_t v27 = v61;
        goto LABEL_48;
      }

      if (v72 == (char *)1) {
        goto LABEL_38;
      }
      if (v15) {
        break;
      }
      uint64_t v31 = 5;
      while (1)
      {
        uint64_t v32 = v31 - 3;
        if (__OFADD__(v31 - 4, 1)) {
          break;
        }
        uint64_t v33 = *(void **)(v13 + 8 * v31);
        if ((*((unsigned char *)v33 + OBJC_IVAR___STKSticker_type) & 1) == 0)
        {
          id v17 = v33;
          goto LABEL_47;
        }
        ++v31;
        if ((char *)v32 == v72) {
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_57:
      __break(1u);
    }
    uint64_t v18 = 1;
    while (1)
    {
      uint64_t v19 = a1;
      a1 = v3;
      uint64_t v3 = v8;
      uint64_t v20 = MEMORY[0x2611D6C30](v18, v13);
      uint64_t v8 = (char *)(v18 + 1);
      if (__OFADD__(v18, 1)) {
        break;
      }
      id v17 = (id)v20;
      if (*(unsigned char *)(v20 + OBJC_IVAR___STKSticker_type) != 1)
      {
        a1 = v19;
        goto LABEL_47;
      }
      swift_unknownObjectRelease();
      ++v18;
      BOOL v21 = v8 == v72;
      uint64_t v8 = v3;
      uint64_t v3 = a1;
      a1 = v19;
      if (v21) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_bridgeObjectRetain();
  }
LABEL_38:
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
  uint64_t v34 = swift_initStackObject();
  *(_OWORD *)(v34 + 16) = xmmword_25E4280D0;
  *(void *)(v34 + 32) = a1;
  unint64_t v73 = v34;
  sub_25E425AE0();
  unint64_t v35 = v73;
  uint64_t v36 = a1;
  sub_25E3E8FC0(v35);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    unsigned __int8 v75 = 0;
    uint64_t v37 = sub_25E4254F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v8, 1, 1, v37);
    uint64_t v38 = (unint64_t *)&v36[OBJC_IVAR___STKSticker_representations];
    swift_beginAccess();
    unint64_t v68 = *v38;
    os_log_type_t v39 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_name];
    swift_beginAccess();
    uint64_t v72 = (char *)*v39;
    uint64_t v66 = v39[1];
    BOOL v40 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_effect];
    swift_beginAccess();
    uint64_t v70 = *v40;
    uint64_t v41 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_metadata];
    swift_beginAccess();
    uint64_t v42 = *v41;
    uint64_t v43 = (char *)v41[1];
    uint64_t v69 = *v9;
    unint64_t v64 = (void (*)(void, void))v9[1];
    unint64_t v44 = (uint64_t *)&v36[OBJC_IVAR___STKSticker_accessibilityName];
    swift_beginAccess();
    uint64_t v45 = *v44;
    uint64_t v46 = v44[1];
    uint64_t v67 = v45;
    uint64_t v47 = (void **)&v36[OBJC_IVAR___STKSticker_attributionInfo];
    swift_beginAccess();
    uint64_t v48 = *v47;
    id v65 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
    unint64_t v49 = v68;
    swift_bridgeObjectRetain();
    uint64_t v50 = v66;
    swift_bridgeObjectRetain();
    sub_25E3CEA9C(v42, (unint64_t)v43);
    id v63 = v48;
    unint64_t v51 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = (double *)sub_25E408210(&v75, (uint64_t)v8, v49, (uint64_t)v72, v50, v70, v42, v43, 0.0, (unint64_t)v69, v51, v67, v46, v48, 0, 0, 0, 1, 0,
                      1,
                      0,
                      0);

    sub_25E3CEB1C(v42, (unint64_t)v43);
    uint64_t v53 = (void *)sub_25E3E401C(v52);
  }
}

void sub_25E3E8F30(uint64_t a1)
{
  uint64_t v5 = 1;
  uint64_t v2 = (char *)sub_25E3E29F4(a1, (void **)&v5);
  if (!v1)
  {
    uint64_t v3 = v2;
    if (v2)
    {
      sub_25E3E8760(v2);
    }
    else
    {
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v4 = 2;
      swift_willThrow();
    }
  }
}

id sub_25E3E8FC0(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (double *)((char *)&v37 - v9);
  uint64_t v42 = v8;
  uint64_t v11 = (char *)&v37 + *(int *)(v8 + 48) - v9;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v12 = *(int *)(v40 + 48);
  uint64_t v13 = sub_25E419F78(v11, a1);
  uint64_t v45 = v10;
  *(void *)uint64_t v10 = v14;
  unint64_t v44 = v11;
  uint64_t v43 = v12;
  *(void *)&v11[v12] = v13;
  swift_beginAccess();
  sub_25E3D930C(v3 + 16, (uint64_t)&v50);
  uint64_t v15 = type metadata accessor for StickerStore();
  uint64_t v48 = v15;
  unint64_t v49 = &off_270B22588;
  v47[0] = v3;
  type metadata accessor for StickerStore.TouchStickerMethod();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v47, v48);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *))(v20 + 16))(v19);
  inited[7] = *v19;
  os_log_type_t v39 = inited + 7;
  inited[10] = v15;
  inited[11] = &off_270B22588;
  uint64_t v38 = inited + 2;
  sub_25E3E1568(&v50, (uint64_t)(inited + 2));
  uint64_t v37 = v3;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v21; uint64_t v21 = sub_25E425F80())
  {
    uint64_t v22 = 4;
    while (1)
    {
      id v23 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2611D6C30](v22 - 4, a1) : *(id *)(a1 + 8 * v22);
      unint64_t v24 = v23;
      uint64_t v25 = v22 - 3;
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      sub_25E3E9F9C((uint64_t)v23);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);

        goto LABEL_15;
      }

      ++v22;
      if (v25 == v21) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_25E3E0ED0();
  char v46 = 0;
  unint64_t v27 = *(void **)(v26 + 64);
  objc_msgSend(v27, sel_lock);
  sub_25E40CDD8(v26, &v46);
  if (v2)
  {
    id result = objc_msgSend(v27, sel_unlock);
    __break(1u);
  }
  else
  {
    objc_msgSend(v27, sel_unlock);
    if (v46)
    {
      objc_msgSend(*(id *)(v26 + 32), sel_postNotificationName_object_, *(void *)(v26 + 16), swift_weakLoadStrong());
      swift_release();
    }
    swift_release();
    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
LABEL_15:
    uint64_t v28 = (uint64_t)v41 + *(int *)(v42 + 48);
    uint64_t v29 = *(int *)(v40 + 48);
    uint64_t v30 = (uint64_t)v45;
    double v31 = *v45;
    *uint64_t v41 = *(void *)v45;
    uint64_t v32 = sub_25E4255F0();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v28, v44, v32);
    uint64_t v35 = *(void *)&v34[v43];
    *(void *)(v28 + v29) = v35;
    swift_retain();
    sub_25E41BD14(v28, v35, v31);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v32);
    return (id)sub_25E3CE8D4(v30, &qword_26B3894E0);
  }
  return result;
}

uint64_t sub_25E3E94AC(uint64_t a1)
{
  swift_beginAccess();
  sub_25E3D930C(v1 + 16, (uint64_t)v6);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t StickerStore.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  return v0;
}

uint64_t StickerStore.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25E3E95BC(unsigned __int8 *a1)
{
  return sub_25E3E15EC(a1);
}

uint64_t sub_25E3E95E0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3E1950(a1, a2);
}

uint64_t sub_25E3E9604(char *a1)
{
  return sub_25E3E1E5C(a1);
}

uint64_t sub_25E3E9628(uint64_t a1, char *a2, uint64_t *a3)
{
  return sub_25E3E1F34(a1, a2, a3);
}

uint64_t sub_25E3E964C@<X0>(void *a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_25E3E2474(a1, a2, a3, a4);
}

id sub_25E3E9670(uint64_t a1, void **a2)
{
  return sub_25E3E29F4(a1, a2);
}

uint64_t sub_25E3E9694@<X0>(void *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25E3E2C28(a1, a2, a3);
}

void *sub_25E3E96B8(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_25E3E2F7C(a1, a2, a3);
}

void sub_25E3E96DC(uint64_t a1)
{
  uint64_t v5 = 1;
  uint64_t v2 = (char *)sub_25E3E29F4(a1, (void **)&v5);
  if (!v1)
  {
    uint64_t v3 = v2;
    if (v2)
    {
      sub_25E3E8760(v2);
    }
    else
    {
      sub_25E3CC3F0();
      swift_allocError();
      *uint64_t v4 = 2;
      swift_willThrow();
    }
  }
}

unsigned char *sub_25E3E9770(unsigned char *a1)
{
  return sub_25E3E3A28(a1);
}

id sub_25E3E9794(void *a1)
{
  return sub_25E3E5A5C(a1);
}

__n128 sub_25E3E97B8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5, unint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14)
{
  sub_25E3E76C0(a1, a2, a3, a4, a5 & 1, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return result;
}

uint64_t sub_25E3E97F8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  return sub_25E3E66F4(a1, a2, a3);
}

id sub_25E3E981C(uint64_t a1)
{
  return sub_25E3E4964(a1);
}

uint64_t sub_25E3E9840()
{
  return sub_25E3E5558();
}

uint64_t sub_25E3E9864(double *a1)
{
  return sub_25E3E401C(a1);
}

uint64_t sub_25E3E9888(void *a1)
{
  return sub_25E3E6344(a1);
}

uint64_t sub_25E3E98AC(uint64_t a1)
{
  return sub_25E3E56AC(a1);
}

uint64_t sub_25E3E98D0(uint64_t a1)
{
  uint64_t v3 = *v1 + 16;
  swift_beginAccess();
  sub_25E3D930C(v3, (uint64_t)v7);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t sub_25E3E997C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  int v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR___STKSticker_type);
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v20 = v1 + 2;
  __swift_project_boxed_opaque_existential_1(v1 + 2, v6);
  int v21 = v5;
  unsigned __int8 v27 = v5;
  v22[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)((char *)&v27, 0, v22, 0, 0, 0, 1, 8, (uint64_t)&v28, 0);
  uint64_t v8 = v29;
  uint64_t v9 = v30;
  LOBYTE(v22[0]) = v28;
  v22[1] = v29;
  id v22[2] = v30;
  v22[3] = v31;
  long long v23 = v32;
  char v24 = v33;
  uint64_t v25 = v34;
  char v26 = v35;
  uint64_t v10 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 8))(v22, v6, v7);

  sub_25E3D446C(v9);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v1 + 7, v1[10]);
    if (v10 < 1)
    {
      double v15 = 1024.0;
    }
    else
    {
      LOBYTE(v22[0]) = v21;
      uint64_t v28 = 0;
      uint64_t v12 = (char *)sub_25E3E1F34(0, (char *)v22, &v28);
      uint64_t v13 = (double *)&v12[OBJC_IVAR___STKSticker_libraryIndex];
      swift_beginAccess();
      double v14 = *v13;

      double v15 = v14 + 1024.0;
    }
    id v16 = (double *)(v4 + OBJC_IVAR___STKSticker_libraryIndex);
    swift_beginAccess();
    *id v16 = v15;
    uint64_t v17 = v3[5];
    uint64_t v18 = v3[6];
    __swift_project_boxed_opaque_existential_1(v20, v17);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(v4, v17, v18);
    uint64_t v19 = 50;
    if (v21) {
      uint64_t v19 = 1000;
    }
    if (v10 >= v19)
    {
      unsigned __int8 v27 = v21;
      sub_25E3E9BDC(&v27);
    }
  }
  return v4;
}

uint64_t sub_25E3E9BDC(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  v11[0] = *a1;
  int v3 = v11[0];
  v20[0] = 0;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v11, 0, v20, 0, 0, 0, 1, 8, (uint64_t)v21, 0);
  if (v3) {
    uint64_t v4 = 1000;
  }
  else {
    uint64_t v4 = 50;
  }
  uint64_t v25 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389338);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25E427610;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x2611D5F60](KeyPath, 1);
  swift_bridgeObjectRelease();
  uint64_t v24 = v5;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
  uint64_t v7 = v23;
  v11[0] = v21[0];
  id v12 = v22;
  uint64_t v13 = v23;
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v16 = v26;
  char v17 = v27;
  uint64_t v18 = v28;
  char v19 = v29;
  id v8 = v22;
  sub_25E3D44C0(v7);
  swift_bridgeObjectRetain();
  sub_25E3E1950((unsigned __int8 *)v11, (uint64_t)v20);

  sub_25E3D446C(v7);
  swift_bridgeObjectRelease();
  id v9 = sub_25E3E08F0((uint64_t)v20);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
  sub_25E3E4964((uint64_t)v9);
  sub_25E3D789C((uint64_t)v20);
  swift_bridgeObjectRelease();

  sub_25E3D446C(v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E3E9F9C(uint64_t a1)
{
  int v3 = v1;
  int v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR___STKSticker_type);
  if ((v5 & 1) == 0)
  {
    uint64_t v17 = v1[5];
    uint64_t v18 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v17);
    v27[0] = 0;
    v28[0] = 0;
    Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v27, 0, v28, 0, 0, 0, 1, 8, (uint64_t)&v33, 0);
    uint64_t v20 = v34;
    char v19 = v35;
    LOBYTE(v28[0]) = v33;
    v28[1] = v34;
    v28[2] = v35;
    v28[3] = v36;
    long long v29 = v37;
    char v30 = v38;
    uint64_t v31 = v39;
    char v32 = v40;
    uint64_t v21 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v18 + 8))(v28, v17, v18);

    sub_25E3D446C(v19);
    uint64_t result = swift_bridgeObjectRelease();
    if (v2) {
      return result;
    }
    __swift_project_boxed_opaque_existential_1(v3 + 7, v3[10]);
    if (v21 < 1)
    {
      double v25 = 1024.0;
    }
    else
    {
      LOBYTE(v28[0]) = 0;
      uint64_t v33 = 0;
      id v22 = (char *)sub_25E3E1F34(0, (char *)v28, &v33);
      long long v23 = (double *)&v22[OBJC_IVAR___STKSticker_libraryIndex];
      swift_beginAccess();
      double v24 = *v23;

      double v25 = v24 + 1024.0;
    }
    uint64_t v26 = (double *)(a1 + OBJC_IVAR___STKSticker_libraryIndex);
    swift_beginAccess();
    *uint64_t v26 = v25;
  }
  id v6 = objc_msgSend(self, sel_currentEnvironment);
  id v7 = objc_msgSend(v6, sel_timeProvider);

  objc_msgSend(v7, sel_timestamp);
  uint64_t v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v10 = (void *)(a1 + OBJC_IVAR___STKSticker_lastUsedDate);
  swift_beginAccess();
  *uint64_t v10 = v9;
  uint64_t v11 = v3 + 2;
  uint64_t v12 = v3[5];
  uint64_t v13 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(a1, v12, v13);
  if (!v2)
  {
    if (v5)
    {
      uint64_t v16 = v3[5];
      uint64_t v15 = v3[6];
      __swift_project_boxed_opaque_existential_1(v11, v16);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1, v16, v15);
    }
  }
  return result;
}

uint64_t sub_25E3EA29C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  return swift_deallocClassInstance();
}

void sub_25E3EA2DC()
{
  uint64_t v1 = *v0;
  unint64_t v2 = (unint64_t)*v0 >> 62;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v5)
      {
LABEL_18:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_3:
        if ((v1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x2611D6C30](0, v1);
          if (!v2)
          {
LABEL_6:
            uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_14;
          }
        }
        else
        {
          if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
          *(id *)(v1 + 32);
          if (!v2) {
            goto LABEL_6;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_25E425F80();
        swift_bridgeObjectRelease();
LABEL_14:
        if (v3)
        {
          sub_25E3EBDA8(0, 1);
          return;
        }
        goto LABEL_17;
      }
      __break(1u);
    }
  }
  else if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
}

uint64_t sub_25E3EA420(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25E3EA444(a1, a2, a3, a4, &qword_26A6ED778, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_25E3EA444(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25E425F70();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  uint64_t v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E3EC2D8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_25E3EA6C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389030);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25E3EC584(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25E3EA7D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25E3ED708(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_25E3EA8E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED9B0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25E3ED7FC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E3EA9E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E3EAAB8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25E3EAA00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E3EAC28(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25E3EAA20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E3EAEF4(a1, a2, a3, (void *)*v3, &qword_26A6ED778, MEMORY[0x263F07490]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25E3EAA5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E3EAD94(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25E3EAA7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E3EAEF4(a1, a2, a3, (void *)*v3, &qword_26B389028, MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_25E3EAAB8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389548);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3EAC28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3EAD94(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389030);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3EAEF4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  double v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3EB13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25E425F80();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25E425F80();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v7;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v7 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x2611D6C40](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  unint64_t v15 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for Sticker(0);
  swift_arrayDestroy();
  if (v8)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25E425F80();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_25E425FD0();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v15 + 1);
        uint64_t v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v7 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_25E425F80();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  void *v15 = v3;
  return sub_25E425AE0();
}

void sub_25E3EB428(uint64_t a1)
{
  sub_25E3D92B0(a1, (uint64_t)v49);
  uint64_t v1 = v58;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(v57, v58);
  uint64_t v3 = sub_25E3D930C((uint64_t)v49, (uint64_t)v48);
  uint64_t v5 = v50;
  uint64_t v4 = v51;
  v40[8] = v49[40];
  uint64_t v41 = v50;
  uint64_t v42 = v51;
  uint64_t v43 = v52;
  long long v44 = v53;
  char v45 = v54;
  uint64_t v46 = v55;
  char v47 = v56;
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void *, uint64_t))(v8 + 16))(v7, v2, v1);
  id v9 = v5;
  sub_25E3D44C0(v4);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v48, (uint64_t)v7, v1, (uint64_t)v59);
  sub_25E3D789C((uint64_t)v49);
  uint64_t v10 = 0;
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = (void *)(MEMORY[0x263F8EE78] + 32); ; ++i)
  {
    unint64_t v13 = v60;
    unint64_t v14 = v60 >> 62;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v17) {
        goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_59;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v19) {
        goto LABEL_57;
      }
LABEL_4:
      if ((v13 & 0xC000000000000001) != 0)
      {
        id v15 = (id)MEMORY[0x2611D6C30](0, v13);
        if (!v14)
        {
LABEL_7:
          uint64_t v16 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
          if (!v16) {
            goto LABEL_54;
          }
          sub_25E3EBDA8(0, 1);
          goto LABEL_30;
        }
      }
      else
      {
        if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_51;
        }
        id v15 = *(id *)(v13 + 32);
        if (!v14) {
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_25E425F80();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    sub_25E4103A0();
    unint64_t v20 = v60;
    unint64_t v21 = v60 >> 62;
    if (v60 >> 62) {
      break;
    }
    if (!*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_45;
    }
LABEL_14:
    if ((v20 & 0xC000000000000001) != 0)
    {
      id v15 = (id)MEMORY[0x2611D6C30](0, v20);
      if (!v21) {
        goto LABEL_17;
      }
    }
    else
    {
      if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      id v15 = *(id *)(v20 + 32);
      if (!v21)
      {
LABEL_17:
        if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_55;
    }
LABEL_29:
    sub_25E3EBDA8(0, 1);
    sub_25E41AC8C(v15);
    if (!v15) {
      goto LABEL_46;
    }
LABEL_30:
    if (!v10)
    {
      unint64_t v26 = v11[3];
      if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_52;
      }
      int64_t v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
      if (v27 <= 1) {
        uint64_t v28 = 1;
      }
      else {
        uint64_t v28 = v27;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
      long long v29 = (void *)swift_allocObject();
      int64_t v30 = _swift_stdlib_malloc_size(v29);
      uint64_t v31 = v30 - 32;
      if (v30 < 32) {
        uint64_t v31 = v30 - 25;
      }
      uint64_t v32 = v31 >> 3;
      void v29[2] = v28;
      v29[3] = (2 * (v31 >> 3)) | 1;
      unint64_t v33 = (unint64_t)(v29 + 4);
      uint64_t v34 = v11[3] >> 1;
      if (v11[2])
      {
        char v35 = v11 + 4;
        if (v29 != v11 || v33 >= (unint64_t)v35 + 8 * v34) {
          memmove(v29 + 4, v35, 8 * v34);
        }
        v11[2] = 0;
      }
      uint64_t i = (void *)(v33 + 8 * v34);
      uint64_t v10 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
      swift_release();
      uint64_t v11 = v29;
    }
    BOOL v36 = __OFSUB__(v10--, 1);
    if (v36)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    *uint64_t i = v15;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_60;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v24) {
      goto LABEL_58;
    }
    goto LABEL_14;
  }
LABEL_45:
  sub_25E41AC8C(0);
LABEL_46:
  sub_25E3D9370((uint64_t)v59);
  unint64_t v37 = v11[3];
  if (v37 < 2) {
    return;
  }
  unint64_t v38 = v37 >> 1;
  BOOL v36 = __OFSUB__(v38, v10);
  uint64_t v39 = v38 - v10;
  if (!v36)
  {
    v11[2] = v39;
    return;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

uint64_t sub_25E3EB8F0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = result;
  unint64_t v7 = (void *)MEMORY[0x263F8EE78];
  if ((a4 & 1) != 0 || a3)
  {
    uint64_t v13 = a2 - result;
    if (__OFSUB__(a2, result))
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v8 = 0;
    unint64_t v14 = (uint64_t *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v26 = a3;
    while (v13 >= 1)
    {
      uint64_t v15 = a2;
      if ((a4 & 1) == 0)
      {
        uint64_t v15 = a2;
        if (v13 > a3)
        {
          uint64_t v15 = v6 + a3;
          if (__OFADD__(v6, a3)) {
            goto LABEL_35;
          }
          if (v15 < v6) {
            goto LABEL_36;
          }
          if (v15 > a2) {
            goto LABEL_34;
          }
        }
      }
      if (!v8)
      {
        unint64_t v16 = v7[3];
        if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_37;
        }
        int64_t v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v17 <= 1) {
          uint64_t v18 = 1;
        }
        else {
          uint64_t v18 = v17;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED9A8);
        uint64_t v19 = (void *)swift_allocObject();
        int64_t v20 = _swift_stdlib_malloc_size(v19);
        uint64_t v21 = v20 - 32;
        if (v20 < 32) {
          uint64_t v21 = v20 - 17;
        }
        uint64_t v22 = v21 >> 4;
        v19[2] = v18;
        v19[3] = 2 * (v21 >> 4);
        unint64_t v23 = (unint64_t)(v19 + 4);
        uint64_t v24 = v7[3] >> 1;
        if (v7[2])
        {
          uint64_t v25 = v7 + 4;
          if (v19 != v7 || v23 >= (unint64_t)v25 + 16 * v24) {
            memmove(v19 + 4, v25, 16 * v24);
          }
          uint64_t v7[2] = 0;
        }
        unint64_t v14 = (uint64_t *)(v23 + 16 * v24);
        uint64_t v8 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
        uint64_t result = swift_release();
        unint64_t v7 = v19;
        a3 = v26;
      }
      BOOL v11 = __OFSUB__(v8--, 1);
      if (v11) {
        goto LABEL_33;
      }
      *unint64_t v14 = v6;
      v14[1] = v15;
      v14 += 2;
      uint64_t v6 = v15;
      uint64_t v13 = a2 - v15;
      if (__OFSUB__(a2, v15)) {
        goto LABEL_32;
      }
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v7[3];
  if (v9 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v10 = v9 >> 1;
  BOOL v11 = __OFSUB__(v10, v8);
  uint64_t v12 = v10 - v8;
  if (!v11)
  {
    uint64_t v7[2] = v12;
    return (uint64_t)v7;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_25E3EBAA0(uint64_t a1)
{
  void (*v49)(uint64_t *__return_ptr, id *);
  uint64_t v50;
  uint64_t v51;
  id v52;
  _OWORD v53[2];

  long long v1 = *(_OWORD *)(a1 + 16);
  v53[0] = *(_OWORD *)a1;
  v53[1] = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *((void *)&v1 + 1) >> 1;
  uint64_t v4 = (*((void *)&v1 + 1) >> 1) - v1;
  if (__OFSUB__(*((void *)&v1 + 1) >> 1, (void)v1)) {
    goto LABEL_44;
  }
  uint64_t v6 = *((void *)&v53[0] + 1);
  if (v4 <= 0)
  {
    if (v4 < 0)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    unint64_t v49 = *(void (**)(uint64_t *__return_ptr, id *))(a1 + 32);
    uint64_t v26 = (void *)MEMORY[0x263F8EE78];
    uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
    sub_25E3ED8E4((uint64_t)v53);
    swift_retain();
    BOOL v11 = v26;
    uint64_t v12 = v26 + 4;
    uint64_t v23 = v2;
    BOOL v27 = __OFSUB__(v3, v2);
    uint64_t v25 = v3 - v2;
    char v24 = (v25 < 0) ^ v27 | (v25 == 0);
    if (!v25) {
      goto LABEL_35;
    }
LABEL_17:
    if (v24) {
      goto LABEL_46;
    }
    if (v23 < v2)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v28 = (id *)(v6 + 8 * v23);
    while (1)
    {
      uint64_t v52 = *v28;
      id v29 = v52;
      v49(&v50, &v52);

      uint64_t v31 = v50;
      uint64_t v30 = v51;
      if (!v14)
      {
        unint64_t v32 = v11[3];
        if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_43;
        }
        unint64_t v33 = v11;
        int64_t v34 = v32 & 0xFFFFFFFFFFFFFFFELL;
        if (v34 <= 1) {
          uint64_t v35 = 1;
        }
        else {
          uint64_t v35 = v34;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
        BOOL v36 = (void *)swift_allocObject();
        int64_t v37 = _swift_stdlib_malloc_size(v36);
        uint64_t v38 = v37 - 32;
        if (v37 < 32) {
          uint64_t v38 = v37 - 17;
        }
        uint64_t v39 = v38 >> 4;
        id v36[2] = v35;
        v36[3] = 2 * (v38 >> 4);
        unint64_t v40 = (unint64_t)(v36 + 4);
        uint64_t v41 = v33[3] >> 1;
        if (v33[2])
        {
          uint64_t v42 = v33 + 4;
          if (v36 != v33 || v40 >= (unint64_t)v42 + 16 * v41) {
            memmove(v36 + 4, v42, 16 * v41);
          }
          v33[2] = 0;
        }
        uint64_t v12 = (void *)(v40 + 16 * v41);
        uint64_t v14 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
        swift_release();
        BOOL v11 = v36;
      }
      BOOL v27 = __OFSUB__(v14--, 1);
      if (v27) {
        break;
      }
      *uint64_t v12 = v31;
      v12[1] = v30;
      v12 += 2;
      ++v28;
      if (!--v25) {
        goto LABEL_35;
      }
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
  unint64_t v7 = (void *)swift_allocObject();
  int64_t v8 = _swift_stdlib_malloc_size(v7);
  uint64_t v9 = v8 - 32;
  if (v8 < 32) {
    uint64_t v9 = v8 - 17;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v7[2] = v4;
  void v7[3] = 2 * (v9 >> 4);
  BOOL v11 = v7;
  uint64_t v12 = v7 + 4;
  uint64_t v48 = v6;
  uint64_t v13 = (v9 >> 4) & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v49 = *(void (**)(uint64_t *__return_ptr, id *))(a1 + 32);
  sub_25E3ED8E4((uint64_t)v53);
  uint64_t v14 = v2 + v13 - v3;
  uint64_t v46 = v3;
  if (v2 <= v3) {
    uint64_t v15 = v3;
  }
  else {
    uint64_t v15 = v2;
  }
  uint64_t v16 = v2;
  uint64_t v17 = v15 - v2;
  unint64_t v18 = v10 | 0x8000000000000000;
  swift_retain();
  uint64_t v19 = 0;
  uint64_t v47 = v16;
  uint64_t v20 = v48 + 8 * v16;
  do
  {
    if (v4 == v19)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v17 == v19) {
      goto LABEL_40;
    }
    uint64_t v52 = *(id *)(v20 + 8 * v19);
    id v21 = v52;
    v49(&v50, &v52);

    if (v18 == v19) {
      goto LABEL_41;
    }
    ++v19;
    uint64_t v22 = v51;
    *uint64_t v12 = v50;
    v12[1] = v22;
    v12 += 2;
  }
  while (v4 != v19);
  uint64_t v2 = v47;
  uint64_t v23 = v47 + v19;
  uint64_t v6 = v48;
  uint64_t v25 = v46 - v23;
  char v24 = v46 <= v23;
  if (v46 != v23) {
    goto LABEL_17;
  }
LABEL_35:
  sub_25E3ED910((uint64_t)v53);
  swift_release();
  unint64_t v43 = v11[3];
  if (v43 < 2) {
    return;
  }
  unint64_t v44 = v43 >> 1;
  BOOL v27 = __OFSUB__(v44, v14);
  uint64_t v45 = v44 - v14;
  if (v27)
  {
LABEL_48:
    __break(1u);
    return;
  }
  v11[2] = v45;
}

uint64_t sub_25E3EBDA8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_25E425F80();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25E425F80();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x2611D6C40](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for Sticker(0);
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_25E425F80();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_25E425FD0();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_25E425F80();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_25E425AE0();
}

unint64_t sub_25E3EC0B4()
{
  unint64_t result = qword_26B3893E0;
  if (!qword_26B3893E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B3893E0);
  }
  return result;
}

uint64_t sub_25E3EC108()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_25E3EC118()
{
  unint64_t result = qword_26A6ED990;
  if (!qword_26A6ED990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED990);
  }
  return result;
}

uint64_t sub_25E3EC16C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  long long v1 = *(void **)(v0 + 72);
  if ((unint64_t)v1 >= 3) {

  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  return MEMORY[0x270FA0238](v0, 168, 7);
}

uint64_t sub_25E3EC1CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  long long v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_25E3EC278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25E3EC2D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3EC434(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v3) {
      break;
    }
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E425F30();
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x2611D6C30](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      sub_25E3E997C((uint64_t)v6);

      if (v1) {
        return swift_release();
      }
      ++v5;
      sub_25E425F10();
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      if (v3 == v5) {
        return v8;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_25E3EC584(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3EC670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StickerStore.AddStickerMethod()
{
  return self;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_25E3EC74C()
{
  unint64_t result = qword_26A6ED9A0;
  if (!qword_26A6ED9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED9A0);
  }
  return result;
}

uint64_t method lookup function for StickerStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StickerStore);
}

uint64_t dispatch thunk of StickerStore.__allocating_init(persistence:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of StickerStore.__allocating_init(dataMappper:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of StickerStore.count(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of StickerStore.stickers(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of StickerStore.count(type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of StickerStore.sticker(at:type:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of StickerStore.stickers(at:type:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of StickerStore.sticker(identifier:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of StickerStore.stickers(identifiers:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of StickerStore.sticker(uri:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of StickerStore.stickers(uri:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of StickerStore.stickers(uris:representationSpecifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of StickerStore.addSticker(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of StickerStore._internal_only_addSticker(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of StickerStore._internal_only_addStickers(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of StickerStore.removeStickers(identifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of StickerStore.reindexAllStickers()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of StickerStore._internal_only_removeStickers(identifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of StickerStore.updateSticker(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of StickerStore._internal_only_updateSticker(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of StickerStore.moveSticker(at:to:type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of StickerStore.allStickers()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of StickerStore.donateStickerToRecents(with:representations:stickerEffect:externalURI:name:accessibilityName:metadata:attributionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v5 + 336))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of StickerStore.touchSticker(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of StickerStore._internal_only_touchStickSpotlightItem(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t *initializeBufferWithCopyOfBuffer for StickerStore.PersistenceType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_25E425390();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for StickerStore.PersistenceType(uint64_t a1)
{
  uint64_t v2 = sub_25E425390();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for StickerStore.PersistenceType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for StickerStore.PersistenceType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for StickerStore.PersistenceType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for StickerStore.PersistenceType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerStore.PersistenceType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E3ED488);
}

uint64_t sub_25E3ED488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425390();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StickerStore.PersistenceType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E3ED508);
}

uint64_t sub_25E3ED508(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_25E3ED58C(uint64_t a1)
{
  uint64_t v2 = sub_25E425390();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_25E3ED5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425390();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

uint64_t sub_25E3ED664()
{
  uint64_t result = sub_25E425390();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StickerStore.TouchStickerMethod()
{
  return self;
}

uint64_t sub_25E3ED708(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

char *sub_25E3ED7FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_25E425FD0();
  __break(1u);
  return result;
}

uint64_t sub_25E3ED8E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E3ED910(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E3ED93C()
{
  return 1;
}

uint64_t sub_25E3ED944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E3ED9AC()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26A6ED9B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A6ED9B8);
  return sub_25E425690();
}

const char *sub_25E3EDA30(uint64_t a1, uint64_t a2, sqlite3 *a3)
{
  if (a3)
  {
    uint64_t v4 = sub_25E425930();
    int v5 = sqlite3_exec(a3, (const char *)(v4 + 32), 0, 0, 0);
    swift_release();
    return sub_25E3EDB68(v5, a3);
  }
  else
  {
    if (qword_26A6ED530 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_25E4256A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_26A6ED9B8);
    uint64_t v8 = sub_25E425680();
    os_log_type_t v9 = sub_25E425BF0();
    if (os_log_type_enabled(v8, v9))
    {
      int v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v10 = 0;
      _os_log_impl(&dword_25E3BB000, v8, v9, "Database is not available", v10, 2u);
      MEMORY[0x2611D77B0](v10, -1, -1);
    }

    return 0;
  }
}

const char *sub_25E3EDB68(int a1, sqlite3 *db)
{
  BOOL v3 = dword_270B23360 == a1 || unk_270B23364 == a1 || dword_270B23368 == a1;
  uint64_t v4 = v3;
  if (v3) {
    return (const char *)v4;
  }
  int v6 = sqlite3_extended_errcode(db);
  uint64_t result = sqlite3_errstr(a1);
  if (result)
  {
    uint64_t v8 = sub_25E4258B0();
    if (v9)
    {
      uint64_t v10 = v8;
      unint64_t v11 = v9;
      if (qword_26A6ED530 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_25E4256A0();
      __swift_project_value_buffer(v12, (uint64_t)qword_26A6ED9B8);
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_25E425680();
      os_log_type_t v14 = sub_25E425BF0();
      if (!os_log_type_enabled(v13, v14))
      {

        swift_bridgeObjectRelease_n();
        return (const char *)v4;
      }
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = v16;
      *(_DWORD *)uint64_t v15 = 67109634;
      sub_25E425D80();
      *(_WORD *)(v15 + 8) = 1024;
      sub_25E425D80();
      *(_WORD *)(v15 + 14) = 2080;
      swift_bridgeObjectRetain();
      sub_25E3C8F74(v10, v11, &v21);
      sub_25E425D80();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25E3BB000, v13, v14, "error: %d extended: %d description: %s", (uint8_t *)v15, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v16, -1, -1);
      uint64_t v17 = v15;
    }
    else
    {
      if (qword_26A6ED530 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_25E4256A0();
      __swift_project_value_buffer(v18, (uint64_t)qword_26A6ED9B8);
      unint64_t v13 = sub_25E425680();
      os_log_type_t v19 = sub_25E425BF0();
      if (!os_log_type_enabled(v13, v19)) {
        goto LABEL_22;
      }
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 67109376;
      sub_25E425D80();
      *(_WORD *)(v20 + 8) = 1024;
      LODWORD(v21) = v6;
      sub_25E425D80();
      _os_log_impl(&dword_25E3BB000, v13, v19, "error: %d extended: %d", (uint8_t *)v20, 0xEu);
      uint64_t v17 = v20;
    }
    MEMORY[0x2611D77B0](v17, -1, -1);
LABEL_22:

    return (const char *)v4;
  }
  __break(1u);
  return result;
}

sqlite3 *sub_25E3EDE90()
{
  ppDb[1] = *(sqlite3 **)MEMORY[0x263EF8340];
  uint64_t v0 = sub_25E425390();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  int v6 = (char *)v19 - v5;
  ppDb[0] = 0;
  sub_25E3BE9A8((uint64_t)v19 - v5);
  sub_25E425350();
  uint64_t v7 = sub_25E425930();
  swift_bridgeObjectRelease();
  int v8 = sqlite3_open_v2((const char *)(v7 + 32), ppDb, 1, 0);
  swift_release();
  if (sub_25E3EDB68(v8, ppDb[0]))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  else
  {
    ppDb[0] = 0;
    if (qword_26A6ED530 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_25E4256A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_26A6ED9B8);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
    uint64_t v10 = sub_25E425680();
    os_log_type_t v11 = sub_25E425C00();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      v19[0] = v12 + 4;
      sub_25E3EE1FC();
      uint64_t v14 = sub_25E426140();
      v19[1] = sub_25E3C8F74(v14, v15, &v20);
      sub_25E425D80();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
      v16(v4, v0);
      _os_log_impl(&dword_25E3BB000, v10, v11, "Failed to open path: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v13, -1, -1);
      MEMORY[0x2611D77B0](v12, -1, -1);

      v16(v6, v0);
    }
    else
    {

      uint64_t v17 = *(void (**)(char *, uint64_t))(v1 + 8);
      v17(v4, v0);
      v17(v6, v0);
    }
  }
  return ppDb[0];
}

unint64_t sub_25E3EE1FC()
{
  unint64_t result = qword_26B388CE0;
  if (!qword_26B388CE0)
  {
    sub_25E425390();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388CE0);
  }
  return result;
}

uint64_t Settings.shouldInitializeCloudKitSchema.getter()
{
  uint64_t result = os_variant_has_internal_content();
  if (result)
  {
    if (sub_25E3EE298()) {
      return 1;
    }
    else {
      return sub_25E3EE350() & 1;
    }
  }
  return result;
}

uint64_t sub_25E3EE298()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  uint64_t v1 = sub_25E3EE474(0xD00000000000001DLL, 0x800000025E42AAB0);
  unint64_t v3 = v2;

  if (v3)
  {
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFLL;
    }
    if (v4) {
      char v5 = sub_25E3EEB58(v1, v3);
    }
    else {
      char v5 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_25E3EE350()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_25E425840();
  if (*(void *)(v2 + 16) && (sub_25E3F7ABC(0xD00000000000001BLL, 0x800000025E42AA90), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_25E425920();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    LOBYTE(v4) = sub_25E3EEB58(v4, v6);
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

ValueMetadata *type metadata accessor for Settings()
{
  return &type metadata for Settings;
}

uint64_t sub_25E3EE474(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388EC0);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v3, sel_arguments);
  uint64_t v10 = sub_25E425AC0();

  swift_bridgeObjectRetain();
  unint64_t v11 = sub_25E3EF104(v10, a1, a2);
  char v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = 0;
  if (v13) {
    return v14;
  }
  uint64_t v14 = (uint64_t)objc_msgSend(v3, sel_arguments);
  unint64_t v15 = sub_25E425AC0();

  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v11 >= *(void *)(v15 + 16))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
    sub_25E407580(v14, v15, 10);
    char v50 = v70;
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  uint64_t v71 = 0;
  id v72 = v3;
  unint64_t v16 = v15 + 16 * v11;
  uint64_t v18 = *(void *)(v16 + 32);
  unint64_t v17 = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v76 = v18;
  uint64_t v77 = v17;
  uint64_t v73 = v18;
  uint64_t v74 = 4013373;
  unint64_t v75 = 0xE300000000000000;
  uint64_t v19 = sub_25E425500();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  sub_25E3EC74C();
  sub_25E425DB0();
  char v22 = v21;
  sub_25E3EF0A4((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v76 = v73;
  uint64_t v77 = v17;
  uint64_t v74 = 15677;
  unint64_t v75 = 0xE200000000000000;
  v20(v8, 1, 1, v19);
  sub_25E425DB0();
  unint64_t v24 = v23;
  char v26 = v25;
  sub_25E3EF0A4((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
    unint64_t v27 = v24;
LABEL_10:
    unint64_t v32 = sub_25E3EF208(v27, v73, v17);
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x2611D6690](v32, v34, v36, v38);
    swift_bridgeObjectRelease();
    return v14;
  }
  uint64_t v76 = v73;
  uint64_t v77 = v17;
  uint64_t v74 = 61;
  unint64_t v75 = 0xE100000000000000;
  v20(v8, 1, 1, v19);
  sub_25E425DB0();
  unint64_t v29 = v28;
  char v31 = v30;
  sub_25E3EF0A4((uint64_t)v8);
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    unint64_t v27 = v29;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  id v40 = v72;
  id v41 = objc_msgSend(v72, sel_arguments);
  unint64_t v15 = sub_25E425AC0();

  uint64_t v42 = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  if (v11 == v42 - 1) {
    return 0;
  }
  uint64_t v14 = (uint64_t)objc_msgSend(v40, sel_arguments);
  uint64_t v43 = sub_25E425AC0();

  if (v11 + 1 >= *(void *)(v43 + 16)) {
    goto LABEL_68;
  }
  unint64_t v44 = v43 + 16 * (v11 + 1);
  uint64_t v14 = *(void *)(v44 + 32);
  unint64_t v15 = *(void *)(v44 + 40);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v45 = HIBYTE(v15) & 0xF;
  uint64_t v46 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0) {
    uint64_t v47 = HIBYTE(v15) & 0xF;
  }
  else {
    uint64_t v47 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (!v47)
  {
LABEL_56:
    if ((sub_25E4259E0() & 1) == 0) {
      return v14;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_69;
  }
  if ((v15 & 0x2000000000000000) == 0)
  {
    if ((v14 & 0x1000000000000000) != 0) {
      uint64_t v48 = (unsigned __int8 *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v48 = (unsigned __int8 *)sub_25E425F00();
    }
    sub_25E407568(v48, v46, 10);
    char v50 = v49 & 1;
LABEL_55:
    if ((v50 & 1) == 0) {
      return v14;
    }
    goto LABEL_56;
  }
  uint64_t v76 = v14;
  uint64_t v77 = v15 & 0xFFFFFFFFFFFFFFLL;
  if (v14 == 43)
  {
    if (v45)
    {
      if (v45 != 1 && (BYTE1(v14) - 48) <= 9u)
      {
        if (v45 == 2) {
          goto LABEL_54;
        }
        if ((BYTE2(v14) - 48) <= 9u)
        {
          uint64_t v58 = v45 - 3;
          if (v58)
          {
            uint64_t v59 = (unsigned __int8 *)&v76 + 3;
            uint64_t v60 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
            while (1)
            {
              unsigned int v61 = *v59 - 48;
              if (v61 > 9) {
                goto LABEL_52;
              }
              uint64_t v62 = (unsigned __int128)(v60 * (__int128)10) >> 64;
              uint64_t v63 = 10 * v60;
              if (v62 != v63 >> 63) {
                goto LABEL_52;
              }
              BOOL v57 = __OFADD__(v63, v61);
              uint64_t v60 = v63 + v61;
              if (v57) {
                goto LABEL_52;
              }
              char v50 = 0;
              ++v59;
              if (!--v58) {
                goto LABEL_55;
              }
            }
          }
          goto LABEL_54;
        }
      }
      goto LABEL_52;
    }
  }
  else
  {
    if (v14 != 45)
    {
      if (v45 && (v14 - 48) <= 9u)
      {
        if (v45 == 1) {
          goto LABEL_54;
        }
        if ((BYTE1(v14) - 48) <= 9u)
        {
          uint64_t v64 = v45 - 2;
          if (v64)
          {
            id v65 = (unsigned __int8 *)&v76 + 2;
            uint64_t v66 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
            while (1)
            {
              unsigned int v67 = *v65 - 48;
              if (v67 > 9) {
                goto LABEL_52;
              }
              uint64_t v68 = (unsigned __int128)(v66 * (__int128)10) >> 64;
              uint64_t v69 = 10 * v66;
              if (v68 != v69 >> 63) {
                goto LABEL_52;
              }
              BOOL v57 = __OFADD__(v69, v67);
              uint64_t v66 = v69 + v67;
              if (v57) {
                goto LABEL_52;
              }
              char v50 = 0;
              ++v65;
              if (!--v64) {
                goto LABEL_55;
              }
            }
          }
          goto LABEL_54;
        }
      }
LABEL_52:
      char v50 = 1;
      goto LABEL_55;
    }
    if (v45)
    {
      if (v45 != 1 && (BYTE1(v14) - 48) <= 9u)
      {
        if (v45 == 2) {
          goto LABEL_54;
        }
        if ((BYTE2(v14) - 48) <= 9u)
        {
          uint64_t v51 = v45 - 3;
          if (v51)
          {
            uint64_t v52 = (unsigned __int8 *)&v76 + 3;
            uint64_t v53 = -10 * (BYTE1(v14) - 48) - (BYTE2(v14) - 48);
            while (1)
            {
              unsigned int v54 = *v52 - 48;
              if (v54 > 9) {
                goto LABEL_52;
              }
              uint64_t v55 = (unsigned __int128)(v53 * (__int128)10) >> 64;
              uint64_t v56 = 10 * v53;
              if (v55 != v56 >> 63) {
                goto LABEL_52;
              }
              BOOL v57 = __OFSUB__(v56, v54);
              uint64_t v53 = v56 - v54;
              if (v57) {
                goto LABEL_52;
              }
              char v50 = 0;
              ++v52;
              if (!--v51) {
                goto LABEL_55;
              }
            }
          }
LABEL_54:
          char v50 = 0;
          goto LABEL_55;
        }
      }
      goto LABEL_52;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E3EEB58(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388EC0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v36 = 49;
  unint64_t v37 = 0xE100000000000000;
  uint64_t v7 = sub_25E425500();
  int v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  uint64_t v9 = 1;
  v8(v6, 1, 1, v7);
  sub_25E3EC74C();
  uint64_t v10 = sub_25E425DC0();
  sub_25E3EF0A4((uint64_t)v6);
  if (!v10) {
    return v9;
  }
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v36 = 7562617;
  unint64_t v37 = 0xE300000000000000;
  uint64_t v9 = 1;
  v8(v6, 1, 1, v7);
  uint64_t v11 = sub_25E425DC0();
  sub_25E3EF0A4((uint64_t)v6);
  if (!v11) {
    return v9;
  }
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v36 = 1702195828;
  unint64_t v37 = 0xE400000000000000;
  uint64_t v9 = 1;
  v8(v6, 1, 1, v7);
  uint64_t v12 = sub_25E425DC0();
  sub_25E3EF0A4((uint64_t)v6);
  if (!v12) {
    return v9;
  }
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v36 = 28271;
  unint64_t v37 = 0xE200000000000000;
  uint64_t v9 = 1;
  v8(v6, 1, 1, v7);
  uint64_t v13 = sub_25E425DC0();
  uint64_t result = sub_25E3EF0A4((uint64_t)v6);
  if (!v13) {
    return v9;
  }
  uint64_t v15 = HIBYTE(a2) & 0xF;
  uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v17 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v17 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17) {
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_25E407580(a1, a2, 10);
    LOBYTE(a1) = v34;
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)v33;
    return (a1 & 1) == 0 && v19 > 0;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v18 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v18 = (unsigned __int8 *)sub_25E425F00();
    }
    uint64_t v19 = (uint64_t)sub_25E407568(v18, v16, 10);
    LOBYTE(a1) = v20 & 1;
    return (a1 & 1) == 0 && v19 > 0;
  }
  uint64_t v38 = a1;
  uint64_t v39 = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v15) {
      goto LABEL_63;
    }
    if (v15 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    uint64_t v19 = (BYTE1(a1) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u) {
        goto LABEL_36;
      }
      uint64_t v19 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      uint64_t v21 = v15 - 3;
      if (v21)
      {
        for (uint64_t i = (unsigned __int8 *)&v38 + 3; ; ++i)
        {
          unsigned int v23 = *i - 48;
          if (v23 > 9) {
            goto LABEL_36;
          }
          uint64_t v24 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63) {
            goto LABEL_36;
          }
          uint64_t v19 = v24 + v23;
          if (__OFADD__(v24, v23)) {
            goto LABEL_36;
          }
          LOBYTE(a1) = 0;
          if (!--v21) {
            return (a1 & 1) == 0 && v19 > 0;
          }
        }
      }
    }
LABEL_48:
    LOBYTE(a1) = 0;
    return (a1 & 1) == 0 && v19 > 0;
  }
  if (a1 != 45)
  {
    if (!v15 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    uint64_t v19 = (a1 - 48);
    if (v15 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u) {
        goto LABEL_36;
      }
      uint64_t v19 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      uint64_t v25 = v15 - 2;
      if (v25)
      {
        for (j = (unsigned __int8 *)&v38 + 2; ; ++j)
        {
          unsigned int v27 = *j - 48;
          if (v27 > 9) {
            goto LABEL_36;
          }
          uint64_t v28 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63) {
            goto LABEL_36;
          }
          uint64_t v19 = v28 + v27;
          if (__OFADD__(v28, v27)) {
            goto LABEL_36;
          }
          LOBYTE(a1) = 0;
          if (!--v25) {
            return (a1 & 1) == 0 && v19 > 0;
          }
        }
      }
    }
    goto LABEL_48;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        LOBYTE(a1) = 0;
        uint64_t v19 = -(uint64_t)(BYTE1(a1) - 48);
        return (a1 & 1) == 0 && v19 > 0;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        uint64_t v19 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
        uint64_t v29 = v15 - 3;
        if (!v29) {
          goto LABEL_48;
        }
        for (k = (unsigned __int8 *)&v38 + 3; ; ++k)
        {
          unsigned int v31 = *k - 48;
          if (v31 > 9) {
            break;
          }
          uint64_t v32 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63) {
            break;
          }
          uint64_t v19 = v32 - v31;
          if (__OFSUB__(v32, v31)) {
            break;
          }
          LOBYTE(a1) = 0;
          if (!--v29) {
            return (a1 & 1) == 0 && v19 > 0;
          }
        }
      }
    }
LABEL_36:
    uint64_t v19 = 0;
    LOBYTE(a1) = 1;
    return (a1 & 1) == 0 && v19 > 0;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_25E3EF0A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388EC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E3EF104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (void *)(a1 + 40); *(i - 1) != a2 || *i != a3; i += 2)
  {
    if (sub_25E426160()) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25E425970();
    char v9 = sub_25E4259E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

unint64_t sub_25E3EF208(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_25E425A20();
  }
  __break(1u);
  return result;
}

uint64_t sub_25E3EF254()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26A6ED9D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A6ED9D0);
  return sub_25E425690();
}

id _STKMessagesObjCStoreFacade.init()()
{
  uint64_t v1 = type metadata accessor for StickerStore.PersistenceType();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25E425390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 3, v4);
  uint64_t v5 = type metadata accessor for StickerStore();
  swift_allocObject();
  uint64_t v6 = v0;
  uint64_t v7 = StickerStore.init(persistence:)((uint64_t)v3);
  int v8 = (uint64_t *)&v6[OBJC_IVAR____STKMessagesObjCStoreFacade_store];
  v8[3] = v5;
  v8[4] = (uint64_t)&protocol witness table for StickerStore;
  *int v8 = v7;

  char v9 = (objc_class *)type metadata accessor for _STKMessagesObjCStoreFacade();
  v11.receiver = v6;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t type metadata accessor for _STKMessagesObjCStoreFacade()
{
  return self;
}

id _STKMessagesObjCStoreFacade.__allocating_init(store:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_25E3D930C(a1, (uint64_t)v3 + OBJC_IVAR____STKMessagesObjCStoreFacade_store);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id _STKMessagesObjCStoreFacade.init(store:)(uint64_t a1)
{
  sub_25E3D930C(a1, (uint64_t)v1 + OBJC_IVAR____STKMessagesObjCStoreFacade_store);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for _STKMessagesObjCStoreFacade();
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v3;
}

void sub_25E3EF60C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  uint64_t v47 = a2;
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_25E3EFCB4(a3);
  swift_bridgeObjectRelease();
  if (a13)
  {
    uint64_t v39 = v13;
    uint64_t v19 = *(void **)&a13[OBJC_IVAR____STKStickerAttributionInfo_adamID];
    uint64_t v41 = a6;
    uint64_t v21 = *(void *)&a13[OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier];
    uint64_t v20 = *(void *)&a13[OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier + 8];
    uint64_t v37 = *(void *)&a13[OBJC_IVAR____STKStickerAttributionInfo_name + 8];
    uint64_t v38 = *(void *)&a13[OBJC_IVAR____STKStickerAttributionInfo_name];
    char v22 = (objc_class *)type metadata accessor for Sticker.AttributionInfo();
    uint64_t v42 = a7;
    unsigned int v23 = (char *)objc_allocWithZone(v22);
    uint64_t v40 = a5;
    uint64_t v24 = &v23[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
    *(void *)&v23[OBJC_IVAR___STKStickerAttributionInfo_adamID] = v19;
    swift_beginAccess();
    *(void *)uint64_t v24 = v21;
    *((void *)v24 + 1) = v20;
    a6 = v41;
    id v25 = v19;
    uint64_t v13 = v39;
    id v36 = v25;
    char v26 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned int v27 = v23;
    a7 = v42;
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = &v28[OBJC_IVAR___STKStickerAttributionInfo_name];
    *(void *)uint64_t v29 = v38;
    *((void *)v29 + 1) = v37;

    v46.receiver = v28;
    v46.super_class = v22;
    id v30 = objc_msgSendSuper2(&v46, sel_init);

    a5 = v40;
  }
  else
  {
    id v30 = 0;
  }
  unsigned int v31 = (void *)(v13 + OBJC_IVAR____STKMessagesObjCStoreFacade_store);
  uint64_t v32 = *(void *)(v13 + OBJC_IVAR____STKMessagesObjCStoreFacade_store + 24);
  uint64_t v33 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v32);
  uint64_t v34 = sub_25E4081F8(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, uint64_t))(v33 + 96))(a1, v47, v45, v34, v35 & 1, a5, a6, a7, a8, a9, a10, a11, a12, v30, v32, v33);
  swift_bridgeObjectRelease();
}

id sub_25E3EF870(uint64_t a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B388ED0);
  MEMORY[0x270FA5388](v4 - 8);
  objc_super v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25E4255B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  objc_super v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v15 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_type];
  unint64_t v14 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_type + 8];
  swift_bridgeObjectRetain();
  sub_25E4255C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_25E3F0D90((uint64_t)v6);
    if (qword_26A6ED538 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_25E4256A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_26A6ED9D0);
    uint64_t v17 = a2;
    uint64_t v18 = sub_25E425680();
    os_log_type_t v19 = sub_25E425BF0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v36 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_25E3C8F74(v15, v14, &v36);
      sub_25E425D80();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v18, v19, "Skipping unsupported type %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v21, -1, -1);
      MEMORY[0x2611D77B0](v20, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    uint64_t v22 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_data];
    unint64_t v23 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_data + 8];
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    double v24 = *(double *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_size];
    double v25 = *(double *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_size + 8];
    uint64_t v26 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_role];
    unint64_t v27 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_role + 8];
    if (v27) {
      uint64_t v28 = *(void *)&a2[OBJC_IVAR____STKStickerUIStickerRepresentation_role];
    }
    else {
      uint64_t v28 = 0;
    }
    if (v27) {
      unint64_t v29 = v27;
    }
    else {
      unint64_t v29 = 0xE000000000000000;
    }
    unint64_t v34 = v29;
    char v30 = v27 && (v26 == 0xD000000000000020 && v27 == 0x800000025E42A0A0 || (sub_25E426160() & 1) != 0) || a1 == 0;
    objc_allocWithZone((Class)type metadata accessor for Sticker.Representation());
    sub_25E3CEAB0(v22, v23);
    swift_bridgeObjectRetain();
    id v31 = sub_25E4161BC(v22, v23, (uint64_t)v11, v28, v34, v30, v24, v25);
    sub_25E3CEA28(v22, v23);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return v31;
}

uint64_t sub_25E3EFCB4(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_25E425F80())
  {
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v4 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x2611D6C30](i - 4, a1)
         : (char *)*(id *)(a1 + 8 * i);
      uint64_t v5 = v4;
      uint64_t v6 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v7 = sub_25E3EF870(i - 4, v4);

      if (v7)
      {
        MEMORY[0x2611D67F0]();
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25E425AF0();
        }
        sub_25E425B10();
        sub_25E425AE0();
      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

id _STKMessagesObjCStoreFacade.__deallocating_deinit()
{
  return sub_25E3F0B94(type metadata accessor for _STKMessagesObjCStoreFacade);
}

uint64_t _STKStickerUIStickerRepresentation.data.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_data);
  sub_25E3CEAB0(v1, *(void *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_data + 8));
  return v1;
}

uint64_t _STKStickerUIStickerRepresentation.type.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_type);
  swift_bridgeObjectRetain();
  return v1;
}

double _STKStickerUIStickerRepresentation.size.getter()
{
  return *(double *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_size);
}

uint64_t _STKStickerUIStickerRepresentation.role.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKStickerUIStickerRepresentation_role);
}

uint64_t sub_25E3F02E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_25E428250;
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = 0x3D656C6F72;
  *(void *)(v1 + 40) = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0x3D65707974;
  *(void *)(v1 + 56) = 0xE500000000000000;
  sub_25E425CD0();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = 0x3D657A6973;
  *(void *)(v1 + 72) = 0xE500000000000000;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_data);
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____STKStickerUIStickerRepresentation_data + 8);
  uint64_t v4 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      BOOL v5 = __OFSUB__(HIDWORD(v2), v2);
      int v6 = HIDWORD(v2) - v2;
      if (v5)
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x25E3F05B8);
      }
      uint64_t v4 = v6;
LABEL_6:
      id v10 = objc_msgSend(self, sel_stringFromByteCount_countStyle_, v4, 0);
      sub_25E4258F0();

      sub_25E425970();
      swift_bridgeObjectRelease();
      *(void *)(v1 + 80) = 0x3D61746164;
      *(void *)(v1 + 88) = 0xE500000000000000;
      swift_getObjectType();
      sub_25E426290();
      sub_25E425970();
      swift_bridgeObjectRelease();
      sub_25E425970();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
      sub_25E3F0C30();
      sub_25E425880();
      swift_bridgeObjectRelease();
      sub_25E425970();
      swift_bridgeObjectRelease();
      sub_25E425970();
      return 60;
    case 2uLL:
      uint64_t v9 = v2 + 16;
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v8 = *(void *)(v9 + 8);
      uint64_t v4 = v8 - v7;
      if (!__OFSUB__(v8, v7)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v4 = BYTE6(v3);
      goto LABEL_6;
  }
}

void _STKStickerUIStickerRepresentation.init()()
{
}

id _STKStickerUIStickerRepresentation.__deallocating_deinit()
{
  return sub_25E3F0B94(type metadata accessor for _STKStickerUIStickerRepresentation);
}

void *_STKStickerAttributionInfo.adamID.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____STKStickerAttributionInfo_adamID);
  id v2 = v1;
  return v1;
}

uint64_t _STKStickerAttributionInfo.bundleIdentifier.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKStickerAttributionInfo_bundleIdentifier);
}

uint64_t _STKStickerAttributionInfo.name.getter()
{
  return sub_25E3D2614(&OBJC_IVAR____STKStickerAttributionInfo_name);
}

id sub_25E3F07F4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  BOOL v5 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25E3F0864()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_25E428260;
  id v2 = *(void **)(v0 + OBJC_IVAR____STKStickerAttributionInfo_adamID);
  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_description);
    sub_25E4258F0();
  }
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = 0x3D44496D616461;
  *(void *)(v1 + 40) = 0xE700000000000000;
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0xD000000000000011;
  *(void *)(v1 + 56) = 0x800000025E42AB00;
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = 0x3D656D616ELL;
  *(void *)(v1 + 72) = 0xE500000000000000;
  swift_getObjectType();
  sub_25E426290();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
  sub_25E3F0C30();
  sub_25E425880();
  swift_bridgeObjectRelease();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  return 60;
}

id _STKStickerAttributionInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void _STKStickerAttributionInfo.init()()
{
}

id _STKStickerAttributionInfo.__deallocating_deinit()
{
  return sub_25E3F0B94(type metadata accessor for _STKStickerAttributionInfo);
}

id sub_25E3F0B94(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_25E3F0C30()
{
  unint64_t result = qword_26A6EDA90;
  if (!qword_26A6EDA90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A6ED8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDA90);
  }
  return result;
}

uint64_t type metadata accessor for _STKStickerUIStickerRepresentation()
{
  return self;
}

uint64_t type metadata accessor for _STKStickerAttributionInfo()
{
  return self;
}

uint64_t method lookup function for _STKMessagesObjCStoreFacade(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _STKMessagesObjCStoreFacade);
}

uint64_t dispatch thunk of _STKMessagesObjCStoreFacade.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of _STKMessagesObjCStoreFacade.donateStickerToRecents(with:representations:stickerEffectEnum:externalURI:name:accessibilityName:metadata:attributionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v5) + 0x60))(a1, a2, a3, a4, a5);
}

uint64_t method lookup function for _STKStickerUIStickerRepresentation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _STKStickerUIStickerRepresentation);
}

uint64_t method lookup function for _STKStickerAttributionInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _STKStickerAttributionInfo);
}

uint64_t sub_25E3F0D90(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B388ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_25E3F0DF8()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_25E4258F0();
  uint64_t v4 = v3;

  if (sub_25E4258F0() == v2 && v5 == v4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_25E426160();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      if (sub_25E4258F0() == v2 && v8 == v4)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_25E426160();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      if (objc_msgSend(v0, sel_code) != (id)11
        && objc_msgSend(v0, sel_code) != (id)26
        && objc_msgSend(v0, sel_code) != (id)20)
      {
        uint64_t v12 = 17;
        return objc_msgSend(v0, sel_code) == (id)v12;
      }
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  if (objc_msgSend(v0, sel_code) == (id)259) {
    return 1;
  }
  uint64_t v12 = 256;
  return objc_msgSend(v0, sel_code) == (id)v12;
}

void sub_25E3F0F78(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v4 = a2;
    swift_bridgeObjectRetain();
    sub_25E425E20();
    type metadata accessor for ManagedRepresentation();
    sub_25E3FBE8C(&qword_26A6EDA48, (void (*)(uint64_t))type metadata accessor for ManagedRepresentation);
    sub_25E425BB0();
    a1 = v22;
    uint64_t v21 = v23;
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    id v11 = a2;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v19 = v5;
  int64_t v20 = (unint64_t)(v5 + 64) >> 6;
  if (a1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_29;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v21 + 8 * v16);
    uint64_t v14 = v6 + 1;
    if (!v17)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v20) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v21 + 8 * v14);
      if (!v17)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v20) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v21 + 8 * v14);
        if (!v17)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v20) {
            goto LABEL_32;
          }
          unint64_t v17 = *(void *)(v21 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v6 + 5;
            if (v6 + 5 >= v20) {
              goto LABEL_32;
            }
            unint64_t v17 = *(void *)(v21 + 8 * v14);
            if (!v17)
            {
              uint64_t v18 = v6 + 6;
              while (v20 != v18)
              {
                unint64_t v17 = *(void *)(v21 + 8 * v18++);
                if (v17)
                {
                  uint64_t v14 = v18 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_25E3FBE84();

              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
LABEL_29:
    id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v13);
    if (!v15) {
      goto LABEL_32;
    }
    while (1)
    {
      objc_msgSend(a2, sel_deleteObject_, v15, v19);

      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((a1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_25E425E50())
      {
        type metadata accessor for ManagedRepresentation();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v15 = v27;
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v27) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_25E3F1290(void *a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_25E4254F0();
  uint64_t v100 = *(void *)(v105 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v105);
  uint64_t v112 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v98 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v110 = (char *)&v98 - v15;
  if (objc_msgSend(a1, sel_isInserted))
  {
    objc_msgSend(a1, sel_setType_, *(unsigned __int8 *)(v2 + OBJC_IVAR___STKSticker_type));
    int64_t v16 = (void *)sub_25E4254A0();
    objc_msgSend(a1, sel_setIdentifier_, v16);
  }
  unint64_t v17 = (uint64_t *)(v4 + OBJC_IVAR___STKSticker_byteCount);
  swift_beginAccess();
  if (*v17 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_77;
  }
  if (*v17 > 0x7FFFFFFF)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  unint64_t v106 = a2;
  objc_msgSend(a1, sel_setByteCount_);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setName_, v18);

  uint64_t v19 = (uint64_t *)(v4 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  if (*v19 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (*v19 > 0x7FFFFFFF)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    swift_once();
    goto LABEL_24;
  }
  objc_msgSend(a1, sel_setEffect_);
  unint64_t v3 = v4 + OBJC_IVAR___STKSticker_metadata;
  swift_beginAccess();
  int64_t v20 = 0;
  unint64_t v21 = *(void *)(v3 + 8);
  if (v21 >> 60 != 15)
  {
    unint64_t v3 = *(void *)v3;
    sub_25E3CEAB0(v3, v21);
    int64_t v20 = (void *)sub_25E4253B0();
    sub_25E3CEB1C(v3, v21);
  }
  objc_msgSend(a1, sel_setMetadata_, v20);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setExternalURI_, v22);

  uint64_t v23 = v4 + OBJC_IVAR___STKSticker_accessibilityName;
  swift_beginAccess();
  if (*(void *)(v23 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
  }
  objc_msgSend(a1, sel_setAccessibilityName_, v24);

  uint64_t v25 = (void *)(v4 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  if (*v25)
  {
    unint64_t v26 = *(void **)(*v25 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
    id v27 = v26;
  }
  else
  {
    unint64_t v26 = 0;
  }
  objc_msgSend(a1, sel_setAttributionAdamID_, v26);

  if (*v25 && (unint64_t v3 = *(void *)(*v25 + OBJC_IVAR___STKStickerAttributionInfo_name + 8)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = 0;
  }
  objc_msgSend(a1, sel_setAttributionName_, v28);

  if (*v25
    && (uint64_t v29 = *v25 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier, swift_beginAccess(), *(void *)(v29 + 8)))
  {
    swift_bridgeObjectRetain();
    char v30 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = 0;
  }
  objc_msgSend(a1, sel_setAttributionBundleIdentifier_, v30);

  id v31 = (double *)(v4 + OBJC_IVAR___STKSticker_creationDate);
  swift_beginAccess();
  objc_msgSend(a1, sel_setCreationDate_, *v31);
  uint64_t v32 = (double *)(v4 + OBJC_IVAR___STKSticker_lastUsedDate);
  swift_beginAccess();
  objc_msgSend(a1, sel_setLastUsedDate_, *v32);
  uint64_t v33 = (double *)(v4 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  objc_msgSend(a1, sel_setLibraryIndex_, *v33);
  if (qword_26B388F00 != -1) {
    goto LABEL_81;
  }
LABEL_24:
  uint64_t v34 = qword_26B388EF8 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride;
  swift_beginAccess();
  if (*(unsigned char *)(v34 + 8)) {
    uint64_t v35 = 1;
  }
  else {
    uint64_t v35 = *(void *)v34;
  }
  if (v35 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v35 > 0x7FFFFFFF)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  objc_msgSend(a1, sel_setVersion_);
  uint64_t v36 = v4 + OBJC_IVAR___STKSticker_searchText;
  swift_beginAccess();
  if (*(void *)(v36 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = 0;
  }
  objc_msgSend(a1, sel_setSearchText_, v37, v98);

  uint64_t v38 = v4 + OBJC_IVAR___STKSticker_sanitizedPrompt;
  swift_beginAccess();
  if (*(void *)(v38 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
  }
  objc_msgSend(a1, sel_setSanitizedPrompt_, v39);

  id v40 = objc_msgSend(a1, sel_representations);
  id v41 = objc_msgSend(v40, sel_allObjects);

  uint64_t v42 = sub_25E425AC0();
  unint64_t v3 = sub_25E3F6210(v42);
  swift_bridgeObjectRelease();
  unint64_t v116 = sub_25E3F6520(MEMORY[0x263F8EE78]);
  if (!(v3 >> 62))
  {
    uint64_t v43 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_37;
  }
LABEL_84:
  swift_bridgeObjectRetain_n();
  uint64_t v43 = sub_25E425F80();
  swift_bridgeObjectRelease();
LABEL_37:
  unint64_t v44 = v106;
  uint64_t v98 = a1;
  uint64_t v99 = v4;
  if (v43)
  {
    char v111 = (void (**)(uint64_t, char *, uint64_t))(v100 + 32);
    uint64_t v114 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56);
    unint64_t v115 = v3 & 0xC000000000000001;
    long long v108 = (void (**)(char *, char *, uint64_t))(v100 + 16);
    os_log_type_t v109 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
    char v101 = (void (**)(char *, uint64_t))(v100 + 8);
    unint64_t v102 = v3;
    uint64_t v45 = 4;
    uint64_t v4 = v105;
    char v103 = v14;
    uint64_t v104 = isUniquelyReferenced_nonNull_native;
    uint64_t v113 = (void *)v43;
    while (1)
    {
      if (v115) {
        id v46 = (id)MEMORY[0x2611D6C30](v45 - 4, v3);
      }
      else {
        id v46 = *(id *)(v3 + 8 * v45);
      }
      uint64_t v47 = v46;
      a1 = (void *)(v45 - 3);
      if (__OFADD__(v45 - 4, 1))
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      id v48 = objc_msgSend(v46, sel_identifier);
      if (!v48) {
        break;
      }
      char v49 = v48;
      sub_25E4254C0();

      char v50 = *v111;
      (*v111)(isUniquelyReferenced_nonNull_native, v14, v4);
      (*v114)(isUniquelyReferenced_nonNull_native, 0, 1, v4);
      if ((*v109)(isUniquelyReferenced_nonNull_native, 1, v4) == 1) {
        goto LABEL_40;
      }
      uint64_t v51 = v110;
      v50((uint64_t)v110, (char *)isUniquelyReferenced_nonNull_native, v4);
      uint64_t v14 = v112;
      unint64_t v107 = *v108;
      v107(v112, v51, v4);
      id v52 = v47;
      unint64_t v53 = v116;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v117 = (void *)v53;
      unint64_t v3 = sub_25E3F7B34((uint64_t)v14);
      uint64_t v55 = *(void *)(v53 + 16);
      BOOL v56 = (v54 & 1) == 0;
      uint64_t v57 = v55 + v56;
      if (__OFADD__(v55, v56)) {
        goto LABEL_75;
      }
      char v58 = v54;
      if (*(void *)(v53 + 24) >= v57)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25E3F94A0();
        }
      }
      else
      {
        sub_25E3F9094(v57, isUniquelyReferenced_nonNull_native);
        unint64_t v59 = sub_25E3F7B34((uint64_t)v112);
        if ((v58 & 1) != (v60 & 1)) {
          goto LABEL_111;
        }
        unint64_t v3 = v59;
      }
      unsigned int v61 = v117;
      unint64_t v116 = (unint64_t)v117;
      if (v58)
      {
        uint64_t v62 = v117[7];
        uint64_t v63 = *(void **)(v62 + 8 * v3);
        *(void *)(v62 + 8 * v3) = v52;

        uint64_t v4 = v105;
      }
      else
      {
        v117[(v3 >> 6) + 8] |= 1 << v3;
        uint64_t v4 = v105;
        v107((char *)(v61[6] + *(void *)(v100 + 72) * v3), v112, v105);
        *(void *)(v61[7] + 8 * v3) = v52;
        uint64_t v64 = v61[2];
        BOOL v65 = __OFADD__(v64, 1);
        uint64_t v66 = v64 + 1;
        if (v65) {
          goto LABEL_76;
        }
        v61[2] = v66;
      }
      swift_bridgeObjectRelease();
      unsigned int v67 = *v101;
      (*v101)(v112, v4);
      v67(v110, v4);
      unint64_t v44 = v106;
      uint64_t v14 = v103;
      uint64_t isUniquelyReferenced_nonNull_native = v104;
      unint64_t v3 = v102;
LABEL_41:

      ++v45;
      if (a1 == v113) {
        goto LABEL_59;
      }
    }
    (*v114)(isUniquelyReferenced_nonNull_native, 1, 1, v4);
LABEL_40:
    sub_25E3CE8D4(isUniquelyReferenced_nonNull_native, &qword_26B389370);
    goto LABEL_41;
  }
LABEL_59:
  swift_bridgeObjectRelease_n();
  unint64_t v68 = v116;
  uint64_t v69 = swift_bridgeObjectRetain();
  sub_25E3F6714(v69);
  unint64_t v119 = v70;
  unint64_t v118 = MEMORY[0x263F8EE78];
  uint64_t v71 = (unint64_t *)(v99 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  unint64_t v72 = *v71;
  if (v72 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_25E425F80();
    if (!v73) {
      goto LABEL_86;
    }
  }
  else
  {
    uint64_t v73 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v73) {
      goto LABEL_86;
    }
  }
  if (v73 >= 1)
  {
    uint64_t v74 = 0;
    do
    {
      if ((v72 & 0xC000000000000001) != 0) {
        id v75 = (id)MEMORY[0x2611D6C30](v74, v72);
      }
      else {
        id v75 = *(id *)(v72 + 8 * v74 + 32);
      }
      uint64_t v76 = v75;
      if (*(void *)(v68 + 16)
        && (unint64_t v77 = sub_25E3F7B34((uint64_t)v75 + OBJC_IVAR___STKStickerRepresentation_identifier), (v78 & 1) != 0))
      {
        id v79 = *(id *)(*(void *)(v68 + 56) + 8 * v77);

        id v80 = v79;
      }
      else
      {
        type metadata accessor for ManagedRepresentation();
        id v80 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v44);
        id v79 = v80;
      }
      sub_25E3F68D4(v80);
      id v81 = v79;
      MEMORY[0x2611D67F0]();
      if (*(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25E425AF0();
      }
      sub_25E425B10();
      ++v74;
      sub_25E425AE0();

      unint64_t v68 = v116;
    }
    while (v73 != v74);
LABEL_86:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v82 = v119;
    id v83 = v44;
    uint64_t v84 = swift_bridgeObjectRetain();
    sub_25E3F0F78(v84, v83);
    unint64_t v116 = v82;
    swift_bridgeObjectRelease();
    unint64_t v85 = v118;
    if (v118 >> 62) {
      goto LABEL_104;
    }
    uint64_t v86 = *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v86)
    {
      while (v86 >= 1)
      {
        uint64_t v87 = 0;
        while (1)
        {
          id v88 = (v85 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2611D6C30](v87, v85)
              : *(id *)(v85 + 8 * v87 + 32);
          os_log_type_t v89 = v88;
          if (v87 == 0x80000000) {
            break;
          }
          objc_msgSend(v88, sel_setIndex_, v87);

          if (v86 == ++v87) {
            goto LABEL_95;
          }
        }
        __break(1u);
LABEL_104:
        swift_bridgeObjectRetain_n();
        uint64_t v86 = sub_25E425F80();
        if (!v86) {
          goto LABEL_95;
        }
      }
      goto LABEL_109;
    }
LABEL_95:
    swift_bridgeObjectRelease_n();
    if (v85 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v90 = sub_25E425F80();
      unint64_t v91 = v98;
      if (!v90) {
        goto LABEL_107;
      }
    }
    else
    {
      uint64_t v90 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      unint64_t v91 = v98;
      if (!v90) {
        goto LABEL_107;
      }
    }
    if (v90 < 1) {
      goto LABEL_110;
    }
    for (uint64_t i = 0; i != v90; ++i)
    {
      if ((v85 & 0xC000000000000001) != 0) {
        id v93 = (id)MEMORY[0x2611D6C30](i, v85);
      }
      else {
        id v93 = *(id *)(v85 + 8 * i + 32);
      }
      unint64_t v94 = v93;
      objc_msgSend(v93, sel_setSticker_, v91, v98);
    }
LABEL_107:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_25E3F62EC(v85);
    swift_bridgeObjectRelease();
    id v95 = objc_allocWithZone(MEMORY[0x263EFFA08]);
    uint64_t v96 = (void *)sub_25E425AB0();
    swift_bridgeObjectRelease();
    id v97 = objc_msgSend(v95, sel_initWithArray_, v96);

    objc_msgSend(v91, sel_setRepresentations_, v97);
    return;
  }
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  sub_25E4261B0();
  __break(1u);
}

uint64_t sub_25E3F21E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_25E3F972C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_25E3F6D74(v6);
  return sub_25E425F20();
}

uint64_t sub_25E3F225C()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26B38BBE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B38BBE0);
  return sub_25E425690();
}

uint64_t sub_25E3F22D4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v26 = a2;
  uint64_t v5 = sub_25E425C50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25E4256F0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_25E425C40();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for StickerContainer(0);
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  sub_25E3FBCB4(a1, v3 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_storeType, type metadata accessor for CoreDataDataMapper.StoreType);
  sub_25E3FBCB4(a1, (uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
  uint64_t v15 = v12[7];
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33690]), sel_init);
  int64_t v16 = &v14[v12[9]];
  *(_OWORD *)int64_t v16 = xmmword_25E4275F0;
  v16[16] = 1;
  uint64_t v17 = v12[10];
  sub_25E3CE930(0, &qword_26B388D38);
  sub_25E425C30();
  sub_25E4256E0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F130], v5);
  *(void *)&v14[v17] = sub_25E425C70();
  v14[v12[8]] = v26;
  uint64_t v18 = v3 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  sub_25E3FC01C((uint64_t)v14, v3 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container);
  swift_beginAccess();
  uint64_t v19 = *(void **)(v18 + v12[7]);
  objc_msgSend(v19, sel_lock);
  type metadata accessor for StickerContainer.LoadMethod();
  swift_initStackObject();
  sub_25E3C5540(v18, *(unsigned char *)(v18 + v12[8]), v27);
  swift_release();
  uint64_t v20 = v27[0];
  uint64_t v21 = v27[1];
  char v22 = v28;
  uint64_t v23 = v18 + v12[9];
  sub_25E3CA64C(*(void **)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
  *(void *)uint64_t v23 = v20;
  *(void *)(v23 + 8) = v21;
  *(unsigned char *)(v23 + 16) = v22;
  objc_msgSend(v19, sel_unlock);
  swift_endAccess();
  sub_25E3FBD40(v25, type metadata accessor for CoreDataDataMapper.StoreType);
  return v3;
}

uint64_t sub_25E3F264C(uint64_t a1)
{
  return sub_25E3F33C8(a1, (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, _OWORD *, uint64_t))sub_25E3F9E84);
}

uint64_t sub_25E3F2678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  sub_25E3FBCB4(v12, (uint64_t)v11, type metadata accessor for StickerContainer);
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v13 + 64) = v14;
  *(unsigned char *)(v13 + 80) = *(unsigned char *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v13 + 32) = v15;
  *(void *)(v13 + 88) = a3;
  sub_25E3FBC0C(a2);
  uint64_t v16 = sub_25E3C0210((uint64_t)sub_25E3FBFFC, v13);
  if (v4)
  {
    sub_25E3FBD40((uint64_t)v11, type metadata accessor for StickerContainer);
    return swift_release();
  }
  else
  {
    uint64_t v18 = v16;
    swift_release();
    *a4 = v18;
    return sub_25E3FBD40((uint64_t)v11, type metadata accessor for StickerContainer);
  }
}

uint64_t sub_25E3F2800@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v6 = sub_25E4256A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_26B388EE0;
  id v11 = a1;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_26B38BBE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  _s5CountCMa();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v9, v6);
  id v14 = objc_allocWithZone(MEMORY[0x263EFF260]);
  sub_25E3FBC0C(a2);
  long long v15 = (void *)sub_25E4258C0();
  id v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  sub_25E3FBC0C(a2);
  sub_25E41D80C(a2, v16);
  sub_25E3FBABC(a2);
  sub_25E3FBABC(a2);
  uint64_t v17 = sub_25E3DD438();
  if (v3)
  {

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    return swift_deallocClassInstance();
  }
  else
  {
    uint64_t v19 = v17;

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    uint64_t result = swift_deallocClassInstance();
    *uint64_t v21 = v19;
  }
  return result;
}

uint64_t sub_25E3F2AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v7 = a6();
  sub_25E3FBABC(a4);
  swift_release();
  return v7;
}

void sub_25E3F2B34(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  swift_retain();
  id v12 = a4;
  uint64_t v13 = v6;
  sub_25E3F4330(a3, v12, a5);
  if (!v6) {
    goto LABEL_14;
  }
  id v41 = v6;
  id v14 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
  sub_25E3CE930(0, &qword_26A6EDA30);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  id v15 = v40;
  if (!sub_25E3F0DF8())
  {

LABEL_10:
    swift_willThrow();
LABEL_14:

    goto LABEL_15;
  }

  if (a1 <= 0)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *char v22 = 6;
    swift_willThrow();

    goto LABEL_14;
  }
  if (qword_26B388EE0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_25E4256A0();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B38BBE0);
  uint64_t v17 = v40;
  uint64_t v18 = sub_25E425680();
  os_log_type_t v19 = sub_25E425BF0();
  uint64_t v36 = v17;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v34 = a2;
    os_log_type_t type = v19;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    uint64_t v39 = v17;
    uint64_t v21 = v17;
    sub_25E425D80();
    void *v29 = v17;

    a2 = v34;
    _os_log_impl(&dword_25E3BB000, v18, type, "Database is corrupted, attempting recovery after %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v29, -1, -1);
    MEMORY[0x2611D77B0](v20, -1, -1);
  }
  else
  {

    uint64_t v18 = v17;
  }

  uint64_t v23 = a2 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  char v24 = sub_25E3C4200();
  if (v24)
  {
    uint64_t v35 = (int *)type metadata accessor for StickerContainer(0);
    typea = *(void **)(v23 + v35[5]);
    objc_msgSend(typea, sel_lock);
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_25E3C5540(v23, *(unsigned char *)(v23 + v35[6]), v37);
    swift_release();
    uint64_t v25 = v37[0];
    buf = (uint8_t *)v37[1];
    char v30 = v38;
    uint64_t v26 = v23 + v35[7];
    sub_25E3CA64C(*(void **)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
    *(void *)uint64_t v26 = v25;
    *(void *)(v26 + 8) = buf;
    *(unsigned char *)(v26 + 16) = v30;
    objc_msgSend(typea, sel_unlock);
  }
  swift_endAccess();
  uint64_t v27 = a1 - 1;
  swift_retain();
  id v28 = v12;
  sub_25E3F2B34(v27, a2, a3, v28, a5);

LABEL_15:
  swift_release_n();
}

uint64_t sub_25E3F2F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25E3F3E14(a3, a4, a5);
  if (!v5) {
    goto LABEL_17;
  }
  id v36 = v5;
  id v11 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
  sub_25E3CE930(0, &qword_26A6EDA30);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:

    swift_willThrow();
    goto LABEL_17;
  }
  id v12 = v35;
  if (!sub_25E3F0DF8())
  {

    goto LABEL_10;
  }

  if (a1 <= 0)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *os_log_type_t v19 = 6;
    swift_willThrow();
  }
  else
  {
    if (qword_26B388EE0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_25E4256A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B38BBE0);
    id v14 = v35;
    id v15 = sub_25E425680();
    os_log_type_t v16 = sub_25E425BF0();
    id v31 = v14;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v29 = a2;
      os_log_type_t type = v16;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      char v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412290;
      uint64_t v34 = v14;
      uint64_t v18 = v14;
      sub_25E425D80();
      *char v24 = v14;

      a2 = v29;
      _os_log_impl(&dword_25E3BB000, v15, type, "Database is corrupted, attempting recovery after %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v24, -1, -1);
      MEMORY[0x2611D77B0](v17, -1, -1);
    }
    else
    {

      id v15 = v14;
    }

    uint64_t v20 = a2 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
    swift_beginAccess();
    if (sub_25E3C4200())
    {
      char v30 = (int *)type metadata accessor for StickerContainer(0);
      typea = *(void **)(v20 + v30[5]);
      objc_msgSend(typea, sel_lock);
      type metadata accessor for StickerContainer.LoadMethod();
      swift_initStackObject();
      sub_25E3C5540(v20, *(unsigned char *)(v20 + v30[6]), v32);
      swift_release();
      uint64_t v21 = v32[0];
      buf = (uint8_t *)v32[1];
      char v25 = v33;
      uint64_t v22 = v20 + v30[7];
      sub_25E3CA64C(*(void **)v22, *(void *)(v22 + 8), *(unsigned char *)(v22 + 16));
      *(void *)uint64_t v22 = v21;
      *(void *)(v22 + 8) = buf;
      *(unsigned char *)(v22 + 16) = v25;
      objc_msgSend(typea, sel_unlock);
    }
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_25E3F2F4C(a1 - 1, a2, a3, a4, a5);
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_release_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E3F3350(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = sub_25E3FA2C0();
  swift_release();

  return v5;
}

uint64_t sub_25E3F339C(uint64_t a1)
{
  return sub_25E3F33C8(a1, (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, _OWORD *, uint64_t))sub_25E3F9A48);
}

uint64_t sub_25E3F33C8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *, uint64_t *, _OWORD *, uint64_t))
{
  uint64_t v4 = *v2;
  long long v5 = *(_OWORD *)(a1 + 48);
  void v10[2] = *(_OWORD *)(a1 + 32);
  v10[3] = v5;
  char v11 = *(unsigned char *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v6;
  uint64_t v7 = v4;
  swift_retain();
  sub_25E3FBC0C((uint64_t)v10);
  uint64_t v8 = a2(1, v2, v2, v10, v7);
  sub_25E3FBABC((uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_25E3F3490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  sub_25E3FBCB4(v12, (uint64_t)v11, type metadata accessor for StickerContainer);
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v13 + 64) = v14;
  *(unsigned char *)(v13 + 80) = *(unsigned char *)(a2 + 64);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v13 + 32) = v15;
  *(void *)(v13 + 88) = a3;
  sub_25E3FBC0C(a2);
  uint64_t v16 = sub_25E3C0CE8((uint64_t)sub_25E3FBD20, v13);
  if (v4)
  {
    sub_25E3FBD40((uint64_t)v11, type metadata accessor for StickerContainer);
    return swift_release();
  }
  else
  {
    uint64_t v18 = v16;
    swift_release();
    *a4 = v18;
    return sub_25E3FBD40((uint64_t)v11, type metadata accessor for StickerContainer);
  }
}

uint64_t sub_25E3F3618@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v24 = a3;
  uint64_t v6 = sub_25E4256A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_26B388EE0;
  id v11 = a1;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v6, (uint64_t)qword_26B38BBE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  _s5FetchCMa();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v9, v6);
  id v14 = objc_allocWithZone(MEMORY[0x263EFF260]);
  sub_25E3FBC0C(a2);
  long long v15 = (void *)sub_25E4258C0();
  id v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  sub_25E3FBC0C(a2);
  sub_25E41D80C(a2, v16);
  sub_25E3FBABC(a2);
  sub_25E3FBABC(a2);
  uint64_t v17 = sub_25E3FC090(v16);
  if (v3)
  {

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    return swift_deallocClassInstance();
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 48);
    id v22[2] = *(_OWORD *)(a2 + 32);
    v22[3] = v18;
    char v23 = *(unsigned char *)(a2 + 64);
    long long v19 = *(_OWORD *)(a2 + 16);
    v22[0] = *(_OWORD *)a2;
    v22[1] = v19;
    uint64_t v21 = sub_25E3FC2B0((unint64_t)v17, (uint64_t)v22);

    swift_bridgeObjectRelease();
    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v6);
    uint64_t result = swift_deallocClassInstance();
    *char v24 = v21;
  }
  return result;
}

uint64_t sub_25E3F3944(void *a1)
{
  uint64_t v3 = *v1;
  swift_retain();
  id v4 = a1;
  uint64_t v5 = sub_25E3FA2C0(1, (uint64_t)v1, (uint64_t)v1, v4, v3);

  swift_release();
  return v5;
}

uint64_t sub_25E3F39E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  sub_25E3FBCB4(v12, (uint64_t)v11, type metadata accessor for StickerContainer);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  id v14 = a2;
  uint64_t v15 = sub_25E3C17BC((uint64_t)sub_25E3FBF8C, v13);
  if (v4)
  {
    sub_25E3FBD40((uint64_t)v11, type metadata accessor for StickerContainer);
    return swift_release();
  }
  else
  {
    uint64_t v17 = v15;
    swift_release();
    *a4 = v17;
    return sub_25E3FBD40((uint64_t)v11, type metadata accessor for StickerContainer);
  }
}

uint64_t sub_25E3F3B4C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_25E4256A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = qword_26B388EE0;
  id v12 = a1;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v7, (uint64_t)qword_26B38BBE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
  _s3AddCMa();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v10, v7);
  sub_25E3D93D8();
  if (v3) {
    return swift_release();
  }
  type metadata accessor for ManagedSticker();
  uint64_t v15 = a3;
  id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v12);
  sub_25E3F1290(v16, v12);

  sub_25E3D9794();
  id v17 = a2;

  swift_setDeallocating();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v7);
  uint64_t result = swift_deallocClassInstance();
  void *v15 = v17;
  return result;
}

uint64_t sub_25E3F3DA4(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_25E3F2F4C(1, (uint64_t)v1, (uint64_t)v1, a1, v3);
}

uint64_t sub_25E3F3E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  sub_25E3FBCB4(v9, (uint64_t)v8, type metadata accessor for StickerContainer);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  swift_bridgeObjectRetain();
  sub_25E3C2284((uint64_t)sub_25E3FBF70, v10);
  sub_25E3FBD40((uint64_t)v8, type metadata accessor for StickerContainer);
  return swift_release();
}

uint64_t sub_25E3F3F58(void *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_25E425620();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E4256A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v25 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = qword_26B388EE0;
  id v26 = a1;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v5, (uint64_t)qword_26B38BBE0);
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v17(v14, v16, v5);
  _s6RemoveCMa();
  uint64_t v18 = swift_allocObject();
  char v25 = v14;
  uint64_t v19 = v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter;
  v17(v12, v16, v5);
  v17(v9, (uint64_t)v12, v5);
  uint64_t v20 = v27;
  sub_25E425600();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v21(v12, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v19, v20, v29);
  swift_release();
  uint64_t v22 = v25;
  char v23 = v26;
  *(void *)(v18 + 16) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v22, v5);
  sub_25E41C768(v30);

  swift_setDeallocating();
  v21((char *)(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger), v5);
  sub_25E3FBD40(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter, (uint64_t (*)(void))type metadata accessor for StickerSignposter);
  return swift_deallocClassInstance();
}

void sub_25E3F42BC(void *a1)
{
  uint64_t v3 = *v1;
  swift_retain();
  sub_25E3F2B34(1, (uint64_t)v1, (uint64_t)v1, a1, v3);
}

uint64_t sub_25E3F4330(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  sub_25E3FBCB4(v9, (uint64_t)v8, type metadata accessor for StickerContainer);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  id v11 = a2;
  sub_25E3C2284((uint64_t)sub_25E3FBE58, v10);
  sub_25E3FBD40((uint64_t)v8, type metadata accessor for StickerContainer);
  return swift_release();
}

void sub_25E3F4470(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_25E4256A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = qword_26B388EE0;
  id v10 = a1;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_26B38BBE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  _s6UpdateCMa();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v12 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v8, v5);
  uint64_t v13 = sub_25E4226F4(a2 + OBJC_IVAR___STKSticker_identifier);
  if (v2)
  {
    swift_release();
  }
  else
  {
    uint64_t v14 = v13;
    sub_25E3F1290(v13, v10);
    sub_25E422D00();

    swift_setDeallocating();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v5);
    swift_deallocClassInstance();
  }
}

uint64_t sub_25E3F46A8(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for StickerContainer(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)v1 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  sub_25E3FBCB4(v7, (uint64_t)v6, type metadata accessor for StickerContainer);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25E3FBDD8;
  *(void *)(v9 + 24) = v8;
  id v10 = a1;
  sub_25E3BF744((uint64_t)sub_25E3FBE18, v9);
  swift_release();
  return sub_25E3FBD40((uint64_t)v6, type metadata accessor for StickerContainer);
}

uint64_t sub_25E3F482C(void *a1, char *a2)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_25E425620();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x270FA5388](v3);
  id v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E4256A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v24 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = qword_26B388EE0;
  id v25 = a1;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v5, (uint64_t)qword_26B38BBE0);
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v17(v14, v16, v5);
  _s5TouchCMa();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter;
  v17(v12, v16, v5);
  v17(v9, (uint64_t)v12, v5);
  uint64_t v20 = v26;
  sub_25E425600();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v21(v12, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v19, v20, v28);
  swift_release();
  uint64_t v22 = v25;
  *(void *)(v18 + 16) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger, v14, v5);
  sub_25E3CF0BC(v29);

  swift_setDeallocating();
  v21((char *)(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger), v5);
  sub_25E3FBD40(v18 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper5Touch_signposter, (uint64_t (*)(void))type metadata accessor for StickerSignposter);
  return swift_deallocClassInstance();
}

uint64_t sub_25E3F4B7C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_25E4254F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  char v27 = 1;
  uint64_t v26 = 2;
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(&v27, 0, (void **)&v26, 0, 0, 0, 1, 8, (uint64_t)v28, 0);
  swift_retain();
  sub_25E3FBC0C((uint64_t)v28);
  unint64_t v9 = sub_25E3F9A48(1, (uint64_t)v0, (uint64_t)v0, (uint64_t)v28, v1);
  sub_25E3FBABC((uint64_t)v28);
  swift_release();
  unint64_t v24 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E3EAA7C(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = (void *)v26;
  unint64_t v13 = v24;
  uint64_t v25 = v10;
  if ((v24 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = MEMORY[0x2611D6C30](v14, v13);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v15 + OBJC_IVAR___STKSticker_identifier, v2);
      swift_unknownObjectRelease();
      uint64_t v26 = (uint64_t)v12;
      unint64_t v17 = v12[2];
      unint64_t v16 = v12[3];
      if (v17 >= v16 >> 1)
      {
        sub_25E3EAA7C(v16 > 1, v17 + 1, 1);
        uint64_t v12 = (void *)v26;
      }
      ++v14;
      void v12[2] = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v17, v8, v2);
      unint64_t v13 = v24;
    }
    while (v25 != v14);
  }
  else
  {
    uint64_t v18 = 0;
    char v23 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v23(v6, *(void *)(v13 + 8 * v18 + 32) + OBJC_IVAR___STKSticker_identifier, v2);
      uint64_t v26 = (uint64_t)v12;
      unint64_t v20 = v12[2];
      unint64_t v19 = v12[3];
      if (v20 >= v19 >> 1)
      {
        sub_25E3EAA7C(v19 > 1, v20 + 1, 1);
        unint64_t v13 = v24;
        uint64_t v12 = (void *)v26;
      }
      ++v18;
      void v12[2] = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v20, v6, v2);
    }
    while (v25 != v18);
  }
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_26B388F38 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for StickerReindexer(0);
  __swift_project_value_buffer(v21, (uint64_t)qword_26B388F18);
  swift_beginAccess();
  StickerReindexer.reindexStickers(with:)((Swift::OpaquePointer)v12);
  swift_endAccess();
  sub_25E3FBABC((uint64_t)v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E3F5134()
{
  sub_25E3FBD40(v0 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_storeType, type metadata accessor for CoreDataDataMapper.StoreType);
  sub_25E3FBD40(v0 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container, type metadata accessor for StickerContainer);
  return swift_deallocClassInstance();
}

uint64_t sub_25E3F51D0()
{
  return type metadata accessor for CoreDataDataMapper(0);
}

uint64_t type metadata accessor for CoreDataDataMapper(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B3895A0);
}

uint64_t sub_25E3F51F8()
{
  uint64_t result = type metadata accessor for CoreDataDataMapper.StoreType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StickerContainer(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for CoreDataDataMapper.StoreType(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B3895D0);
}

uint64_t sub_25E3F52E4(uint64_t a1)
{
  return sub_25E3F264C(a1);
}

uint64_t sub_25E3F5308(uint64_t a1)
{
  return sub_25E3F339C(a1);
}

uint64_t sub_25E3F532C(void *a1)
{
  return sub_25E3F3944(a1);
}

uint64_t sub_25E3F5350(uint64_t a1)
{
  return sub_25E3F3DA4(a1);
}

void sub_25E3F5374(void *a1)
{
}

uint64_t sub_25E3F5398(void *a1)
{
  return sub_25E3F46A8(a1);
}

uint64_t sub_25E3F53C4()
{
  return sub_25E3F4B7C();
}

uint64_t sub_25E3F53F0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  uint64_t v2 = sub_25E4256A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_25E3F5498()
{
  return type metadata accessor for CoreDataDataMapper.ExtractedMethod(0);
}

uint64_t type metadata accessor for CoreDataDataMapper.ExtractedMethod(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B389568);
}

uint64_t sub_25E3F54C0()
{
  uint64_t result = sub_25E4256A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25E3F5560(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_25E425390();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_25E3F56AC(uint64_t a1)
{
  uint64_t v2 = sub_25E425390();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_25E3F577C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_25E3F588C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_25E3F5A00(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_25E3F5B10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_25E3F5C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E3F5C98);
}

uint64_t sub_25E3F5C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425390();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_25E3F5D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E3F5D18);
}

uint64_t sub_25E3F5D18(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_25E3F5D9C(uint64_t a1)
{
  uint64_t v2 = sub_25E425390();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_25E3F5E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425390();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_25E3F5E74()
{
  uint64_t result = sub_25E425390();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t sub_25E3F5EEC(void **a1, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = *a1;
  if (!*a1)
  {
    if (a2 >> 62) {
      goto LABEL_20;
    }
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; uint64_t v5 = sub_25E425F80())
    {
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2611D6C30](v6 - 4, v2) : *(id *)(v2 + 8 * v6);
        uint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        if (objc_msgSend(v7, sel_isPreferred))
        {
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B389538);
          uint64_t v10 = swift_allocObject();
          *(_OWORD *)(v10 + 16) = xmmword_25E4280D0;
          *(void *)(v10 + 32) = v8;
          uint64_t v13 = v10;
          sub_25E425AE0();
          return v13;
        }

        ++v6;
        if (v9 == v5) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  if (v3 == (void *)1)
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  if (v3 == (void *)2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  void v12[2] = sub_25E3FBC8C;
  uint64_t v12[3] = MEMORY[0x270FA5388](v4);
  swift_bridgeObjectRetain();
  sub_25E3D44C0(v3);
  unint64_t v2 = sub_25E3DF328(v2, sub_25E3FBC94, (uint64_t)v12);
  swift_release();
  return v2;
}

uint64_t sub_25E3F60E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_25E3EA9E0(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389550);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E3EA9E0(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_25E3EA9E0(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_25E3FBE74(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E3F6210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x263F8EE78];
    sub_25E425F30();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_25E3CC4A8(v4, (uint64_t)&v5);
      type metadata accessor for ManagedRepresentation();
      swift_dynamicCast();
      sub_25E425F10();
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_25E3F62EC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E3EA9E0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x2611D6C30](i, a1);
        type metadata accessor for ManagedRepresentation();
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E3EA9E0(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_25E3EA9E0(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_25E3FBE74(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      long long v8 = (id *)(a1 + 32);
      type metadata accessor for ManagedRepresentation();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E3EA9E0(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_25E3EA9E0(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_25E3FBE74(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_25E3F6520(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA38);
  uint64_t v6 = sub_25E425FC0();
  unint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25E3FBED4(v12, (uint64_t)v5, &qword_26A6EDA50);
    unint64_t result = sub_25E3F7B34((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_25E4254F0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_25E3F6714(uint64_t a1)
{
  type metadata accessor for ManagedRepresentation();
  sub_25E3FBE8C(&qword_26A6EDA48, (void (*)(uint64_t))type metadata accessor for ManagedRepresentation);
  int64_t v2 = 0;
  v13[1] = (id)sub_25E425BA0();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_25E3F7BCC(v13, *(id *)(*(void *)(a1 + 56) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

id sub_25E3F68D4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_25E4254A0();
  objc_msgSend(a1, sel_setIdentifier_, v4);

  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  uint64_t v7 = *v5;
  unint64_t v6 = v5[1];
  sub_25E3CEAB0(v7, v6);
  unint64_t v8 = (void *)sub_25E4253B0();
  sub_25E3CEA28(v7, v6);
  objc_msgSend(a1, sel_setData_, v8);

  sub_25E425590();
  unint64_t v9 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setUti_, v9);

  int64_t v10 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  swift_beginAccess();
  if (*v10 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (*v10 <= 0x7FFFFFFF)
  {
    objc_msgSend(a1, sel_setByteCount_);
    uint64_t v11 = v2 + OBJC_IVAR___STKStickerRepresentation_size;
    objc_msgSend(a1, sel_setSize_w_, *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size));
    objc_msgSend(a1, sel_setSize_h_, *(double *)(v11 + 8));
    swift_beginAccess();
    swift_bridgeObjectRetain();
    int64_t v12 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setRole_, v12);

    uint64_t v13 = (unsigned __int8 *)(v2 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
    swift_beginAccess();
    objc_msgSend(a1, sel_setIsPreferred_, *v13);
    if (qword_26B388F00 == -1) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_4:
  uint64_t v14 = qword_26B388EF8 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
  id result = (id)swift_beginAccess();
  if (*(unsigned char *)(v14 + 8)) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = *(void *)v14;
  }
  if (v16 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v16 <= 0x7FFFFFFF)
  {
    return objc_msgSend(a1, sel_setVersion_);
  }
  __break(1u);
  return result;
}

id sub_25E3F6BAC(uint64_t a1, void *a2)
{
  sub_25E3FBED4(a1, (uint64_t)v11, &qword_26B389560);
  uint64_t v3 = v12;
  if (v12)
  {
    uint64_t v4 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v5 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_25E426150();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(a2, sel_evaluateWithObject_, v8);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_25E3F6CF8(void *a1, uint64_t (*a2)(void *))
{
  void v7[3] = type metadata accessor for ManagedRepresentation();
  v7[0] = a1;
  id v4 = a1;
  char v5 = a2(v7);
  sub_25E3CE8D4((uint64_t)v7, &qword_26B389560);
  return v5 & 1;
}

void sub_25E3F6D74(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_25E426130();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_25E3F74D8(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  uint64_t v103 = v4;
  uint64_t v98 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    uint64_t v110 = MEMORY[0x263F8EE78];
    os_log_type_t v109 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v92 = *v98;
        do
        {
          unint64_t v93 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v92) {
            goto LABEL_139;
          }
          uint64_t v94 = *(void *)&v8[16 * v93 + 32];
          uint64_t v95 = *(void *)&v8[16 * v11 + 24];
          sub_25E3F75CC((id *)(v92 + 8 * v94), (id *)(v92 + 8 * *(void *)&v8[16 * v11 + 16]), v92 + 8 * v95, v109);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_25E3F7AA8((uint64_t)v8);
          }
          if (v93 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          uint64_t v96 = &v8[16 * v93 + 32];
          *(void *)uint64_t v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v8 + 2);
          if (v11 > v97) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v97 - v11));
          *((void *)v8 + 2) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_25E425AE0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for ManagedRepresentation();
    uint64_t v7 = sub_25E425B00();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    os_log_type_t v109 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v110 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v99 = *a1 - 8;
  uint64_t v100 = *a1 + 16;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v107 = v12;
    if (v9 < v3)
    {
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      signed int v104 = objc_msgSend(v14, sel_index);
      signed int v16 = objc_msgSend(v15, sel_index);

      uint64_t v3 = v106;
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v106)
      {
        char v101 = v8;
        uint64_t v17 = (id *)(v100 + 8 * v12);
        while (1)
        {
          uint64_t v18 = *(v17 - 1);
          id v19 = *v17;
          id v20 = v18;
          int v21 = objc_msgSend(v19, sel_index);
          LODWORD(v18) = objc_msgSend(v20, sel_index);

          if (v104 < v16 == v21 >= (int)v18) {
            break;
          }
          ++v9;
          ++v17;
          uint64_t v3 = v106;
          if (v106 == v9)
          {
            uint64_t v9 = v106;
            uint64_t v8 = v101;
            goto LABEL_22;
          }
        }
        uint64_t v8 = v101;
        uint64_t v3 = v106;
LABEL_22:
        uint64_t v12 = v107;
      }
      if (v104 < v16)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          uint64_t v22 = (uint64_t *)(v99 + 8 * v9);
          uint64_t v23 = v9;
          uint64_t v24 = v12;
          uint64_t v25 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v24 != --v23)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v26 = *v25;
              uint64_t *v25 = *v22;
              *uint64_t v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v103) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_25E3F78EC(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v39 = *((void *)v8 + 2);
    unint64_t v38 = *((void *)v8 + 3);
    unint64_t v11 = v39 + 1;
    if (v39 >= v38 >> 1) {
      uint64_t v8 = sub_25E3F78EC((char *)(v38 > 1), v39 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    id v40 = v8 + 32;
    id v41 = &v8[16 * v39 + 32];
    *(void *)id v41 = v12;
    *((void *)v41 + 1) = v9;
    if (v39)
    {
      uint64_t v108 = v9;
      while (1)
      {
        unint64_t v42 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v47 = &v40[16 * v11];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_115;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_116;
          }
          unint64_t v54 = v11 - 2;
          uint64_t v55 = &v40[16 * v11 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_118;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_121;
          }
          if (v59 >= v50)
          {
            unint64_t v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_125;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v71 = *((void *)v8 + 4);
            uint64_t v72 = *((void *)v8 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_80;
          }
          uint64_t v44 = *((void *)v8 + 4);
          uint64_t v43 = *((void *)v8 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_117;
        }
        unint64_t v54 = v11 - 2;
        char v60 = &v40[16 * v11 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_120;
        }
        uint64_t v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_123;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_124;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_86:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v65) {
          goto LABEL_119;
        }
        uint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_122;
        }
        if (v76 < v64) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v82 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        id v83 = v8;
        uint64_t v84 = &v40[16 * v81];
        uint64_t v85 = *(void *)v84;
        uint64_t v86 = v40;
        unint64_t v87 = v42;
        id v88 = &v40[16 * v42];
        uint64_t v89 = *((void *)v88 + 1);
        uint64_t v90 = v82;
        sub_25E3F75CC((id *)(v82 + 8 * *(void *)v84), (id *)(v82 + 8 * *(void *)v88), v82 + 8 * v89, v109);
        if (v1) {
          goto LABEL_109;
        }
        if (v89 < v85) {
          goto LABEL_112;
        }
        if (v87 > *((void *)v83 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v84 = v85;
        *(void *)&v86[16 * v81 + 8] = v89;
        unint64_t v91 = *((void *)v83 + 2);
        if (v87 >= v91) {
          goto LABEL_114;
        }
        uint64_t v8 = v83;
        unint64_t v11 = v91 - 1;
        memmove(v88, v88 + 16, 16 * (v91 - 1 - v87));
        id v40 = v86;
        *((void *)v83 + 2) = v91 - 1;
        uint64_t v10 = v90;
        uint64_t v9 = v108;
        if (v91 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v106;
    if (v9 >= v106) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v103)) {
    goto LABEL_134;
  }
  if (v12 + v103 >= v3) {
    uint64_t v27 = v3;
  }
  else {
    uint64_t v27 = v12 + v103;
  }
  if (v27 >= v12)
  {
    if (v9 != v27)
    {
      unint64_t v102 = v8;
      uint64_t v28 = v99 + 8 * v9;
      uint64_t v105 = v27;
      do
      {
        uint64_t v29 = *(void **)(v10 + 8 * v9);
        uint64_t v30 = v12;
        uint64_t v31 = v28;
        do
        {
          uint64_t v32 = *(void **)v31;
          id v33 = v29;
          id v34 = v32;
          signed int v35 = objc_msgSend(v33, sel_index);
          signed int v36 = objc_msgSend(v34, sel_index);

          if (v35 >= v36) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          uint64_t v37 = *(void **)v31;
          uint64_t v29 = *(void **)(v31 + 8);
          *(void *)uint64_t v31 = v29;
          *(void *)(v31 + 8) = v37;
          v31 -= 8;
          ++v30;
        }
        while (v9 != v30);
        ++v9;
        v28 += 8;
        uint64_t v12 = v107;
      }
      while (v9 != v105);
      uint64_t v9 = v105;
      uint64_t v8 = v102;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_25E425F70();
  __break(1u);
}

void sub_25E3F74D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v17 = v6;
    while (1)
    {
      uint64_t v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      signed int v12 = objc_msgSend(v10, sel_index);
      signed int v13 = objc_msgSend(v11, sel_index);

      if (v12 >= v13)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v17 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v14 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_25E3F75CC(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  unint64_t v38 = __src;
  uint64_t v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      uint64_t v22 = &a4[v11];
      signed int v36 = (char *)v22;
      unint64_t v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        uint64_t v23 = (id *)(a3 - 8);
        uint64_t v24 = v4;
        uint64_t v32 = v5;
        do
        {
          signed int v35 = v4;
          uint64_t v25 = v23 + 1;
          uint64_t v26 = *--v24;
          id v27 = *(v22 - 1);
          id v28 = v26;
          signed int v29 = objc_msgSend(v27, sel_index);
          signed int v30 = objc_msgSend(v28, sel_index);

          if (v29 >= v30)
          {
            signed int v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              *uint64_t v23 = *(v22 - 1);
            }
            uint64_t v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35) {
              *uint64_t v23 = *v24;
            }
            unint64_t v38 = v24;
          }
          if (v24 <= v32) {
            break;
          }
          --v23;
          uint64_t v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    signed int v12 = &a4[v8];
    signed int v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      signed int v13 = a4;
      do
      {
        id v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        signed int v18 = objc_msgSend(v16, sel_index);
        signed int v19 = objc_msgSend(v17, sel_index);

        if (v18 >= v19)
        {
          int v21 = v14;
          if (v14 != v13) {
            *id v14 = *v13;
          }
          uint64_t v37 = ++v13;
          id v20 = v4;
        }
        else
        {
          id v20 = v4 + 1;
          int v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4) {
            *id v14 = *v4;
          }
        }
        uint64_t v5 = v21 + 1;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      unint64_t v38 = v5;
    }
LABEL_43:
    sub_25E3F79EC((void **)&v38, (const void **)&v37, &v36);
    return 1;
  }
  uint64_t result = sub_25E425FD0();
  __break(1u);
  return result;
}

char *sub_25E3F78EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED9A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  signed int v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E3F79EC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_25E425FD0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_25E3F7AA8(uint64_t a1)
{
  return sub_25E3F78EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_25E3F7ABC(uint64_t a1, uint64_t a2)
{
  sub_25E426220();
  sub_25E425960();
  uint64_t v4 = sub_25E426240();
  return sub_25E3F8C78(a1, a2, v4);
}

unint64_t sub_25E3F7B34(uint64_t a1)
{
  sub_25E4254F0();
  sub_25E3FBE8C(&qword_26A6EDAF0, MEMORY[0x263F07508]);
  uint64_t v2 = sub_25E425860();
  return sub_25E3F8D5C(a1, v2);
}

uint64_t sub_25E3F7BCC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_25E425E40();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for ManagedRepresentation();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_25E425E30();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_25E3F8A0C(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_25E3F85C8();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_25E3F8BF4((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_25E425D20();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      type metadata accessor for ManagedRepresentation();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_25E425D30();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        signed int v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_25E425D30();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_25E3F8F1C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_25E3F7E4C(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_25E425E60();

    if (v5)
    {
      uint64_t v6 = sub_25E3F8014();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_25E425D20();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for ManagedRepresentation();
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_25E425D30();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_25E425D30();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25E3F81A0();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_25E3F8868(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_25E3F8014()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_25E425E30();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_25E3F8A0C(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_25E425D20();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    type metadata accessor for ManagedRepresentation();
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_25E425D30();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_25E3F8868(v7);
      if (sub_25E425D30())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_25E425D30();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_25E3F81A0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E425E70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    id v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25E3F834C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA40);
  uint64_t v3 = sub_25E425E80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_25E425D20();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25E3F85C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA40);
  uint64_t v3 = sub_25E425E80();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_25E425D20();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_25E3F8868(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_25E425E00();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_25E425D20();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            int64_t v16 = (void *)(v15 + 8 * v2);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_25E3F8A0C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA40);
    uint64_t v2 = sub_25E425E90();
    uint64_t v14 = v2;
    sub_25E425E20();
    if (sub_25E425E50())
    {
      type metadata accessor for ManagedRepresentation();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_25E3F85C8();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_25E425D20();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_25E425E50());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

unint64_t sub_25E3F8BF4(uint64_t a1, uint64_t a2)
{
  sub_25E425D20();
  unint64_t result = sub_25E425E10();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_25E3F8C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25E426160() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25E426160() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25E3F8D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_25E4254F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_25E3FBE8C((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
      char v15 = sub_25E4258A0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

void sub_25E3F8F1C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_25E3F85C8();
  }
  else
  {
    if (v7 > v6)
    {
      sub_25E3F81A0();
      goto LABEL_14;
    }
    sub_25E3F834C();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_25E425D20();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for ManagedRepresentation();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_25E425D30();

    if (v12)
    {
LABEL_13:
      sub_25E4261A0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_25E425D30();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_25E3F9094(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25E4254F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA38);
  int v46 = a2;
  uint64_t v10 = sub_25E425FB0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_39;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  unint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  id v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v20++, 1)) {
      goto LABEL_41;
    }
    if (v20 >= v41) {
      break;
    }
    BOOL v25 = v42;
    unint64_t v26 = v42[v20];
    if (!v26)
    {
      int64_t v27 = v20 + 1;
      if (v20 + 1 >= v41)
      {
LABEL_32:
        swift_release();
        uint64_t v3 = v40;
        if ((v46 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v26 = v42[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v20 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            break;
          }
          if (v20 >= v41) {
            goto LABEL_32;
          }
          unint64_t v26 = v42[v20];
          ++v27;
          if (v26) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v20;
    }
LABEL_19:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_20:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_25E3FBE8C(&qword_26A6EDAF0, MEMORY[0x263F07508]);
    uint64_t result = sub_25E425860();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  BOOL v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

id sub_25E3F94A0()
{
  uint64_t v1 = v0;
  uint64_t v28 = sub_25E4254F0();
  uint64_t v2 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDA38);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25E425FA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_23:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v23 = v1;
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  uint64_t v14 = v28;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_25;
    }
    if (v10 >= v25)
    {
LABEL_21:
      id result = (id)swift_release();
      uint64_t v1 = v23;
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v14);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v14);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v25) {
    goto LABEL_21;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    ++v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_21;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_25E3F972C()
{
}

uint64_t sub_25E3F9740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425390();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CoreDataDataMapper.StoreType(0);
  MEMORY[0x270FA5388](v8 - 8);
  int64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B388EE8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_25E3FBCB4(a1, (uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
  sub_25E3FBCB4(a2, v15, type metadata accessor for CoreDataDataMapper.StoreType);
  unint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_25E3FBCB4((uint64_t)v14, (uint64_t)v10, type metadata accessor for CoreDataDataMapper.StoreType);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v18 = MEMORY[0x2611D6070](v10, v7);
      uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_25E3FBD40((uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1) {
      goto LABEL_9;
    }
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_25E3CE8D4((uint64_t)v14, (uint64_t *)&unk_26B388EE8);
    char v18 = 0;
    return v18 & 1;
  }
  sub_25E3FBD40((uint64_t)v14, type metadata accessor for CoreDataDataMapper.StoreType);
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_25E3F9A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  sub_25E3FBC0C(a4);
  sub_25E3F3490(a3, a4, a5, &v37);
  if (!v5)
  {
    swift_release();
    sub_25E3FBABC(a4);
    return v37;
  }
  id v36 = v5;
  id v11 = v5;
  id v12 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
  sub_25E3CE930(0, &qword_26A6EDA30);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  id v12 = v35;
  if (!sub_25E3F0DF8())
  {

LABEL_11:
    swift_willThrow();
LABEL_15:
    swift_release();
    sub_25E3FBABC(a4);
    return (uint64_t)v12;
  }

  if (a1 <= 0)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *uint64_t v19 = 6;
    swift_willThrow();

    goto LABEL_15;
  }
  if (qword_26B388EE0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_25E4256A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_26B38BBE0);
  uint64_t v14 = v35;
  uint64_t v15 = sub_25E425680();
  os_log_type_t v16 = sub_25E425BF0();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t type = v16;
    int v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)int v17 = 138412290;
    char v34 = v14;
    char v18 = v14;
    sub_25E425D80();
    *uint64_t v27 = v14;

    _os_log_impl(&dword_25E3BB000, v15, type, "Database is corrupted, attempting recovery after %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v27, -1, -1);
    MEMORY[0x2611D77B0](v17, -1, -1);
  }
  else
  {

    uint64_t v15 = v14;
  }

  uint64_t v20 = a2 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  char v21 = sub_25E3C4200();
  if (v21)
  {
    *(void *)typea = v14;
    unint64_t v23 = (int *)type metadata accessor for StickerContainer(0);
    buf = *(uint8_t **)(v20 + v23[5]);
    [(uint8_t *)buf lock];
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_25E3C5540(v20, *(unsigned char *)(v20 + v23[6]), v32);
    swift_release();
    uint64_t v24 = v32[0];
    uint64_t v28 = v32[1];
    char v26 = v33;
    uint64_t v25 = v20 + v23[7];
    sub_25E3CA64C(*(void **)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
    *(void *)uint64_t v25 = v24;
    *(void *)(v25 + 8) = v28;
    *(unsigned char *)(v25 + 16) = v26;
    uint64_t v14 = *(NSObject **)typea;
    [(uint8_t *)buf unlock];
  }
  swift_endAccess();
  swift_retain();
  sub_25E3FBC0C(a4);
  id v12 = (id)sub_25E3F2AE0(a1 - 1, a2, a3, a4, a5, sub_25E3F9A48);

  swift_release();
  sub_25E3FBABC(a4);
  return (uint64_t)v12;
}

uint64_t sub_25E3F9E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  sub_25E3FBC0C(a4);
  sub_25E3F2678(a3, a4, a5, &v37);
  if (!v5)
  {
    swift_release();
    sub_25E3FBABC(a4);
    return v37;
  }
  id v36 = v5;
  id v11 = v5;
  id v12 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
  sub_25E3CE930(0, &qword_26A6EDA30);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  id v12 = v35;
  if (!sub_25E3F0DF8())
  {

LABEL_11:
    swift_willThrow();
LABEL_15:
    swift_release();
    sub_25E3FBABC(a4);
    return (uint64_t)v12;
  }

  if (a1 <= 0)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *uint64_t v19 = 6;
    swift_willThrow();

    goto LABEL_15;
  }
  if (qword_26B388EE0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_25E4256A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_26B38BBE0);
  uint64_t v14 = v35;
  uint64_t v15 = sub_25E425680();
  os_log_type_t v16 = sub_25E425BF0();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t type = v16;
    int v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)int v17 = 138412290;
    char v34 = v14;
    char v18 = v14;
    sub_25E425D80();
    *uint64_t v27 = v14;

    _os_log_impl(&dword_25E3BB000, v15, type, "Database is corrupted, attempting recovery after %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v27, -1, -1);
    MEMORY[0x2611D77B0](v17, -1, -1);
  }
  else
  {

    uint64_t v15 = v14;
  }

  uint64_t v20 = a2 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  char v21 = sub_25E3C4200();
  if (v21)
  {
    *(void *)typea = v14;
    unint64_t v23 = (int *)type metadata accessor for StickerContainer(0);
    buf = *(uint8_t **)(v20 + v23[5]);
    [(uint8_t *)buf lock];
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_25E3C5540(v20, *(unsigned char *)(v20 + v23[6]), v32);
    swift_release();
    uint64_t v24 = v32[0];
    uint64_t v28 = v32[1];
    char v26 = v33;
    uint64_t v25 = v20 + v23[7];
    sub_25E3CA64C(*(void **)v25, *(void *)(v25 + 8), *(unsigned char *)(v25 + 16));
    *(void *)uint64_t v25 = v24;
    *(void *)(v25 + 8) = v28;
    *(unsigned char *)(v25 + 16) = v26;
    uint64_t v14 = *(NSObject **)typea;
    [(uint8_t *)buf unlock];
  }
  swift_endAccess();
  swift_retain();
  sub_25E3FBC0C(a4);
  id v12 = (id)sub_25E3F2AE0(a1 - 1, a2, a3, a4, a5, sub_25E3F9E84);

  swift_release();
  sub_25E3FBABC(a4);
  return (uint64_t)v12;
}

uint64_t sub_25E3FA2C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  swift_retain();
  id v12 = a4;
  uint64_t v13 = v6;
  sub_25E3F39E0(a3, v12, a5, &v41);
  if (!v6)
  {

    swift_release();
    return v41;
  }
  id v40 = v6;
  id v14 = v6;
  id v15 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
  sub_25E3CE930(0, &qword_26A6EDA30);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  id v15 = v39;
  if (!sub_25E3F0DF8())
  {

LABEL_11:
    swift_willThrow();
LABEL_15:

    swift_release();
    return (uint64_t)v15;
  }

  if (a1 <= 0)
  {
    sub_25E3CC3F0();
    swift_allocError();
    *int64_t v22 = 6;
    swift_willThrow();

    goto LABEL_15;
  }
  if (qword_26B388EE0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_25E4256A0();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B38BBE0);
  int v17 = v39;
  char v18 = sub_25E425680();
  os_log_type_t v19 = sub_25E425BF0();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t type = v19;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    uint64_t v38 = v17;
    char v21 = v17;
    sub_25E425D80();
    *uint64_t v31 = v17;

    _os_log_impl(&dword_25E3BB000, v18, type, "Database is corrupted, attempting recovery after %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v31, -1, -1);
    MEMORY[0x2611D77B0](v20, -1, -1);
  }
  else
  {

    char v18 = v17;
  }

  uint64_t v23 = a2 + OBJC_IVAR____TtC8Stickers18CoreDataDataMapper_container;
  swift_beginAccess();
  char v24 = sub_25E3C4200();
  if (v24)
  {
    *(void *)typea = v17;
    char v26 = (int *)type metadata accessor for StickerContainer(0);
    buf = *(uint8_t **)(v23 + v26[5]);
    [(uint8_t *)buf lock];
    type metadata accessor for StickerContainer.LoadMethod();
    swift_initStackObject();
    sub_25E3C5540(v23, *(unsigned char *)(v23 + v26[6]), v36);
    swift_release();
    uint64_t v27 = v36[0];
    uint64_t v32 = v36[1];
    char v30 = v37;
    uint64_t v28 = v23 + v26[7];
    sub_25E3CA64C(*(void **)v28, *(void *)(v28 + 8), *(unsigned char *)(v28 + 16));
    *(void *)uint64_t v28 = v27;
    *(void *)(v28 + 8) = v32;
    *(unsigned char *)(v28 + 16) = v30;
    int v17 = *(NSObject **)typea;
    [(uint8_t *)buf unlock];
  }
  swift_endAccess();
  swift_retain();
  id v29 = v12;
  id v15 = (id)sub_25E3F3350(a1 - 1, a2, a3, v29);

  swift_release();
  return (uint64_t)v15;
}

uint64_t sub_25E3FA6DC(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B388ED0);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v70 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25E4255B0();
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v71 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)&v61 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25E4254F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v76 = (char *)&v61 - v18;
  os_log_type_t v19 = (void *)a2[1];
  uint64_t v20 = (void *)a2[2];
  uint64_t v21 = a2[3];

  sub_25E3D446C(v20);
  swift_bridgeObjectRelease();
  id v22 = [a1 uti];
  if (!v22) {
    goto LABEL_12;
  }
  uint64_t v23 = v22;
  uint64_t v21 = sub_25E4258F0();
  uint64_t v74 = v24;

  id v25 = objc_msgSend(a1, sel_identifier);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_9;
  }
  char v26 = v25;
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v21;
  sub_25E4254C0();

  uint64_t v21 = *(void *)(v14 + 32);
  ((void (*)(char *, char *, uint64_t))v21)(v12, v17, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_25E3CE8D4((uint64_t)v12, &qword_26B389370);
LABEL_12:
    sub_25E3FBB04();
    swift_allocError();
    unsigned char *v38 = 2;
    swift_willThrow();

    return v21;
  }
  uint64_t v68 = v6;
  uint64_t v27 = v76;
  ((void (*)(char *, char *, uint64_t))v21)(v76, v12, v13);
  id v28 = objc_msgSend(a1, sel_data);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
    goto LABEL_12;
  }
  id v29 = v28;
  uint64_t v21 = sub_25E4253D0();
  unint64_t v31 = v30;

  id v32 = objc_msgSend(a1, sel_role);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    sub_25E3CEA28(v21, v31);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v76, v13);
    goto LABEL_12;
  }
  char v33 = v32;
  uint64_t v67 = v21;
  uint64_t v64 = sub_25E4258F0();
  uint64_t v65 = v34;

  unint64_t v66 = v31;
  unint64_t v35 = v31 >> 62;
  id v36 = v76;
  uint64_t v21 = 0;
  uint64_t v37 = v68;
  switch(v35)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v67), v67))
      {
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x25E3FAEE0);
      }
      uint64_t v21 = HIDWORD(v67) - (int)v67;
LABEL_17:
      if (v21 == (int)objc_msgSend(a1, sel_byteCount))
      {
        uint64_t v21 = (uint64_t)v70;
        sub_25E4255C0();
        uint64_t v42 = v73;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v21, 1, v37) == 1)
        {
          swift_bridgeObjectRelease();
          sub_25E3CE8D4(v21, (uint64_t *)&unk_26B388ED0);
          sub_25E3FBB04();
          swift_allocError();
          *uint64_t v43 = 1;
          swift_willThrow();
          sub_25E3CEA28(v67, v66);

          (*(void (**)(char *, uint64_t))(v14 + 8))(v76, v13);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v72, v21, v37);
          uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
          BOOL v70 = (char *)(v14 + 16);
          v69(v17, v76, v13);
          uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
          v74(v71, v72, v37);
          uint64_t v45 = (int)objc_msgSend(a1, sel_byteCount);
          objc_msgSend(a1, sel_size_w);
          uint64_t v47 = v46;
          objc_msgSend(a1, sel_size_h);
          uint64_t v49 = v48;
          unsigned int v63 = objc_msgSend(a1, sel_isPreferred);
          uint64_t v62 = (int)objc_msgSend(a1, sel_version);
          uint64_t v50 = (objc_class *)type metadata accessor for Sticker.Representation();
          uint64_t v51 = objc_allocWithZone(v50);
          v69(&v51[OBJC_IVAR___STKStickerRepresentation_identifier], v17, v13);
          uint64_t v52 = &v51[OBJC_IVAR___STKStickerRepresentation_data];
          uint64_t v53 = v68;
          unint64_t v54 = v66;
          *uint64_t v52 = v67;
          v52[1] = v54;
          v74(&v51[OBJC_IVAR___STKStickerRepresentation_uti], v71, v53);
          *(void *)&v51[OBJC_IVAR___STKStickerRepresentation_byteCount] = v45;
          uint64_t v55 = &v51[OBJC_IVAR___STKStickerRepresentation_size];
          void *v55 = v47;
          v55[1] = v49;
          uint64_t v56 = (uint64_t *)&v51[OBJC_IVAR___STKStickerRepresentation_role];
          uint64_t v57 = v65;
          *uint64_t v56 = v64;
          v56[1] = v57;
          v51[OBJC_IVAR___STKStickerRepresentation_isPreferred] = v63;
          *(void *)&v51[OBJC_IVAR___STKStickerRepresentation_version] = v62;
          v75.receiver = v51;
          v75.super_class = v50;
          uint64_t v21 = (uint64_t)objc_msgSendSuper2(&v75, sel_init);
          uint64_t v58 = *(void (**)(char *, uint64_t))(v73 + 8);
          v73 += 8;
          uint64_t v59 = v68;
          v58(v71, v68);
          char v60 = *(void (**)(char *, uint64_t))(v14 + 8);
          v60(v17, v13);

          v58(v72, v59);
          v60(v76, v13);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25E3FBB04();
        swift_allocError();
        unsigned char *v44 = 3;
        swift_willThrow();
        sub_25E3CEA28(v67, v66);

        (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v13);
      }
      break;
    case 2uLL:
      uint64_t v41 = *(void *)(v67 + 16);
      uint64_t v40 = *(void *)(v67 + 24);
      uint64_t v21 = v40 - v41;
      if (!__OFSUB__(v40, v41)) {
        goto LABEL_17;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v21 = BYTE6(v66);
      goto LABEL_17;
  }
  return v21;
}

uint64_t sub_25E3FAEF0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v5) {
      break;
    }
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E425F30();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x2611D6C30](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      long long v9 = *(_OWORD *)(a2 + 48);
      _OWORD v12[2] = *(_OWORD *)(a2 + 32);
      uint64_t v12[3] = v9;
      char v13 = *(unsigned char *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      id v11 = v8;
      sub_25E3FBC0C(a2);
      sub_25E3FA6DC(v11, v12);

      if (v2) {
        return swift_release();
      }
      ++v7;
      sub_25E425F10();
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      if (v5 == v7) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E3FB064(id a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v111 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *(_OWORD *)(a2 + 48);
  v119[1] = *(_OWORD *)(a2 + 32);
  v119[2] = v7;
  char v120 = *(unsigned char *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v118 = *(_OWORD *)a2;
  v119[0] = v8;
  unsigned int v9 = objc_msgSend(a1, sel_type);
  if (v9)
  {
    if (v9 != 1)
    {
      sub_25E3FBABC((uint64_t)&v118);
      sub_25E3FBB04();
      swift_allocError();
      *uint64_t v18 = 0;
      swift_willThrow();

      return a2;
    }
    uint64_t v110 = v2;
    LODWORD(v109) = 1;
  }
  else
  {
    uint64_t v110 = v2;
    LODWORD(v109) = 0;
  }
  id v10 = objc_msgSend(a1, sel_representations);
  id v11 = objc_msgSend(v10, sel_allObjects);

  uint64_t v12 = sub_25E425AC0();
  char v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v117 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(v12 + 16);
  if (v14)
  {
    uint64_t v15 = v12 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_25E3CC4A8(v15, (uint64_t)v116);
      sub_25E3CC4A8((uint64_t)v116, (uint64_t)v114);
      type metadata accessor for ManagedRepresentation();
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v115 = 0;
      }
      uint64_t v16 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
      if (v115)
      {
        MEMORY[0x2611D67F0](v16);
        if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25E425AF0();
        }
        sub_25E425B10();
        sub_25E425AE0();
      }
      v15 += 32;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    unint64_t v17 = v117;
  }
  else
  {
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  v114[0] = v13;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v112 = a1;
  if (!v19)
  {
    swift_bridgeObjectRelease();
    id v25 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_36;
  }
  if (v19 < 1)
  {
    __break(1u);
LABEL_75:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v19; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x2611D6C30](i, v17);
    }
    else {
      id v21 = *(id *)(v17 + 8 * i + 32);
    }
    id v22 = v21;
    int v23 = objc_msgSend(v21, sel_version);
    if (qword_26B388F00 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_26B388EF8 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
    swift_beginAccess();
    if (*(unsigned char *)(v24 + 8) == 1)
    {
      if (v23 >= 2) {
        goto LABEL_22;
      }
    }
    else if (*(void *)v24 < v23)
    {
LABEL_22:

      continue;
    }
    sub_25E425F10();
    sub_25E425F40();
    sub_25E425F50();
    sub_25E425F20();
  }
  swift_bridgeObjectRelease();
  id v25 = v114[0];
  a1 = v112;
LABEL_36:
  sub_25E3FBB58((uint64_t)v119, (uint64_t)&v121);
  sub_25E3FBB58((uint64_t)&v121, (uint64_t)v114);
  sub_25E3FBBB4(&v121);
  unint64_t v26 = sub_25E3F5EEC(v114, (unint64_t)v25);
  swift_release();
  sub_25E3FBBE0(&v121);
  if ((v26 & 0x8000000000000000) != 0 || (v26 & 0x4000000000000000) != 0)
  {
    unint64_t v99 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_25E3D4694(v99);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  v114[0] = v27;
  uint64_t v28 = v110;
  sub_25E3F21E0((uint64_t *)v114);
  if (v28) {
    goto LABEL_75;
  }
  swift_bridgeObjectRelease();
  id v29 = v114[0];
  sub_25E3FBC0C((uint64_t)&v118);
  uint64_t v30 = sub_25E3FAEF0((unint64_t)v29, (uint64_t)&v118);
  sub_25E3FBABC((uint64_t)&v118);
  sub_25E3FBABC((uint64_t)&v118);
  swift_release();
  unint64_t v105 = v30;
  uint64_t v106 = 0;
  id v31 = objc_msgSend(a1, sel_attributionName);
  if (v31) {
    goto LABEL_41;
  }
  id v32 = v112;
  id v33 = objc_msgSend(v112, sel_attributionAdamID);

  if (v33)
  {
LABEL_43:
    id v34 = objc_msgSend(v32, sel_attributionAdamID);
    id v35 = objc_msgSend(v32, sel_attributionBundleIdentifier);
    id v36 = v32;
    if (v35)
    {
      uint64_t v37 = v35;
      uint64_t v110 = sub_25E4258F0();
      uint64_t v39 = v38;
    }
    else
    {
      uint64_t v110 = 0;
      uint64_t v39 = 0;
    }
    id v40 = objc_msgSend(v36, sel_attributionName);
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = sub_25E4258F0();
      uint64_t v44 = v43;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v44 = 0;
    }
    char v45 = (char)v109;
    uint64_t v46 = (objc_class *)type metadata accessor for Sticker.AttributionInfo();
    uint64_t v47 = (char *)objc_allocWithZone(v46);
    uint64_t v48 = &v47[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
    *(void *)uint64_t v48 = 0;
    *((void *)v48 + 1) = 0;
    *(void *)&v47[OBJC_IVAR___STKStickerAttributionInfo_adamID] = v34;
    swift_beginAccess();
    *(void *)uint64_t v48 = v110;
    *((void *)v48 + 1) = v39;
    uint64_t v49 = v47;
    id v50 = v34;
    swift_bridgeObjectRelease();
    uint64_t v51 = (uint64_t *)&v49[OBJC_IVAR___STKStickerAttributionInfo_name];
    uint64_t *v51 = v42;
    v51[1] = v44;

    v113.receiver = v49;
    v113.super_class = v46;
    id v104 = objc_msgSendSuper2(&v113, sel_init);
  }
  else
  {
    id v31 = objc_msgSend(v32, sel_attributionBundleIdentifier);
    if (v31)
    {
LABEL_41:

      id v32 = v112;
      goto LABEL_43;
    }
    id v104 = 0;
    char v45 = (char)v109;
  }
  LOBYTE(v117) = v45;
  id v52 = v112;
  id v53 = objc_msgSend(v112, sel_identifier);
  uint64_t v54 = v111;
  if (v53)
  {
    uint64_t v55 = v53;
    sub_25E4254C0();

    uint64_t v56 = sub_25E4254F0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v54, 0, 1, v56);
  }
  else
  {
    uint64_t v57 = sub_25E4254F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v54, 1, 1, v57);
  }
  id v58 = objc_msgSend(v52, sel_name);
  uint64_t v59 = sub_25E4258F0();
  uint64_t v61 = v60;

  uint64_t v62 = sub_25E4081F8((int)objc_msgSend(v52, sel_effect));
  if (v63) {
    uint64_t v64 = 0;
  }
  else {
    uint64_t v64 = v62;
  }
  objc_msgSend(v52, sel_byteCount);
  id v65 = objc_msgSend(v52, sel_metadata);
  if (v65)
  {
    unint64_t v66 = v65;
    uint64_t v110 = sub_25E4253D0();
    os_log_type_t v109 = v67;
  }
  else
  {
    uint64_t v110 = 0;
    os_log_type_t v109 = (char *)0xF000000000000000;
  }
  id v68 = objc_msgSend(v52, sel_externalURI);
  unint64_t v69 = sub_25E4258F0();
  uint64_t v71 = v70;

  id v72 = objc_msgSend(v52, sel_accessibilityName);
  unint64_t v102 = v71;
  if (v72)
  {
    uint64_t v73 = v72;
    uint64_t v108 = sub_25E4258F0();
    uint64_t v107 = v74;
  }
  else
  {
    uint64_t v108 = 0;
    uint64_t v107 = 0;
  }
  id v75 = objc_msgSend(v52, sel_searchText);
  uint64_t v103 = v61;
  if (v75)
  {
    uint64_t v76 = v75;
    uint64_t v77 = v59;
    uint64_t v78 = sub_25E4258F0();
    uint64_t v80 = v79;
  }
  else
  {
    uint64_t v77 = v59;
    uint64_t v78 = 0;
    uint64_t v80 = 0;
  }
  objc_msgSend(v52, sel_creationDate);
  uint64_t v82 = v81;
  objc_msgSend(v52, sel_lastUsedDate);
  uint64_t v84 = v83;
  objc_msgSend(v52, sel_libraryIndex);
  double v86 = v85;
  id v87 = objc_msgSend(v52, sel_sanitizedPrompt);
  if (v87)
  {
    id v88 = v87;
    uint64_t v89 = sub_25E4258F0();
    unint64_t v91 = v90;
  }
  else
  {
    uint64_t v89 = 0;
    unint64_t v91 = 0;
  }
  id v92 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  uint64_t v100 = v80;
  unint64_t v93 = v104;
  uint64_t v94 = v77;
  uint64_t v95 = v64;
  uint64_t v96 = v110;
  unint64_t v97 = v109;
  a2 = sub_25E408210((unsigned __int8 *)&v117, v111, v105, v94, v103, v95, v110, v109, v86, v69, v102, v108, v107, v104, v78, v100, v82, 0, v84,
         0,
         v89,
         v91);

  sub_25E3CEB1C(v96, (unint64_t)v97);
  return a2;
}

uint64_t sub_25E3FBABC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);

  sub_25E3D446C(v2);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_25E3FBB04()
{
  unint64_t result = qword_26A6EDA28;
  if (!qword_26A6EDA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDA28);
  }
  return result;
}

uint64_t sub_25E3FBB58(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_25E3FBBB4(id *a1)
{
  return a1;
}

id *sub_25E3FBBE0(id *a1)
{
  return a1;
}

uint64_t sub_25E3FBC0C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  id v3 = *(id *)(a1 + 8);
  sub_25E3D44C0(v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25E3FBC54()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25E3FBC8C(uint64_t a1)
{
  return sub_25E3F6BAC(a1, *(void **)(v1 + 16));
}

uint64_t sub_25E3FBC94(void *a1)
{
  return sub_25E3F6CF8(a1, *(uint64_t (**)(void *))(v1 + 16)) & 1;
}

uint64_t sub_25E3FBCB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E3FBD20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E3F3618(a1, v2 + 16, a2);
}

uint64_t sub_25E3FBD40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25E3FBDA0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3FBDD8(void *a1)
{
  return sub_25E3F482C(a1, *(char **)(v1 + 16));
}

uint64_t sub_25E3FBDE0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3FBE18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

void sub_25E3FBE58(void *a1)
{
  sub_25E3F4470(a1, *(void *)(v1 + 16));
}

_OWORD *sub_25E3FBE74(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25E3FBE84()
{
  return swift_release();
}

uint64_t sub_25E3FBE8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E3FBED4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E3FBF38()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E3FBF70(void *a1)
{
  return sub_25E3F3F58(a1, *(void *)(v1 + 16));
}

uint64_t sub_25E3FBF8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_25E3F3B4C(a1, *(void **)(v2 + 16), a2);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if ((unint64_t)v1 >= 3) {

  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_25E3FBFFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E3F2800(a1, v2 + 16, a2);
}

uint64_t sub_25E3FC01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StickerContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NSObject *sub_25E3FC090(void *a1)
{
  v16[1] = *(id *)MEMORY[0x263EF8340];
  v16[0] = 0;
  id v1 = objc_msgSend(a1, sel_execute_, v16);
  id v2 = v16[0];
  if (v1)
  {
    uint64_t v3 = v1;
    type metadata accessor for ManagedSticker();
    uint64_t v4 = sub_25E425AC0();
    id v5 = v2;
  }
  else
  {
    id v6 = v16[0];
    long long v7 = (void *)sub_25E425290();

    swift_willThrow();
    id v8 = v7;
    id v9 = v7;
    uint64_t v4 = sub_25E425680();
    os_log_type_t v10 = sub_25E425BF0();
    if (os_log_type_enabled(v4, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      id v13 = v7;
      uint64_t v14 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v16[0] = v14;
      sub_25E425D80();
      *uint64_t v12 = v14;

      _os_log_impl(&dword_25E3BB000, v4, v10, "Could not fetch stickers: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v12, -1, -1);
      MEMORY[0x2611D77B0](v11, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_25E3FC2B0(unint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  id v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v4;
  char v17 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v5;
  sub_25E3FBC0C((uint64_t)v16);
  uint64_t v6 = sub_25E3FC4E8(a1, (uint64_t)v16);
  if (v2)
  {
    sub_25E3FBABC((uint64_t)v16);
    id v7 = v2;
    id v8 = v2;
    id v9 = sub_25E425680();
    os_log_type_t v10 = sub_25E425BF0();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      id v13 = v2;
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v18 = v14;
      sub_25E425D80();
      *uint64_t v12 = v14;

      _os_log_impl(&dword_25E3BB000, v9, v10, "Could not convert fetched stickers: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v12, -1, -1);
      MEMORY[0x2611D77B0](v11, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    sub_25E3FBABC((uint64_t)v16);
  }
  return v6;
}

uint64_t sub_25E3FC494()
{
  return _s5FetchCMa();
}

uint64_t _s5FetchCMa()
{
  uint64_t result = qword_26B389588;
  if (!qword_26B389588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E3FC4E8(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v5) {
      break;
    }
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E425F30();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x2611D6C30](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      long long v9 = *(_OWORD *)(a2 + 48);
      _OWORD v12[2] = *(_OWORD *)(a2 + 32);
      uint64_t v12[3] = v9;
      char v13 = *(unsigned char *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 16);
      v12[0] = *(_OWORD *)a2;
      v12[1] = v10;
      id v11 = v8;
      sub_25E3FBC0C(a2);
      sub_25E3FB064(v11, (uint64_t)v12);

      if (v2) {
        return swift_release();
      }
      ++v7;
      sub_25E425F10();
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      if (v5 == v7) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  return result;
}

id static RemoteStickersAPI.xpcInterface.getter()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_270B2ADC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389540);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E4277F0;
  *(void *)(inited + 32) = sub_25E3CE930(0, (unint64_t *)&unk_26B389500);
  *(void *)(inited + 40) = sub_25E3CE930(0, &qword_26B3894F8);
  sub_25E3FC730(inited, (uint64_t)sel_removeStickersWithIdentifiers_withReply_, 0, 0);
  swift_setDeallocating();
  return v0;
}

void sub_25E3FC730(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  sub_25E3F60E4(a1);
  id v9 = objc_allocWithZone(MEMORY[0x263EFFA08]);
  long long v10 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithArray_, v10);

  sub_25E425B90();
  id v12 = (id)sub_25E425B80();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setClasses_forSelector_argumentIndex_ofReply_, v12, a2, a3, a4 & 1);
}

uint64_t XPCDataMapper.__allocating_init(proxier:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_25E3E1568(a1, v2 + 16);
  return v2;
}

uint64_t XPCDataMapper.init(proxier:)(long long *a1)
{
  sub_25E3E1568(a1, v1 + 16);
  return v1;
}

id sub_25E3FC8C4(uint64_t a1)
{
  void (*v17)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  id v20;
  void v21[4];
  uint64_t v22;
  id v23;
  long long v24;
  uint64_t v25;
  long long v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;

  uint64_t v3 = v1;
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  LOBYTE(v23) = *(unsigned char *)a1;
  uint64_t v24 = *(_OWORD *)(a1 + 8);
  id v25 = v4;
  unint64_t v26 = *(_OWORD *)(a1 + 32);
  uint64_t v27 = v5;
  uint64_t v28 = v6;
  id v29 = v7;
  sub_25E425270();
  swift_allocObject();
  id v8 = (id)sub_25E425260();
  sub_25E3FCB00();
  uint64_t v9 = sub_25E425250();
  unint64_t v11 = v10;
  swift_release();
  if (v2)
  {

    sub_25E3FCB54();
    swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_25E4283B0;
    *(unsigned char *)(v12 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    char v13 = v3 + 2;
    uint64_t v15 = v3[5];
    uint64_t v14 = v3[6];
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(v13, v15);
    uint64_t v30 = &v22;
    MEMORY[0x270FA5388](v16);
    v21[2] = v9;
    v21[3] = v11;
    char v17 = *(void (**)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v14 + 8);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E50);
    v17(&v23, sub_25E3FCD8C, v21, v18, v15, v14);
    id v8 = v23;
    if (v24)
    {
      uint64_t v20 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
      swift_willThrowTypedImpl();
      sub_25E3CEA28(v9, v11);
      sub_25E3FCD94(v8, 1);
    }
    else
    {
      sub_25E3CEA28(v9, v11);
    }
  }
  return v8;
}

unint64_t sub_25E3FCB00()
{
  unint64_t result = qword_26B388DB8;
  if (!qword_26B388DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388DB8);
  }
  return result;
}

unint64_t sub_25E3FCB54()
{
  unint64_t result = qword_26A6EDA58;
  if (!qword_26A6EDA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDA58);
  }
  return result;
}

uint64_t XPCCoder.encode<A>(_:)()
{
  sub_25E425270();
  swift_allocObject();
  sub_25E425260();
  uint64_t v0 = sub_25E425250();
  swift_release();
  return v0;
}

uint64_t sub_25E3FCC3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = -1;
  char v5 = (void *)sub_25E4253B0();
  _OWORD v10[4] = sub_25E3FEAB8;
  v10[5] = v4;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_25E3FCE44;
  v10[3] = &block_descriptor_28;
  uint64_t v6 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_countFor_withReply_, v5, v6);
  _Block_release(v6);

  swift_beginAccess();
  char v7 = *(void **)(v4 + 16);
  *(void *)a2 = v7;
  unsigned __int8 v8 = *(unsigned char *)(v4 + 24);
  *(unsigned char *)(a2 + 8) = v8;
  sub_25E3FEAC0(v7, v8);
  return swift_release();
}

uint64_t sub_25E3FCD8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3FCC3C(a1, a2);
}

void sub_25E3FCD94(id a1, char a2)
{
  if (a2) {
}
  }

void sub_25E3FCDA0(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t v6 = *(void **)(a3 + 16);
    *(void *)(a3 + 16) = a2;
    unsigned __int8 v7 = *(unsigned char *)(a3 + 24);
    *(unsigned char *)(a3 + 24) = 1;
    id v8 = a2;
    uint64_t v9 = v6;
    unsigned __int8 v10 = v7;
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(void **)(a3 + 16);
    *(void *)(a3 + 16) = a1;
    unsigned __int8 v10 = *(unsigned char *)(a3 + 24);
    *(unsigned char *)(a3 + 24) = 0;
  }
  sub_25E3FEAE4(v9, v10);
}

void sub_25E3FCE44(uint64_t a1, uint64_t a2, void *a3)
{
  char v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_25E3FCEBC(uint64_t a1)
{
  void (*v16)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  void v24[4];
  uint64_t v25;
  id v26;
  long long v27;
  uint64_t v28;
  long long v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;

  uint64_t v3 = v1;
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  LOBYTE(v26) = *(unsigned char *)a1;
  uint64_t v27 = *(_OWORD *)(a1 + 8);
  uint64_t v28 = v4;
  id v29 = *(_OWORD *)(a1 + 32);
  uint64_t v30 = v5;
  id v31 = v6;
  id v32 = v7;
  sub_25E425270();
  swift_allocObject();
  uint64_t v8 = sub_25E425260();
  sub_25E3FCB00();
  uint64_t v9 = sub_25E425250();
  unint64_t v11 = v10;
  swift_release();
  if (v2)
  {

    sub_25E3FCB54();
    swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_25E4283B0;
    *(unsigned char *)(v12 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    char v13 = v3 + 2;
    uint64_t v15 = v3[5];
    uint64_t v14 = v3[6];
    uint64_t v8 = (uint64_t)__swift_project_boxed_opaque_existential_1(v13, v15);
    id v33 = &v25;
    MEMORY[0x270FA5388](v8);
    v24[2] = v9;
    v24[3] = v11;
    uint64_t v16 = *(void (**)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v14 + 8);
    char v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E48);
    v16(&v26, sub_25E3FD194, v24, v17, v15, v14);
    uint64_t v18 = v26;
    uint64_t v19 = v27;
    uint64_t v20 = BYTE8(v27);
    if (BYTE8(v27))
    {
      id v21 = v26;
      unint64_t v26 = v18;
      id v22 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
      swift_willThrowTypedImpl();
      sub_25E3CEA28(v9, v11);
      sub_25E3FD1D4(v18, 1);
      sub_25E3FD1E0(v18, v19, v20);
    }
    else
    {
      sub_25E425240();
      swift_allocObject();
      sub_25E425230();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894D8);
      sub_25E3FD1EC();
      sub_25E425220();
      swift_release();
      uint64_t v8 = (uint64_t)v26;
      sub_25E3CEA28(v9, v11);
      sub_25E3FD1E0(v18, v19, 0);
    }
  }
  return v8;
}

uint64_t sub_25E3FD194@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3FD6E0(a1, (uint64_t)sub_25E3FE9F8, (uint64_t)&block_descriptor_22, (SEL *)&selRef_fetch_withReply_, a2);
}

void sub_25E3FD1D4(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_25E3FD1E0(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_25E3CEA28((uint64_t)a1, a2);
  }
}

unint64_t sub_25E3FD1EC()
{
  unint64_t result = qword_26B388E00;
  if (!qword_26B388E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B3894D8);
    sub_25E3FD69C(&qword_26B388DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388E00);
  }
  return result;
}

uint64_t sub_25E3FD27C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  char v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_25E4253D0();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_25E3CEB1C((uint64_t)v4, v8);
  return swift_release();
}

uint64_t XPCCoder.decode<A>(_:)()
{
  return swift_release();
}

id sub_25E3FD3C4(void *a1)
{
  void (*v11)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  void v20[4];
  unint64_t v21;
  id v22[2];
  char v23;
  unint64_t *v24;

  uint64_t v3 = v1;
  v22[0] = a1;
  sub_25E425270();
  swift_allocObject();
  id v4 = (id)sub_25E425260();
  type metadata accessor for Sticker(0);
  sub_25E3FD69C((unint64_t *)&unk_26A6EDA60);
  uint64_t v5 = sub_25E425250();
  unint64_t v7 = v6;
  swift_release();
  if (v2)
  {

    sub_25E3FCB54();
    swift_allocError();
    *(_OWORD *)uint64_t v8 = xmmword_25E4283C0;
    *(unsigned char *)(v8 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v10 = v3[5];
    uint64_t v9 = v3[6];
    id v4 = __swift_project_boxed_opaque_existential_1(v3 + 2, v10);
    uint64_t v24 = &v21;
    MEMORY[0x270FA5388](v4);
    v20[2] = v5;
    v20[3] = v7;
    id v21 = v7;
    unint64_t v11 = *(void (**)(id *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v9 + 8);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E48);
    v11(v22, sub_25E3FD830, v20, v12, v10, v9);
    char v13 = v21;
    uint64_t v14 = v22[0];
    uint64_t v15 = v22[1];
    uint64_t v16 = v23;
    if (v23)
    {
      char v17 = v22[0];
      v22[0] = v14;
      uint64_t v18 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
      swift_willThrowTypedImpl();
      sub_25E3CEA28(v5, v13);
      sub_25E3FD870(v14);
      sub_25E3FD1E0(v14, (unint64_t)v15, v16);
    }
    else
    {
      sub_25E425240();
      swift_allocObject();
      sub_25E425230();
      sub_25E3FD69C(&qword_26B388DE0);
      sub_25E425220();
      swift_release();
      id v4 = v22[0];
      sub_25E3CEA28(v5, v13);
      sub_25E3FD1E0(v14, (unint64_t)v15, 0);
    }
  }
  return v4;
}

uint64_t sub_25E3FD69C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Sticker(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E3FD6E0@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, SEL *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 32) = -1;
  unint64_t v11 = (void *)sub_25E4253B0();
  v17[4] = a2;
  v17[5] = v10;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  v17[2] = sub_25E3FD27C;
  v17[3] = a3;
  uint64_t v12 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a4, v11, v12);
  _Block_release(v12);

  swift_beginAccess();
  char v13 = *(void **)(v10 + 16);
  unint64_t v14 = *(void *)(v10 + 24);
  *(void *)a5 = v13;
  *(void *)(a5 + 8) = v14;
  unsigned __int8 v15 = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a5 + 16) = v15;
  sub_25E3FEA14(v13, v14, v15);
  return swift_release();
}

uint64_t sub_25E3FD830@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3FD6E0(a1, (uint64_t)sub_25E3FE9F8, (uint64_t)&block_descriptor_18, (SEL *)&selRef_addSticker_withReply_, a2);
}

void sub_25E3FD870(id a1)
{
}

void sub_25E3FD87C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  if (a3)
  {
    swift_beginAccess();
    unint64_t v7 = *(void **)(a4 + 16);
    unint64_t v8 = *(void *)(a4 + 24);
    *(void *)(a4 + 16) = a3;
    *(void *)(a4 + 24) = 0;
    unsigned __int8 v9 = *(unsigned char *)(a4 + 32);
    *(unsigned char *)(a4 + 32) = 1;
    id v10 = a3;
    unint64_t v11 = v7;
    unint64_t v12 = v8;
    unsigned __int8 v13 = v9;
  }
  else
  {
    if (a2 >> 60 == 15) {
      return;
    }
    swift_beginAccess();
    unsigned __int8 v15 = *(void **)(a4 + 16);
    unint64_t v16 = *(void *)(a4 + 24);
    *(void *)(a4 + 16) = a1;
    *(void *)(a4 + 24) = a2;
    unsigned __int8 v17 = *(unsigned char *)(a4 + 32);
    *(unsigned char *)(a4 + 32) = 0;
    sub_25E3CEAB0(a1, a2);
    unint64_t v11 = v15;
    unint64_t v12 = v16;
    unsigned __int8 v13 = v17;
  }
  sub_25E3FEA38(v11, v12, v13);
}

void *sub_25E3FD94C(uint64_t a1)
{
  void *(*v6)(uint64_t *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  void *result;
  void v9[4];
  uint64_t v10;
  char v11;

  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  v9[2] = a1;
  unint64_t v6 = *(void *(**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v5 + 8);
  unint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E58);
  uint64_t result = v6(&v10, sub_25E3FDB7C, v9, v7, v4, v5);
  if (!v2 && (v11 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    return (void *)swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_25E3FDA28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = -1;
  sub_25E4254F0();
  uint64_t v5 = (void *)sub_25E425AB0();
  _OWORD v10[4] = sub_25E3FE97C;
  v10[5] = v4;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_25E3CFE80;
  v10[3] = &block_descriptor_12;
  unint64_t v6 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_removeStickersWithIdentifiers_withReply_, v5, v6);
  _Block_release(v6);

  swift_beginAccess();
  unint64_t v7 = *(void **)(v4 + 16);
  *(void *)a2 = v7;
  unsigned __int8 v8 = *(unsigned char *)(v4 + 24);
  *(unsigned char *)(a2 + 8) = v8;
  sub_25E3FEAC0(v7, v8);
  return swift_release();
}

uint64_t sub_25E3FDB7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3FDA28(a1, a2);
}

void sub_25E3FDB84(void *a1)
{
}

uint64_t sub_25E3FDBB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3FDF44(a1, (uint64_t)sub_25E3FE97C, (uint64_t)&block_descriptor_8, (SEL *)&selRef_updateSticker_withReply_, a2);
}

void *sub_25E3FDBF0()
{
  void *(*v4)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), void, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void *result;
  uint64_t v7;
  char v8;

  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  uint64_t v4 = *(void *(**)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), void, uint64_t, uint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E58);
  uint64_t result = v4(&v7, sub_25E3FDCC4, 0, v5, v2, v3);
  if (!v1 && (v8 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    return (void *)swift_willThrowTypedImpl();
  }
  return result;
}

id sub_25E3FDCC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(a1, sel_reindexAllStickers);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_25E3FDCF8(void *a1)
{
}

void sub_25E3FDD24(void *a1, uint64_t a2)
{
  void (*v12)(id *__return_ptr, uint64_t, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  void v17[4];
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t *v22;

  uint64_t v20 = a1;
  sub_25E425270();
  swift_allocObject();
  sub_25E425260();
  type metadata accessor for Sticker(0);
  sub_25E3FD69C((unint64_t *)&unk_26A6EDA60);
  uint64_t v5 = sub_25E425250();
  unint64_t v7 = v6;
  swift_release();
  if (v3)
  {

    sub_25E3FCB54();
    swift_allocError();
    *(_OWORD *)uint64_t v8 = xmmword_25E4283C0;
    *(unsigned char *)(v8 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v9 = v2[5];
    uint64_t v10 = v2[6];
    unint64_t v11 = __swift_project_boxed_opaque_existential_1(v2 + 2, v9);
    id v22 = &v18;
    MEMORY[0x270FA5388](v11);
    v17[2] = v5;
    v17[3] = v7;
    uint64_t v19 = v7;
    unint64_t v12 = *(void (**)(id *__return_ptr, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v10 + 8);
    unsigned __int8 v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E58);
    v12(&v20, a2, v17, v13, v9, v10);
    unint64_t v14 = v19;
    if (v21)
    {
      unsigned __int8 v15 = v20;
      unint64_t v16 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
      swift_willThrowTypedImpl();
      sub_25E3CEA28(v5, v14);
      sub_25E3FCD94(v15, 1);
    }
    else
    {
      sub_25E3CEA28(v5, v19);
    }
  }
}

uint64_t sub_25E3FDF44@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, SEL *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 24) = -1;
  unint64_t v11 = (void *)sub_25E4253B0();
  _OWORD v16[4] = a2;
  v16[5] = v10;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  id v16[2] = sub_25E3CFE80;
  v16[3] = a3;
  unint64_t v12 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a4, v11, v12);
  _Block_release(v12);

  swift_beginAccess();
  unsigned __int8 v13 = *(void **)(v10 + 16);
  *(void *)a5 = v13;
  unsigned __int8 v14 = *(unsigned char *)(v10 + 24);
  *(unsigned char *)(a5 + 8) = v14;
  sub_25E3FEAC0(v13, v14);
  return swift_release();
}

uint64_t sub_25E3FE08C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E3FDF44(a1, (uint64_t)sub_25E3FE97C, (uint64_t)&block_descriptor_1, (SEL *)&selRef_touchStickerSpotlightItem_withReply_, a2);
}

void sub_25E3FE0CC(void *a1, uint64_t a2)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v4 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = a1;
    unsigned __int8 v5 = *(unsigned char *)(a2 + 24);
    *(unsigned char *)(a2 + 24) = 1;
    id v6 = a1;
    unint64_t v7 = v4;
    unsigned __int8 v8 = v5;
  }
  else
  {
    swift_beginAccess();
    unint64_t v7 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = 0;
    unsigned __int8 v8 = *(unsigned char *)(a2 + 24);
    *(unsigned char *)(a2 + 24) = 0;
  }
  sub_25E3FEAE4(v7, v8);
}

uint64_t XPCDataMapper.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t XPCDataMapper.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_25E3FE1C4(uint64_t a1)
{
  return sub_25E3FC8C4(a1);
}

uint64_t sub_25E3FE1E8(uint64_t a1)
{
  return sub_25E3FCEBC(a1);
}

id sub_25E3FE20C(void *a1)
{
  return sub_25E3FD3C4(a1);
}

void *sub_25E3FE230(uint64_t a1)
{
  return sub_25E3FD94C(a1);
}

void sub_25E3FE254(void *a1)
{
}

void sub_25E3FE278(void *a1)
{
}

void *sub_25E3FE29C()
{
  void *(*v4)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), void, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void *result;
  uint64_t v7;
  char v8;

  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v2);
  uint64_t v4 = *(void *(**)(uint64_t *__return_ptr, id (*)@<X0>(void *@<X0>, uint64_t@<X8>), void, uint64_t, uint64_t, uint64_t))(v3 + 8);
  unsigned __int8 v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E58);
  id result = v4(&v7, sub_25E3FDCC4, 0, v5, v2, v3);
  if (!v1 && (v8 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED788);
    return (void *)swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t XPCDataMapperError.errorDescription.getter()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1)
  {
    uint64_t result = 0xD000000000000010;
    switch(*(void *)v0)
    {
      case 1:
        uint64_t result = 0x2064696C61766E49;
        break;
      case 2:
        uint64_t result = 0xD000000000000019;
        break;
      case 3:
        uint64_t result = 0x6C706D6920746F4ELL;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_25E425EA0();
    swift_bridgeObjectRelease();
    sub_25E425970();
    sub_25E425970();
    return 0x6574656D61726150;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteStickersAPI()
{
  return &type metadata for RemoteStickersAPI;
}

uint64_t type metadata accessor for XPCDataMapper()
{
  return self;
}

uint64_t method lookup function for XPCDataMapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCDataMapper);
}

uint64_t dispatch thunk of XPCDataMapper.__allocating_init(proxier:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of XPCDataMapper.count(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of XPCDataMapper.fetch(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of XPCDataMapper.addSticker(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of XPCDataMapper.removeStickers(identifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of XPCDataMapper.updateSticker(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of XPCDataMapper.reindexAllStickers()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of XPCDataMapper.touchSpotlightItem(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_25E3FE720(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for XPCDataMapperError(uint64_t a1)
{
  return sub_25E3FE748(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_25E3FE748(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8Stickers18XPCDataMapperErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25E3FE720(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for XPCDataMapperError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25E3FE720(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25E3FE748(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for XPCDataMapperError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25E3FE748(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCDataMapperError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDataMapperError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25E3FE8EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25E3FE904(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for XPCDataMapperError()
{
  return &type metadata for XPCDataMapperError;
}

uint64_t dispatch thunk of ProxyProvider.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for XPCCoder()
{
  return &type metadata for XPCCoder;
}

uint64_t sub_25E3FE964()
{
  return objectdestroyTm((void (*)(void, void))sub_25E3FF19C);
}

void sub_25E3FE97C(void *a1)
{
  sub_25E3FE0CC(a1, v1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_25E3FE9B0()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_25E3FD1E0(*(id *)(v0 + 16), *(void *)(v0 + 24), v1 & 1);
  }
  return MEMORY[0x270FA0238](v0, 33, 7);
}

void sub_25E3FE9F8(uint64_t a1, unint64_t a2, void *a3)
{
  sub_25E3FD87C(a1, a2, a3, v3);
}

id sub_25E3FEA14(id result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_25E3FEA2C(result, a2, a3 & 1);
  }
  return result;
}

id sub_25E3FEA2C(id a1, unint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)sub_25E3CEAB0((uint64_t)a1, a2);
  }
}

void sub_25E3FEA38(void *a1, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    sub_25E3FD1E0(a1, a2, a3 & 1);
  }
}

uint64_t sub_25E3FEA50()
{
  return objectdestroyTm((void (*)(void, void))sub_25E3FCD94);
}

uint64_t objectdestroyTm(void (*a1)(void, void))
{
  int v2 = *(unsigned __int8 *)(v1 + 24);
  if (v2 != 255) {
    a1(*(void *)(v1 + 16), v2 & 1);
  }
  return MEMORY[0x270FA0238](v1, 25, 7);
}

void sub_25E3FEAB8(uint64_t a1, void *a2)
{
  sub_25E3FCDA0(a1, a2, v2);
}

id sub_25E3FEAC0(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_25E3FEAD8(result, a2 & 1);
  }
  return result;
}

id sub_25E3FEAD8(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

void sub_25E3FEAE4(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_25E3FCD94(a1, a2 & 1);
  }
}

ValueMetadata *type metadata accessor for XPCProxyProvider()
{
  return &type metadata for XPCProxyProvider;
}

void sub_25E3FEB0C(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v35 = a4;
  uint64_t v6 = sub_25E425D60();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)v33 - v10;
  id v12 = objc_allocWithZone(MEMORY[0x263F08D68]);
  unsigned __int8 v13 = (void *)sub_25E4258C0();
  id v14 = objc_msgSend(v12, sel_initWithMachServiceName_options_, v13, 0);

  id v15 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_270B2ADC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389540);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E4277F0;
  *(void *)(inited + 32) = sub_25E3CE930(0, (unint64_t *)&unk_26B389500);
  *(void *)(inited + 40) = sub_25E3CE930(0, &qword_26B3894F8);
  sub_25E3FC730(inited, (uint64_t)sel_removeStickersWithIdentifiers_withReply_, 0, 0);
  swift_setDeallocating();
  objc_msgSend(v14, sel_setRemoteObjectInterface_, v15);

  objc_msgSend(v14, sel_resume);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v18 = (id *)(v17 + 16);
  aBlock[4] = sub_25E3FF194;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25E3FF0DC;
  aBlock[3] = &block_descriptor_35;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v20 = objc_msgSend(v14, sel_synchronousRemoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);
  sub_25E425DD0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D98);
  if (!swift_dynamicCast())
  {
    sub_25E3FCB54();
    swift_allocError();
    *(_OWORD *)uint64_t v24 = xmmword_25E4283D0;
    *(unsigned char *)(v24 + 16) = 2;
    swift_willThrow();
LABEL_5:
    swift_release();
    goto LABEL_6;
  }
  id v21 = v38;
  v33[1] = v4;
  uint64_t v34 = a3;
  uint64_t v22 = aBlock[13];
  swift_beginAccess();
  if (*v18)
  {
    id v23 = *v18;
    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease();
LABEL_6:
    objc_msgSend(v14, sel_invalidate);

    return;
  }
  v21(v22);
  if (*v18)
  {
    id v25 = *v18;
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
    swift_release();
    goto LABEL_6;
  }
  uint64_t v39 = v22;
  uint64_t v26 = v36;
  uint64_t v27 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v9, v11, v37);
  uint64_t v28 = v34;
  uint64_t v29 = *(void *)(v34 - 8);
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v34);
  id v31 = *(void (**)(char *, uint64_t))(v26 + 8);
  if (v30 == 1)
  {
    v31(v9, v27);
    sub_25E3FCB54();
    swift_allocError();
    *(_OWORD *)uint64_t v32 = xmmword_25E4283E0;
    *(unsigned char *)(v32 + 16) = 2;
    swift_willThrow();
    swift_unknownObjectRelease();
    v31(v11, v27);
    goto LABEL_5;
  }
  v31(v11, v27);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v35, v9, v28);
  swift_release();
  objc_msgSend(v14, sel_invalidate);
}

id sub_25E3FF088(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  return a1;
}

void sub_25E3FF0DC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_25E3FF144(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_25E3FF15C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25E3FF194(void *a1)
{
  return sub_25E3FF088(a1, v1);
}

id ManagedRepresentation.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedRepresentation.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedRepresentation();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedRepresentation()
{
  return self;
}

id ManagedRepresentation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedRepresentation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25E3FF33C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_25E425A00();
  }
  else {
    return 0;
  }
}

uint64_t sub_25E3FF388(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_25E425F80())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x2611D6C30](0, a2);
LABEL_5:
      uint64_t v6 = v5;
      type metadata accessor for Sticker.Representation();
      char v7 = sub_25E425D30();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_25E425D30();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x2611D6C30](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_25E425D30();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_25E3FF500(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x2611D6C30](0, v3))
  {
    char v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x2611D6C30](0, a2);
LABEL_22:
    id v13 = v12;
    type metadata accessor for Sticker.Representation();
    char v14 = sub_25E425D30();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x2611D6C30](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x2611D6C30](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        id v21 = v20;
        unint64_t v5 = sub_25E425D30();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      id v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_25E425D30();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t Sticker.__allocating_init(type:identifier:representations:name:effect:byteCount:metadata:externalURI:accessibilityName:attributionInfo:searchText:creationDate:lastUsedDate:libraryIndex:sanitizedPrompt:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, uint64_t a10, char *a11, long long a12, uint64_t a13, uint64_t a14, void *a15, long long a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char *a22)
{
  id v24 = objc_allocWithZone(v22);
  uint64_t v25 = sub_25E408210(a1, a2, a3, a4, a5, a6, a10, a11, a9, a12, *((void (**)(void, void))&a12 + 1), a13, a14, a15, a16, *((uint64_t *)&a16 + 1), a17, a18 & 1, a19,
          a20 & 1,
          a21,
          a22);

  sub_25E3CEB1C(a10, (unint64_t)a11);
  return v25;
}

char *Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:searchText:sanitizedPrompt:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  v28[0] = *a1;
  id v22 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  unint64_t v23 = (char *)sub_25E408C3C(v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_25E3CEB1C(a5, a6);
  id v24 = &v23[OBJC_IVAR___STKSticker_searchText];
  swift_beginAccess();
  *(void *)id v24 = a12;
  *((void *)v24 + 1) = a13;
  uint64_t v25 = v23;
  swift_bridgeObjectRelease();
  uint64_t v26 = &v25[OBJC_IVAR___STKSticker_sanitizedPrompt];
  swift_beginAccess();
  *(void *)uint64_t v26 = a14;
  *((void *)v26 + 1) = a15;

  swift_bridgeObjectRelease();
  return v25;
}

uint64_t Sticker.Effect.init(rawValue:)(uint64_t a1)
{
  return sub_25E4081F8(a1);
}

Stickers::Sticker::StickerType_optional __swiftcall Sticker.StickerType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (Stickers::Sticker::StickerType_optional)rawValue;
}

uint64_t Sticker.StickerType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_25E3FFA94()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26A6EDA70);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A6EDA70);
  return sub_25E425690();
}

void Sticker.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR___STKSticker_type);
}

uint64_t _s8Stickers7StickerC10identifier10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___STKSticker_identifier;
  uint64_t v4 = sub_25E4254F0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_25E3FFC60()
{
  return swift_bridgeObjectRetain();
}

void sub_25E3FFD38(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_bridgeObjectRelease();
  sub_25E402BDC();
}

void sub_25E3FFD98(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_25E402BDC();
}

void (*sub_25E3FFE08(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_25E3FFE68;
}

void sub_25E3FFE68(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_25E402BDC();
  }
}

uint64_t sub_25E3FFEA8()
{
  return sub_25E4009A8(&OBJC_IVAR___STKSticker_accessibilityName);
}

uint64_t sub_25E3FFEC0(uint64_t a1, uint64_t a2)
{
  return sub_25E400A90(a1, a2, &OBJC_IVAR___STKSticker_accessibilityName);
}

uint64_t (*sub_25E3FFECC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25E3FFF70()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKSticker_byteCount;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_25E400080()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_25E400144(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E4001A4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25E400210())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25E400278()
{
  return sub_25E4009A8(&OBJC_IVAR___STKSticker_searchText);
}

uint64_t sub_25E400290(uint64_t a1, uint64_t a2)
{
  return sub_25E400A90(a1, a2, &OBJC_IVAR___STKSticker_searchText);
}

uint64_t (*sub_25E40029C())()
{
  return j__swift_endAccess;
}

uint64_t sub_25E400304()
{
  return sub_25E4009A8(&OBJC_IVAR___STKSticker_sanitizedPrompt);
}

uint64_t sub_25E40031C(uint64_t a1, uint64_t a2)
{
  return sub_25E400A90(a1, a2, &OBJC_IVAR___STKSticker_sanitizedPrompt);
}

uint64_t (*sub_25E400328())()
{
  return j_j__swift_endAccess;
}

BOOL sub_25E4003F4()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR___STKSticker_searchText);
  swift_beginAccess();
  unint64_t v2 = v1[1];
  if (!v2) {
    return 0;
  }
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v3 = *v1 & 0xFFFFFFFFFFFFLL;
  }
  return v3 != 0;
}

uint64_t sub_25E4004AC()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKSticker_effect;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_25E400540(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___STKSticker_effect);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_25E40058C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25E400688()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKSticker_metadata;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  sub_25E3CEA9C(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_25E400778(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  *unint64_t v5 = a1;
  v5[1] = a2;
  return sub_25E3CEB1C(v6, v7);
}

uint64_t sub_25E4007D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_25E3CEA9C(v4, v5);
}

uint64_t sub_25E400830(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(*a2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  *uint64_t v4 = v2;
  v4[1] = v3;
  sub_25E3CEA9C(v2, v3);
  return sub_25E3CEB1C(v5, v6);
}

uint64_t (*sub_25E4008AC())()
{
  return j_j__swift_endAccess;
}

id sub_25E400914(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  swift_beginAccess();
  if (*(void *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t sub_25E40099C()
{
  return sub_25E4009A8(&OBJC_IVAR___STKSticker_externalURI);
}

uint64_t sub_25E4009A8(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_25E400A08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = sub_25E4258F0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E400A84(uint64_t a1, uint64_t a2)
{
  return sub_25E400A90(a1, a2, &OBJC_IVAR___STKSticker_externalURI);
}

uint64_t sub_25E400A90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E400AEC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25E400B54())()
{
  return j_j__swift_endAccess;
}

void *sub_25E400BFC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_25E400CAC(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

void sub_25E400D00(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_25E400D64())()
{
  return j_j__swift_endAccess;
}

double sub_25E400E08()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKSticker_creationDate;
  swift_beginAccess();
  return *(double *)v1;
}

double sub_25E400EEC()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKSticker_lastUsedDate;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_25E400F88(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR___STKSticker_lastUsedDate);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_25E400FDC())()
{
  return j_j__swift_endAccess;
}

double sub_25E401080()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKSticker_libraryIndex;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_25E401260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  return sub_25E3FBED4(v3, a1, &qword_26B389370);
}

uint64_t sub_25E4013FC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  sub_25E3EC670(a1, v3);
  return swift_endAccess();
}

uint64_t sub_25E401458(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3FBED4(a1, (uint64_t)v6, &qword_26B389370);
  uint64_t v7 = *a2 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  sub_25E3EC670((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t (*sub_25E401520())()
{
  return j_j__swift_endAccess;
}

uint64_t Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  id v18 = objc_allocWithZone(v11);
  uint64_t v19 = sub_25E408C3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_25E3CEB1C(a5, a6);
  return v19;
}

uint64_t Sticker.init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v13 = sub_25E408C3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_25E3CEB1C(a5, a6);
  return v13;
}

uint64_t Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:searchText:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  v24[0] = *a1;
  id v20 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  uint64_t v21 = sub_25E408C3C(v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  sub_25E3CEB1C(a5, a6);
  id v22 = (void *)(v21 + OBJC_IVAR___STKSticker_searchText);
  swift_beginAccess();
  *id v22 = a12;
  v22[1] = a13;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t Sticker.__allocating_init(type:representations:name:metadata:externalURI:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  uint64_t v18 = sub_25E4093D8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_25E3CEB1C(a5, a6);
  return v18;
}

uint64_t Sticker.init(type:representations:name:metadata:externalURI:)(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = sub_25E4093D8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_25E3CEB1C(a5, a6);
  return v10;
}

uint64_t Sticker.init(type:identifier:representations:name:effect:byteCount:metadata:externalURI:accessibilityName:attributionInfo:searchText:creationDate:lastUsedDate:libraryIndex:sanitizedPrompt:)(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, unint64_t a12, void (*a13)(void, void), uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char *a24)
{
  uint64_t v24 = sub_25E408210(a1, a2, a3, a4, a5, a6, a10, a11, a7, a12, a13, a14, a15, a16, a17, a18, a19, a20 & 1, a21,
          a22 & 1,
          a23,
          a24);

  sub_25E3CEB1C(a10, (unint64_t)a11);
  return v24;
}

uint64_t sub_25E401994()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8D8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_25E428260;
  sub_25E425970();
  sub_25E425F60();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0xE000000000000000;
  strcpy((char *)v45, "identifier = ");
  HIWORD(v45[1]) = -4864;
  sub_25E4254F0();
  sub_25E409DB0((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  uint64_t v3 = v45[1];
  *(void *)(v2 + 48) = v45[0];
  *(void *)(v2 + 56) = v3;
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  v43[6] = 0xD000000000000012;
  unint64_t v44 = 0x800000025E42ADE0;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Sticker.Representation();
  uint64_t v5 = swift_bridgeObjectRetain();
  MEMORY[0x2611D6820](v5, v4);
  sub_25E425970();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = 0xD000000000000012;
  *(void *)(v2 + 72) = v44;
  uint64_t v6 = (void *)(v1 + OBJC_IVAR___STKSticker_accessibilityName);
  swift_beginAccess();
  unint64_t v7 = v6[1];
  if (v7)
  {
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = *v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      swift_bridgeObjectRetain();
      sub_25E425EA0();
      swift_bridgeObjectRelease();
      void v43[3] = 0xD000000000000014;
      v43[4] = 0x800000025E42AE20;
      sub_25E425970();
      swift_bridgeObjectRelease();
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1) {
        uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v9 > 1), v10 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v10 + 1;
      uint64_t v11 = v2 + 16 * v10;
      *(void *)(v11 + 32) = 0xD000000000000014;
      *(void *)(v11 + 40) = 0x800000025E42AE20;
    }
  }
  uint64_t v12 = v1 + OBJC_IVAR___STKSticker_externalURI;
  swift_beginAccess();
  if (*(void *)(v12 + 8))
  {
    swift_bridgeObjectRetain();
    sub_25E425EA0();
    swift_bridgeObjectRelease();
    strcpy((char *)v43, "externalURI = ");
    HIBYTE(v43[1]) = -18;
    sub_25E425970();
    swift_bridgeObjectRelease();
    uint64_t v13 = v43[0];
    uint64_t v14 = v43[1];
    unint64_t v16 = *(void *)(v2 + 16);
    unint64_t v15 = *(void *)(v2 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v15 > 1), v16 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v16 + 1;
    uint64_t v17 = v2 + 16 * v16;
    *(void *)(v17 + 32) = v13;
    *(void *)(v17 + 40) = v14;
  }
  uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  unint64_t v19 = v18[1];
  if (v19 >> 60 != 15)
  {
    uint64_t v20 = *v18;
    sub_25E3CEAB0(*v18, v19);
    sub_25E425EA0();
    swift_bridgeObjectRelease();
    switch(v19 >> 62)
    {
      case 1uLL:
        if (!__OFSUB__(HIDWORD(v20), v20)) {
          goto LABEL_17;
        }
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x25E402344);
      case 2uLL:
        if (!__OFSUB__(*(void *)(v20 + 24), *(void *)(v20 + 16))) {
          goto LABEL_17;
        }
        goto LABEL_34;
      default:
LABEL_17:
        sub_25E426140();
        sub_25E425970();
        swift_bridgeObjectRelease();
        sub_25E425970();
        unint64_t v22 = *(void *)(v2 + 16);
        unint64_t v21 = *(void *)(v2 + 24);
        if (v22 >= v21 >> 1) {
          uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v21 > 1), v22 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v22 + 1;
        uint64_t v23 = v2 + 16 * v22;
        *(void *)(v23 + 32) = 0x617461646174656DLL;
        *(void *)(v23 + 40) = 0xEB00000000203D20;
        sub_25E3CEB1C(v20, v19);
        break;
    }
  }
  uint64_t v24 = (id *)(v1 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  if (*v24)
  {
    id v25 = *v24;
    sub_25E425EA0();
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(v25, sel_description);
    sub_25E4258F0();

    sub_25E425970();
    swift_bridgeObjectRelease();
    unint64_t v28 = *(void *)(v2 + 16);
    unint64_t v27 = *(void *)(v2 + 24);
    if (v28 >= v27 >> 1) {
      uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v27 > 1), v28 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v28 + 1;
    uint64_t v29 = v2 + 16 * v28;
    *(void *)(v29 + 32) = 0xD000000000000012;
    *(void *)(v29 + 40) = 0x800000025E42AE00;
  }
  sub_25E425970();
  swift_beginAccess();
  sub_25E425F60();
  unint64_t v31 = *(void *)(v2 + 16);
  unint64_t v30 = *(void *)(v2 + 24);
  if (v31 >= v30 >> 1) {
    uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v30 > 1), v31 + 1, 1, (void *)v2);
  }
  *(void *)(v2 + 16) = v31 + 1;
  uint64_t v32 = v2 + 16 * v31;
  *(void *)(v32 + 32) = 0;
  *(void *)(v32 + 40) = 0xE000000000000000;
  sub_25E425EA0();
  sub_25E425970();
  swift_beginAccess();
  sub_25E425B70();
  unint64_t v34 = *(void *)(v2 + 16);
  unint64_t v33 = *(void *)(v2 + 24);
  if (v34 >= v33 >> 1) {
    uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v33 > 1), v34 + 1, 1, (void *)v2);
  }
  *(void *)(v2 + 16) = v34 + 1;
  uint64_t v35 = v2 + 16 * v34;
  *(void *)(v35 + 32) = 0;
  *(void *)(v35 + 40) = 0xE000000000000000;
  sub_25E425EA0();
  sub_25E425970();
  swift_beginAccess();
  sub_25E425B70();
  unint64_t v37 = *(void *)(v2 + 16);
  unint64_t v36 = *(void *)(v2 + 24);
  if (v37 >= v36 >> 1) {
    uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v36 > 1), v37 + 1, 1, (void *)v2);
  }
  *(void *)(v2 + 16) = v37 + 1;
  uint64_t v38 = v2 + 16 * v37;
  *(void *)(v38 + 32) = 0;
  *(void *)(v38 + 40) = 0xE000000000000000;
  sub_25E425EA0();
  sub_25E425970();
  swift_beginAccess();
  sub_25E425B70();
  unint64_t v40 = *(void *)(v2 + 16);
  unint64_t v39 = *(void *)(v2 + 24);
  if (v40 >= v39 >> 1) {
    uint64_t v2 = (uint64_t)sub_25E3EA7D4((void *)(v39 > 1), v40 + 1, 1, (void *)v2);
  }
  *(void *)(v2 + 16) = v40 + 1;
  uint64_t v41 = v2 + 16 * v40;
  *(void *)(v41 + 32) = 0;
  *(void *)(v41 + 40) = 0xE000000000000000;
  swift_getObjectType();
  sub_25E426290();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8B0);
  sub_25E3D926C((unint64_t *)&qword_26A6EDA90, &qword_26A6ED8B0);
  sub_25E425880();
  swift_bridgeObjectRelease();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  return 60;
}

BOOL sub_25E402354(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_25E3FBED4(a1, (uint64_t)v40, &qword_26B389560);
  if (!v41)
  {
    sub_25E3CE8D4((uint64_t)v40, &qword_26B389560);
    return 0;
  }
  type metadata accessor for Sticker(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR___STKSticker_type) != v39[OBJC_IVAR___STKSticker_type]) {
    goto LABEL_23;
  }
  sub_25E4254F0();
  sub_25E409DB0((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
  if ((sub_25E4258A0() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___STKSticker_accessibilityName);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = &v39[OBJC_IVAR___STKSticker_accessibilityName];
  swift_beginAccess();
  uint64_t v7 = *((void *)v6 + 1);
  if (v5)
  {
    if (!v7 || (v4 != *(void *)v6 || v5 != v7) && (sub_25E426160() & 1) == 0) {
      goto LABEL_23;
    }
  }
  else if (v7)
  {
    goto LABEL_23;
  }
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = &v39[OBJC_IVAR___STKSticker_name];
  swift_beginAccess();
  if ((v9 != *(void *)v11 || v10 != *((void *)v11 + 1)) && (sub_25E426160() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = &v39[OBJC_IVAR___STKSticker_effect];
  swift_beginAccess();
  if (v13 != *(void *)v14) {
    goto LABEL_23;
  }
  unint64_t v15 = (unint64_t *)(v2 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  unint64_t v16 = *v15;
  uint64_t v17 = (uint64_t *)&v39[OBJC_IVAR___STKSticker_representations];
  swift_beginAccess();
  uint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned __int8 v19 = sub_25E3FF500(v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v20 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  uint64_t v23 = (uint64_t *)&v39[OBJC_IVAR___STKSticker_metadata];
  swift_beginAccess();
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  if (v22 >> 60 == 15)
  {
    if (v25 >> 60 == 15) {
      goto LABEL_26;
    }
LABEL_22:
    sub_25E3CEA9C(v21, v22);
    sub_25E3CEA9C(v24, v25);
    sub_25E3CEB1C(v21, v22);
    sub_25E3CEB1C(v24, v25);
    goto LABEL_23;
  }
  if (v25 >> 60 == 15) {
    goto LABEL_22;
  }
  sub_25E3CEA9C(v21, v22);
  sub_25E3CEA9C(v24, v25);
  char v27 = sub_25E407F60(v21, v22, v24, v25);
  sub_25E3CEB1C(v24, v25);
  sub_25E3CEB1C(v21, v22);
  if ((v27 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_26:
  unint64_t v28 = (void **)(v2 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  uint64_t v29 = *v28;
  unint64_t v30 = (void **)&v39[OBJC_IVAR___STKSticker_attributionInfo];
  swift_beginAccess();
  unint64_t v31 = *v30;
  if (v29)
  {
    if (v31)
    {
      type metadata accessor for Sticker.AttributionInfo();
      id v32 = v31;
      id v33 = v29;
      char v34 = sub_25E425D30();

      if (v34) {
        goto LABEL_31;
      }
    }
LABEL_23:

    return 0;
  }
  if (v31) {
    goto LABEL_23;
  }
LABEL_31:
  uint64_t v35 = (double *)(v2 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  double v36 = *v35;
  unint64_t v37 = (double *)&v39[OBJC_IVAR___STKSticker_libraryIndex];
  swift_beginAccess();
  double v38 = *v37;

  return v36 == v38;
}

void *sub_25E4028B0()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62) {
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v3; uint64_t v3 = sub_25E425F80())
  {
    uint64_t v4 = 4;
    while (1)
    {
      uint64_t v5 = (v2 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x2611D6C30](v4 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v8 = &v5[OBJC_IVAR___STKStickerRepresentation_isPreferred];
      swift_beginAccess();
      if (*v8 == 1)
      {
        swift_bridgeObjectRelease_n();
        return v6;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain_n();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_25E402A08(uint64_t a1)
{
  uint64_t v3 = (unint64_t *)(v1 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  unint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  char v5 = sub_25E3FF388(a1, v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_25E409A78();
    swift_allocError();
    return swift_willThrow();
  }
  unint64_t v6 = *v3;
  if (!(*v3 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v7) {
      goto LABEL_4;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_25E425F80();
  if (!v7) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_4:
  uint64_t result = sub_25E3CE930(0, (unint64_t *)&unk_26A6EDAA0);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        uint64_t v10 = (char *)MEMORY[0x2611D6C30](v9, v6);
      }
      else {
        uint64_t v10 = (char *)*(id *)(v6 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      ++v9;
      char v12 = sub_25E425D30();
      uint64_t v13 = &v11[OBJC_IVAR___STKStickerRepresentation_isPreferred];
      swift_beginAccess();
      *uint64_t v13 = v12 & 1;
    }
    while (v7 != v9);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_25E402BDC()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (*v1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (uint64_t i = v1; v3; uint64_t i = v1)
  {
    unint64_t v4 = MEMORY[0x263F8EE78];
    uint64_t v5 = 4;
    while (1)
    {
      uint64_t v6 = v5 - 4;
      uint64_t v7 = (v2 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x2611D6C30](v5 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v5);
      uint64_t v8 = v7;
      uint64_t v1 = (unint64_t *)(v5 - 3);
      if (__OFADD__(v6, 1)) {
        break;
      }
      uint64_t v9 = &v7[OBJC_IVAR___STKStickerRepresentation_isPreferred];
      swift_beginAccess();
      LODWORD(v9) = *v9;

      if (v9 == 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = (unint64_t)sub_25E3EA6C4(0, *(void *)(v4 + 16) + 1, 1, (void *)v4);
        }
        unint64_t v11 = *(void *)(v4 + 16);
        unint64_t v10 = *(void *)(v4 + 24);
        if (v11 >= v10 >> 1) {
          unint64_t v4 = (unint64_t)sub_25E3EA6C4((void *)(v10 > 1), v11 + 1, 1, (void *)v4);
        }
        *(void *)(v4 + 16) = v11 + 1;
        *(void *)(v4 + 8 * v11 + 32) = v6;
      }
      ++v5;
      if (v1 == (unint64_t *)v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = sub_25E425F80();
  }
  unint64_t v4 = MEMORY[0x263F8EE78];
LABEL_18:
  swift_bridgeObjectRelease_n();
  uint64_t v12 = *(void *)(v4 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = *i;
    if (*i >> 62) {
      goto LABEL_41;
    }
    uint64_t v14 = *(NSObject **)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_23;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    if (qword_26A6ED548 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_25E4256A0();
    __swift_project_value_buffer(v29, (uint64_t)qword_26A6EDA70);
    uint64_t v14 = sub_25E425680();
    os_log_type_t v30 = sub_25E425BF0();
    if (os_log_type_enabled(v14, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v31 = 0;
      _os_log_impl(&dword_25E3BB000, v14, v30, "No representation was preferred, but none was preferable", v31, 2u);
      MEMORY[0x2611D77B0](v31, -1, -1);
    }
    goto LABEL_46;
  }
  uint64_t v13 = v12 - 1;
  if (v12 == 1)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v23 = 0;
  while (1)
  {
    unint64_t v24 = *(void *)(v4 + 8 * v23 + 40);
    unint64_t v25 = *i;
    if ((*i & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v26 = (char *)MEMORY[0x2611D6C30](v24, v25);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    if ((v24 & 0x8000000000000000) != 0) {
      break;
    }
    if (v24 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_40;
    }
    id v26 = (char *)*(id *)(v25 + 8 * v24 + 32);
LABEL_34:
    char v27 = &v26[OBJC_IVAR___STKStickerRepresentation_isPreferred];
    swift_beginAccess();
    *char v27 = 0;

    if (v13 == ++v23) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_25E425F80();
  if (!v14) {
    goto LABEL_42;
  }
LABEL_23:
  if ((v4 & 0xC000000000000001) != 0)
  {
    unint64_t v15 = MEMORY[0x2611D6C30](0, v4);
LABEL_26:
    uint64_t v14 = v15;
    swift_bridgeObjectRelease();
    if (qword_26A6ED548 != -1) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v15 = *(id *)(v4 + 32);
      goto LABEL_26;
    }
    __break(1u);
LABEL_49:
    swift_once();
  }
  uint64_t v16 = sub_25E4256A0();
  __swift_project_value_buffer(v16, (uint64_t)qword_26A6EDA70);
  uint64_t v17 = v32;
  uint64_t v18 = sub_25E425680();
  os_log_type_t v19 = sub_25E425BD0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    unint64_t v22 = v17;
    sub_25E425D80();
    *uint64_t v21 = v17;

    _os_log_impl(&dword_25E3BB000, v18, v19, "Implicitly preferring the first representation of sticker: %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v21, -1, -1);
    MEMORY[0x2611D77B0](v20, -1, -1);
  }
  else
  {

    uint64_t v18 = v17;
  }

  unint64_t v28 = (char *)v14 + OBJC_IVAR___STKStickerRepresentation_isPreferred;
  swift_beginAccess();
  unsigned char *v28 = 1;
LABEL_46:
}

uint64_t static Sticker.supportsSecureCoding.getter()
{
  return 1;
}

id Sticker.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Sticker.init(coder:)(a1);
}

id Sticker.init(coder:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v79 - v7;
  uint64_t v9 = sub_25E4254F0();
  unint64_t v10 = *(void **)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v91 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v1[OBJC_IVAR___STKSticker_accessibilityName];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  unint64_t v93 = v12;
  uint64_t v13 = &v1[OBJC_IVAR___STKSticker_searchText];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v98 = v13;
  uint64_t v14 = &v1[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unint64_t v99 = v14;
  uint64_t v94 = (uint64_t *)&v1[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v1[OBJC_IVAR___STKSticker_metadata] = xmmword_25E428580;
  unint64_t v15 = &v1[OBJC_IVAR___STKSticker_externalURI];
  *(void *)unint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v95 = (unint64_t *)v15;
  unint64_t v97 = (id *)&v1[OBJC_IVAR___STKSticker_attributionInfo];
  *(void *)&v1[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  uint64_t v16 = (void (*)(void))v10[7];
  uint64_t v92 = (uint64_t)&v1[OBJC_IVAR___STKSticker__companionRecentUUID];
  v16();
  uint64_t v96 = v1;
  uint64_t v17 = (void *)sub_25E4258C0();
  id v90 = objc_msgSend(a1, sel_decodeIntegerForKey_, v17);

  sub_25E3CE930(0, &qword_26B3894F8);
  uint64_t v18 = sub_25E425CE0();
  if (!v18
    || (os_log_type_t v19 = (void *)v18,
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v6, 1, 1, v9),
        sub_25E409DB0((unint64_t *)&unk_26A6EDAB0, MEMORY[0x263F07508]),
        sub_25E425FF0(),
        v19,
        uint64_t v20 = (unsigned int (*)(char *, uint64_t, uint64_t))v10[6],
        v20(v6, 1, v9) == 1))
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v8, 1, 1, v9);
LABEL_4:

    sub_25E3CE8D4((uint64_t)v8, &qword_26B389370);
LABEL_5:
    uint64_t v21 = v97;
    unint64_t v22 = v96;
    uint64_t v23 = v94;
    uint64_t v24 = v92;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25E3CEB1C(*v23, v23[1]);
    swift_bridgeObjectRelease();

    sub_25E3CE8D4(v24, &qword_26B389370);
    type metadata accessor for Sticker(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v89 = v10;
  char v27 = (void (*)(char *, char *, uint64_t))v10[4];
  v27(v8, v6, v9);
  ((void (*)(char *, void, uint64_t, uint64_t))v16)(v8, 0, 1, v9);
  if (v20(v8, 1, v9) == 1) {
    goto LABEL_4;
  }
  unint64_t v28 = v91;
  v27(v91, v8, v9);
  type metadata accessor for Sticker.Representation();
  uint64_t v29 = sub_25E425CF0();
  if (!v29)
  {

    ((void (*)(char *, uint64_t))v89[1])(v28, v9);
    goto LABEL_5;
  }
  uint64_t v30 = v29;
  sub_25E3CE930(0, (unint64_t *)&qword_26A6EDC90);
  uint64_t v31 = sub_25E425CE0();
  id v32 = v89;
  if (!v31 || (id v33 = (void *)v31, v103 = 0, v104 = 0, sub_25E4258E0(), v33, (v34 = v104) == 0))
  {

LABEL_27:
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v32[1])(v28, v9);
    goto LABEL_5;
  }
  uint64_t v35 = v103;
  uint64_t v36 = sub_25E425CE0();
  if (!v36 || (unint64_t v37 = (void *)v36, v103 = 0, v104 = 0, sub_25E4258E0(), v37, !v104))
  {

LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v88 = (uint64_t)v104;
  uint64_t v86 = v103;
  double v38 = (void *)sub_25E4258C0();
  id v85 = objc_msgSend(a1, sel_decodeIntegerForKey_, v38);

  unint64_t v39 = (void *)sub_25E4258C0();
  id v87 = objc_msgSend(a1, sel_decodeIntegerForKey_, v39);

  unint64_t v40 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v40);
  uint64_t v42 = v41;

  uint64_t v43 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v43);
  uint64_t v45 = v44;

  uint64_t v46 = sub_25E425CE0();
  if (!v46 || (uint64_t v47 = (void *)v46, v103 = 0, v104 = 0, sub_25E4258E0(), v47, !v104))
  {

    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v84 = (uint64_t)v104;
  uint64_t v83 = v103;
  uint64_t v48 = sub_25E425CE0();
  if (!v48 || (uint64_t v49 = (void *)v48, v103 = 0, v104 = 0, sub_25E4258E0(), v49, !v104))
  {

    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (!v90)
  {
    uint64_t v80 = v103;
    uint64_t v81 = (uint64_t)v104;
    uint64_t v82 = v30;
    id v90 = v34;
    char v50 = 0;
    goto LABEL_29;
  }
  if (v90 != (id)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v80 = v103;
  uint64_t v81 = (uint64_t)v104;
  uint64_t v82 = v30;
  id v90 = v34;
  char v50 = 1;
LABEL_29:
  type metadata accessor for Sticker.AttributionInfo();
  uint64_t v92 = sub_25E425CE0();
  sub_25E3CE930(0, (unint64_t *)&unk_26A6EDAC0);
  uint64_t v51 = sub_25E425CE0();
  if (v51)
  {
    id v52 = (void *)v51;
    uint64_t v53 = sub_25E4253D0();
    unint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    unint64_t v55 = 0xF000000000000000;
  }
  uint64_t v56 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v56);
  uint64_t v58 = v57;

  uint64_t v59 = v96;
  v96[OBJC_IVAR___STKSticker_type] = v50;
  uint64_t v60 = v91;
  ((void (*)(char *, char *, uint64_t))v32[2])(&v59[OBJC_IVAR___STKSticker_identifier], v91, v9);
  *(void *)&v59[OBJC_IVAR___STKSticker_representations] = v82;
  uint64_t v61 = v93;
  swift_beginAccess();
  id v62 = v90;
  *(void *)uint64_t v61 = v35;
  *((void *)v61 + 1) = v62;
  swift_bridgeObjectRelease();
  char v63 = &v59[OBJC_IVAR___STKSticker_name];
  uint64_t v64 = v88;
  *(void *)char v63 = v86;
  *((void *)v63 + 1) = v64;
  if ((unint64_t)v85 + 1 >= 6) {
    id v65 = 0;
  }
  else {
    id v65 = v85;
  }
  *(void *)&v59[OBJC_IVAR___STKSticker_effect] = v65;
  unint64_t v66 = v94;
  swift_beginAccess();
  uint64_t v67 = *v66;
  unint64_t v68 = v66[1];
  *unint64_t v66 = v53;
  v66[1] = v55;
  sub_25E3CEA9C(v53, v55);
  sub_25E3CEB1C(v67, v68);
  sub_25E425490();
  unint64_t v101 = 0xD00000000000001BLL;
  unint64_t v102 = 0x800000025E42A830;
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E3CEB1C(v53, v55);
  unint64_t v69 = v101;
  unint64_t v70 = v102;
  ((void (*)(char *, uint64_t))v32[1])(v60, v9);
  uint64_t v71 = v95;
  swift_beginAccess();
  unint64_t *v71 = v69;
  v71[1] = v70;
  swift_bridgeObjectRelease();
  id v72 = v97;
  swift_beginAccess();
  uint64_t v73 = *v72;
  *id v72 = (void *)v92;

  *(void *)&v59[OBJC_IVAR___STKSticker_byteCount] = v87;
  *(void *)&v59[OBJC_IVAR___STKSticker_creationDate] = v42;
  *(void *)&v59[OBJC_IVAR___STKSticker_lastUsedDate] = v45;
  *(void *)&v59[OBJC_IVAR___STKSticker_libraryIndex] = v58;
  uint64_t v74 = v98;
  swift_beginAccess();
  uint64_t v75 = v84;
  *(void *)uint64_t v74 = v83;
  *((void *)v74 + 1) = v75;
  swift_bridgeObjectRelease();
  uint64_t v76 = v99;
  swift_beginAccess();
  uint64_t v77 = v81;
  *(void *)uint64_t v76 = v80;
  *((void *)v76 + 1) = v77;

  swift_bridgeObjectRelease();
  uint64_t v78 = (objc_class *)type metadata accessor for Sticker(0);
  v100.receiver = v59;
  v100.super_class = v78;
  id v25 = objc_msgSendSuper2(&v100, sel_init);

  return v25;
}

void sub_25E403D88(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR___STKSticker_type);
  uint64_t v5 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v4, v5);

  uint64_t v6 = (void *)sub_25E4254A0();
  uint64_t v7 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  swift_beginAccess();
  type metadata accessor for Sticker.Representation();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  uint64_t v10 = v2 + OBJC_IVAR___STKSticker_accessibilityName;
  swift_beginAccess();
  if (*(void *)(v10 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);
  swift_unknownObjectRelease();

  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  unint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v16, v17);

  uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  uint64_t v19 = 0;
  unint64_t v20 = v18[1];
  if (v20 >> 60 != 15)
  {
    uint64_t v21 = *v18;
    sub_25E3CEAB0(v21, v20);
    uint64_t v19 = sub_25E4253B0();
    sub_25E3CEB1C(v21, v20);
  }
  unint64_t v22 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v22);
  swift_unknownObjectRelease();

  uint64_t v23 = (id *)(v2 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  id v24 = *v23;
  id v25 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v24, v25);

  id v26 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_byteCount);
  swift_beginAccess();
  uint64_t v27 = *v26;
  unint64_t v28 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v27, v28);

  uint64_t v29 = (double *)(v2 + OBJC_IVAR___STKSticker_creationDate);
  swift_beginAccess();
  double v30 = *v29;
  uint64_t v31 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v31, v30);

  id v32 = (double *)(v2 + OBJC_IVAR___STKSticker_lastUsedDate);
  swift_beginAccess();
  double v33 = *v32;
  char v34 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v34, v33);

  uint64_t v35 = (double *)(v2 + OBJC_IVAR___STKSticker_libraryIndex);
  swift_beginAccess();
  double v36 = *v35;
  unint64_t v37 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v37, v36);

  uint64_t v38 = v2 + OBJC_IVAR___STKSticker_searchText;
  swift_beginAccess();
  if (*(void *)(v38 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
  }
  unint64_t v40 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v39, v40);
  swift_unknownObjectRelease();

  uint64_t v41 = v2 + OBJC_IVAR___STKSticker_sanitizedPrompt;
  swift_beginAccess();
  if (*(void *)(v41 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = 0;
  }
  uint64_t v43 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v42, v43);
  swift_unknownObjectRelease();
}

void *static Sticker.StickerType.allCases.getter()
{
  return &unk_270B22290;
}

void *sub_25E40448C@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_25E4044AC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25E4044B8()
{
  return sub_25E425A90();
}

uint64_t sub_25E404518()
{
  return sub_25E425A70();
}

void sub_25E404568(void *a1@<X8>)
{
  *a1 = &unk_270B222B8;
}

BOOL sub_25E404578(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25E40458C()
{
  return sub_25E426240();
}

uint64_t sub_25E4045D4()
{
  return sub_25E426230();
}

uint64_t sub_25E404600()
{
  return sub_25E426240();
}

uint64_t sub_25E404644@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25E4081F8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_25E404678(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25E404684()
{
  return sub_25E425A90();
}

uint64_t sub_25E4046E4()
{
  return sub_25E425A70();
}

uint64_t sub_25E404734@<X0>(void *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25E4254F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389340);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25E425390();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v15;
  sub_25E425370();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12) == 1)
  {
    sub_25E3CE8D4((uint64_t)v11, (uint64_t *)&unk_26B389340);
    goto LABEL_10;
  }
  uint64_t v91 = v16;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v11, v12);
  uint64_t v17 = sub_25E425360();
  if (!v18)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    goto LABEL_10;
  }
  if (v17 == 0x72656B63697473 && v18 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_25E426160();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_9;
    }
  }
  id v90 = a1;
  unint64_t v22 = (void *)sub_25E4252C0();
  uint64_t v23 = v22;
  uint64_t v24 = v22[2];
  if ((unint64_t)(v24 - 6) < 0xFFFFFFFFFFFFFFFELL)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    goto LABEL_10;
  }
  uint64_t v25 = v22[6];
  uint64_t v26 = v22[7];
  BOOL v27 = v25 == 1919251317 && v26 == 0xE400000000000000;
  int v28 = v27;
  int v89 = v28;
  if (!v27
    && (sub_25E426160() & 1) == 0
    && (v25 != 0x746E65636572 || v26 != 0xE600000000000000)
    && (sub_25E426160() & 1) == 0)
  {
    if (v25 == 0x696A6F6D656DLL && v26 == 0xE600000000000000 || (sub_25E426160() & 1) != 0)
    {
      if (v24 == 4)
      {
        uint64_t v39 = v23[8];
        uint64_t v40 = v23[9];
        uint64_t v42 = v23[10];
        uint64_t v41 = v23[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
        uint64_t v43 = v90;
        void *v90 = v39;
        v43[1] = v40;
        v43[2] = v42;
        void v43[3] = v41;
        type metadata accessor for Sticker.URIType(0);
        return swift_storeEnumTagMultiPayload();
      }
    }
    else if (v25 == 0x696A6F6D65 && v26 == 0xE500000000000000 || (sub_25E426160() & 1) != 0)
    {
      if (v24 == 4)
      {
        uint64_t v54 = v23[8];
        uint64_t v53 = v23[9];
        uint64_t v56 = v23[10];
        unint64_t v55 = v23[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v54 == 0x696669746E656469 && v53 == 0xEA00000000007265)
        {
          swift_bridgeObjectRelease();
          uint64_t v57 = v90;
        }
        else
        {
          char v78 = sub_25E426160();
          swift_bridgeObjectRelease();
          uint64_t v57 = v90;
          if ((v78 & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
            swift_bridgeObjectRelease();
            goto LABEL_10;
          }
        }
        uint64_t v79 = sub_25E3FF33C(v56, v55);
        uint64_t v81 = v80;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
        if (v81)
        {
          *uint64_t v57 = v79;
          v57[1] = v81;
          type metadata accessor for Sticker.URIType(0);
          return swift_storeEnumTagMultiPayload();
        }
        goto LABEL_10;
      }
    }
    else if (v25 == 0x61705F6472696874 && v26 == 0xEB00000000797472 || (sub_25E426160()) && v24 == 5)
    {
      uint64_t v63 = v23[8];
      uint64_t v64 = v23[9];
      uint64_t v66 = v23[10];
      uint64_t v65 = v23[11];
      uint64_t v68 = v23[12];
      uint64_t v67 = v23[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
      unint64_t v69 = v90;
      void *v90 = v63;
      v69[1] = v64;
      v69[2] = v66;
      v69[3] = v65;
      v69[4] = v68;
      v69[5] = v67;
      type metadata accessor for Sticker.URIType(0);
      return swift_storeEnumTagMultiPayload();
    }
    goto LABEL_125;
  }
  if (v24 != 4)
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v91 + 8);
    swift_bridgeObjectRetain();
    v35(v14, v12);
    swift_bridgeObjectRelease();
LABEL_126:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v29 = v26;
  uint64_t v31 = v23[8];
  uint64_t v30 = v23[9];
  uint64_t v32 = v23[10];
  uint64_t v85 = v25;
  uint64_t v86 = v32;
  unint64_t v33 = v23[11];
  uint64_t v88 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v87 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v31 == 0x696669746E656469 && v30 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v34 = v90;
LABEL_33:
    swift_bridgeObjectRelease();
    sub_25E425480();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v37(v8, v4, v5);
      v37((char *)v34, v8, v5);
      type metadata accessor for Sticker.URIType(0);
      return swift_storeEnumTagMultiPayload();
    }
    sub_25E3CE8D4((uint64_t)v4, &qword_26B389370);
LABEL_10:
    type metadata accessor for Sticker.URIType(0);
    return swift_storeEnumTagMultiPayload();
  }
  char v36 = sub_25E426160();
  char v34 = v90;
  if (v36)
  {
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (v31 == 0x7865646E69 && v30 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    unint64_t v38 = v87;
    goto LABEL_45;
  }
  char v44 = sub_25E426160();
  swift_bridgeObjectRelease();
  unint64_t v38 = v87;
  if ((v44 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    swift_bridgeObjectRelease();
    goto LABEL_126;
  }
LABEL_45:
  uint64_t v45 = HIBYTE(v38) & 0xF;
  uint64_t result = v86;
  uint64_t v46 = v86 & 0xFFFFFFFFFFFFLL;
  if ((v38 & 0x2000000000000000) != 0) {
    uint64_t v47 = HIBYTE(v38) & 0xF;
  }
  else {
    uint64_t v47 = v86 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v48 = v88;
  if (!v47)
  {
    swift_bridgeObjectRelease();
    goto LABEL_125;
  }
  if ((v38 & 0x1000000000000000) == 0)
  {
    if ((v38 & 0x2000000000000000) == 0)
    {
      if ((v86 & 0x1000000000000000) != 0) {
        uint64_t v49 = (unsigned __int8 *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v49 = (unsigned __int8 *)sub_25E425F00();
      }
      uint64_t v50 = (uint64_t)sub_25E407668(v49, v46, 10);
      char v52 = v51 & 1;
LABEL_86:
      swift_bridgeObjectRelease();
      if ((v52 & 1) == 0) {
        goto LABEL_87;
      }
      goto LABEL_125;
    }
    v92[0] = v86;
    v92[1] = v38 & 0xFFFFFFFFFFFFFFLL;
    if (v86 == 43)
    {
      if (!v45) {
        goto LABEL_129;
      }
      if (v45 != 1 && (BYTE1(v86) - 48) <= 9u)
      {
        uint64_t v50 = (BYTE1(v86) - 48);
        if (v45 == 2) {
          goto LABEL_85;
        }
        if ((BYTE2(v86) - 48) <= 9u)
        {
          uint64_t v50 = 10 * (BYTE1(v86) - 48) + (BYTE2(v86) - 48);
          uint64_t v58 = v45 - 3;
          if (v58)
          {
            uint64_t v59 = (unsigned __int8 *)v92 + 3;
            while (1)
            {
              unsigned int v60 = *v59 - 48;
              if (v60 > 9) {
                goto LABEL_83;
              }
              uint64_t v61 = 10 * v50;
              if ((unsigned __int128)(v50 * (__int128)10) >> 64 != (10 * v50) >> 63
                || (uint64_t v50 = v61 + v60, __OFADD__(v61, v60)))
              {
LABEL_122:
                uint64_t v50 = 0;
                char v52 = 1;
                char v34 = v90;
                uint64_t v48 = v88;
                goto LABEL_86;
              }
              char v52 = 0;
              ++v59;
              --v58;
              char v34 = v90;
              uint64_t v48 = v88;
              if (!v58) {
                goto LABEL_86;
              }
            }
          }
          goto LABEL_85;
        }
      }
    }
    else
    {
      if (v86 == 45)
      {
        if (v45)
        {
          if (v45 == 1 || (BYTE1(v86) - 48) > 9u) {
            goto LABEL_83;
          }
          if (v45 == 2)
          {
            char v52 = 0;
            uint64_t v50 = -(uint64_t)(BYTE1(v86) - 48);
            goto LABEL_86;
          }
          if ((BYTE2(v86) - 48) > 9u) {
            goto LABEL_83;
          }
          uint64_t v50 = -10 * (BYTE1(v86) - 48) - (BYTE2(v86) - 48);
          uint64_t v74 = v45 - 3;
          if (v74)
          {
            uint64_t v75 = (unsigned __int8 *)v92 + 3;
            while (1)
            {
              unsigned int v76 = *v75 - 48;
              if (v76 > 9) {
                goto LABEL_83;
              }
              uint64_t v77 = 10 * v50;
              if ((unsigned __int128)(v50 * (__int128)10) >> 64 != (10 * v50) >> 63) {
                goto LABEL_122;
              }
              uint64_t v50 = v77 - v76;
              if (__OFSUB__(v77, v76)) {
                goto LABEL_122;
              }
              char v52 = 0;
              ++v75;
              --v74;
              char v34 = v90;
              uint64_t v48 = v88;
              if (!v74) {
                goto LABEL_86;
              }
            }
          }
LABEL_85:
          char v52 = 0;
          goto LABEL_86;
        }
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      if (v45 && (v86 - 48) <= 9u)
      {
        uint64_t v50 = (v86 - 48);
        if (v45 == 1) {
          goto LABEL_85;
        }
        if ((BYTE1(v86) - 48) <= 9u)
        {
          uint64_t v50 = 10 * (v86 - 48) + (BYTE1(v86) - 48);
          uint64_t v70 = v45 - 2;
          if (v70)
          {
            uint64_t v71 = (unsigned __int8 *)v92 + 2;
            while (1)
            {
              unsigned int v72 = *v71 - 48;
              if (v72 > 9) {
                goto LABEL_83;
              }
              uint64_t v73 = 10 * v50;
              if ((unsigned __int128)(v50 * (__int128)10) >> 64 != (10 * v50) >> 63) {
                goto LABEL_122;
              }
              uint64_t v50 = v73 + v72;
              if (__OFADD__(v73, v72)) {
                goto LABEL_122;
              }
              char v52 = 0;
              ++v71;
              --v70;
              char v34 = v90;
              uint64_t v48 = v88;
              if (!v70) {
                goto LABEL_86;
              }
            }
          }
          goto LABEL_85;
        }
      }
    }
LABEL_83:
    uint64_t v50 = 0;
    char v52 = 1;
    goto LABEL_86;
  }
  uint64_t v50 = (uint64_t)sub_25E407580(v86, v38, 10);
  char v83 = v82;
  swift_bridgeObjectRelease();
  if (v83)
  {
LABEL_125:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    goto LABEL_126;
  }
LABEL_87:
  if (v89 & 1) != 0 || (sub_25E426160())
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    swift_bridgeObjectRelease();
    *char v34 = v50;
    *((unsigned char *)v34 + 8) = 1;
    goto LABEL_10;
  }
  if (v85 == 0x746E65636572 && v48 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_94:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v14, v12);
    *char v34 = v50;
    *((unsigned char *)v34 + 8) = 0;
    goto LABEL_10;
  }
  char v62 = sub_25E426160();
  uint64_t result = swift_bridgeObjectRelease();
  if (v62) {
    goto LABEL_94;
  }
LABEL_130:
  __break(1u);
  return result;
}

unint64_t sub_25E405440()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_25E4054A0()
{
  return 0xD000000000000016;
}

uint64_t sub_25E405534()
{
  return 0;
}

unint64_t sub_25E4055C8()
{
  return 0xD000000000000012;
}

id Sticker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Sticker.init()()
{
}

unint64_t sub_25E405710(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x6E65736572706572;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6E756F4365747962;
      break;
    case 5:
      unint64_t result = 1701667182;
      break;
    case 6:
      unint64_t result = 0x6554686372616573;
      break;
    case 7:
      unint64_t result = 0x657A6974696E6173;
      break;
    case 8:
      unint64_t result = 0x746365666665;
      break;
    case 9:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 10:
      unint64_t result = 0x6C616E7265747865;
      break;
    case 11:
      unint64_t result = 0x7475626972747461;
      break;
    case 12:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 13:
      unint64_t result = 0x646573557473616CLL;
      break;
    case 14:
      unint64_t result = 0x497972617262696CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25E405930()
{
  return sub_25E405710(*v0);
}

uint64_t sub_25E405938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25E40BD0C(a1, a2);
  *a3 = result;
  return result;
}

void sub_25E405960(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_25E40596C(uint64_t a1)
{
  unint64_t v2 = sub_25E409AEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E4059A8(uint64_t a1)
{
  unint64_t v2 = sub_25E409AEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

id Sticker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Sticker(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25E405B30(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389010);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E409AEC();
  sub_25E426260();
  char v40 = *(unsigned char *)(v2 + OBJC_IVAR___STKSticker_type);
  LOBYTE(v39) = 0;
  sub_25E3DBA3C();
  uint64_t v11 = v41;
  sub_25E426100();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v41 = v8;
  uint64_t v25 = v6;
  char v40 = 1;
  uint64_t v12 = sub_25E4254F0();
  sub_25E409DB0(&qword_26B388EB8, MEMORY[0x263F07508]);
  sub_25E426100();
  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  uint64_t v39 = *v13;
  char v38 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894D0);
  sub_25E409B94(&qword_26B388FC8, &qword_26B388F80);
  uint64_t v24 = v7;
  sub_25E426100();
  uint64_t v23 = v2;
  swift_beginAccess();
  char v38 = 3;
  swift_bridgeObjectRetain();
  sub_25E4260A0();
  uint64_t v22 = v12;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v37 = 4;
  sub_25E4260F0();
  swift_beginAccess();
  char v36 = 5;
  swift_bridgeObjectRetain();
  sub_25E4260C0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v35 = 6;
  swift_bridgeObjectRetain();
  sub_25E4260A0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v34 = 7;
  swift_bridgeObjectRetain();
  sub_25E4260A0();
  swift_bridgeObjectRelease();
  uint64_t v14 = v23;
  uint64_t v15 = (uint64_t *)(v23 + OBJC_IVAR___STKSticker_effect);
  swift_beginAccess();
  uint64_t v33 = *v15;
  LOBYTE(v32) = 8;
  sub_25E409B40();
  sub_25E426100();
  uint64_t v16 = (long long *)(v14 + OBJC_IVAR___STKSticker_metadata);
  swift_beginAccess();
  long long v32 = *v16;
  char v31 = 9;
  sub_25E3DBC18();
  sub_25E4260B0();
  swift_beginAccess();
  char v31 = 10;
  swift_bridgeObjectRetain();
  sub_25E4260A0();
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t *)(v23 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  uint64_t v30 = *v17;
  char v29 = 11;
  type metadata accessor for Sticker.AttributionInfo();
  sub_25E409DB0((unint64_t *)&unk_26B388F88, (void (*)(uint64_t))type metadata accessor for Sticker.AttributionInfo);
  sub_25E4260B0();
  swift_beginAccess();
  char v29 = 12;
  sub_25E4260E0();
  swift_beginAccess();
  char v28 = 13;
  sub_25E4260E0();
  swift_beginAccess();
  char v27 = 14;
  sub_25E4260E0();
  uint64_t v18 = v23 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)v25;
  sub_25E3FBED4(v18, (uint64_t)v25, &qword_26B389370);
  char v26 = 15;
  uint64_t v20 = v24;
  sub_25E4260B0();
  sub_25E3CE8D4(v19, &qword_26B389370);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v10, v20);
}

id Sticker.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Sticker.init(from:)(a1);
}

id Sticker.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25E4254F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E20);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v1[OBJC_IVAR___STKSticker_accessibilityName];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v68 = (uint64_t *)v12;
  uint64_t v13 = &v1[OBJC_IVAR___STKSticker_searchText];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v79 = (uint64_t *)v13;
  uint64_t v14 = &v1[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unint64_t v69 = (uint64_t *)v14;
  uint64_t v67 = &v1[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v1[OBJC_IVAR___STKSticker_metadata] = xmmword_25E428580;
  uint64_t v15 = &v1[OBJC_IVAR___STKSticker_externalURI];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v66 = (uint64_t *)v15;
  uint64_t v65 = (id *)&v1[OBJC_IVAR___STKSticker_attributionInfo];
  *(void *)&v1[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  uint64_t v59 = v7;
  uint64_t v16 = *(void (**)(void))(v7 + 56);
  uint64_t v64 = &v1[OBJC_IVAR___STKSticker__companionRecentUUID];
  uint64_t v61 = v6;
  v16();
  uint64_t v17 = a1[3];
  char v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_25E409AEC();
  uint64_t v18 = v1;
  unsigned int v60 = v11;
  uint64_t v19 = (uint64_t)v63;
  sub_25E426250();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
    id v23 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25E3CEB1C(*(void *)v67, *((void *)v67 + 1));
    swift_bridgeObjectRelease();

    sub_25E3CE8D4((uint64_t)v64, &qword_26B389370);
    type metadata accessor for Sticker(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v63 = v5;
    char v77 = 0;
    sub_25E3DA984();
    sub_25E426090();
    uint64_t v20 = v68;
    v18[OBJC_IVAR___STKSticker_type] = v78;
    LOBYTE(v78) = 1;
    uint64_t v21 = sub_25E409DB0((unint64_t *)&unk_26B388D70, MEMORY[0x263F07508]);
    uint64_t v22 = v61;
    sub_25E426090();
    uint64_t v56 = v21;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v18[OBJC_IVAR___STKSticker_identifier], v9, v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894D0);
    char v77 = 2;
    sub_25E409B94(&qword_26B388DF8, &qword_26B388DC0);
    sub_25E426090();
    *(void *)&v18[OBJC_IVAR___STKSticker_representations] = v78;
    LOBYTE(v78) = 3;
    uint64_t v25 = sub_25E426010();
    uint64_t v27 = v26;
    swift_beginAccess();
    *uint64_t v20 = v25;
    v20[1] = v27;
    swift_bridgeObjectRelease();
    char v77 = 4;
    *(void *)&v18[OBJC_IVAR___STKSticker_byteCount] = sub_25E426080();
    char v77 = 5;
    uint64_t v28 = sub_25E426050();
    char v29 = (uint64_t *)&v18[OBJC_IVAR___STKSticker_name];
    uint64_t *v29 = v28;
    v29[1] = v30;
    char v77 = 6;
    uint64_t v31 = sub_25E426010();
    uint64_t v33 = v32;
    char v34 = v79;
    swift_beginAccess();
    *char v34 = v31;
    v34[1] = v33;
    swift_bridgeObjectRelease();
    char v76 = 7;
    uint64_t v35 = sub_25E426010();
    uint64_t v37 = v36;
    char v38 = v69;
    swift_beginAccess();
    uint64_t *v38 = v35;
    v38[1] = v37;
    swift_bridgeObjectRelease();
    LOBYTE(v73) = 8;
    sub_25E409C28();
    sub_25E426090();
    *(void *)&v18[OBJC_IVAR___STKSticker_effect] = v75;
    LOBYTE(v75) = 9;
    sub_25E3DA930();
    sub_25E426030();
    uint64_t v39 = v73;
    uint64_t v40 = v74;
    uint64_t v41 = (uint64_t *)v67;
    swift_beginAccess();
    uint64_t v42 = *v41;
    unint64_t v43 = v41[1];
    *uint64_t v41 = v39;
    v41[1] = v40;
    sub_25E3CEB1C(v42, v43);
    LOBYTE(v73) = 10;
    uint64_t v44 = sub_25E426010();
    uint64_t v46 = v45;
    uint64_t v47 = v66;
    swift_beginAccess();
    *uint64_t v47 = v44;
    v47[1] = v46;
    swift_bridgeObjectRelease();
    type metadata accessor for Sticker.AttributionInfo();
    char v72 = 11;
    sub_25E409DB0((unint64_t *)&unk_26B388DC8, (void (*)(uint64_t))type metadata accessor for Sticker.AttributionInfo);
    sub_25E426030();
    uint64_t v48 = v71;
    uint64_t v49 = v65;
    swift_beginAccess();
    uint64_t v50 = *v49;
    *uint64_t v49 = v48;

    LOBYTE(v71) = 12;
    sub_25E426070();
    *(void *)&v18[OBJC_IVAR___STKSticker_creationDate] = v51;
    LOBYTE(v71) = 13;
    sub_25E426070();
    *(void *)&v18[OBJC_IVAR___STKSticker_lastUsedDate] = v52;
    LOBYTE(v71) = 14;
    sub_25E426070();
    *(void *)&v18[OBJC_IVAR___STKSticker_libraryIndex] = v53;
    LOBYTE(v71) = 15;
    sub_25E426030();
    uint64_t v54 = (uint64_t)v64;
    swift_beginAccess();
    sub_25E3EC670((uint64_t)v63, v54);
    swift_endAccess();

    unint64_t v55 = (objc_class *)type metadata accessor for Sticker(0);
    v70.receiver = v18;
    v70.super_class = v55;
    id v23 = objc_msgSendSuper2(&v70, sel_init);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
  }
  return v23;
}

id sub_25E406FC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  id result = Sticker.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25E40701C(void *a1)
{
  return sub_25E405B30(a1);
}

uint64_t sub_25E407040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR___STKSticker_identifier;
  uint64_t v4 = sub_25E4254F0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t static StickerError.== infix(_:_:)()
{
  return 1;
}

uint64_t StickerError.hash(into:)()
{
  return sub_25E426230();
}

uint64_t StickerError.hashValue.getter()
{
  return sub_25E426240();
}

uint64_t sub_25E40712C()
{
  return sub_25E426240();
}

uint64_t sub_25E407170()
{
  return sub_25E426230();
}

uint64_t sub_25E407198()
{
  return sub_25E426240();
}

unint64_t StickerError.errorDescription.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_25E4071F4()
{
  return 0xD000000000000016;
}

uint64_t sub_25E407210@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_25E3CEAB0(a2, a3);
      uint64_t v10 = (char *)sub_25E4251B0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_25E4251D0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_25E4251C0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x25E407474);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_25E3CEA28(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_25E4251B0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_25E4251D0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_25E4251C0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

void *sub_25E407484(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B389530);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25E4074EC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_25E4259D0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2611D66F0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_25E407568(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_25E407668(a1, a2, a3);
}

unsigned __int8 *sub_25E407580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25E425A10();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_25E4078E4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_25E425F00();
  }
LABEL_7:
  uint64_t v11 = sub_25E407668(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_25E407668(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_25E4078E4()
{
  unint64_t v0 = sub_25E425A20();
  uint64_t v4 = sub_25E407964(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25E407964(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_25E407ABC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_25E407484(v9, 0);
      unint64_t v12 = sub_25E407BBC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_25E425F00();
LABEL_4:
        JUMPOUT(0x2611D66A0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2611D66A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2611D66A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_25E407ABC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_25E4074EC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_25E4074EC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_25E407BBC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    id result = v12;
    if (v17 == v15) {
      id result = sub_25E4074EC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      id result = sub_25E4259C0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        id result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          id result = sub_25E425F00();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    id result = sub_25E4074EC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_25E425990();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_25E407DD0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_25E407210((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_25E407EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_25E4251B0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_25E4251D0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_25E4251C0();
  sub_25E407210(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_25E407F60(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x25E4081C8);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_25E3CEAB0(a3, a4);
                  sub_25E3CEAB0(a1, a2);
                  char v17 = sub_25E407EA8((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_25E3CEA28(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_25E3CEAB0(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_25E407EA8(v21, v22, v20, a3, a4);
                  sub_25E3CEA28(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_25E3CEAB0(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_25E3CEAB0(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_25E407DD0(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_25E3CEA28(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25E4081F8(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 6) {
    return 0;
  }
  return result;
}

uint64_t sub_25E408210(unsigned __int8 *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, double a9, unint64_t a10, void (*a11)(void, void), uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char *a22)
{
  unint64_t v23 = v22;
  unint64_t v105 = a8;
  uint64_t v104 = a7;
  uint64_t v102 = a6;
  uint64_t v101 = a5;
  uint64_t v100 = a4;
  uint64_t v99 = a13;
  uint64_t v98 = a12;
  uint64_t v107 = a11;
  unint64_t v108 = a10;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v28 - 8);
  char v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_25E4254F0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v106 = (char *)&v92 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v92 - v35;
  int v96 = *a1;
  uint64_t v37 = &v23[OBJC_IVAR___STKSticker_accessibilityName];
  *(void *)uint64_t v37 = 0;
  *((void *)v37 + 1) = 0;
  char v38 = &v23[OBJC_IVAR___STKSticker_searchText];
  *(void *)char v38 = 0;
  *((void *)v38 + 1) = 0;
  unint64_t v93 = v38;
  uint64_t v39 = &v23[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(void *)uint64_t v39 = 0;
  *((void *)v39 + 1) = 0;
  uint64_t v94 = v39;
  uint64_t v40 = (uint64_t *)&v23[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v23[OBJC_IVAR___STKSticker_metadata] = xmmword_25E428580;
  uint64_t v41 = (unint64_t *)&v23[OBJC_IVAR___STKSticker_externalURI];
  *uint64_t v41 = 0;
  v41[1] = 0;
  uint64_t v103 = (void **)&v23[OBJC_IVAR___STKSticker_attributionInfo];
  *(void *)&v23[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(&v23[OBJC_IVAR___STKSticker__companionRecentUUID], 1, 1, v31);
  uint64_t v95 = a2;
  sub_25E3FBED4(a2, (uint64_t)v30, &qword_26B389370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    uint64_t v42 = v23;
    sub_25E4254E0();
    sub_25E3CE8D4((uint64_t)v30, &qword_26B389370);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v36, v30, v31);
    unint64_t v43 = v23;
  }
  uint64_t v109 = v31;
  unint64_t v97 = a14;
  v23[OBJC_IVAR___STKSticker_type] = v96;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v44(&v23[OBJC_IVAR___STKSticker_identifier], v36, v31);
  *(void *)&v23[OBJC_IVAR___STKSticker_representations] = a3;
  swift_beginAccess();
  uint64_t v45 = v99;
  *(void *)uint64_t v37 = v98;
  *((void *)v37 + 1) = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = &v23[OBJC_IVAR___STKSticker_name];
  uint64_t v47 = v101;
  *(void *)uint64_t v46 = v100;
  *((void *)v46 + 1) = v47;
  *(void *)&v23[OBJC_IVAR___STKSticker_effect] = v102;
  swift_beginAccess();
  uint64_t v48 = *v40;
  unint64_t v49 = v40[1];
  uint64_t v50 = v104;
  unint64_t v51 = (unint64_t)v105;
  *uint64_t v40 = v104;
  v40[1] = v51;
  sub_25E3CEA9C(v50, v51);
  uint64_t v52 = v48;
  uint64_t v53 = v109;
  sub_25E3CEB1C(v52, v49);
  uint64_t v54 = v106;
  unint64_t v105 = v36;
  v44(v106, v36, v53);
  unint64_t v55 = v108;
  uint64_t v56 = v107;
  if (!v107)
  {
    sub_25E425490();
    unint64_t v112 = 0xD00000000000001BLL;
    unint64_t v113 = 0x800000025E42A830;
    sub_25E425970();
    uint64_t v53 = v109;
    swift_bridgeObjectRelease();
    unint64_t v55 = v112;
    uint64_t v56 = (void (*)(void, void))v113;
  }
  uint64_t v58 = *(void (**)(void, void))(v32 + 8);
  unint64_t v57 = v32 + 8;
  uint64_t v107 = v58;
  v58(v54, v53);
  swift_beginAccess();
  *uint64_t v41 = v55;
  v41[1] = (unint64_t)v56;
  swift_bridgeObjectRelease();
  uint64_t v59 = v103;
  swift_beginAccess();
  unsigned int v60 = *v59;
  uint64_t v61 = v97;
  *uint64_t v59 = v97;
  id v62 = v61;

  if (a3 >> 62) {
    goto LABEL_34;
  }
  uint64_t v63 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t v108 = v57;
    if (v63) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v65 = (void *)MEMORY[0x263F8EE78];
    uint64_t v70 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v70) {
      goto LABEL_17;
    }
LABEL_23:
    uint64_t v71 = 0;
    char v76 = v65 + 4;
    while (1)
    {
      uint64_t v77 = *v76++;
      BOOL v78 = __OFADD__(v71, v77);
      v71 += v77;
      if (v78) {
        break;
      }
      if (!--v70) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  uint64_t v111 = (void *)MEMORY[0x263F8EE78];
  uint64_t result = sub_25E3EAA5C(0, v63 & ~(v63 >> 63), 0);
  if (v63 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v65 = v111;
  if ((a3 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v63; ++i)
    {
      uint64_t v67 = (unint64_t *)(MEMORY[0x2611D6C30](i, a3) + OBJC_IVAR___STKStickerRepresentation_byteCount);
      swift_beginAccess();
      unint64_t v57 = *v67;
      swift_unknownObjectRelease();
      uint64_t v111 = v65;
      unint64_t v69 = v65[2];
      unint64_t v68 = v65[3];
      if (v69 >= v68 >> 1)
      {
        sub_25E3EAA5C(v68 > 1, v69 + 1, 1);
        uint64_t v65 = v111;
      }
      _OWORD v65[2] = v69 + 1;
      v65[v69 + 4] = v57;
    }
  }
  else
  {
    for (uint64_t j = 0; j != v63; ++j)
    {
      uint64_t v73 = (unint64_t *)(*(void *)(a3 + 8 * j + 32) + OBJC_IVAR___STKStickerRepresentation_byteCount);
      swift_beginAccess();
      unint64_t v57 = *v73;
      uint64_t v111 = v65;
      unint64_t v75 = v65[2];
      unint64_t v74 = v65[3];
      if (v75 >= v74 >> 1)
      {
        sub_25E3EAA5C(v74 > 1, v75 + 1, 1);
        uint64_t v65 = v111;
      }
      _OWORD v65[2] = v75 + 1;
      v65[v75 + 4] = v57;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v70 = v65[2];
  if (v70) {
    goto LABEL_23;
  }
LABEL_17:
  uint64_t v71 = 0;
LABEL_26:
  swift_bridgeObjectRelease();
  *(void *)&v23[OBJC_IVAR___STKSticker_byteCount] = v71;
  if (a18)
  {
    id v80 = objc_msgSend(self, sel_currentEnvironment);
    id v81 = objc_msgSend(v80, sel_timeProvider);

    objc_msgSend(v81, sel_timestamp);
    a17 = v82;
    swift_unknownObjectRelease();
  }
  uint64_t v106 = a22;
  *(void *)&v23[OBJC_IVAR___STKSticker_creationDate] = a17;
  if (a20)
  {
    id v84 = objc_msgSend(self, (SEL)&selRef_readEmojiDefaults + 7);
    id v85 = objc_msgSend(v84, byte_26552644E);

    objc_msgSend(v85, (SEL)&selRef_arrayForKey_);
    a19 = v86;
    swift_unknownObjectRelease();
  }
  v107(v105, v109);
  *(void *)&v23[OBJC_IVAR___STKSticker_lastUsedDate] = a19;
  *(double *)&v23[OBJC_IVAR___STKSticker_libraryIndex] = a9;
  unint64_t v87 = v93;
  swift_beginAccess();
  *(void *)unint64_t v87 = a15;
  *((void *)v87 + 1) = a16;
  swift_bridgeObjectRelease();
  uint64_t v88 = v94;
  swift_beginAccess();
  int v89 = v106;
  *(void *)uint64_t v88 = a21;
  *((void *)v88 + 1) = v89;

  swift_bridgeObjectRelease();
  id v90 = (objc_class *)type metadata accessor for Sticker(0);
  v110.receiver = v23;
  v110.super_class = v90;
  id v91 = objc_msgSendSuper2(&v110, sel_init);
  sub_25E3CE8D4(v95, &qword_26B389370);
  return (uint64_t)v91;
}

uint64_t type metadata accessor for Sticker(uint64_t a1)
{
  return sub_25E3CA180(a1, qword_26B389618);
}

uint64_t sub_25E408B00()
{
  return 0x3A72656B63697473;
}

uint64_t sub_25E408C3C(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v72 = a7;
  unint64_t v79 = a6;
  uint64_t v78 = a5;
  uint64_t v77 = a4;
  uint64_t v76 = a3;
  uint64_t v15 = sub_25E4254F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v80 = &v69[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v69[-v19];
  int v21 = *a1;
  uint64_t v22 = &v11[OBJC_IVAR___STKSticker_accessibilityName];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  id v84 = v22;
  unint64_t v23 = &v11[OBJC_IVAR___STKSticker_searchText];
  *(void *)unint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  unsigned __int8 v24 = &v11[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(void *)unsigned __int8 v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v25 = (uint64_t *)&v11[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v11[OBJC_IVAR___STKSticker_metadata] = xmmword_25E428580;
  uint64_t v26 = &v11[OBJC_IVAR___STKSticker_externalURI];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  id v81 = (uint64_t *)v26;
  char v83 = (void **)&v11[OBJC_IVAR___STKSticker_attributionInfo];
  *(void *)&v11[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(&v11[OBJC_IVAR___STKSticker__companionRecentUUID], 1, 1, v15);
  unint64_t v27 = v11;
  sub_25E4254E0();
  v27[OBJC_IVAR___STKSticker_type] = v21;
  uint64_t v82 = v16;
  uint64_t v28 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16);
  uint64_t v75 = v16 + 16;
  unint64_t v74 = v28;
  v28(&v27[OBJC_IVAR___STKSticker_identifier], v20, v15);
  *(void *)&v27[OBJC_IVAR___STKSticker_representations] = a2;
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v85 = a8;
  if (!v29) {
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v88 = (void *)MEMORY[0x263F8EE78];
    uint64_t result = sub_25E3EAA5C(0, v29 & ~(v29 >> 63), 0);
    if (v29 < 0)
    {
      __break(1u);
      return result;
    }
    int v70 = v21;
    uint64_t v71 = v20;
    uint64_t v73 = v15;
    uint64_t v31 = v88;
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v29; ++i)
      {
        uint64_t v33 = (uint64_t *)(MEMORY[0x2611D6C30](i, a2) + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        uint64_t v34 = *v33;
        swift_unknownObjectRelease();
        uint64_t v88 = v31;
        unint64_t v36 = v31[2];
        unint64_t v35 = v31[3];
        if (v36 >= v35 >> 1)
        {
          sub_25E3EAA5C(v35 > 1, v36 + 1, 1);
          uint64_t v31 = v88;
        }
        v31[2] = v36 + 1;
        v31[v36 + 4] = v34;
      }
    }
    else
    {
      for (uint64_t j = 0; j != v29; ++j)
      {
        char v38 = (uint64_t *)(*(void *)(a2 + 8 * j + 32) + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        uint64_t v39 = *v38;
        uint64_t v88 = v31;
        unint64_t v41 = v31[2];
        unint64_t v40 = v31[3];
        if (v41 >= v40 >> 1)
        {
          sub_25E3EAA5C(v40 > 1, v41 + 1, 1);
          uint64_t v31 = v88;
        }
        v31[2] = v41 + 1;
        v31[v41 + 4] = v39;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v73;
    uint64_t v20 = v71;
    int v21 = v70;
    uint64_t v42 = v31[2];
    if (!v42) {
      break;
    }
    while (1)
    {
      a8 = 0;
      unint64_t v43 = v31 + 4;
      while (1)
      {
        uint64_t v44 = *v43++;
        BOOL v45 = __OFADD__(a8, v44);
        a8 += v44;
        if (v45) {
          break;
        }
        if (!--v42) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_25E425F80();
      uint64_t v85 = a8;
      if (v29) {
        break;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)MEMORY[0x263F8EE78];
      uint64_t v42 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v42) {
        goto LABEL_22;
      }
    }
  }
LABEL_22:
  a8 = 0;
LABEL_23:
  uint64_t v73 = a10;
  swift_bridgeObjectRelease();
  *(void *)&v27[OBJC_IVAR___STKSticker_byteCount] = a8;
  uint64_t v46 = &v27[OBJC_IVAR___STKSticker_name];
  uint64_t v47 = v77;
  *(void *)uint64_t v46 = v76;
  *((void *)v46 + 1) = v47;
  *(void *)&v27[OBJC_IVAR___STKSticker_effect] = 0;
  swift_beginAccess();
  uint64_t v48 = *v25;
  unint64_t v49 = v25[1];
  uint64_t v50 = v78;
  unint64_t v51 = v79;
  uint64_t *v25 = v78;
  v25[1] = v51;
  sub_25E3CEA9C(v50, v51);
  sub_25E3CEB1C(v48, v49);
  uint64_t v52 = v80;
  v74(v80, v20, v15);
  uint64_t v53 = v85;
  if (v85)
  {
    uint64_t v54 = *(void (**)(unsigned char *, uint64_t))(v82 + 8);
    v54(v52, v15);
    uint64_t v55 = v72;
  }
  else
  {
    char v87 = v21;
    uint64_t v55 = sub_25E408B00();
    uint64_t v53 = v56;
    uint64_t v54 = *(void (**)(unsigned char *, uint64_t))(v82 + 8);
    v54(v52, v15);
  }
  unint64_t v57 = v81;
  swift_beginAccess();
  *unint64_t v57 = v55;
  v57[1] = v53;
  swift_bridgeObjectRelease();
  uint64_t v58 = v84;
  swift_beginAccess();
  uint64_t v59 = v73;
  *(void *)uint64_t v58 = a9;
  *((void *)v58 + 1) = v59;
  swift_bridgeObjectRelease();
  unsigned int v60 = v83;
  swift_beginAccess();
  uint64_t v61 = *v60;
  void *v60 = a11;
  id v62 = a11;

  id v63 = objc_msgSend(self, sel_currentEnvironment);
  id v64 = objc_msgSend(v63, sel_timeProvider);

  objc_msgSend(v64, sel_timestamp);
  uint64_t v66 = v65;
  swift_unknownObjectRelease();
  *(void *)&v27[OBJC_IVAR___STKSticker_creationDate] = v66;
  *(void *)&v27[OBJC_IVAR___STKSticker_lastUsedDate] = v66;
  *(void *)&v27[OBJC_IVAR___STKSticker_libraryIndex] = 0;

  uint64_t v67 = (objc_class *)type metadata accessor for Sticker(0);
  v86.receiver = v27;
  v86.super_class = v67;
  id v68 = objc_msgSendSuper2(&v86, sel_init);
  sub_25E402BDC();

  v54(v20, v15);
  return (uint64_t)v68;
}

unint64_t sub_25E4092F8()
{
  return 0xD000000000000017;
}

uint64_t sub_25E4093D8(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v75 = a6;
  uint64_t v74 = a5;
  uint64_t v73 = a4;
  uint64_t v72 = a3;
  uint64_t v13 = sub_25E4254F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v76 = &v64[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v64[-v17];
  int v19 = *a1;
  uint64_t v20 = &v8[OBJC_IVAR___STKSticker_accessibilityName];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  id v80 = v20;
  int v21 = &v8[OBJC_IVAR___STKSticker_searchText];
  *(void *)int v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v22 = &v8[OBJC_IVAR___STKSticker_sanitizedPrompt];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  unint64_t v23 = (uint64_t *)&v8[OBJC_IVAR___STKSticker_metadata];
  *(_OWORD *)&v8[OBJC_IVAR___STKSticker_metadata] = xmmword_25E428580;
  unsigned __int8 v24 = &v8[OBJC_IVAR___STKSticker_externalURI];
  *(void *)unsigned __int8 v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v77 = (uint64_t *)v24;
  unint64_t v79 = (void **)&v8[OBJC_IVAR___STKSticker_attributionInfo];
  *(void *)&v8[OBJC_IVAR___STKSticker_attributionInfo] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(&v8[OBJC_IVAR___STKSticker__companionRecentUUID], 1, 1, v13);
  uint64_t v25 = v8;
  sub_25E4254E0();
  v25[OBJC_IVAR___STKSticker_type] = v19;
  uint64_t v78 = v14;
  uint64_t v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16);
  uint64_t v71 = v14 + 16;
  int v70 = v26;
  v26(&v25[OBJC_IVAR___STKSticker_identifier], v18, v13);
  *(void *)&v25[OBJC_IVAR___STKSticker_representations] = a2;
  if (a2 >> 62) {
    goto LABEL_26;
  }
  uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v69 = a7;
    if (v27) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = (void *)MEMORY[0x263F8EE78];
    uint64_t v35 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v35) {
      goto LABEL_12;
    }
LABEL_18:
    a7 = 0;
    unint64_t v41 = v29 + 4;
    while (1)
    {
      uint64_t v42 = *v41++;
      BOOL v43 = __OFADD__(a7, v42);
      a7 += v42;
      if (v43) {
        break;
      }
      if (!--v35) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_25E425F80();
  }
  char v83 = (void *)MEMORY[0x263F8EE78];
  uint64_t result = sub_25E3EAA5C(0, v27 & ~(v27 >> 63), 0);
  if (v27 < 0)
  {
    __break(1u);
    return result;
  }
  int v65 = v19;
  uint64_t v66 = a8;
  uint64_t v67 = v18;
  uint64_t v68 = v13;
  uint64_t v29 = v83;
  if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      uint64_t v31 = (uint64_t *)(MEMORY[0x2611D6C30](i, a2) + OBJC_IVAR___STKStickerRepresentation_byteCount);
      swift_beginAccess();
      uint64_t v32 = *v31;
      swift_unknownObjectRelease();
      char v83 = v29;
      unint64_t v34 = v29[2];
      unint64_t v33 = v29[3];
      if (v34 >= v33 >> 1)
      {
        sub_25E3EAA5C(v33 > 1, v34 + 1, 1);
        uint64_t v29 = v83;
      }
      void v29[2] = v34 + 1;
      v29[v34 + 4] = v32;
    }
  }
  else
  {
    for (uint64_t j = 0; j != v27; ++j)
    {
      uint64_t v37 = (uint64_t *)(*(void *)(a2 + 8 * j + 32) + OBJC_IVAR___STKStickerRepresentation_byteCount);
      swift_beginAccess();
      uint64_t v38 = *v37;
      char v83 = v29;
      unint64_t v40 = v29[2];
      unint64_t v39 = v29[3];
      if (v40 >= v39 >> 1)
      {
        sub_25E3EAA5C(v39 > 1, v40 + 1, 1);
        uint64_t v29 = v83;
      }
      void v29[2] = v40 + 1;
      v29[v40 + 4] = v38;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v68;
  uint64_t v18 = v67;
  a8 = v66;
  int v19 = v65;
  uint64_t v35 = v29[2];
  if (v35) {
    goto LABEL_18;
  }
LABEL_12:
  a7 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  *(void *)&v25[OBJC_IVAR___STKSticker_byteCount] = a7;
  uint64_t v44 = &v25[OBJC_IVAR___STKSticker_name];
  uint64_t v45 = v73;
  *(void *)uint64_t v44 = v72;
  *((void *)v44 + 1) = v45;
  *(void *)&v25[OBJC_IVAR___STKSticker_effect] = 0;
  swift_beginAccess();
  uint64_t v46 = *v23;
  unint64_t v47 = v23[1];
  uint64_t v48 = v74;
  unint64_t v49 = v75;
  *unint64_t v23 = v74;
  v23[1] = v49;
  sub_25E3CEA9C(v48, v49);
  sub_25E3CEB1C(v46, v47);
  uint64_t v50 = v76;
  v70(v76, v18, v13);
  if (a8)
  {
    unint64_t v51 = *(void (**)(unsigned char *, uint64_t))(v78 + 8);
    v51(v50, v13);
    uint64_t v52 = v69;
  }
  else
  {
    char v82 = v19;
    uint64_t v52 = sub_25E408B00();
    a8 = v53;
    unint64_t v51 = *(void (**)(unsigned char *, uint64_t))(v78 + 8);
    v51(v50, v13);
  }
  uint64_t v54 = v77;
  swift_beginAccess();
  *uint64_t v54 = v52;
  v54[1] = a8;
  swift_bridgeObjectRelease();
  uint64_t v55 = v80;
  swift_beginAccess();
  *(void *)uint64_t v55 = 0;
  *((void *)v55 + 1) = 0;
  swift_bridgeObjectRelease();
  uint64_t v56 = v79;
  swift_beginAccess();
  unint64_t v57 = *v56;
  *uint64_t v56 = 0;

  id v58 = objc_msgSend(self, sel_currentEnvironment);
  id v59 = objc_msgSend(v58, sel_timeProvider);

  objc_msgSend(v59, sel_timestamp);
  uint64_t v61 = v60;
  swift_unknownObjectRelease();
  *(void *)&v25[OBJC_IVAR___STKSticker_creationDate] = v61;
  *(void *)&v25[OBJC_IVAR___STKSticker_lastUsedDate] = v61;
  *(void *)&v25[OBJC_IVAR___STKSticker_libraryIndex] = 0;

  id v62 = (objc_class *)type metadata accessor for Sticker(0);
  v81.receiver = v25;
  v81.super_class = v62;
  id v63 = objc_msgSendSuper2(&v81, sel_init);
  sub_25E402BDC();

  v51(v18, v13);
  return (uint64_t)v63;
}

unint64_t sub_25E409A78()
{
  unint64_t result = qword_26A6EDA98;
  if (!qword_26A6EDA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDA98);
  }
  return result;
}

uint64_t type metadata accessor for Sticker.URIType(uint64_t a1)
{
  return sub_25E3CA180(a1, (uint64_t *)&unk_26B388D40);
}

unint64_t sub_25E409AEC()
{
  unint64_t result = qword_26B389428;
  if (!qword_26B389428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389428);
  }
  return result;
}

unint64_t sub_25E409B40()
{
  unint64_t result = qword_26B388F98;
  if (!qword_26B388F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388F98);
  }
  return result;
}

uint64_t sub_25E409B94(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B3894D0);
    sub_25E409DB0(a2, (void (*)(uint64_t))type metadata accessor for Sticker.Representation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25E409C28()
{
  unint64_t result = qword_26B388DD8;
  if (!qword_26B388DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388DD8);
  }
  return result;
}

unint64_t sub_25E409C80()
{
  unint64_t result = qword_26A6EDAD0;
  if (!qword_26A6EDAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDAD0);
  }
  return result;
}

uint64_t sub_25E409CD4()
{
  return sub_25E3D926C(&qword_26A6EDAD8, &qword_26A6EDAE0);
}

unint64_t sub_25E409D14()
{
  unint64_t result = qword_26A6EDAE8;
  if (!qword_26A6EDAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDAE8);
  }
  return result;
}

uint64_t sub_25E409D68()
{
  return sub_25E409DB0(&qword_26A6EDAF0, MEMORY[0x263F07508]);
}

uint64_t sub_25E409DB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25E409DFC()
{
  unint64_t result = qword_26A6EDAF8;
  if (!qword_26A6EDAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDAF8);
  }
  return result;
}

uint64_t sub_25E409E54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E409EB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___STKSticker_accessibilityName, a2);
}

uint64_t sub_25E409EBC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E400AEC(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_accessibilityName);
}

uint64_t sub_25E409EDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKSticker_byteCount);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_25E409F30(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_7Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_byteCount);
}

uint64_t sub_25E409F3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKSticker_name);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E409F98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___STKSticker_searchText, a2);
}

uint64_t sub_25E409FA4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E400AEC(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_searchText);
}

uint64_t sub_25E409FC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___STKSticker_sanitizedPrompt, a2);
}

uint64_t sub_25E409FD0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E400AEC(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_sanitizedPrompt);
}

uint64_t sub_25E409FF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKSticker_effect);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_25E40A044(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_7Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_effect);
}

uint64_t keypath_set_7Tm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  unint64_t v6 = (void *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *unint64_t v6 = v5;
  return result;
}

uint64_t sub_25E40A0A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR___STKSticker_externalURI, a2);
}

uint64_t keypath_get_4Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E40A104(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25E400AEC(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_externalURI);
}

id sub_25E40A124@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  unint64_t v3 = (void **)(*a1 + OBJC_IVAR___STKSticker_attributionInfo);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

double sub_25E40A18C@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_22Tm(a1, &OBJC_IVAR___STKSticker_creationDate, a2);
}

uint64_t sub_25E40A198(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_23Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_creationDate);
}

double sub_25E40A1A4@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_22Tm(a1, &OBJC_IVAR___STKSticker_lastUsedDate, a2);
}

double keypath_get_22Tm@<D0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (double *)(*a1 + *a2);
  swift_beginAccess();
  double result = *v4;
  *a3 = *(void *)v4;
  return result;
}

uint64_t sub_25E40A200(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_23Tm(a1, a2, a3, a4, &OBJC_IVAR___STKSticker_lastUsedDate);
}

uint64_t keypath_set_23Tm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  unint64_t v6 = (void *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *unint64_t v6 = v5;
  return result;
}

uint64_t sub_25E40A268@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___STKSticker__companionRecentUUID;
  swift_beginAccess();
  return sub_25E3FBED4(v3, a2, &qword_26B389370);
}

uint64_t sub_25E40A2CC()
{
  return type metadata accessor for Sticker(0);
}

void sub_25E40A2D4()
{
  sub_25E4254F0();
  if (v0 <= 0x3F)
  {
    sub_25E40AF68();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for Sticker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Sticker);
}

uint64_t dispatch thunk of Sticker.id.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of Sticker.representations.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of Sticker.representations.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of Sticker.representations.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of Sticker.accessibilityName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of Sticker.accessibilityName.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Sticker.accessibilityName.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of Sticker.byteCount.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Sticker.name.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of Sticker.name.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of Sticker.name.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of Sticker.searchText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of Sticker.searchText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of Sticker.searchText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of Sticker.sanitizedPrompt.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of Sticker.sanitizedPrompt.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of Sticker.sanitizedPrompt.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of Sticker.isGeneratedSticker.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of Sticker.effect.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of Sticker.effect.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of Sticker.effect.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of Sticker.metadata.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x188))();
}

uint64_t dispatch thunk of Sticker.metadata.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of Sticker.metadata.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of Sticker.externalURI.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of Sticker.externalURI.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of Sticker.externalURI.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of Sticker.attributionInfo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of Sticker.attributionInfo.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of Sticker.attributionInfo.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of Sticker.creationDate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of Sticker.lastUsedDate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of Sticker.lastUsedDate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of Sticker.lastUsedDate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of Sticker.libraryIndex.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x200))();
}

uint64_t dispatch thunk of Sticker._companionRecentUUID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x218))();
}

uint64_t dispatch thunk of Sticker._companionRecentUUID.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x220))();
}

uint64_t dispatch thunk of Sticker._companionRecentUUID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x228))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 560))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(type:representations:name:metadata:externalURI:)()
{
  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(type:identifier:representations:name:effect:byteCount:metadata:externalURI:accessibilityName:attributionInfo:searchText:creationDate:lastUsedDate:libraryIndex:sanitizedPrompt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  LOBYTE(a19) = a19 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 584))(a1, a2, a3, a4, a5, a6, a7, a8 & 1, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t dispatch thunk of Sticker.preferredRepresentation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x250))();
}

uint64_t dispatch thunk of Sticker.setPreferredRepresentation(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x258))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 624))();
}

uint64_t dispatch thunk of Sticker.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x278))();
}

uint64_t dispatch thunk of static Sticker.classify(uri:)()
{
  return (*(uint64_t (**)(void))(v0 + 640))();
}

uint64_t dispatch thunk of static Sticker.uri(identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 648))();
}

uint64_t dispatch thunk of static Sticker.url(index:)()
{
  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t dispatch thunk of static Sticker.emoji(char:)()
{
  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t dispatch thunk of static Sticker.memojiURI(avatarRecordIdentifier:stickerConfigurationIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 672))();
}

uint64_t dispatch thunk of static Sticker.thirdPartyURI(teamIdentifier:bundleIdentifier:filename:)()
{
  return (*(uint64_t (**)(void))(v0 + 680))();
}

uint64_t dispatch thunk of Sticker.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of Sticker.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 696))();
}

void sub_25E40AF68()
{
  if (!qword_26B389378)
  {
    sub_25E4254F0();
    unint64_t v0 = sub_25E425D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B389378);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Sticker.StickerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E40B08CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Sticker.StickerType()
{
  return &type metadata for Sticker.StickerType;
}

ValueMetadata *type metadata accessor for Sticker.Effect()
{
  return &type metadata for Sticker.Effect;
}

uint64_t *initializeBufferWithCopyOfBuffer for Sticker.URIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_25E4254F0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = a2[2];
        uint64_t v12 = a2[3];
        a1[2] = v11;
        a1[3] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        uint64_t v15 = a2[3];
        a1[2] = a2[2];
        a1[3] = v15;
        uint64_t v16 = a2[4];
        uint64_t v17 = a2[5];
        a1[4] = v16;
        a1[5] = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for Sticker.URIType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_25E4254F0();
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3:
      goto LABEL_7;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for Sticker.URIType(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_25E4254F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 2u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[2];
      uint64_t v9 = a2[3];
      a1[2] = v8;
      a1[3] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4u:
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[4];
      uint64_t v14 = a2[5];
      a1[4] = v13;
      a1[5] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for Sticker.URIType(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E40B6BC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_25E4254F0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_25E40B6BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Sticker.URIType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for Sticker.URIType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_25E4254F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for Sticker.URIType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E40B6BC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25E4254F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25E40B890()
{
  uint64_t result = sub_25E4254F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StickerError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for StickerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25E40BA30);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E40BA58()
{
  return 0;
}

ValueMetadata *type metadata accessor for StickerError()
{
  return &type metadata for StickerError;
}

uint64_t getEnumTagSinglePayload for Sticker.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Sticker.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E40BBCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Sticker.CodingKeys()
{
  return &type metadata for Sticker.CodingKeys;
}

unint64_t sub_25E40BC08()
{
  unint64_t result = qword_26A6EDB08;
  if (!qword_26A6EDB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDB08);
  }
  return result;
}

unint64_t sub_25E40BC60()
{
  unint64_t result = qword_26B389440;
  if (!qword_26B389440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389440);
  }
  return result;
}

unint64_t sub_25E40BCB8()
{
  unint64_t result = qword_26B389438;
  if (!qword_26B389438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389438);
  }
  return result;
}

uint64_t sub_25E40BD0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65736572706572 && a2 == 0xEF736E6F69746174 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025E42A230 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E756F4365747962 && a2 == 0xE900000000000074 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6554686372616573 && a2 == 0xEA00000000007478 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657A6974696E6173 && a2 == 0xEF74706D6F725064 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746365666665 && a2 == 0xE600000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xEB00000000495255 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEF6F666E496E6F69 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x497972617262696CLL && a2 == 0xEC0000007865646ELL || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025E42AFA0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_25E426160();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

unint64_t sub_25E40C418()
{
  unint64_t result = qword_26B3894C0;
  if (!qword_26B3894C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B3894C0);
  }
  return result;
}

unint64_t sub_25E40C46C()
{
  unint64_t result = qword_26B389418;
  if (!qword_26B389418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389418);
  }
  return result;
}

void sub_25E40C4C4(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3BE5EC(a1, (uint64_t)v6);
  BOOL v7 = *a2;
  uint64_t v8 = sub_25E4254F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_25E4254A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setIdentifier_, v10);
}

void sub_25E40C5F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_metadata);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_25E4253D0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_25E40C658(uint64_t a1, void **a2)
{
  BOOL v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_25E4253B0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setMetadata_);
}

void sub_25E40C6D0(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_25E4258F0();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

uint64_t sub_25E40C724@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSticker();
  uint64_t result = sub_25E425EC0();
  *a1 = result;
  return result;
}

char *keypath_get_selector_attributionAdamID()
{
  return sel_attributionAdamID;
}

id sub_25E40C774@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_attributionAdamID);
  *a2 = result;
  return result;
}

id sub_25E40C7B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAttributionAdamID_, *a1);
}

char *keypath_get_selector_attributionBundleIdentifier()
{
  return sel_attributionBundleIdentifier;
}

void sub_25E40C7D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40C7F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_attributionName()
{
  return sel_attributionName;
}

void sub_25E40C81C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40C83C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_accessibilityName()
{
  return sel_accessibilityName;
}

void sub_25E40C868(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40C888(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_25E40C8A8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_byteCount);
  *a2 = result;
  return result;
}

id sub_25E40C8DC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setByteCount_, *a1);
}

char *keypath_get_selector_creationDate()
{
  return sel_creationDate;
}

id sub_25E40C8FC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_creationDate);
  *a2 = v4;
  return result;
}

id sub_25E40C930(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCreationDate_, *a1);
}

char *keypath_get_selector_effect()
{
  return sel_effect;
}

id sub_25E40C950@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_effect);
  *a2 = result;
  return result;
}

id sub_25E40C984(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEffect_, *a1);
}

char *keypath_get_selector_externalURI()
{
  return sel_externalURI;
}

void sub_25E40C9A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40C9C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_lastUsedDate()
{
  return sel_lastUsedDate;
}

id sub_25E40C9E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_lastUsedDate);
  *a2 = v4;
  return result;
}

id sub_25E40CA18(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastUsedDate_, *a1);
}

char *keypath_get_selector_libraryIndex()
{
  return sel_libraryIndex;
}

id sub_25E40CA38@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_libraryIndex);
  *a2 = v4;
  return result;
}

id sub_25E40CA6C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLibraryIndex_, *a1);
}

char *keypath_get_selector_metadata()
{
  return sel_metadata;
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_25E40CAA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40CAC0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void keypath_set_14Tm(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  id v7 = (id)sub_25E4258C0();
  objc_msgSend(v6, *a5, v7);
}

char *keypath_get_selector_type()
{
  return sel_type;
}

id sub_25E40CB3C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_type);
  *a2 = result;
  return result;
}

id sub_25E40CB70(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setType_, *a1);
}

char *keypath_get_selector_representations()
{
  return sel_representations;
}

id sub_25E40CB90@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_representations);
  *a2 = result;
  return result;
}

id sub_25E40CBCC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRepresentations_, *a1);
}

id sub_25E40CBE0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_version);
  *a2 = result;
  return result;
}

id sub_25E40CC14(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

char *keypath_get_selector_searchText()
{
  return sel_searchText;
}

void sub_25E40CC34(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40CC54(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_sanitizedPrompt()
{
  return sel_sanitizedPrompt;
}

void sub_25E40CC80(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E40CCA0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_25E40CCC0(void *a1, uint64_t a2, void *a3)
{
  swift_weakInit();
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F33690]), sel_init);
  *(void *)(v3 + 16) = a1;
  swift_weakAssign();
  *(void *)(v3 + 32) = a3;
  uint64_t v6 = self;
  id v7 = a1;
  id v8 = a3;
  id v9 = objc_msgSend(v6, sel_currentEnvironment);
  id v10 = objc_msgSend(v9, sel_schedulerProvider);

  id v11 = objc_msgSend(v10, sel_backgroundSchedulerWithQualityOfService_, 4);
  swift_unknownObjectRelease();

  swift_release();
  *(void *)(v3 + 40) = v11;
  return v3;
}

uint64_t sub_25E40CDD8(uint64_t result, unsigned char *a2)
{
  uint64_t v2 = result;
  if (*(void *)(result + 48))
  {
    *(unsigned char *)(result + 56) = 1;
  }
  else
  {
    *a2 = 1;
    uint64_t v3 = *(void **)(result + 40);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    void v7[4] = sub_25E40D1B4;
    v7[5] = v4;
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 1107296256;
    uint64_t v7[2] = sub_25E3C3F30;
    void v7[3] = &block_descriptor_2;
    uint64_t v5 = _Block_copy(v7);
    swift_release();
    id v6 = objc_msgSend(v3, sel_afterDelay_performBlock_, v5, 1.0);
    _Block_release(v5);
    *(void *)(v2 + 48) = v6;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_25E40CEF8(uint64_t a1, unsigned char *a2)
{
  if (*(unsigned char *)(a1 + 56) == 1)
  {
    *(unsigned char *)(a1 + 56) = 0;
    *a2 = 1;
    uint64_t v3 = *(void **)(a1 + 40);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    v8[4] = sub_25E40D1B4;
    v8[5] = v4;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 1107296256;
    long long v8[2] = sub_25E3C3F30;
    v8[3] = &block_descriptor_16;
    uint64_t v5 = _Block_copy(v8);
    swift_release();
    id v6 = objc_msgSend(v3, sel_afterDelay_performBlock_, v5, 1.0);
    _Block_release(v5);
    *(void *)(a1 + 48) = v6;
  }
  else
  {
    *(void *)(a1 + 48) = 0;
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_25E40D01C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    char v3 = 0;
    uint64_t v2 = *(void **)(result + 64);
    objc_msgSend(v2, sel_lock);
    sub_25E40CEF8(v1, &v3);
    objc_msgSend(v2, sel_unlock);
    if (v3 == 1)
    {
      objc_msgSend(*(id *)(v1 + 32), sel_postNotificationName_object_, *(void *)(v1 + 16), swift_weakLoadStrong());
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_25E40D0F8()
{
  swift_weakDestroy();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s33CoalescingNotificationBroadcasterCMa()
{
  return self;
}

uint64_t sub_25E40D17C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E40D1B4()
{
  return sub_25E40D01C();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_25E40D1F0()
{
  return sub_25E426240();
}

uint64_t sub_25E40D30C()
{
  return sub_25E426240();
}

id static LaunchStateManagerAPI.xpcInterface.getter()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_270B2AE20);
  return v0;
}

uint64_t sub_25E40D478()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26A6EFA78);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A6EFA78);
  return sub_25E425690();
}

id LaunchStateManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id LaunchStateManager.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LaunchStateManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for LaunchStateManager()
{
  return self;
}

id sub_25E40D5DC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
  if (v2)
  {
    char v3 = *(void **)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
  }
  else
  {
    id v4 = (id)sub_25E40ED8C();
    if (!v4) {
      id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LaunchConfiguration()), sel_init);
    }
    char v3 = v4;
  }
  uint64_t v5 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = v3;
  id v6 = v2;
  id v7 = v3;

  return v7;
}

uint64_t sub_25E40D674(void *a1)
{
  return sub_25E40D748(a1);
}

void sub_25E40D6A4()
{
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  objc_super v2 = (void *)sub_25E4258C0();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

  char v3 = *(void **)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
  *(void *)(v0 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration) = 0;
}

uint64_t sub_25E40D748(void *a1)
{
  sub_25E425180();
  swift_allocObject();
  sub_25E425170();
  type metadata accessor for LaunchConfiguration();
  sub_25E40FB70((unint64_t *)&unk_26A6EDC60);
  uint64_t v4 = sub_25E425160();
  unint64_t v6 = v5;
  uint64_t result = swift_release();
  if (!v2)
  {
    id v8 = objc_msgSend(self, sel_standardUserDefaults);
    id v9 = (void *)sub_25E4253B0();
    id v10 = (void *)sub_25E4258C0();
    objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

    id v11 = *(void **)(v1 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration);
    *(void *)(v1 + OBJC_IVAR____TtC8Stickers18LaunchStateManager_cachedConfiguration) = a1;
    id v12 = a1;

    return sub_25E3CEA28(v4, v6);
  }
  return result;
}

id LaunchStateManager.__deallocating_deinit()
{
  return sub_25E40E840(type metadata accessor for LaunchStateManager);
}

Stickers::StickerSectionType_optional __swiftcall StickerSectionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25E426000();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static StickerSectionType.allCases.getter()
{
  return &unk_270B221B8;
}

uint64_t StickerSectionType.rawValue.getter()
{
  uint64_t result = 0x746E65636572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E6F4372657375;
      break;
    case 2:
      uint64_t result = 0x6472616F6279656BLL;
      break;
    case 3:
      uint64_t result = 0x696A6F6D656DLL;
      break;
    case 4:
      uint64_t result = 0x696A6F6D65;
      break;
    case 5:
      uint64_t result = 0x7261506472696874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E40DA04(unsigned __int8 *a1, char *a2)
{
  return sub_25E41DD2C(*a1, *a2);
}

uint64_t sub_25E40DA10()
{
  return sub_25E40D1F0();
}

uint64_t sub_25E40DA18()
{
  sub_25E425960();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E40DB1C()
{
  return sub_25E40D30C();
}

Stickers::StickerSectionType_optional sub_25E40DB24(Swift::String *a1)
{
  return StickerSectionType.init(rawValue:)(*a1);
}

void sub_25E40DB30(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x746E65636572;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000746E65;
      uint64_t v3 = 0x746E6F4372657375;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "keyboardRecent");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x696A6F6D656DLL;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 0x696A6F6D65;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 5:
      *(void *)a1 = 0x7261506472696874;
      *(void *)(a1 + 8) = 0xEA00000000007974;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_25E40DC14()
{
  return sub_25E425A80();
}

uint64_t sub_25E40DC74()
{
  return sub_25E425A60();
}

void sub_25E40DCC4(void *a1@<X8>)
{
  *a1 = &unk_270B221B8;
}

void LaunchConfiguration.sectionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType);
}

uint64_t LaunchConfiguration.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

char *LaunchConfiguration.init()()
{
  uint64_t v0 = sub_25E425470();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for LaunchConfiguration();
  char v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType] = 0;
  unint64_t v6 = &v5[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier];
  *unint64_t v6 = 0;
  v6[1] = 0;
  id v7 = self;
  id v8 = v5;
  id v9 = objc_msgSend(v7, sel_currentEnvironment);
  id v10 = objc_msgSend(v9, sel_timeProvider);

  objc_msgSend(v10, sel_timestamp);
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v12;

  v18.receiver = v8;
  v18.super_class = v4;
  id v13 = objc_msgSendSuper2(&v18, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v14 = (char *)v13;
  sub_25E425420();
  sub_25E425400();
  uint64_t v16 = v15;

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(void *)&v14[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v16;
  return v14;
}

id LaunchConfiguration.__allocating_init(sectionType:identifier:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return LaunchConfiguration.init(sectionType:identifier:)(a1, a2, a3);
}

id LaunchConfiguration.init(sectionType:identifier:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType] = *a1;
  uint64_t v4 = &v3[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier];
  *uint64_t v4 = a2;
  v4[1] = a3;
  char v5 = self;
  unint64_t v6 = v3;
  id v7 = objc_msgSend(v5, sel_currentEnvironment);
  id v8 = objc_msgSend(v7, sel_timeProvider);

  objc_msgSend(v8, sel_timestamp);
  uint64_t v10 = v9;
  swift_unknownObjectRelease();
  *(void *)&v6[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v10;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for LaunchConfiguration();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t static LaunchConfiguration.supportsSecureCoding.getter()
{
  return byte_26A6EDB70;
}

uint64_t static LaunchConfiguration.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26A6EDB70 = a1;
  return result;
}

uint64_t (*static LaunchConfiguration.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t LaunchConfiguration.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LaunchConfiguration.init(coder:)(a1);
}

uint64_t LaunchConfiguration.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  sub_25E40F10C();
  id v4 = v2;
  uint64_t v5 = sub_25E425CE0();
  if (v5)
  {
    unint64_t v6 = (void *)v5;
    rawValue._countAndFlagsBits = 0;
    sub_25E4258E0();
  }
  type metadata accessor for LaunchConfiguration();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_25E40E460(void *a1)
{
  id v3 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  if (*(void *)(v1 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier + 8)) {
    uint64_t v5 = sub_25E4258C0();
  }
  else {
    uint64_t v5 = 0;
  }
  unint64_t v6 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  double v7 = *(double *)(v1 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate);
  id v8 = (id)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v8, v7);
}

void sub_25E40E6FC(double a1)
{
  *(double *)(v1 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate) = a1;
}

uint64_t sub_25E40E70C()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F697461657263;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x546E6F6974636573;
  }
}

uint64_t sub_25E40E77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25E40F920(a1, a2);
  *a3 = result;
  return result;
}

void sub_25E40E7A4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_25E40E7B0(uint64_t a1)
{
  unint64_t v2 = sub_25E40F14C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E40E7EC(uint64_t a1)
{
  unint64_t v2 = sub_25E40F14C();
  return MEMORY[0x270FA00B8](a1, v2);
}

id LaunchConfiguration.__deallocating_deinit()
{
  return sub_25E40E840(type metadata accessor for LaunchConfiguration);
}

id sub_25E40E840(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_25E40E88C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDBA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E40F14C();
  sub_25E426260();
  v10[15] = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType);
  v10[14] = 0;
  sub_25E40F1A0();
  sub_25E426100();
  if (!v2)
  {
    v10[13] = 1;
    sub_25E4260A0();
    v10[12] = 2;
    sub_25E4260E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id LaunchConfiguration.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LaunchConfiguration.init(from:)(a1);
}

id LaunchConfiguration.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDBB8);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E40F14C();
  id v8 = v1;
  id v9 = v7;
  sub_25E426250();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);

    type metadata accessor for LaunchConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v18;
    char v21 = 0;
    sub_25E40F1F4();
    uint64_t v11 = v19;
    sub_25E426090();
    v8[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_sectionType] = v22;
    char v22 = 1;
    uint64_t v12 = sub_25E426010();
    uint64_t v14 = (uint64_t *)&v8[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_identifier];
    *uint64_t v14 = v12;
    v14[1] = v15;
    char v22 = 2;
    sub_25E426070();
    *(void *)&v8[OBJC_IVAR____TtC8Stickers19LaunchConfiguration_creationDate] = v16;

    uint64_t v17 = (objc_class *)type metadata accessor for LaunchConfiguration();
    v20.receiver = v8;
    v20.super_class = v17;
    id v9 = objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v9;
}

id sub_25E40ED14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for LaunchConfiguration());
  id result = LaunchConfiguration.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25E40ED68(void *a1)
{
  return sub_25E40E88C(a1);
}

uint64_t sub_25E40ED8C()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_25E4258C0();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_25E425DD0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_25E40FB08((uint64_t)v6, (uint64_t)v7);
  if (v7[3])
  {
    if (swift_dynamicCast())
    {
      sub_25E425150();
      swift_allocObject();
      sub_25E425140();
      type metadata accessor for LaunchConfiguration();
      sub_25E40FB70((unint64_t *)&unk_26A6EDC70);
      sub_25E425130();
      sub_25E3CEA28(v4, v5);
      swift_release();
      return v7[0];
    }
  }
  else
  {
    sub_25E3E0148((uint64_t)v7);
  }
  return 0;
}

uint64_t type metadata accessor for LaunchConfiguration()
{
  return self;
}

unint64_t sub_25E40F10C()
{
  unint64_t result = qword_26A6EDC90;
  if (!qword_26A6EDC90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6EDC90);
  }
  return result;
}

unint64_t sub_25E40F14C()
{
  unint64_t result = qword_26A6EDBA8;
  if (!qword_26A6EDBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDBA8);
  }
  return result;
}

unint64_t sub_25E40F1A0()
{
  unint64_t result = qword_26A6EDBB0;
  if (!qword_26A6EDBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDBB0);
  }
  return result;
}

unint64_t sub_25E40F1F4()
{
  unint64_t result = qword_26A6EDBC0;
  if (!qword_26A6EDBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDBC0);
  }
  return result;
}

unint64_t sub_25E40F24C()
{
  unint64_t result = qword_26A6EDBC8;
  if (!qword_26A6EDBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDBC8);
  }
  return result;
}

unint64_t sub_25E40F2A4()
{
  unint64_t result = qword_26A6EDBD0;
  if (!qword_26A6EDBD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A6EDBD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDBD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchStateManagerAPI()
{
  return &type metadata for LaunchStateManagerAPI;
}

uint64_t method lookup function for LaunchStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LaunchStateManager);
}

uint64_t dispatch thunk of LaunchStateManager.launchConfiguration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of LaunchStateManager.updateConfiguration(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of LaunchStateManager.reset()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t getEnumTagSinglePayload for StickerSectionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StickerSectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E40F534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerSectionType()
{
  return &type metadata for StickerSectionType;
}

uint64_t method lookup function for LaunchConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LaunchConfiguration);
}

uint64_t dispatch thunk of LaunchConfiguration.__allocating_init(sectionType:identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of LaunchConfiguration.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of LaunchConfiguration.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LaunchConfiguration.setCreatedAt(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LaunchConfiguration.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LaunchConfiguration.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t getEnumTagSinglePayload for LaunchConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LaunchConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E40F7E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchConfiguration.CodingKeys()
{
  return &type metadata for LaunchConfiguration.CodingKeys;
}

unint64_t sub_25E40F81C()
{
  unint64_t result = qword_26A6EDC40;
  if (!qword_26A6EDC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDC40);
  }
  return result;
}

unint64_t sub_25E40F874()
{
  unint64_t result = qword_26A6EDC48;
  if (!qword_26A6EDC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDC48);
  }
  return result;
}

unint64_t sub_25E40F8CC()
{
  unint64_t result = qword_26A6EDC50;
  if (!qword_26A6EDC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDC50);
  }
  return result;
}

uint64_t sub_25E40F920(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x546E6F6974636573 && a2 == 0xEB00000000657079;
  if (v2 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25E426160();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_25E40FAB4()
{
  unint64_t result = qword_26A6EDC58;
  if (!qword_26A6EDC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDC58);
  }
  return result;
}

uint64_t sub_25E40FB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E40FB70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LaunchConfiguration();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RangeGenerator.init(offset:limit:batchSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a3) {
    goto LABEL_5;
  }
  uint64_t v6 = a2 + result;
  if (!__OFADD__(a2, result))
  {
    if (v6 >= result)
    {
LABEL_6:
      *(void *)a6 = result;
      *(void *)(a6 + 8) = v6;
      *(void *)(a6 + 16) = a4;
      *(unsigned char *)(a6 + 24) = a5 & 1;
      return result;
    }
    __break(1u);
LABEL_5:
    uint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t RangeGenerator.next()()
{
  uint64_t v1 = v0[2];
  char v2 = *((unsigned char *)v0 + 24);
  if ((v2 & 1) == 0 && !v1) {
    return 0;
  }
  uint64_t result = *v0;
  uint64_t v4 = v0[1];
  uint64_t v5 = v4 - *v0;
  if (__OFSUB__(v4, *v0))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 < 1) {
    return 0;
  }
  if (v1 >= v5) {
    char v2 = 1;
  }
  if (v2) {
    goto LABEL_11;
  }
  BOOL v6 = __OFADD__(result, v1);
  uint64_t v7 = result + v1;
  if (v6) {
    goto LABEL_15;
  }
  if (v7 >= result)
  {
    BOOL v8 = v4 < v7;
    uint64_t v4 = v7;
    if (!v8)
    {
LABEL_11:
      uint64_t *v0 = v4;
      return result;
    }
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_25E40FC64()
{
  unint64_t result = qword_26B3893E8;
  if (!qword_26B3893E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B3893E8);
  }
  return result;
}

__n128 sub_25E40FCB8@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  unsigned __int8 v3 = v1[1].n128_u8[8];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_25E40FCD4()
{
  return 0;
}

uint64_t sub_25E40FCDC()
{
  return 2;
}

uint64_t sub_25E40FCE4()
{
  return sub_25E3EB8F0(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_25E40FCF4(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_25E40FD04(a1, a2, a3, *(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

uint64_t sub_25E40FD04(uint64_t result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (!a2)
  {
LABEL_15:
    a3 = 0;
    goto LABEL_16;
  }
  if (!a3)
  {
LABEL_16:
    *(void *)__n128 result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = a6;
    *(unsigned char *)(result + 24) = a7 & 1;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a7 & 1 | (a6 != 0))
    {
      uint64_t v7 = 0;
      uint64_t v8 = a4;
      while (1)
      {
        uint64_t v9 = a5 - v8;
        if (__OFSUB__(a5, v8)) {
          break;
        }
        if (v9 < 1)
        {
          a4 = v8;
          a3 = v7;
          goto LABEL_16;
        }
        uint64_t v10 = a5;
        if ((a7 & 1) == 0)
        {
          uint64_t v10 = a5;
          if (v9 > a6)
          {
            uint64_t v10 = v8 + a6;
            if (__OFADD__(v8, a6)) {
              goto LABEL_21;
            }
            if (v10 < v8) {
              goto LABEL_22;
            }
            if (v10 > a5) {
              goto LABEL_20;
            }
          }
        }
        *a2 = v8;
        a2[1] = v10;
        if (a3 - 1 == v7)
        {
          a4 = v10;
          goto LABEL_16;
        }
        ++v7;
        a2 += 2;
        uint64_t v8 = v10;
        if (!(a7 & 1 | (a6 != 0))) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    goto LABEL_15;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_25E40FDC8()
{
  return sub_25E425A40();
}

uint64_t sub_25E40FDEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = RangeGenerator.next()();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RangeGenerator(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RangeGenerator(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RangeGenerator()
{
  return &type metadata for RangeGenerator;
}

uint64_t StickerSequence.makeIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  char v4 = (void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 136);
  BOOL v6 = __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = sub_25E3D930C(v2, (uint64_t)v27);
  uint64_t v9 = *(void **)(v2 + 48);
  uint64_t v8 = *(void **)(v2 + 56);
  uint64_t v10 = *(void *)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 88);
  uint64_t v12 = *(void *)(v2 + 96);
  char v13 = *(unsigned char *)(v2 + 104);
  v19[0] = *(unsigned char *)(v2 + 40);
  objc_super v20 = v9;
  char v21 = v8;
  uint64_t v22 = v10;
  long long v23 = *(_OWORD *)(v2 + 72);
  char v24 = v11;
  uint64_t v25 = v12;
  char v26 = v13;
  MEMORY[0x270FA5388](v7);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void *, uint64_t))(v16 + 16))(v15, v6, v5);
  id v17 = v9;
  sub_25E3D44C0(v8);
  swift_bridgeObjectRetain();
  return sub_25E410040((uint64_t)v27, (uint64_t)v15, v5, a1);
}

void *StickerSequenceIterator.next()()
{
  sub_25E3EA2DC();
  uint64_t v1 = v0;
  if (!v0)
  {
    sub_25E4103A0();
    sub_25E3EA2DC();
    uint64_t v1 = v2;
    sub_25E41AC8C(v2);
  }
  return v1;
}

uint64_t sub_25E410040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *v10;
  long long v12 = *(_OWORD *)(v10 + 8);
  long long v20 = *(_OWORD *)(v10 + 24);
  long long v21 = v12;
  uint64_t v13 = *((void *)v10 + 5);
  char v14 = v10[48];
  uint64_t v15 = *((void *)v10 + 7);
  char v16 = v10[64];
  *(void *)(a4 + 152) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a4 + 160) = 0;
  sub_25E3D930C(v7, a4);
  *(unsigned char *)(a4 + 40) = v11;
  long long v17 = v20;
  *(_OWORD *)(a4 + 48) = v21;
  *(_OWORD *)(a4 + 64) = v17;
  *(void *)(a4 + 80) = v13;
  *(unsigned char *)(a4 + 88) = v14;
  *(void *)(a4 + 96) = v15;
  *(unsigned char *)(a4 + 104) = v16;
  uint64_t v18 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v22, a3);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v24);
  sub_25E425A30();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, a3);
  __swift_destroy_boxed_opaque_existential_0(v23);
  return sub_25E3E1568(&v24, a4 + 112);
}

uint64_t sub_25E410208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 136);
  char v4 = __swift_project_boxed_opaque_existential_1((void *)(v1 + 112), v3);
  uint64_t v5 = sub_25E3D930C(v1, (uint64_t)v25);
  uint64_t v7 = *(void **)(v1 + 48);
  uint64_t v6 = *(void **)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  char v9 = *(unsigned char *)(v1 + 88);
  uint64_t v10 = *(void *)(v1 + 96);
  char v11 = *(unsigned char *)(v1 + 104);
  v17[0] = *(unsigned char *)(v1 + 40);
  uint64_t v18 = v7;
  uint64_t v19 = v6;
  uint64_t v20 = v8;
  long long v21 = *(_OWORD *)(v1 + 72);
  char v22 = v9;
  uint64_t v23 = v10;
  char v24 = v11;
  MEMORY[0x270FA5388](v5);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void *, uint64_t))(v14 + 16))(v13, v4, v3);
  id v15 = v7;
  sub_25E3D44C0(v6);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v25, (uint64_t)v13, v3, a1);
  return sub_25E3D789C(v1);
}

uint64_t sub_25E410368()
{
  sub_25E3EB428(v0);
  uint64_t v2 = v1;
  sub_25E3D789C(v0);
  return v2;
}

uint64_t sub_25E4103A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char **)((char *)&v79 - v7);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  char v11 = (double *)((char *)&v79 - v10);
  uint64_t v12 = (char *)&v79 + *(int *)(v9 + 48) - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v14 = *(int *)(v13 + 48);
  uint64_t v15 = sub_25E410CEC(v12);
  *(void *)char v11 = v16;
  *(void *)&v12[v14] = v15;
  if (*(unsigned char *)(v0 + 160) != 1)
  {
    unint64_t v93 = v8;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 112, *(void *)(v0 + 136));
    sub_25E425D70();
    if (v96)
    {
      if (qword_26B389408 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_25E4256A0();
      __swift_project_value_buffer(v24, (uint64_t)qword_26B38BCA8);
      uint64_t v18 = sub_25E425680();
      os_log_type_t v25 = sub_25E425BE0();
      BOOL v26 = os_log_type_enabled(v18, v25);
      uint64_t v8 = v93;
      if (!v26) {
        goto LABEL_12;
      }
      uint64_t v20 = v13;
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_25E3BB000, v18, v25, "Can’t refill — range exhaustion", v27, 2u);
      uint64_t v23 = v27;
      goto LABEL_11;
    }
    uint64_t v34 = v94;
    uint64_t v35 = v95;
    if (__OFSUB__(v95, v94))
    {
      __break(1u);
      swift_once();
      uint64_t v52 = sub_25E4256A0();
      __swift_project_value_buffer(v52, (uint64_t)qword_26B38BCA8);
      id v53 = v35;
      id v54 = v35;
      uint64_t v55 = sub_25E425680();
      os_log_type_t v56 = sub_25E425BF0();
      if (os_log_type_enabled(v55, v56))
      {
        unint64_t v57 = (uint8_t *)swift_slowAlloc();
        id v58 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v57 = 138412290;
        id v59 = v35;
        uint64_t v60 = v5;
        uint64_t v61 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v94 = v61;
        sub_25E425D80();
        void *v58 = v61;
        uint64_t v5 = v60;

        _os_log_impl(&dword_25E3BB000, v55, v56, "Error refilling buffer: %@", v57, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v58, -1, -1);
        MEMORY[0x2611D77B0](v57, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      id v80 = v11;
      uint64_t v88 = v14;
      int v89 = v12;
      int v85 = *(unsigned __int8 *)(v1 + 104);
      uint64_t v84 = *(void *)(v1 + 96);
      unint64_t v36 = v5;
      uint64_t v38 = *(void **)(v1 + 56);
      uint64_t v37 = *(void *)(v1 + 64);
      char v82 = *(char **)(v1 + 48);
      int v83 = *(unsigned __int8 *)(v1 + 40);
      uint64_t v90 = v2;
      id v91 = &v95[-v94];
      unint64_t v39 = (char *)v36 + *(int *)(v2 + 48);
      uint64_t v92 = v13;
      uint64_t v40 = *(int *)(v13 + 48);
      unint64_t v41 = v82;
      sub_25E3D44C0(v38);
      swift_bridgeObjectRetain();
      uint64_t v42 = v41;
      sub_25E3D44C0(v38);
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_25E410F6C(v39, v34, (uint64_t)v35);
      double v45 = v44;
      uint64_t v46 = v43;
      objc_super v81 = v36;
      *(double *)unint64_t v36 = v44;
      unint64_t v79 = v39;
      *(void *)&v39[v40] = v43;
      uint64_t v48 = *(void *)(v1 + 24);
      uint64_t v47 = *(void *)(v1 + 32);
      __swift_project_boxed_opaque_existential_1((void *)v1, v48);
      swift_retain();
      unint64_t v49 = v42;
      uint64_t v50 = v38;
      uint64_t v5 = v49;
      sub_25E3D44C0(v50);
      sub_25E3D446C(v50);

      LOBYTE(v94) = v83;
      uint64_t v95 = v82;
      int v96 = v50;
      uint64_t v97 = v37;
      uint64_t v98 = v34;
      uint64_t v99 = v91;
      char v100 = 0;
      uint64_t v101 = v84;
      char v102 = v85;
      uint64_t v51 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v47 + 16))(&v94, v48, v47);
      id v86 = v50;
      uint64_t v87 = v37;
      unint64_t v62 = v51;

      sub_25E3D446C(v50);
      swift_bridgeObjectRelease();
      if (v62 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_25E425F80();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v11 = v80;
      uint64_t v64 = (uint64_t)v93 + *(int *)(v90 + 48);
      *(double *)unint64_t v93 = v45;
      uint64_t v65 = *(int *)(v92 + 48);
      uint64_t v66 = sub_25E4255F0();
      uint64_t v67 = *(void *)(v66 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v64, v79, v66);
      *(void *)(v64 + v65) = v46;
      sub_25E411EC0(v63, v64, v46, v45);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v64, v66);
      sub_25E3D4010(v62);
      BOOL v68 = v63 < (uint64_t)v91;
      *(unsigned char *)(v1 + 160) = v63 < (uint64_t)v91;
      if (v68)
      {
        uint64_t v70 = v88;
        uint64_t v69 = v89;
        if (qword_26B389408 != -1) {
          swift_once();
        }
        uint64_t v71 = sub_25E4256A0();
        __swift_project_value_buffer(v71, (uint64_t)qword_26B38BCA8);
        uint64_t v72 = sub_25E425680();
        os_log_type_t v73 = sub_25E425BD0();
        BOOL v74 = os_log_type_enabled(v72, v73);
        uint64_t v75 = v90;
        if (v74)
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v76 = 0;
          _os_log_impl(&dword_25E3BB000, v72, v73, "This is the last batch", v76, 2u);
          MEMORY[0x2611D77B0](v76, -1, -1);
        }

        sub_25E3CE8D4((uint64_t)v81, &qword_26B3894E0);
        goto LABEL_29;
      }
      sub_25E3CE8D4((uint64_t)v81, &qword_26B3894E0);
    }
    uint64_t v70 = v88;
    uint64_t v69 = v89;
    uint64_t v75 = v90;
LABEL_29:
    uint64_t v77 = v92;

    sub_25E3D446C(v86);
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t)v93 + *(int *)(v75 + 48);
    uint64_t v29 = *(int *)(v77 + 48);
    double v30 = *v11;
    void *v93 = *(void *)v11;
    uint64_t v31 = sub_25E4255F0();
    uint64_t v32 = *(void *)(v31 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v28, v69, v31);
    uint64_t v33 = *(void *)&v69[v70];
    goto LABEL_30;
  }
  if (qword_26B389408 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_25E4256A0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B38BCA8);
  uint64_t v18 = sub_25E425680();
  os_log_type_t v19 = sub_25E425BE0();
  if (!os_log_type_enabled(v18, v19)) {
    goto LABEL_12;
  }
  uint64_t v20 = v13;
  long long v21 = v8;
  char v22 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)char v22 = 0;
  _os_log_impl(&dword_25E3BB000, v18, v19, "Last refill was partial — the last sticker has probably already been fetched", v22, 2u);
  uint64_t v23 = v22;
  uint64_t v8 = v21;
LABEL_11:
  uint64_t v13 = v20;
  MEMORY[0x2611D77B0](v23, -1, -1);
LABEL_12:

  uint64_t v28 = (uint64_t)v8 + *(int *)(v2 + 48);
  uint64_t v29 = *(int *)(v13 + 48);
  double v30 = *v11;
  *uint64_t v8 = *(void *)v11;
  uint64_t v31 = sub_25E4255F0();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v28, v12, v31);
  uint64_t v33 = *(void *)&v12[v14];
LABEL_30:
  *(void *)(v28 + v29) = v33;
  swift_retain();
  sub_25E411990(v28, v33, v30);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v28, v31);
  return sub_25E3CE8D4((uint64_t)v11, &qword_26B3894E0);
}

uint64_t sub_25E410CEC(char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  if (qword_26B389408 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_25E4256A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B38BCA8);
  uint64_t v9 = sub_25E425680();
  os_log_type_t v10 = sub_25E425BD0();
  if (os_log_type_enabled(v9, v10))
  {
    char v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v11 = 0;
    _os_log_impl(&dword_25E3BB000, v9, v10, "BEGIN refillBuffer()", v11, 2u);
    MEMORY[0x2611D77B0](v11, -1, -1);
  }

  id v12 = objc_msgSend(self, sel_currentEnvironment);
  id v13 = objc_msgSend(v12, sel_timeProvider);

  objc_msgSend(v13, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389400 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B38BC90);
  uint64_t v15 = sub_25E417874((uint64_t)v7, "refill buffer", 13, 2);
  uint64_t v16 = sub_25E4255F0();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
  v17(v5, v7, v16);
  v17(a1, v5, v16);
  return v15;
}

uint64_t sub_25E410F6C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v23 - v10;
  if (qword_26B389408 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_25E4256A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_26B38BCA8);
  id v13 = sub_25E425680();
  os_log_type_t v14 = sub_25E425BD0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134218240;
    uint64_t v24 = a2;
    sub_25E425D80();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v24 = a3;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v13, v14, "will fetch range %ld..<%ld", (uint8_t *)v15, 0x16u);
    MEMORY[0x2611D77B0](v15, -1, -1);
  }

  id v16 = objc_msgSend(self, sel_currentEnvironment);
  id v17 = objc_msgSend(v16, sel_timeProvider);

  objc_msgSend(v17, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389400 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v18, (uint64_t)qword_26B38BC90);
  uint64_t v19 = sub_25E417874((uint64_t)v11, "fetch range", 11, 2);
  uint64_t v20 = sub_25E4255F0();
  long long v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v9, v11, v20);
  v21(a1, v9, v20);
  return v19;
}

void sub_25E411240(void *a1@<X8>)
{
  sub_25E3EA2DC();
  uint64_t v3 = v2;
  if (!v2)
  {
    sub_25E4103A0();
    sub_25E3EA2DC();
    uint64_t v3 = v4;
    sub_25E41AC8C(v4);
  }
  *a1 = v3;
}

uint64_t sub_25E41129C()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26B38BCA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B38BCA8);
  return sub_25E425690();
}

uint64_t sub_25E411320()
{
  uint64_t v0 = sub_25E425620();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25E4256A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = type metadata accessor for StickerSignposter();
  __swift_allocate_value_buffer(v11, qword_26B38BC90);
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_26B38BC90);
  if (qword_26B389408 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_26B38BCA8);
  os_log_type_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, (uint64_t)v10, v4);
  sub_25E425600();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12, v3, v0);
}

void sub_25E411554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 136);
  uint64_t v6 = *(void *)(v3 + 144);
  v40[0] = a3;
  v40[1] = v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 112), v7);
  uint64_t v9 = sub_25E3D930C(v3, (uint64_t)v49);
  uint64_t v10 = *(void **)(v3 + 48);
  uint64_t v11 = *(void **)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  char v13 = *(unsigned char *)(v3 + 88);
  uint64_t v14 = *(void *)(v3 + 96);
  char v15 = *(unsigned char *)(v3 + 104);
  char v41 = *(unsigned char *)(v3 + 40);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  uint64_t v44 = v12;
  long long v45 = *(_OWORD *)(v3 + 72);
  char v46 = v13;
  uint64_t v47 = v14;
  char v48 = v15;
  MEMORY[0x270FA5388](v9);
  id v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))(v17, v8, v7);
  id v19 = v10;
  sub_25E3D44C0(v11);
  swift_bridgeObjectRetain();
  sub_25E410040((uint64_t)v49, (uint64_t)v17, v7, (uint64_t)v50);
  sub_25E3D789C(v3);
  if (!a2 || (uint64_t v20 = v40[0]) == 0)
  {
LABEL_35:
    long long v35 = v51;
    *(_OWORD *)(a1 + 128) = v50[8];
    *(_OWORD *)(a1 + 144) = v35;
    *(unsigned char *)(a1 + 160) = v52;
    long long v36 = v50[5];
    *(_OWORD *)(a1 + 64) = v50[4];
    *(_OWORD *)(a1 + 80) = v36;
    long long v37 = v50[7];
    *(_OWORD *)(a1 + 96) = v50[6];
    *(_OWORD *)(a1 + 112) = v37;
    long long v38 = v50[1];
    *(_OWORD *)a1 = v50[0];
    *(_OWORD *)(a1 + 16) = v38;
    long long v39 = v50[3];
    *(_OWORD *)(a1 + 32) = v50[2];
    *(_OWORD *)(a1 + 48) = v39;
    return;
  }
  if ((v40[0] & 0x8000000000000000) != 0) {
    goto LABEL_42;
  }
  uint64_t v21 = 0;
  while (1)
  {
    uint64_t v23 = *((void *)&v51 + 1);
    uint64_t v24 = *((void *)&v51 + 1) >> 62;
    if (*((void *)&v51 + 1) >> 62) {
      break;
    }
    if (!*(void *)((*((void *)&v51 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_19;
    }
LABEL_10:
    if ((v23 & 0xC000000000000001) != 0)
    {
      id v25 = (id)MEMORY[0x2611D6C30](0, v23);
      if (v24) {
        goto LABEL_27;
      }
    }
    else
    {
      if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      id v25 = *(id *)(v23 + 32);
      if (v24)
      {
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_25E425F80();
        swift_bridgeObjectRelease();
        if (!v31) {
          goto LABEL_40;
        }
        goto LABEL_14;
      }
    }
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_40;
    }
LABEL_14:
    sub_25E3EBDA8(0, 1);
LABEL_7:
    *(void *)(a2 + 8 * v21++) = v25;
    if (v20 == v21) {
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_19:
    sub_25E4103A0();
    uint64_t v29 = *((void *)&v51 + 1);
    uint64_t v30 = *((void *)&v51 + 1) >> 62;
    if (*((void *)&v51 + 1) >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v32)
      {
LABEL_36:
        sub_25E41AC8C(0);
        goto LABEL_35;
      }
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v33) {
        goto LABEL_45;
      }
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_25E425F80();
      swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_43;
      }
    }
    else if (!*(void *)((*((void *)&v51 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_36;
    }
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v25 = (id)MEMORY[0x2611D6C30](0, v29);
      if (!v30)
      {
LABEL_24:
        if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_41;
        }
        goto LABEL_6;
      }
    }
    else
    {
      if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_39;
      }
      id v25 = *(id *)(v29 + 32);
      if (!v30) {
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_41;
    }
LABEL_6:
    sub_25E3EBDA8(0, 1);
    sub_25E41AC8C(v25);
    if (!v25) {
      goto LABEL_35;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (!v27) {
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_25E425F80();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_10;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_25E411990(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v57 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0) - 8;
  uint64_t v52 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (double *)((char *)&v51 - v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v54 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v58 = (uint64_t)&v51 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v51 - v16;
  uint64_t v18 = *(int *)(v15 + 48);
  uint64_t v19 = sub_25E4255F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v17, v57, v19);
  *(void *)&v17[v18] = a2;
  uint64_t v22 = (char *)v9 + *(int *)(v5 + 56);
  uint64_t v56 = v20;
  uint64_t v57 = (uint64_t)v9;
  *uint64_t v9 = a3;
  uint64_t v23 = *(int *)(v10 + 48);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v24(v22, v17, v19);
  uint64_t v53 = a2;
  *(void *)&v22[v23] = a2;
  id v25 = v54;
  uint64_t v26 = &v55[*(int *)(v52 + 56)];
  uint64_t v27 = v22;
  uint64_t v28 = v58;
  uint64_t v29 = (void (*)(uint64_t, uint64_t, uint64_t))v21;
  v21(v26, (uint64_t)v27, v19);
  v24(v25, v26, v19);
  uint64_t v30 = v10;
  uint64_t v31 = *(int *)(v10 + 48);
  uint64_t v32 = (uint64_t)v25;
  v24((char *)v28, v25, v19);
  uint64_t v33 = v53;
  *(void *)(v28 + v31) = v53;
  uint64_t v34 = qword_26B389400;
  swift_retain_n();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v35, (uint64_t)qword_26B38BC90);
  uint64_t v36 = *(int *)(v30 + 48);
  v29(v32, v58, v19);
  *(void *)(v32 + v36) = v33;
  sub_25E41A428("refill buffer", 13, 2, v32, v33);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v32, v19);
  id v37 = objc_msgSend(self, sel_currentEnvironment);
  id v38 = objc_msgSend(v37, sel_timeProvider);

  objc_msgSend(v38, sel_timestamp);
  double v40 = v39;
  swift_unknownObjectRelease();
  id v41 = objc_msgSend(self, sel_stringForTimeInterval_, v40 - a3);
  uint64_t v42 = sub_25E4258F0();
  unint64_t v44 = v43;

  if (qword_26B389408 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_25E4256A0();
  __swift_project_value_buffer(v45, (uint64_t)qword_26B38BCA8);
  swift_bridgeObjectRetain();
  char v46 = sub_25E425680();
  os_log_type_t v47 = sub_25E425BD0();
  if (os_log_type_enabled(v46, v47))
  {
    char v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v60 = v49;
    *(_DWORD *)char v48 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_25E3C8F74(v42, v44, &v60);
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25E3BB000, v46, v47, "END refillBuffer() (%s)", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v49, -1, -1);
    MEMORY[0x2611D77B0](v48, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_25E3CE8D4(v58, (uint64_t *)&unk_26B389380);
  return sub_25E3CE8D4(v57, &qword_26B3894E0);
}

uint64_t sub_25E411EC0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v65 = a2;
  uint64_t v60 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0) - 8;
  uint64_t v61 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v63 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (double *)((char *)&v59 - v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v62 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v66 = (char *)&v59 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = *(int *)(v16 + 48);
  uint64_t v20 = sub_25E4255F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v18, v65, v20);
  *(void *)&v18[v19] = a3;
  uint64_t v23 = (char *)v10 + *(int *)(v6 + 56);
  uint64_t v64 = v21;
  uint64_t v65 = (uint64_t)v10;
  *uint64_t v10 = a4;
  uint64_t v24 = *(int *)(v11 + 48);
  id v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v25(v23, v18, v20);
  uint64_t v26 = a3;
  *(void *)&v23[v24] = a3;
  uint64_t v27 = (char *)v63 + *(int *)(v61 + 56);
  uint64_t v28 = v23;
  uint64_t v29 = (uint64_t)v62;
  uint64_t v63 = (void (*)(uint64_t, uint64_t, uint64_t))v22;
  v22(v27, (uint64_t)v28, v20);
  v25((char *)v29, v27, v20);
  uint64_t v30 = *(int *)(v11 + 48);
  uint64_t v31 = (uint64_t)v66;
  v25(v66, (char *)v29, v20);
  *(void *)(v31 + v30) = v26;
  uint64_t v32 = qword_26B389400;
  swift_retain_n();
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v33, (uint64_t)qword_26B38BC90);
  uint64_t v34 = *(int *)(v11 + 48);
  v63(v29, v31, v20);
  *(void *)(v29 + v34) = v26;
  sub_25E41A428("fetch range", 11, 2, v29, v26);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v29, v20);
  id v35 = objc_msgSend(self, sel_currentEnvironment);
  id v36 = objc_msgSend(v35, sel_timeProvider);

  objc_msgSend(v36, sel_timestamp);
  double v38 = v37;
  swift_unknownObjectRelease();
  double v39 = v38 - a4;
  id v40 = objc_msgSend(self, sel_stringForTimeInterval_, v39);
  uint64_t v64 = sub_25E4258F0();
  unint64_t v42 = v41;

  if (qword_26B389408 != -1) {
    swift_once();
  }
  uint64_t v63 = (void (*)(uint64_t, uint64_t, uint64_t))sub_25E4256A0();
  __swift_project_value_buffer((uint64_t)v63, (uint64_t)qword_26B38BCA8);
  swift_bridgeObjectRetain_n();
  unint64_t v43 = sub_25E425680();
  os_log_type_t v44 = sub_25E425BD0();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 134218498;
    uint64_t v47 = v60;
    uint64_t v67 = v60;
    uint64_t v68 = v46;
    sub_25E425D80();
    *(_WORD *)(v45 + 12) = 2080;
    if (v47 == 1) {
      uint64_t v48 = 0x72656B63697473;
    }
    else {
      uint64_t v48 = 0x7372656B63697473;
    }
    if (v47 == 1) {
      unint64_t v49 = 0xE700000000000000;
    }
    else {
      unint64_t v49 = 0xE800000000000000;
    }
    uint64_t v67 = sub_25E3C8F74(v48, v49, &v68);
    sub_25E425D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_25E3C8F74(v64, v42, &v68);
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25E3BB000, v43, v44, "did fetch %ld %s in %s", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v46, -1, -1);
    MEMORY[0x2611D77B0](v45, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (objc_msgSend(self, sel_isMainThread) && v39 > 0.0001)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v50 = sub_25E425680();
    os_log_type_t v51 = sub_25E425C00();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v68 = v53;
      *(_DWORD *)uint64_t v52 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_25E3C8F74(v64, v42, &v68);
      sub_25E425D80();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25E3BB000, v50, v51, "An instance of StickerSequence is being iterated on the main thread, which may negatively impact the responsiveness of the UI: %s was spent performing I/O on the main thread.", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v53, -1, -1);
      MEMORY[0x2611D77B0](v52, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (qword_26B389398 != -1) {
      swift_once();
    }
    __swift_project_value_buffer((uint64_t)v63, (uint64_t)qword_26B38BC60);
    swift_bridgeObjectRetain();
    id v54 = sub_25E425680();
    os_log_type_t v55 = sub_25E425C00();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v68 = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_25E3C8F74(v64, v42, &v68);
      sub_25E425D80();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25E3BB000, v54, v55, "An instance of StickerSequence is being iterated on the main thread, which may negatively impact the responsiveness of the UI: %s was spent performing I/O on the main thread.", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v57, -1, -1);
      MEMORY[0x2611D77B0](v56, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_25E3CE8D4((uint64_t)v66, (uint64_t *)&unk_26B389380);
  return sub_25E3CE8D4(v65, &qword_26B3894E0);
}

unint64_t sub_25E41273C()
{
  unint64_t result = qword_26A6EDC80;
  if (!qword_26A6EDC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDC80);
  }
  return result;
}

uint64_t destroy for StickerSequence(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);

  uint64_t v2 = *(void **)(a1 + 56);
  if ((unint64_t)v2 >= 3) {

  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(a1 + 112);
}

uint64_t initializeWithCopy for StickerSequence(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 48);
  uint64_t v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  id v7 = v5;
  if ((unint64_t)v6 >= 3) {
    id v8 = v6;
  }
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v9;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v12 = a2 + 112;
  long long v13 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v13;
  uint64_t v14 = v13;
  uint64_t v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
  swift_bridgeObjectRetain();
  v15(a1 + 112, v12, v14);
  return a1;
}

uint64_t assignWithCopy for StickerSequence(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 56);
  id v8 = *(void **)(a2 + 56);
  if ((unint64_t)v7 >= 3)
  {
    if ((unint64_t)v8 >= 3)
    {
      *(void *)(a1 + 56) = v8;
      id v10 = v8;

      goto LABEL_8;
    }

    id v8 = *(void **)(a2 + 56);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 3)
  {
LABEL_6:
    *(void *)(a1 + 56) = v8;
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v8;
  id v9 = v8;
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v12;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for StickerSequence(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v6 = *(void **)(a1 + 56);
  unint64_t v7 = *(void *)(a2 + 56);
  if ((unint64_t)v6 >= 3)
  {
    if (v7 >= 3)
    {
      *(void *)(a1 + 56) = v7;

      goto LABEL_6;
    }
  }
  *(void *)(a1 + 56) = v7;
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  __swift_destroy_boxed_opaque_existential_0(a1 + 112);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerSequence(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerSequence()
{
  return &type metadata for StickerSequence;
}

uint64_t destroy for StickerSequenceIterator(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);

  unint64_t v2 = *(void **)(a1 + 56);
  if ((unint64_t)v2 >= 3) {

  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 112);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StickerSequenceIterator(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(void **)(a2 + 48);
  uint64_t v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  id v7 = v5;
  if ((unint64_t)v6 >= 3) {
    id v8 = v6;
  }
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v9;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v12 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v12;
  uint64_t v13 = v12;
  uint64_t v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  v14(a1 + 112, a2 + 112, v13);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StickerSequenceIterator(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v4 = *(void **)(a1 + 48);
  long long v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 56);
  id v8 = *(void **)(a2 + 56);
  if ((unint64_t)v7 >= 3)
  {
    if ((unint64_t)v8 >= 3)
    {
      *(void *)(a1 + 56) = v8;
      id v10 = v8;

      goto LABEL_8;
    }

    id v8 = *(void **)(a2 + 56);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 3)
  {
LABEL_6:
    *(void *)(a1 + 56) = v8;
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v8;
  id v9 = v8;
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v12;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for StickerSequenceIterator(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  long long v6 = *(void **)(a1 + 56);
  unint64_t v7 = *(void *)(a2 + 56);
  if ((unint64_t)v6 >= 3)
  {
    if (v7 >= 3)
    {
      *(void *)(a1 + 56) = v7;

      goto LABEL_6;
    }
  }
  *(void *)(a1 + 56) = v7;
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  __swift_destroy_boxed_opaque_existential_0(a1 + 112);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerSequenceIterator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerSequenceIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerSequenceIterator()
{
  return &type metadata for StickerSequenceIterator;
}

id ManagedSticker.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSticker.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSticker();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSticker()
{
  return self;
}

id ManagedSticker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSticker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id Sticker.Representation.__allocating_init(data:uti:size:role:isPreferred:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, double a7, double a8)
{
  id v17 = objc_allocWithZone(v8);
  id v18 = sub_25E4161BC(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_25E3CEA28(a1, a2);
  return v18;
}

uint64_t Sticker.Representation.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E4138F0(&OBJC_IVAR___STKStickerRepresentation_identifier, MEMORY[0x263F07508], a1);
}

uint64_t sub_25E413524()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKStickerRepresentation_data;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  sub_25E3CEAB0(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_25E4135FC(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  *id v5 = a1;
  v5[1] = a2;
  sub_25E3CEA28(v6, v7);
  uint64_t v8 = *v5;
  unint64_t v9 = v5[1];
  uint64_t v10 = 0;
  switch(v9 >> 62)
  {
    case 1uLL:
      BOOL v11 = __OFSUB__(HIDWORD(v8), v8);
      int v12 = HIDWORD(v8) - v8;
      if (v11)
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x25E4136DCLL);
      }
      uint64_t v10 = v12;
LABEL_6:
      uint64_t v16 = (void *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
      uint64_t result = swift_beginAccess();
      *uint64_t v16 = v10;
      return result;
    case 2uLL:
      uint64_t v15 = v8 + 16;
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = *(void *)(v15 + 8);
      uint64_t v10 = v14 - v13;
      if (!__OFSUB__(v14, v13)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v10 = BYTE6(v9);
      goto LABEL_6;
  }
}

uint64_t sub_25E4136EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v3 = (uint64_t *)(*a1 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_25E3CEAB0(v4, v5);
}

void (*sub_25E413744(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___STKStickerRepresentation_data;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_25E4137B0;
}

void sub_25E4137B0(void **a1, char a2)
{
  long long v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    unint64_t v5 = (uint64_t *)(v4 + v3[4]);
    uint64_t v6 = *v5;
    unint64_t v7 = v5[1];
    uint64_t v8 = 0;
    switch(v7 >> 62)
    {
      case 1uLL:
        BOOL v9 = __OFSUB__(HIDWORD(v6), v6);
        int v10 = HIDWORD(v6) - v6;
        if (v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x25E413884);
        }
        uint64_t v8 = v10;
LABEL_7:
        uint64_t v14 = (void *)(v4 + OBJC_IVAR___STKStickerRepresentation_byteCount);
        swift_beginAccess();
        *uint64_t v14 = v8;
        break;
      case 2uLL:
        uint64_t v13 = v6 + 16;
        uint64_t v11 = *(void *)(v6 + 16);
        uint64_t v12 = *(void *)(v13 + 8);
        uint64_t v8 = v12 - v11;
        if (!__OFSUB__(v12, v11)) {
          goto LABEL_7;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_7;
      default:
        uint64_t v8 = BYTE6(v7);
        goto LABEL_7;
    }
  }
  free(v3);
}

uint64_t Sticker.Representation.uti.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E4138F0(&OBJC_IVAR___STKStickerRepresentation_uti, MEMORY[0x263F8F3A0], a1);
}

uint64_t sub_25E4138F0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_25E4139AC()
{
  uint64_t v1 = v0 + OBJC_IVAR___STKStickerRepresentation_byteCount;
  swift_beginAccess();
  return *(void *)v1;
}

double Sticker.Representation.size.getter()
{
  return *(double *)(v0 + OBJC_IVAR___STKStickerRepresentation_size);
}

uint64_t sub_25E413AE4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_25E413BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E413C08(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25E413C74())()
{
  return j__swift_endAccess;
}

uint64_t sub_25E413D18()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  swift_beginAccess();
  return *v1;
}

uint64_t Sticker.Representation.version.getter()
{
  return *(void *)(v0 + OBJC_IVAR___STKStickerRepresentation_version);
}

uint64_t static Sticker.Representation.Role.default.getter()
{
  return 0;
}

id Sticker.Representation.init(data:uti:size:role:isPreferred:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, double a7, double a8)
{
  id v10 = sub_25E4161BC(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_25E3CEA28(a1, a2);
  return v10;
}

id Sticker.Representation.__allocating_init(identifier:data:uti:byteCount:size:role:isPreferred:version:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13)
{
  char v21 = a6 & 1;
  id v22 = objc_allocWithZone(v13);
  id v23 = sub_25E4164B0(a1, a2, a3, a4, a5, v21, a7, a8, a9, a10, a11, a12, a13 & 1);
  sub_25E3CEA28(a2, a3);
  return v23;
}

id Sticker.Representation.init(identifier:data:uti:byteCount:size:role:isPreferred:version:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13)
{
  id v15 = sub_25E4164B0(a1, a2, a3, a4, a5, a6 & 1, a7, a8, a9, a10, a11, a12, a13 & 1);
  sub_25E3CEA28(a2, a3);
  return v15;
}

BOOL sub_25E413F5C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_25E3E01A8(a1, (uint64_t)v21);
  if (!v22)
  {
    sub_25E3CE8D4((uint64_t)v21, &qword_26B389560);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v1 + OBJC_IVAR___STKStickerRepresentation_version) != *(void *)&v20[OBJC_IVAR___STKStickerRepresentation_version]) {
    goto LABEL_14;
  }
  sub_25E4254F0();
  sub_25E416850((unint64_t *)&qword_26B388D60, MEMORY[0x263F07508]);
  if ((sub_25E4258A0() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  uint64_t v6 = *v4;
  unint64_t v5 = v4[1];
  unint64_t v7 = (uint64_t *)&v20[OBJC_IVAR___STKStickerRepresentation_data];
  swift_beginAccess();
  uint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  sub_25E3CEAB0(v6, v5);
  sub_25E3CEAB0(v9, v8);
  char v10 = sub_25E407F60(v6, v5, v9, v8);
  sub_25E3CEA28(v9, v8);
  sub_25E3CEA28(v6, v5);
  if ((v10 & 1) == 0
    || (sub_25E4255B0(),
        sub_25E416850((unint64_t *)&unk_26B388D80, MEMORY[0x263F8F3A0]),
        (sub_25E4258A0() & 1) == 0)
    || (uint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount),
        swift_beginAccess(),
        uint64_t v12 = *v11,
        uint64_t v13 = &v20[OBJC_IVAR___STKStickerRepresentation_byteCount],
        swift_beginAccess(),
        v12 != *(void *)v13)
    || *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size) != *(double *)&v20[OBJC_IVAR___STKStickerRepresentation_size]
    || *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size + 8) != *(double *)&v20[OBJC_IVAR___STKStickerRepresentation_size
                                                                                        + 8])
  {
LABEL_14:

    return 0;
  }
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  id v17 = &v20[OBJC_IVAR___STKStickerRepresentation_role];
  swift_beginAccess();
  if (v15 == *(void *)v17 && v16 == *((void *)v17 + 1))
  {

    return 1;
  }
  else
  {
    char v19 = sub_25E426160();

    return (v19 & 1) != 0;
  }
}

uint64_t static Sticker.Representation.supportsSecureCoding.getter()
{
  return 1;
}

id Sticker.Representation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Sticker.Representation.init(coder:)(a1);
}

id Sticker.Representation.init(coder:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B388ED0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25E4255B0();
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v75 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = sub_25E4254F0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E3CE930(0, &qword_26B3894F8);
  uint64_t v78 = v1;
  id v18 = a1;
  uint64_t v19 = sub_25E425CE0();
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_6;
  }
  uint64_t v20 = (void *)v19;
  os_log_type_t v73 = v5;
  BOOL v74 = v17;
  char v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v21(v11, 1, 1, v14);
  sub_25E416850((unint64_t *)&unk_26A6EDAB0, MEMORY[0x263F07508]);
  sub_25E425FF0();

  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v11, 1, v14) != 1)
  {
    uint64_t v23 = v15;
    uint64_t v24 = v15 + 32;
    id v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v26 = v11;
    uint64_t v27 = v24;
    v25(v13, v26, v14);
    v21(v13, 0, 1, v14);
    if (v22(v13, 1, v14) == 1) {
      goto LABEL_6;
    }
    uint64_t v32 = v23;
    uint64_t v33 = v74;
    v25(v74, v13, v14);
    sub_25E3CE930(0, (unint64_t *)&unk_26A6EDAC0);
    uint64_t v34 = v18;
    uint64_t v35 = sub_25E425CE0();
    if (v35)
    {
      id v36 = (void *)v35;
      double v37 = v25;
      long long v80 = xmmword_25E428580;
      sub_25E4253C0();

      unint64_t v38 = *((void *)&v80 + 1);
      if (*((void *)&v80 + 1) >> 60 != 15)
      {
        uint64_t v72 = v27;
        uint64_t v39 = v80;
        sub_25E3CE930(0, (unint64_t *)&qword_26A6EDC90);
        uint64_t v40 = sub_25E425CE0();
        if (v40)
        {
          unint64_t v41 = (void *)v40;
          long long v80 = 0uLL;
          sub_25E4258E0();

          if (*((void *)&v80 + 1))
          {
            long long v71 = v80;
            unint64_t v42 = (void *)sub_25E4258C0();
            id v43 = objc_msgSend(v34, sel_decodeIntegerForKey_, v42);

            os_log_type_t v44 = (void *)sub_25E4258C0();
            objc_msgSend(v34, sel_decodeSizeForKey_, v44);
            uint64_t v46 = v45;
            uint64_t v48 = v47;

            uint64_t v49 = sub_25E425CE0();
            if (v49)
            {
              uint64_t v50 = (void *)v49;
              long long v80 = 0uLL;
              sub_25E4258E0();

              uint64_t v51 = *((void *)&v80 + 1);
              if (*((void *)&v80 + 1))
              {
                id v69 = v43;
                uint64_t v70 = v37;
                uint64_t v68 = v80;
                uint64_t v52 = (void *)sub_25E4258C0();
                unsigned int v67 = objc_msgSend(v34, sel_decodeBoolForKey_, v52);

                uint64_t v53 = (void *)sub_25E4258C0();
                id v66 = objc_msgSend(v34, sel_decodeIntegerForKey_, v53);

                uint64_t v54 = (uint64_t)v73;
                sub_25E4255C0();
                uint64_t v55 = v76;
                uint64_t v56 = v77;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v54, 1, v77) != 1)
                {
                  *((void *)&v71 + 1) = v51;
                  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
                  uint64_t v58 = v39;
                  uint64_t v59 = v75;
                  v57(v75, v54, v56);
                  uint64_t v60 = v78;
                  v70(&v78[OBJC_IVAR___STKStickerRepresentation_identifier], v33, v14);
                  uint64_t v61 = (uint64_t *)&v60[OBJC_IVAR___STKStickerRepresentation_data];
                  *uint64_t v61 = v58;
                  v61[1] = v38;
                  v57(&v60[OBJC_IVAR___STKStickerRepresentation_uti], (uint64_t)v59, v56);
                  *(void *)&v60[OBJC_IVAR___STKStickerRepresentation_byteCount] = v69;
                  unint64_t v62 = &v60[OBJC_IVAR___STKStickerRepresentation_size];
                  void *v62 = v46;
                  v62[1] = v48;
                  uint64_t v63 = &v60[OBJC_IVAR___STKStickerRepresentation_role];
                  uint64_t v64 = *((void *)&v71 + 1);
                  void *v63 = v68;
                  v63[1] = v64;
                  v60[OBJC_IVAR___STKStickerRepresentation_isPreferred] = v67;
                  *(void *)&v60[OBJC_IVAR___STKStickerRepresentation_version] = v66;

                  uint64_t v65 = (objc_class *)type metadata accessor for Sticker.Representation();
                  v79.receiver = v60;
                  v79.super_class = v65;
                  id v30 = objc_msgSendSuper2(&v79, sel_init);

                  return v30;
                }
                sub_25E3CEB1C(v39, v38);

                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v14);
                uint64_t v28 = (uint64_t *)&unk_26B388ED0;
                uint64_t v29 = v54;
                goto LABEL_7;
              }
            }
            sub_25E3CEB1C(v39, v38);

            swift_bridgeObjectRelease();
LABEL_20:
            (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v14);
            goto LABEL_8;
          }
        }
        sub_25E3CEB1C(v39, v38);
      }
    }

    goto LABEL_20;
  }
  v21(v13, 1, 1, v14);
LABEL_6:

  uint64_t v28 = &qword_26B389370;
  uint64_t v29 = (uint64_t)v13;
LABEL_7:
  sub_25E3CE8D4(v29, v28);
LABEL_8:
  type metadata accessor for Sticker.Representation();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_25E414BB4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_25E4254A0();
  unint64_t v5 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_data);
  swift_beginAccess();
  uint64_t v8 = *v6;
  unint64_t v7 = v6[1];
  sub_25E3CEAB0(v8, v7);
  uint64_t v9 = (void *)sub_25E4253B0();
  sub_25E3CEA28(v8, v7);
  uint64_t v10 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  sub_25E425590();
  uint64_t v11 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  uint64_t v13 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v14, v15);

  double v16 = *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size);
  double v17 = *(double *)(v2 + OBJC_IVAR___STKStickerRepresentation_size + 8);
  id v18 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeSize_forKey_, v18, v16, v17);

  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v20);

  char v21 = (unsigned __int8 *)(v2 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  swift_beginAccess();
  uint64_t v22 = *v21;
  uint64_t v23 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeBool_forKey_, v22, v23);

  uint64_t v24 = *(void *)(v2 + OBJC_IVAR___STKStickerRepresentation_version);
  id v25 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v24, v25);
}

uint64_t sub_25E414FA8()
{
  uint64_t v1 = v0;
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  sub_25E4254F0();
  sub_25E416850((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  uint64_t v2 = self;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  swift_beginAccess();
  id v4 = objc_msgSend(v2, sel_stringFromByteCount_countStyle_, *v3, 0);
  sub_25E4258F0();

  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  sub_25E4255B0();
  sub_25E416850(&qword_26A6EDCA0, MEMORY[0x263F8F3A0]);
  sub_25E426140();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  sub_25E425B60();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  sub_25E425B60();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  return 60;
}

unint64_t static Sticker.Representation.Role.original.getter()
{
  return 0xD000000000000020;
}

unint64_t static Sticker.Representation.Role.stillVariant.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static Sticker.Representation.Role.animatedVariant.getter()
{
  return 0xD000000000000020;
}

unint64_t static Sticker.Representation.Role.keyboardPreview.getter()
{
  return 0xD000000000000020;
}

id Sticker.Representation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Sticker.Representation.init()()
{
}

uint64_t sub_25E41531C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1635017060;
      break;
    case 2:
      uint64_t result = 6911093;
      break;
    case 3:
      uint64_t result = 0x6E756F4365747962;
      break;
    case 4:
      uint64_t result = 1702521203;
      break;
    case 5:
      uint64_t result = 1701605234;
      break;
    case 6:
      uint64_t result = 0x7265666572507369;
      break;
    case 7:
      uint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E41540C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25E4170FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_25E415434(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_25E415440(uint64_t a1)
{
  unint64_t v2 = sub_25E4167FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E41547C(uint64_t a1)
{
  unint64_t v2 = sub_25E4167FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

id Sticker.Representation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Sticker.Representation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25E4155CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389018);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E4167FC();
  sub_25E426260();
  char v15 = 0;
  sub_25E4254F0();
  sub_25E416850(&qword_26B388EB8, MEMORY[0x263F07508]);
  sub_25E426100();
  if (!v2)
  {
    uint64_t v9 = (long long *)(v3 + OBJC_IVAR___STKStickerRepresentation_data);
    swift_beginAccess();
    long long v14 = *v9;
    LOBYTE(v13) = 1;
    sub_25E3DBC18();
    sub_25E426100();
    LOBYTE(v14) = 2;
    sub_25E4255B0();
    sub_25E416850(&qword_26B388EC8, MEMORY[0x263F8F3A0]);
    sub_25E426100();
    swift_beginAccess();
    LOBYTE(v13) = 3;
    sub_25E4260F0();
    long long v13 = *(_OWORD *)(v3 + OBJC_IVAR___STKStickerRepresentation_size);
    char v12 = 4;
    type metadata accessor for CGSize(0);
    sub_25E416850(&qword_26B388FF0, type metadata accessor for CGSize);
    sub_25E426100();
    swift_beginAccess();
    char v12 = 5;
    swift_bridgeObjectRetain();
    sub_25E4260C0();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    HIBYTE(v11) = 6;
    sub_25E4260D0();
    HIBYTE(v11) = 7;
    sub_25E4260F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id Sticker.Representation.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Sticker.Representation.init(from:)(a1);
}

id Sticker.Representation.init(from:)(void *a1)
{
  uint64_t v3 = sub_25E4255B0();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25E4254F0();
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E28);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_25E4167FC();
  uint64_t v11 = v1;
  id v30 = v9;
  char v12 = v35;
  sub_25E426250();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    id v25 = 0;

    type metadata accessor for Sticker.Representation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v35 = v5;
    uint64_t v13 = v27;
    LOBYTE(v37) = 0;
    sub_25E416850((unint64_t *)&unk_26B388D70, MEMORY[0x263F07508]);
    long long v14 = v28;
    uint64_t v15 = v29;
    sub_25E426090();
    double v17 = v11;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[OBJC_IVAR___STKStickerRepresentation_identifier], v14, v6);
    char v38 = 1;
    sub_25E3DA930();
    sub_25E426090();
    *(_OWORD *)&v11[OBJC_IVAR___STKStickerRepresentation_data] = v37;
    LOBYTE(v37) = 2;
    sub_25E416850(&qword_26B388D90, MEMORY[0x263F8F3A0]);
    id v18 = v35;
    uint64_t v19 = v32;
    sub_25E426090();
    (*(void (**)(unsigned char *, char *, uint64_t))(v31 + 32))(&v17[OBJC_IVAR___STKStickerRepresentation_uti], v18, v19);
    LOBYTE(v37) = 3;
    *(void *)&v17[OBJC_IVAR___STKStickerRepresentation_byteCount] = sub_25E426080();
    type metadata accessor for CGSize(0);
    char v38 = 4;
    sub_25E416850(&qword_26B388E18, type metadata accessor for CGSize);
    sub_25E426090();
    uint64_t v20 = (uint64_t)v34;
    *(_OWORD *)&v17[OBJC_IVAR___STKStickerRepresentation_size] = v37;
    LOBYTE(v37) = 5;
    uint64_t v21 = sub_25E426050();
    uint64_t v22 = (uint64_t *)&v17[OBJC_IVAR___STKStickerRepresentation_role];
    *uint64_t v22 = v21;
    v22[1] = v23;
    LOBYTE(v37) = 6;
    v17[OBJC_IVAR___STKStickerRepresentation_isPreferred] = sub_25E426060() & 1;
    LOBYTE(v37) = 7;
    *(void *)&v17[OBJC_IVAR___STKStickerRepresentation_version] = sub_25E426080();

    uint64_t v24 = (objc_class *)type metadata accessor for Sticker.Representation();
    v36.receiver = v17;
    v36.super_class = v24;
    id v25 = objc_msgSendSuper2(&v36, sel_init);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v30, v15);
    __swift_destroy_boxed_opaque_existential_0(v20);
  }
  return v25;
}

id sub_25E416140@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation());
  id result = Sticker.Representation.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25E416198(void *a1)
{
  return sub_25E4155CC(a1);
}

id sub_25E4161BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, double a7, double a8)
{
  uint64_t v17 = sub_25E4254F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v8;
  sub_25E4254E0();
  (*(void (**)(unsigned char *, char *, uint64_t))(v18 + 32))(&v21[OBJC_IVAR___STKStickerRepresentation_identifier], v20, v17);
  uint64_t v22 = (uint64_t *)&v21[OBJC_IVAR___STKStickerRepresentation_data];
  *uint64_t v22 = a1;
  v22[1] = a2;
  uint64_t v23 = &v21[OBJC_IVAR___STKStickerRepresentation_uti];
  uint64_t v24 = sub_25E4255B0();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, a3, v24);
  uint64_t v26 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x25E4164A0);
      }
      uint64_t v26 = HIDWORD(a1) - (int)a1;
LABEL_6:
      sub_25E3CEAB0(a1, a2);
LABEL_7:
      *(void *)&v21[OBJC_IVAR___STKStickerRepresentation_byteCount] = v26;
      uint64_t v29 = (double *)&v21[OBJC_IVAR___STKStickerRepresentation_size];
      double *v29 = a7;
      v29[1] = a8;
      id v30 = &v21[OBJC_IVAR___STKStickerRepresentation_role];
      *id v30 = a4;
      v30[1] = a5;
      v21[OBJC_IVAR___STKStickerRepresentation_isPreferred] = a6 & 1;
      if (qword_26B388F00 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_26B388EF8 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
      swift_beginAccess();
      uint64_t v32 = *(void *)v31;
      if (*(unsigned char *)(v31 + 8)) {
        uint64_t v32 = 1;
      }
      *(void *)&v21[OBJC_IVAR___STKStickerRepresentation_version] = v32;

      uint64_t v33 = (objc_class *)type metadata accessor for Sticker.Representation();
      v37.receiver = v21;
      v37.super_class = v33;
      id v34 = objc_msgSendSuper2(&v37, sel_init);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a3, v24);
      return v34;
    case 2uLL:
      uint64_t v28 = *(void *)(a1 + 16);
      uint64_t v27 = *(void *)(a1 + 24);
      uint64_t v26 = v27 - v28;
      if (!__OFSUB__(v27, v28)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v26 = BYTE6(a2);
      goto LABEL_7;
  }
}

id sub_25E4164B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13)
{
  uint64_t v22 = &v13[OBJC_IVAR___STKStickerRepresentation_identifier];
  uint64_t v23 = sub_25E4254F0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v40 = v23;
  uint64_t v41 = a1;
  (*(void (**)(char *, uint64_t))(v24 + 16))(v22, a1);
  uint64_t v25 = (uint64_t *)&v13[OBJC_IVAR___STKStickerRepresentation_data];
  uint64_t *v25 = a2;
  v25[1] = a3;
  uint64_t v26 = &v13[OBJC_IVAR___STKStickerRepresentation_uti];
  uint64_t v27 = sub_25E4255B0();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v26, a4, v27);
  if (a6)
  {
    a5 = 0;
    switch(a3 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(a2), a2))
        {
          __break(1u);
LABEL_15:
          __break(1u);
          JUMPOUT(0x25E4167A0);
        }
        a5 = HIDWORD(a2) - (int)a2;
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(a2 + 16);
        uint64_t v29 = *(void *)(a2 + 24);
        a5 = v29 - v30;
        if (!__OFSUB__(v29, v30)) {
          break;
        }
        goto LABEL_15;
      case 3uLL:
        break;
      default:
        a5 = BYTE6(a3);
        break;
    }
  }
  *(void *)&v13[OBJC_IVAR___STKStickerRepresentation_byteCount] = a5;
  uint64_t v31 = (double *)&v13[OBJC_IVAR___STKStickerRepresentation_size];
  *uint64_t v31 = a9;
  v31[1] = a10;
  uint64_t v32 = &v13[OBJC_IVAR___STKStickerRepresentation_role];
  void *v32 = a7;
  v32[1] = a8;
  v13[OBJC_IVAR___STKStickerRepresentation_isPreferred] = a11 & 1;
  uint64_t v33 = v13;
  sub_25E3CEAB0(a2, a3);
  if (a13)
  {
    if (qword_26B388F00 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_26B388EF8 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerRepresentationVersionOverride;
    swift_beginAccess();
    a12 = *(void *)v35;
    if (*(unsigned char *)(v35 + 8)) {
      a12 = 1;
    }
  }
  *(void *)&v33[OBJC_IVAR___STKStickerRepresentation_version] = a12;

  v42.receiver = v33;
  v42.super_class = (Class)type metadata accessor for Sticker.Representation();
  id v36 = objc_msgSendSuper2(&v42, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a4, v27);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v41, v40);
  return v36;
}

uint64_t type metadata accessor for Sticker.Representation()
{
  uint64_t result = qword_26B389608;
  if (!qword_26B389608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25E4167FC()
{
  unint64_t result = qword_26B389480;
  if (!qword_26B389480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389480);
  }
  return result;
}

uint64_t sub_25E416850(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E41689C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_25E3CEAB0(*a1, v2);
  return sub_25E4135FC(v1, v2);
}

uint64_t sub_25E4168E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_25E416934(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___STKStickerRepresentation_byteCount);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_25E416984@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKStickerRepresentation_role);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E4169E0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_25E416A34(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR___STKStickerRepresentation_isPreferred);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_25E416A84()
{
  return type metadata accessor for Sticker.Representation();
}

uint64_t sub_25E416A8C()
{
  uint64_t result = sub_25E4254F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25E4255B0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for Sticker.Representation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Sticker.Representation);
}

uint64_t dispatch thunk of Sticker.Representation.data.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of Sticker.Representation.data.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of Sticker.Representation.data.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of Sticker.Representation.byteCount.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of Sticker.Representation.role.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of Sticker.Representation.role.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of Sticker.Representation.role.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of Sticker.Representation.isPreferred.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(data:uti:size:role:isPreferred:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(identifier:data:uti:byteCount:size:role:isPreferred:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 248))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of Sticker.Representation.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of Sticker.Representation.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of Sticker.Representation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

ValueMetadata *type metadata accessor for Sticker.Representation.Role()
{
  return &type metadata for Sticker.Representation.Role;
}

uint64_t _s14RepresentationC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14RepresentationC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E416FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14RepresentationC10CodingKeysOMa()
{
  return &_s14RepresentationC10CodingKeysON;
}

unint64_t sub_25E416FF8()
{
  unint64_t result = qword_26A6EDCA8;
  if (!qword_26A6EDCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDCA8);
  }
  return result;
}

unint64_t sub_25E417050()
{
  unint64_t result = qword_26B389490;
  if (!qword_26B389490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389490);
  }
  return result;
}

unint64_t sub_25E4170A8()
{
  unint64_t result = qword_26B389488;
  if (!qword_26B389488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389488);
  }
  return result;
}

uint64_t sub_25E4170FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6911093 && a2 == 0xE300000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E756F4365747962 && a2 == 0xE900000000000074 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265666572507369 && a2 == 0xEB00000000646572 || (sub_25E426160() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_25E426160();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_25E417438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_25E4174A4(uint64_t a1)
{
  uint64_t v2 = sub_25E425620();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_25E417508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E41756C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E4175D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E417634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E417698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E4176AC);
}

uint64_t sub_25E4176AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_25E417718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E41772C);
}

uint64_t sub_25E41772C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E425620();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StickerSignposter()
{
  uint64_t result = qword_26B3893F0;
  if (!qword_26B3893F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E4177E8()
{
  uint64_t result = sub_25E425620();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25E417874(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v27 = sub_25E4255F0();
  uint64_t v8 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25E425620();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E425610();
  sub_25E4255D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v4, v11);
  uint64_t v15 = sub_25E425610();
  int v25 = sub_25E425C90();
  uint64_t result = sub_25E425D50();
  uint64_t v26 = v11;
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v27);
LABEL_11:
    sub_25E425660();
    swift_allocObject();
    uint64_t v22 = sub_25E425650();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
    return v22;
  }
  if ((a4 & 1) == 0)
  {
    if (a2)
    {
      uint64_t v24 = a2;
      uint64_t v17 = a1;
LABEL_10:
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v18(v10, v17, v27);
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      os_signpost_id_t v20 = sub_25E4255E0();
      _os_signpost_emit_with_name_impl(&dword_25E3BB000, v15, (os_signpost_type_t)v25, v20, v24, "", v19, 2u);
      MEMORY[0x2611D77B0](v19, -1, -1);

      uint64_t v21 = v27;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
      v18(v10, v17, v21);
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_13;
  }
  if ((unint64_t)a2 >> 32)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a2 >> 11 != 27)
  {
    if (a2 >> 16 <= 0x10)
    {
      uint64_t v17 = a1;
      uint64_t v24 = &v28;
      goto LABEL_10;
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_25E417B68(char *a1, char *a2)
{
  return sub_25E417B90(a1, a2, "BEGIN count(for:)", "count stickers");
}

uint64_t sub_25E417B7C(char *a1, char *a2)
{
  return sub_25E417B90(a1, a2, "BEGIN stickers(for:)", "fetch stickers");
}

uint64_t sub_25E417B90(char *a1, char *a2, const char *a3, const char *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v36 - v12;
  char v14 = *a2;
  long long v15 = *(_OWORD *)(a2 + 8);
  uint64_t v16 = *((void *)a2 + 3);
  long long v38 = *((_OWORD *)a2 + 2);
  long long v39 = v15;
  int v37 = a2[48];
  uint64_t v36 = *((void *)a2 + 7);
  char v17 = a2[64];
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_25E4256A0();
  __swift_project_value_buffer(v18, (uint64_t)qword_26B38BC60);
  uint64_t v19 = sub_25E425680();
  os_log_type_t v20 = sub_25E425BD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = a3;
    uint64_t v23 = a4;
    uint64_t v24 = v11;
    int v25 = a1;
    uint64_t v26 = v21;
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_25E3BB000, v19, v20, v22, v21, 2u);
    uint64_t v27 = v26;
    a1 = v25;
    uint64_t v11 = v24;
    a4 = v23;
    MEMORY[0x2611D77B0](v27, -1, -1);
  }

  v40[0] = v14;
  long long v41 = v39;
  uint64_t v42 = v16;
  long long v43 = v38;
  char v44 = v37;
  uint64_t v45 = v36;
  char v46 = v17;
  sub_25E41AF80((uint64_t)v40);
  id v28 = objc_msgSend(self, sel_currentEnvironment);
  id v29 = objc_msgSend(v28, sel_timeProvider);

  objc_msgSend(v29, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v30, (uint64_t)qword_26B38BC78);
  uint64_t v32 = sub_25E417874((uint64_t)v13, a4, v31, 2);
  uint64_t v33 = sub_25E4255F0();
  id v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32);
  v34(v11, v13, v33);
  v34(a1, v11, v33);
  return v32;
}

uint64_t sub_25E417E90(char *a1, void *a2)
{
  uint64_t v51 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v50 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (uint64_t)v48 - v6;
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_25E4256A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B38BC60);
  uint64_t v8 = sub_25E425680();
  os_log_type_t v9 = sub_25E425BD0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_25E3BB000, v8, v9, "BEGIN addSticker(_:)", v10, 2u);
    MEMORY[0x2611D77B0](v10, -1, -1);
  }

  id v11 = a2;
  uint64_t v12 = sub_25E425680();
  os_log_type_t v13 = sub_25E425BD0();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)char v14 = 136315138;
    v53[0] = v15;
    sub_25E4254F0();
    sub_25E41C720((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
    uint64_t v16 = sub_25E426140();
    uint64_t v52 = sub_25E3C8F74(v16, v17, v53);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v12, v13, " - identifier: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v15, -1, -1);
    MEMORY[0x2611D77B0](v14, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = (char *)v11;
  uint64_t v19 = sub_25E425680();
  os_log_type_t v20 = sub_25E425BD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v53[0] = v21;
    LODWORD(v12->isa) = 136315138;
    v48[1] = (char *)&v12->isa + 4;
    uint64_t v22 = self;
    uint64_t v23 = &v18[OBJC_IVAR___STKSticker_byteCount];
    swift_beginAccess();
    id v24 = objc_msgSend(v22, sel_stringFromByteCount_countStyle_, *(void *)v23, 0);
    uint64_t v25 = sub_25E4258F0();
    unint64_t v27 = v26;

    uint64_t v52 = sub_25E3C8F74(v25, v27, v53);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v19, v20, " - byteCount: %s", (uint8_t *)v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v21, -1, -1);
    MEMORY[0x2611D77B0](v12, -1, -1);
  }
  else
  {
  }
  id v28 = v18;
  unint64_t v29 = sub_25E425680();
  LOBYTE(v30) = sub_25E425BD0();
  if (!os_log_type_enabled((os_log_t)v29, (os_log_type_t)v30))
  {

    unint64_t v29 = (unint64_t)v28;
    goto LABEL_16;
  }
  uint64_t v12 = swift_slowAlloc();
  LODWORD(v12->isa) = 134217984;
  uint64_t v31 = (unint64_t *)((char *)v28 + OBJC_IVAR___STKSticker_representations);
  swift_beginAccess();
  unint64_t v32 = *v31;
  if (v32 >> 62) {
    goto LABEL_29;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v53[0] = v33;
    sub_25E425D80();

    _os_log_impl(&dword_25E3BB000, (os_log_t)v29, (os_log_type_t)v30, " - representations (%ld):", (uint8_t *)v12, 0xCu);
    MEMORY[0x2611D77B0](v12, -1, -1);
LABEL_16:

    id v34 = (NSObject **)((char *)v28 + OBJC_IVAR___STKSticker_representations);
    swift_beginAccess();
    unint64_t v29 = (unint64_t)*v34;
    if ((unint64_t)*v34 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v30 = sub_25E425F80();
      if (!v30) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v30) {
        goto LABEL_25;
      }
    }
    if (v30 >= 1) {
      break;
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_25E425F80();
    swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; i != v30; ++i)
  {
    if ((v29 & 0xC000000000000001) != 0) {
      uint64_t v36 = (objc_class *)MEMORY[0x2611D6C30](i, v29);
    }
    else {
      uint64_t v36 = (objc_class *)*(id *)(v29 + 8 * i + 32);
    }
    int v37 = v36;
    sub_25E41C278(i, v36);
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
  id v38 = objc_msgSend(self, sel_currentEnvironment);
  id v39 = objc_msgSend(v38, sel_timeProvider);

  objc_msgSend(v39, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v40, (uint64_t)qword_26B38BC78);
  uint64_t v41 = v49;
  uint64_t v43 = sub_25E417874(v49, "add sticker", v42, 2);
  uint64_t v44 = sub_25E4255F0();
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32);
  char v46 = v50;
  v45(v50, v41, v44);
  v45(v51, (uint64_t)v46, v44);
  return v43;
}

uint64_t sub_25E418604(char *a1, unint64_t a2)
{
  unint64_t v70 = a2;
  uint64_t v65 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v64 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v63 = (uint64_t)&v62 - v5;
  if (qword_26B389398 != -1) {
    goto LABEL_43;
  }
  while (1)
  {
    uint64_t v6 = sub_25E4256A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B38BC60);
    uint64_t v7 = sub_25E425680();
    os_log_type_t v8 = sub_25E425BD0();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v9 = 0;
      _os_log_impl(&dword_25E3BB000, v7, v8, "BEGIN addSticker(_:)", v9, 2u);
      MEMORY[0x2611D77B0](v9, -1, -1);
    }

    unint64_t v10 = v70;
    if (!(v70 >> 62))
    {
      uint64_t v11 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11) {
        break;
      }
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_25E425F80();
    if (!v11) {
      break;
    }
LABEL_6:
    unint64_t v13 = v10;
    unint64_t v14 = 0;
    unint64_t v73 = v13 & 0xC000000000000001;
    uint64_t v67 = v13 & 0xFFFFFFFFFFFFFF8;
    unint64_t v66 = v13 + 32;
    *(void *)&long long v12 = 136315138;
    long long v72 = v12;
    uint64_t v69 = MEMORY[0x263F8EE58] + 8;
    *(void *)&long long v12 = 134217984;
    long long v68 = v12;
    uint64_t v71 = v11;
    while (1)
    {
      if (v73)
      {
        id v15 = (id)MEMORY[0x2611D6C30](v14, v70);
      }
      else
      {
        if (v14 >= *(void *)(v67 + 16)) {
          goto LABEL_42;
        }
        id v15 = *(id *)(v66 + 8 * v14);
      }
      uint64_t v16 = v15;
      unint64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v14)
      {
        uint64_t v18 = sub_25E425680();
        os_log_type_t v19 = sub_25E425BD0();
        if (os_log_type_enabled(v18, v19))
        {
          os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v20 = 0;
          _os_log_impl(&dword_25E3BB000, v18, v19, " ----- Next sticker:", v20, 2u);
          MEMORY[0x2611D77B0](v20, -1, -1);
        }
      }
      id v21 = v16;
      uint64_t v22 = sub_25E425680();
      os_log_type_t v23 = sub_25E425BD0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v74 = v25;
        *(_DWORD *)uint64_t v24 = v72;
        sub_25E4254F0();
        sub_25E41C720((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
        uint64_t v26 = sub_25E426140();
        *(void *)(v24 + 4) = sub_25E3C8F74(v26, v27, &v74);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25E3BB000, v22, v23, " - identifier: %s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v25, -1, -1);
        MEMORY[0x2611D77B0](v24, -1, -1);
      }
      else
      {
      }
      id v28 = (char *)v21;
      unint64_t v29 = sub_25E425680();
      os_log_type_t v30 = sub_25E425BD0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v74 = v32;
        *(_DWORD *)uint64_t v31 = v72;
        uint64_t v33 = self;
        id v34 = &v28[OBJC_IVAR___STKSticker_byteCount];
        swift_beginAccess();
        id v35 = objc_msgSend(v33, sel_stringFromByteCount_countStyle_, *(void *)v34, 0);
        uint64_t v36 = sub_25E4258F0();
        unint64_t v38 = v37;

        *(void *)(v31 + 4) = sub_25E3C8F74(v36, v38, &v74);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25E3BB000, v29, v30, " - byteCount: %s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v32, -1, -1);
        MEMORY[0x2611D77B0](v31, -1, -1);
      }
      else
      {
      }
      id v39 = v28;
      uint64_t v40 = sub_25E425680();
      os_log_type_t v41 = sub_25E425BD0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = v68;
        uint64_t v43 = (unint64_t *)((char *)v39 + OBJC_IVAR___STKSticker_representations);
        swift_beginAccess();
        unint64_t v44 = *v43;
        if (v44 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v45 = sub_25E425F80();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        *(void *)(v42 + 4) = v45;

        _os_log_impl(&dword_25E3BB000, v40, v41, " - representations (%ld):", (uint8_t *)v42, 0xCu);
        MEMORY[0x2611D77B0](v42, -1, -1);
      }
      else
      {

        uint64_t v40 = v39;
      }

      char v46 = (uint64_t *)((char *)v39 + OBJC_IVAR___STKSticker_representations);
      swift_beginAccess();
      uint64_t v47 = *v46;
      if ((unint64_t)*v46 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v48 = sub_25E425F80();
        if (!v48) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v48) {
          goto LABEL_7;
        }
      }
      if (v48 < 1) {
        goto LABEL_41;
      }
      for (uint64_t i = 0; i != v48; ++i)
      {
        if ((v47 & 0xC000000000000001) != 0) {
          id v50 = (id)MEMORY[0x2611D6C30](i, v47);
        }
        else {
          id v50 = *(id *)(v47 + 8 * i + 32);
        }
        uint64_t v51 = v50;
        sub_25E41C278(i, v50);
      }
LABEL_7:

      swift_bridgeObjectRelease_n();
      unint64_t v14 = v17;
      if (v17 == v71) {
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_once();
  }
LABEL_45:
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(self, sel_currentEnvironment);
  id v53 = objc_msgSend(v52, sel_timeProvider);

  objc_msgSend(v53, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v54, (uint64_t)qword_26B38BC78);
  uint64_t v55 = v63;
  uint64_t v57 = sub_25E417874(v63, "add stickers", v56, 2);
  uint64_t v58 = sub_25E4255F0();
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32);
  uint64_t v60 = v64;
  v59(v64, v55, v58);
  v59(v65, (uint64_t)v60, v58);
  return v57;
}

uint64_t sub_25E418EA8(char *a1, uint64_t a2)
{
  uint64_t v54 = a1;
  uint64_t v3 = sub_25E4254F0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v58 = (char *)v51 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v53 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v52 = (uint64_t)v51 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_25E4256A0();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_26B38BC60);
  swift_bridgeObjectRetain();
  uint64_t v67 = v17;
  uint64_t v18 = sub_25E425680();
  os_log_type_t v19 = sub_25E425BD0();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = v15;
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v21 = 134217984;
    uint64_t v68 = *(void *)(a2 + 16);
    sub_25E425D80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v18, v19, "BEGIN removeStickers(identifiers:) (%ld)", v21, 0xCu);
    uint64_t v22 = v21;
    id v15 = v20;
    MEMORY[0x2611D77B0](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v23 = *(void *)(a2 + 16);
  v51[1] = a2;
  if (v23)
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v25 = v4 + 16;
    uint64_t v24 = v26;
    uint64_t v27 = a2 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64));
    uint64_t v28 = *(void *)(v25 + 56);
    uint64_t v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 32);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v25 + 16);
    uint64_t v62 = v28;
    swift_bridgeObjectRetain();
    unint64_t v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 40);
    v51[0] = (v25 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    *(void *)&long long v29 = 136315138;
    long long v56 = v29;
    uint64_t v59 = (void (**)(char *, uint64_t))(v25 - 8);
    uint64_t v60 = (v25 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v55 = MEMORY[0x263F8EE58] + 8;
    os_log_type_t v30 = v58;
    uint64_t v57 = v25;
    uint64_t v63 = v26;
    uint64_t v64 = v15;
    while (1)
    {
      v24(v15, v27, v3);
      uint64_t v32 = *v66;
      (*v66)(v15, 0, 1, v3);
      if ((*v65)(v15, 1, v3) == 1) {
        break;
      }
      (*v61)(v30, v15, v3);
      v24(v7, (uint64_t)v30, v3);
      uint64_t v33 = sub_25E425680();
      os_log_type_t v34 = sub_25E425BD0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v68 = v36;
        *(_DWORD *)uint64_t v35 = v56;
        sub_25E41C720((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
        uint64_t v37 = sub_25E426140();
        *(void *)(v35 + 4) = sub_25E3C8F74(v37, v38, &v68);
        swift_bridgeObjectRelease();
        uint64_t v31 = *v59;
        (*v59)(v7, v3);
        _os_log_impl(&dword_25E3BB000, v33, v34, " - identifier: %s", (uint8_t *)v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v36, -1, -1);
        uint64_t v39 = v35;
        os_log_type_t v30 = v58;
        MEMORY[0x2611D77B0](v39, -1, -1);
      }
      else
      {
        uint64_t v31 = *v59;
        (*v59)(v7, v3);
      }

      v31(v30, v3);
      uint64_t v24 = v63;
      v27 += v62;
      --v23;
      id v15 = v64;
      if (!v23)
      {
        v32(v64, 1, 1, v3);
        break;
      }
    }
  }
  else
  {
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v40(v15, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(self, sel_currentEnvironment);
  id v42 = objc_msgSend(v41, sel_timeProvider);

  objc_msgSend(v42, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v43, (uint64_t)qword_26B38BC78);
  uint64_t v44 = v52;
  uint64_t v46 = sub_25E417874(v52, "remove stickers", v45, 2);
  uint64_t v47 = sub_25E4255F0();
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32);
  uint64_t v49 = v53;
  v48(v53, v44, v47);
  v48(v54, (uint64_t)v49, v47);
  return v46;
}

uint64_t sub_25E419554(char *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_25E4256A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B38BC60);
  uint64_t v11 = sub_25E425680();
  os_log_type_t v12 = sub_25E425BD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_25E3BB000, v11, v12, "BEGIN updateSticker(_:)", v13, 2u);
    MEMORY[0x2611D77B0](v13, -1, -1);
  }

  id v14 = a2;
  id v15 = sub_25E425680();
  os_log_type_t v16 = sub_25E425BD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = a1;
    uint64_t v19 = v18;
    uint64_t v31 = v9;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v34 = v18;
    sub_25E4254F0();
    sub_25E41C720((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
    uint64_t v20 = sub_25E426140();
    uint64_t v33 = sub_25E3C8F74(v20, v21, &v34);
    uint64_t v9 = v31;
    sub_25E425D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v15, v16, " - identifier: %s", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    a1 = v32;
    MEMORY[0x2611D77B0](v22, -1, -1);
    MEMORY[0x2611D77B0](v17, -1, -1);
  }
  else
  {
  }
  id v23 = objc_msgSend(self, sel_currentEnvironment);
  id v24 = objc_msgSend(v23, sel_timeProvider);

  objc_msgSend(v24, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v25, (uint64_t)qword_26B38BC78);
  uint64_t v27 = sub_25E417874((uint64_t)v9, "update sticker", v26, 2);
  uint64_t v28 = sub_25E4255F0();
  long long v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
  v29(v7, v9, v28);
  v29(a1, v7, v28);
  return v27;
}

uint64_t sub_25E419964(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_25E4256A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_26B38BC60);
  uint64_t v13 = sub_25E425680();
  os_log_type_t v14 = sub_25E425BD0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134218240;
    uint64_t v25 = a2;
    sub_25E425D80();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v25 = a3;
    sub_25E425D80();
    _os_log_impl(&dword_25E3BB000, v13, v14, "BEGIN moveSticker(at:to:) (%ld --> %ld", (uint8_t *)v15, 0x16u);
    MEMORY[0x2611D77B0](v15, -1, -1);
  }

  id v16 = objc_msgSend(self, sel_currentEnvironment);
  id v17 = objc_msgSend(v16, sel_timeProvider);

  objc_msgSend(v17, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v18, (uint64_t)qword_26B38BC78);
  uint64_t v20 = sub_25E417874((uint64_t)v11, "move sticker", v19, 2);
  uint64_t v21 = sub_25E4255F0();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v9, v11, v21);
  v22(a1, v9, v21);
  return v20;
}

uint64_t sub_25E419C34(const char *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = (char *)a1;
  int v29 = a3;
  uint64_t v7 = sub_25E4255F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v27 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25E425620();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v8;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v19 = a4;
  uint64_t v20 = v7;
  v18(v17, v19, v7);
  *(void *)&v17[*(int *)(v15 + 56)] = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v30, v10);
  swift_retain();
  uint64_t v21 = sub_25E425610();
  int v22 = sub_25E425CA0();
  uint64_t result = sub_25E425D50();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  LODWORD(v30) = v22;
  if ((v29 & 1) == 0)
  {
    if (!v31)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return sub_25E3CE8D4((uint64_t)v17, (uint64_t *)&unk_26B389380);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v31 >> 32)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v31 >> 11 == 27)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v31 >> 16 > 0x10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v31 = &v32;
LABEL_10:
  uint64_t v24 = v27;
  v18(v27, (uint64_t)v17, v20);
  uint64_t v25 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v25 = 0;
  os_signpost_id_t v26 = sub_25E4255E0();
  _os_signpost_emit_with_name_impl(&dword_25E3BB000, v21, (os_signpost_type_t)v30, v26, v31, "", v25, 2u);
  MEMORY[0x2611D77B0](v25, -1, -1);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_25E3CE8D4((uint64_t)v17, (uint64_t *)&unk_26B389380);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v24, v20);
}

uint64_t sub_25E419F78(char *a1, unint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (uint64_t)&v32 - v6;
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_25E4256A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B38BC60);
  uint64_t v8 = sub_25E425680();
  os_log_type_t v9 = sub_25E425BD0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_25E3BB000, v8, v9, "BEGIN touchStickers(_:)", v10, 2u);
    MEMORY[0x2611D77B0](v10, -1, -1);
  }

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25E425F80();
    uint64_t v11 = result;
    if (!result) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_17;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v14 = 0;
  *(void *)&long long v13 = 136315138;
  long long v36 = v13;
  uint64_t v35 = MEMORY[0x263F8EE58] + 8;
  uint64_t v37 = v11;
  do
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v15 = (id)MEMORY[0x2611D6C30](v14, a2);
    }
    else {
      id v15 = *(id *)(a2 + 8 * v14 + 32);
    }
    id v16 = v15;
    id v17 = sub_25E425680();
    os_log_type_t v18 = sub_25E425BD0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = v38;
      *(_DWORD *)uint64_t v19 = v36;
      sub_25E4254F0();
      sub_25E41C720((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
      uint64_t v20 = sub_25E426140();
      *(void *)(v19 + 4) = sub_25E3C8F74(v20, v21, &v39);

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v17, v18, " - identifier: %s", (uint8_t *)v19, 0xCu);
      uint64_t v22 = v38;
      swift_arrayDestroy();
      uint64_t v11 = v37;
      MEMORY[0x2611D77B0](v22, -1, -1);
      MEMORY[0x2611D77B0](v19, -1, -1);
    }
    else
    {
    }
    ++v14;
  }
  while (v11 != v14);
LABEL_17:
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(self, sel_currentEnvironment);
  id v24 = objc_msgSend(v23, sel_timeProvider);

  objc_msgSend(v24, sel_timestamp);
  swift_unknownObjectRelease();
  if (qword_26B389390 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v25, (uint64_t)qword_26B38BC78);
  uint64_t v26 = v32;
  uint64_t v28 = sub_25E417874(v32, "touch stickers", v27, 2);
  uint64_t v29 = sub_25E4255F0();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32);
  uint64_t v31 = v33;
  v30(v33, v26, v29);
  v30(v34, (uint64_t)v31, v29);
  return v28;
}

uint64_t sub_25E41A428(const char *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a4;
  int v49 = a3;
  uint64_t v52 = (char *)a1;
  uint64_t v6 = sub_25E425630();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25E4255F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v40 - v12;
  uint64_t v14 = sub_25E425620();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v23 = v50;
  uint64_t v50 = v8;
  uint64_t v44 = v22;
  v22(v21, (char *)v23, v8);
  uint64_t v24 = *(int *)(v19 + 56);
  uint64_t v25 = v14;
  *(void *)&v21[v24] = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v51, v14);
  swift_retain();
  uint64_t v26 = sub_25E425610();
  uint64_t v51 = a5;
  sub_25E425640();
  int v27 = sub_25E425C80();
  uint64_t result = sub_25E425D50();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  int v41 = v27;
  id v42 = v21;
  uint64_t v43 = v17;
  uint64_t v29 = v50;
  if ((v49 & 1) == 0)
  {
    if (!v52)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v50);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return sub_25E3CE8D4((uint64_t)v21, (uint64_t *)&unk_26B389380);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v52 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v52 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v52 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v52 = &v53;
LABEL_10:
  swift_retain();
  uint64_t v30 = v45;
  sub_25E425670();
  swift_release();
  uint64_t v32 = v46;
  uint64_t v31 = v47;
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v30, v47);
  int v34 = *MEMORY[0x263F90238];
  uint64_t v40 = v25;
  if (v33 == v34)
  {
    uint64_t v35 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
    uint64_t v35 = "";
  }
  long long v36 = v48;
  v44(v48, v13, v29);
  uint64_t v37 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v37 = 0;
  os_signpost_id_t v38 = sub_25E4255E0();
  _os_signpost_emit_with_name_impl(&dword_25E3BB000, v26, (os_signpost_type_t)v41, v38, v52, v35, v37, 2u);
  MEMORY[0x2611D77B0](v37, -1, -1);

  uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
  v39(v13, v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v40);
  sub_25E3CE8D4((uint64_t)v42, (uint64_t *)&unk_26B389380);
  return ((uint64_t (*)(char *, uint64_t))v39)(v36, v29);
}

uint64_t sub_25E41A8D4()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26B38BC60);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B38BC60);
  return sub_25E425690();
}

uint64_t sub_25E41A950()
{
  uint64_t v0 = sub_25E425620();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25E4256A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = type metadata accessor for StickerSignposter();
  __swift_allocate_value_buffer(v11, qword_26B38BC78);
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_26B38BC78);
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_26B38BC60);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, (uint64_t)v10, v4);
  sub_25E425600();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12, v3, v0);
}

uint64_t sub_25E41AB84(void *a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  if (a1 == (void *)1) {
    return 0x67616D69206C6C61;
  }
  if (a1 == (void *)2) {
    return 0x6567616D69206F6ELL;
  }
  id v3 = objc_msgSend(a1, sel_description);
  sub_25E4258F0();

  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E3D446C(a1);
  sub_25E3D446C(a1);
  return 0x206572656877;
}

void sub_25E41AC8C(void *a1)
{
  if (a1)
  {
    uint64_t v1 = qword_26B389398;
    id v2 = a1;
    if (v1 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_25E4256A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B38BC60);
    uint64_t v13 = v2;
    uint64_t v4 = sub_25E425680();
    os_log_type_t v5 = sub_25E425BD0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v14 = v7;
      sub_25E4254F0();
      sub_25E41C720((unint64_t *)&qword_26B389360, MEMORY[0x263F07508]);
      uint64_t v8 = sub_25E426140();
      sub_25E3C8F74(v8, v9, &v14);
      sub_25E425D80();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25E3BB000, v4, v5, "Returning sticker %s to caller", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v7, -1, -1);
      MEMORY[0x2611D77B0](v6, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_26B389398 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_25E4256A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B38BC60);
    uint64_t v13 = sub_25E425680();
    os_log_type_t v11 = sub_25E425BD0();
    if (os_log_type_enabled(v13, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_25E3BB000, v13, v11, "Returned last sticker (end of sequence)", v12, 2u);
      MEMORY[0x2611D77B0](v12, -1, -1);
    }
  }
}

void sub_25E41AF80(uint64_t a1)
{
  v48[1] = *MEMORY[0x263EF8340];
  id v2 = *(void **)(a1 + 8);
  uint64_t v1 = *(void **)(a1 + 16);
  uint64_t v40 = *(void *)(a1 + 32);
  uint64_t v43 = *(void *)(a1 + 40);
  char v42 = *(unsigned char *)(a1 + 48);
  uint64_t v45 = *(void *)(a1 + 56);
  char v44 = *(unsigned char *)(a1 + 64);
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_25E4256A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B38BC60);
  id v4 = v2;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  id v5 = v4;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_25E425680();
  os_log_type_t v7 = sub_25E425BD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v38 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    if (v2)
    {
      uint64_t v46 = (uint64_t)v5;
      id v9 = v5;
      uint64_t v10 = v2;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v46 = 0;
    }
    sub_25E425D80();
    void *v38 = v10;

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v6, v7, " - predicate: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v38, -1, -1);
    MEMORY[0x2611D77B0](v8, -1, -1);
  }
  else
  {

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
  }
  id v11 = v5;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  id v12 = v11;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_25E425680();
  os_log_type_t v14 = sub_25E425BD0();
  uint64_t v15 = &off_25E427000;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v16 = 136315138;
    sub_25E3D44C0(v1);
    uint64_t v17 = sub_25E41AB84(v1);
    v48[0] = sub_25E3C8F74(v17, v18, &v46);
    sub_25E425D80();

    uint64_t v15 = &off_25E427000;
    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v13, v14, " - representations: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v39, -1, -1);
    MEMORY[0x2611D77B0](v16, -1, -1);
  }
  else
  {

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
  }
  id v19 = v12;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_25E425680();
  os_log_type_t v21 = sub_25E425BD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134217984;
    uint64_t v46 = v40;
    sub_25E425D80();

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v20, v21, " - offset: %ld", v22, 0xCu);
    MEMORY[0x2611D77B0](v22, -1, -1);
  }
  else
  {

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
  }
  id v23 = v19;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  id v24 = v23;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_25E425680();
  os_log_type_t v26 = sub_25E425BD0();
  if (os_log_type_enabled(v25, v26))
  {
    int v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v48[0] = v41;
    *(_DWORD *)int v27 = *((void *)v15 + 200);
    uint64_t v46 = v43;
    char v47 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E8);
    uint64_t v28 = sub_25E425910();
    uint64_t v46 = sub_25E3C8F74(v28, v29, v48);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v25, v26, " - limit: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v41, -1, -1);
    MEMORY[0x2611D77B0](v27, -1, -1);
  }
  else
  {

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
  }
  id v30 = v24;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  id v31 = v30;
  sub_25E3D44C0(v1);
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_25E425680();
  os_log_type_t v33 = sub_25E425BD0();
  if (os_log_type_enabled(v32, v33))
  {
    int v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v48[0] = v35;
    *(_DWORD *)int v34 = 136315138;
    uint64_t v46 = v45;
    char v47 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E8);
    uint64_t v36 = sub_25E425910();
    uint64_t v46 = sub_25E3C8F74(v36, v37, v48);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25E3BB000, v32, v33, " - batchSize: %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v35, -1, -1);
    MEMORY[0x2611D77B0](v34, -1, -1);
  }
  else
  {

    sub_25E3D446C(v1);
    swift_bridgeObjectRelease();
    sub_25E3D446C(v1);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_25E41B7B0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_25E41B7C8(a4, a1, a2, a3, "END count(for:) (%s)");
}

uint64_t sub_25E41B7BC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_25E41B7C8(a4, a1, a2, a3, "END stickers(for:) (%s)");
}

uint64_t sub_25E41B7C8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v52 = a5;
  uint64_t v58 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0) - 8;
  uint64_t v53 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  long long v56 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  id v11 = (double *)((char *)&v52 - v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v55 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v59 = (uint64_t)&v52 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v52 - v18;
  uint64_t v20 = *(int *)(v17 + 48);
  uint64_t v21 = sub_25E4255F0();
  uint64_t v22 = *(void *)(v21 - 8);
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23(v19, v58, v21);
  *(void *)&v19[v20] = a4;
  id v24 = (char *)v11 + *(int *)(v7 + 56);
  uint64_t v57 = v22;
  uint64_t v58 = (uint64_t)v11;
  double *v11 = a1;
  uint64_t v25 = *(int *)(v12 + 48);
  os_log_type_t v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v26(v24, v19, v21);
  uint64_t v54 = a4;
  *(void *)&v24[v25] = a4;
  int v27 = v55;
  uint64_t v28 = (char *)v56 + *(int *)(v53 + 56);
  uint64_t v29 = v59;
  long long v56 = (void (*)(uint64_t, uint64_t, uint64_t))v23;
  v23(v28, (uint64_t)v24, v21);
  v26(v27, v28, v21);
  uint64_t v30 = v12;
  uint64_t v31 = *(int *)(v12 + 48);
  uint64_t v32 = (uint64_t)v27;
  v26((char *)v29, v27, v21);
  uint64_t v33 = v54;
  *(void *)(v29 + v31) = v54;
  uint64_t v34 = qword_26B389390;
  swift_retain_n();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v35, (uint64_t)qword_26B38BC78);
  uint64_t v36 = *(int *)(v30 + 48);
  v56(v32, v59, v21);
  *(void *)(v32 + v36) = v33;
  sub_25E41A428("count stickers", v37, 2, v32, v33);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v32, v21);
  id v38 = objc_msgSend(self, sel_currentEnvironment);
  id v39 = objc_msgSend(v38, sel_timeProvider);

  objc_msgSend(v39, sel_timestamp);
  double v41 = v40;
  swift_unknownObjectRelease();
  id v42 = objc_msgSend(self, sel_stringForTimeInterval_, v41 - a1);
  uint64_t v43 = sub_25E4258F0();
  unint64_t v45 = v44;

  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_25E4256A0();
  __swift_project_value_buffer(v46, (uint64_t)qword_26B38BC60);
  swift_bridgeObjectRetain();
  char v47 = sub_25E425680();
  os_log_type_t v48 = sub_25E425BD0();
  if (os_log_type_enabled(v47, v48))
  {
    int v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v61 = v50;
    *(_DWORD *)int v49 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_25E3C8F74(v43, v45, &v61);
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25E3BB000, v47, v48, v52, v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v50, -1, -1);
    MEMORY[0x2611D77B0](v49, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_25E3CE8D4(v59, (uint64_t *)&unk_26B389380);
  return sub_25E3CE8D4(v58, &qword_26B3894E0);
}

uint64_t sub_25E41BD00(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25E41BD28(a1, a2, "remove stickers", "END removeStickers(identifiers:) (%s)", a3);
}

uint64_t sub_25E41BD14(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25E41BD28(a1, a2, "touch stickers", "END touchStickers(stickers:) (%s)", a3);
}

uint64_t sub_25E41BD28(uint64_t a1, uint64_t a2, const char *a3, const char *a4, double a5)
{
  uint64_t v52 = a4;
  uint64_t v59 = a3;
  uint64_t v60 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E0) - 8;
  uint64_t v53 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v11 = (double *)((char *)&v51 - v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v55 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  long long v56 = (char *)&v51 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v51 - v18;
  uint64_t v20 = *(int *)(v17 + 48);
  uint64_t v21 = sub_25E4255F0();
  uint64_t v22 = *(void *)(v21 - 8);
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v23(v19, v60, v21);
  uint64_t v54 = a2;
  *(void *)&v19[v20] = a2;
  id v24 = (char *)v11 + *(int *)(v7 + 56);
  uint64_t v60 = (uint64_t)v11;
  double *v11 = a5;
  uint64_t v25 = *(int *)(v12 + 48);
  uint64_t v58 = v22;
  os_log_type_t v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v26(v24, v19, v21);
  *(void *)&v24[v25] = a2;
  uint64_t v27 = (uint64_t)v55;
  uint64_t v28 = &v57[*(int *)(v53 + 56)];
  v23(v28, (uint64_t)v24, v21);
  v26((char *)v27, v28, v21);
  uint64_t v29 = *(int *)(v12 + 48);
  uint64_t v30 = (uint64_t)v56;
  v26(v56, (char *)v27, v21);
  uint64_t v31 = v54;
  *(void *)(v30 + v29) = v54;
  uint64_t v32 = v31;
  uint64_t v33 = qword_26B389390;
  swift_retain_n();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for StickerSignposter();
  __swift_project_value_buffer(v34, (uint64_t)qword_26B38BC78);
  uint64_t v35 = *(int *)(v12 + 48);
  v23((char *)v27, v30, v21);
  *(void *)(v27 + v35) = v32;
  sub_25E41A428(v59, v36, 2, v27, v32);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v27, v21);
  id v37 = objc_msgSend(self, sel_currentEnvironment);
  id v38 = objc_msgSend(v37, sel_timeProvider);

  objc_msgSend(v38, sel_timestamp);
  double v40 = v39;
  swift_unknownObjectRelease();
  id v41 = objc_msgSend(self, sel_stringForTimeInterval_, v40 - a5);
  uint64_t v42 = sub_25E4258F0();
  unint64_t v44 = v43;

  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_25E4256A0();
  __swift_project_value_buffer(v45, (uint64_t)qword_26B38BC60);
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_25E425680();
  os_log_type_t v47 = sub_25E425BD0();
  if (os_log_type_enabled(v46, v47))
  {
    os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v62 = v49;
    *(_DWORD *)os_log_type_t v48 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_25E3C8F74(v42, v44, &v62);
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25E3BB000, v46, v47, v52, v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v49, -1, -1);
    MEMORY[0x2611D77B0](v48, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_25E3CE8D4(v30, (uint64_t *)&unk_26B389380);
  return sub_25E3CE8D4(v60, &qword_26B3894E0);
}

uint64_t sub_25E41C264(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25E41BD28(a1, a2, "add sticker", "END addSticker(_:) (%s)", a3);
}

void sub_25E41C278(uint64_t a1, void *a2)
{
  if (qword_26B389398 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_25E4256A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B38BC60);
  id v19 = a2;
  id v4 = sub_25E425680();
  os_log_type_t v5 = sub_25E425BD0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = v7;
    *(_DWORD *)uint64_t v6 = 134219010;
    sub_25E425D80();
    *(_WORD *)(v6 + 12) = 2080;
    sub_25E4255B0();
    sub_25E41C720(&qword_26A6EDCA0, MEMORY[0x263F8F3A0]);
    uint64_t v8 = sub_25E426140();
    sub_25E3C8F74(v8, v9, &v20);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2080;
    uint64_t v10 = self;
    id v11 = &v19[OBJC_IVAR___STKStickerRepresentation_byteCount];
    swift_beginAccess();
    id v12 = objc_msgSend(v10, sel_stringFromByteCount_countStyle_, *(void *)v11, 0);
    uint64_t v13 = sub_25E4258F0();
    unint64_t v15 = v14;

    sub_25E3C8F74(v13, v15, &v20);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    uint64_t v16 = (double *)&v19[OBJC_IVAR___STKStickerRepresentation_size];
    double v17 = *(double *)&v19[OBJC_IVAR___STKStickerRepresentation_size];

    if ((~*(void *)&v17 & 0x7FF0000000000000) != 0)
    {
      if (v17 > -9.22337204e18)
      {
        if (v17 < 9.22337204e18)
        {
          sub_25E425D80();

          *(_WORD *)(v6 + 42) = 2048;
          double v18 = v16[1];

          if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
          {
            if (v18 > -9.22337204e18)
            {
              if (v18 < 9.22337204e18)
              {
                sub_25E425D80();

                _os_log_impl(&dword_25E3BB000, v4, v5, "   [%ld] %s %s %ldx%ld", (uint8_t *)v6, 0x34u);
                swift_arrayDestroy();
                MEMORY[0x2611D77B0](v7, -1, -1);
                MEMORY[0x2611D77B0](v6, -1, -1);

                return;
              }
              goto LABEL_19;
            }
LABEL_18:
            __break(1u);
LABEL_19:
            __break(1u);
            return;
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_25E41C6E4(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25E41BD28(a1, a2, "add stickers", "END addStickers(_:) (%s)", a3);
}

uint64_t sub_25E41C6F8(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25E41BD28(a1, a2, "update sticker", "END updateSticker(_:) (%s)", a3);
}

uint64_t sub_25E41C70C(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25E41BD28(a1, a2, "move stickers", "END moveSticker(at:to:) (%s)", a3);
}

uint64_t sub_25E41C720(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E41C768(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389380);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)v34 - v8;
  uint64_t v10 = *(int *)(v7 + 48);
  uint64_t v11 = v1 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter;
  uint64_t v12 = sub_25E417874((uint64_t)v34 - v8, "remove stickers", 15, 2);
  *(void *)&v9[v10] = v12;
  swift_retain();
  unint64_t v13 = v41;
  unint64_t v14 = sub_25E41CB90(a1);
  if (v13)
  {
    swift_release();
    uint64_t v15 = *(int *)(v3 + 48);
    uint64_t v16 = sub_25E4255F0();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v6, v9, v16);
    *(void *)&v6[v15] = v12;
    swift_retain();
    sub_25E41A428("remove stickers", 15, 2, (uint64_t)v6, v12);
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    return sub_25E3D021C((uint64_t)v9);
  }
  uint64_t v38 = v1;
  uint64_t v39 = 0;
  uint64_t v36 = v10;
  uint64_t v19 = *(int *)(v3 + 48);
  unint64_t v41 = (unint64_t)v14;
  uint64_t v20 = v11;
  uint64_t v21 = sub_25E4255F0();
  uint64_t v22 = *(void *)(v21 - 8);
  id v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v34[1] = v22 + 16;
  uint64_t v35 = v23;
  v23(v6, v9, v21);
  *(void *)&v6[v19] = v12;
  uint64_t v40 = v20;
  sub_25E419C34("stickers fetched", 16, 2, (uint64_t)v6, v12);
  swift_release();
  id v24 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v25 = v21;
  uint64_t v37 = v22 + 8;
  v24(v6, v21);
  unint64_t v26 = v41;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_25E425F80();
    swift_bridgeObjectRelease();
    unint64_t v26 = v41;
  }
  else
  {
    uint64_t v27 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v28 = v39;
  if (v27)
  {
    sub_25E41CEDC(v26);
    swift_bridgeObjectRelease();
    sub_25E41CFF0();
    if (v28)
    {
      uint64_t v29 = *(int *)(v3 + 48);
      v35(v6, v9, v25);
      uint64_t v30 = *(void *)&v9[v36];
      *(void *)&v6[v29] = v30;
      swift_retain();
      sub_25E41A428("remove stickers", 15, 2, (uint64_t)v6, v30);
      swift_release();
      v24(v6, v25);
      return sub_25E3D021C((uint64_t)v9);
    }
    uint64_t v31 = v24;
  }
  else
  {
    uint64_t v31 = v24;
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = *(int *)(v3 + 48);
  v35(v6, v9, v25);
  uint64_t v33 = *(void *)&v9[v36];
  *(void *)&v6[v32] = v33;
  swift_retain();
  sub_25E41A428("remove stickers", 15, 2, (uint64_t)v6, v33);
  swift_release();
  v31(v6, v25);
  return sub_25E3D021C((uint64_t)v9);
}

uint8_t *sub_25E41CB90(uint64_t a1)
{
  id v2 = v1;
  v23[1] = *(id *)MEMORY[0x263EF8340];
  id v4 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v5 = (void *)sub_25E4258C0();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_25E3DB988();
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_25E4277F0;
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  *(void *)(v7 + 64) = sub_25E3D4418();
  *(void *)(v7 + 32) = 0x696669746E656469;
  *(void *)(v7 + 40) = 0xEA00000000007265;
  *(void *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED8A0);
  *(void *)(v7 + 104) = sub_25E41D32C();
  *(void *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_25E425BC0();
  objc_msgSend(v6, sel_setPredicate_, v8);

  v23[0] = 0;
  id v9 = objc_msgSend(v6, sel_execute_, v23);
  id v10 = v23[0];
  if (v9)
  {
    uint64_t v11 = v9;
    type metadata accessor for ManagedSticker();
    id v2 = (uint8_t *)sub_25E425AC0();
    id v12 = v10;
  }
  else
  {
    id v13 = v23[0];
    unint64_t v14 = (void *)sub_25E425290();

    swift_willThrow();
    id v15 = v14;
    id v16 = v14;
    uint64_t v17 = sub_25E425680();
    os_log_type_t v18 = sub_25E425BF0();
    if (os_log_type_enabled(v17, v18))
    {
      id v2 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)id v2 = 138412290;
      id v20 = v14;
      uint64_t v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v23[0] = v21;
      sub_25E425D80();
      *uint64_t v19 = v21;

      _os_log_impl(&dword_25E3BB000, v17, v18, "Could not fetch stickers to delete: %@", v2, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v19, -1, -1);
      MEMORY[0x2611D77B0](v2, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  return v2;
}

void sub_25E41CEDC(unint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  id v10 = v3;
  if (a1 >> 62)
  {
    id v9 = v3;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25E425F80();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v5 = v3;
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x2611D6C30](i, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    objc_msgSend(v10, sel_deleteObject_, v7);
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

void sub_25E41CFF0()
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 16);
  v13[0] = 0;
  if (objc_msgSend(v1, sel_save_, v13))
  {
    id v2 = v13[0];
  }
  else
  {
    id v3 = v13[0];
    uint64_t v4 = (void *)sub_25E425290();

    swift_willThrow();
    id v5 = v4;
    id v6 = v4;
    id v7 = sub_25E425680();
    os_log_type_t v8 = sub_25E425BF0();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      id v10 = (void *)swift_slowAlloc();
      *(_DWORD *)id v9 = 138412290;
      id v11 = v4;
      id v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_25E425D80();
      *id v10 = v12;

      _os_log_impl(&dword_25E3BB000, v7, v8, "Could not save after deleting stickers: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v10, -1, -1);
      MEMORY[0x2611D77B0](v9, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_25E41D20C()
{
  return sub_25E3D0110(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter);
}

uint64_t sub_25E41D21C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper15ExtractedMethod_logger;
  uint64_t v2 = sub_25E4256A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25E3D0110(v0 + OBJC_IVAR____TtCC8Stickers18CoreDataDataMapper6Remove_signposter);
  return swift_deallocClassInstance();
}

uint64_t sub_25E41D2D8()
{
  return _s6RemoveCMa();
}

uint64_t _s6RemoveCMa()
{
  uint64_t result = qword_26B3892D0;
  if (!qword_26B3892D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25E41D32C()
{
  unint64_t result = qword_26A6ED8A8;
  if (!qword_26A6ED8A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A6ED8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6ED8A8);
  }
  return result;
}

id _s8Stickers14ManagedStickerC12countRequest3forSo07NSFetchE0CySo8NSNumberCGAA0C0C05FetchE0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v13 = *(void *)a1;
  id v3 = *(void **)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  char v8 = *(unsigned char *)(a1 + 64);
  id v9 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v10 = (void *)sub_25E4258C0();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  if (v2)
  {
    v14[0] = v13;
    id v15 = v1;
    id v16 = v3;
    uint64_t v17 = v2;
    uint64_t v18 = v4;
    uint64_t v19 = v5;
    char v20 = v6 & 1;
    uint64_t v21 = v7;
    char v22 = v8 & 1;
    sub_25E41D810(v13, v1, v3, v2);
    sub_25E41D8A8((uint64_t)v14, v11);
    sub_25E41D85C(v13, v1, v3, v2);
  }
  return v11;
}

id sub_25E41D4CC(unsigned __int8 *a1)
{
  int v1 = *a1;
  uint64_t v2 = (void *)*((void *)a1 + 1);
  uint64_t v15 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_25E4277F0;
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  unint64_t v4 = sub_25E3D4418();
  *(void *)(v3 + 64) = v4;
  *(void *)(v3 + 32) = 0x6E6F6973726576;
  *(void *)(v3 + 40) = 0xE700000000000000;
  if (qword_26B388F00 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26B388EF8 + OBJC_IVAR____TtC8Stickers10Versioning_currentStickerVersionOverride;
  swift_beginAccess();
  if (*(unsigned char *)(v5 + 8)) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = *(void *)v5;
  }
  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  uint64_t v7 = MEMORY[0x263F8D6C8];
  uint64_t v8 = MEMORY[0x263F8D750];
  *(void *)(v3 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v3 + 104) = v8;
  *(void *)(v3 + 72) = v6;
  sub_25E425BC0();
  MEMORY[0x2611D67F0]();
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25E425AF0();
  }
  sub_25E425B10();
  sub_25E425AE0();
  if (v1 != 2)
  {
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_25E4277F0;
    *(void *)(v9 + 56) = MEMORY[0x263F8D310];
    *(void *)(v9 + 64) = v4;
    *(void *)(v9 + 32) = 1701869940;
    *(void *)(v9 + 40) = 0xE400000000000000;
    *(void *)(v9 + 96) = v7;
    *(void *)(v9 + 104) = v8;
    *(void *)(v9 + 72) = v1 & 1;
    id v10 = (id)sub_25E425BC0();
    MEMORY[0x2611D67F0]();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25E425AF0();
    }
    sub_25E425B10();
    sub_25E425AE0();
  }
  if (v2)
  {
    id v11 = v2;
    MEMORY[0x2611D67F0]();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25E425AF0();
    }
    sub_25E425B10();
    sub_25E425AE0();
  }
  id v12 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v12);

  return v13;
}

uint64_t sub_25E41D810(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if (a4)
  {
    id v5 = a2;
    sub_25E3D44C0(a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25E41D85C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if (a4)
  {

    sub_25E3D446C(a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_25E41D8A8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389338);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v22 - v9;
  long long v11 = *(_OWORD *)(a1 + 48);
  void v28[2] = *(_OWORD *)(a1 + 32);
  v28[3] = v11;
  char v29 = *(unsigned char *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v12;
  id v13 = sub_25E41D4CC((unsigned __int8 *)v28);
  objc_msgSend(a2, sel_setPredicate_, v13);

  objc_msgSend(a2, sel_setFetchOffset_, *(void *)(a1 + 32));
  sub_25E41DB94(a1 + 40, (uint64_t)v31);
  sub_25E41DB94((uint64_t)v31, (uint64_t)v28);
  if ((BYTE8(v28[0]) & 1) == 0) {
    objc_msgSend(a2, sel_setFetchLimit_, *(void *)&v28[0]);
  }
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    id v23 = a2;
    uint64_t v27 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25E425F30();
    uint64_t v16 = sub_25E3CE930(0, &qword_26B388FE0);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v17 = v5 + 16;
    uint64_t v25 = v18;
    uint64_t v26 = v16;
    uint64_t v19 = (char *)(v14 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64)));
    uint64_t v24 = *(void *)(v17 + 56);
    do
    {
      char v20 = v25;
      v25(v10, v19, v4);
      v20(v8, v10, v4);
      type metadata accessor for Sticker(0);
      sub_25E425C10();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v10, v4);
      sub_25E425F10();
      sub_25E425F40();
      sub_25E425F50();
      sub_25E425F20();
      v19 += v24;
      --v15;
    }
    while (v15);
    sub_25E41DBFC((uint64_t)&v30);
    a2 = v23;
  }
  sub_25E3CE930(0, &qword_26B388FE0);
  uint64_t v21 = (void *)sub_25E425AB0();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setSortDescriptors_, v21);
}

uint64_t sub_25E41DB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B3894E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E41DBFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E41DC28(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000010;
    }
    else {
      unint64_t v3 = 1701667182;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x800000025E429740;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000010;
      }
      else {
        unint64_t v6 = 1701667182;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x800000025E429740;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    unint64_t v3 = 0x44496D616461;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x44496D616461)
  {
LABEL_21:
    char v8 = sub_25E426160();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25E41DD2C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746E65636572;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746E65636572;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x746E6F4372657375;
      unint64_t v3 = 0xEB00000000746E65;
      break;
    case 2:
      uint64_t v5 = 0x6472616F6279656BLL;
      unint64_t v3 = 0xEE00746E65636552;
      break;
    case 3:
      uint64_t v5 = 0x696A6F6D656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x696A6F6D65;
      break;
    case 5:
      uint64_t v5 = 0x7261506472696874;
      unint64_t v3 = 0xEA00000000007974;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000746E65;
      if (v5 == 0x746E6F4372657375) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEE00746E65636552;
      if (v5 != 0x6472616F6279656BLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x696A6F6D656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x696A6F6D65;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000007974;
      if (v5 != 0x7261506472696874) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_25E426160();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

id Sticker.AttributionInfo.__allocating_init(adamID:bundleIdentifier:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v11 = (char *)objc_allocWithZone(v5);
  long long v12 = &v11[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  *(void *)long long v12 = 0;
  *((void *)v12 + 1) = 0;
  *(void *)&v11[OBJC_IVAR___STKStickerAttributionInfo_adamID] = a1;
  swift_beginAccess();
  *(void *)long long v12 = a2;
  *((void *)v12 + 1) = a3;
  id v13 = v11;
  id v14 = a1;
  swift_bridgeObjectRelease();
  uint64_t v15 = &v13[OBJC_IVAR___STKStickerAttributionInfo_name];
  *(void *)uint64_t v15 = a4;
  *((void *)v15 + 1) = a5;

  v18.receiver = v13;
  v18.super_class = v5;
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

void *Sticker.AttributionInfo.adamID.getter()
{
  int v1 = *(void **)(v0 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  id v2 = v1;
  return v1;
}

uint64_t sub_25E41E0FC()
{
  int v1 = (uint64_t *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_25E41E1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E41E230(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25E41E29C())()
{
  return j__swift_endAccess;
}

uint64_t Sticker.AttributionInfo.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25E41E3A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25E41DC28(*a1, *a2);
}

uint64_t sub_25E41E3B0()
{
  return sub_25E426240();
}

uint64_t sub_25E41E44C()
{
  sub_25E425960();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E41E4D4()
{
  return sub_25E426240();
}

uint64_t sub_25E41E56C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25E41FD58();
  *a1 = result;
  return result;
}

void sub_25E41E59C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0x800000025E429740;
  unint64_t v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    unint64_t v5 = 1701667182;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x44496D616461;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25E41E5F4()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 1701667182;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44496D616461;
  }
}

uint64_t sub_25E41E648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25E41FD58();
  *a1 = result;
  return result;
}

uint64_t sub_25E41E670(uint64_t a1)
{
  unint64_t v2 = sub_25E41F0D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E41E6AC(uint64_t a1)
{
  unint64_t v2 = sub_25E41F0D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

id Sticker.AttributionInfo.init(adamID:bundleIdentifier:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v11 = &v5[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  *(void *)long long v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v5[OBJC_IVAR___STKStickerAttributionInfo_adamID] = a1;
  swift_beginAccess();
  *(void *)long long v11 = a2;
  *((void *)v11 + 1) = a3;
  long long v12 = v5;
  id v13 = a1;
  swift_bridgeObjectRelease();
  id v14 = &v12[OBJC_IVAR___STKStickerAttributionInfo_name];
  *(void *)id v14 = a4;
  *((void *)v14 + 1) = a5;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for Sticker.AttributionInfo();
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

uint64_t type metadata accessor for Sticker.AttributionInfo()
{
  return self;
}

uint64_t sub_25E41E7E4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_25E3E01A8(a1, (uint64_t)v21);
  if (!v22)
  {
    sub_25E3E0148((uint64_t)v21);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unint64_t v4 = *(void **)(v1 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  unint64_t v5 = *(void **)&v20[OBJC_IVAR___STKStickerAttributionInfo_adamID];
  if (v4)
  {
    if (!v5) {
      goto LABEL_23;
    }
    sub_25E3CE930(0, (unint64_t *)&qword_26B389510);
    id v6 = v5;
    id v7 = v4;
    char v8 = sub_25E425D30();

    if ((v8 & 1) == 0) {
      goto LABEL_23;
    }
  }
  else if (v5)
  {
    goto LABEL_23;
  }
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  long long v12 = &v20[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  swift_beginAccess();
  uint64_t v13 = *((void *)v12 + 1);
  if (v11)
  {
    if (!v13) {
      goto LABEL_23;
    }
    BOOL v14 = v10 == *(void *)v12 && v11 == v13;
    if (!v14 && (sub_25E426160() & 1) == 0) {
      goto LABEL_23;
    }
  }
  else if (v13)
  {
    goto LABEL_23;
  }
  id v15 = (void *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_name);
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR___STKStickerAttributionInfo_name + 8);
  uint64_t v17 = *(void *)&v20[OBJC_IVAR___STKStickerAttributionInfo_name + 8];
  if (!v16)
  {
    swift_bridgeObjectRetain();

    if (v17)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return 1;
  }
  if (!v17)
  {
LABEL_23:

    return 0;
  }
  if (*v15 == *(void *)&v20[OBJC_IVAR___STKStickerAttributionInfo_name] && v16 == v17)
  {

    return 1;
  }
  char v19 = sub_25E426160();

  uint64_t result = 0;
  if (v19) {
    return 1;
  }
  return result;
}

uint64_t sub_25E41EA88()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_adamID)) {
    uint64_t v2 = sub_25E425D40();
  }
  else {
    uint64_t v2 = 0;
  }
  if (*(void *)(v0 + OBJC_IVAR___STKStickerAttributionInfo_name + 8)) {
    uint64_t v3 = sub_25E4259F0();
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v1 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier;
  swift_beginAccess();
  if (*(void *)(v4 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25E4259F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v3 ^ v2 ^ v5;
}

uint64_t static Sticker.AttributionInfo.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t Sticker.AttributionInfo.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Sticker.AttributionInfo.init(coder:)(a1);
}

uint64_t Sticker.AttributionInfo.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v2[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  sub_25E3CE930(0, (unint64_t *)&qword_26B389510);
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = v2;
  uint64_t v6 = sub_25E425CE0();
  if (v6)
  {
    id v7 = (void *)v6;
    sub_25E3CE930(0, (unint64_t *)&qword_26A6EDC90);
    uint64_t v8 = sub_25E425CE0();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      uint64_t v11 = 0;
      sub_25E4258E0();
    }
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Sticker.AttributionInfo();
  swift_deallocPartialClassInstance();
  return 0;
}

void *Sticker.AttributionInfo.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return Sticker.AttributionInfo.init(from:)(a1);
}

void *Sticker.AttributionInfo.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388E30);
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)&v3[OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = a1[3];
  uint64_t v27 = a1;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_25E41F0D4();
  uint64_t v11 = v3;
  sub_25E426250();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);

    swift_bridgeObjectRelease();
    type metadata accessor for Sticker.AttributionInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v26;
    char v29 = 0;
    uint64_t v13 = sub_25E426040();
    if (v14) {
      id v16 = 0;
    }
    else {
      id v16 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v13);
    }
    *(void *)&v11[OBJC_IVAR___STKStickerAttributionInfo_adamID] = v16;
    char v29 = 1;
    uint64_t v17 = sub_25E426010();
    uint64_t v19 = v18;
    swift_beginAccess();
    *uint64_t v8 = v17;
    v8[1] = v19;
    swift_bridgeObjectRelease();
    char v30 = 2;
    uint64_t v20 = sub_25E426010();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v5);
    id v23 = (uint64_t *)&v11[OBJC_IVAR___STKStickerAttributionInfo_name];
    *id v23 = v20;
    v23[1] = v22;

    uint64_t v24 = (objc_class *)type metadata accessor for Sticker.AttributionInfo();
    v28.receiver = v11;
    v28.super_class = v24;
    uint64_t v10 = objc_msgSendSuper2(&v28, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  return v10;
}

unint64_t sub_25E41F0D4()
{
  unint64_t result = qword_26B389498;
  if (!qword_26B389498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B389498);
  }
  return result;
}

void sub_25E41F128(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  uint64_t v4 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = v1 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier;
  swift_beginAccess();
  if (*(void *)(v5 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25E4258C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR___STKStickerAttributionInfo_name + 8)) {
    uint64_t v8 = sub_25E4258C0();
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = (void *)sub_25E4258C0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);
  swift_unknownObjectRelease();
}

void sub_25E41F2F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389020);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E41F0D4();
  sub_25E426260();
  uint64_t v9 = *(void **)(v3 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  if (v9)
  {
    id v10 = v9;
    objc_msgSend(v10, sel_longLongValue);
    char v15 = 0;
    sub_25E426110();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      return;
    }
  }
  uint64_t v11 = (long long *)(v3 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  long long v14 = *v11;
  char v13 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B388FA8);
  sub_25E41F524();
  sub_25E426100();
  if (!v2)
  {
    long long v14 = *(_OWORD *)(v3 + OBJC_IVAR___STKStickerAttributionInfo_name);
    char v13 = 2;
    sub_25E426100();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_25E41F524()
{
  unint64_t result = qword_26B388FB0;
  if (!qword_26B388FB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B388FA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B388FB0);
  }
  return result;
}

unint64_t sub_25E41F5F8()
{
  sub_25E425EA0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  swift_bridgeObjectRetain();
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___STKStickerAttributionInfo_adamID);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_description);
    sub_25E4258F0();
  }
  sub_25E425970();
  swift_bridgeObjectRelease();
  sub_25E425970();
  return 0xD000000000000012;
}

id Sticker.AttributionInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Sticker.AttributionInfo.init()()
{
}

id Sticker.AttributionInfo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Sticker.AttributionInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_25E41F8F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for Sticker.AttributionInfo());
  unint64_t result = Sticker.AttributionInfo.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_25E41F94C(void *a1)
{
}

uint64_t sub_25E41F970@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___STKStickerAttributionInfo_bundleIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for Sticker.AttributionInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Sticker.AttributionInfo);
}

uint64_t dispatch thunk of Sticker.AttributionInfo.bundleIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.bundleIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.bundleIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.__allocating_init(adamID:bundleIdentifier:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of Sticker.AttributionInfo.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

unsigned char *_s15AttributionInfoC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E41FC18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15AttributionInfoC10CodingKeysOMa()
{
  return &_s15AttributionInfoC10CodingKeysON;
}

unint64_t sub_25E41FC54()
{
  unint64_t result = qword_26A6EDCD0;
  if (!qword_26A6EDCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDCD0);
  }
  return result;
}

unint64_t sub_25E41FCAC()
{
  unint64_t result = qword_26B3894B8;
  if (!qword_26B3894B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B3894B8);
  }
  return result;
}

unint64_t sub_25E41FD04()
{
  unint64_t result = qword_26B3894A0[0];
  if (!qword_26B3894A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B3894A0);
  }
  return result;
}

uint64_t sub_25E41FD58()
{
  unint64_t v0 = sub_25E426000();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25E41FDA4()
{
  uint64_t v0 = sub_25E4256A0();
  __swift_allocate_value_buffer(v0, qword_26B38BBC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B38BBC0);
  return sub_25E425690();
}

uint64_t (*sub_25E41FE18())()
{
  return j__swift_endAccess;
}

id sub_25E41FE74()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D20);
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v33 - v5;
  uint64_t v6 = sub_25E425390();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = v0;
  uint64_t v11 = (void *)CPSharedResourcesDirectory();
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = sub_25E425900();
    unint64_t v15 = v14;
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_25E425EA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v13;
    unint64_t v40 = v15;
    sub_25E425970();
    sub_25E4252D0();
    swift_bridgeObjectRelease();
    id v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(&v10[OBJC_IVAR___STKStickerUsageManager_serializationLocation], v9, v6);
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_25E425EA0();
    swift_bridgeObjectRelease();
    uint64_t v39 = v13;
    unint64_t v40 = v15;
    sub_25E425970();
    sub_25E4252D0();
    swift_bridgeObjectRelease();
    v16(&v10[OBJC_IVAR___STKStickerUsageManager_serializationContextLocation], v9, v6);
    id v17 = objc_msgSend(self, sel_defaultManager);
    sub_25E425340();
    uint64_t v18 = (void *)sub_25E4258C0();
    swift_bridgeObjectRelease();
    unsigned int v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    if (v19)
    {
      sub_25E4253A0();
      sub_25E421930();
      uint64_t v20 = v33;
      uint64_t v21 = v36;
      sub_25E4257D0();
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v10[OBJC_IVAR___STKStickerUsageManager_dictionary], v20, v21);
    }
    else
    {
      uint64_t v33 = (char *)v6;
      sub_25E425820();
      uint64_t v22 = v34;
      sub_25E425760();
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v10[OBJC_IVAR___STKStickerUsageManager_dictionary], v22, v36);
      if (qword_26B388D18 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_25E4256A0();
      __swift_project_value_buffer(v23, (uint64_t)qword_26B38BBC0);
      uint64_t v24 = v10;
      uint64_t v25 = sub_25E425680();
      os_log_type_t v26 = sub_25E425BD0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v39 = v28;
        *(_DWORD *)uint64_t v27 = 136315138;
        sub_25E3EE1FC();
        uint64_t v29 = sub_25E426140();
        uint64_t v37 = sub_25E3C8F74(v29, v30, &v39);
        sub_25E425D80();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25E3BB000, v25, v26, "StickerUsageManager init no file exists at: %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v28, -1, -1);
        MEMORY[0x2611D77B0](v27, -1, -1);
      }
      else
      {
      }
    }
    uint64_t v31 = (objc_class *)type metadata accessor for StickerUsageManager();
    v38.receiver = v10;
    v38.super_class = v31;
    return objc_msgSendSuper2(&v38, sel_init);
  }
  else
  {
    __break(1u);

    id result = (id)swift_unexpectedError();
    __break(1u);
  }
  return result;
}

id sub_25E4205F0()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StickerUsageManager()), sel_init);
  qword_26B388CE8 = (uint64_t)result;
  return result;
}

id static StickerUsageManager.sharedManager.getter()
{
  if (qword_26B388CF0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B388CE8;
  return v0;
}

void sub_25E4206DC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v35 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D30);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v32 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = (char *)&v30 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D20);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B388D18 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_25E4256A0();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B38BBC0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v16 = sub_25E425680();
  os_log_type_t v17 = sub_25E425C00();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v37[0] = v30;
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    v36[0] = sub_25E3C8F74(a1, a2, v37);
    uint64_t v31 = v11;
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v36[0] = sub_25E3C8F74(v35, a4, v37);
    uint64_t v11 = v31;
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25E3BB000, v16, v17, "StickerUsageManager logSticker %s bundleIdentifier %s", (uint8_t *)v18, 0x16u);
    uint64_t v19 = v30;
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v19, -1, -1);
    MEMORY[0x2611D77B0](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = v34 + OBJC_IVAR___STKStickerUsageManager_dictionary;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v20, v11);
  v37[0] = v35;
  v37[1] = a4;
  uint64_t v21 = (uint64_t)v33;
  sub_25E425790();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v22 = sub_25E425820();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v21, 1, v22);
  sub_25E420BE4(v21);
  if (v25 == 1)
  {
    swift_bridgeObjectRetain();
    os_log_type_t v26 = v32;
    sub_25E425830();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v22);
    v36[0] = v35;
    v36[1] = a4;
    swift_beginAccess();
    sub_25E4257A0();
    swift_endAccess();
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_25E41FE18();
  v36[4] = v35;
  v36[5] = a4;
  uint64_t v28 = (void (*)(void *, void))sub_25E425780();
  if (!v24(v29, 1, v22)) {
    sub_25E425810();
  }
  v28(v36, 0);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, void))v27)(v37, 0);
  sub_25E421030();
}

uint64_t sub_25E420BE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E420CD4(uint64_t a1, uint64_t a2)
{
  v22[0] = a2;
  uint64_t v4 = sub_25E425820();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D30);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D20);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v2 + OBJC_IVAR___STKStickerUsageManager_dictionary;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v22[1] = a1;
  void v22[2] = v22[0];
  sub_25E425790();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_25E42169C((uint64_t)v13, (uint64_t)v11);
  uint64_t v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  uint64_t v20 = sub_25E425800();
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_4:
    sub_25E420BE4((uint64_t)v13);
    return v19;
  }
  uint64_t result = sub_25E425F70();
  __break(1u);
  return result;
}

void sub_25E421030()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25E4257B0();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D20);
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B389340);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25E425390();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E4257F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1 + OBJC_IVAR___STKStickerUsageManager_serializationContextLocation, v11);
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  uint64_t v15 = (void *)sub_25E4257E0();
  uint64_t v16 = v1 + OBJC_IVAR___STKStickerUsageManager_dictionary;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v7, v16, v5);
  uint64_t v18 = v23;
  uint64_t v17 = v24;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v4, *MEMORY[0x263F32EB8], v24);
  sub_25E421930();
  uint64_t v19 = sub_25E4257C0();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v17);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  sub_25E4253E0();
  sub_25E3CEA28(v19, v21);
}

id StickerUsageManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerUsageManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25E42169C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B388D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StickerUsageManager()
{
  uint64_t result = qword_26B388CD0;
  if (!qword_26B388CD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E421750()
{
  return type metadata accessor for StickerUsageManager();
}

void sub_25E421758()
{
  sub_25E4218A4();
  if (v0 <= 0x3F)
  {
    sub_25E425390();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for StickerUsageManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StickerUsageManager);
}

uint64_t dispatch thunk of StickerUsageManager.logSticker(stickerIdentifier:bundleIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StickerUsageManager.stickerCounts(bundleIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

void sub_25E4218A4()
{
  if (!qword_26B388D28)
  {
    sub_25E425820();
    unint64_t v0 = sub_25E425770();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B388D28);
    }
  }
}

unint64_t sub_25E421930()
{
  unint64_t result = qword_26A6EDCD8;
  if (!qword_26A6EDCD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B388D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDCD8);
  }
  return result;
}

uint64_t sub_25E42198C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      sub_25E425470();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E421A20@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a4;
    uint64_t v6 = a3;
    unint64_t v8 = a2;
    uint64_t v9 = result;
    uint64_t v7 = a5;
    unint64_t v10 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25E425F80();
  unint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v11 >= v9) {
    uint64_t v12 = v9;
  }
  else {
    uint64_t v12 = v11;
  }
  if (v11 < 0) {
    uint64_t v12 = v9;
  }
  if (v9) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25E425F80();
    unint64_t result = swift_bridgeObjectRelease();
    if (v15 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25E425F80();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 < v13)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v8 & 0xC000000000000001) != 0 && v13)
  {
    sub_25E42209C();
    unint64_t result = 0;
    do
    {
      uint64_t v16 = result + 1;
      sub_25E425ED0();
      unint64_t result = v16;
    }
    while (v13 != v16);
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25E425F90();
    uint64_t v19 = v21;
    uint64_t v17 = v22;
    uint64_t v20 = v23;
    unint64_t result = swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8;
    uint64_t v19 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v20 = (2 * v13) | 1;
  }
  *uint64_t v7 = v18;
  v7[1] = v19;
  uint64_t v7[2] = v17;
  void v7[3] = v20;
  void v7[4] = v6;
  v7[5] = v5;
  return result;
}

void sub_25E421BC4()
{
  type metadata accessor for EmojiRecency();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B500]), sel_initWithMachName_, 0);
  type metadata accessor for RecencyChangeObservers();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 24) = v1;
  sub_25E421F74();
  qword_26A6EDCE0 = v0;
}

uint64_t EmojiRecency.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B500]), sel_initWithMachName_, 0);
  type metadata accessor for RecencyChangeObservers();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 24) = v1;
  sub_25E421F74();
  return v0;
}

uint64_t static EmojiRecency.shared.getter()
{
  if (qword_26A6ED558 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t EmojiRecency.init()()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3B500]), sel_initWithMachName_, 0);
  type metadata accessor for RecencyChangeObservers();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 24) = v1;
  sub_25E421F74();
  return v0;
}

uint64_t type metadata accessor for RecencyChangeObservers()
{
  return self;
}

uint64_t sub_25E421D88(uint64_t a1)
{
  objc_msgSend(*(id *)(v1 + 16), sel_readEmojiDefaults);
  id v3 = objc_msgSend(*(id *)(v1 + 16), sel_recentEmojis);
  sub_25E42209C();
  unint64_t v4 = sub_25E425AC0();

  sub_25E421A20(a1, v4, (uint64_t)sub_25E421E50, 0, (uint64_t *)v8);
  sub_25E3EBAA0((uint64_t)v8);
  uint64_t v6 = v5;
  v9[0] = v8[0];
  v9[1] = v8[1];
  sub_25E3ED910((uint64_t)v9);
  swift_release();
  return v6;
}

void sub_25E421E50(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_string);
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_25E4258F0();
    uint64_t v7 = v6;

    *a2 = v5;
    a2[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

id sub_25E421EB0()
{
  uint64_t v1 = sub_25E425560();
  if (objc_msgSend(*(id *)(v0 + 16), sel_respondsToSelector_, v1)) {
    objc_msgSend(*(id *)(v0 + 16), sel_performSelector_, v1);
  }
  objc_super v2 = *(void **)(v0 + 16);
  return objc_msgSend(v2, sel_readEmojiDefaults);
}

id sub_25E421F38(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 16), sel_lastUsedVariantEmojiForEmoji_, a1);
  return v2;
}

void sub_25E421F74()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = v1[2];
  v1[2] = sub_25E422580;
  v1[3] = v2;
  swift_retain_n();
  sub_25E4223A4(v3);
  unint64_t v4 = CFNotificationCenterGetDarwinNotifyCenter();
  if (v4)
  {
    uint64_t v5 = qword_26A6ED560;
    uint64_t v6 = v4;
    uint64_t v7 = v6;
    if (v5 != -1)
    {
      swift_once();
      uint64_t v6 = v7;
    }
    CFNotificationCenterAddObserver(v6, v1, (CFNotificationCallback)sub_25E422230, (CFStringRef)qword_26A6EDCE8, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
    swift_release_n();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_25E42209C()
{
  unint64_t result = qword_26A6EDCF0;
  if (!qword_26A6EDCF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6EDCF0);
  }
  return result;
}

uint64_t sub_25E4220DC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_25E425560();
    if (objc_msgSend(*(id *)(v1 + 16), sel_respondsToSelector_, v2)) {
      objc_msgSend(*(id *)(v1 + 16), sel_performSelector_, v2);
    }
    objc_msgSend(*(id *)(v1 + 16), sel_readEmojiDefaults);
    return swift_release();
  }
  return result;
}

uint64_t EmojiRecency.deinit()
{
  swift_release();
  return v0;
}

uint64_t EmojiRecency.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25E4221F8()
{
  uint64_t result = sub_25E4258C0();
  qword_26A6EDCE8 = result;
  return result;
}

void sub_25E422230(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = a1;
  id v9 = a3;
  id v10 = a5;
  sub_25E422588(a2, a3);
}

uint64_t sub_25E4222B0()
{
  sub_25E4223A4(*(void *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmojiRecency()
{
  return self;
}

uint64_t method lookup function for EmojiRecency(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmojiRecency);
}

uint64_t dispatch thunk of EmojiRecency.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EmojiRecency.recentEmojis(limit:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of EmojiRecency.reloadCachedRecentEmojis()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of EmojiRecency.lastUsedVariantEmoji(forEmoji:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_25E4223A4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25E4223B4(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25E425F80();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25E425F80();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25E425F80();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for Sticker(0);
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = v10 + 1;
      sub_25E425ED0();
      uint64_t v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25E425F90();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_25E422548()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E422580()
{
  return sub_25E4220DC();
}

void sub_25E422588(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_25E4251A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    memset(v10, 0, sizeof(v10));
    id v8 = a2;
    sub_25E425190();
    if (a1)
    {
      uint64_t v9 = *(void (**)(char *))(a1 + 16);
      swift_retain();
      if (v9)
      {
        swift_retain();
        v9(v7);
        sub_25E4223A4((uint64_t)v9);

        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint8_t *sub_25E4226F4(uint64_t a1)
{
  v39[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v2 = (uint8_t *)sub_25E4254F0();
  uint64_t v37 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v6 = (void *)sub_25E4258C0();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_25E3CE930(0, (unint64_t *)&qword_26B388FD8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26B389038);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_25E4277F0;
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  *(void *)(v8 + 64) = sub_25E3D4418();
  *(void *)(v8 + 32) = 0x696669746E656469;
  *(void *)(v8 + 40) = 0xEA00000000007265;
  uint64_t v9 = sub_25E4254A0();
  *(void *)(v8 + 96) = sub_25E3CE930(0, &qword_26B3894F8);
  *(void *)(v8 + 104) = sub_25E3D9AE8();
  *(void *)(v8 + 72) = v9;
  uint64_t v10 = (void *)sub_25E425BC0();
  objc_msgSend(v7, sel_setPredicate_, v10);

  v39[0] = 0;
  id v11 = objc_msgSend(v7, sel_execute_, v39);
  id v12 = v39[0];
  if (!v11)
  {
    id v17 = v39[0];
    uint64_t v18 = (void *)sub_25E425290();

    swift_willThrow();
    id v19 = v18;
    id v20 = v18;
    uint64_t v21 = sub_25E425680();
    os_log_type_t v22 = sub_25E425BF0();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v2 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v2 = 138412290;
      id v24 = v18;
      uint64_t v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v39[0] = v25;
      sub_25E425D80();
      *uint64_t v23 = v25;

      _os_log_impl(&dword_25E3BB000, v21, v22, "Could not fetch sticker: %@", v2, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v23, -1, -1);
      MEMORY[0x2611D77B0](v2, -1, -1);
    }
    else
    {
    }
LABEL_16:
    swift_willThrow();
    return v2;
  }
  uint64_t v13 = v11;
  type metadata accessor for ManagedSticker();
  unint64_t v14 = sub_25E425AC0();
  id v15 = v12;

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_25E425F80();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v27 = v37;
    (*(void (**)(char *, uint64_t, uint8_t *))(v37 + 16))(v4, a1, v2);
    uint64_t v28 = sub_25E425680();
    os_log_type_t v29 = sub_25E425BF0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v39[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      v36[1] = v30 + 4;
      sub_25E3D016C();
      uint64_t v32 = sub_25E426140();
      uint64_t v38 = sub_25E3C8F74(v32, v33, (uint64_t *)v39);
      sub_25E425D80();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint8_t *))(v27 + 8))(v4, v2);
      _os_log_impl(&dword_25E3BB000, v28, v29, "Unknown sticker %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v31, -1, -1);
      MEMORY[0x2611D77B0](v30, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint8_t *))(v27 + 8))(v4, v2);
    }
    sub_25E3CC3F0();
    swift_allocError();
    *uint64_t v34 = 2;
    goto LABEL_16;
  }
LABEL_4:
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = (uint8_t *)MEMORY[0x2611D6C30](0, v14);
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    uint64_t v16 = (uint8_t *)*(id *)(v14 + 32);
  }
  unint64_t v2 = v16;
  swift_bridgeObjectRelease();
  return v2;
}

void sub_25E422D00()
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 16);
  v13[0] = 0;
  if (objc_msgSend(v1, sel_save_, v13))
  {
    id v2 = v13[0];
  }
  else
  {
    id v3 = v13[0];
    uint64_t v4 = (void *)sub_25E425290();

    swift_willThrow();
    id v5 = v4;
    id v6 = v4;
    id v7 = sub_25E425680();
    os_log_type_t v8 = sub_25E425BF0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      id v11 = v4;
      id v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_25E425D80();
      *uint64_t v10 = v12;

      _os_log_impl(&dword_25E3BB000, v7, v8, "Could not save sticker: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v10, -1, -1);
      MEMORY[0x2611D77B0](v9, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_25E422F1C()
{
  return _s6UpdateCMa();
}

uint64_t _s6UpdateCMa()
{
  uint64_t result = qword_26B3892E0;
  if (!qword_26B3892E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E422F70(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_25E3EAA5C(0, v1, 0);
    uint64_t result = v5;
    do
    {
      uint64_t v6 = result;
      unint64_t v4 = *(void *)(result + 16);
      unint64_t v3 = *(void *)(result + 24);
      if (v4 >= v3 >> 1)
      {
        sub_25E3EAA5C(v3 > 1, v4 + 1, 1);
        uint64_t result = v6;
      }
      *(void *)(result + 16) = v4 + 1;
      *(void *)(result + 8 * v4 + 32) = 0;
      --v1;
    }
    while (v1);
  }
  return result;
}

uint64_t sub_25E42301C()
{
  uint64_t v0 = sub_25E425470();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E42310C((uint64_t)v3);
  sub_25E425400();
  uint64_t v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_26A6EDCF8 = v5;
  return result;
}

uint64_t sub_25E42310C@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A6ED780);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25E425470();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v20 - v9;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  id v12 = (void *)sub_25E4258C0();
  objc_msgSend(v11, sel_setDateFormat_, v12);

  id v13 = objc_allocWithZone(MEMORY[0x263EFF960]);
  unint64_t v14 = (void *)sub_25E4258C0();
  id v15 = objc_msgSend(v13, sel_initWithLocaleIdentifier_, v14);

  objc_msgSend(v11, sel_setLocale_, v15);
  uint64_t v16 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v11, sel_dateFromString_, v16);

  if (v17)
  {
    sub_25E425450();

    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v18(v3, v8, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    if (result != 1)
    {
      v18(v10, v3, v4);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
      sub_25E425410();

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  __break(1u);
  return result;
}

uint64_t Sticker.RestrictedDistributionType.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t Sticker.RestrictedDistributionType.rawValue.getter()
{
  return 0;
}

void *sub_25E423454@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_25E423468(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Sticker.distributionIsRestricted.getter()
{
  uint64_t result = os_variant_has_internal_content();
  if (result) {
    return objc_msgSend(v0, sel_canDistribute) ^ 1;
  }
  return result;
}

BOOL Sticker.canDistribute.getter()
{
  if (!os_variant_has_internal_content()) {
    return 1;
  }
  uint64_t v0 = *((void *)Sticker.distributionRestrictions.getter() + 2);
  swift_bridgeObjectRelease();
  return v0 == 0;
}

char *Sticker.distributionRestrictions.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A6EDD00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E427610;
  sub_25E42367C((BOOL *)(inited + 32));
  if (*(unsigned char *)(inited + 32))
  {
    uint64_t v1 = (char *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v1 = sub_25E3EA8E4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v3 = *((void *)v1 + 2);
    unint64_t v2 = *((void *)v1 + 3);
    unint64_t v4 = v3 + 1;
    if (v3 >= v2 >> 1) {
      uint64_t v1 = sub_25E3EA8E4((char *)(v2 > 1), v3 + 1, 1, v1);
    }
    *((void *)v1 + 2) = v4;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_25E42367C@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = os_variant_has_internal_content();
  if (result
    && (unint64_t v4 = (void *)(v1 + OBJC_IVAR___STKSticker_searchText), result = swift_beginAccess(), (v5 = v4[1]) != 0)
    && ((v5 & 0x2000000000000000) != 0 ? (uint64_t v6 = HIBYTE(v5) & 0xF) : (uint64_t v6 = *v4 & 0xFFFFFFFFFFFFLL), v6))
  {
    uint64_t v7 = (double *)(v1 + OBJC_IVAR___STKSticker_creationDate);
    uint64_t result = swift_beginAccess();
    double v8 = *v7;
    if (qword_26A6ED568 != -1)
    {
      double v10 = *v7;
      uint64_t result = swift_once();
      double v8 = v10;
    }
    BOOL v9 = v8 >= *(double *)&qword_26A6EDCF8;
  }
  else
  {
    BOOL v9 = 1;
  }
  *a1 = v9;
  return result;
}

uint64_t Sticker.distributionRestrictions_ObjC.getter()
{
  uint64_t v0 = Sticker.distributionRestrictions.getter();
  uint64_t v1 = sub_25E422F70((uint64_t)v0);
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_25E423858()
{
  unint64_t result = qword_26A6EDD08;
  if (!qword_26A6EDD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6EDD08);
  }
  return result;
}

unsigned char *_s26RestrictedDistributionTypeOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25E423948);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Sticker.RestrictedDistributionType()
{
  return &type metadata for Sticker.RestrictedDistributionType;
}

ValueMetadata *type metadata accessor for StickerSpotlightItemAttributeKey()
{
  return &type metadata for StickerSpotlightItemAttributeKey;
}

id sub_25E4239D0(void *a1)
{
  type metadata accessor for ManagedRepresentation();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
    type metadata accessor for ManagedSticker();
    uint64_t v10 = swift_dynamicCastClass();
    id v11 = a1;
    id v12 = v11;
    if (v10)
    {
      id v13 = v11;
      unint64_t v14 = sub_25E425680();
      os_log_type_t v15 = sub_25E425BE0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        id v17 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 138412290;
        id v13 = v13;
        sub_25E425D80();
        *id v17 = v10;

        _os_log_impl(&dword_25E3BB000, v14, v15, "Ignoring indexing sticker object: %@", v16, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v17, -1, -1);
        MEMORY[0x2611D77B0](v16, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      unint64_t v33 = sub_25E425680();
      uint64_t v34 = sub_25E425BF0();
      if (os_log_type_enabled(v33, (os_log_type_t)v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 138412290;
        id v37 = v12;
        sub_25E425D80();
        *uint64_t v36 = v12;

        _os_log_impl(&dword_25E3BB000, v33, (os_log_type_t)v34, "Could not create attributes for %@", v35, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
        swift_arrayDestroy();
        MEMORY[0x2611D77B0](v36, -1, -1);
        MEMORY[0x2611D77B0](v35, -1, -1);
      }
      else
      {
      }
    }
    return 0;
  }
  int v3 = (void *)v2;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_role);
  if (!v5) {
    goto LABEL_15;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_25E4258F0();
  uint64_t v9 = v8;

  if (v7 == 0xD00000000000001DLL && v9 == 0x800000025E42A080)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = sub_25E426160();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_15;
    }
  }
  id v19 = objc_msgSend(v3, sel_sticker);
  if (!v19 || (id v20 = v19, v21 = objc_msgSend(v19, sel_type), v20, v21 != 1))
  {
LABEL_15:
    id v28 = v4;
    os_log_type_t v29 = sub_25E425680();
    os_log_type_t v30 = sub_25E425BE0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      id v28 = v28;
      sub_25E425D80();
      void *v32 = v3;

      _os_log_impl(&dword_25E3BB000, v29, v30, "Ignoring index representation object: %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v32, -1, -1);
      MEMORY[0x2611D77B0](v31, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  id v22 = v4;
  uint64_t v23 = sub_25E425680();
  os_log_type_t v24 = sub_25E425BE0();
  if (os_log_type_enabled(v23, v24))
  {
    id v40 = v22;
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 138412290;
    id v27 = v22;
    sub_25E425D80();
    *uint64_t v26 = v3;

    id v22 = v40;
    _os_log_impl(&dword_25E3BB000, v23, v24, "Will index %@", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v26, -1, -1);
    MEMORY[0x2611D77B0](v25, -1, -1);
  }
  else
  {
  }
  id v38 = sub_25E424008(v3);

  return v38;
}

id sub_25E424008(void *a1)
{
  uint64_t v3 = sub_25E425470();
  uint64_t v113 = *(void *)(v3 - 8);
  uint64_t v114 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v112 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B389370);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v116 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v107 - v8;
  uint64_t v119 = sub_25E4254F0();
  uint64_t v10 = *(void *)(v119 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v119);
  uint64_t v115 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  os_log_type_t v15 = (char *)&v107 - v14;
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v107 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B388ED0);
  MEMORY[0x270FA5388](v18 - 8);
  id v20 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_25E4255B0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  os_log_type_t v24 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v120 = a1;
  id v25 = [a1 uti];
  if (!v25)
  {
    uint64_t v32 = sub_25E425680();
    os_log_type_t v39 = sub_25E425BF0();
    if (!os_log_type_enabled(v32, v39))
    {
LABEL_20:

      return 0;
    }
    id v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v40 = 0;
    _os_log_impl(&dword_25E3BB000, v32, v39, ".uti is nil -- this record is probably syncing down for the first time", v40, 2u);
    uint64_t v38 = (uint64_t)v40;
LABEL_7:
    MEMORY[0x2611D77B0](v38, -1, -1);
    goto LABEL_20;
  }
  uint64_t v26 = v25;
  unint64_t v117 = v1;
  long long v118 = v24;
  uint64_t v111 = v17;
  uint64_t v27 = sub_25E4258F0();
  unint64_t v29 = v28;

  swift_bridgeObjectRetain();
  sub_25E4255C0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_25E3CE8D4((uint64_t)v20, (uint64_t *)&unk_26B388ED0);
    id v30 = v120;
    swift_bridgeObjectRetain();
    id v31 = v30;
    uint64_t v32 = sub_25E425680();
    os_log_type_t v33 = sub_25E425BF0();
    if (!os_log_type_enabled(v32, v33))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v122 = v36;
    *(_DWORD *)uint64_t v34 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v121 = sub_25E3C8F74(v27, v29, &v122);
    sub_25E425D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2112;
    uint64_t v121 = (uint64_t)v31;
    id v37 = v31;
    sub_25E425D80();
    void *v35 = v31;

    _os_log_impl(&dword_25E3BB000, v32, v33, "Could not create UTType from %s for %@", (uint8_t *)v34, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v36, -1, -1);
    uint64_t v38 = v34;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v118, v20, v21);
  id v41 = objc_msgSend(v120, sel_identifier);
  uint64_t v109 = v21;
  uint64_t v110 = v22;
  if (!v41)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, 1, 1, v119);
    goto LABEL_22;
  }
  uint64_t v42 = v41;
  sub_25E4254C0();

  uint64_t v43 = v10;
  unint64_t v44 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v45 = v119;
  v44(v9, v15, v119);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v46(v9, 0, 1, v45);
  os_log_type_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v47(v9, 1, v45) == 1)
  {
LABEL_22:
    sub_25E3CE8D4((uint64_t)v9, &qword_26B389370);
    uint64_t v90 = v120;
    id v91 = sub_25E425680();
    os_log_type_t v92 = sub_25E425BF0();
    if (os_log_type_enabled(v91, v92))
    {
      unint64_t v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v93 = 138412290;
      uint64_t v122 = (uint64_t)v90;
      uint64_t v95 = v90;
      sub_25E425D80();
      *uint64_t v94 = v90;

      _os_log_impl(&dword_25E3BB000, v91, v92, ".identifier is nil -- this record is probably syncing down for the first time: %@", v93, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B389518);
      swift_arrayDestroy();
      MEMORY[0x2611D77B0](v94, -1, -1);
      MEMORY[0x2611D77B0](v93, -1, -1);
    }
    else
    {

      id v91 = v90;
    }
    uint64_t v96 = v110;
    uint64_t v97 = v118;

    (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v109);
    return 0;
  }
  v44(v111, v9, v45);
  id v48 = objc_msgSend(v120, sel_sticker);
  if (!v48)
  {
    uint64_t v99 = sub_25E425680();
    os_log_type_t v100 = sub_25E425BF0();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v101 = 0;
      _os_log_impl(&dword_25E3BB000, v99, v100, ".sticker is nil -- this record is probably syncing down for the first time", v101, 2u);
      MEMORY[0x2611D77B0](v101, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v111, v45);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v118, v109);
    return 0;
  }
  uint64_t v49 = v46;
  id v108 = v48;
  id v50 = objc_msgSend(v48, sel_identifier);
  if (!v50)
  {
    uint64_t v52 = (uint64_t)v116;
    v49(v116, 1, 1, v45);
    uint64_t v54 = v110;
    goto LABEL_32;
  }
  uint64_t v51 = v50;
  sub_25E4254C0();

  uint64_t v52 = (uint64_t)v116;
  v44(v116, v15, v45);
  v49((char *)v52, 0, 1, v45);
  unsigned int v53 = v47((char *)v52, 1, v45);
  uint64_t v54 = v110;
  if (v53 == 1)
  {
LABEL_32:
    sub_25E3CE8D4(v52, &qword_26B389370);
    char v102 = sub_25E425680();
    os_log_type_t v103 = sub_25E425BF0();
    BOOL v104 = os_log_type_enabled(v102, v103);
    unint64_t v105 = v118;
    if (v104)
    {
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v106 = 0;
      _os_log_impl(&dword_25E3BB000, v102, v103, "sticker.identifier is nil -- this record is probably syncing down for the first time", v106, 2u);
      MEMORY[0x2611D77B0](v106, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v111, v45);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v105, v109);
    return 0;
  }
  v44(v115, (char *)v52, v45);
  id v55 = objc_allocWithZone(MEMORY[0x263F02AE8]);
  long long v56 = (void *)sub_25E4255A0();
  id v57 = objc_msgSend(v55, sel_initWithContentType_, v56);

  sub_25E425490();
  uint64_t v58 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v57, sel_setIdentifier_, v58);

  sub_25E425490();
  uint64_t v59 = (void *)sub_25E4258C0();
  swift_bridgeObjectRelease();
  uint64_t v60 = (void *)sub_25E4258C0();
  objc_msgSend(v57, sel_setAttribute_forKey_, v59, v60);

  objc_msgSend(v120, sel_byteCount);
  uint64_t v61 = (void *)sub_25E426210();
  uint64_t v62 = (void *)sub_25E4258C0();
  objc_msgSend(v57, sel_setAttribute_forKey_, v61, v62);

  sub_25E3DD648();
  uint64_t v63 = (void *)sub_25E425D00();
  objc_msgSend(v57, sel_setEligibleForPhotosProcessing_, v63);

  id v64 = v108;
  objc_msgSend(v108, sel_lastUsedDate);
  uint64_t v65 = v112;
  sub_25E4253F0();
  unint64_t v66 = (void *)sub_25E425430();
  uint64_t v67 = v114;
  uint64_t v68 = *(void (**)(char *, uint64_t))(v113 + 8);
  v68(v65, v114);
  objc_msgSend(v57, sel_setLastUsedDate_, v66);

  objc_msgSend(v64, sel_creationDate);
  sub_25E4253F0();
  uint64_t v69 = (void *)sub_25E425430();
  v68(v65, v67);
  objc_msgSend(v57, sel_setContentCreationDate_, v69);

  id v70 = objc_msgSend(v64, sel_searchText);
  if (v70)
  {
    uint64_t v71 = v70;
    long long v72 = (void *)sub_25E4258C0();
    objc_msgSend(v57, sel_setAttribute_forKey_, v71, v72);
  }
  id v73 = objc_msgSend(v108, sel_accessibilityName);
  if (v73)
  {
    uint64_t v74 = v73;
    uint64_t v75 = (void *)sub_25E4258C0();
    objc_msgSend(v57, sel_setAttribute_forKey_, v74, v75);
  }
  id v76 = v57;
  uint64_t v77 = sub_25E425680();
  os_log_type_t v78 = sub_25E425BE0();
  if (os_log_type_enabled(v77, v78))
  {
    objc_super v79 = (uint8_t *)swift_slowAlloc();
    id v120 = (id)swift_slowAlloc();
    uint64_t v122 = (uint64_t)v120;
    *(_DWORD *)objc_super v79 = 136315138;
    unint64_t v116 = (char *)(v79 + 4);
    unint64_t v117 = v79;
    id v80 = objc_msgSend(v76, sel_attributeDictionary);
    sub_25E425840();

    uint64_t v81 = sub_25E425850();
    unint64_t v83 = v82;
    swift_bridgeObjectRelease();
    uint64_t v121 = sub_25E3C8F74(v81, v83, &v122);
    sub_25E425D80();

    swift_bridgeObjectRelease();
    uint64_t v84 = v117;
    _os_log_impl(&dword_25E3BB000, v77, v78, "Attributes: %s", v117, 0xCu);
    id v85 = v120;
    swift_arrayDestroy();
    MEMORY[0x2611D77B0](v85, -1, -1);
    MEMORY[0x2611D77B0](v84, -1, -1);

    id v86 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v87 = v119;
    v86(v115, v119);
    uint64_t v88 = v111;
    uint64_t v89 = v87;
  }
  else
  {

    id v86 = *(void (**)(char *, uint64_t))(v43 + 8);
    v86(v115, v45);
    uint64_t v88 = v111;
    uint64_t v89 = v45;
  }
  v86(v88, v89);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v118, v109);
  return v76;
}

id sub_25E424FA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerSpotlightDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25E425048()
{
  return type metadata accessor for StickerSpotlightDelegate();
}

uint64_t type metadata accessor for StickerSpotlightDelegate()
{
  uint64_t result = qword_26B3895C0;
  if (!qword_26B3895C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E42509C()
{
  uint64_t result = sub_25E4256A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25E425130()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_25E425140()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_25E425150()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_25E425160()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_25E425170()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_25E425180()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_25E425190()
{
  return MEMORY[0x270EEE388]();
}

uint64_t sub_25E4251A0()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_25E4251B0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_25E4251C0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_25E4251D0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_25E4251E0()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_25E4251F0()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_25E425200()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_25E425210()
{
  return MEMORY[0x270EEE9B8]();
}

uint64_t sub_25E425220()
{
  return MEMORY[0x270EEF238]();
}

uint64_t sub_25E425230()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_25E425240()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_25E425250()
{
  return MEMORY[0x270EEF288]();
}

uint64_t sub_25E425260()
{
  return MEMORY[0x270EEF2A8]();
}

uint64_t sub_25E425270()
{
  return MEMORY[0x270EEF2B8]();
}

uint64_t sub_25E425280()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_25E425290()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_25E4252A0()
{
  return MEMORY[0x270EEFBC0]();
}

uint64_t sub_25E4252B0()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_25E4252C0()
{
  return MEMORY[0x270EEFC70]();
}

uint64_t sub_25E4252D0()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_25E4252E0()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_25E4252F0()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_25E425300()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_25E425310()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_25E425320()
{
  return MEMORY[0x270EEFDF0]();
}

uint64_t sub_25E425330()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_25E425340()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_25E425350()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_25E425360()
{
  return MEMORY[0x270EEFEE0]();
}

uint64_t sub_25E425370()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_25E425380()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_25E425390()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_25E4253A0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_25E4253B0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_25E4253C0()
{
  return MEMORY[0x270EF0168]();
}

uint64_t sub_25E4253D0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_25E4253E0()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_25E4253F0()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_25E425400()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_25E425410()
{
  return MEMORY[0x270EF0780]();
}

uint64_t sub_25E425420()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_25E425430()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_25E425440()
{
  return MEMORY[0x270EF09E0]();
}

uint64_t sub_25E425450()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_25E425460()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_25E425470()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_25E425480()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_25E425490()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_25E4254A0()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_25E4254B0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_25E4254C0()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_25E4254D0()
{
  return MEMORY[0x270EF0CF8]();
}

uint64_t sub_25E4254E0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_25E4254F0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_25E425500()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_25E425510()
{
  return MEMORY[0x270EF14B0]();
}

uint64_t sub_25E425520()
{
  return MEMORY[0x270EF14C0]();
}

uint64_t sub_25E425530()
{
  return MEMORY[0x270EF1520]();
}

uint64_t sub_25E425540()
{
  return MEMORY[0x270EF1528]();
}

uint64_t sub_25E425550()
{
  return MEMORY[0x270EF1550]();
}

uint64_t sub_25E425560()
{
  return MEMORY[0x270FA1168]();
}

uint64_t sub_25E425570()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_25E425580()
{
  return MEMORY[0x270FA2A90]();
}

uint64_t sub_25E425590()
{
  return MEMORY[0x270FA16A8]();
}

uint64_t sub_25E4255A0()
{
  return MEMORY[0x270FA1778]();
}

uint64_t sub_25E4255B0()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_25E4255C0()
{
  return MEMORY[0x270FA1948]();
}

uint64_t sub_25E4255D0()
{
  return MEMORY[0x270FA2CC0]();
}

uint64_t sub_25E4255E0()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_25E4255F0()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_25E425600()
{
  return MEMORY[0x270FA2D30]();
}

uint64_t sub_25E425610()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_25E425620()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_25E425630()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_25E425640()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_25E425650()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_25E425660()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_25E425670()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_25E425680()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_25E425690()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_25E4256A0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_25E4256B0()
{
  return MEMORY[0x270FA0970]();
}

uint64_t sub_25E4256C0()
{
  return MEMORY[0x270FA0988]();
}

uint64_t sub_25E4256D0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_25E4256E0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_25E4256F0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_25E425700()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_25E425710()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_25E425720()
{
  return MEMORY[0x270FA0B60]();
}

uint64_t sub_25E425730()
{
  return MEMORY[0x270FA0B70]();
}

uint64_t sub_25E425740()
{
  return MEMORY[0x270FA0B98]();
}

uint64_t sub_25E425750()
{
  return MEMORY[0x270FA0BB0]();
}

uint64_t sub_25E425760()
{
  return MEMORY[0x270F17778]();
}

uint64_t sub_25E425770()
{
  return MEMORY[0x270F17780]();
}

uint64_t sub_25E425780()
{
  return MEMORY[0x270F17788]();
}

uint64_t sub_25E425790()
{
  return MEMORY[0x270F17790]();
}

uint64_t sub_25E4257A0()
{
  return MEMORY[0x270F17798]();
}

uint64_t sub_25E4257B0()
{
  return MEMORY[0x270F17930]();
}

uint64_t sub_25E4257C0()
{
  return MEMORY[0x270F17C60]();
}

uint64_t sub_25E4257D0()
{
  return MEMORY[0x270F17C68]();
}

uint64_t sub_25E4257E0()
{
  return MEMORY[0x270F17F98]();
}

uint64_t sub_25E4257F0()
{
  return MEMORY[0x270F17FA0]();
}

uint64_t sub_25E425800()
{
  return MEMORY[0x270F17FA8]();
}

uint64_t sub_25E425810()
{
  return MEMORY[0x270F17FB0]();
}

uint64_t sub_25E425820()
{
  return MEMORY[0x270F17FC0]();
}

uint64_t sub_25E425830()
{
  return MEMORY[0x270F17FC8]();
}

uint64_t sub_25E425840()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_25E425850()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_25E425860()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_25E425870()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_25E425880()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_25E425890()
{
  return MEMORY[0x270EF1868]();
}

uint64_t sub_25E4258A0()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_25E4258B0()
{
  return MEMORY[0x270EF1890]();
}

uint64_t sub_25E4258C0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_25E4258D0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_25E4258E0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_25E4258F0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_25E425900()
{
  return MEMORY[0x270EF1B18]();
}

uint64_t sub_25E425910()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_25E425920()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_25E425930()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_25E425940()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_25E425950()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_25E425960()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_25E425970()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_25E425980()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_25E425990()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_25E4259A0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_25E4259C0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_25E4259D0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_25E4259E0()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_25E4259F0()
{
  return MEMORY[0x270F9D888]();
}

uint64_t sub_25E425A00()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_25E425A10()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_25E425A20()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_25E425A30()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_25E425A40()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_25E425A50()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_25E425A60()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_25E425A70()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_25E425A80()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_25E425A90()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_25E425AA0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_25E425AB0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_25E425AC0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_25E425AD0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_25E425AE0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_25E425AF0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_25E425B00()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_25E425B10()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_25E425B20()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_25E425B30()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_25E425B40()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_25E425B50()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_25E425B60()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_25E425B70()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_25E425B80()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_25E425B90()
{
  return MEMORY[0x270EF1CB8]();
}

uint64_t sub_25E425BA0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_25E425BB0()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_25E425BC0()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_25E425BD0()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_25E425BE0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_25E425BF0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_25E425C00()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_25E425C10()
{
  return MEMORY[0x270EF1F48]();
}

uint64_t sub_25E425C20()
{
  return MEMORY[0x270FA0C08]();
}

uint64_t sub_25E425C30()
{
  return MEMORY[0x270FA0C38]();
}

uint64_t sub_25E425C40()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_25E425C50()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_25E425C60()
{
  return MEMORY[0x270FA0DB0]();
}

uint64_t sub_25E425C70()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_25E425C80()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_25E425C90()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_25E425CA0()
{
  return MEMORY[0x270FA2EB8]();
}

uint64_t sub_25E425CB0()
{
  return MEMORY[0x270EE4218]();
}

uint64_t sub_25E425CC0()
{
  return MEMORY[0x270EE4230]();
}

uint64_t sub_25E425CD0()
{
  return MEMORY[0x270EE5910]();
}

uint64_t sub_25E425CE0()
{
  return MEMORY[0x270EF20F8]();
}

uint64_t sub_25E425CF0()
{
  return MEMORY[0x270EF2128]();
}

uint64_t sub_25E425D00()
{
  return MEMORY[0x270EF2180]();
}

uint64_t sub_25E425D10()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_25E425D20()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_25E425D30()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_25E425D40()
{
  return MEMORY[0x270FA11A0]();
}

uint64_t sub_25E425D50()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_25E425D60()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_25E425D70()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_25E425D80()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_25E425D90()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_25E425DA0()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_25E425DB0()
{
  return MEMORY[0x270EF2560]();
}

uint64_t sub_25E425DC0()
{
  return MEMORY[0x270EF2590]();
}

uint64_t sub_25E425DD0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_25E425DE0()
{
  return MEMORY[0x270F9E7D8]();
}

uint64_t sub_25E425DF0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_25E425E00()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_25E425E10()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_25E425E20()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_25E425E30()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_25E425E40()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_25E425E50()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_25E425E60()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_25E425E70()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_25E425E80()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_25E425E90()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_25E425EA0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_25E425EB0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_25E425EC0()
{
  return MEMORY[0x270F9E9D8]();
}

uint64_t sub_25E425ED0()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_25E425EE0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_25E425EF0()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_25E425F00()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_25E425F10()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_25E425F20()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_25E425F30()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_25E425F40()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_25E425F50()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_25E425F60()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_25E425F70()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_25E425F80()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_25E425F90()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_25E425FA0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_25E425FB0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_25E425FC0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_25E425FD0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_25E425FF0()
{
  return MEMORY[0x270F9F210]();
}

uint64_t sub_25E426000()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_25E426010()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_25E426020()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_25E426030()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_25E426040()
{
  return MEMORY[0x270F9F2C0]();
}

uint64_t sub_25E426050()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_25E426060()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_25E426070()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_25E426080()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_25E426090()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_25E4260A0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_25E4260B0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_25E4260C0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_25E4260D0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_25E4260E0()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_25E4260F0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_25E426100()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_25E426110()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_25E426120()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_25E426130()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_25E426140()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_25E426150()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_25E426160()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_25E426170()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_25E426180()
{
  return MEMORY[0x270F9FA68]();
}

uint64_t sub_25E426190()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_25E4261A0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_25E4261B0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_25E4261C0()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_25E4261D0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_25E4261E0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_25E4261F0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_25E426200()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_25E426210()
{
  return MEMORY[0x270EF26A8]();
}

uint64_t sub_25E426220()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_25E426230()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_25E426240()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_25E426250()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_25E426260()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_25E426290()
{
  return MEMORY[0x270FA0128]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B88]();
}

uint64_t CNRunWithLock()
{
  return MEMORY[0x270F18638]();
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x270F0CDD0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void exit(int a1)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x270F9B660](*(void *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x270F9B668](a1, sql, callback, a4, errmsg);
}

int sqlite3_extended_errcode(sqlite3 *db)
{
  return MEMORY[0x270F9B678](db);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x270F9B710](filename, ppDb, *(void *)&flags, zVfs);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}