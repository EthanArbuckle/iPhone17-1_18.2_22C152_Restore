uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t objectdestroyTm()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();

  unint64_t v1 = *(void *)(v0 + 56);
  if (v1 >> 60 != 15) {
    sub_24743E4AC(*(void *)(v0 + 48), v1);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t objectdestroyTm_1()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t objectdestroy_89Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.identifier.getter()
{
  unint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for SecureCloudPingRequestProtobuf()
{
  uint64_t result = qword_269250408;
  if (!qword_269250408) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24743C614@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24743C678(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudPingRequestProtobuf.identifier.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_24743C790;
}

uint64_t sub_24743C790(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)(a1[2] + *((int *)a1 + 6));
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v4;
    v3[1] = v2;
  }
  return result;
}

BOOL SecureCloudPingRequestProtobuf.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudPingRequestProtobuf.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudPingRequestProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudPingRequestProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudPingRequestProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudPingRequestProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t result = type metadata accessor for SecureCloudPingRequestProtobuf();
  uint64_t v3 = (void *)(a1 + *(int *)(result + 20));
  *uint64_t v3 = 0;
  v3[1] = 0;
  return result;
}

unint64_t static SecureCloudPingRequestProtobuf.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24743C9C0()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_269250358);
  __swift_project_value_buffer(v0, (uint64_t)qword_269250358);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2474B2130;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "identifier";
  *(void *)(v4 + 8) = 10;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_2474B0E70();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_2474B0E80();
}

uint64_t static SecureCloudPingRequestProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269250350 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269250358);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t SecureCloudPingRequestProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      type metadata accessor for SecureCloudPingRequestProtobuf();
      sub_2474B0D80();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.traverse<A>(visitor:)()
{
  if (!*(void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20) + 8)) {
    return sub_2474B0CC0();
  }
  uint64_t result = sub_2474B0E40();
  if (!v1) {
    return sub_2474B0CC0();
  }
  return result;
}

uint64_t SecureCloudPingRequestProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

uint64_t sub_24743CD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2474B0CD0();
  uint64_t v5 = (void *)(a2 + *(int *)(a1 + 20));
  *uint64_t v5 = 0;
  v5[1] = 0;
  return result;
}

unint64_t sub_24743CDB4()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24743CDD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_24743CE3C(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*sub_24743CEA4())()
{
  return nullsub_1;
}

uint64_t sub_24743CEC4()
{
  return SecureCloudPingRequestProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_24743CEDC()
{
  return SecureCloudPingRequestProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_24743CEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24743DAA4(&qword_269250418, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_24743CF78@<X0>(uint64_t a1@<X8>)
{
  if (qword_269250350 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269250358);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24743D020(uint64_t a1)
{
  uint64_t v2 = sub_24743DAA4(&qword_2692503F8, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_24743D08C()
{
  return sub_2474B1530();
}

uint64_t sub_24743D0E4()
{
  sub_24743DAA4(&qword_2692503F8, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
  return sub_2474B0DF0();
}

uint64_t sub_24743D160()
{
  return sub_2474B1530();
}

void sub_24743D1B8(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_24743D1C0(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_24743D1CC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t _s21ActivitySharingClient30SecureCloudPingRequestProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v10 = (char *)&v21 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20);
  v12 = (void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 8);
  v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  if (!v13)
  {
    if (!v15)
    {
LABEL_11:
      v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v18(v10, a1, v4);
      v18(v8, a2, v4);
      sub_24743DAA4(&qword_269250420, MEMORY[0x263F50560]);
      char v17 = sub_2474B0F30();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v8, v4);
      v19(v10, v4);
      return v17 & 1;
    }
LABEL_10:
    char v17 = 0;
    return v17 & 1;
  }
  if (!v15) {
    goto LABEL_10;
  }
  if (*v12 == *v14 && v13 == v15) {
    goto LABEL_11;
  }
  char v17 = 0;
  if (sub_2474B1470()) {
    goto LABEL_11;
  }
  return v17 & 1;
}

uint64_t sub_24743D3BC()
{
  return sub_24743DAA4(&qword_2692503F0, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_24743D404()
{
  return sub_24743DAA4(&qword_2692503F8, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_24743D44C()
{
  return sub_24743DAA4(&qword_2692503E8, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_24743D494()
{
  return sub_24743DAA4(&qword_269250400, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudPingRequestProtobuf(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudPingRequestProtobuf(uint64_t a1)
{
  uint64_t v2 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24743D86C);
}

uint64_t sub_24743D86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24743D950);
}

uint64_t sub_24743D950(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_24743DA10()
{
  uint64_t result = sub_2474B0CE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24743DAA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TransportSerializable<>.activitySharingTransportData()()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

double sub_24743DB80@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743FA70();
    sub_2474B0B00();
    swift_release();
    sub_24743E498(a1, a2);
    if (!v3)
    {
      *(_OWORD *)a3 = v8;
      *(void *)(a3 + 16) = v9;
      double result = *(double *)&v10;
      *(_OWORD *)(a3 + 24) = v10;
      *(unsigned char *)(a3 + 40) = v11;
      *(void *)(a3 + 48) = v12;
      *(void *)(a3 + 56) = v13;
    }
  }
  return result;
}

double sub_24743DC78@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    *(void *)(a3 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743F5D8();
    sub_2474B0B00();
    swift_release();
    sub_24743E498(a1, a2);
    if (!v3)
    {
      *(_OWORD *)a3 = v8;
      *(_OWORD *)(a3 + 16) = v9;
      *(void *)(a3 + 32) = v10;
      double result = *(double *)&v11;
      *(_OWORD *)(a3 + 40) = v11;
    }
  }
  return result;
}

uint64_t sub_24743DD68(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2 >> 60;
  if (a2 >> 60 == 15) {
    return v3 > 0xE;
  }
  sub_2474B0B20();
  swift_allocObject();
  sub_2474B0B10();
  sub_24743FB18();
  sub_2474B0B00();
  swift_release();
  uint64_t result = sub_24743E498(a1, a2);
  if (!v2) {
    return v3 > 0xE;
  }
  return result;
}

uint64_t sub_24743DE18@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  if (a2 >> 60 == 15)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  else
  {
    uint64_t v8 = result;
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    a3();
    sub_2474B0B00();
    swift_release();
    uint64_t result = sub_24743E498(v8, a2);
    if (!v4)
    {
      *(unsigned char *)a4 = v9;
      a4[1] = v10;
      a4[2] = v11;
    }
  }
  return result;
}

double sub_24743DF04@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743F920();
    sub_2474B0B00();
    swift_release();
    sub_24743E498(a1, a2);
    if (!v3)
    {
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(_OWORD *)(a3 + 16) = v9;
      *(void *)(a3 + 32) = v10;
    }
  }
  return result;
}

double sub_24743DFE4@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743F878();
    sub_2474B0B00();
    swift_release();
    sub_24743E498(a1, a2);
    if (!v3)
    {
      double result = *(double *)&v8;
      *(_OWORD *)a3 = v8;
      *(_OWORD *)(a3 + 16) = v9;
      *(void *)(a3 + 32) = v10;
      *(void *)(a3 + 40) = v11;
    }
  }
  return result;
}

uint64_t sub_24743E0C4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    char v5 = 3;
  }
  else
  {
    uint64_t v7 = result;
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743F728();
    sub_2474B0B00();
    swift_release();
    double result = sub_24743E498(v7, a2);
    if (v3) {
      return result;
    }
    char v5 = v8;
  }
  *a3 = v5;
  return result;
}

uint64_t sub_24743E184@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    *(void *)a3 = 0;
    *(unsigned char *)(a3 + 8) = 1;
  }
  else
  {
    uint64_t v6 = result;
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743F530();
    sub_2474B0B00();
    swift_release();
    double result = sub_24743E498(v6, a2);
    if (!v3)
    {
      *(void *)a3 = v7;
      *(unsigned char *)(a3 + 8) = 0;
    }
  }
  return result;
}

uint64_t sub_24743E250@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = result;
  if (a2 >> 60 == 15)
  {
    *a3 = result;
    a3[1] = a2;
  }
  else
  {
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_24743F680();
    sub_2474B0B00();
    swift_release();
    double result = sub_24743E498(v5, a2);
    if (!v3) {
      *(_OWORD *)a3 = v7;
    }
  }
  return result;
}

uint64_t TransportSerializable<>.init(activitySharingTransportData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12 >> 60 == 15) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, 1, 1, a3);
  }
  sub_2474B0B20();
  swift_allocObject();
  sub_2474B0B10();
  sub_2474B0B00();
  swift_release();
  uint64_t result = sub_24743E498(a1, a2);
  if (!v4)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, a3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, a3);
  }
  return result;
}

uint64_t sub_24743E498(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24743E4AC(a1, a2);
  }
  return a1;
}

uint64_t sub_24743E4AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void *TransportSerializable<>.activitySharingTransportData()()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  v5[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  id v2 = v5[0];
  if (v1)
  {
    uint64_t v3 = (void *)sub_2474B0BC0();
  }
  else
  {
    uint64_t v3 = v2;
    sub_2474B0BA0();

    swift_willThrow();
  }
  return v3;
}

uint64_t TransportSerializable<>.init(activitySharingTransportData:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    return 0;
  }
  sub_24743E668();
  uint64_t v2 = sub_2474B1180();
  sub_24743E498(a1, a2);
  return v2;
}

unint64_t sub_24743E668()
{
  unint64_t result = qword_26B12CC88;
  if (!qword_26B12CC88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B12CC88);
  }
  return result;
}

uint64_t dispatch thunk of TransportSerializable.activitySharingTransportData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TransportSerializable.init(activitySharingTransportData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_24743E6F8()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743FAC4();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

double sub_24743E7AC@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743DB80(a1, a2, a3);
}

uint64_t sub_24743E7C4(uint64_t a1, uint64_t a2)
{
  return sub_24743EC64(a1, a2, (void (*)(void))sub_24743FA1C);
}

uint64_t sub_24743E7F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24743DE18(a1, a2, (void (*)(void))sub_24743F9C8, a3);
}

uint64_t sub_24743E824()
{
  return sub_24743F060();
}

uint64_t sub_24743E844@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743F114(a1, a2, a3);
}

uint64_t sub_24743E864()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743F974();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

double sub_24743E900@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743DF04(a1, a2, a3);
}

void *sub_24743E918()
{
  return TransportSerializable<>.activitySharingTransportData()();
}

uint64_t sub_24743E93C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = TransportSerializable<>.init(activitySharingTransportData:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_24743E968()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743F8CC();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

double sub_24743EA04@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743DFE4(a1, a2, a3);
}

uint64_t sub_24743EA1C()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743FB6C();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743EA9C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24743DD68(a1, a2);
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

uint64_t sub_24743EACC()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743EB60@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v8 = result;
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_2474B0B00();
    swift_release();
    uint64_t result = sub_24743E498(v8, a2);
    if (v3) {
      return result;
    }
    uint64_t v5 = v9;
    uint64_t v6 = v10;
  }
  *a3 = v5;
  a3[1] = v6;
  return result;
}

uint64_t sub_24743EC38(uint64_t a1, uint64_t a2)
{
  return sub_24743EC64(a1, a2, (void (*)(void))sub_24743F824);
}

uint64_t sub_24743EC64(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  a3();
  uint64_t v4 = sub_2474B0B30();
  swift_release();
  return v4;
}

uint64_t sub_24743ED08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24743DE18(a1, a2, (void (*)(void))sub_24743F7D0, a3);
}

uint64_t sub_24743ED3C()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743F77C();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743EDD0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  return sub_24743E0C4(a1, a2, a3);
}

uint64_t sub_24743EDE8()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743F6D4();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743EE7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24743E250(a1, a2, a3);
}

uint64_t sub_24743EE94()
{
  return sub_24743F060();
}

uint64_t sub_24743EEB4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743F114(a1, a2, a3);
}

uint64_t sub_24743EED4()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743F62C();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

double sub_24743EF7C@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743DC78(a1, a2, a3);
}

uint64_t sub_24743EF94()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  sub_24743F584();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743F028@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743E184(a1, a2, a3);
}

uint64_t sub_24743F040()
{
  return sub_24743F060();
}

uint64_t sub_24743F060()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743F0F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24743F114(a1, a2, a3);
}

uint64_t sub_24743F114@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = a2 >> 60;
  if (a2 >> 60 == 15)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v8 = result;
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_2474B0B00();
    swift_release();
    uint64_t result = sub_24743E498(v8, a2);
    if (v3) {
      return result;
    }
    uint64_t v6 = v9;
  }
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = v5 > 0xE;
  return result;
}

uint64_t sub_24743F1F4()
{
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  uint64_t v0 = sub_2474B0B30();
  swift_release();
  return v0;
}

uint64_t sub_24743F288@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  if (a2 >> 60 == 15)
  {
    char v5 = 2;
  }
  else
  {
    uint64_t v7 = result;
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    sub_2474B0B00();
    swift_release();
    uint64_t result = sub_24743E498(v7, a2);
    if (v3) {
      return result;
    }
    char v5 = v8;
  }
  *a3 = v5;
  return result;
}

uint64_t sub_24743F354()
{
  return sub_24743F414();
}

uint64_t sub_24743F394@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24743F4AC(a1, a2, a3, a4);
}

uint64_t sub_24743F3D4()
{
  return sub_24743F414();
}

uint64_t sub_24743F414()
{
  return TransportSerializable<>.activitySharingTransportData()();
}

uint64_t sub_24743F46C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24743F4AC(a1, a2, a3, a4);
}

uint64_t sub_24743F4AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return TransportSerializable<>.init(activitySharingTransportData:)(a1, a2, a3, a4);
}

unint64_t sub_24743F530()
{
  unint64_t result = qword_269250438;
  if (!qword_269250438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250438);
  }
  return result;
}

unint64_t sub_24743F584()
{
  unint64_t result = qword_269250440;
  if (!qword_269250440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250440);
  }
  return result;
}

unint64_t sub_24743F5D8()
{
  unint64_t result = qword_269250448;
  if (!qword_269250448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250448);
  }
  return result;
}

unint64_t sub_24743F62C()
{
  unint64_t result = qword_269250450;
  if (!qword_269250450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250450);
  }
  return result;
}

unint64_t sub_24743F680()
{
  unint64_t result = qword_26B12C7E0;
  if (!qword_26B12C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12C7E0);
  }
  return result;
}

unint64_t sub_24743F6D4()
{
  unint64_t result = qword_26B12C838;
  if (!qword_26B12C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12C838);
  }
  return result;
}

unint64_t sub_24743F728()
{
  unint64_t result = qword_269250458;
  if (!qword_269250458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250458);
  }
  return result;
}

unint64_t sub_24743F77C()
{
  unint64_t result = qword_269250460;
  if (!qword_269250460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250460);
  }
  return result;
}

unint64_t sub_24743F7D0()
{
  unint64_t result = qword_269250468;
  if (!qword_269250468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250468);
  }
  return result;
}

unint64_t sub_24743F824()
{
  unint64_t result = qword_269250470;
  if (!qword_269250470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250470);
  }
  return result;
}

unint64_t sub_24743F878()
{
  unint64_t result = qword_269250478;
  if (!qword_269250478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250478);
  }
  return result;
}

unint64_t sub_24743F8CC()
{
  unint64_t result = qword_269250480;
  if (!qword_269250480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250480);
  }
  return result;
}

unint64_t sub_24743F920()
{
  unint64_t result = qword_269250488;
  if (!qword_269250488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250488);
  }
  return result;
}

unint64_t sub_24743F974()
{
  unint64_t result = qword_269250490;
  if (!qword_269250490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250490);
  }
  return result;
}

unint64_t sub_24743F9C8()
{
  unint64_t result = qword_269250498;
  if (!qword_269250498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250498);
  }
  return result;
}

unint64_t sub_24743FA1C()
{
  unint64_t result = qword_2692504A0;
  if (!qword_2692504A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692504A0);
  }
  return result;
}

unint64_t sub_24743FA70()
{
  unint64_t result = qword_2692504A8;
  if (!qword_2692504A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692504A8);
  }
  return result;
}

unint64_t sub_24743FAC4()
{
  unint64_t result = qword_2692504B0;
  if (!qword_2692504B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692504B0);
  }
  return result;
}

unint64_t sub_24743FB18()
{
  unint64_t result = qword_2692504B8;
  if (!qword_2692504B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692504B8);
  }
  return result;
}

unint64_t sub_24743FB6C()
{
  unint64_t result = qword_2692504C0;
  if (!qword_2692504C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692504C0);
  }
  return result;
}

uint64_t sub_24743FBC0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24743E93C(a1, a2, a3);
}

void *sub_24743FBD8()
{
  return sub_24743E918();
}

unint64_t static InvitationDestinationConstants.inviteServiceIdentifier.getter()
{
  return 0xD00000000000002ELL;
}

ValueMetadata *type metadata accessor for InvitationDestinationConstants()
{
  return &type metadata for InvitationDestinationConstants;
}

uint64_t sub_24743FC1C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C9F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2474B2390;
  *(void *)(v0 + 32) = 0xD00000000000002ELL;
  *(void *)(v0 + 40) = 0x80000002474B6580;
  *(void *)(v0 + 48) = sub_2474B0F50();
  *(void *)(v0 + 56) = v1;
  uint64_t result = sub_2474B0F50();
  *(void *)(v0 + 64) = result;
  *(void *)(v0 + 72) = v3;
  qword_26B12CCE0 = v0;
  return result;
}

void sub_24743FCAC()
{
  qword_269257DE0 = (uint64_t)&unk_26FB90048;
}

uint64_t sub_24743FCC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24743FCD4(uint64_t a1)
{
  return sub_24743FD1C(a1, qword_26B12CCE8);
}

uint64_t sub_24743FCF4(uint64_t a1)
{
  return sub_24743FD1C(a1, qword_269257DE8);
}

uint64_t sub_24743FD1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2474B0EC0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2474B0EB0();
}

void sub_24743FD94(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = sub_24743FF20(a1, a2, a3, a4);
  unint64_t v6 = v5;
  swift_bridgeObjectRetain();
  oslog = sub_2474B0EA0();
  os_log_type_t v7 = sub_2474B1170();
  if (os_log_type_enabled(oslog, v7))
  {
    char v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v11 = v9;
    *(_DWORD *)char v8 = 136446210;
    swift_bridgeObjectRetain();
    sub_247464D64(v4, v6, &v11);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24743A000, oslog, v7, "%{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v9, -1, -1);
    MEMORY[0x24C557100](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_24743FF20(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_2474402DC();
  uint64_t v8 = sub_2474B1250();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v8 + 16 * v9;
    a1 = *(void *)(v10 + 16);
    a2 = *(void *)(v10 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_2474401A8(46, 0xE100000000000000, a1, a2);
  uint64_t v11 = sub_2474B0FD0();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  MEMORY[0x24C556420](v11, v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_2474401A8(40, 0xE100000000000000, a3, a4);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_2474B0FD0();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  MEMORY[0x24C556420](v18, v20, v22, v24);
  swift_bridgeObjectRelease();
  v25 = pthread_self();
  pthread_mach_thread_np(v25);
  sub_2474B1450();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  sub_2474B0FA0();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  sub_2474B0FA0();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  return 91;
}

unint64_t sub_2474401A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_2474B0FC0() != a1 || v9 != a2)
  {
    char v10 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_2474B0F90();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_247440298()
{
  return 0;
}

unint64_t sub_2474402DC()
{
  unint64_t result = qword_26B12CCD8;
  if (!qword_26B12CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12CCD8);
  }
  return result;
}

double SecureCloudInviteRequestProtobuf.date.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20);
  double result = *(double *)v1;
  if (*(unsigned char *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteRequestProtobuf()
{
  uint64_t result = qword_269250510;
  if (!qword_269250510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.date.setter(double a1)
{
  uint64_t result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 20);
  *(double *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(unsigned char *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_247440458;
}

uint64_t sub_247440458(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8) + *(int *)(result + 16);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

BOOL SecureCloudInviteRequestProtobuf.hasDate.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearDate()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 20);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
}

uint64_t SecureCloudInviteRequestProtobuf.handshakeToken.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_247440524@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247440588(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.handshakeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.handshakeToken.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudInviteRequestProtobuf.hasHandshakeToken.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearHandshakeToken()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 24));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteRequestProtobuf.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_247440760@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2474407C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudInviteRequestProtobuf.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 28));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteRequestProtobuf.buildNumber.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_247440998@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2474409FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudInviteRequestProtobuf.hasBuildNumber.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearBuildNumber()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteRequestProtobuf.userInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_247440F70(v1 + *(int *)(v6 + 36), (uint64_t)v5);
  unint64_t v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_247440FD8((uint64_t)v5, a1);
  }
  sub_2474B0CD0();
  *(_OWORD *)(a1 + v7[5]) = xmmword_2474B2410;
  *(_OWORD *)(a1 + v7[6]) = xmmword_2474B2410;
  *(_OWORD *)(a1 + v7[7]) = xmmword_2474B2410;
  unint64_t v8 = (void *)(a1 + v7[8]);
  void *v8 = 0;
  v8[1] = 0;
  return sub_2474443AC((uint64_t)v5, &qword_2692504E0);
}

uint64_t sub_247440CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_247440F70(a1 + *(int *)(v7 + 36), (uint64_t)v6);
  unint64_t v8 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v6, 1, v8) != 1) {
    return sub_247440FD8((uint64_t)v6, a2);
  }
  sub_2474B0CD0();
  *(_OWORD *)(a2 + v8[5]) = xmmword_2474B2410;
  *(_OWORD *)(a2 + v8[6]) = xmmword_2474B2410;
  *(_OWORD *)(a2 + v8[7]) = xmmword_2474B2410;
  uint64_t v9 = (void *)(a2 + v8[8]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  return sub_2474443AC((uint64_t)v6, &qword_2692504E0);
}

uint64_t sub_247440DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2474412E4(a1, (uint64_t)v7);
  uint64_t v8 = a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  sub_2474443AC(v8, &qword_2692504E0);
  sub_247440FD8((uint64_t)v7, v8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t SecureCloudInviteRequestProtobuf.userInfo.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  sub_2474443AC(v3, &qword_2692504E0);
  sub_247440FD8(a1, v3);
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

uint64_t sub_247440F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_247440FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void (*SecureCloudInviteRequestProtobuf.userInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_247440F70(v1 + v11, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_2474B0CD0();
    *(_OWORD *)&v10[v6[5]] = xmmword_2474B2410;
    *(_OWORD *)&v10[v6[6]] = xmmword_2474B2410;
    *(_OWORD *)&v10[v6[7]] = xmmword_2474B2410;
    uint64_t v12 = &v10[v6[8]];
    *(void *)uint64_t v12 = 0;
    *((void *)v12 + 1) = 0;
    sub_2474443AC((uint64_t)v5, &qword_2692504E0);
  }
  else
  {
    sub_247440FD8((uint64_t)v5, (uint64_t)v10);
  }
  return sub_2474411D8;
}

void sub_2474411D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    sub_2474412E4(*(void *)(*(void *)a1 + 40), (uint64_t)v4);
    sub_2474443AC(v9, &qword_2692504E0);
    sub_247440FD8((uint64_t)v4, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_247441348((uint64_t)v5);
  }
  else
  {
    sub_2474443AC(**(void **)a1 + v3, &qword_2692504E0);
    sub_247440FD8((uint64_t)v5, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

uint64_t sub_2474412E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_247441348(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL SecureCloudInviteRequestProtobuf.hasUserInfo.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  sub_247440F70(v0 + *(int *)(v4 + 36), (uint64_t)v3);
  uint64_t v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_2474443AC((uint64_t)v3, &qword_2692504E0);
  return v6;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearUserInfo()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 36);
  sub_2474443AC(v1, &qword_2692504E0);
  uint64_t v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t SecureCloudInviteRequestProtobuf.version.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t SecureCloudInviteRequestProtobuf.version.setter(int a1)
{
  uint64_t result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t (*SecureCloudInviteRequestProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2474415E0;
}

uint64_t sub_2474415E0(uint64_t result)
{
  uint64_t v1 = *(void *)result + *(int *)(result + 12);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)(result + 8);
  *(unsigned char *)(v1 + 4) = 0;
  return result;
}

BOOL SecureCloudInviteRequestProtobuf.hasVersion.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteRequestProtobuf.clearVersion()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf() + 40);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t SecureCloudInviteRequestProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudInviteRequestProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudInviteRequestProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudInviteRequestProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t v2 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v3 = a1 + v2[5];
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  uint64_t v4 = (void *)(a1 + v2[6]);
  *uint64_t v4 = 0;
  v4[1] = 0;
  int v5 = (void *)(a1 + v2[7]);
  *int v5 = 0;
  v5[1] = 0;
  BOOL v6 = (void *)(a1 + v2[8]);
  *BOOL v6 = 0;
  v6[1] = 0;
  uint64_t v7 = a1 + v2[9];
  uint64_t v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v10 = a1 + v2[10];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return result;
}

unint64_t static SecureCloudInviteRequestProtobuf.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_247441830()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_2692504C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692504C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B2420;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "date";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "handshakeToken";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "identifier";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "buildNumber";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "userInfo";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "version";
  *((void *)v18 + 1) = 7;
  v18[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudInviteRequestProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269250380 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2692504C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t SecureCloudInviteRequestProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        type metadata accessor for SecureCloudInviteRequestProtobuf();
        sub_2474B0D70();
        break;
      case 2:
      case 3:
      case 4:
        type metadata accessor for SecureCloudInviteRequestProtobuf();
        sub_2474B0D80();
        break;
      case 5:
        sub_247441D04();
        break;
      case 6:
        type metadata accessor for SecureCloudInviteRequestProtobuf();
        sub_2474B0D90();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_247441D04()
{
  return sub_2474B0DA0();
}

uint64_t SecureCloudInviteRequestProtobuf.traverse<A>(visitor:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  if ((*(unsigned char *)(v0 + v8[5] + 8) & 1) != 0 || (uint64_t result = sub_2474B0E30(), !v1))
  {
    if (!*(void *)(v0 + v8[6] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
    {
      if (!*(void *)(v0 + v8[7] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
      {
        if (!*(void *)(v0 + v8[8] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
        {
          sub_247440F70(v0 + v8[9], (uint64_t)v4);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v5) == 1)
          {
            sub_2474443AC((uint64_t)v4, &qword_2692504E0);
          }
          else
          {
            sub_247440FD8((uint64_t)v4, (uint64_t)v7);
            sub_247444408(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
            sub_2474B0E60();
            uint64_t result = sub_247441348((uint64_t)v7);
            if (v1) {
              return result;
            }
          }
          if (*(unsigned char *)(v0 + v8[10] + 4)) {
            return sub_2474B0CC0();
          }
          uint64_t result = sub_2474B0E50();
          if (!v1) {
            return sub_2474B0CC0();
          }
        }
      }
    }
  }
  return result;
}

uint64_t SecureCloudInviteRequestProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

uint64_t sub_24744212C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2474B0CD0();
  uint64_t v4 = a1[6];
  uint64_t v5 = a2 + a1[5];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  uint64_t v6 = (void *)(a2 + v4);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = a1[8];
  uint64_t v8 = (void *)(a2 + a1[7]);
  void *v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = a2 + a1[9];
  uint64_t v11 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v13 = a2 + a1[10];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return result;
}

unint64_t sub_2474421E4()
{
  return 0xD000000000000020;
}

uint64_t sub_247442200()
{
  return SecureCloudInviteRequestProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_247442218()
{
  return SecureCloudInviteRequestProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_247442230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_247444408(&qword_269250528, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2474422AC@<X0>(uint64_t a1@<X8>)
{
  if (qword_269250380 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2692504C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_247442354(uint64_t a1)
{
  uint64_t v2 = sub_247444408(&qword_269250500, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2474423C0()
{
  sub_247444408(&qword_269250500, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
  return sub_2474B0DF0();
}

uint64_t _s21ActivitySharingClient32SecureCloudInviteRequestProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  v65 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v64 = (char *)&v61 - v7;
  uint64_t v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v67 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250530);
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v61 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v23 = (int *)v22;
  uint64_t v24 = *(int *)(v22 + 20);
  v25 = (double *)(a1 + v24);
  char v26 = *(unsigned char *)(a1 + v24 + 8);
  v27 = (double *)(a2 + v24);
  int v28 = *(unsigned __int8 *)(a2 + v24 + 8);
  if (v26)
  {
    if (!v28) {
      goto LABEL_34;
    }
  }
  else
  {
    if (*v25 != *v27) {
      LOBYTE(v28) = 1;
    }
    if (v28) {
      goto LABEL_34;
    }
  }
  uint64_t v29 = *(int *)(v22 + 24);
  v30 = (void *)(a1 + v29);
  uint64_t v31 = *(void *)(a1 + v29 + 8);
  v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  if (!v31)
  {
    uint64_t v63 = v4;
    if (v33) {
      goto LABEL_34;
    }
    goto LABEL_14;
  }
  if (!v33) {
    goto LABEL_34;
  }
  uint64_t v63 = v4;
  if (*v30 == *v32 && v31 == v33 || (char v34 = 0, (sub_2474B1470() & 1) != 0))
  {
LABEL_14:
    uint64_t v35 = v23[7];
    v36 = (void *)(a1 + v35);
    uint64_t v37 = *(void *)(a1 + v35 + 8);
    v38 = (void *)(a2 + v35);
    uint64_t v39 = v38[1];
    if (v37)
    {
      if (!v39) {
        goto LABEL_34;
      }
      if (*v36 != *v38 || v37 != v39)
      {
        char v34 = 0;
        if ((sub_2474B1470() & 1) == 0) {
          return v34 & 1;
        }
      }
    }
    else if (v39)
    {
      goto LABEL_34;
    }
    uint64_t v40 = v23[8];
    v41 = (void *)(a1 + v40);
    uint64_t v42 = *(void *)(a1 + v40 + 8);
    v43 = (void *)(a2 + v40);
    uint64_t v44 = v43[1];
    if (v42)
    {
      if (!v44) {
        goto LABEL_34;
      }
      if (*v41 != *v43 || v42 != v44)
      {
        char v34 = 0;
        if ((sub_2474B1470() & 1) == 0) {
          return v34 & 1;
        }
      }
    }
    else if (v44)
    {
      goto LABEL_34;
    }
    sub_247440F70(a1 + v23[9], (uint64_t)v21);
    sub_247440F70(a2 + v23[9], (uint64_t)v19);
    uint64_t v45 = *(int *)(v11 + 48);
    uint64_t v46 = v68;
    uint64_t v47 = v68 + v45;
    sub_247440F70((uint64_t)v21, v68);
    uint64_t v62 = v47;
    sub_247440F70((uint64_t)v19, v47);
    uint64_t v67 = *(void *)(v67 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v67)(v46, 1, v8) == 1)
    {
      sub_2474443AC((uint64_t)v19, &qword_2692504E0);
      sub_2474443AC((uint64_t)v21, &qword_2692504E0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v67)(v62, 1, v8) == 1)
      {
        sub_2474443AC(v68, &qword_2692504E0);
LABEL_37:
        uint64_t v50 = v23[10];
        v51 = (_DWORD *)(a1 + v50);
        char v52 = *(unsigned char *)(a1 + v50 + 4);
        v53 = (_DWORD *)(a2 + v50);
        int v54 = *(unsigned __int8 *)(a2 + v50 + 4);
        if ((v52 & 1) == 0)
        {
          if (*v51 != *v53) {
            LOBYTE(v54) = 1;
          }
          if (v54) {
            goto LABEL_34;
          }
LABEL_43:
          uint64_t v55 = v66;
          v56 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
          uint64_t v57 = v63;
          v58 = v64;
          v56(v64, a1, v63);
          v59 = v65;
          v56(v65, a2, v57);
          sub_247444408(&qword_269250420, MEMORY[0x263F50560]);
          char v34 = sub_2474B0F30();
          v60 = *(void (**)(char *, uint64_t))(v55 + 8);
          v60(v59, v57);
          v60(v58, v57);
          return v34 & 1;
        }
        if (v54) {
          goto LABEL_43;
        }
LABEL_34:
        char v34 = 0;
        return v34 & 1;
      }
    }
    else
    {
      sub_247440F70(v46, (uint64_t)v16);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v67)(v62, 1, v8) != 1)
      {
        sub_247440FD8(v62, (uint64_t)v10);
        char v49 = _s21ActivitySharingClient33SecureCloudInviteUserInfoProtobufV2eeoiySbAC_ACtFZ_0((uint64_t)v16, (uint64_t)v10);
        sub_247441348((uint64_t)v10);
        sub_2474443AC((uint64_t)v19, &qword_2692504E0);
        sub_2474443AC((uint64_t)v21, &qword_2692504E0);
        sub_247441348((uint64_t)v16);
        sub_2474443AC(v46, &qword_2692504E0);
        if ((v49 & 1) == 0) {
          goto LABEL_34;
        }
        goto LABEL_37;
      }
      sub_2474443AC((uint64_t)v19, &qword_2692504E0);
      sub_2474443AC((uint64_t)v21, &qword_2692504E0);
      sub_247441348((uint64_t)v16);
    }
    sub_2474443AC(v68, &qword_269250530);
    goto LABEL_34;
  }
  return v34 & 1;
}

uint64_t sub_247442A3C()
{
  return sub_247444408(&qword_2692504F8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_247442A84()
{
  return sub_247444408(&qword_269250500, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_247442ACC()
{
  return sub_247444408(&qword_2692504F0, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_247442B14()
{
  return sub_247444408(&qword_269250508, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_247442B5C@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v5 = a1 + *(int *)(result + 20);
  double v6 = *(double *)v5;
  if (*(unsigned char *)(v5 + 8)) {
    double v6 = 0.0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247442BA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 20);
  *(void *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_247442C04@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v5 = (int *)(a1 + *(int *)(result + 40));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247442C4C(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteRequestProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    uint64_t v55 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16);
    uint64_t v56 = v7;
    v55(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)a1 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)a1 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    __dst = (char *)a1 + v23;
    uint64_t v24 = (char *)a2 + v23;
    v25 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    uint64_t v54 = *((void *)v25 - 1);
    char v26 = *(unsigned int (**)(char *, uint64_t, int *))(v54 + 48);
    swift_bridgeObjectRetain();
    v27 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v24, 1, v25))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v55)(__dst, v24, v56);
      uint64_t v30 = v25[5];
      uint64_t v31 = &__dst[v30];
      v32 = &v24[v30];
      unint64_t v33 = *((void *)v32 + 1);
      if (v33 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      }
      else
      {
        uint64_t v34 = *(void *)v32;
        sub_247442FA0(*(void *)v32, *((void *)v32 + 1));
        *(void *)uint64_t v31 = v34;
        *((void *)v31 + 1) = v33;
      }
      uint64_t v35 = v25[6];
      v36 = &__dst[v35];
      uint64_t v37 = &v27[v35];
      unint64_t v38 = *((void *)v37 + 1);
      if (v38 >> 60 == 15)
      {
        *(_OWORD *)v36 = *(_OWORD *)v37;
      }
      else
      {
        uint64_t v39 = *(void *)v37;
        sub_247442FA0(*(void *)v37, *((void *)v37 + 1));
        *(void *)v36 = v39;
        *((void *)v36 + 1) = v38;
      }
      uint64_t v40 = v25[7];
      v41 = &__dst[v40];
      uint64_t v42 = &v27[v40];
      unint64_t v43 = *((void *)v42 + 1);
      if (v43 >> 60 == 15)
      {
        *(_OWORD *)v41 = *(_OWORD *)v42;
      }
      else
      {
        uint64_t v44 = *(void *)v42;
        sub_247442FA0(*(void *)v42, *((void *)v42 + 1));
        *(void *)v41 = v44;
        *((void *)v41 + 1) = v43;
      }
      uint64_t v45 = v25[8];
      uint64_t v46 = &__dst[v45];
      uint64_t v47 = &v27[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      char v49 = *(void (**)(char *, void, uint64_t, int *))(v54 + 56);
      swift_bridgeObjectRetain();
      v49(__dst, 0, 1, v25);
    }
    uint64_t v50 = a3[10];
    v51 = (char *)a1 + v50;
    char v52 = (char *)a2 + v50;
    *(_DWORD *)v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
  }
  return a1;
}

uint64_t sub_247442FA0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7);
  if (!result)
  {
    v5(v6, v4);
    uint64_t v9 = (uint64_t *)(v6 + v7[5]);
    unint64_t v10 = v9[1];
    if (v10 >> 60 != 15) {
      sub_24743E4AC(*v9, v10);
    }
    uint64_t v11 = (uint64_t *)(v6 + v7[6]);
    unint64_t v12 = v11[1];
    if (v12 >> 60 != 15) {
      sub_24743E4AC(*v11, v12);
    }
    uint64_t v13 = (uint64_t *)(v6 + v7[7]);
    unint64_t v14 = v13[1];
    if (v14 >> 60 != 15) {
      sub_24743E4AC(*v13, v14);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  v53 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v54 = v6;
  v53(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  unint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (void *)(a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  __dst = (char *)(a1 + v22);
  uint64_t v56 = a3;
  uint64_t v23 = (char *)(a2 + v22);
  uint64_t v24 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v25 = *((void *)v24 - 1);
  char v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  v27 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(__dst, v23, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v53)(__dst, v23, v54);
    uint64_t v29 = v24[5];
    uint64_t v30 = &__dst[v29];
    uint64_t v31 = &v23[v29];
    unint64_t v32 = *((void *)v31 + 1);
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    }
    else
    {
      uint64_t v33 = *(void *)v31;
      sub_247442FA0(*(void *)v31, *((void *)v31 + 1));
      *(void *)uint64_t v30 = v33;
      *((void *)v30 + 1) = v32;
    }
    uint64_t v34 = v24[6];
    uint64_t v35 = &__dst[v34];
    v36 = &v27[v34];
    unint64_t v37 = *((void *)v36 + 1);
    if (v37 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    }
    else
    {
      uint64_t v38 = *(void *)v36;
      sub_247442FA0(*(void *)v36, *((void *)v36 + 1));
      *(void *)uint64_t v35 = v38;
      *((void *)v35 + 1) = v37;
    }
    uint64_t v39 = v24[7];
    uint64_t v40 = &__dst[v39];
    v41 = &v27[v39];
    unint64_t v42 = *((void *)v41 + 1);
    if (v42 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    }
    else
    {
      uint64_t v43 = *(void *)v41;
      sub_247442FA0(*(void *)v41, *((void *)v41 + 1));
      *(void *)uint64_t v40 = v43;
      *((void *)v40 + 1) = v42;
    }
    uint64_t v44 = v24[8];
    uint64_t v45 = &__dst[v44];
    uint64_t v46 = &v27[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    uint64_t v48 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    v48(__dst, 0, 1, v24);
  }
  uint64_t v49 = v56[10];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
  *(unsigned char *)(v50 + 4) = *(unsigned char *)(v51 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = a2;
  v91 = a3;
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v88 = *((void *)v24 - 1);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, int *))(v88 + 48);
  char v26 = v22;
  LODWORD(v22) = v25(v22, 1, v24);
  __src = v23;
  v27 = v23;
  uint64_t v28 = v24;
  int v29 = v25(v27, 1, v24);
  if (!v22)
  {
    if (v29)
    {
      sub_247441348((uint64_t)v26);
      goto LABEL_7;
    }
    uint64_t v38 = v26;
    uint64_t v39 = __src;
    v7((uint64_t)v26, (uint64_t)__src, v6);
    uint64_t v40 = v28;
    uint64_t v41 = v28[5];
    unint64_t v42 = (uint64_t *)&v26[v41];
    uint64_t v43 = (uint64_t *)&__src[v41];
    unint64_t v44 = *(void *)&__src[v41 + 8];
    if ((unint64_t)v42[1] >> 60 == 15)
    {
      uint64_t v36 = v90;
      unint64_t v37 = v91;
      if (v44 >> 60 != 15)
      {
        uint64_t v45 = *v43;
        sub_247442FA0(*v43, v44);
        *unint64_t v42 = v45;
        v42[1] = v44;
        uint64_t v39 = __src;
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v36 = v90;
      unint64_t v37 = v91;
      if (v44 >> 60 != 15)
      {
        uint64_t v61 = *v43;
        sub_247442FA0(*v43, v44);
        uint64_t v62 = *v42;
        unint64_t v63 = v42[1];
        *unint64_t v42 = v61;
        v42[1] = v44;
        uint64_t v39 = __src;
        sub_24743E4AC(v62, v63);
LABEL_23:
        uint64_t v64 = v40[6];
        v65 = (uint64_t *)&v38[v64];
        uint64_t v66 = (uint64_t *)&v39[v64];
        unint64_t v67 = *(void *)&v39[v64 + 8];
        if (*(void *)&v38[v64 + 8] >> 60 == 15)
        {
          if (v67 >> 60 != 15)
          {
            uint64_t v68 = *v66;
            sub_247442FA0(*v66, v67);
            uint64_t *v65 = v68;
            v65[1] = v67;
            uint64_t v39 = __src;
            goto LABEL_30;
          }
        }
        else
        {
          if (v67 >> 60 != 15)
          {
            uint64_t v69 = *v66;
            sub_247442FA0(*v66, v67);
            uint64_t v70 = *v65;
            unint64_t v71 = v65[1];
            uint64_t *v65 = v69;
            v65[1] = v67;
            uint64_t v39 = __src;
            sub_24743E4AC(v70, v71);
LABEL_30:
            uint64_t v72 = v40[7];
            v73 = (uint64_t *)&v38[v72];
            v74 = (uint64_t *)&v39[v72];
            unint64_t v75 = *(void *)&v39[v72 + 8];
            if (*(void *)&v38[v72 + 8] >> 60 == 15)
            {
              if (v75 >> 60 != 15)
              {
                uint64_t v76 = *v74;
                sub_247442FA0(*v74, v75);
                uint64_t *v73 = v76;
                v73[1] = v75;
                uint64_t v39 = __src;
LABEL_37:
                uint64_t v80 = v40[8];
                v81 = &v38[v80];
                v82 = &v39[v80];
                *(void *)v81 = *(void *)v82;
                *((void *)v81 + 1) = *((void *)v82 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            else
            {
              if (v75 >> 60 != 15)
              {
                uint64_t v77 = *v74;
                sub_247442FA0(*v74, v75);
                uint64_t v78 = *v73;
                unint64_t v79 = v73[1];
                uint64_t *v73 = v77;
                v73[1] = v75;
                uint64_t v39 = __src;
                sub_24743E4AC(v78, v79);
                goto LABEL_37;
              }
              sub_2474439C4((uint64_t)v73);
            }
            *(_OWORD *)v73 = *(_OWORD *)v74;
            goto LABEL_37;
          }
          sub_2474439C4((uint64_t)v65);
        }
        *(_OWORD *)v65 = *(_OWORD *)v66;
        goto LABEL_30;
      }
      sub_2474439C4((uint64_t)v42);
    }
    *(_OWORD *)unint64_t v42 = *(_OWORD *)v43;
    goto LABEL_23;
  }
  if (v29)
  {
LABEL_7:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(v26, __src, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v36 = v90;
    unint64_t v37 = v91;
    goto LABEL_38;
  }
  uint64_t v30 = v26;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v26, __src, v6);
  uint64_t v31 = v24[5];
  unint64_t v32 = &v26[v31];
  uint64_t v33 = &__src[v31];
  unint64_t v34 = *((void *)v33 + 1);
  if (v34 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
  }
  else
  {
    uint64_t v46 = *(void *)v33;
    sub_247442FA0(*(void *)v33, *((void *)v33 + 1));
    *(void *)unint64_t v32 = v46;
    *((void *)v32 + 1) = v34;
  }
  uint64_t v47 = v24[6];
  uint64_t v48 = &v30[v47];
  uint64_t v49 = &__src[v47];
  unint64_t v50 = *((void *)v49 + 1);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  }
  else
  {
    uint64_t v51 = *(void *)v49;
    sub_247442FA0(*(void *)v49, *((void *)v49 + 1));
    *(void *)uint64_t v48 = v51;
    *((void *)v48 + 1) = v50;
  }
  uint64_t v36 = v90;
  unint64_t v37 = v91;
  uint64_t v52 = v24[7];
  v53 = &v30[v52];
  uint64_t v54 = &__src[v52];
  unint64_t v55 = *((void *)v54 + 1);
  if (v55 >> 60 == 15)
  {
    *(_OWORD *)v53 = *(_OWORD *)v54;
  }
  else
  {
    uint64_t v56 = *(void *)v54;
    sub_247442FA0(*(void *)v54, *((void *)v54 + 1));
    *(void *)v53 = v56;
    *((void *)v53 + 1) = v55;
  }
  uint64_t v57 = v24[8];
  v58 = &v30[v57];
  v59 = &__src[v57];
  *(void *)v58 = *(void *)v59;
  *((void *)v58 + 1) = *((void *)v59 + 1);
  v60 = *(void (**)(char *, void, uint64_t, int *))(v88 + 56);
  swift_bridgeObjectRetain();
  v60(v30, 0, 1, v24);
LABEL_38:
  uint64_t v83 = v37[10];
  uint64_t v84 = a1 + v83;
  v85 = (int *)(v36 + v83);
  int v86 = *v85;
  *(unsigned char *)(v84 + 4) = *((unsigned char *)v85 + 4);
  *(_DWORD *)uint64_t v84 = v86;
  return a1;
}

uint64_t sub_2474439C4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 40);
  v68(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  uint64_t v25 = a3[9];
  char v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  uint64_t v31 = v26;
  int v32 = v30(v26, 1, v28);
  uint64_t v33 = v27;
  int v34 = v30(v27, 1, v28);
  if (!v32)
  {
    if (v34)
    {
      sub_247441348((uint64_t)v31);
      goto LABEL_6;
    }
    unint64_t v42 = v31;
    uint64_t v43 = v33;
    v68((uint64_t)v31, (uint64_t)v33, v6);
    uint64_t v44 = v28[5];
    uint64_t v45 = (uint64_t)&v31[v44];
    uint64_t v46 = &v33[v44];
    unint64_t v47 = *(void *)&v31[v44 + 8];
    if (v47 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      uint64_t v36 = v69;
      unint64_t v37 = v70;
    }
    else
    {
      unint64_t v48 = *((void *)v46 + 1);
      uint64_t v36 = v69;
      unint64_t v37 = v70;
      if (v48 >> 60 == 15)
      {
        sub_2474439C4(v45);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      }
      else
      {
        uint64_t v49 = *(void *)v45;
        *(void *)uint64_t v45 = *(void *)v46;
        *(void *)(v45 + 8) = v48;
        sub_24743E4AC(v49, v47);
      }
    }
    uint64_t v50 = v28[6];
    uint64_t v51 = (uint64_t *)&v42[v50];
    uint64_t v52 = (uint64_t *)&v43[v50];
    unint64_t v53 = *(void *)&v42[v50 + 8];
    if (v53 >> 60 != 15)
    {
      unint64_t v54 = v52[1];
      if (v54 >> 60 != 15)
      {
        uint64_t v55 = *v51;
        uint64_t *v51 = *v52;
        v51[1] = v54;
        sub_24743E4AC(v55, v53);
LABEL_19:
        uint64_t v56 = v28[7];
        uint64_t v57 = (uint64_t *)&v42[v56];
        v58 = (uint64_t *)&v43[v56];
        unint64_t v59 = *(void *)&v42[v56 + 8];
        if (v59 >> 60 != 15)
        {
          unint64_t v60 = v58[1];
          if (v60 >> 60 != 15)
          {
            uint64_t v61 = *v57;
            *uint64_t v57 = *v58;
            v57[1] = v60;
            sub_24743E4AC(v61, v59);
            goto LABEL_24;
          }
          sub_2474439C4((uint64_t)v57);
        }
        *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
LABEL_24:
        uint64_t v62 = v28[8];
        unint64_t v63 = &v42[v62];
        uint64_t v64 = &v43[v62];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        *(void *)unint64_t v63 = v66;
        *((void *)v63 + 1) = v65;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_2474439C4((uint64_t)v51);
    }
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    goto LABEL_19;
  }
  if (v34)
  {
LABEL_6:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(v31, v27, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v31, v27, v6);
  *(_OWORD *)&v31[v28[5]] = *(_OWORD *)&v27[v28[5]];
  *(_OWORD *)&v31[v28[6]] = *(_OWORD *)&v27[v28[6]];
  *(_OWORD *)&v31[v28[7]] = *(_OWORD *)&v27[v28[7]];
  *(_OWORD *)&v31[v28[8]] = *(_OWORD *)&v27[v28[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v31, 0, 1, v28);
LABEL_7:
  uint64_t v36 = v69;
  unint64_t v37 = v70;
LABEL_8:
  uint64_t v38 = v37[10];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = v36 + v38;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(unsigned char *)(v39 + 4) = *(unsigned char *)(v40 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247443FE4);
}

uint64_t sub_247443FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 36);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247444138);
}

uint64_t sub_247444138(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_24744426C()
{
  sub_2474B0CE0();
  if (v0 <= 0x3F)
  {
    sub_247444354();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_247444354()
{
  if (!qword_269250520)
  {
    type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    unint64_t v0 = sub_2474B1210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269250520);
    }
  }
}

uint64_t sub_2474443AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_247444408(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SecureCloudPingRequest.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ActivitySharingClient::SecureCloudPingRequest __swiftcall SecureCloudPingRequest.init(identifier:)(ActivitySharingClient::SecureCloudPingRequest identifier)
{
  *uint64_t v1 = identifier;
  return identifier;
}

uint64_t SecureCloudPingRequest.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t sub_247444518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = (void *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *int v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t sub_247444578(uint64_t a1)
{
  return sub_247444968(a1);
}

uint64_t SecureCloudPingRequest.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  if (v4[1])
  {
    uint64_t v5 = *v4;
    unint64_t v6 = v4[1];
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_247444608(a1);
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_247444608(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudPingRequestProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_247444664()
{
  return sub_2474446CC(&qword_2692503F8);
}

uint64_t sub_247444698()
{
  return sub_2474446CC(&qword_269250400);
}

uint64_t sub_2474446CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecureCloudPingRequestProtobuf();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247444710()
{
  return sub_2474B0E00();
}

uint64_t sub_2474447AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  if (v4[1])
  {
    uint64_t v5 = *v4;
    unint64_t v6 = v4[1];
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_247444608(a1);
  *a2 = v5;
  a2[1] = v6;
  return result;
}

void *initializeBufferWithCopyOfBuffer for SecureCloudPingRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SecureCloudPingRequest()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SecureCloudPingRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SecureCloudPingRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudPingRequest()
{
  return &type metadata for SecureCloudPingRequest;
}

uint64_t sub_247444968(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = (void *)(a1 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudInviteRequest.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0C30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudInviteRequest.handshakeToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SecureCloudInviteRequest()
{
  uint64_t result = qword_26B12C3F0;
  if (!qword_26B12C3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudInviteRequest.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudInviteRequest.buildNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

id SecureCloudInviteRequest.userInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 32);
  uint64_t v4 = *(void *)(v3 + 8);
  id v11 = *(id *)v3;
  uint64_t v5 = *(void *)(v3 + 16);
  unint64_t v6 = *(void **)(v3 + 24);
  uint64_t v7 = *(void **)(v3 + 32);
  *a1 = *(void *)v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  swift_bridgeObjectRetain();
  id v8 = v6;
  id v9 = v7;
  return v11;
}

uint64_t SecureCloudInviteRequest.version.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequest() + 36));
}

__n128 SecureCloudInviteRequest.init(date:handshakeToken:identifier:buildNumber:userInfo:version:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  long long v27 = *a8;
  uint64_t v18 = *((void *)a8 + 2);
  uint64_t v19 = sub_2474B0C30();
  __n128 v26 = *(__n128 *)((char *)a8 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a9, a1, v19);
  uint64_t v20 = (int *)type metadata accessor for SecureCloudInviteRequest();
  uint64_t v21 = (void *)(a9 + v20[5]);
  *uint64_t v21 = a2;
  v21[1] = a3;
  uint64_t v22 = (void *)(a9 + v20[6]);
  *uint64_t v22 = a4;
  v22[1] = a5;
  uint64_t v23 = (void *)(a9 + v20[7]);
  *uint64_t v23 = a6;
  v23[1] = a7;
  uint64_t v24 = a9 + v20[8];
  *(_OWORD *)uint64_t v24 = v27;
  *(void *)(v24 + 16) = v18;
  __n128 result = v26;
  *(__n128 *)(v24 + 24) = v26;
  *(void *)(a9 + v20[9]) = a10;
  return result;
}

uint64_t SecureCloudInviteRequest.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t sub_247444D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v31[0] = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2474B0BF0();
  uint64_t v8 = v7;
  id v9 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v10 = a1 + v9[5];
  *(void *)uint64_t v10 = v8;
  *(unsigned char *)(v10 + 8) = 0;
  id v11 = (int *)type metadata accessor for SecureCloudInviteRequest();
  uint64_t v12 = (uint64_t *)(a2 + v11[5]);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = (void *)(a1 + v9[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v15 = v14;
  v15[1] = v13;
  uint64_t v16 = (uint64_t *)(a2 + v11[6]);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v19 = (void *)(a1 + v9[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v19 = v18;
  v19[1] = v17;
  uint64_t v20 = (uint64_t *)(a2 + v11[7]);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  uint64_t v23 = (void *)(a1 + v9[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v23 = v22;
  v23[1] = v21;
  uint64_t v24 = a2 + v11[8];
  long long v25 = *(_OWORD *)(v24 + 16);
  v32[0] = *(_OWORD *)v24;
  v32[1] = v25;
  uint64_t v33 = *(void *)(v24 + 32);
  v31[4] = v32;
  sub_247445FDC((uint64_t)v32);
  sub_247446024(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  uint64_t v26 = v31[1];
  sub_2474B0E00();
  uint64_t result = sub_24744606C((uint64_t)v32);
  if (!v26)
  {
    uint64_t v28 = a1 + v9[9];
    sub_2474454D8(v28);
    sub_247440FD8((uint64_t)v6, v28);
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v31[0] + 56))(v28, 0, 1, v4);
    unint64_t v29 = *(void *)(a2 + v11[9]);
    if ((v29 & 0x8000000000000000) != 0 || HIDWORD(v29))
    {
      uint64_t result = sub_2474B1350();
      __break(1u);
    }
    else
    {
      uint64_t v30 = a1 + v9[10];
      *(_DWORD *)uint64_t v30 = v29;
      *(unsigned char *)(v30 + 4) = 0;
    }
  }
  return result;
}

uint64_t sub_2474450B0(uint64_t a1)
{
  return sub_247444D94(a1, *(void *)(v1 + 16));
}

double SecureCloudInviteRequest.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v45 = sub_2474B0C30();
  uint64_t v10 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf();
  unint64_t v42 = v12;
  sub_2474B0BE0();
  uint64_t v14 = (uint64_t *)(a1 + v13[6]);
  unint64_t v15 = v14[1];
  if (v15)
  {
    uint64_t v40 = *v14;
    unint64_t v51 = v15;
  }
  else
  {
    uint64_t v40 = 0;
    unint64_t v51 = 0xE000000000000000;
  }
  uint64_t v16 = (uint64_t *)(a1 + v13[7]);
  unint64_t v17 = v16[1];
  uint64_t v43 = v10;
  if (v17)
  {
    uint64_t v39 = *v16;
    unint64_t v47 = v17;
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v47 = 0xE000000000000000;
  }
  uint64_t v18 = (uint64_t *)(a1 + v13[8]);
  unint64_t v19 = v18[1];
  if (v19)
  {
    uint64_t v38 = *v18;
    unint64_t v46 = v19;
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v46 = 0xE000000000000000;
  }
  sub_247440F70(a1 + v13[9], (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2474B0CD0();
    *(_OWORD *)&v9[v6[5]] = xmmword_2474B2410;
    *(_OWORD *)&v9[v6[6]] = xmmword_2474B2410;
    *(_OWORD *)&v9[v6[7]] = xmmword_2474B2410;
    uint64_t v20 = &v9[v6[8]];
    *(void *)uint64_t v20 = 0;
    *((void *)v20 + 1) = 0;
    sub_2474454D8((uint64_t)v5);
  }
  else
  {
    sub_247440FD8((uint64_t)v5, (uint64_t)v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = v45;
  uint64_t v23 = v43;
  uint64_t v22 = v44;
  uint64_t v24 = v42;
  SecureCloudInviteUserInfo.init(_:)((uint64_t)v9, &v48);
  if (v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247445538(a1);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v21);
  }
  else
  {
    uint64_t v26 = v49;
    long long v44 = v50;
    long long v45 = v48;
    long long v27 = (unsigned int *)(a1 + v13[10]);
    if (*((unsigned char *)v27 + 4)) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = *v27;
    }
    sub_247445538(a1);
    uint64_t v29 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v41, v24, v21);
    uint64_t v30 = (int *)type metadata accessor for SecureCloudInviteRequest();
    uint64_t v31 = (void *)(v29 + v30[5]);
    unint64_t v32 = v51;
    *uint64_t v31 = v40;
    v31[1] = v32;
    uint64_t v33 = (void *)(v29 + v30[6]);
    unint64_t v34 = v47;
    *uint64_t v33 = v39;
    v33[1] = v34;
    uint64_t v35 = (void *)(v29 + v30[7]);
    unint64_t v36 = v46;
    *uint64_t v35 = v38;
    v35[1] = v36;
    uint64_t v37 = v29 + v30[8];
    *(_OWORD *)uint64_t v37 = v45;
    *(void *)(v37 + 16) = v26;
    double result = *(double *)&v44;
    *(_OWORD *)(v37 + 24) = v44;
    *(void *)(v29 + v30[9]) = v28;
  }
  return result;
}

uint64_t sub_2474454D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_247445538(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_247445594()
{
  return sub_247446024(&qword_269250500, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_2474455DC()
{
  return sub_247446024(&qword_269250508, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_247445624()
{
  return sub_2474B0E00();
}

double sub_2474456CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCloudInviteRequest.init(_:)(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0C30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    unint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)a1 + v17);
    uint64_t v22 = (char *)a2 + v17;
    uint64_t v24 = *(void **)v22;
    uint64_t v23 = *((void *)v22 + 1);
    *uint64_t v21 = *(void *)v22;
    v21[1] = v23;
    long long v25 = (void *)*((void *)v22 + 3);
    v21[2] = *((void *)v22 + 2);
    v21[3] = v25;
    uint64_t v26 = (void *)*((void *)v22 + 4);
    v21[4] = v26;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v24;
    swift_bridgeObjectRetain();
    id v28 = v25;
    id v29 = v26;
  }
  return a1;
}

void destroy for SecureCloudInviteRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);

  swift_bridgeObjectRelease();
  unint64_t v6 = *(void **)(v5 + 32);
}

uint64_t initializeWithCopy for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = a2 + v16;
  uint64_t v23 = *(void **)v21;
  uint64_t v22 = *(void *)(v21 + 8);
  *uint64_t v20 = *(void *)v21;
  v20[1] = v22;
  uint64_t v24 = *(void **)(v21 + 24);
  v20[2] = *(void *)(v21 + 16);
  v20[3] = v24;
  long long v25 = *(void **)(v21 + 32);
  v20[4] = v25;
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = v23;
  swift_bridgeObjectRetain();
  id v27 = v24;
  id v28 = v25;
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = *(void **)(a2 + v16);
  uint64_t v20 = *(void **)v17;
  *(void *)uint64_t v17 = v19;
  id v21 = v19;

  *(void *)(v17 + 8) = v18[1];
  *(void *)(v17 + 16) = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)v18[3];
  uint64_t v23 = *(void **)(v17 + 24);
  *(void *)(v17 + 24) = v22;
  id v24 = v22;

  long long v25 = (void *)v18[4];
  id v26 = *(void **)(v17 + 32);
  *(void *)(v17 + 32) = v25;
  id v27 = v25;

  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  id v24 = (void *)(a2 + v22);
  long long v25 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v26 = v24[2];
  v23[1] = v24[1];
  v23[2] = v26;
  swift_bridgeObjectRelease();
  id v27 = (void *)v23[3];
  v23[3] = v24[3];

  id v28 = (void *)v23[4];
  v23[4] = v24[4];

  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247445D78);
}

uint64_t sub_247445D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247445E50);
}

uint64_t sub_247445E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0C30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_247445F10()
{
  uint64_t result = sub_2474B0C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_247445FC0(uint64_t a1)
{
  return sub_24744A054(a1, *(void *)(v1 + 16));
}

uint64_t sub_247445FDC(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  id v5 = v3;
  id v6 = v4;
  id v7 = v2;
  return a1;
}

uint64_t sub_247446024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24744606C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 24);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2474460B8(uint64_t a1)
{
  return sub_2474450B0(a1);
}

ActivitySharingClient::SecureCloudUpgradeMessage::MessageType_optional __swiftcall SecureCloudUpgradeMessage.MessageType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (ActivitySharingClient::SecureCloudUpgradeMessage::MessageType_optional)rawValue;
}

uint64_t SecureCloudUpgradeMessage.MessageType.rawValue.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

BOOL sub_247446100(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_247446118()
{
  return sub_2474B1530();
}

uint64_t sub_247446168()
{
  return sub_2474B1520();
}

uint64_t sub_2474461A0()
{
  return sub_2474B1530();
}

void *sub_2474461EC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_24744620C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1;
  if (*v1) {
    uint64_t v2 = 2;
  }
  *a1 = v2;
}

uint64_t sub_247446224()
{
  return sub_2474B1030();
}

uint64_t sub_247446284()
{
  return sub_2474B0FF0();
}

uint64_t SecureCloudUpgradeMessage.buildNumber.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudUpgradeMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 20);
  uint64_t v4 = sub_2474B0C30();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SecureCloudUpgradeMessage()
{
  uint64_t result = qword_26B12C5D8;
  if (!qword_26B12C5D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudUpgradeMessage.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudUpgradeMessage.messageType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessage();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

id SecureCloudUpgradeMessage.secureCloudShareItem.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 32));
  return v1;
}

uint64_t SecureCloudUpgradeMessage.upgradeToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudUpgradeMessage.version.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessage() + 40));
}

uint64_t SecureCloudUpgradeMessage.init(buildNumber:date:messageType:secureCloudShareItem:upgradeToken:version:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  char v16 = *a4;
  *a9 = a1;
  a9[1] = a2;
  uint64_t v17 = (int *)type metadata accessor for SecureCloudUpgradeMessage();
  uint64_t v18 = (char *)a9 + v17[5];
  uint64_t v19 = sub_2474B0C30();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a3, v19);
  uint64_t v21 = (void *)((char *)a9 + v17[6]);
  *uint64_t v21 = a10;
  v21[1] = a11;
  *((unsigned char *)a9 + v17[7]) = v16;
  uint64_t v22 = (void *)((char *)a9 + v17[9]);
  *uint64_t v22 = a6;
  v22[1] = a7;
  *(void *)((char *)a9 + v17[10]) = a8;
  *(void *)((char *)a9 + v17[8]) = a5;
  return result;
}

uint64_t SecureCloudUpgradeMessage.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t sub_247446654(uint64_t a1, void *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  id v6 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  id v7 = (void *)(a1 + v6[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *id v7 = v5;
  v7[1] = v4;
  uint64_t v8 = (int *)type metadata accessor for SecureCloudUpgradeMessage();
  sub_2474B0BF0();
  uint64_t v9 = a1 + v6[6];
  *(void *)uint64_t v9 = v10;
  *(unsigned char *)(v9 + 8) = 0;
  uint64_t v11 = (void *)((char *)a2 + v8[9]);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = (void *)(a1 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void *v14 = v13;
  v14[1] = v12;
  uint64_t v15 = (void *)((char *)a2 + v8[6]);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v18 = (void *)(a1 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v18 = v17;
  v18[1] = v16;
  unint64_t v19 = *(void *)((char *)a2 + v8[10]);
  if ((v19 & 0x8000000000000000) != 0 || HIDWORD(v19))
  {
    uint64_t result = sub_2474B1350();
    __break(1u);
  }
  else
  {
    uint64_t v20 = a1 + v6[11];
    *(_DWORD *)uint64_t v20 = v19;
    *(unsigned char *)(v20 + 4) = 0;
    id v21 = objc_msgSend(*(id *)((char *)a2 + v8[8]), sel_codableShareItem);
    if (v21
      && (uint64_t v22 = v21, v23 = objc_msgSend(v21, sel_data), v22, v23))
    {
      uint64_t v24 = sub_2474B0BC0();
      uint64_t v26 = v25;

      uint64_t v27 = a1 + v6[9];
      uint64_t result = sub_24743E498(*(void *)v27, *(void *)(v27 + 8));
      *(void *)uint64_t v27 = v24;
      *(void *)(v27 + 8) = v26;
      uint64_t v29 = a1 + v6[10];
      *(void *)uint64_t v29 = (*((unsigned char *)a2 + v8[7]) & 1) != 0;
      *(_WORD *)(v29 + 8) = 1;
    }
    else
    {
      sub_247446DD8();
      swift_allocError();
      unsigned char *v30 = 1;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2474468C8(uint64_t a1)
{
  return sub_247446654(a1, *(void **)(v1 + 16));
}

uint64_t SecureCloudUpgradeMessage.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v51 = a2;
  uint64_t v50 = sub_2474B0C60();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unint64_t v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_2474B0C30();
  uint64_t v55 = *(void *)(v56 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v56);
  uint64_t v49 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  sub_2474B0BE0();
  uint64_t v10 = (uint64_t *)(a1 + v9[7]);
  unint64_t v11 = v10[1];
  if (v11)
  {
    uint64_t v46 = *v10;
    unint64_t v54 = v11;
  }
  else
  {
    uint64_t v46 = 0;
    unint64_t v54 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(a1 + v9[5]);
  unint64_t v13 = v12[1];
  uint64_t v52 = v2;
  if (v13)
  {
    uint64_t v44 = *v12;
    unint64_t v53 = v13;
  }
  else
  {
    uint64_t v44 = 0;
    unint64_t v53 = 0xE000000000000000;
  }
  uint64_t v14 = (unsigned int *)(a1 + v9[11]);
  if (*((unsigned char *)v14 + 4)) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *v14;
  }
  uint64_t v45 = v15;
  uint64_t v16 = (uint64_t *)(a1 + v9[9]);
  uint64_t v18 = *v16;
  unint64_t v17 = v16[1];
  if (v17 >> 60 == 15) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = *v16;
  }
  if (v17 >> 60 == 15) {
    unint64_t v20 = 0xC000000000000000;
  }
  else {
    unint64_t v20 = v16[1];
  }
  id v21 = objc_allocWithZone(MEMORY[0x263F23B98]);
  swift_bridgeObjectRetain();
  sub_247446DC4(v18, v17);
  uint64_t v22 = (void *)sub_2474B0BB0();
  sub_24743E4AC(v19, v20);
  id v23 = objc_msgSend(v21, sel_initWithData_, v22);

  if (!v23) {
    goto LABEL_21;
  }
  id v24 = objc_msgSend(self, sel_shareItemWithCodableShareItem_, v23);
  if (!v24)
  {

LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247446DD8();
    swift_allocError();
    unsigned char *v27 = 1;
    swift_willThrow();
    goto LABEL_22;
  }
  uint64_t v25 = v24;
  uint64_t v26 = a1 + v9[10];
  if ((*(unsigned char *)(v26 + 9) & 1) == 0)
  {
    if (*(unsigned char *)(v26 + 8))
    {
      BOOL v43 = *(void *)v26 != 0;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247446DD8();
    swift_allocError();
    *uint64_t v29 = 1;
    swift_willThrow();

LABEL_22:
    sub_247446E2C(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v8, v56);
  }
  BOOL v43 = 0;
LABEL_26:
  uint64_t v30 = v55;
  uint64_t v31 = v49;
  uint64_t v32 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v49, v8, v56);
  uint64_t v33 = v47;
  sub_2474B0C50();
  uint64_t v42 = sub_2474B0C40();
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v50);

  sub_247446E2C(a1);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v32);
  unint64_t v36 = v51;
  unint64_t v37 = v53;
  *(void *)unint64_t v51 = v44;
  *((void *)v36 + 1) = v37;
  uint64_t v38 = (int *)type metadata accessor for SecureCloudUpgradeMessage();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(&v36[v38[5]], v31, v32);
  uint64_t v39 = (uint64_t *)&v36[v38[6]];
  *uint64_t v39 = v42;
  v39[1] = v35;
  v36[v38[7]] = v43;
  uint64_t v40 = &v36[v38[9]];
  unint64_t v41 = v54;
  *(void *)uint64_t v40 = v46;
  *((void *)v40 + 1) = v41;
  *(void *)&v36[v38[10]] = v45;
  *(void *)&v36[v38[8]] = v25;
  return result;
}

uint64_t sub_247446DC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_247442FA0(a1, a2);
  }
  return a1;
}

unint64_t sub_247446DD8()
{
  unint64_t result = qword_269250540;
  if (!qword_269250540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250540);
  }
  return result;
}

uint64_t sub_247446E2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_247446E8C()
{
  unint64_t result = qword_269250548;
  if (!qword_269250548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250548);
  }
  return result;
}

uint64_t sub_247446EE0()
{
  return sub_247446F48(&qword_269250538);
}

uint64_t sub_247446F14()
{
  return sub_247446F48(&qword_269250550);
}

uint64_t sub_247446F48(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecureCloudUpgradeMessageProtobuf();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247446F8C()
{
  return sub_2474B0E00();
}

uint64_t sub_247447020@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return SecureCloudUpgradeMessage.init(_:)(a1, a2);
}

void *initializeBufferWithCopyOfBuffer for SecureCloudUpgradeMessage(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2474B0C30();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    unint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)((char *)v4 + v18) = v20;
    id v21 = (void *)((char *)v4 + v19);
    uint64_t v22 = (void *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
    id v24 = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SecureCloudUpgradeMessage(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SecureCloudUpgradeMessage(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2474B0C30();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = *(void **)((char *)a2 + v17);
  *(void *)((char *)a1 + v17) = v19;
  unint64_t v20 = (void *)((char *)a1 + v18);
  id v21 = (void *)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *unint64_t v20 = *v21;
  v20[1] = v22;
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  id v23 = v19;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SecureCloudUpgradeMessage(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2474B0C30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for SecureCloudUpgradeMessage(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2474B0C30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *assignWithTake for SecureCloudUpgradeMessage(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2474B0C30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  unint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247447620);
}

uint64_t sub_247447620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2474B0C30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2474476E4);
}

uint64_t sub_2474476E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2474B0C30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24744778C()
{
  uint64_t result = sub_2474B0C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessage.MessageType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SecureCloudUpgradeMessage.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2474479B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2474479DC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2474479E4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeMessage.MessageType()
{
  return &type metadata for SecureCloudUpgradeMessage.MessageType;
}

unint64_t sub_247447A00()
{
  unint64_t result = qword_269250558;
  if (!qword_269250558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250558);
  }
  return result;
}

uint64_t sub_247447A54(uint64_t a1)
{
  return sub_2474468C8(a1);
}

uint64_t sub_247447A6C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656E696C636564;
  }
  else {
    uint64_t v3 = 0x747065636361;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656E696C636564;
  }
  else {
    uint64_t v5 = 0x747065636361;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2474B1470();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

ActivitySharingClient::SecureCloudPingResponseType_optional __swiftcall SecureCloudPingResponseType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_2474B13B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t SecureCloudPingResponseType.rawValue.getter()
{
  if (*v0) {
    return 0x656E696C636564;
  }
  else {
    return 0x747065636361;
  }
}

uint64_t sub_247447BAC(char *a1, char *a2)
{
  return sub_247447A6C(*a1, *a2);
}

unint64_t sub_247447BBC()
{
  unint64_t result = qword_269250560;
  if (!qword_269250560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250560);
  }
  return result;
}

uint64_t sub_247447C10()
{
  return sub_2474B1530();
}

uint64_t sub_247447C90()
{
  sub_2474B0F80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247447CFC()
{
  return sub_2474B1530();
}

ActivitySharingClient::SecureCloudPingResponseType_optional sub_247447D78(Swift::String *a1)
{
  return SecureCloudPingResponseType.init(rawValue:)(*a1);
}

void sub_247447D84(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x747065636361;
  if (*v1) {
    uint64_t v2 = 0x656E696C636564;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for SecureCloudPingResponseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247447E8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudPingResponseType()
{
  return &type metadata for SecureCloudPingResponseType;
}

ActivitySharingClient::SecureCloudInviteResponseType_optional __swiftcall SecureCloudInviteResponseType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (ActivitySharingClient::SecureCloudInviteResponseType_optional)rawValue;
}

uint64_t SecureCloudInviteResponseType.rawValue.getter()
{
  return *v0;
}

BOOL sub_247447EE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_247447EF4()
{
  return sub_2474B1530();
}

uint64_t sub_247447F3C()
{
  return sub_2474B1520();
}

uint64_t sub_247447F68()
{
  return sub_2474B1530();
}

ActivitySharingClient::SecureCloudInviteResponseType_optional sub_247447FAC(Swift::Int *a1)
{
  return SecureCloudInviteResponseType.init(rawValue:)(*a1);
}

void sub_247447FB4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t SecureCloudInviteResponse.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0C30();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudInviteResponse.handshakeToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SecureCloudInviteResponse()
{
  uint64_t result = qword_26B12C530;
  if (!qword_26B12C530) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudInviteResponse.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudInviteResponse.buildNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudInviteResponse.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponse();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

id SecureCloudInviteResponse.userInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 36);
  unsigned int v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  char v7 = *(void **)(v3 + 24);
  int v8 = *(void **)(v3 + 32);
  *a1 = *(void *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_2474481C0(v4, v5, v6, v7, v8);
}

id sub_2474481C0(id result, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (result)
  {
    id v9 = result;
    swift_bridgeObjectRetain();
    id v7 = a4;
    id v8 = a5;
    return v9;
  }
  return result;
}

uint64_t SecureCloudInviteResponse.version.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponse() + 40));
}

__n128 SecureCloudInviteResponse.init(date:handshakeToken:buildNumber:type:userInfo:version:identifier:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  char v17 = *a6;
  __n128 v26 = (__n128)a7[1];
  long long v27 = *a7;
  uint64_t v18 = *((void *)a7 + 4);
  uint64_t v19 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a9, a1, v19);
  unint64_t v20 = (int *)type metadata accessor for SecureCloudInviteResponse();
  uint64_t v21 = (void *)(a9 + v20[5]);
  *uint64_t v21 = a2;
  v21[1] = a3;
  uint64_t v22 = (void *)(a9 + v20[6]);
  *uint64_t v22 = a10;
  v22[1] = a11;
  id v23 = (void *)(a9 + v20[7]);
  *id v23 = a4;
  v23[1] = a5;
  *(unsigned char *)(a9 + v20[8]) = v17;
  uint64_t v24 = a9 + v20[9];
  __n128 result = v26;
  *(_OWORD *)uint64_t v24 = v27;
  *(__n128 *)(v24 + 16) = v26;
  *(void *)(v24 + 32) = v18;
  *(void *)(a9 + v20[10]) = a8;
  return result;
}

uint64_t SecureCloudInviteResponse.protobuf()()
{
  return sub_2474B0E00();
}

void *sub_2474483F4(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v4 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2474B0BF0();
  uint64_t v7 = v6;
  id v8 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v9 = a1 + v8[5];
  *(void *)uint64_t v9 = v7;
  *(unsigned char *)(v9 + 8) = 0;
  uint64_t v10 = (int *)type metadata accessor for SecureCloudInviteResponse();
  uint64_t v11 = (uint64_t *)(a2 + v10[5]);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = (void *)(a1 + v8[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void *v14 = v13;
  v14[1] = v12;
  uint64_t v15 = (uint64_t *)(a2 + v10[6]);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v18 = (void *)(a1 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v18 = v17;
  v18[1] = v16;
  uint64_t v19 = (uint64_t *)(a2 + v10[7]);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t v22 = (void *)(a1 + v8[8]);
  swift_bridgeObjectRetain();
  __n128 result = (void *)swift_bridgeObjectRelease();
  *uint64_t v22 = v21;
  v22[1] = v20;
  uint64_t v24 = a2 + v10[9];
  uint64_t v25 = *(void **)v24;
  if (*(void *)v24)
  {
    uint64_t v40 = a1;
    uint64_t v41 = v4;
    uint64_t v42 = &v39;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    id v28 = *(void **)(v24 + 24);
    uint64_t v29 = *(void **)(v24 + 32);
    uint64_t v50 = v25;
    uint64_t v51 = v26;
    uint64_t v43 = v26;
    uint64_t v52 = v27;
    unint64_t v53 = v28;
    unint64_t v54 = v29;
    MEMORY[0x270FA5388](result);
    sub_247449BB4(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
    id v30 = v25;
    uint64_t v44 = v27;
    swift_bridgeObjectRetain();
    uint64_t v45 = v28;
    id v31 = v28;
    uint64_t v46 = v29;
    id v32 = v29;
    uint64_t v33 = v49;
    sub_2474B0E00();
    if (v33) {
      return sub_247448DD4(v25, v43, v44, v45, v46);
    }
    a1 = v40;
    uint64_t v34 = v40 + v8[10];
    sub_2474454D8(v34);
    sub_247440FD8(v47, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v34, 0, 1, v48);
    __n128 result = sub_247448DD4(v25, v43, v44, v45, v46);
  }
  unint64_t v35 = *(void *)(a2 + v10[10]);
  if ((v35 & 0x8000000000000000) != 0 || HIDWORD(v35))
  {
    sub_2474B1350();
    __break(1u);
    JUMPOUT(0x247448820);
  }
  uint64_t v36 = a1 + v8[11];
  *(_DWORD *)uint64_t v36 = v35;
  *(unsigned char *)(v36 + 4) = 0;
  switch(*(unsigned char *)(a2 + v10[8]))
  {
    case 1:
      uint64_t v37 = a1 + v8[9];
      uint64_t v38 = 2;
      goto LABEL_14;
    case 2:
      uint64_t v37 = a1 + v8[9];
      uint64_t v38 = 1;
      goto LABEL_14;
    case 3:
      uint64_t v37 = a1 + v8[9];
      uint64_t v38 = 3;
      goto LABEL_14;
    case 4:
      uint64_t v37 = a1 + v8[9];
      uint64_t v38 = 4;
LABEL_14:
      *(void *)uint64_t v37 = v38;
      break;
    default:
      uint64_t v37 = a1 + v8[9];
      *(void *)uint64_t v37 = 0;
      break;
  }
  *(_WORD *)(v37 + 8) = 1;
  return result;
}

void *sub_247448834(uint64_t a1)
{
  return sub_2474483F4(a1, *(void *)(v1 + 16));
}

int *SecureCloudInviteResponse.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v53 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v54 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t v12 = sub_2474B0C30();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v62 = v14;
  sub_2474B0BE0();
  uint64_t v16 = (uint64_t *)(a1 + v15[6]);
  unint64_t v17 = v16[1];
  if (v17)
  {
    uint64_t v57 = *v16;
    unint64_t v61 = v17;
  }
  else
  {
    uint64_t v57 = 0;
    unint64_t v61 = 0xE000000000000000;
  }
  uint64_t v18 = (uint64_t *)(a1 + v15[7]);
  unint64_t v19 = v18[1];
  uint64_t v67 = v2;
  if (v19)
  {
    uint64_t v56 = *v18;
    unint64_t v60 = v19;
  }
  else
  {
    uint64_t v56 = 0;
    unint64_t v60 = 0xE000000000000000;
  }
  uint64_t v20 = (uint64_t *)(a1 + v15[8]);
  unint64_t v21 = v20[1];
  if (v21)
  {
    uint64_t v55 = *v20;
    unint64_t v59 = v21;
  }
  else
  {
    uint64_t v55 = 0;
    unint64_t v59 = 0xE000000000000000;
  }
  v58 = v15;
  uint64_t v22 = v15[10];
  uint64_t v65 = a1;
  uint64_t v23 = a1 + v22;
  sub_247440F70(a1 + v22, (uint64_t)v11);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v25 = (int *)v4;
  int v26 = v24(v11, 1, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2474454D8((uint64_t)v11);
  if (v26 == 1)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    id v30 = 0;
    id v31 = 0;
    uint64_t v32 = v65;
  }
  else
  {
    uint64_t v33 = v54;
    sub_247440F70(v23, v54);
    if (v24((char *)v33, 1, (uint64_t)v25) == 1)
    {
      uint64_t v34 = v53;
      sub_2474B0CD0();
      *(_OWORD *)(v34 + v25[5]) = xmmword_2474B2410;
      *(_OWORD *)(v34 + v25[6]) = xmmword_2474B2410;
      *(_OWORD *)(v34 + v25[7]) = xmmword_2474B2410;
      unint64_t v35 = (void *)(v34 + v25[8]);
      *unint64_t v35 = 0;
      v35[1] = 0;
      sub_2474454D8(v33);
    }
    else
    {
      uint64_t v34 = v53;
      sub_247440FD8(v33, v53);
    }
    uint64_t v36 = v67;
    uint64_t v32 = v65;
    SecureCloudInviteUserInfo.init(_:)(v34, v66);
    if (v36)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v67 = 0;
    uint64_t v27 = (void *)v66[0];
    uint64_t v28 = v66[1];
    uint64_t v29 = v66[2];
    id v30 = (void *)v66[3];
    id v31 = (void *)v66[4];
  }
  uint64_t v37 = (unsigned int *)(v32 + v58[11]);
  if (*((unsigned char *)v37 + 4)) {
    uint64_t v38 = 0;
  }
  else {
    uint64_t v38 = *v37;
  }
  uint64_t v39 = (unsigned char *)(v32 + v58[9]);
  if ((v39[9] & 1) == 0)
  {
    if (v39[8])
    {
      unint64_t v40 = 0x403010200uLL >> (8 * *v39);
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247446DD8();
    swift_allocError();
    unsigned char *v41 = 1;
    swift_willThrow();
    sub_247448DD4(v27, v28, v29, v30, v31);
LABEL_25:
    sub_247448D78(v32);
    return (int *)(*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v62, v64);
  }
  LOBYTE(v40) = 0;
LABEL_27:
  uint64_t v43 = v52;
  sub_247448D78(v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v43, v62, v64);
  __n128 result = (int *)type metadata accessor for SecureCloudInviteResponse();
  uint64_t v44 = (void *)(v43 + result[5]);
  unint64_t v45 = v61;
  *uint64_t v44 = v57;
  v44[1] = v45;
  uint64_t v46 = (void *)(v43 + result[6]);
  unint64_t v47 = v60;
  *uint64_t v46 = v56;
  v46[1] = v47;
  uint64_t v48 = (void *)(v43 + result[7]);
  unint64_t v49 = v59;
  *uint64_t v48 = v55;
  v48[1] = v49;
  *(unsigned char *)(v43 + result[8]) = v40;
  uint64_t v50 = (void *)(v43 + result[9]);
  *uint64_t v50 = v27;
  v50[1] = v28;
  v50[2] = v29;
  v50[3] = v30;
  v50[4] = v31;
  *(void *)(v43 + result[10]) = v38;
  return result;
}

uint64_t sub_247448D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_247448DD4(void *result, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_247448E30()
{
  unint64_t result = qword_269250570;
  if (!qword_269250570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250570);
  }
  return result;
}

uint64_t sub_247448E84()
{
  return sub_247449BB4(&qword_269250568, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_247448ECC()
{
  return sub_247449BB4(&qword_269250578, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_247448F14()
{
  return sub_2474B0E00();
}

int *sub_247448FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCloudInviteResponse.init(_:)(a1, a2);
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteResponseType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SecureCloudInviteResponseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247449130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_247449158(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudInviteResponseType()
{
  return &type metadata for SecureCloudInviteResponseType;
}

void *initializeBufferWithCopyOfBuffer for SecureCloudInviteResponse(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (void *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0C30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)a1 + v16);
    unint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)((char *)a1 + v21);
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(void **)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 1);
      uint64_t v26 = *((void *)v23 + 2);
      *uint64_t v22 = v24;
      v22[1] = v25;
      uint64_t v27 = (void *)*((void *)v23 + 3);
      uint64_t v28 = (void *)*((void *)v23 + 4);
      v22[2] = v26;
      v22[3] = v27;
      v22[4] = v28;
      id v29 = v24;
      swift_bridgeObjectRetain();
      id v30 = v27;
      id v31 = v28;
    }
    else
    {
      long long v33 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v33;
      v22[4] = *((void *)v23 + 4);
    }
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  }
  return a1;
}

void destroy for SecureCloudInviteResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  if (*(void *)v5)
  {

    swift_bridgeObjectRelease();
    unsigned int v6 = *(void **)(v5 + 32);
  }
}

uint64_t initializeWithCopy for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void **)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    uint64_t v24 = *(void *)(v22 + 8);
    uint64_t v25 = *(void *)(v22 + 16);
    *uint64_t v21 = v23;
    v21[1] = v24;
    uint64_t v26 = *(void **)(v22 + 24);
    uint64_t v27 = *(void **)(v22 + 32);
    v21[2] = v25;
    v21[3] = v26;
    v21[4] = v27;
    id v28 = v23;
    swift_bridgeObjectRetain();
    id v29 = v26;
    id v30 = v27;
  }
  else
  {
    long long v31 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v31;
    v21[4] = *(void *)(v22 + 32);
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (long long *)(a2 + v16);
  uint64_t v19 = *(void **)(a1 + v16);
  uint64_t v20 = *(void **)(a2 + v16);
  if (v19)
  {
    if (v20)
    {
      *uint64_t v17 = v20;
      id v21 = v20;

      v17[1] = *((void *)v18 + 1);
      v17[2] = *((void *)v18 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)*((void *)v18 + 3);
      uint64_t v23 = (void *)v17[3];
      v17[3] = v22;
      id v24 = v22;

      uint64_t v25 = (void *)*((void *)v18 + 4);
      uint64_t v26 = (void *)v17[4];
      v17[4] = v25;
      id v27 = v25;
    }
    else
    {
      sub_2474496EC((uint64_t)v17);
      uint64_t v33 = *((void *)v18 + 4);
      long long v34 = v18[1];
      *(_OWORD *)uint64_t v17 = *v18;
      *((_OWORD *)v17 + 1) = v34;
      v17[4] = v33;
    }
  }
  else if (v20)
  {
    *uint64_t v17 = v20;
    v17[1] = *((void *)v18 + 1);
    v17[2] = *((void *)v18 + 2);
    id v28 = (void *)*((void *)v18 + 3);
    v17[3] = v28;
    id v29 = (void *)*((void *)v18 + 4);
    v17[4] = v29;
    id v30 = v20;
    swift_bridgeObjectRetain();
    id v31 = v28;
    id v32 = v29;
  }
  else
  {
    long long v35 = *v18;
    long long v36 = v18[1];
    v17[4] = *((void *)v18 + 4);
    *(_OWORD *)uint64_t v17 = v35;
    *((_OWORD *)v17 + 1) = v36;
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_2474496EC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *long long v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void **)(a1 + v22);
  if (!v25) {
    goto LABEL_5;
  }
  if (!*(void *)v24)
  {
    sub_2474496EC(v23);
LABEL_5:
    long long v29 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v29;
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
    goto LABEL_6;
  }
  *(void *)uint64_t v23 = *(void *)v24;

  uint64_t v26 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(void *)(v23 + 16) = v26;
  swift_bridgeObjectRelease();
  id v27 = *(void **)(v23 + 24);
  *(void *)(v23 + 24) = *(void *)(v24 + 24);

  id v28 = *(void **)(v23 + 32);
  *(void *)(v23 + 32) = *(void *)(v24 + 32);

LABEL_6:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247449960);
}

uint64_t sub_247449960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247449A38);
}

uint64_t sub_247449A38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0C30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_247449AF8()
{
  uint64_t result = sub_2474B0C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_247449BB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_247449BFC(uint64_t a1)
{
  return sub_247448834(a1);
}

uint64_t SecureCloudInviteUserInfo.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t SecureCloudInviteUserInfo.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v5 = (uint64_t *)(a1 + v4[8]);
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  uint64_t v8 = *v5 & 0xFFFFFFFFFFFFLL;
  if (v7) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v7) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9;
  }
  uint64_t v44 = a2;
  if (v11)
  {
    if (v7) {
      uint64_t v12 = v6;
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v43 = v12;
    if (v7) {
      unint64_t v13 = v7;
    }
    else {
      unint64_t v13 = 0xE000000000000000;
    }
    unint64_t v46 = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v43 = 0;
    unint64_t v46 = 0;
  }
  uint64_t v14 = (uint64_t *)(a1 + v4[5]);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v16 >> 60 == 15) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = *v14;
  }
  if (v16 >> 60 == 15) {
    unint64_t v18 = 0xC000000000000000;
  }
  else {
    unint64_t v18 = v14[1];
  }
  id v19 = objc_allocWithZone(MEMORY[0x263F23B18]);
  sub_247446DC4(v15, v16);
  uint64_t v20 = (void *)sub_2474B0BB0();
  sub_24743E4AC(v17, v18);
  id v21 = objc_msgSend(v19, sel_initWithData_, v20);

  if (v21)
  {
    unint64_t v45 = v21;
    uint64_t v22 = (uint64_t *)(a1 + v4[7]);
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    if (v24 >> 60 == 15) {
      uint64_t v25 = 0;
    }
    else {
      uint64_t v25 = *v22;
    }
    if (v24 >> 60 == 15) {
      unint64_t v26 = 0xC000000000000000;
    }
    else {
      unint64_t v26 = v22[1];
    }
    id v27 = objc_allocWithZone(MEMORY[0x263F23BA0]);
    sub_247446DC4(v23, v24);
    id v28 = (void *)sub_2474B0BB0();
    sub_24743E4AC(v25, v26);
    id v29 = objc_msgSend(v27, sel_initWithData_, v28);

    if (v29)
    {
      id v30 = (uint64_t *)(a1 + v4[6]);
      uint64_t v31 = *v30;
      unint64_t v32 = v30[1];
      if (v32 >> 60 == 15) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = *v30;
      }
      if (v32 >> 60 == 15) {
        unint64_t v34 = 0xC000000000000000;
      }
      else {
        unint64_t v34 = v30[1];
      }
      id v35 = objc_allocWithZone(MEMORY[0x263F23B98]);
      sub_247446DC4(v31, v32);
      long long v36 = (void *)sub_2474B0BB0();
      sub_24743E4AC(v33, v34);
      id v37 = objc_msgSend(v35, sel_initWithData_, v36);

      if (v37)
      {
        id v38 = objc_msgSend(self, sel_shareItemWithCodableShareItem_, v37);

        if (v38)
        {
          uint64_t result = sub_247441348(a1);
          *uint64_t v44 = v45;
          v44[1] = v43;
          v44[2] = v46;
          v44[3] = v29;
          v44[4] = v38;
          return result;
        }
      }
      swift_bridgeObjectRelease();
      sub_247446DD8();
      swift_allocError();
      *uint64_t v42 = 1;
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_247446DD8();
      swift_allocError();
      unsigned char *v41 = 1;
      swift_willThrow();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_247446DD8();
    swift_allocError();
    *unint64_t v40 = 1;
    swift_willThrow();
  }
  return sub_247441348(a1);
}

id SecureCloudInviteUserInfo.activityDataPreview.getter()
{
  return *v0;
}

uint64_t SecureCloudInviteUserInfo.cloudKitAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id SecureCloudInviteUserInfo.legacyShareLocations.getter()
{
  return *(id *)(v0 + 24);
}

id SecureCloudInviteUserInfo.secureCloudShareItem.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t SecureCloudInviteUserInfo.init(activityDataPreview:cloudKitAddress:legacyShareLocations:secureCloudShareItem:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

id sub_24744A054(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(*(id *)a2, sel_data);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  uint64_t v6 = sub_2474B0BC0();
  uint64_t v8 = v7;

  uint64_t v9 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v10 = a1 + v9[5];
  sub_24743E498(*(void *)v10, *(void *)(v10 + 8));
  *(void *)uint64_t v10 = v6;
  *(void *)(v10 + 8) = v8;
  id result = objc_msgSend(*(id *)(a2 + 24), sel_data);
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v11 = result;
  uint64_t v12 = sub_2474B0BC0();
  uint64_t v14 = v13;

  uint64_t v15 = a1 + v9[7];
  sub_24743E498(*(void *)v15, *(void *)(v15 + 8));
  *(void *)uint64_t v15 = v12;
  *(void *)(v15 + 8) = v14;
  id v16 = objc_msgSend(*(id *)(a2 + 32), sel_codableShareItem);
  if (v16 && (uint64_t v17 = v16, v18 = objc_msgSend(v16, sel_data), v17, v18))
  {
    uint64_t v19 = sub_2474B0BC0();
    unint64_t v21 = v20;

    uint64_t v22 = (uint64_t *)(a1 + v9[6]);
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    sub_247442FA0(v19, v21);
    sub_24743E498(v23, v24);
    *uint64_t v22 = v19;
    v22[1] = v21;
    uint64_t v25 = *(void *)(a2 + 16);
    if (v25)
    {
      uint64_t v26 = *(void *)(a2 + 8);
      id v27 = (void *)(a1 + v9[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id result = (id)sub_24743E4AC(v19, v21);
      void *v27 = v26;
      v27[1] = v25;
    }
    else
    {
      sub_247446DD8();
      swift_allocError();
      *id v29 = 1;
      swift_willThrow();
      return (id)sub_24743E4AC(v19, v21);
    }
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *id v28 = 1;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_24744A25C()
{
  return sub_24744A2C4(&qword_2692504E8);
}

uint64_t sub_24744A290()
{
  return sub_24744A2C4(&qword_269250580);
}

uint64_t sub_24744A2C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24744A308()
{
  return sub_2474B0E00();
}

uint64_t sub_24744A3AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return SecureCloudInviteUserInfo.init(_:)(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for SecureCloudInviteUserInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for SecureCloudInviteUserInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for SecureCloudInviteUserInfo(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void **)(a2 + 32);
  a1[4] = v6;
  id v7 = v3;
  swift_bridgeObjectRetain();
  id v8 = v5;
  id v9 = v6;
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 32);
  uint64_t v11 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for SecureCloudInviteUserInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteUserInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteUserInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudInviteUserInfo()
{
  return &type metadata for SecureCloudInviteUserInfo;
}

id sub_24744A630(uint64_t a1)
{
  return sub_247445FC0(a1);
}

uint64_t SecureCloudPingResponse.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudPingResponse.requestIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

ActivitySharingClient::SecureCloudPingResponse __swiftcall SecureCloudPingResponse.init(requestIdentifier:identifier:)(Swift::String requestIdentifier, Swift::String identifier)
{
  *uint64_t v2 = identifier;
  v2[1] = requestIdentifier;
  result.requestIdentifier = identifier;
  result.identifier = requestIdentifier;
  return result;
}

uint64_t SecureCloudPingResponse.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t sub_24744A754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SecureCloudPingResponseProtobuf();
  uint64_t v11 = (void *)(a1 + *(int *)(v10 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v11 = a2;
  v11[1] = a3;
  id v12 = (void *)(a1 + *(int *)(v10 + 24));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  void *v12 = a4;
  v12[1] = a5;
  return result;
}

uint64_t sub_24744A7F0(uint64_t a1)
{
  return sub_24744A754(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t SecureCloudPingResponse.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SecureCloudPingResponseProtobuf();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if (v5[1])
  {
    uint64_t v6 = *v5;
    unint64_t v7 = v5[1];
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  id v8 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  if (v8[1])
  {
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24744A8C4(a1);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t sub_24744A8C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudPingResponseProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24744A920()
{
  return sub_24744A988(&qword_269250588);
}

uint64_t sub_24744A954()
{
  return sub_24744A988(&qword_269250590);
}

uint64_t sub_24744A988(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecureCloudPingResponseProtobuf();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24744A9CC()
{
  return sub_2474B0E00();
}

uint64_t sub_24744AA78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SecureCloudPingResponseProtobuf();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  if (v5[1])
  {
    uint64_t v6 = *v5;
    unint64_t v7 = v5[1];
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  id v8 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  if (v8[1])
  {
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24744A8C4(a1);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t destroy for SecureCloudPingResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SecureCloudPingResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SecureCloudPingResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for SecureCloudPingResponse(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudPingResponse()
{
  return &type metadata for SecureCloudPingResponse;
}

uint64_t sub_24744AD04(uint64_t a1)
{
  return sub_24744A7F0(a1);
}

uint64_t SecureCloudUpgradeVersion.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t SecureCloudUpgradeVersion.rawValue.getter()
{
  return 1;
}

uint64_t sub_24744AD38()
{
  return 1;
}

unint64_t sub_24744AD44()
{
  unint64_t result = qword_269250598;
  if (!qword_269250598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250598);
  }
  return result;
}

uint64_t sub_24744AD98()
{
  return sub_2474B1530();
}

uint64_t sub_24744ADDC()
{
  return sub_2474B1520();
}

uint64_t sub_24744AE04()
{
  return sub_2474B1530();
}

void *sub_24744AE44@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_24744AE58(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24744AE64()
{
  return sub_2474B1030();
}

uint64_t sub_24744AEC4()
{
  return sub_2474B0FF0();
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeVersion(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for SecureCloudUpgradeVersion(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24744B000);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24744B028()
{
  return 0;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeVersion()
{
  return &type metadata for SecureCloudUpgradeVersion;
}

unint64_t sub_24744B040()
{
  unint64_t result = qword_2692505A0;
  if (!qword_2692505A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692505A0);
  }
  return result;
}

uint64_t SecureCloudWithdrawRequest.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0C30();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudWithdrawRequest.handshakeToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SecureCloudWithdrawRequest()
{
  uint64_t result = qword_26B12C680;
  if (!qword_26B12C680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudWithdrawRequest.init(date:handshakeToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for SecureCloudWithdrawRequest();
  unint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  void *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t SecureCloudWithdrawRequest.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t sub_24744B2A0(uint64_t a1, uint64_t a2)
{
  sub_2474B0BF0();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v7 = a1 + *(int *)(v6 + 20);
  *(void *)uint64_t v7 = v5;
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudWithdrawRequest() + 20));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = (void *)(a1 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v11 = v10;
  v11[1] = v9;
  return result;
}

uint64_t sub_24744B33C(uint64_t a1)
{
  return sub_24744B2A0(a1, *(void *)(v1 + 16));
}

uint64_t SecureCloudWithdrawRequest.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2474B0C30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_2474B0BE0();
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(v8 + 24));
  if (v9[1])
  {
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_24744B4A8(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  uint64_t result = type metadata accessor for SecureCloudWithdrawRequest();
  uint64_t v13 = (void *)(a2 + *(int *)(result + 20));
  *uint64_t v13 = v10;
  v13[1] = v11;
  return result;
}

uint64_t sub_24744B4A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24744B504()
{
  return sub_24744B56C(&qword_2692505A8);
}

uint64_t sub_24744B538()
{
  return sub_24744B56C(&qword_2692505B0);
}

uint64_t sub_24744B56C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecureCloudWithdrawRequestProtobuf();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24744B5B0()
{
  return sub_2474B0E00();
}

uint64_t sub_24744B644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_2474B0C30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  sub_2474B0BE0();
  unint64_t v11 = (uint64_t *)(a1 + *(int *)(v10 + 24));
  if (v11[1])
  {
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_24744B4A8(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  uint64_t v15 = (void *)(a3 + *(int *)(a2 + 20));
  *uint64_t v15 = v12;
  v15[1] = v13;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudWithdrawRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0C30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudWithdrawRequest(uint64_t a1)
{
  uint64_t v2 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24744BB28);
}

uint64_t sub_24744BB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0C30();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudWithdrawRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24744BC00);
}

uint64_t sub_24744BC00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0C30();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24744BCC0()
{
  uint64_t result = sub_2474B0C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24744BD54(uint64_t a1)
{
  return sub_24744B33C(a1);
}

uint64_t TransportDispatching.register(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_24744BD94, 0, 0);
}

uint64_t sub_24744BD94()
{
  v0[8] = (*(uint64_t (**)(void))(v0[6] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744BE50;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_247454630(v4, v2, v3);
}

uint64_t sub_24744BE50()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t TransportDispatching.register<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x270FA2498](sub_24744BF8C, 0, 0);
}

{
  uint64_t v7;
  void *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x270FA2498](sub_24744C080, 0, 0);
}

{
  uint64_t v7;
  void *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x270FA2498](sub_24744C174, 0, 0);
}

{
  uint64_t v7;
  void *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x270FA2498](sub_24744C268, 0, 0);
}

uint64_t sub_24744BF8C()
{
  v0[10] = (*(uint64_t (**)(void))(v0[7] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744C874;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return sub_2474549B8(v6, v4, v5, v3, v2);
}

uint64_t sub_24744C080()
{
  v0[10] = (*(uint64_t (**)(void))(v0[7] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744C874;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return sub_247454F90(v6, v4, v5, v3, v2);
}

uint64_t sub_24744C174()
{
  v0[10] = (*(uint64_t (**)(void))(v0[7] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744C874;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return sub_247455678(v6, v4, v5, v3, v2);
}

uint64_t sub_24744C268()
{
  v0[10] = (*(uint64_t (**)(void))(v0[7] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744C330;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  return sub_247455E30(v6, v4, v5, v3, v2);
}

uint64_t sub_24744C330()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t TransportDispatching.register<A, B>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[10] = v11;
  v9[11] = v8;
  v9[8] = a7;
  v9[9] = a8;
  v9[6] = a5;
  v9[7] = a6;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  return MEMORY[0x270FA2498](sub_24744C478, 0, 0);
}

{
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v9[10] = v11;
  v9[11] = v8;
  v9[8] = a7;
  v9[9] = a8;
  v9[6] = a5;
  v9[7] = a6;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  return MEMORY[0x270FA2498](sub_24744C688, 0, 0);
}

uint64_t sub_24744C478()
{
  v0[12] = (*(uint64_t (**)(void))(v0[8] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744C540;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[2];
  return sub_2474563A0(v8, v6, v7, v4, v5, v2, v3);
}

uint64_t sub_24744C540()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24744C688()
{
  v0[12] = (*(uint64_t (**)(void))(v0[8] + 8))(v0[5]);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24744C878;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[2];
  return sub_247456B18(v8, v6, v7, v4, v5, v2, v3);
}

uint64_t TransportDispatching.unregister(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24744C774, 0, 0);
}

uint64_t sub_24744C774()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0[4] + 8))(v0[3]);
  v0[6] = v1;
  return MEMORY[0x270FA2498](sub_24744C7F4, v1, 0);
}

uint64_t sub_24744C7F4()
{
  sub_247457894(*(void *)(v0 + 16));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t dispatch thunk of TransportDispatching.transportDispatchService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24744C87C()
{
  uint64_t v1 = type metadata accessor for SecureCloudPingRequestProtobuf();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = v0[1];
  uint64_t v8 = *v0;
  uint64_t v9 = v4;
  sub_24744F03C(&qword_2692503F8, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
  sub_2474B0E00();
  uint64_t v5 = sub_2474B0DD0();
  sub_24744F0EC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SecureCloudPingRequestProtobuf);
  return v5;
}

uint64_t TransportProtobufSerializable.activitySharingTransportData()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (!v3)
  {
    swift_getAssociatedConformanceWitness();
    uint64_t v2 = sub_2474B0DD0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  }
  return v2;
}

uint64_t sub_24744CB24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24744CB3C(a1, a2, a3);
}

uint64_t sub_24744CB3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_2474B0D00();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for SecureCloudPingRequestProtobuf();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v19 - v12;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    unsigned char *v14 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
    sub_247442FA0(a1, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_2692503F8, (void (*)(uint64_t))type metadata accessor for SecureCloudPingRequestProtobuf);
    sub_2474B0DC0();
    if (v3)
    {
      return sub_24743E498(a1, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SecureCloudPingRequestProtobuf);
      uint64_t v16 = &v11[*(int *)(v8 + 20)];
      if (*((void *)v16 + 1))
      {
        uint64_t v17 = *(void *)v16;
        unint64_t v18 = *((void *)v16 + 1);
      }
      else
      {
        uint64_t v17 = 0;
        unint64_t v18 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_24744F0EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SecureCloudPingRequestProtobuf);
      sub_24743E498(a1, a2);
      uint64_t result = sub_24744F0EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudPingRequestProtobuf);
      *a3 = v17;
      a3[1] = v18;
    }
  }
  return result;
}

uint64_t sub_24744CDA0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v5 = type metadata accessor for SecureCloudInviteRequest();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2474B0D00();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v16 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = v6;
    uint64_t v23 = v8;
    uint64_t v21 = v5;
    uint64_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v18 = v28;
    sub_247442FA0(v28, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_269250500, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
    uint64_t v19 = v24;
    sub_2474B0DC0();
    if (v19)
    {
      return sub_24743E498(v18, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteRequestProtobuf);
      uint64_t v20 = (uint64_t)v23;
      SecureCloudInviteRequest.init(_:)((uint64_t)v13, (uint64_t)v23);
      sub_24743E498(v18, a2);
      sub_24744F0EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteRequestProtobuf);
      sub_24744EFD4(v20, a3, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteRequest);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a3, 0, 1, v21);
    }
  }
}

uint64_t sub_24744D098@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v5 = type metadata accessor for SecureCloudUpgradeMessage();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2474B0D00();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v16 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = v6;
    uint64_t v23 = v8;
    uint64_t v21 = v5;
    uint64_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v18 = v28;
    sub_247442FA0(v28, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_269250538, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
    uint64_t v19 = v24;
    sub_2474B0DC0();
    if (v19)
    {
      return sub_24743E498(v18, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
      uint64_t v20 = v23;
      SecureCloudUpgradeMessage.init(_:)((uint64_t)v13, v23);
      sub_24743E498(v18, a2);
      sub_24744F0EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
      sub_24744EFD4((uint64_t)v20, a3, (uint64_t (*)(void))type metadata accessor for SecureCloudUpgradeMessage);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a3, 0, 1, v21);
    }
  }
}

uint64_t sub_24744D390@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v5 = type metadata accessor for SecureCloudInviteResponse();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2474B0D00();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v16 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = v6;
    uint64_t v23 = v8;
    uint64_t v21 = v5;
    uint64_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v18 = v28;
    sub_247442FA0(v28, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_269250568, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
    uint64_t v19 = v24;
    sub_2474B0DC0();
    if (v19)
    {
      return sub_24743E498(v18, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteResponseProtobuf);
      uint64_t v20 = (uint64_t)v23;
      SecureCloudInviteResponse.init(_:)((uint64_t)v13, (uint64_t)v23);
      sub_24743E498(v18, a2);
      sub_24744F0EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteResponseProtobuf);
      sub_24744EFD4(v20, a3, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteResponse);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a3, 0, 1, v21);
    }
  }
}

uint64_t sub_24744D688@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_2474B0D00();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v16 - v12;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    unsigned char *v14 = 3;
    return swift_willThrow();
  }
  else
  {
    memset(v16, 0, 40);
    sub_247442FA0(a1, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
    sub_2474B0DC0();
    if (v3)
    {
      return sub_24743E498(a1, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      SecureCloudInviteUserInfo.init(_:)((uint64_t)v11, v16);
      sub_24743E498(a1, a2);
      uint64_t result = sub_24744F0EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
      *(void *)a3 = *(void *)&v16[0];
      *(_OWORD *)(a3 + 8) = *(_OWORD *)((char *)v16 + 8);
      *(_OWORD *)(a3 + 24) = *(_OWORD *)((char *)&v16[1] + 8);
    }
  }
  return result;
}

uint64_t sub_24744D8CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_2474B0D00();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for SecureCloudPingResponseProtobuf();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v22 - v12;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    unsigned char *v14 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    sub_247442FA0(a1, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_269250588, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
    sub_2474B0DC0();
    if (v3)
    {
      return sub_24743E498(a1, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SecureCloudPingResponseProtobuf);
      uint64_t v16 = &v11[*(int *)(v8 + 20)];
      unint64_t v17 = *((void *)v16 + 1);
      if (v17)
      {
        uint64_t v27 = *(void *)v16;
        unint64_t v23 = v17;
      }
      else
      {
        uint64_t v27 = 0;
        unint64_t v23 = 0xE000000000000000;
      }
      uint64_t v18 = &v11[*(int *)(v8 + 24)];
      if (*((void *)v18 + 1))
      {
        uint64_t v19 = *(void *)v18;
        unint64_t v20 = *((void *)v18 + 1);
      }
      else
      {
        uint64_t v19 = 0;
        unint64_t v20 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24744F0EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SecureCloudPingResponseProtobuf);
      sub_24743E498(a1, a2);
      uint64_t result = sub_24744F0EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudPingResponseProtobuf);
      unint64_t v21 = v23;
      *a3 = v27;
      a3[1] = v21;
      a3[2] = v19;
      a3[3] = v20;
    }
  }
  return result;
}

uint64_t sub_24744DB70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v35 = a3;
  uint64_t v4 = sub_2474B0C30();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SecureCloudWithdrawRequest();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2474B0D00();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v30 - v15;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    *unint64_t v17 = 3;
    return swift_willThrow();
  }
  else
  {
    unint64_t v32 = v9;
    uint64_t v33 = v6;
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    uint64_t v19 = v41;
    sub_247442FA0(v41, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_2692505A8, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
    uint64_t v20 = v37;
    sub_2474B0DC0();
    unint64_t v21 = a2;
    if (v20)
    {
      return sub_24743E498(v19, a2);
    }
    else
    {
      uint64_t v22 = v19;
      sub_24744F084((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
      sub_2474B0BE0();
      unint64_t v23 = &v14[*(int *)(v11 + 24)];
      unint64_t v24 = *((void *)v23 + 1);
      if (v24)
      {
        uint64_t v37 = *(void *)v23;
        unint64_t v31 = v24;
      }
      else
      {
        uint64_t v37 = 0;
        unint64_t v31 = 0xE000000000000000;
      }
      uint64_t v25 = v4;
      swift_bridgeObjectRetain();
      sub_24744F0EC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
      uint64_t v26 = (uint64_t)v32;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v32, v33, v25);
      sub_24743E498(v22, v21);
      uint64_t v27 = (void *)(v26 + *(int *)(v7 + 20));
      unint64_t v28 = v31;
      void *v27 = v37;
      v27[1] = v28;
      sub_24744F0EC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
      uint64_t v29 = v35;
      sub_24744EFD4(v26, v35, (uint64_t (*)(void))type metadata accessor for SecureCloudWithdrawRequest);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v29, 0, 1, v7);
    }
  }
}

uint64_t sub_24744DF78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v5 = type metadata accessor for SecureCloudRepairMessage();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_2474B0D00();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v16 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v22 = v6;
    unint64_t v23 = v8;
    uint64_t v21 = v5;
    uint64_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v18 = v28;
    sub_247442FA0(v28, a2);
    sub_2474B0CF0();
    sub_24744F03C(&qword_2692505F8, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
    uint64_t v19 = v24;
    sub_2474B0DC0();
    if (v19)
    {
      return sub_24743E498(v18, a2);
    }
    else
    {
      sub_24744F084((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SecureCloudRepairMessageProtobuf);
      uint64_t v20 = v23;
      SecureCloudRepairMessage.init(_:)((uint64_t)v13, v23);
      sub_24743E498(v18, a2);
      sub_24744F0EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SecureCloudRepairMessageProtobuf);
      sub_24744EFD4((uint64_t)v20, a3, (uint64_t (*)(void))type metadata accessor for SecureCloudRepairMessage);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a3, 0, 1, v21);
    }
  }
}

uint64_t TransportProtobufSerializable.init(activitySharingTransportData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v27 = a5;
  uint64_t v28 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2474B0D00();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v25 - v16;
  if (a2 >> 60 == 15)
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v18 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v25 = v15;
    long long v26 = v9;
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v20 = v33;
    sub_247442FA0(v33, a2);
    swift_getAssociatedConformanceWitness();
    sub_2474B0CF0();
    uint64_t v21 = v29;
    sub_2474B0DC0();
    if (v21)
    {
      return sub_24743E498(v20, a2);
    }
    else
    {
      uint64_t v22 = v25;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v14, v17, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t, uint64_t))(a4 + 40))(v14, a3, a4);
      sub_24743E498(v33, a2);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v17, AssociatedTypeWitness);
      uint64_t v23 = v27;
      uint64_t v24 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v27, v26, a3);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, a3);
    }
  }
}

uint64_t sub_24744E5E0()
{
  uint64_t v2 = type metadata accessor for SecureCloudInviteRequestProtobuf();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0;
  sub_24744F03C(&qword_269250500, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteRequestProtobuf);
  uint64_t v5 = v2;
  sub_2474B0E00();
  if (!v1)
  {
    uint64_t v5 = sub_2474B0DD0();
    sub_24744F0EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteRequestProtobuf);
  }
  return v5;
}

uint64_t sub_24744E728@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24744CDA0(a1, a2, a3);
}

uint64_t sub_24744E740()
{
  uint64_t v2 = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0;
  sub_24744F03C(&qword_269250538, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
  uint64_t v5 = v2;
  sub_2474B0E00();
  if (!v1)
  {
    uint64_t v5 = sub_2474B0DD0();
    sub_24744F0EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
  }
  return v5;
}

uint64_t sub_24744E888@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24744D098(a1, a2, a3);
}

uint64_t sub_24744E8A0()
{
  uint64_t v2 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0;
  sub_24744F03C(&qword_269250568, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
  uint64_t v5 = v2;
  sub_2474B0E00();
  if (!v1)
  {
    uint64_t v5 = sub_2474B0DD0();
    sub_24744F0EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteResponseProtobuf);
  }
  return v5;
}

uint64_t sub_24744E9E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24744D390(a1, a2, a3);
}

uint64_t sub_24744EA00()
{
  uint64_t v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = *(_OWORD *)(v0 + 16);
  v10[0] = *(_OWORD *)v0;
  v10[1] = v5;
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v9 = v10;
  sub_24744F03C(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  uint64_t v6 = v2;
  sub_2474B0E00();
  if (!v1)
  {
    uint64_t v6 = sub_2474B0DD0();
    sub_24744F0EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  }
  return v6;
}

uint64_t sub_24744EB5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24744D688(a1, a2, a3);
}

uint64_t sub_24744EB74()
{
  uint64_t v1 = type metadata accessor for SecureCloudPingResponseProtobuf();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *((void *)v0 + 2);
  uint64_t v5 = *((void *)v0 + 3);
  long long v9 = *v0;
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  sub_24744F03C(&qword_269250588, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
  sub_2474B0E00();
  uint64_t v6 = sub_2474B0DD0();
  sub_24744F0EC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SecureCloudPingResponseProtobuf);
  return v6;
}

uint64_t sub_24744ECAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_24744D8CC(a1, a2, a3);
}

uint64_t sub_24744ECC4()
{
  uint64_t v1 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v0;
  sub_24744F03C(&qword_2692505A8, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  sub_2474B0E00();
  uint64_t v4 = sub_2474B0DD0();
  sub_24744F0EC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  return v4;
}

uint64_t sub_24744EDF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24744DB70(a1, a2, a3);
}

uint64_t dispatch thunk of TransportProtobufSerializable.protobuf()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TransportProtobufSerializable.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_24744EE58()
{
  uint64_t v2 = type metadata accessor for SecureCloudRepairMessageProtobuf();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0;
  sub_24744F03C(&qword_2692505F8, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
  uint64_t v5 = v2;
  sub_2474B0E00();
  if (!v1)
  {
    uint64_t v5 = sub_2474B0DD0();
    sub_24744F0EC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SecureCloudRepairMessageProtobuf);
  }
  return v5;
}

uint64_t sub_24744EFA0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24744DF78(a1, a2, a3);
}

uint64_t sub_24744EFB8(uint64_t a1)
{
  return sub_2474AE3C8(a1, *(void **)(v1 + 16));
}

uint64_t sub_24744EFD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24744F03C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24744F084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24744F0EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24744F14C(uint64_t a1)
{
  return sub_247444518(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t TransportPayload.transportItem.getter()
{
  return *(void *)v0;
}

uint64_t TransportPayload.serializedPayload.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_247442FA0(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t TransportPayload.init(transportItem:serializedPayload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t destroy for TransportPayload(uint64_t a1)
{
  return sub_24743E4AC(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

void *_s21ActivitySharingClient16TransportPayloadVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  sub_247442FA0(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for TransportPayload(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_247442FA0(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_24743E4AC(v5, v6);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TransportPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_24743E4AC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportPayload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TransportPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportPayload()
{
  return &type metadata for TransportPayload;
}

uint64_t TestClient.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t result = XPCClient.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for XPCClient;
  *a1 = result;
  return result;
}

uint64_t TestClient.activate()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24744F3DC, 0, 0);
}

uint64_t sub_24744F3DC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24745106C;
  return v6(v2, v3);
}

uint64_t TestClient.invalidate()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24744F4FC, 0, 0);
}

uint64_t sub_24744F4FC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24744F5FC;
  return v6(v2, v3);
}

uint64_t sub_24744F5FC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t TestClient.ping()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24744F710, 0, 0);
}

uint64_t sub_24744F710()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24744F5FC;
  return v6(1001, v2, v3);
}

uint64_t TestClient.submit(input:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_24744F834, 0, 0);
}

uint64_t sub_24744F834()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *(void *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 32)
                                                                                        + **(int **)(v4 + 32));
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_24744F960;
  uint64_t v6 = MEMORY[0x263F8D6C8];
  return v8(1004, v0 + 16, v6, &protocol witness table for Int, v3, v4);
}

uint64_t sub_24744F960()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247451068, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t TestClient.submitOptional(input:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 25) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = v2;
  return MEMORY[0x270FA2498](sub_24744FAB8, 0, 0);
}

uint64_t sub_24744FAB8()
{
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  *(void *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + 24) = v1 & 1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                        + **(int **)(v5 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24744FBF4;
  uint64_t v7 = MEMORY[0x263F8D6C8];
  return v9(1005, v0 + 16, v7, &protocol witness table for Int, v4, v5);
}

uint64_t sub_24744FBF4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24744FD28, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24744FD28()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.requestSecret()()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_24744FD60, 0, 0);
}

uint64_t sub_24744FD60()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24744FE8C;
  uint64_t v5 = MEMORY[0x263F8D310];
  return v7(v0 + 16, 1002, v5, &protocol witness table for String, v2, v3);
}

uint64_t sub_24744FE8C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24744FFBC;
  }
  else {
    uint64_t v2 = sub_24744FFA0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24744FFA0()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24744FFBC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.requestOptionalSecret()()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_24744FFF4, 0, 0);
}

uint64_t sub_24744FFF4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 40)
                                                                                        + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_247450120;
  uint64_t v5 = MEMORY[0x263F8D310];
  return v7(v0 + 16, 1003, v5, &protocol witness table for String, v2, v3);
}

uint64_t sub_247450120()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247451078;
  }
  else {
    uint64_t v2 = sub_24745107C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t TestClient.subtractOne(from:)(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_247450254, 0, 0);
}

void sub_247450254()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(void *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v5 = *(void *)(v3 + 64) + **(int **)(v3 + 64);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2474503A4;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_2474503A4()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2474504D4;
  }
  else {
    uint64_t v2 = sub_2474504B8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474504B8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 32));
}

uint64_t sub_2474504D4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.subtractOneOptionalInput(from:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 25) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v2;
  return MEMORY[0x270FA2498](sub_247450510, 0, 0);
}

void sub_247450510()
{
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + 24) = v1 & 1;
  uint64_t v6 = *(void *)(v4 + 64) + **(int **)(v4 + 64);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247450670;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_247450670()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247451080;
  }
  else {
    uint64_t v2 = sub_247451074;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t TestClient.subtractOneOptionalOutput(from:)(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = v1;
  return MEMORY[0x270FA2498](sub_2474507A4, 0, 0);
}

void sub_2474507A4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(void *)(v0 + 32) = v2;
  *(unsigned char *)(v0 + 40) = 0;
  uint64_t v5 = *(void *)(v3 + 56) + **(int **)(v3 + 56);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2474508F4;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_2474508F4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247450A28;
  }
  else {
    uint64_t v2 = sub_247450A08;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247450A08()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_247450A28()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TestClient.subtractOneOptionalInputAndOutput(from:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 25) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  return MEMORY[0x270FA2498](sub_247450A64, 0, 0);
}

void sub_247450A64()
{
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 56);
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)(v0 + 32) = v3;
  *(unsigned char *)(v0 + 40) = v1 & 1;
  uint64_t v6 = *(void *)(v4 + 56) + **(int **)(v4 + 56);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247450BC4;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_247450BC4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247451084;
  }
  else {
    uint64_t v2 = sub_247451070;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t initializeWithCopy for TestClient(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for TestClient(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for TestClient(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TestClient(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TestClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TestClient()
{
  return &type metadata for TestClient;
}

uint64_t SecureCloudUpgradeMessageProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t type metadata accessor for SecureCloudUpgradeMessageProtobuf()
{
  uint64_t result = qword_2692506D0;
  if (!qword_2692506D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.date.setter(double a1)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 24);
  *(double *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.upgradeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.version.setter(int a1)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.secureCloudShareItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36);
  uint64_t result = sub_24743E498(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.type.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v5 = v1 + *(int *)(result + 40);
  *(void *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 9) = 0;
  return result;
}

double SecureCloudUpgradeMessageProtobuf.date.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24);
  double result = *(double *)v1;
  if (*(unsigned char *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.upgradeToken.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudUpgradeMessageProtobuf.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudUpgradeMessageProtobuf.buildNumber.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudUpgradeMessageProtobuf.version.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t SecureCloudUpgradeMessageProtobuf.secureCloudShareItem.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_247446DC4(*v1, v2);
  return v3;
}

uint64_t SecureCloudUpgradeMessageProtobuf.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  if (*((unsigned char *)v4 + 9))
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v7 = *((unsigned char *)v4 + 8);
    uint64_t v5 = *v4;
    char v6 = v7 & 1;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_2474514BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247451520(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasBuildNumber.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearBuildNumber()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 20));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(unsigned char *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_247440458;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasDate.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearDate()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 24);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
}

uint64_t sub_247451724@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247451788(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.upgradeToken.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasUpgradeToken.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearUpgradeToken()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 28));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t sub_2474518C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247451924(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t sub_247451A5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_247442FA0(v2, v3);
  uint64_t result = sub_24743E498(v5, v6);
  *unint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.secureCloudShareItem.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_247446DC4(v5, v6);
  return sub_247451B34;
}

uint64_t sub_247451B34(uint64_t a1, char a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16) + *(int *)(a1 + 24);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)v3;
  unint64_t v6 = *(void *)(v3 + 8);
  if (a2)
  {
    sub_247442FA0(*(void *)a1, v2);
    sub_24743E498(v5, v6);
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v2;
    return sub_24743E4AC(v4, v2);
  }
  else
  {
    uint64_t result = sub_24743E498(*(void *)v3, *(void *)(v3 + 8));
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v2;
  }
  return result;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasSecureCloudShareItem.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearSecureCloudShareItem()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36);
  sub_24743E498(*(void *)v1, *(void *)(v1 + 8));
  *(_OWORD *)uint64_t v1 = xmmword_2474B2410;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.type.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((unsigned char *)v4 + 9))
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v7 = *((unsigned char *)v4 + 8);
    uint64_t v5 = *v4;
    char v6 = v7 & 1;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  return sub_247451CC0;
}

uint64_t sub_247451CC0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16) + *(int *)(result + 12);
  unsigned __int8 v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(_WORD *)(v1 + 8) = v2;
  return result;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasType.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 40) + 9) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearType()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 40);
  *(void *)uint64_t v1 = 0;
  *(_WORD *)(v1 + 8) = 256;
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2474415E0;
}

BOOL SecureCloudUpgradeMessageProtobuf.hasVersion.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudUpgradeMessageProtobuf.clearVersion()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 44);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t SecureCloudUpgradeMessageProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudUpgradeMessageProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudUpgradeMessageProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

void SecureCloudUpgradeMessageProtobuf.MessageType.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t SecureCloudUpgradeMessageProtobuf.MessageType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.MessageType.rawValue.getter()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

void sub_247451F40(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t sub_247451F50@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_247451F68()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

void *sub_247451F84@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 2uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_247451FA0(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8)) {
    uint64_t v2 = *v1 != 0;
  }
  *a1 = v2;
}

uint64_t sub_247451FC0()
{
  return sub_2474B1530();
}

uint64_t sub_24745202C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_247452B2C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_247452078()
{
  return sub_2474B1530();
}

BOOL sub_2474520E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8)) {
    uint64_t v2 = *a1 != 0;
  }
  uint64_t v3 = *a2 != 0;
  if (!*((unsigned char *)a2 + 8)) {
    uint64_t v3 = *a2;
  }
  return v2 == v3;
}

double SecureCloudUpgradeMessageProtobuf.init()@<D0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t v2 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v3 = (void *)(a1 + v2[5]);
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = a1 + v2[6];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  int v5 = (void *)(a1 + v2[7]);
  *int v5 = 0;
  v5[1] = 0;
  char v6 = (void *)(a1 + v2[8]);
  *char v6 = 0;
  v6[1] = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + v2[9]) = xmmword_2474B2410;
  uint64_t v8 = a1 + v2[10];
  *(void *)uint64_t v8 = 0;
  *(_WORD *)(v8 + 8) = 256;
  uint64_t v9 = a1 + v2[11];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return result;
}

void sub_2474521B4()
{
  qword_269250658 = (uint64_t)&unk_26FB900C0;
}

uint64_t static SecureCloudUpgradeMessageProtobuf.MessageType.allCases.getter()
{
  if (qword_269250388 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SecureCloudUpgradeMessageProtobuf.MessageType.allCases.setter(uint64_t a1)
{
  if (qword_269250388 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_269250658 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SecureCloudUpgradeMessageProtobuf.MessageType.allCases.modify())()
{
  if (qword_269250388 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24745234C@<X0>(void *a1@<X8>)
{
  if (qword_269250388 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_269250658;
  return swift_bridgeObjectRetain();
}

unint64_t static SecureCloudUpgradeMessageProtobuf.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_2474523E8()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_269250660);
  __swift_project_value_buffer(v0, (uint64_t)qword_269250660);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2474B3050;
  unint64_t v4 = v20 + v3 + v1[14];
  *(void *)(v20 + v3) = 2;
  *(void *)unint64_t v4 = "buildNumber";
  *(void *)(v4 + 8) = 11;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_2474B0E70();
  char v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v20 + v3 + v2 + v1[14];
  *(void *)(v20 + v3 + v2) = 3;
  *(void *)unint64_t v8 = "date";
  *(void *)(v8 + 8) = 4;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v20 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  *uint64_t v9 = 4;
  *(void *)uint64_t v10 = "upgradeToken";
  *((void *)v10 + 1) = 12;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v20 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 5;
  *(void *)uint64_t v12 = "identifier";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v20 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 6;
  *(void *)uint64_t v14 = "secureCloudShareItem";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v20 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 7;
  *(void *)uint64_t v16 = "type";
  *((void *)v16 + 1) = 4;
  v16[16] = 2;
  v7();
  unint64_t v17 = (void *)(v20 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *unint64_t v17 = 8;
  *(void *)uint64_t v18 = "version";
  *((void *)v18 + 1) = 7;
  v18[16] = 2;
  v7();
  return sub_2474B0E80();
}

uint64_t static SecureCloudUpgradeMessageProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247453048(&qword_269250390, (uint64_t)qword_269250660, a1);
}

uint64_t SecureCloudUpgradeMessageProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 2:
      case 4:
      case 5:
        type metadata accessor for SecureCloudUpgradeMessageProtobuf();
        sub_2474B0D80();
        break;
      case 3:
        type metadata accessor for SecureCloudUpgradeMessageProtobuf();
        sub_2474B0D70();
        break;
      case 6:
        type metadata accessor for SecureCloudUpgradeMessageProtobuf();
        sub_2474B0D60();
        break;
      case 7:
        sub_24745289C();
        break;
      case 8:
        type metadata accessor for SecureCloudUpgradeMessageProtobuf();
        sub_2474B0D90();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_24745289C()
{
  return sub_2474B0D50();
}

uint64_t SecureCloudUpgradeMessageProtobuf.traverse<A>(visitor:)()
{
  char v2 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  if (!*(void *)(v0 + v2[5] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
  {
    if ((*(unsigned char *)(v0 + v2[6] + 8) & 1) != 0 || (uint64_t result = sub_2474B0E30(), !v1))
    {
      if (!*(void *)(v0 + v2[7] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
      {
        if (!*(void *)(v0 + v2[8] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
        {
          uint64_t v4 = v0 + v2[9];
          unint64_t v5 = *(void *)(v4 + 8);
          if (v5 >> 60 == 15
            || (uint64_t v6 = *(void *)v4,
                sub_247442FA0(*(void *)v4, *(void *)(v4 + 8)),
                sub_2474B0E20(),
                uint64_t result = sub_24743E498(v6, v5),
                !v1))
          {
            if ((*(unsigned char *)(v0 + v2[10] + 9) & 1) != 0 || (sub_247452B2C(), uint64_t result = sub_2474B0E10(), !v1))
            {
              if (*(unsigned char *)(v0 + v2[11] + 4)) {
                return sub_2474B0CC0();
              }
              uint64_t result = sub_2474B0E50();
              if (!v1) {
                return sub_2474B0CC0();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_247452B2C()
{
  unint64_t result = qword_269250690;
  if (!qword_269250690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250690);
  }
  return result;
}

uint64_t SecureCloudUpgradeMessageProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

double sub_247452C0C@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2474B0CD0();
  uint64_t v4 = a1[6];
  unint64_t v5 = (void *)(a2 + a1[5]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = a2 + v4;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = a1[8];
  unint64_t v8 = (void *)(a2 + a1[7]);
  void *v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v9 = 0;
  v9[1] = 0;
  double result = 0.0;
  uint64_t v11 = a1[10];
  *(_OWORD *)(a2 + a1[9]) = xmmword_2474B2410;
  uint64_t v12 = a2 + v11;
  *(void *)uint64_t v12 = 0;
  *(_WORD *)(v12 + 8) = 256;
  uint64_t v13 = a2 + a1[11];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return result;
}

unint64_t sub_247452C94()
{
  return 0xD000000000000021;
}

uint64_t sub_247452CB0()
{
  return SecureCloudUpgradeMessageProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_247452CC8()
{
  return SecureCloudUpgradeMessageProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_247452CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_247454578(&qword_2692506E0, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_247452D5C@<X0>(uint64_t a1@<X8>)
{
  return sub_247453104(&qword_269250390, (uint64_t)qword_269250660, a1);
}

uint64_t sub_247452D80(uint64_t a1)
{
  uint64_t v2 = sub_247454578(&qword_269250538, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_247452DEC()
{
  sub_247454578(&qword_269250538, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
  return sub_2474B0DF0();
}

uint64_t sub_247452E6C()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_269250678);
  __swift_project_value_buffer(v0, (uint64_t)qword_269250678);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B3060;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "request";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "response";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudUpgradeMessageProtobuf.MessageType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247453048(&qword_269250398, (uint64_t)qword_269250678, a1);
}

uint64_t sub_247453048@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2474B0E90();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_2474530E0@<X0>(uint64_t a1@<X8>)
{
  return sub_247453104(&qword_269250398, (uint64_t)qword_269250678, a1);
}

uint64_t sub_247453104@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2474B0E90();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t _s21ActivitySharingClient33SecureCloudUpgradeMessageProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v60[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v60[-v9];
  uint64_t v11 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (v16) {
      goto LABEL_34;
    }
    goto LABEL_10;
  }
  if (!v16) {
    goto LABEL_34;
  }
  BOOL v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (char v18 = 0, (sub_2474B1470() & 1) != 0))
  {
LABEL_10:
    uint64_t v19 = v11[6];
    uint64_t v20 = (double *)(a1 + v19);
    char v21 = *(unsigned char *)(a1 + v19 + 8);
    uint64_t v22 = (double *)(a2 + v19);
    int v23 = *(unsigned __int8 *)(a2 + v19 + 8);
    if (v21)
    {
      if (!v23) {
        goto LABEL_34;
      }
    }
    else
    {
      if (*v20 != *v22) {
        LOBYTE(v23) = 1;
      }
      if (v23) {
        goto LABEL_34;
      }
    }
    uint64_t v24 = v11[7];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = *(void *)(a1 + v24 + 8);
    uint64_t v27 = (void *)(a2 + v24);
    uint64_t v28 = v27[1];
    if (v26)
    {
      if (!v28) {
        goto LABEL_34;
      }
      if (*v25 != *v27 || v26 != v28)
      {
        char v18 = 0;
        if ((sub_2474B1470() & 1) == 0) {
          return v18 & 1;
        }
      }
    }
    else if (v28)
    {
      goto LABEL_34;
    }
    uint64_t v30 = v11[8];
    long long v31 = (void *)(a1 + v30);
    uint64_t v32 = *(void *)(a1 + v30 + 8);
    uint64_t v33 = (void *)(a2 + v30);
    uint64_t v34 = v33[1];
    if (v32)
    {
      if (!v34) {
        goto LABEL_34;
      }
      if (*v31 != *v33 || v32 != v34)
      {
        char v18 = 0;
        if ((sub_2474B1470() & 1) == 0) {
          return v18 & 1;
        }
      }
    }
    else if (v34)
    {
      goto LABEL_34;
    }
    uint64_t v37 = v11[9];
    uint64_t v38 = *(void *)(a1 + v37);
    unint64_t v39 = *(void *)(a1 + v37 + 8);
    uint64_t v40 = (uint64_t *)(a2 + v37);
    uint64_t v41 = *v40;
    unint64_t v42 = v40[1];
    if (v39 >> 60 == 15)
    {
      if (v42 >> 60 == 15)
      {
LABEL_42:
        uint64_t v44 = v11[10];
        unint64_t v45 = (uint64_t *)(a1 + v44);
        char v46 = *(unsigned char *)(a1 + v44 + 9);
        unint64_t v47 = (uint64_t *)(a2 + v44);
        if (v46)
        {
          if ((*((unsigned char *)v47 + 9) & 1) == 0) {
            goto LABEL_34;
          }
        }
        else
        {
          if (*((unsigned char *)v47 + 9)) {
            goto LABEL_34;
          }
          uint64_t v48 = *v45;
          char v49 = *((unsigned char *)v45 + 8);
          uint64_t v50 = *v47;
          char v51 = *((unsigned char *)v47 + 8);
          uint64_t v52 = v48 != 0;
          if ((v49 & 1) == 0) {
            uint64_t v52 = v48;
          }
          if (v51)
          {
            if (v50)
            {
              if (v52 != 1) {
                goto LABEL_34;
              }
            }
            else if (v52)
            {
              goto LABEL_34;
            }
          }
          else if (v52 != v50)
          {
            goto LABEL_34;
          }
        }
        uint64_t v53 = v11[11];
        uint64_t v54 = (_DWORD *)(a1 + v53);
        char v55 = *(unsigned char *)(a1 + v53 + 4);
        uint64_t v56 = (_DWORD *)(a2 + v53);
        int v57 = *(unsigned __int8 *)(a2 + v53 + 4);
        if ((v55 & 1) == 0)
        {
          if (*v54 != *v56) {
            LOBYTE(v57) = 1;
          }
          if (v57) {
            goto LABEL_34;
          }
LABEL_61:
          v58 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
          v58(v10, a1, v4);
          v58(v8, a2, v4);
          sub_247454578(&qword_269250420, MEMORY[0x263F50560]);
          char v18 = sub_2474B0F30();
          unint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
          v59(v8, v4);
          v59(v10, v4);
          return v18 & 1;
        }
        if (v57) {
          goto LABEL_61;
        }
LABEL_34:
        char v18 = 0;
        return v18 & 1;
      }
    }
    else if (v42 >> 60 != 15)
    {
      uint64_t v62 = v38;
      sub_247446DC4(v38, v39);
      sub_247446DC4(v41, v42);
      int v61 = sub_247480048(v62, v39, v41, v42);
      sub_24743E498(v41, v42);
      sub_24743E498(v62, v39);
      if ((v61 & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_42;
    }
    uint64_t v43 = v38;
    sub_247446DC4(v38, v39);
    sub_247446DC4(v41, v42);
    sub_24743E498(v43, v39);
    sub_24743E498(v41, v42);
    char v18 = 0;
  }
  return v18 & 1;
}

unint64_t sub_2474535C4()
{
  unint64_t result = qword_2692506A0;
  if (!qword_2692506A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692506A0);
  }
  return result;
}

unint64_t sub_24745361C()
{
  unint64_t result = qword_2692506A8;
  if (!qword_2692506A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692506A8);
  }
  return result;
}

unint64_t sub_247453674()
{
  unint64_t result = qword_2692506B0;
  if (!qword_2692506B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692506B0);
  }
  return result;
}

unint64_t sub_2474536CC()
{
  unint64_t result = qword_2692506B8;
  if (!qword_2692506B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692506C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692506B8);
  }
  return result;
}

uint64_t sub_247453728()
{
  return sub_247454578(&qword_2692506C8, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_247453770()
{
  return sub_247454578(&qword_269250538, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_2474537B8()
{
  return sub_247454578(&qword_269250698, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_247453800()
{
  return sub_247454578(&qword_269250550, (void (*)(uint64_t))type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_247453850@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v5 = a1 + *(int *)(result + 24);
  double v6 = *(double *)v5;
  if (*(unsigned char *)(v5 + 8)) {
    double v6 = 0.0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_24745389C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 24);
  *(void *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_2474538E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf() + 36));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *v3;
  }
  unint64_t v7 = 0xC000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a2 = v6;
  a2[1] = v7;
  return sub_247446DC4(v4, v5);
}

uint64_t sub_24745394C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  unint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 40));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)v5 + 8);
  int v8 = *((unsigned __int8 *)v5 + 9);
  if (v8) {
    uint64_t v6 = 0;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_2474539A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v6 = a2 + *(int *)(result + 40);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  *(unsigned char *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_2474539F0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  unint64_t v5 = (int *)(a1 + *(int *)(result + 44));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247453A38(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudUpgradeMessageProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudUpgradeMessageProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    BOOL v17 = (uint64_t *)((char *)a1 + v15);
    char v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *BOOL v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)a1 + v16);
    char v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    unint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v28 = *v25;
      sub_247442FA0(*v25, v26);
      *(void *)uint64_t v24 = v28;
      *((void *)v24 + 1) = v26;
    }
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    long long v31 = (char *)a1 + v29;
    uint64_t v32 = (char *)a2 + v29;
    *(void *)long long v31 = *(void *)v32;
    *((_WORD *)v31 + 4) = *((_WORD *)v32 + 4);
    uint64_t v33 = (char *)a1 + v30;
    uint64_t v34 = (char *)a2 + v30;
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v6 = (uint64_t *)(a1 + *(int *)(a2 + 36));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return sub_24743E4AC(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  BOOL v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (void *)(a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  unint64_t v25 = *(void *)(a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v26 = *v24;
    sub_247442FA0(*v24, v25);
    *(void *)uint64_t v23 = v26;
    *(void *)(v23 + 8) = v25;
  }
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  *(_WORD *)(v29 + 8) = *(_WORD *)(v30 + 8);
  uint64_t v31 = a1 + v28;
  uint64_t v32 = a2 + v28;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  *(unsigned char *)(v11 + 8) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = *(void *)(a2 + v20 + 8);
  if (*(void *)(a1 + v20 + 8) >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      uint64_t v25 = *v22;
      sub_247442FA0(v25, v23);
      uint64_t v26 = *v21;
      unint64_t v27 = v21[1];
      *uint64_t v21 = v25;
      v21[1] = v23;
      sub_24743E4AC(v26, v27);
      goto LABEL_8;
    }
    sub_2474439C4((uint64_t)v21);
    goto LABEL_6;
  }
  if (v23 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    goto LABEL_8;
  }
  uint64_t v24 = *v22;
  sub_247442FA0(v24, v23);
  *uint64_t v21 = v24;
  v21[1] = v23;
LABEL_8:
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  *(_WORD *)(v29 + 8) = *((_WORD *)v30 + 4);
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  LODWORD(v31) = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = v31;
  return a1;
}

uint64_t initializeWithTake for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  uint64_t v11 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  return a1;
}

uint64_t assignWithTake for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = (void *)(a1 + v13);
  uint64_t v17 = (uint64_t *)(a2 + v13);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (uint64_t *)(a1 + v25);
  unint64_t v27 = (uint64_t *)(a2 + v25);
  unint64_t v28 = *(void *)(a1 + v25 + 8);
  if (v28 >> 60 != 15)
  {
    unint64_t v29 = v27[1];
    if (v29 >> 60 != 15)
    {
      uint64_t v30 = *v26;
      *uint64_t v26 = *v27;
      v26[1] = v29;
      sub_24743E4AC(v30, v28);
      goto LABEL_6;
    }
    sub_2474439C4((uint64_t)v26);
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
LABEL_6:
  uint64_t v31 = a3[10];
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  *(_WORD *)(v33 + 8) = *(_WORD *)(v34 + 8);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247454264);
}

uint64_t sub_247454264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247454348);
}

uint64_t sub_247454348(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_247454408()
{
  uint64_t result = sub_2474B0CE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf.MessageType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudUpgradeMessageProtobuf.MessageType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_24745452C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_247454548(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeMessageProtobuf.MessageType()
{
  return &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType;
}

uint64_t sub_247454578(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TransportDispatchService.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  return v0;
}

uint64_t TransportDispatchService.init()()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  return v0;
}

uint64_t sub_247454630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return MEMORY[0x270FA2498](sub_247454654, v3, 0);
}

uint64_t sub_247454654()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_2692506F8;
  *(void *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v2 + 112);
  *(void *)(v2 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_269250708, v6, v3, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_24745479C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24745B0A0;
  return v7();
}

uint64_t sub_247454868()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2474548A0()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24745B0A0;
  return v6();
}

uint64_t sub_2474549B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return MEMORY[0x270FA2498](sub_2474549E0, v5, 0);
}

uint64_t sub_2474549E0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269250720;
  *(void *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_269250728, v6, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_247454B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  uint64_t v8 = sub_2474B1210();
  v7[8] = v8;
  v7[9] = *(void *)(v8 - 8);
  v7[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247454C00, 0, 0);
}

uint64_t sub_247454C00()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[2];
  unint64_t v3 = v0[3];
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_247446DC4(v4, v3);
  v5(v4, v3, v2, v1);
  uint64_t v9 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_247454D80;
  uint64_t v7 = v0[10];
  return v9(v7);
}

uint64_t sub_247454D80()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247454F14;
  }
  else {
    uint64_t v2 = sub_247454E94;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247454E94()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247454F14()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247454F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return MEMORY[0x270FA2498](sub_247454FB8, v5, 0);
}

uint64_t sub_247454FB8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269250740;
  *(void *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_269250748, v6, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24745510C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  uint64_t v9 = sub_2474B1210();
  v7[8] = v9;
  v7[9] = *(void *)(v9 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = *(void *)(a6 - 8);
  v7[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24745522C, 0, 0);
}

uint64_t sub_24745522C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[2];
  unint64_t v3 = v0[3];
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_247446DC4(v4, v3);
  v5(v4, v3, v2, v1);
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v6, v0[8]);
    sub_247446DD8();
    swift_allocError();
    *uint64_t v9 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v12 = (int *)v0[4];
    (*(void (**)(void, uint64_t, uint64_t))(v7 + 32))(v0[12], v6, v8);
    uint64_t v15 = (uint64_t (*)(uint64_t))((char *)v12 + *v12);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[13] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_247455450;
    uint64_t v14 = v0[12];
    return v15(v14);
  }
}

uint64_t sub_247455450()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2474555F0;
  }
  else {
    uint64_t v2 = sub_247455564;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247455564()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2474555F0()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247455678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return MEMORY[0x270FA2498](sub_2474556A0, v5, 0);
}

uint64_t sub_2474556A0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269250760;
  *(void *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_269250768, v6, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2474557F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 72) = a6;
  *(void *)(v7 + 80) = a7;
  *(void *)(v7 + 56) = a4;
  *(void *)(v7 + 64) = a5;
  *(void *)(v7 + 40) = a1;
  *(void *)(v7 + 48) = a2;
  uint64_t v10 = sub_2474B1210();
  *(void *)(v7 + 88) = v10;
  *(void *)(v7 + 96) = *(void *)(v10 - 8);
  *(void *)(v7 + 104) = swift_task_alloc();
  *(void *)(v7 + 112) = *(void *)(a6 - 8);
  *(void *)(v7 + 120) = swift_task_alloc();
  *(_OWORD *)(v7 + 128) = *(_OWORD *)a3;
  *(unsigned char *)(v7 + 33) = *(unsigned char *)(a3 + 16);
  return MEMORY[0x270FA2498](sub_247455928, 0, 0);
}

uint64_t sub_247455928()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 40);
  unint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_247446DC4(v4, v3);
  v5(v4, v3, v2, v1);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 96) + 8))(v6, *(void *)(v0 + 88));
    sub_247446DD8();
    swift_allocError();
    *uint64_t v9 = 1;
    swift_willThrow();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  int v10 = *(unsigned __int8 *)(v0 + 33);
  (*(void (**)(void, uint64_t, uint64_t))(v7 + 32))(*(void *)(v0 + 120), v6, v8);
  if (v10 == 255)
  {
    uint64_t v19 = *(void *)(v0 + 112);
    uint64_t v18 = *(void *)(v0 + 120);
    uint64_t v20 = *(void *)(v0 + 72);
    sub_247446DD8();
    swift_allocError();
    *uint64_t v21 = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_8;
  }
  uint64_t v11 = *(void **)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(int **)(v0 + 56);
  char v14 = *(unsigned char *)(v0 + 33) & 1;
  *(void *)(v0 + 16) = v11;
  *(void *)(v0 + 24) = v12;
  *(unsigned char *)(v0 + 32) = v14;
  sub_24745B068(v11, v12, v14);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))((char *)v13 + *v13);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_247455BD0;
  uint64_t v16 = *(void *)(v0 + 120);
  return v23(v16, v0 + 16);
}

uint64_t sub_247455BD0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247455D88;
  }
  else {
    uint64_t v2 = sub_247455CE4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247455CE4()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_24745B078(*(void **)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 33));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_247455D88()
{
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 33);
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 72));
  sub_24745B078(v1, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_247455E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return MEMORY[0x270FA2498](sub_247455E58, v5, 0);
}

uint64_t sub_247455E58()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269250780;
  *(void *)(v6 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_269250790, v6, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_247455FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a1;
  uint64_t v10 = sub_2474B1210();
  v8[5] = v10;
  v8[6] = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  v8[7] = v11;
  char v14 = (uint64_t (*)(uint64_t))((char *)a5 + *a5);
  uint64_t v12 = (void *)swift_task_alloc();
  v8[8] = v12;
  void *v12 = v8;
  v12[1] = sub_2474560F8;
  return v14(v11);
}

uint64_t sub_2474560F8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24745633C;
  }
  else {
    uint64_t v2 = sub_24745620C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24745620C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[2];
    (*(void (**)(uint64_t, void))(v0[6] + 8))(v1, v0[5]);
    *(void *)(v4 + 32) = 0;
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
  }
  else
  {
    uint64_t v5 = v0[4];
    uint64_t v6 = (uint64_t *)v0[2];
    v6[3] = v2;
    v6[4] = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v1, v2);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_24745633C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2474563A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  return MEMORY[0x270FA2498](sub_2474563CC, v7, 0);
}

uint64_t sub_2474563CC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 48) = v3;
  *(void *)(v5 + 56) = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = &unk_2692507A8;
  *(void *)(v7 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_2692507B0, v7, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_247456520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = v13;
  v8[10] = v14;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  uint64_t v9 = sub_2474B1210();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  uint64_t v10 = sub_2474B1210();
  v8[14] = v10;
  v8[15] = *(void *)(v10 - 8);
  unsigned char v8[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247456660, 0, 0);
}

uint64_t sub_247456660()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[3];
  unint64_t v3 = v0[4];
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_247446DC4(v4, v3);
  v5(v4, v3, v2, v1);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(v0[5] + *(int *)v0[5]);
  long long v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  *long long v6 = v0;
  v6[1] = sub_2474567F4;
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[13];
  return v10(v8, v7);
}

uint64_t sub_2474567F4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247456A90;
  }
  else {
    uint64_t v2 = sub_247456908;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247456908()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v7 = v0[14];
  if (v4 == 1)
  {
    uint64_t v8 = v0[11];
    uint64_t v9 = v0[12];
    uint64_t v10 = v0[2];
    (*(void (**)(void, void))(v6 + 8))(v0[16], v0[14]);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
    *(void *)(v10 + 32) = 0;
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
  }
  else
  {
    uint64_t v11 = v0[10];
    uint64_t v12 = (uint64_t *)v0[2];
    v12[3] = v2;
    v12[4] = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_247456A90()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247456B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[5] = a1;
  v8[6] = a2;
  return MEMORY[0x270FA2498](sub_247456B44, v7, 0);
}

uint64_t sub_247456B44()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 48) = v3;
  *(void *)(v5 + 56) = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = &unk_2692507C8;
  *(void *)(v7 + 24) = v5;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_247458AD4((uint64_t)&unk_2692507D0, v7, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_247456C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = v14;
  v8[10] = v15;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  uint64_t v10 = sub_2474B1210();
  v8[11] = v10;
  v8[12] = *(void *)(v10 - 8);
  v8[13] = swift_task_alloc();
  uint64_t v11 = sub_2474B1210();
  v8[14] = v11;
  v8[15] = *(void *)(v11 - 8);
  unsigned char v8[16] = swift_task_alloc();
  v8[17] = *(void *)(a7 - 8);
  v8[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247456E28, 0, 0);
}

uint64_t sub_247456E28()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[3];
  unint64_t v3 = v0[4];
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 16);
  sub_247446DC4(v4, v3);
  v5(v4, v3, v2, v1);
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[15] + 8))(v6, v0[14]);
    sub_247446DD8();
    swift_allocError();
    *uint64_t v9 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v12 = (int *)v0[5];
    (*(void (**)(void, uint64_t, uint64_t))(v7 + 32))(v0[18], v6, v8);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)v12 + *v12);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[19] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_247457060;
    uint64_t v14 = v0[18];
    uint64_t v15 = v0[13];
    return v16(v15, v14);
  }
}

uint64_t sub_247457060()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247457300;
  }
  else {
    uint64_t v2 = sub_247457174;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247457174()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  if (v4 == 1)
  {
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[2];
    (*(void (**)(void, void))(v6 + 8))(v0[18], v0[7]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    *(void *)(v9 + 32) = 0;
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
  }
  else
  {
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[7];
    uint64_t v12 = (uint64_t *)v0[2];
    v12[3] = v2;
    v12[4] = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_247457300()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24745739C(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 40) = a1;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a3;
  *(unsigned char *)(v4 + 32) = *(unsigned char *)(a3 + 16);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 48) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_24745749C;
  return v9(v5, v6, v4 + 16);
}

uint64_t sub_24745749C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24744FD28;
  }
  else {
    uint64_t v2 = sub_2474575B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474575B0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v1 + 24) = &type metadata for VoidTransportSerializable;
  *(void *)(v1 + 32) = &off_26FB93258;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2474575E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24745B0A0;
  return sub_24745739C(a1, a2, a3, v8);
}

uint64_t sub_2474576A4(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_2474577A0;
  return v11(a1, v7, v8, a3);
}

uint64_t sub_2474577A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247457894(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  unint64_t v4 = sub_247458834(a1);
  if (v5)
  {
    unint64_t v6 = v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t v10 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2474597E8();
      uint64_t v8 = v10;
    }
    sub_247458918(v6, v8);
    *uint64_t v3 = v8;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_247457954(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = -1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 48) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_247457A30;
  *(void *)(v4 + 144) = v1;
  *(_OWORD *)(v4 + 128) = xmmword_2474B2410;
  *(void *)(v4 + 120) = a1;
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(v2 + 16);
  *(unsigned char *)(v4 + 97) = *(unsigned char *)(v2 + 32);
  return MEMORY[0x270FA2498](sub_247458354, v1, 0);
}

uint64_t sub_247457A30(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[7] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[5];
    return MEMORY[0x270FA2498](sub_247451068, v7, 0);
  }
  else
  {
    sub_24743E498(a1, a2);
    uint64_t v8 = (uint64_t (*)(void))v6[1];
    return v8();
  }
}

uint64_t sub_247457B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 32) = -1;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 48) = v8;
  *(void *)uint64_t v8 = v4;
  *(void *)(v8 + 8) = sub_247457A30;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 144) = v3;
  *(void *)(v8 + 120) = a1;
  *(void *)(v8 + 128) = a2;
  *(_OWORD *)(v8 + 152) = *(_OWORD *)(v4 + 16);
  *(unsigned char *)(v8 + 97) = *(unsigned char *)(v4 + 32);
  return MEMORY[0x270FA2498](sub_247458354, v3, 0);
}

uint64_t sub_247457C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 40) = v4;
  char v9 = *(unsigned char *)(a4 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a4;
  *(unsigned char *)(v5 + 32) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v5 + 48) = v10;
  *(void *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = sub_247457D48;
  *(void *)(v10 + 136) = a3;
  *(void *)(v10 + 144) = v4;
  *(void *)(v10 + 120) = a1;
  *(void *)(v10 + 128) = a2;
  *(_OWORD *)(v10 + 152) = *(_OWORD *)(v5 + 16);
  *(unsigned char *)(v10 + 97) = *(unsigned char *)(v5 + 32);
  return MEMORY[0x270FA2498](sub_247458354, v4, 0);
}

uint64_t sub_247457D48(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[7] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[5];
    return MEMORY[0x270FA2498](sub_24744FD28, v7, 0);
  }
  else
  {
    sub_24743E498(a1, a2);
    uint64_t v8 = (uint64_t (*)(void))v6[1];
    return v8();
  }
}

uint64_t sub_247457E9C(uint64_t a1)
{
  *(void *)(v2 + 40) = v1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = -1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 48) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_247457F78;
  *(void *)(v4 + 144) = v1;
  *(_OWORD *)(v4 + 128) = xmmword_2474B2410;
  *(void *)(v4 + 120) = a1;
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(v2 + 16);
  *(unsigned char *)(v4 + 97) = *(unsigned char *)(v2 + 32);
  return MEMORY[0x270FA2498](sub_247458354, v1, 0);
}

uint64_t sub_247457F78(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(void *)(v6 + 40);
    return MEMORY[0x270FA2498](sub_247451068, v8, 0);
  }
  else
  {
    char v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v9(a1, a2);
  }
}

uint64_t sub_2474580DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 32) = -1;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 48) = v8;
  *(void *)uint64_t v8 = v4;
  *(void *)(v8 + 8) = sub_2474581BC;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 144) = v3;
  *(void *)(v8 + 120) = a1;
  *(void *)(v8 + 128) = a2;
  *(_OWORD *)(v8 + 152) = *(_OWORD *)(v4 + 16);
  *(unsigned char *)(v8 + 97) = *(unsigned char *)(v4 + 32);
  return MEMORY[0x270FA2498](sub_247458354, v3, 0);
}

uint64_t sub_2474581BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(void *)(v6 + 40);
    return MEMORY[0x270FA2498](sub_24744FD28, v8, 0);
  }
  else
  {
    char v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v9(a1, a2);
  }
}

uint64_t sub_247458320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 136) = a3;
  *(void *)(v5 + 144) = v4;
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 128) = a2;
  *(_OWORD *)(v5 + 152) = *(_OWORD *)a4;
  *(unsigned char *)(v5 + 97) = *(unsigned char *)(a4 + 16);
  return MEMORY[0x270FA2498](sub_247458354, v4, 0);
}

uint64_t sub_247458354()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_247458834(*(void *)(v0 + 120)), (v4 & 1) != 0))
  {
    char v5 = *(unsigned char *)(v0 + 97);
    uint64_t v6 = *(void *)(v2 + 56) + 16 * v3;
    uint64_t v7 = *(int **)v6;
    *(void *)(v0 + 168) = *(void *)(v6 + 8);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 152);
    *(unsigned char *)(v0 + 96) = v5;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 128);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v8;
    void *v8 = v0;
    v8[1] = sub_247458510;
    return v12(v0 + 16, v0 + 104, v0 + 80);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    unsigned char *v10 = 2;
    swift_willThrow();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_247458510()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    char v4 = sub_247458758;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 144);
    swift_release();
    char v4 = sub_247458638;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247458638()
{
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = v0[23];
    uint64_t v3 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v3);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      uint64_t v6 = (uint64_t (*)(void))v0[1];
      return v6();
    }
    uint64_t v8 = v4;
    unint64_t v9 = v5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  }
  else
  {
    sub_247459994((uint64_t)(v0 + 2));
    uint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v10(v8, v9);
}

uint64_t sub_247458758()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TransportDispatchService.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t TransportDispatchService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t TransportDispatchService.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_247458828()
{
  return v0;
}

unint64_t sub_247458834(uint64_t a1)
{
  sub_2474B1510();
  sub_2474B1520();
  uint64_t v2 = sub_2474B1530();
  return sub_247459668(a1, v2);
}

unint64_t sub_2474588A0(uint64_t a1, uint64_t a2)
{
  sub_2474B1510();
  sub_2474B0F80();
  uint64_t v4 = sub_2474B1530();
  return sub_247459704(a1, a2, v4);
}

unint64_t sub_247458918(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2474B12A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2474B1510();
        sub_2474B1520();
        uint64_t result = sub_2474B1530();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (void *)(v10 + 8 * v3);
          uint64_t v12 = (void *)(v10 + 8 * v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            _OWORD *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_247458AD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_247458834(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2474597E8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_2474A7E54(result, a4 & 1);
  uint64_t result = sub_247458834(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_2474B14B0();
  __break(1u);
  return result;
}

uint64_t sub_247458C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v10 = v3[5];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  void *v12 = v4;
  v12[1] = sub_24745B0A0;
  return sub_247454B34(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t sub_247458CE8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_247458D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v10 = v3[5];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  void *v12 = v4;
  v12[1] = sub_24745B0A0;
  return sub_24745510C(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t sub_247458DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v11 = v3[4];
  uint64_t v10 = v3[5];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  void *v12 = v4;
  v12[1] = sub_24745B0A0;
  return sub_2474557F4(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t sub_247458EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = v4[2];
  uint64_t v11 = v4[3];
  uint64_t v13 = (int *)v4[4];
  uint64_t v12 = v4[5];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v14;
  void *v14 = v5;
  v14[1] = sub_24745B0A0;
  return sub_247455FAC(a1, a2, a3, a4, v13, v12, v10, v11);
}

uint64_t sub_247458FA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24745B0A0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, int *))((char *)&dword_269250788 + dword_269250788);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_247459078()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2474590B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4[2];
  uint64_t v10 = v4[3];
  uint64_t v12 = v4[6];
  uint64_t v11 = v4[7];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_24745B0A0;
  return sub_247456520(a1, a2, a3, a4, v12, v11, v9, v10);
}

uint64_t sub_2474591A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_2474577A0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, int *))((char *)&dword_269250788 + dword_269250788);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_247459274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4[2];
  uint64_t v10 = v4[3];
  uint64_t v12 = v4[6];
  uint64_t v11 = v4[7];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_24745B0A0;
  return sub_247456C98(a1, a2, a3, a4, v12, v11, v9, v10);
}

uint64_t sub_247459368(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2474588A0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24745AE5C(&qword_269250888);
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_2474A812C(v15, a4 & 1);
  unint64_t v21 = sub_2474588A0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_2474B14B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2474594E0(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2474588A0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24745AA80();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + (v12 << 6);
      return sub_24745B00C((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_2474A8138(v15, a4 & 1);
  unint64_t v21 = sub_2474588A0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_2474B14B0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (_OWORD *)(v18[7] + (v12 << 6));
  long long v25 = *a1;
  long long v26 = a1[1];
  long long v27 = a1[3];
  v24[2] = a1[2];
  v24[3] = v27;
  *uint64_t v24 = v25;
  v24[1] = v26;
  uint64_t v28 = v18[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v30;
  return swift_bridgeObjectRetain();
}

unint64_t sub_247459668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_247459704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2474B1470() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2474B1470() & 1) == 0);
    }
  }
  return v6;
}

void *sub_2474597E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C390);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2474B1370();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_247459994(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TransportDispatchService()
{
  return self;
}

uint64_t method lookup function for TransportDispatchService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TransportDispatchService);
}

uint64_t dispatch thunk of TransportDispatchService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TransportDispatchService.register(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 128)
                                                          + **(int **)(*(void *)v3 + 128));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_24745B0A0;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of TransportDispatchService.register<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 136)
                                                                            + **(int **)(*(void *)v5 + 136));
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_24745B0A0;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 144)
                                                                            + **(int **)(*(void *)v5 + 144));
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_24745B0A0;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 152)
                                                                            + **(int **)(*(void *)v5 + 152));
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_24745B0A0;
  return v14(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 160)
                                                                            + **(int **)(*(void *)v5 + 160));
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_24745B0A0;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of TransportDispatchService.register<A, B>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v7 + 168)
                                                                                              + **(int **)(*(void *)v7 + 168));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_2474577A0;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

{
  uint64_t v7;
  uint64_t v8;
  void *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v7 + 176)
                                                                                              + **(int **)(*(void *)v7 + 176));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_24745B0A0;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TransportDispatchService.unregister(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of TransportDispatchService.dispatchMessage(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 208) + **(int **)(*(void *)v1 + 208));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24745B0A0;
  return v6(a1);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchMessage(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 216)
                                                          + **(int **)(*(void *)v3 + 216));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_24745B0A0;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchMessage(_:data:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 224)
                                                                   + **(int **)(*(void *)v4 + 224));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[1] = sub_24745B0A0;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 232) + **(int **)(*(void *)v1 + 232));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24745B0D0;
  return v6(a1);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 240)
                                                          + **(int **)(*(void *)v3 + 240));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_24745A850;
  return v10(a1, a2, a3);
}

uint64_t sub_24745A850(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:data:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 248)
                                                                   + **(int **)(*(void *)v4 + 248));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[1] = sub_24745B0D0;
  return v12(a1, a2, a3, a4);
}

void *sub_24745AA80()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250890);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2474B1370();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = v15 << 6;
    unint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    char v25 = *(unsigned char *)(v21 + 40);
    uint64_t v26 = *(void *)(v21 + 48);
    uint64_t v27 = *(void *)(v21 + 56);
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    long long v29 = *(_OWORD *)(v21 + 24);
    *uint64_t v28 = v19;
    v28[1] = v18;
    unint64_t v30 = *(void *)(v4 + 56) + v20;
    *(void *)unint64_t v30 = v22;
    *(void *)(v30 + 8) = v23;
    *(void *)(v30 + 16) = v24;
    *(_OWORD *)(v30 + 24) = v29;
    *(unsigned char *)(v30 + 40) = v25;
    *(void *)(v30 + 48) = v26;
    *(void *)(v30 + 56) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24745AC94()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250880);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2474B1370();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24745AE50()
{
  return sub_24745AE5C(&qword_269250878);
}

void *sub_24745AE5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B1370();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24745B00C(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_24745B068(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_24745B078(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    sub_24745B090(a1, a2, a3 & 1);
  }
}

void sub_24745B090(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

double SecureCloudInviteUserInfoProtobuf.init()@<D0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t v2 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  double result = 0.0;
  *(_OWORD *)(a1 + v2[5]) = xmmword_2474B2410;
  *(_OWORD *)(a1 + v2[6]) = xmmword_2474B2410;
  *(_OWORD *)(a1 + v2[7]) = xmmword_2474B2410;
  uint64_t v4 = (void *)(a1 + v2[8]);
  *uint64_t v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteUserInfoProtobuf()
{
  uint64_t result = qword_2692508C0;
  if (!qword_2692508C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.activityDataPreview.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20);
  uint64_t result = sub_24743E498(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.legacyShareLocations.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28);
  uint64_t result = sub_24743E498(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.secureCloudShareItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24);
  uint64_t result = sub_24743E498(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.cloudKitAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.cloudKitAddress.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudInviteUserInfoProtobuf.activityDataPreview.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_247446DC4(*v1, v2);
  return v3;
}

uint64_t SecureCloudInviteUserInfoProtobuf.legacyShareLocations.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_247446DC4(*v1, v2);
  return v3;
}

uint64_t SecureCloudInviteUserInfoProtobuf.secureCloudShareItem.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_247446DC4(*v1, v2);
  return v3;
}

uint64_t sub_24745B3DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_247442FA0(v2, v3);
  uint64_t result = sub_24743E498(v5, v6);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.activityDataPreview.modify(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_247446DC4(v5, v6);
  return sub_24745B4B4;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasActivityDataPreview.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearActivityDataPreview()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20);
  sub_24743E498(*(void *)v1, *(void *)(v1 + 8));
  *(_OWORD *)uint64_t v1 = xmmword_2474B2410;
}

uint64_t sub_24745B52C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_247442FA0(v2, v3);
  uint64_t result = sub_24743E498(v5, v6);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.secureCloudShareItem.modify(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_247446DC4(v5, v6);
  return sub_24745B4B4;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasSecureCloudShareItem.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearSecureCloudShareItem()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24);
  sub_24743E498(*(void *)v1, *(void *)(v1 + 8));
  *(_OWORD *)uint64_t v1 = xmmword_2474B2410;
}

uint64_t sub_24745B678(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_247442FA0(v2, v3);
  uint64_t result = sub_24743E498(v5, v6);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.legacyShareLocations.modify(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_247446DC4(v5, v6);
  return sub_24745B4B4;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasLegacyShareLocations.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearLegacyShareLocations()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28);
  sub_24743E498(*(void *)v1, *(void *)(v1 + 8));
  *(_OWORD *)uint64_t v1 = xmmword_2474B2410;
}

uint64_t sub_24745B7C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24745B828(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.cloudKitAddress.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_24743C790;
}

BOOL SecureCloudInviteUserInfoProtobuf.hasCloudKitAddress.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteUserInfoProtobuf.clearCloudKitAddress()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudInviteUserInfoProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudInviteUserInfoProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudInviteUserInfoProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static SecureCloudInviteUserInfoProtobuf.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24745BA6C()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_269250898);
  __swift_project_value_buffer(v0, (uint64_t)qword_269250898);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B3490;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "activityDataPreview";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  int64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 3;
  *(void *)unint64_t v10 = "secureCloudShareItem";
  *(void *)(v10 + 8) = 20;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)uint64_t v12 = "legacyShareLocations";
  *((void *)v12 + 1) = 20;
  v12[16] = 2;
  v9();
  unint64_t v13 = (void *)(v5 + 3 * v2);
  int64_t v14 = (char *)v13 + v1[14];
  *unint64_t v13 = 5;
  *(void *)int64_t v14 = "cloudKitAddress";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudInviteUserInfoProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692503A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269250898);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t SecureCloudInviteUserInfoProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
      case 3:
      case 4:
        type metadata accessor for SecureCloudInviteUserInfoProtobuf();
        sub_2474B0D60();
        break;
      case 5:
        type metadata accessor for SecureCloudInviteUserInfoProtobuf();
        sub_2474B0D80();
        break;
      default:
        continue;
    }
  }
}

uint64_t SecureCloudInviteUserInfoProtobuf.traverse<A>(visitor:)()
{
  char v2 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v3 = v0 + v2[5];
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 == 15
    || (uint64_t v5 = *(void *)v3,
        sub_247442FA0(*(void *)v3, *(void *)(v3 + 8)),
        sub_2474B0E20(),
        uint64_t result = sub_24743E498(v5, v4),
        !v1))
  {
    uint64_t v7 = v0 + v2[6];
    unint64_t v8 = *(void *)(v7 + 8);
    if (v8 >> 60 == 15
      || (uint64_t v9 = *(void *)v7,
          sub_247442FA0(*(void *)v7, *(void *)(v7 + 8)),
          sub_2474B0E20(),
          uint64_t result = sub_24743E498(v9, v8),
          !v1))
    {
      uint64_t v10 = v0 + v2[7];
      unint64_t v11 = *(void *)(v10 + 8);
      if (v11 >> 60 == 15
        || (uint64_t v12 = *(void *)v10,
            sub_247442FA0(*(void *)v10, *(void *)(v10 + 8)),
            sub_2474B0E20(),
            uint64_t result = sub_24743E498(v12, v11),
            !v1))
      {
        if (!*(void *)(v0 + v2[8] + 8)) {
          return sub_2474B0CC0();
        }
        uint64_t result = sub_2474B0E40();
        if (!v1) {
          return sub_2474B0CC0();
        }
      }
    }
  }
  return result;
}

uint64_t SecureCloudInviteUserInfoProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

double sub_24745C0A8@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2474B0CD0();
  double result = 0.0;
  uint64_t v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_2474B2410;
  *(_OWORD *)(a2 + v5) = xmmword_2474B2410;
  uint64_t v6 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_2474B2410;
  uint64_t v7 = (void *)(a2 + v6);
  *uint64_t v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_24745C0F4()
{
  return 0xD000000000000021;
}

uint64_t sub_24745C110()
{
  return SecureCloudInviteUserInfoProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_24745C128()
{
  return SecureCloudInviteUserInfoProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_24745C140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24745D3B8(&qword_2692508D0, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_24745C1BC@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692503A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269250898);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24745C264(uint64_t a1)
{
  uint64_t v2 = sub_24745D3B8(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_24745C2D0()
{
  sub_24745D3B8(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
  return sub_2474B0DF0();
}

uint64_t _s21ActivitySharingClient33SecureCloudInviteUserInfoProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  int64_t v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15) {
      goto LABEL_15;
    }
  }
  else
  {
    if (v16 >> 60 == 15) {
      goto LABEL_15;
    }
    sub_247446DC4(v12, v13);
    sub_247446DC4(v15, v16);
    char v17 = sub_247480048(v12, v13, v15, v16);
    sub_24743E498(v15, v16);
    sub_24743E498(v12, v13);
    if ((v17 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v18 = v10[6];
  uint64_t v12 = *(void *)(a1 + v18);
  unint64_t v13 = *(void *)(a1 + v18 + 8);
  uint64_t v19 = (uint64_t *)(a2 + v18);
  uint64_t v15 = *v19;
  unint64_t v16 = v19[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  if (v16 >> 60 == 15) {
    goto LABEL_15;
  }
  sub_247446DC4(v12, v13);
  sub_247446DC4(v15, v16);
  char v20 = sub_247480048(v12, v13, v15, v16);
  sub_24743E498(v15, v16);
  sub_24743E498(v12, v13);
  if ((v20 & 1) == 0)
  {
LABEL_16:
    char v23 = 0;
    return v23 & 1;
  }
LABEL_11:
  uint64_t v21 = v10[7];
  uint64_t v12 = *(void *)(a1 + v21);
  unint64_t v13 = *(void *)(a1 + v21 + 8);
  uint64_t v22 = (uint64_t *)(a2 + v21);
  uint64_t v15 = *v22;
  unint64_t v16 = v22[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15) {
      goto LABEL_19;
    }
LABEL_15:
    sub_247446DC4(v12, v13);
    sub_247446DC4(v15, v16);
    sub_24743E498(v12, v13);
    sub_24743E498(v15, v16);
    goto LABEL_16;
  }
  if (v16 >> 60 == 15) {
    goto LABEL_15;
  }
  sub_247446DC4(v12, v13);
  sub_247446DC4(v15, v16);
  char v25 = sub_247480048(v12, v13, v15, v16);
  sub_24743E498(v15, v16);
  sub_24743E498(v12, v13);
  if ((v25 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_19:
  uint64_t v26 = v10[8];
  int64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = *(void *)(a1 + v26 + 8);
  long long v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  if (!v28)
  {
    if (v30) {
      goto LABEL_16;
    }
    goto LABEL_26;
  }
  if (!v30) {
    goto LABEL_16;
  }
  if (*v27 == *v29 && v28 == v30 || (char v23 = 0, (sub_2474B1470() & 1) != 0))
  {
LABEL_26:
    uint64_t v31 = v36;
    unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
    uint64_t v33 = a1;
    uint64_t v34 = v37;
    v32(v9, v33, v37);
    v32(v7, a2, v34);
    sub_24745D3B8(&qword_269250420, MEMORY[0x263F50560]);
    char v23 = sub_2474B0F30();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v31 + 8);
    v35(v7, v34);
    v35(v9, v34);
  }
  return v23 & 1;
}

uint64_t sub_24745C718()
{
  return sub_24745D3B8(&qword_2692508B8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_24745C760()
{
  return sub_24745D3B8(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_24745C7A8()
{
  return sub_24745D3B8(&qword_2692508B0, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_24745C7F0()
{
  return sub_24745D3B8(&qword_269250580, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_24745C838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 20));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *v3;
  }
  unint64_t v7 = 0xC000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a2 = v6;
  a2[1] = v7;
  return sub_247446DC4(v4, v5);
}

uint64_t sub_24745C89C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 24));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *v3;
  }
  unint64_t v7 = 0xC000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a2 = v6;
  a2[1] = v7;
  return sub_247446DC4(v4, v5);
}

uint64_t sub_24745C900@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf() + 28));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *v3;
  }
  unint64_t v7 = 0xC000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a2 = v6;
  a2[1] = v7;
  return sub_247446DC4(v4, v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteUserInfoProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_247442FA0(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    unint64_t v16 = (char *)a2 + v14;
    unint64_t v17 = *((void *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v18 = *(void *)v16;
      sub_247442FA0(*(void *)v16, *((void *)v16 + 1));
      *(void *)uint64_t v15 = v18;
      *((void *)v15 + 1) = v17;
    }
    uint64_t v19 = a3[7];
    char v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    unint64_t v22 = *((void *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)char v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *(void *)v21;
      sub_247442FA0(*(void *)v21, *((void *)v21 + 1));
      *(void *)char v20 = v23;
      *((void *)v20 + 1) = v22;
    }
    uint64_t v24 = a3[8];
    char v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudInviteUserInfoProtobuf(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + a2[5]);
  unint64_t v6 = v5[1];
  if (v6 >> 60 != 15) {
    sub_24743E4AC(*v5, v6);
  }
  uint64_t v7 = (uint64_t *)(a1 + a2[6]);
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_24743E4AC(*v7, v8);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[7]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_24743E4AC(*v9, v10);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_247442FA0(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  unint64_t v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_247442FA0(*v14, v14[1]);
    *(void *)uint64_t v13 = v16;
    *(void *)(v13 + 8) = v15;
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  unint64_t v20 = v19[1];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v21 = *v19;
    sub_247442FA0(*v19, v19[1]);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v20;
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_247442FA0(v11, v10);
      uint64_t *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_2474439C4((uint64_t)v8);
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v12 = *v9;
  sub_247442FA0(v12, v10);
  uint64_t v13 = *v8;
  unint64_t v14 = v8[1];
  uint64_t *v8 = v12;
  v8[1] = v10;
  sub_24743E4AC(v13, v14);
LABEL_8:
  uint64_t v15 = a3[6];
  uint64_t v16 = (uint64_t *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = *(void *)(a2 + v15 + 8);
  if (*(void *)(a1 + v15 + 8) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v17;
      sub_247442FA0(v19, v18);
      *uint64_t v16 = v19;
      v16[1] = v18;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
    sub_2474439C4((uint64_t)v16);
LABEL_13:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  uint64_t v20 = *v17;
  sub_247442FA0(v20, v18);
  uint64_t v21 = *v16;
  unint64_t v22 = v16[1];
  *uint64_t v16 = v20;
  v16[1] = v18;
  sub_24743E4AC(v21, v22);
LABEL_15:
  uint64_t v23 = a3[7];
  uint64_t v24 = (uint64_t *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  unint64_t v26 = *(void *)(a2 + v23 + 8);
  if (*(void *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      uint64_t v28 = *v25;
      sub_247442FA0(v28, v26);
      uint64_t v29 = *v24;
      unint64_t v30 = v24[1];
      *uint64_t v24 = v28;
      v24[1] = v26;
      sub_24743E4AC(v29, v30);
      goto LABEL_22;
    }
    sub_2474439C4((uint64_t)v24);
    goto LABEL_20;
  }
  if (v26 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_22;
  }
  uint64_t v27 = *v25;
  sub_247442FA0(v27, v26);
  *uint64_t v24 = v27;
  v24[1] = v26;
LABEL_22:
  uint64_t v31 = a3[8];
  unint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_2474439C4(v8);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v11;
  sub_24743E4AC(v12, v10);
LABEL_6:
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  unint64_t v16 = *(void *)(a1 + v13 + 8);
  if (v16 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    goto LABEL_11;
  }
  unint64_t v17 = *(void *)(v15 + 8);
  if (v17 >> 60 == 15)
  {
    sub_2474439C4(v14);
    goto LABEL_9;
  }
  uint64_t v18 = *(void *)v14;
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v17;
  sub_24743E4AC(v18, v16);
LABEL_11:
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    unint64_t v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      uint64_t v24 = *v20;
      *uint64_t v20 = *v21;
      v20[1] = v23;
      sub_24743E4AC(v24, v22);
      goto LABEL_16;
    }
    sub_2474439C4((uint64_t)v20);
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
LABEL_16:
  uint64_t v25 = a3[8];
  unint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *unint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24745D170);
}

uint64_t sub_24745D170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteUserInfoProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24745D254);
}

uint64_t sub_24745D254(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  }
  return result;
}

uint64_t sub_24745D314()
{
  uint64_t result = sub_2474B0CE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24745D3B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.date.setter(double a1)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 20);
  *(double *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteResponseProtobuf()
{
  uint64_t result = qword_269250950;
  if (!qword_269250950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.handshakeToken.setter(uint64_t a1, uint64_t a2)
{
  int v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *int v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  int v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *int v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  int v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *int v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.userInfo.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  sub_2474443AC(v3, &qword_2692504E0);
  sub_247440FD8(a1, v3);
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  int v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

uint64_t SecureCloudInviteResponseProtobuf.version.setter(int a1)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.type.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v5 = v1 + *(int *)(result + 36);
  *(void *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 9) = 0;
  return result;
}

double SecureCloudInviteResponseProtobuf.date.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20);
  double result = *(double *)v1;
  if (*(unsigned char *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.handshakeToken.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudInviteResponseProtobuf.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudInviteResponseProtobuf.buildNumber.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

BOOL SecureCloudInviteResponseProtobuf.hasUserInfo.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v1 - 8);
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_247440F70(v0 + *(int *)(v4 + 40), (uint64_t)v3);
  uint64_t v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_2474443AC((uint64_t)v3, &qword_2692504E0);
  return v6;
}

uint64_t SecureCloudInviteResponseProtobuf.userInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_247440F70(v1 + *(int *)(v6 + 40), (uint64_t)v5);
  uint64_t v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_247440FD8((uint64_t)v5, a1);
  }
  sub_2474B0CD0();
  *(_OWORD *)(a1 + v7[5]) = xmmword_2474B2410;
  *(_OWORD *)(a1 + v7[6]) = xmmword_2474B2410;
  *(_OWORD *)(a1 + v7[7]) = xmmword_2474B2410;
  uint64_t v8 = (void *)(a1 + v7[8]);
  void *v8 = 0;
  v8[1] = 0;
  return sub_2474443AC((uint64_t)v5, &qword_2692504E0);
}

uint64_t SecureCloudInviteResponseProtobuf.version.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t SecureCloudInviteResponseProtobuf.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  if (*((unsigned char *)v4 + 9))
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v7 = *((unsigned char *)v4 + 8);
    uint64_t v5 = *v4;
    char v6 = v7 & 1;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(unsigned char *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_247440458;
}

BOOL SecureCloudInviteResponseProtobuf.hasDate.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearDate()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 20);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
}

uint64_t sub_24745DB08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24745DB6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.handshakeToken.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudInviteResponseProtobuf.hasHandshakeToken.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearHandshakeToken()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 24));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t sub_24745DCA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24745DD08(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudInviteResponseProtobuf.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 28));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t sub_24745DE40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24745DEA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudInviteResponseProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudInviteResponseProtobuf.hasBuildNumber.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearBuildNumber()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t (*SecureCloudInviteResponseProtobuf.type.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 36);
  *(_DWORD *)(a1 + 12) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((unsigned char *)v4 + 9))
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v7 = *((unsigned char *)v4 + 8);
    uint64_t v5 = *v4;
    char v6 = v7 & 1;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  return sub_247451CC0;
}

BOOL SecureCloudInviteResponseProtobuf.hasType.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 36) + 9) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearType()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 36);
  *(void *)uint64_t v1 = 0;
  *(_WORD *)(v1 + 8) = 256;
}

uint64_t sub_24745E0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  sub_247440F70(a1 + *(int *)(v7 + 40), (uint64_t)v6);
  uint64_t v8 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v6, 1, v8) != 1) {
    return sub_247440FD8((uint64_t)v6, a2);
  }
  sub_2474B0CD0();
  *(_OWORD *)(a2 + v8[5]) = xmmword_2474B2410;
  *(_OWORD *)(a2 + v8[6]) = xmmword_2474B2410;
  *(_OWORD *)(a2 + v8[7]) = xmmword_2474B2410;
  uint64_t v9 = (void *)(a2 + v8[8]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  return sub_2474443AC((uint64_t)v6, &qword_2692504E0);
}

uint64_t sub_24745E1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2474412E4(a1, (uint64_t)v7);
  uint64_t v8 = a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  sub_2474443AC(v8, &qword_2692504E0);
  sub_247440FD8((uint64_t)v7, v8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

void (*SecureCloudInviteResponseProtobuf.userInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_247440F70(v1 + v11, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_2474B0CD0();
    *(_OWORD *)&v10[v6[5]] = xmmword_2474B2410;
    *(_OWORD *)&v10[v6[6]] = xmmword_2474B2410;
    *(_OWORD *)&v10[v6[7]] = xmmword_2474B2410;
    uint64_t v12 = &v10[v6[8]];
    *(void *)uint64_t v12 = 0;
    *((void *)v12 + 1) = 0;
    sub_2474443AC((uint64_t)v5, &qword_2692504E0);
  }
  else
  {
    sub_247440FD8((uint64_t)v5, (uint64_t)v10);
  }
  return sub_2474411D8;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearUserInfo()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 40);
  sub_2474443AC(v1, &qword_2692504E0);
  uint64_t v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t (*SecureCloudInviteResponseProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2474415E0;
}

BOOL SecureCloudInviteResponseProtobuf.hasVersion.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudInviteResponseProtobuf.clearVersion()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf() + 44);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t SecureCloudInviteResponseProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudInviteResponseProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudInviteResponseProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

void SecureCloudInviteResponseProtobuf.ProtobufType.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t SecureCloudInviteResponseProtobuf.ProtobufType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 5;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.ProtobufType.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t sub_24745E6FC()
{
  return *(void *)v0;
}

unint64_t sub_24745E704@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureCloudInviteResponseProtobuf.ProtobufType.init(rawValue:)(*a1, a2);
}

uint64_t sub_24745E70C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_24745F394();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

BOOL sub_24745E758(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t SecureCloudInviteResponseProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t v2 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v3 = a1 + v2[5];
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  unint64_t v4 = (void *)(a1 + v2[6]);
  *unint64_t v4 = 0;
  v4[1] = 0;
  int v5 = (void *)(a1 + v2[7]);
  *int v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(a1 + v2[8]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = a1 + v2[9];
  *(void *)uint64_t v7 = 0;
  *(_WORD *)(v7 + 8) = 256;
  uint64_t v8 = a1 + v2[10];
  uint64_t v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v11 = a1 + v2[11];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return result;
}

void sub_24745E848()
{
  qword_2692508D8 = (uint64_t)&unk_26FB90100;
}

uint64_t static SecureCloudInviteResponseProtobuf.ProtobufType.allCases.getter()
{
  if (qword_2692503A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SecureCloudInviteResponseProtobuf.ProtobufType.allCases.setter(uint64_t a1)
{
  if (qword_2692503A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2692508D8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SecureCloudInviteResponseProtobuf.ProtobufType.allCases.modify())()
{
  if (qword_2692503A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24745E9DC@<X0>(void *a1@<X8>)
{
  if (qword_2692503A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_2692508D8;
  return swift_bridgeObjectRetain();
}

unint64_t static SecureCloudInviteResponseProtobuf.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24745EA78()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_2692508E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692508E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B3050;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "date";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "handshakeToken";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "identifier";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "buildNumber";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "type";
  *((void *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  unint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *unint64_t v17 = 6;
  *(void *)uint64_t v18 = "userInfo";
  *((void *)v18 + 1) = 8;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 7;
  *(void *)uint64_t v20 = "version";
  *((void *)v20 + 1) = 7;
  v20[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudInviteResponseProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247453048(&qword_2692503B0, (uint64_t)qword_2692508E0, a1);
}

uint64_t SecureCloudInviteResponseProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        type metadata accessor for SecureCloudInviteResponseProtobuf();
        sub_2474B0D70();
        break;
      case 2:
      case 3:
      case 4:
        type metadata accessor for SecureCloudInviteResponseProtobuf();
        sub_2474B0D80();
        break;
      case 5:
        sub_24745EF28();
        break;
      case 6:
        sub_24745EFA0();
        break;
      case 7:
        type metadata accessor for SecureCloudInviteResponseProtobuf();
        sub_2474B0D90();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_24745EF28()
{
  return sub_2474B0D50();
}

uint64_t sub_24745EFA0()
{
  return sub_2474B0DA0();
}

uint64_t SecureCloudInviteResponseProtobuf.traverse<A>(visitor:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf();
  if ((*(unsigned char *)(v0 + v8[5] + 8) & 1) != 0 || (uint64_t result = sub_2474B0E30(), !v1))
  {
    if (!*(void *)(v0 + v8[6] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
    {
      if (!*(void *)(v0 + v8[7] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
      {
        if (!*(void *)(v0 + v8[8] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
        {
          unint64_t v10 = (uint64_t *)(v0 + v8[9]);
          if ((*((unsigned char *)v10 + 9) & 1) != 0
            || (v11 = *((unsigned char *)v10 + 8), v12 = *v10, v13 = v11 & 1, sub_24745F394(), uint64_t result = sub_2474B0E10(), !v1))
          {
            sub_247440F70(v0 + v8[10], (uint64_t)v4);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v5) == 1)
            {
              sub_2474443AC((uint64_t)v4, &qword_2692504E0);
            }
            else
            {
              sub_247440FD8((uint64_t)v4, (uint64_t)v7);
              sub_247461B9C(&qword_2692504E8, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteUserInfoProtobuf);
              sub_2474B0E60();
              uint64_t result = sub_247441348((uint64_t)v7);
              if (v1) {
                return result;
              }
            }
            if (*(unsigned char *)(v0 + v8[11] + 4)) {
              return sub_2474B0CC0();
            }
            uint64_t result = sub_2474B0E50();
            if (!v1) {
              return sub_2474B0CC0();
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_24745F394()
{
  unint64_t result = qword_269250910;
  if (!qword_269250910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250910);
  }
  return result;
}

uint64_t SecureCloudInviteResponseProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

uint64_t sub_24745F474@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2474B0CD0();
  uint64_t v4 = a1[6];
  uint64_t v5 = a2 + a1[5];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  uint64_t v6 = (void *)(a2 + v4);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = a1[8];
  uint64_t v8 = (void *)(a2 + a1[7]);
  void *v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = a1[10];
  uint64_t v11 = a2 + a1[9];
  *(_WORD *)(v11 + 8) = 256;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = 0;
  uint64_t v13 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v15 = a2 + a1[11];
  *(_DWORD *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 4) = 1;
  return result;
}

unint64_t sub_24745F53C()
{
  return 0xD000000000000021;
}

uint64_t sub_24745F558()
{
  return SecureCloudInviteResponseProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_24745F570()
{
  return SecureCloudInviteResponseProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_24745F588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_247461B9C(&qword_269250960, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_24745F604@<X0>(uint64_t a1@<X8>)
{
  return sub_247453104(&qword_2692503B0, (uint64_t)qword_2692508E0, a1);
}

uint64_t sub_24745F628(uint64_t a1)
{
  uint64_t v2 = sub_247461B9C(&qword_269250568, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_24745F694()
{
  sub_247461B9C(&qword_269250568, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
  return sub_2474B0DF0();
}

uint64_t sub_24745F714()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_2692508F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692508F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2474B3690;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 0;
  *(void *)unint64_t v5 = "accept";
  *(void *)(v5 + 8) = 6;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_2474B0E70();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 1;
  *(void *)unint64_t v9 = "incompatibleVersion";
  *(void *)(v9 + 8) = 19;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  void *v10 = 2;
  *(void *)uint64_t v11 = "incompatibleAccount";
  *((void *)v11 + 1) = 19;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  void *v12 = 3;
  *(void *)uint64_t v13 = "ineligibleDevices";
  *((void *)v13 + 1) = 17;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 4;
  *(void *)uint64_t v14 = "invalidAddress";
  *(void *)(v14 + 8) = 14;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_2474B0E80();
}

uint64_t static SecureCloudInviteResponseProtobuf.ProtobufType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247453048(&qword_2692503B8, (uint64_t)qword_2692508F8, a1);
}

uint64_t sub_24745F9B0@<X0>(uint64_t a1@<X8>)
{
  return sub_247453104(&qword_2692503B8, (uint64_t)qword_2692508F8, a1);
}

uint64_t _s21ActivitySharingClient33SecureCloudInviteResponseProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v71 = (char *)&v68 - v7;
  uint64_t v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v74 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250530);
  MEMORY[0x270FA5388](v11);
  uint64_t v75 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v68 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v68 - v20;
  uint64_t v22 = type metadata accessor for SecureCloudInviteResponseProtobuf();
  unint64_t v23 = (int *)v22;
  uint64_t v24 = *(int *)(v22 + 20);
  uint64_t v25 = (double *)(a1 + v24);
  char v26 = *(unsigned char *)(a1 + v24 + 8);
  uint64_t v27 = (double *)(a2 + v24);
  int v28 = *(unsigned __int8 *)(a2 + v24 + 8);
  if (v26)
  {
    if (!v28) {
      goto LABEL_58;
    }
  }
  else
  {
    if (*v25 != *v27) {
      LOBYTE(v28) = 1;
    }
    if (v28) {
      goto LABEL_58;
    }
  }
  uint64_t v29 = *(int *)(v22 + 24);
  unint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = *(void *)(a1 + v29 + 8);
  unint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  if (v31)
  {
    if (!v33) {
      goto LABEL_58;
    }
    uint64_t v70 = v4;
    if (*v30 != *v32 || v31 != v33)
    {
      char v34 = 0;
      if ((sub_2474B1470() & 1) == 0) {
        return v34 & 1;
      }
    }
  }
  else
  {
    uint64_t v70 = v4;
    if (v33) {
      goto LABEL_58;
    }
  }
  uint64_t v35 = v23[7];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = *(void *)(a1 + v35 + 8);
  uint64_t v38 = (void *)(a2 + v35);
  uint64_t v39 = v38[1];
  if (v37)
  {
    if (!v39) {
      goto LABEL_58;
    }
    if (*v36 != *v38 || v37 != v39)
    {
      char v34 = 0;
      if ((sub_2474B1470() & 1) == 0) {
        return v34 & 1;
      }
    }
  }
  else if (v39)
  {
    goto LABEL_58;
  }
  uint64_t v40 = v23[8];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = *(void *)(a1 + v40 + 8);
  uint64_t v43 = (void *)(a2 + v40);
  uint64_t v44 = v43[1];
  if (v42)
  {
    if (!v44) {
      goto LABEL_58;
    }
    if (*v41 != *v43 || v42 != v44)
    {
      char v34 = 0;
      if ((sub_2474B1470() & 1) == 0) {
        return v34 & 1;
      }
    }
  }
  else if (v44)
  {
    goto LABEL_58;
  }
  uint64_t v45 = v23[9];
  char v46 = (uint64_t *)(a1 + v45);
  char v47 = *(unsigned char *)(a1 + v45 + 9);
  uint64_t v48 = (uint64_t *)(a2 + v45);
  if (v47)
  {
    uint64_t v49 = v75;
    if ((*((unsigned char *)v48 + 9) & 1) == 0) {
      goto LABEL_58;
    }
  }
  else
  {
    uint64_t v49 = v75;
    if (*((unsigned char *)v48 + 9)) {
      goto LABEL_58;
    }
    uint64_t v53 = *v46;
    uint64_t v54 = *v48;
    if (v48[1])
    {
      switch(v54)
      {
        case 1:
          if (v53 != 1) {
            goto LABEL_58;
          }
          goto LABEL_30;
        case 2:
          if (v53 != 2) {
            goto LABEL_58;
          }
          goto LABEL_30;
        case 3:
          if (v53 != 3) {
            goto LABEL_58;
          }
          goto LABEL_30;
        case 4:
          if (v53 != 4) {
            goto LABEL_58;
          }
          goto LABEL_30;
        default:
          if (!v53) {
            goto LABEL_30;
          }
          goto LABEL_58;
      }
    }
    if (v53 != v54) {
      goto LABEL_58;
    }
  }
LABEL_30:
  sub_247440F70(a1 + v23[10], (uint64_t)v21);
  sub_247440F70(a2 + v23[10], (uint64_t)v19);
  uint64_t v50 = v49 + *(int *)(v11 + 48);
  sub_247440F70((uint64_t)v21, v49);
  uint64_t v69 = v50;
  sub_247440F70((uint64_t)v19, v50);
  uint64_t v51 = v49;
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  if (v52(v51, 1, v8) != 1)
  {
    sub_247440F70(v75, (uint64_t)v16);
    if (v52(v69, 1, v8) == 1)
    {
      sub_2474443AC((uint64_t)v19, &qword_2692504E0);
      sub_2474443AC((uint64_t)v21, &qword_2692504E0);
      sub_247441348((uint64_t)v16);
      goto LABEL_39;
    }
    sub_247440FD8(v69, (uint64_t)v10);
    char v55 = static SecureCloudInviteUserInfoProtobuf.== infix(_:_:)((uint64_t)v16, (uint64_t)v10);
    sub_247441348((uint64_t)v10);
    sub_2474443AC((uint64_t)v19, &qword_2692504E0);
    sub_2474443AC((uint64_t)v21, &qword_2692504E0);
    sub_247441348((uint64_t)v16);
    sub_2474443AC(v75, &qword_2692504E0);
    if (v55) {
      goto LABEL_44;
    }
LABEL_58:
    char v34 = 0;
    return v34 & 1;
  }
  sub_2474443AC((uint64_t)v19, &qword_2692504E0);
  sub_2474443AC((uint64_t)v21, &qword_2692504E0);
  if (v52(v69, 1, v8) != 1)
  {
LABEL_39:
    sub_2474443AC(v75, &qword_269250530);
    goto LABEL_58;
  }
  sub_2474443AC(v75, &qword_2692504E0);
LABEL_44:
  uint64_t v56 = v23[11];
  int v57 = (_DWORD *)(a1 + v56);
  char v58 = *(unsigned char *)(a1 + v56 + 4);
  unint64_t v59 = (_DWORD *)(a2 + v56);
  int v60 = *(unsigned __int8 *)(a2 + v56 + 4);
  if (v58)
  {
    uint64_t v61 = v70;
    if (!v60) {
      goto LABEL_58;
    }
  }
  else
  {
    if (*v57 != *v59) {
      LOBYTE(v60) = 1;
    }
    uint64_t v61 = v70;
    if (v60) {
      goto LABEL_58;
    }
  }
  uint64_t v62 = v73;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  uint64_t v64 = v71;
  v63(v71, a1, v61);
  uint64_t v65 = v72;
  v63(v72, a2, v61);
  sub_247461B9C(&qword_269250420, MEMORY[0x263F50560]);
  char v34 = sub_2474B0F30();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v62 + 8);
  v66(v65, v61);
  v66(v64, v61);
  return v34 & 1;
}

unint64_t sub_24746007C()
{
  unint64_t result = qword_269250920;
  if (!qword_269250920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250920);
  }
  return result;
}

unint64_t sub_2474600D4()
{
  unint64_t result = qword_269250928;
  if (!qword_269250928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250928);
  }
  return result;
}

unint64_t sub_24746012C()
{
  unint64_t result = qword_269250930;
  if (!qword_269250930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250930);
  }
  return result;
}

unint64_t sub_247460184()
{
  unint64_t result = qword_269250938;
  if (!qword_269250938)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269250940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250938);
  }
  return result;
}

uint64_t sub_2474601E0()
{
  return sub_247461B9C(&qword_269250948, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_247460228()
{
  return sub_247461B9C(&qword_269250568, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_247460270()
{
  return sub_247461B9C(&qword_269250918, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_2474602B8()
{
  return sub_247461B9C(&qword_269250578, (void (*)(uint64_t))type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_247460300@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v5 = a1 + *(int *)(result + 20);
  double v6 = *(double *)v5;
  if (*(unsigned char *)(v5 + 8)) {
    double v6 = 0.0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_24746034C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 20);
  *(void *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_2474603A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 36));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)v5 + 8);
  int v8 = *((unsigned __int8 *)v5 + 9);
  if (v8) {
    uint64_t v6 = 0;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_2474603F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v6 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  *(unsigned char *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_24746044C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v5 = (int *)(a1 + *(int *)(result + 44));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247460494(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudInviteResponseProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudInviteResponseProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    uint64_t v61 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16);
    uint64_t v62 = v7;
    v61(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)a1 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)a1 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v25 = (char *)a1 + v23;
    char v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    *((_WORD *)v25 + 4) = *((_WORD *)v26 + 4);
    __dst = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    uint64_t v28 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
    uint64_t v29 = *(void *)(v28 - 8);
    unint64_t v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
    uint64_t v31 = (int *)v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v32 = v27;
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v31))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
      memcpy(__dst, v27, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v60 = v29;
      ((void (*)(char *, char *, uint64_t))v61)(__dst, v27, v62);
      uint64_t v35 = v31[5];
      uint64_t v36 = &__dst[v35];
      uint64_t v37 = &v27[v35];
      unint64_t v38 = *((void *)v37 + 1);
      uint64_t v39 = v31;
      if (v38 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      }
      else
      {
        uint64_t v40 = *(void *)v37;
        sub_247442FA0(*(void *)v37, *((void *)v37 + 1));
        *(void *)uint64_t v36 = v40;
        *((void *)v36 + 1) = v38;
        uint64_t v31 = v39;
      }
      uint64_t v41 = v31[6];
      uint64_t v42 = &__dst[v41];
      uint64_t v43 = &v27[v41];
      unint64_t v44 = *((void *)v43 + 1);
      if (v44 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      }
      else
      {
        uint64_t v45 = *(void *)v43;
        sub_247442FA0(*(void *)v43, *((void *)v43 + 1));
        *(void *)uint64_t v42 = v45;
        *((void *)v42 + 1) = v44;
        uint64_t v31 = v39;
      }
      uint64_t v46 = v31[7];
      char v47 = &__dst[v46];
      uint64_t v48 = &v32[v46];
      unint64_t v49 = *((void *)v48 + 1);
      if (v49 >> 60 == 15)
      {
        *(_OWORD *)char v47 = *(_OWORD *)v48;
      }
      else
      {
        uint64_t v50 = *(void *)v48;
        sub_247442FA0(*(void *)v48, *((void *)v48 + 1));
        *(void *)char v47 = v50;
        *((void *)v47 + 1) = v49;
        uint64_t v31 = v39;
      }
      uint64_t v51 = v31[8];
      uint64_t v52 = &__dst[v51];
      uint64_t v53 = &v32[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      char v55 = *(void (**)(char *, void, uint64_t, int *))(v60 + 56);
      swift_bridgeObjectRetain();
      v55(__dst, 0, 1, v31);
    }
    uint64_t v56 = a3[11];
    int v57 = (char *)a1 + v56;
    char v58 = (char *)a2 + v56;
    *(_DWORD *)int v57 = *(_DWORD *)v58;
    v57[4] = v58[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7);
  if (!result)
  {
    v5(v6, v4);
    uint64_t v9 = (uint64_t *)(v6 + v7[5]);
    unint64_t v10 = v9[1];
    if (v10 >> 60 != 15) {
      sub_24743E4AC(*v9, v10);
    }
    uint64_t v11 = (uint64_t *)(v6 + v7[6]);
    unint64_t v12 = v11[1];
    if (v12 >> 60 != 15) {
      sub_24743E4AC(*v11, v12);
    }
    uint64_t v13 = (uint64_t *)(v6 + v7[7]);
    unint64_t v14 = v13[1];
    if (v14 >> 60 != 15) {
      sub_24743E4AC(*v13, v14);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  unint64_t v59 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v60 = v6;
  v59(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  unint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (void *)(a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(_WORD *)(v24 + 8) = *(_WORD *)(v25 + 8);
  __dst = (char *)(a1 + v23);
  char v26 = (char *)(a2 + v23);
  uint64_t v27 = type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, int *))(v28 + 48);
  unint64_t v30 = (int *)v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = v26;
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v30))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(__dst, v26, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v58 = v28;
    ((void (*)(char *, char *, uint64_t))v59)(__dst, v26, v60);
    uint64_t v33 = v30[5];
    uint64_t v34 = &__dst[v33];
    uint64_t v35 = &v26[v33];
    unint64_t v36 = *((void *)v35 + 1);
    uint64_t v37 = v30;
    if (v36 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    }
    else
    {
      uint64_t v38 = *(void *)v35;
      sub_247442FA0(*(void *)v35, *((void *)v35 + 1));
      *(void *)uint64_t v34 = v38;
      *((void *)v34 + 1) = v36;
      unint64_t v30 = v37;
    }
    uint64_t v39 = v30[6];
    uint64_t v40 = &__dst[v39];
    uint64_t v41 = &v26[v39];
    unint64_t v42 = *((void *)v41 + 1);
    if (v42 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    }
    else
    {
      uint64_t v43 = *(void *)v41;
      sub_247442FA0(*(void *)v41, *((void *)v41 + 1));
      *(void *)uint64_t v40 = v43;
      *((void *)v40 + 1) = v42;
      unint64_t v30 = v37;
    }
    uint64_t v44 = v30[7];
    uint64_t v45 = &__dst[v44];
    uint64_t v46 = &v31[v44];
    unint64_t v47 = *((void *)v46 + 1);
    if (v47 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    }
    else
    {
      uint64_t v48 = *(void *)v46;
      sub_247442FA0(*(void *)v46, *((void *)v46 + 1));
      *(void *)uint64_t v45 = v48;
      *((void *)v45 + 1) = v47;
      unint64_t v30 = v37;
    }
    uint64_t v49 = v30[8];
    uint64_t v50 = &__dst[v49];
    uint64_t v51 = &v31[v49];
    uint64_t v52 = *((void *)v51 + 1);
    *(void *)uint64_t v50 = *(void *)v51;
    *((void *)v50 + 1) = v52;
    uint64_t v53 = *(void (**)(char *, void, uint64_t, int *))(v58 + 56);
    swift_bridgeObjectRetain();
    v53(__dst, 0, 1, v30);
  }
  uint64_t v54 = a3[11];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
  *(unsigned char *)(v55 + 4) = *(unsigned char *)(v56 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v90 = *(void *)(v6 - 8);
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 24);
  v91(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  unint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  *(_WORD *)(v21 + 8) = *((_WORD *)v22 + 4);
  *(void *)uint64_t v21 = v23;
  uint64_t v92 = a2;
  v93 = a3;
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)(a1 + v24);
  char v26 = (char *)(a2 + v24);
  uint64_t v27 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v89 = *((void *)v27 - 1);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, int *))(v89 + 48);
  uint64_t v29 = v25;
  LODWORD(v25) = v28(v25, 1, v27);
  unint64_t v30 = v26;
  int v31 = v28(v26, 1, v27);
  if (!v25)
  {
    if (v31)
    {
      sub_247441348((uint64_t)v29);
      goto LABEL_7;
    }
    uint64_t v40 = v26;
    v91((uint64_t)v29, (uint64_t)v26, v6);
    uint64_t v41 = v27;
    uint64_t v42 = v27[5];
    uint64_t v43 = (uint64_t *)&v29[v42];
    uint64_t v44 = (uint64_t *)&v26[v42];
    unint64_t v45 = *(void *)&v26[v42 + 8];
    if (*(void *)&v29[v42 + 8] >> 60 == 15)
    {
      uint64_t v38 = v92;
      uint64_t v39 = v93;
      if (v45 >> 60 != 15)
      {
        uint64_t v46 = *v44;
        sub_247442FA0(*v44, v45);
        uint64_t *v43 = v46;
        v43[1] = v45;
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v38 = v92;
      uint64_t v39 = v93;
      if (v45 >> 60 != 15)
      {
        uint64_t v62 = *v44;
        sub_247442FA0(*v44, v45);
        uint64_t v63 = *v43;
        unint64_t v64 = v43[1];
        uint64_t *v43 = v62;
        v43[1] = v45;
        sub_24743E4AC(v63, v64);
LABEL_23:
        uint64_t v65 = v41[6];
        uint64_t v66 = (uint64_t *)&v29[v65];
        uint64_t v67 = (uint64_t *)&v40[v65];
        unint64_t v68 = *(void *)&v40[v65 + 8];
        if (*(void *)&v29[v65 + 8] >> 60 == 15)
        {
          if (v68 >> 60 != 15)
          {
            uint64_t v69 = *v67;
            sub_247442FA0(*v67, v68);
            *uint64_t v66 = v69;
            v66[1] = v68;
            goto LABEL_30;
          }
        }
        else
        {
          if (v68 >> 60 != 15)
          {
            uint64_t v70 = *v67;
            sub_247442FA0(*v67, v68);
            uint64_t v71 = *v66;
            unint64_t v72 = v66[1];
            *uint64_t v66 = v70;
            v66[1] = v68;
            sub_24743E4AC(v71, v72);
LABEL_30:
            uint64_t v73 = v41[7];
            uint64_t v74 = (uint64_t *)&v29[v73];
            uint64_t v75 = (uint64_t *)&v40[v73];
            unint64_t v76 = *(void *)&v40[v73 + 8];
            if (*(void *)&v29[v73 + 8] >> 60 == 15)
            {
              if (v76 >> 60 != 15)
              {
                uint64_t v77 = *v75;
                sub_247442FA0(*v75, v76);
                uint64_t *v74 = v77;
                v74[1] = v76;
LABEL_37:
                uint64_t v81 = v41[8];
                v82 = &v29[v81];
                uint64_t v83 = &v40[v81];
                *(void *)v82 = *(void *)v83;
                *((void *)v82 + 1) = *((void *)v83 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            else
            {
              if (v76 >> 60 != 15)
              {
                uint64_t v78 = *v75;
                sub_247442FA0(*v75, v76);
                uint64_t v79 = *v74;
                unint64_t v80 = v74[1];
                uint64_t *v74 = v78;
                v74[1] = v76;
                sub_24743E4AC(v79, v80);
                goto LABEL_37;
              }
              sub_2474439C4((uint64_t)v74);
            }
            *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
            goto LABEL_37;
          }
          sub_2474439C4((uint64_t)v66);
        }
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        goto LABEL_30;
      }
      sub_2474439C4((uint64_t)v43);
    }
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    goto LABEL_23;
  }
  if (v31)
  {
LABEL_7:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(v29, v26, *(void *)(*(void *)(v37 - 8) + 64));
    uint64_t v38 = v92;
    uint64_t v39 = v93;
    goto LABEL_38;
  }
  uint64_t v32 = v29;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v29, v26, v6);
  uint64_t v33 = v27[5];
  uint64_t v34 = &v29[v33];
  uint64_t v35 = &v26[v33];
  unint64_t v36 = *((void *)v35 + 1);
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v47 = *(void *)v35;
    sub_247442FA0(*(void *)v35, *((void *)v35 + 1));
    *(void *)uint64_t v34 = v47;
    *((void *)v34 + 1) = v36;
  }
  uint64_t v48 = v27[6];
  uint64_t v49 = &v32[v48];
  uint64_t v50 = &v26[v48];
  unint64_t v51 = *((void *)v50 + 1);
  if (v51 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  }
  else
  {
    uint64_t v52 = *(void *)v50;
    sub_247442FA0(*(void *)v50, *((void *)v50 + 1));
    *(void *)uint64_t v49 = v52;
    *((void *)v49 + 1) = v51;
  }
  uint64_t v38 = v92;
  uint64_t v39 = v93;
  uint64_t v53 = v27[7];
  uint64_t v54 = &v32[v53];
  uint64_t v55 = &v30[v53];
  unint64_t v56 = *((void *)v55 + 1);
  if (v56 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  }
  else
  {
    uint64_t v57 = *(void *)v55;
    sub_247442FA0(*(void *)v55, *((void *)v55 + 1));
    *(void *)uint64_t v54 = v57;
    *((void *)v54 + 1) = v56;
  }
  uint64_t v58 = v27[8];
  unint64_t v59 = &v32[v58];
  uint64_t v60 = &v30[v58];
  *(void *)unint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = *((void *)v60 + 1);
  uint64_t v61 = *(void (**)(char *, void, uint64_t, int *))(v89 + 56);
  swift_bridgeObjectRetain();
  v61(v32, 0, 1, v27);
LABEL_38:
  uint64_t v84 = v39[11];
  uint64_t v85 = a1 + v84;
  int v86 = (int *)(v38 + v84);
  int v87 = *v86;
  *(unsigned char *)(v85 + 4) = *((unsigned char *)v86 + 4);
  *(_DWORD *)uint64_t v85 = v87;
  return a1;
}

uint64_t initializeWithTake for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_WORD *)(v15 + 8) = *(_WORD *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = (char *)(a1 + v14);
  uint64_t v18 = (char *)(a2 + v14);
  uint64_t v19 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v17, (uint64_t)v18, v6);
    *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
    *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
    *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
    *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(unsigned char *)(v23 + 4) = *(unsigned char *)(v24 + 4);
  return a1;
}

uint64_t assignWithTake for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v69 + 40);
  v71(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  unint64_t v72 = a3;
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_WORD *)(v27 + 8) = *(_WORD *)(v28 + 8);
  uint64_t v29 = (char *)(a1 + v26);
  unint64_t v30 = (char *)(a2 + v26);
  int v31 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf();
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  uint64_t v34 = v29;
  int v35 = v33(v29, 1, v31);
  unint64_t v36 = v30;
  int v37 = v33(v30, 1, v31);
  if (!v35)
  {
    if (v37)
    {
      sub_247441348((uint64_t)v34);
      goto LABEL_6;
    }
    uint64_t v44 = v34;
    unint64_t v45 = v36;
    ((void (*)(char *, char *, uint64_t))v71)(v34, v36, v70);
    uint64_t v46 = v31[5];
    uint64_t v47 = (uint64_t)&v34[v46];
    uint64_t v48 = &v36[v46];
    unint64_t v49 = *(void *)(v47 + 8);
    if (v49 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      uint64_t v39 = v72;
    }
    else
    {
      unint64_t v50 = *((void *)v48 + 1);
      uint64_t v39 = v72;
      if (v50 >> 60 == 15)
      {
        sub_2474439C4(v47);
        *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      }
      else
      {
        uint64_t v51 = *(void *)v47;
        *(void *)uint64_t v47 = *(void *)v48;
        *(void *)(v47 + 8) = v50;
        sub_24743E4AC(v51, v49);
      }
    }
    uint64_t v52 = v31[6];
    uint64_t v53 = (uint64_t *)&v44[v52];
    uint64_t v54 = (uint64_t *)&v45[v52];
    unint64_t v55 = *(void *)&v44[v52 + 8];
    if (v55 >> 60 != 15)
    {
      unint64_t v56 = v54[1];
      if (v56 >> 60 != 15)
      {
        uint64_t v57 = *v53;
        uint64_t *v53 = *v54;
        v53[1] = v56;
        sub_24743E4AC(v57, v55);
LABEL_19:
        uint64_t v58 = v31[7];
        unint64_t v59 = (uint64_t *)&v44[v58];
        uint64_t v60 = (uint64_t *)&v45[v58];
        unint64_t v61 = *(void *)&v44[v58 + 8];
        if (v61 >> 60 != 15)
        {
          unint64_t v62 = v60[1];
          if (v62 >> 60 != 15)
          {
            uint64_t v63 = *v59;
            uint64_t *v59 = *v60;
            v59[1] = v62;
            sub_24743E4AC(v63, v61);
            goto LABEL_24;
          }
          sub_2474439C4((uint64_t)v59);
        }
        *(_OWORD *)unint64_t v59 = *(_OWORD *)v60;
LABEL_24:
        uint64_t v64 = v31[8];
        uint64_t v65 = &v44[v64];
        uint64_t v66 = &v45[v64];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        *(void *)uint64_t v65 = v68;
        *((void *)v65 + 1) = v67;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_2474439C4((uint64_t)v53);
    }
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    goto LABEL_19;
  }
  if (v37)
  {
LABEL_6:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    memcpy(v34, v30, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v34, v30, v70);
  *(_OWORD *)&v34[v31[5]] = *(_OWORD *)&v30[v31[5]];
  *(_OWORD *)&v34[v31[6]] = *(_OWORD *)&v30[v31[6]];
  *(_OWORD *)&v34[v31[7]] = *(_OWORD *)&v30[v31[7]];
  *(_OWORD *)&v34[v31[8]] = *(_OWORD *)&v30[v31[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v34, 0, 1, v31);
LABEL_7:
  uint64_t v39 = v72;
LABEL_8:
  uint64_t v40 = v39[11];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(unsigned char *)(v41 + 4) = *(unsigned char *)(v42 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247461814);
}

uint64_t sub_247461814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 40);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudInviteResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247461968);
}

uint64_t sub_247461968(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692504E0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_247461A9C()
{
  sub_2474B0CE0();
  if (v0 <= 0x3F)
  {
    sub_247444354();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for SecureCloudInviteResponseProtobuf.ProtobufType()
{
  return &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType;
}

uint64_t sub_247461B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void ActivitySharingSettings.init(healthStore:)(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_allocWithZone(MEMORY[0x263F0A470]);
  int v5 = (void *)sub_2474B0F40();
  id v6 = objc_msgSend(v4, sel_initWithCategory_domainName_healthStore_, 4, v5, a1);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A558]), sel_initWithHealthStore_, a1);
  *a2 = v6;
  a2[1] = v7;
}

uint64_t sub_247461C8C(uint64_t a1)
{
  *(void *)(v2 + 184) = a1;
  *(_OWORD *)(v2 + 192) = *v1;
  return MEMORY[0x270FA2498](sub_247461CB4, 0, 0);
}

uint64_t sub_247461CB4()
{
  uint64_t v1 = v0[23];
  sub_2474B0B50();
  swift_allocObject();
  sub_2474B0B40();
  v0[18] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250978);
  sub_2474660D0(&qword_269250A18);
  v0[26] = sub_2474B0B30();
  v0[27] = v2;
  int v3 = (void *)v0[24];
  swift_release();
  uint64_t v4 = sub_2474B0BB0();
  v0[28] = v4;
  uint64_t v5 = sub_2474B0F40();
  v0[29] = v5;
  v0[2] = v0;
  v0[3] = sub_247462054;
  uint64_t v6 = swift_continuation_init();
  v0[18] = MEMORY[0x263EF8330];
  v0[19] = 0x40000000;
  v0[20] = sub_24746280C;
  v0[21] = &block_descriptor_19;
  v0[22] = v6;
  objc_msgSend(v3, sel_setData_forKey_completion_, v4, v5, v0 + 18);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_247462054()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    uint64_t v2 = sub_2474625EC;
  }
  else {
    uint64_t v2 = sub_247462164;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247462164()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 200);

  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 88) = sub_247462268;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 144) = MEMORY[0x263EF8330];
  *(void *)(v0 + 152) = 0x40000000;
  *(void *)(v0 + 160) = sub_24746280C;
  *(void *)(v0 + 168) = &block_descriptor_20;
  *(void *)(v0 + 176) = v3;
  objc_msgSend(v2, sel_forceNanoSyncWithOptions_completion_, 0, v0 + 144);
  return MEMORY[0x270FA23F0](v0 + 80);
}

uint64_t sub_247462268()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_2474623D8;
  }
  else {
    uint64_t v2 = sub_247462378;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247462378()
{
  sub_24743E4AC(v0[26], v0[27]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2474623D8()
{
  uint64_t v1 = v0[26];
  unint64_t v2 = v0[27];
  swift_willThrow();
  sub_24743E4AC(v1, v2);
  uint64_t v3 = (void *)v0[31];
  if (qword_269250378 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2474B0EC0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269257DE8);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_2474B0EA0();
  os_log_type_t v8 = sub_2474B1160();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v3;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v12;
    sub_2474B1230();
    void *v10 = v12;

    _os_log_impl(&dword_24743A000, v7, v8, "Failed to save identifiers to force migration: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v10, -1, -1);
    MEMORY[0x24C557100](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_2474625EC()
{
  uint64_t v1 = (void *)v0[29];
  unint64_t v2 = v0[27];
  uint64_t v3 = (void *)v0[28];
  uint64_t v4 = v0[26];
  swift_willThrow();
  sub_24743E4AC(v4, v2);

  id v5 = (void *)v0[30];
  if (qword_269250378 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2474B0EC0();
  __swift_project_value_buffer(v6, (uint64_t)qword_269257DE8);
  id v7 = v5;
  id v8 = v5;
  uint64_t v9 = sub_2474B0EA0();
  os_log_type_t v10 = sub_2474B1160();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)id v11 = 138412290;
    id v13 = v5;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v14;
    sub_2474B1230();
    void *v12 = v14;

    _os_log_impl(&dword_24743A000, v9, v10, "Failed to save identifiers to force migration: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v12, -1, -1);
    MEMORY[0x24C557100](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_24746280C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269250A08);
      uint64_t v6 = swift_allocError();
      *id v7 = a3;
      id v8 = a3;
      a1 = v3;
      a2 = v6;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2410](a1, a2);
  }
}

uint64_t ActivitySharingSettings.forceMigrationAllowed(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  *(_OWORD *)(v3 + 16) = *v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 48) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_247462964;
  v4[17] = *(void *)(v3 + 16);
  return MEMORY[0x270FA2498](sub_247462B00, 0, 0);
}

uint64_t sub_247462964(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247462A64, 0, 0);
}

uint64_t sub_247462A64()
{
  char v1 = sub_2474631E4(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 56));
  swift_bridgeObjectRelease();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(v1 & 1);
}

uint64_t ActivitySharingSettings.forcedMigrationFriendIdentifiers()()
{
  *(void *)(v1 + 136) = *v0;
  return MEMORY[0x270FA2498](sub_247462B00, 0, 0);
}

uint64_t sub_247462B00()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_2474B0F40();
  v0[18] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_247462C2C;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247463914;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(v1, sel_dataForKey_completion_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_247462C2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_247462FE0;
  }
  else {
    uint64_t v2 = sub_247462D3C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247462D3C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  unint64_t v2 = *(void *)(v0 + 128);

  if (v2 >> 60 == 15)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  else
  {
    sub_2474B0B20();
    swift_allocObject();
    sub_2474B0B10();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250978);
    sub_2474660D0(&qword_269250980);
    sub_2474B0B00();
    sub_24743E498(v1, v2);
    swift_release();
    uint64_t v3 = *(void *)(v0 + 80);
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_247462FE0()
{
  uint64_t v1 = (void *)v0[18];
  swift_willThrow();

  unint64_t v2 = (void *)v0[19];
  if (qword_269250378 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_269257DE8);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_2474B0EA0();
  os_log_type_t v7 = sub_2474B1160();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)id v8 = 138412290;
    id v10 = v2;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v11;
    sub_2474B1230();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_24743A000, v6, v7, "Failed to retrieve forced migration friend identifiers: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v9, -1, -1);
    MEMORY[0x24C557100](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v13 = MEMORY[0x263F8EE78];
  return v12(v13);
}

uint64_t sub_2474631E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_2474B1470();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2474B1470() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 64) = a3;
  *(unsigned char *)(v4 + 120) = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  *(void *)(v4 + 72) = *v3;
  *(void *)(v4 + 80) = v6;
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 88) = v7;
  *os_log_type_t v7 = v4;
  v7[1] = sub_24746336C;
  v7[17] = *(void *)(v4 + 16);
  return MEMORY[0x270FA2498](sub_247462B00, 0, 0);
}

uint64_t sub_24746336C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24746346C, 0, 0);
}

uint64_t sub_24746346C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    char v4 = sub_2474631E4(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 96));
    uint64_t v5 = *(void **)(v0 + 96);
    if ((v4 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v5 = *(void **)(v0 + 96);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v5 = sub_247464978(0, v5[2] + 1, 1, *(void **)(v0 + 96));
      }
      unint64_t v8 = v5[2];
      unint64_t v7 = v5[3];
      if (v8 >= v7 >> 1) {
        uint64_t v5 = sub_247464978((void *)(v7 > 1), v8 + 1, 1, v5);
      }
      uint64_t v10 = *(void *)(v0 + 56);
      uint64_t v9 = *(void *)(v0 + 64);
      id v5[2] = v8 + 1;
      uint64_t v11 = &v5[2 * v8];
      v11[4] = v10;
      v11[5] = v9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_247465578(v1, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 104) = v5;
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 72);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 112) = v12;
  *(void *)uint64_t v12 = v0;
  *(void *)(v12 + 8) = sub_247463610;
  *(void *)(v12 + 184) = v5;
  *(_OWORD *)(v12 + 192) = *(_OWORD *)(v0 + 32);
  return MEMORY[0x270FA2498](sub_247461CB4, 0, 0);
}

uint64_t sub_247463610()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24746370C, 0, 0);
}

uint64_t sub_24746370C()
{
  uint64_t v13 = v0;
  if (qword_269250378 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2474B0EC0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269257DE8);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2474B0EA0();
  os_log_type_t v3 = sub_2474B1170();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)char v4 = 136315138;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x24C556510](v6, MEMORY[0x263F8D310]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = sub_247464D64(v7, v9, &v12);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24743A000, v2, v3, "Updated list of friends allowed to force a migration: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v5, -1, -1);
    MEMORY[0x24C557100](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_247463914(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A08);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2)
    {
      id v8 = a2;
      uint64_t v9 = sub_2474B0BC0();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    v13[0] = v9;
    v13[1] = v11;
    sub_247466134((uint64_t)v13, *(void *)(*(void *)(v3 + 64) + 40), &qword_26B12CB70);
    return swift_continuation_throwingResume();
  }
}

uint64_t ActivitySharingSettings.ignoreLegacyDevices()()
{
  *(void *)(v1 + 128) = *v0;
  return MEMORY[0x270FA2498](sub_247463A2C, 0, 0);
}

uint64_t sub_247463A2C()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = sub_2474B0F40();
  v0[17] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_247463B58;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247463F0C;
  v0[13] = &block_descriptor_4;
  v0[14] = v3;
  objc_msgSend(v1, sel_numberForKey_completion_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_247463B58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_247463CF8;
  }
  else {
    uint64_t v2 = sub_247463C68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247463C68()
{
  uint64_t v1 = *(void **)(v0 + 120);

  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_BOOLValue);
  }
  else
  {
    id v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_247463CF8()
{
  uint64_t v1 = (void *)v0[17];
  swift_willThrow();

  if (qword_269250378 != -1) {
    swift_once();
  }
  id v2 = (void *)v0[18];
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_269257DE8);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_2474B0EA0();
  os_log_type_t v7 = sub_2474B1160();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = (void *)v0[18];
  if (v8)
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    unint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v13;
    sub_2474B1230();
    *unint64_t v11 = v13;

    _os_log_impl(&dword_24743A000, v6, v7, "Failed to retrieve ignore legacy devices setting: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v11, -1, -1);
    MEMORY[0x24C557100](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14(0);
}

uint64_t sub_247463F0C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A08);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    unint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_247466134((uint64_t)&v11, v8, &qword_269250A10);
    return swift_continuation_throwingResume();
  }
}

uint64_t ActivitySharingSettings.updateIgnoreLegacyDevices(_:)(char a1)
{
  *(unsigned char *)(v2 + 232) = a1;
  *(_OWORD *)(v2 + 184) = *v1;
  return MEMORY[0x270FA2498](sub_247464000, 0, 0);
}

uint64_t sub_247464000()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = sub_2474B10C0();
  v0[25] = v2;
  uint64_t v3 = sub_2474B0F40();
  v0[26] = v3;
  v0[2] = v0;
  v0[3] = sub_24746413C;
  uint64_t v4 = swift_continuation_init();
  v0[18] = MEMORY[0x263EF8330];
  v0[19] = 0x40000000;
  v0[20] = sub_24746280C;
  v0[21] = &block_descriptor_5;
  v0[22] = v4;
  objc_msgSend(v1, sel_setNumber_forKey_completion_, v2, v3, v0 + 18);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24746413C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_2474644E4;
  }
  else {
    uint64_t v2 = sub_24746424C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746424C()
{
  uint64_t v1 = *(void **)(v0 + 200);
  uint64_t v2 = *(void **)(v0 + 192);

  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 88) = sub_247464350;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 144) = MEMORY[0x263EF8330];
  *(void *)(v0 + 152) = 0x40000000;
  *(void *)(v0 + 160) = sub_24746280C;
  *(void *)(v0 + 168) = &block_descriptor_6;
  *(void *)(v0 + 176) = v3;
  objc_msgSend(v2, sel_forceNanoSyncWithOptions_completion_, 0, v0 + 144);
  return MEMORY[0x270FA23F0](v0 + 80);
}

uint64_t sub_247464350()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    uint64_t v2 = sub_247464478;
  }
  else {
    uint64_t v2 = sub_247464460;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247464460()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_247464478()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2474644E4()
{
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void *)v0[25];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24746455C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  *(_OWORD *)(v3 + 16) = *v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 48) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_247462964;
  v4[17] = *(void *)(v3 + 16);
  return MEMORY[0x270FA2498](sub_247462B00, 0, 0);
}

uint64_t sub_247464614(char a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_24745B0A0;
  return ActivitySharingSettings.updateAllowForcedMigration(_:friendIdentifier:)(a1, a2, a3);
}

uint64_t sub_2474646C0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247466198;
  v2[17] = *v0;
  return MEMORY[0x270FA2498](sub_247462B00, 0, 0);
}

uint64_t sub_24746476C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247466198;
  v2[16] = *v0;
  return MEMORY[0x270FA2498](sub_247463A2C, 0, 0);
}

uint64_t sub_247464818(char a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_2474577A0;
  *(unsigned char *)(v4 + 232) = a1;
  *(_OWORD *)(v4 + 184) = *v1;
  return MEMORY[0x270FA2498](sub_247464000, 0, 0);
}

uint64_t sub_2474648CC(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_2474648DC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_247464918(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_247464950(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_247464978(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C9F0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_247465484(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_247464A88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269250A00);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_247465E8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_247464B98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692509F8);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_247465F80(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_247464CC4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_247464CEC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_247464D64(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_2474B1230();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_247464D64(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_247464E38(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_247466074((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_247466074((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_247464E38(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2474B1240();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_247464FF4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2474B1310();
  if (!v8)
  {
    sub_2474B1350();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2474B13A0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_247464FF4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24746508C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24746526C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24746526C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24746508C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_247465204(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2474B12F0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2474B1350();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2474B0FB0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2474B13A0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2474B1350();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_247465204(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C828);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24746526C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C828);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

unsigned char **sub_2474653BC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_2474653CC(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_2474B1230();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_247465484(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_247465578(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v6 = 0;
  uint64_t v7 = result + 40;
  uint64_t v8 = -(uint64_t)v3;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v19 = result + 40;
  do
  {
    if (v6 <= v3) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v6;
    }
    uint64_t v11 = -(uint64_t)v10;
    for (uint64_t i = (uint64_t *)(v7 + 16 * v6++); ; i += 2)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = *(i - 1);
      uint64_t v14 = *i;
      if (v13 != a2 || v14 != a3)
      {
        uint64_t result = sub_2474B1470();
        if ((result & 1) == 0) {
          break;
        }
      }
      ++v6;
      if (v8 + v6 == 1) {
        return v9;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_2474A8AF0(0, *(void *)(v9 + 16) + 1, 1);
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_2474A8AF0(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v9 + 16) = v17 + 1;
    uint64_t v18 = v9 + 16 * v17;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v14;
    unint64_t v3 = v20;
    uint64_t v7 = v19;
  }
  while (v8 + v6);
  return v9;
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.forceMigrationAllowed(friendIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247466198;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.updateAllowForcedMigration(_:friendIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_2474577A0;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.forcedMigrationFriendIdentifiers()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247465A00;
  return v7(a1, a2);
}

uint64_t sub_247465A00(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.ignoreLegacyDevices()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247465A00;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingSettingsProtocol.updateIgnoreLegacyDevices(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2474577A0;
  return v9(a1, a2, a3);
}

void *initializeBufferWithCopyOfBuffer for ActivitySharingSettings(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ActivitySharingSettings(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ActivitySharingSettings(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ActivitySharingSettings(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySharingSettings(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySharingSettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySharingSettings()
{
  return &type metadata for ActivitySharingSettings;
}

uint64_t sub_247465E8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_247465F80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_247466074(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2474660D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269250978);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247466134(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t TransportItem.init(rawValue:)(uint64_t a1)
{
  return sub_2474662AC(a1);
}

uint64_t sub_2474661C0()
{
  return sub_2474B1530();
}

uint64_t sub_247466208()
{
  return sub_2474B1520();
}

uint64_t sub_247466234()
{
  return sub_2474B1530();
}

uint64_t sub_247466278@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2474662AC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2474662AC(uint64_t result)
{
  if (result <= 700)
  {
    if (result > 400)
    {
      if ((unint64_t)(result - 401) < 5 || (unint64_t)(result - 601) < 4 || result == 501) {
        return result;
      }
    }
    else if ((unint64_t)(result - 301) < 5 {
           || (unint64_t)(result - 101) < 4
    }
           || (unint64_t)(result - 201) < 2)
    {
      return result;
    }
    return 0;
  }
  switch(result)
  {
    case 901:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1150:
    case 1151:
    case 1152:
    case 1153:
    case 1154:
    case 1155:
    case 1156:
    case 1157:
    case 1158:
    case 1159:
    case 1160:
      return result;
    case 902:
    case 903:
    case 904:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 912:
    case 913:
    case 914:
    case 915:
    case 916:
    case 917:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 924:
    case 925:
    case 926:
    case 927:
    case 928:
    case 929:
    case 930:
    case 931:
    case 932:
    case 933:
    case 934:
    case 935:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 942:
    case 943:
    case 944:
    case 945:
    case 946:
    case 947:
    case 948:
    case 949:
    case 950:
    case 951:
    case 952:
    case 953:
    case 954:
    case 955:
    case 956:
    case 957:
    case 958:
    case 959:
    case 960:
    case 961:
    case 962:
    case 963:
    case 964:
    case 965:
    case 966:
    case 967:
    case 968:
    case 969:
    case 970:
    case 971:
    case 972:
    case 973:
    case 974:
    case 975:
    case 976:
    case 977:
    case 978:
    case 979:
    case 980:
    case 981:
    case 982:
    case 983:
    case 984:
    case 985:
    case 986:
    case 987:
    case 988:
    case 989:
    case 990:
    case 991:
    case 992:
    case 993:
    case 994:
    case 995:
    case 996:
    case 997:
    case 998:
    case 999:
    case 1000:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
    case 1047:
    case 1048:
    case 1049:
    case 1050:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1060:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1073:
    case 1074:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1097:
    case 1098:
    case 1099:
    case 1100:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1135:
    case 1136:
    case 1137:
    case 1138:
    case 1139:
    case 1140:
    case 1141:
    case 1142:
    case 1143:
    case 1144:
    case 1145:
    case 1146:
    case 1147:
    case 1148:
    case 1149:
      return 0;
    default:
      if (result != 701 && result != 801) {
        return 0;
      }
      break;
  }
  return result;
}

unint64_t sub_24746676C()
{
  unint64_t result = qword_26B12C8A8;
  if (!qword_26B12C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12C8A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportItem()
{
  return &type metadata for TransportItem;
}

uint64_t InvitationDestination.canonicalDestination.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationDestination.destination.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationDestination.endpoints.getter()
{
  return swift_bridgeObjectRetain();
}

void InvitationDestination.reachability.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

uint64_t InvitationDestination.serviceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall InvitationDestination.init(canonicalDestination:destination:endpoints:reachability:serviceIdentifier:)(ActivitySharingClient::InvitationDestination *__return_ptr retstr, Swift::String canonicalDestination, Swift::String destination, Swift::OpaquePointer endpoints, ActivitySharingClient::InvitationDestinationReachability reachability, Swift::String serviceIdentifier)
{
  ActivitySharingClient::InvitationDestinationReachability v6 = *(unsigned char *)reachability;
  retstr->canonicalDestination = canonicalDestination;
  retstr->destination = destination;
  retstr->endpoints = endpoints;
  retstr->reachability = v6;
  retstr->serviceIdentifier = serviceIdentifier;
}

uint64_t InvitationDestination.shortDescription.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_247466900(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74616E6974736564;
      break;
    case 2:
      unint64_t result = 0x746E696F70646E65;
      break;
    case 3:
      unint64_t result = 0x6962616863616572;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2474669D0()
{
  return sub_247466900(*v0);
}

uint64_t sub_2474669D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247467AEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247466A00()
{
  return 0;
}

void sub_247466A0C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_247466A18(uint64_t a1)
{
  unint64_t v2 = sub_247467164();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247466A54(uint64_t a1)
{
  unint64_t v2 = sub_247467164();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t InvitationDestination.description.getter()
{
  sub_2474B12E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  sub_2474B0FA0();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  sub_2474B12E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  sub_2474B0FA0();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_247466E08(v0);
  swift_bridgeObjectRelease();
  MEMORY[0x24C556510](v1, MEMORY[0x263F8D310]);
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2474B0FA0();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2474B12E0();
  sub_2474B0FA0();
  sub_2474B1320();
  sub_2474B0FA0();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2474B12E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

uint64_t sub_247466E08(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2474A8AF0(0, v1, 0);
    uint64_t v2 = v11;
    char v4 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_2474A8AF0(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t InvitationDestination.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250A20);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v7;
  uint64_t v15 = *(void *)(v1 + 32);
  int v14 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  v13[0] = *(void *)(v1 + 56);
  v13[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247467164();
  sub_2474B1550();
  char v25 = 0;
  uint64_t v9 = v18;
  sub_2474B1400();
  if (!v9)
  {
    uint64_t v10 = v15;
    char v11 = v14;
    char v24 = 1;
    sub_2474B1400();
    uint64_t v19 = v10;
    char v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A30);
    sub_2474675A8(&qword_269250A38, (void (*)(void))sub_24743F974);
    sub_2474B1420();
    char v22 = v11;
    char v21 = 3;
    sub_24743F77C();
    sub_2474B1420();
    char v20 = 4;
    sub_2474B1400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_247467164()
{
  unint64_t result = qword_269250A28;
  if (!qword_269250A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250A28);
  }
  return result;
}

uint64_t InvitationDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250A40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247467164();
  sub_2474B1540();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v35 = 0;
  uint64_t v9 = sub_2474B13C0();
  uint64_t v11 = v10;
  uint64_t v27 = v9;
  char v34 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2474B13C0();
  uint64_t v28 = v13;
  uint64_t v26 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250A30);
  char v33 = 2;
  sub_2474675A8(&qword_269250A48, (void (*)(void))sub_24743F920);
  swift_bridgeObjectRetain();
  sub_2474B13E0();
  uint64_t v14 = v29;
  char v31 = 3;
  sub_24743F728();
  uint64_t v25 = v14;
  swift_bridgeObjectRetain();
  sub_2474B13E0();
  int v24 = v32;
  char v30 = 4;
  uint64_t v15 = sub_2474B13C0();
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v11;
  uint64_t v21 = v25;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v21;
  *(unsigned char *)(a2 + 40) = v24;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2474675A8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269250A30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247467618@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InvitationDestination.init(from:)(a1, a2);
}

uint64_t sub_247467630(void *a1)
{
  return InvitationDestination.encode(to:)(a1);
}

uint64_t destroy for InvitationDestination()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InvitationDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InvitationDestination(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InvitationDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationDestination(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationDestination(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestination()
{
  return &type metadata for InvitationDestination;
}

unsigned char *storeEnumTagSinglePayload for InvitationDestination.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2474679ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestination.CodingKeys()
{
  return &type metadata for InvitationDestination.CodingKeys;
}

unint64_t sub_2474679E8()
{
  unint64_t result = qword_269250A50;
  if (!qword_269250A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250A50);
  }
  return result;
}

unint64_t sub_247467A40()
{
  unint64_t result = qword_269250A58;
  if (!qword_269250A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250A58);
  }
  return result;
}

unint64_t sub_247467A98()
{
  unint64_t result = qword_269250A60;
  if (!qword_269250A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250A60);
  }
  return result;
}

uint64_t sub_247467AEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002474B6BD0 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE900000000000073 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6962616863616572 && a2 == 0xEC0000007974696CLL || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002474B6BF0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

id ActivitySharingClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t ActivitySharingClient.init()()
{
  char v0 = ASActivitySharingDaemonEnabled();
  id v1 = objc_allocWithZone((Class)type metadata accessor for ActivitySharingClient());
  ActivitySharingClient.init(activitySharingDaemonEnabled:)(v0);
  uint64_t v3 = v2;
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

void ActivitySharingClient.__allocating_init(activitySharingDaemonEnabled:)(char a1)
{
  id v3 = objc_allocWithZone(v1);
  ActivitySharingClient.init(activitySharingDaemonEnabled:)(a1);
}

uint64_t type metadata accessor for ActivitySharingClient()
{
  return self;
}

void ActivitySharingClient.init(activitySharingDaemonEnabled:)(char a1)
{
  swift_getObjectType();
  uint64_t v3 = qword_26B12CCD0;
  unsigned int v4 = v1;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2474B0EC0();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B12CCE8);
  unsigned int v6 = sub_2474B0EA0();
  os_log_type_t v7 = sub_2474B1170();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)&long long v34 = v9;
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v10 = sub_2474B1580();
    sub_247464D64(v10, v11, (uint64_t *)&v34);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    DWORD1(v30[0]) = (unint64_t)sub_247464D64(0xD000000000000023, 0x80000002474B6C10, (uint64_t *)&v34) >> 32;
    sub_2474B1230();
    *(_WORD *)(v8 + 22) = 1024;
    LODWORD(v30[0]) = a1 & 1;
    sub_2474B1230();
    _os_log_impl(&dword_24743A000, v6, v7, "%s::%s - activitySharingDaemonEnabled: %{BOOL}d", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v9, -1, -1);
    MEMORY[0x24C557100](v8, -1, -1);
  }

  if (a1)
  {
    uint64_t v12 = type metadata accessor for XPCClient();
    swift_allocObject();
    uint64_t v13 = XPCClient.init()();
    uint64_t v14 = (uint64_t *)&v4[OBJC_IVAR____ASActivitySharingClient_transportClient];
    v14[3] = v12;
    v14[4] = (uint64_t)&protocol witness table for XPCClient;
    uint64_t *v14 = v13;
    uint64_t v15 = &v4[OBJC_IVAR____ASActivitySharingClient_asListener];
    *((_OWORD *)v15 + 1) = 0u;
    *((_OWORD *)v15 + 2) = 0u;
    *(_OWORD *)uint64_t v15 = 0u;
    swift_allocObject();
    uint64_t v16 = XPCClient.init()();
    *((void *)&v35 + 1) = v12;
    *(void *)&long long v36 = &protocol witness table for XPCClient;
    *(void *)&long long v34 = v16;
    sub_247466134((uint64_t)&v34, (uint64_t)&v4[OBJC_IVAR____ASActivitySharingClient_secureCloudClient], &qword_26B12C878);
LABEL_9:

    v29.receiver = v4;
    v29.super_class = (Class)type metadata accessor for ActivitySharingClient();
    objc_msgSendSuper2(&v29, sel_init);
    return;
  }
  uint64_t v17 = (objc_class *)type metadata accessor for LocalTransport();
  uint64_t v18 = (char *)objc_msgSend(objc_allocWithZone(v17), sel_init);
  id v19 = objc_msgSend(objc_allocWithZone(v17), sel_init);
  uint64_t v20 = &v18[OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy];
  swift_beginAccess();
  *(void *)uint64_t v20 = v19;
  id v21 = v19;
  swift_unknownObjectRelease();
  uint64_t v22 = &v4[OBJC_IVAR____ASActivitySharingClient_transportClient];
  *((void *)v22 + 3) = v17;
  *((void *)v22 + 4) = &protocol witness table for LocalTransport;
  *(void *)uint64_t v22 = v18;
  unsigned __int8 v32 = v17;
  char v33 = &protocol witness table for LocalTransport;
  *(void *)&long long v31 = v21;
  id v23 = objc_allocWithZone(MEMORY[0x263F0A410]);
  id v24 = v21;
  uint64_t v25 = v18;
  id v26 = objc_msgSend(v23, sel_init);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F23B08]), sel_initWithHealthStore_, v26);

  if (v27)
  {
    *(void *)&v30[0] = v27;
    sub_247473550(&v31, (uint64_t)v30 + 8);
    long long v34 = v30[0];
    long long v35 = v30[1];
    long long v36 = v30[2];

    sub_247466134((uint64_t)&v34, (uint64_t)&v4[OBJC_IVAR____ASActivitySharingClient_asListener], &qword_26B12CB88);
    uint64_t v28 = &v4[OBJC_IVAR____ASActivitySharingClient_secureCloudClient];
    *(_OWORD *)uint64_t v28 = 0u;
    *((_OWORD *)v28 + 1) = 0u;
    *((void *)v28 + 4) = 0;
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_2474682A0()
{
  *(void *)(v1 + 104) = v0;
  return MEMORY[0x270FA2498](sub_2474682C0, 0, 0);
}

uint64_t sub_2474682C0()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 104) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_2474683CC;
  return v6(v2, v3);
}

uint64_t sub_2474683CC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2474684C8, 0, 0);
}

uint64_t sub_2474684C8()
{
  sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_asListener, (uint64_t)(v0 + 2), &qword_26B12CB88);
  if (v0[2])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[15] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_2474686F0;
    return ASListener.activate()();
  }
  else
  {
    sub_2474443AC((uint64_t)(v0 + 2), &qword_26B12CB88);
    sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, (uint64_t)(v0 + 8), &qword_26B12C878);
    uint64_t v3 = v0[11];
    if (v3)
    {
      uint64_t v4 = v0[12];
      __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
      uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
      uint64_t v5 = (void *)swift_task_alloc();
      v0[16] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_247468968;
      return v7(v3, v4);
    }
    else
    {
      sub_2474443AC((uint64_t)(v0 + 8), &qword_26B12C878);
      unsigned int v6 = (uint64_t (*)(void))v0[1];
      return v6();
    }
  }
}

uint64_t sub_2474686F0()
{
  uint64_t v1 = *v0 + 16;
  swift_task_dealloc();
  sub_247473620(v1);
  return MEMORY[0x270FA2498](sub_2474687F8, 0, 0);
}

uint64_t sub_2474687F8()
{
  sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, (uint64_t)(v0 + 8), &qword_26B12C878);
  uint64_t v1 = v0[11];
  if (v1)
  {
    uint64_t v2 = v0[12];
    __swift_project_boxed_opaque_existential_1(v0 + 8, v0[11]);
    unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
    uint64_t v3 = (void *)swift_task_alloc();
    v0[16] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_247468968;
    return v6(v1, v2);
  }
  else
  {
    sub_2474443AC((uint64_t)(v0 + 8), &qword_26B12C878);
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_247468968()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247468A64, 0, 0);
}

uint64_t sub_247468A64()
{
  sub_2474735CC(v0 + 64);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247468C2C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247468CF0;
  v5[13] = v4;
  return MEMORY[0x270FA2498](sub_2474682C0, 0, 0);
}

uint64_t sub_247468CF0()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_247468E28()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_247468E48, 0, 0);
}

uint64_t sub_247468E48()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *id v4 = v0;
  v4[1] = sub_24744F5FC;
  return v6(v2, v3);
}

uint64_t sub_2474690BC(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_247469134, 0, 0);
}

uint64_t sub_247469134()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_247469240;
  return v6(v2, v3);
}

uint64_t sub_247469240()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24746933C, 0, 0);
}

uint64_t sub_24746933C()
{
  uint64_t v1 = *(void (***)(void))(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2474693B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[13] = a6;
  v7[14] = v6;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  return MEMORY[0x270FA2498](sub_2474693E0, 0, 0);
}

void sub_2474693E0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[8];
  uint64_t v7 = (void *)(v0[14] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v8 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v0[2] = v6;
  v0[3] = v5;
  v0[4] = v4;
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = v1;
  uint64_t v10 = *(void *)(v8 + 64) + **(int **)(v8 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_247469580;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_247469580()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24746970C;
  }
  else {
    uint64_t v2 = sub_2474696F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474696F0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t sub_24746970C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_2474698C0(int a1, int a2, int a3, void *aBlock, void *a5)
{
  id v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_2474B0F50();
  uint64_t v9 = v8;
  v5[4] = v8;
  uint64_t v10 = sub_2474B0F50();
  uint64_t v12 = v11;
  v5[5] = v11;
  uint64_t v13 = sub_2474B0F50();
  uint64_t v15 = v14;
  v5[6] = v14;
  id v16 = a5;
  uint64_t v17 = (void *)swift_task_alloc();
  v5[7] = v17;
  *uint64_t v17 = v5;
  v17[1] = sub_2474699F4;
  v17[13] = v15;
  v17[14] = v16;
  v17[11] = v12;
  v17[12] = v13;
  v17[9] = v9;
  v17[10] = v10;
  v17[8] = v7;
  return MEMORY[0x270FA2498](sub_2474693E0, 0, 0);
}

uint64_t sub_2474699F4(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v5 + 24);
  if (v3)
  {
    uint64_t v10 = (void *)sub_2474B0B90();

    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(void, void, void))(v9 + 16))(*(void *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_247469BE8(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_247469C0C, 0, 0);
}

uint64_t sub_247469C0C()
{
  if (!ASSecureCloudEnabled())
  {
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[11];
    uint64_t v10 = (void *)(v0[13] + OBJC_IVAR____ASActivitySharingClient_transportClient);
    uint64_t v11 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v0[7] = v9;
    v0[8] = v8;
    uint64_t v15 = *(void *)(v11 + 64) + **(int **)(v11 + 64);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[16] = v12;
    void *v12 = v0;
    v12[1] = sub_24746A058;
    __asm { BRAA            X9, X16 }
  }
  sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, (uint64_t)(v0 + 2), &qword_26B12C878);
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v3 = v0[11];
    uint64_t v2 = v0[12];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    v0[9] = v3;
    v0[10] = v2;
    uint64_t v14 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 32)
                                                                                            + **(int **)(v4 + 32));
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_247469F28;
    uint64_t v6 = MEMORY[0x263F8D310];
    return v14(1105, v0 + 9, v6, &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_2474443AC((uint64_t)(v0 + 2), &qword_26B12C878);
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(1);
  }
}

uint64_t sub_247469F28()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247476BB0;
  }
  else {
    uint64_t v2 = sub_247476BE4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746A058()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247476BD0;
  }
  else {
    uint64_t v2 = sub_247476BB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746A304(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return MEMORY[0x270FA2498](sub_247469C0C, 0, 0);
}

uint64_t sub_24746A3F0(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_24746A414, 0, 0);
}

uint64_t sub_24746A414()
{
  if (!ASSecureCloudEnabled())
  {
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[11];
    uint64_t v10 = (void *)(v0[13] + OBJC_IVAR____ASActivitySharingClient_transportClient);
    uint64_t v11 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v0[7] = v9;
    v0[8] = v8;
    uint64_t v15 = *(void *)(v11 + 64) + **(int **)(v11 + 64);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[16] = v12;
    void *v12 = v0;
    v12[1] = sub_24746A058;
    __asm { BRAA            X9, X16 }
  }
  sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, (uint64_t)(v0 + 2), &qword_26B12C878);
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v3 = v0[11];
    uint64_t v2 = v0[12];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    v0[9] = v3;
    v0[10] = v2;
    uint64_t v14 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 32)
                                                                                            + **(int **)(v4 + 32));
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_247469F28;
    uint64_t v6 = MEMORY[0x263F8D310];
    return v14(1106, v0 + 9, v6, &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_2474443AC((uint64_t)(v0 + 2), &qword_26B12C878);
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(1);
  }
}

uint64_t sub_24746A8AC(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return MEMORY[0x270FA2498](sub_24746A414, 0, 0);
}

uint64_t sub_24746A998(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_24746A9BC, 0, 0);
}

uint64_t sub_24746A9BC()
{
  if (!ASSecureCloudEnabled())
  {
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[11];
    uint64_t v10 = (void *)(v0[13] + OBJC_IVAR____ASActivitySharingClient_transportClient);
    uint64_t v11 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v0[7] = v9;
    v0[8] = v8;
    uint64_t v15 = *(void *)(v11 + 64) + **(int **)(v11 + 64);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[16] = v12;
    void *v12 = v0;
    v12[1] = sub_24746A058;
    __asm { BRAA            X9, X16 }
  }
  sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, (uint64_t)(v0 + 2), &qword_26B12C878);
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v3 = v0[11];
    uint64_t v2 = v0[12];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    v0[9] = v3;
    v0[10] = v2;
    uint64_t v14 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 32)
                                                                                            + **(int **)(v4 + 32));
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_247469F28;
    uint64_t v6 = MEMORY[0x263F8D310];
    return v14(1107, v0 + 9, v6, &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_2474443AC((uint64_t)(v0 + 2), &qword_26B12C878);
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(1);
  }
}

uint64_t sub_24746AE54(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return MEMORY[0x270FA2498](sub_24746A9BC, 0, 0);
}

uint64_t sub_24746AF40(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 112) = a3;
  *(void *)(v4 + 120) = v3;
  *(void *)(v4 + 104) = a2;
  *(unsigned char *)(v4 + 161) = a1;
  return MEMORY[0x270FA2498](sub_24746AF68, 0, 0);
}

uint64_t sub_24746AF68()
{
  swift_bridgeObjectRetain();
  if (!ASSecureCloudEnabled())
  {
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v10 = *(unsigned __int8 *)(v0 + 161);
    uint64_t v11 = (void *)(*(void *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    uint64_t v12 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    *(void *)(v0 + 56) = v10;
    *(void *)(v0 + 64) = v9;
    *(void *)(v0 + 72) = v8;
    uint64_t v16 = *(void *)(v12 + 64) + **(int **)(v12 + 64);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_24746B3C0;
    __asm { BRAA            X9, X16 }
  }
  sub_247473568(*(void *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, &qword_26B12C878);
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v4 = *(unsigned __int8 *)(v0 + 161);
    uint64_t v5 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 80) = v4;
    *(void *)(v0 + 88) = v3;
    *(void *)(v0 + 96) = v2;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32) + **(int **)(v5 + 32));
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_24746B290;
    return v15(1158, v0 + 80, &type metadata for SetMuteEnabledTransportItem, &protocol witness table for SetMuteEnabledTransportItem, v1, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2474443AC(v0 + 16, &qword_26B12C878);
    uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v14(1);
  }
}

uint64_t sub_24746B290()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247476BC0;
  }
  else {
    uint64_t v2 = sub_247476BE8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746B3C0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247476BE0;
  }
  else {
    uint64_t v2 = sub_247476BDC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746B674(char a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_2474B0F50();
  uint64_t v9 = v8;
  v4[4] = v8;
  id v10 = a4;
  uint64_t v11 = swift_task_alloc();
  v4[5] = v11;
  *(void *)uint64_t v11 = v4;
  *(void *)(v11 + 8) = sub_247476BEC;
  *(void *)(v11 + 112) = v9;
  *(void *)(v11 + 120) = v10;
  *(void *)(v11 + 104) = v7;
  *(unsigned char *)(v11 + 161) = a1;
  return MEMORY[0x270FA2498](sub_24746AF68, 0, 0);
}

uint64_t sub_24746B770(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 112) = a3;
  *(void *)(v4 + 120) = v3;
  *(void *)(v4 + 104) = a2;
  *(unsigned char *)(v4 + 161) = a1;
  return MEMORY[0x270FA2498](sub_24746B798, 0, 0);
}

uint64_t sub_24746B798()
{
  swift_bridgeObjectRetain();
  if (!ASSecureCloudEnabled())
  {
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v10 = *(unsigned __int8 *)(v0 + 161);
    uint64_t v11 = (void *)(*(void *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_transportClient);
    uint64_t v12 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    *(void *)(v0 + 56) = v10;
    *(void *)(v0 + 64) = v9;
    *(void *)(v0 + 72) = v8;
    uint64_t v16 = *(void *)(v12 + 64) + **(int **)(v12 + 64);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_24746BCD8;
    __asm { BRAA            X9, X16 }
  }
  sub_247473568(*(void *)(v0 + 120) + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, v0 + 16, &qword_26B12C878);
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v4 = *(unsigned __int8 *)(v0 + 161);
    uint64_t v5 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 80) = v4;
    *(void *)(v0 + 88) = v3;
    *(void *)(v0 + 96) = v2;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32) + **(int **)(v5 + 32));
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_24746BAC0;
    return v15(1159, v0 + 80, &type metadata for SetActivityDataVisibleTransportItem, &protocol witness table for SetActivityDataVisibleTransportItem, v1, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_2474443AC(v0 + 16, &qword_26B12C878);
    uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v14(1);
  }
}

uint64_t sub_24746BAC0()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24746BC64;
  }
  else {
    uint64_t v2 = sub_24746BBF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746BBF0()
{
  swift_bridgeObjectRelease();
  sub_2474735CC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_24746BC64()
{
  swift_bridgeObjectRelease();
  sub_2474735CC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_24746BCD8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24746BE24;
  }
  else {
    uint64_t v2 = sub_24746BE08;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746BE08()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 160));
}

uint64_t sub_24746BE24()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_24746BFC4(char a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_2474B0F50();
  uint64_t v9 = v8;
  v4[4] = v8;
  id v10 = a4;
  uint64_t v11 = swift_task_alloc();
  v4[5] = v11;
  *(void *)uint64_t v11 = v4;
  *(void *)(v11 + 8) = sub_24746C0C0;
  *(void *)(v11 + 112) = v9;
  *(void *)(v11 + 120) = v10;
  *(void *)(v11 + 104) = v7;
  *(unsigned char *)(v11 + 161) = a1;
  return MEMORY[0x270FA2498](sub_24746B798, 0, 0);
}

uint64_t sub_24746C0C0(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v5 + 24);
  if (v3)
  {
    id v10 = (void *)sub_2474B0B90();

    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_24746C274(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24746C298, 0, 0);
}

void sub_24746C298()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v6 = *(void *)(v4 + 64) + **(int **)(v4 + 64);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24746C414;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746C414()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247476BCC;
  }
  else {
    uint64_t v2 = sub_247476BD8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746C6C0(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return MEMORY[0x270FA2498](sub_24746C298, 0, 0);
}

uint64_t sub_24746C7AC(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24746C7D0, 0, 0);
}

void sub_24746C7D0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v6 = *(void *)(v4 + 64) + **(int **)(v4 + 64);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24746C414;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746CAC8(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return MEMORY[0x270FA2498](sub_24746C7D0, 0, 0);
}

uint64_t sub_24746CBB4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24746CBD8, 0, 0);
}

void sub_24746CBD8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v6 = *(void *)(v4 + 64) + **(int **)(v4 + 64);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24746C414;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746CED0(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return MEMORY[0x270FA2498](sub_24746CBD8, 0, 0);
}

uint64_t sub_24746CFBC(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24746CFE0, 0, 0);
}

void sub_24746CFE0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v6 = *(void *)(v4 + 64) + **(int **)(v4 + 64);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24746C414;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746D2D8(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return MEMORY[0x270FA2498](sub_24746CFE0, 0, 0);
}

uint64_t sub_24746D3C4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24746D3E8, 0, 0);
}

void sub_24746D3E8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)(v0[6] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v6 = *(void *)(v4 + 64) + **(int **)(v4 + 64);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24746D564;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746D564()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_24746D6B0;
  }
  else {
    uint64_t v2 = sub_24746D694;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746D694()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_24746D6B0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_24746D848(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return MEMORY[0x270FA2498](sub_24746D3E8, 0, 0);
}

uint64_t sub_24746D934()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24746D954, 0, 0);
}

uint64_t sub_24746D954()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746DA8C;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 40, 401, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746DA8C()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247476BC4;
  }
  else {
    uint64_t v2 = sub_247476BFC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746DD08(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24746DD80, 0, 0);
}

uint64_t sub_24746DD80()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_24746DEB8;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 48, 401, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746DEB8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247476BF8;
  }
  else {
    uint64_t v2 = sub_247476BB8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746DFCC()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24746DFEC, 0, 0);
}

uint64_t sub_24746DFEC()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746E124;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 40, 402, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746E124()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24746E254;
  }
  else {
    uint64_t v2 = sub_24746E238;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746E238()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_24746E254()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_24746E3D8(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24746E450, 0, 0);
}

uint64_t sub_24746E450()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_24746E588;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 48, 402, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746E588()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24746E71C;
  }
  else {
    uint64_t v2 = sub_24746E69C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746E69C()
{
  uint64_t v1 = *(void *)(v0 + 24);

  (*(void (**)(uint64_t, void, void))(v1 + 16))(v1, *(unsigned __int8 *)(v0 + 48), 0);
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24746E71C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);

  uint64_t v3 = (void *)sub_2474B0B90();
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);

  _Block_release(*(const void **)(v0 + 24));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24746E7C0(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_24746E7E0, 0, 0);
}

void sub_24746E7E0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (void *)(*(void *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v5 = *(void *)(v3 + 64) + **(int **)(v3 + 64);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746E944;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746E944()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247476BF0;
  }
  else {
    uint64_t v2 = sub_247476BBC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746EBD0(uint64_t a1, void *aBlock, void *a3)
{
  v3[4] = a1;
  v3[5] = a3;
  v3[6] = _Block_copy(aBlock);
  id v5 = a3;
  return MEMORY[0x270FA2498](sub_24746EC4C, 0, 0);
}

void sub_24746EC4C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (void *)(*(void *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v5 = *(void *)(v3 + 64) + **(int **)(v3 + 64);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746EDB0;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746EDB0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247476BAC;
  }
  else {
    uint64_t v2 = sub_247476BD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746EEC4()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24746EEE4, 0, 0);
}

uint64_t sub_24746EEE4()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746DA8C;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 40, 404, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746F184(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24746F1FC, 0, 0);
}

uint64_t sub_24746F1FC()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_24746DEB8;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 48, 404, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746F334()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24746F354, 0, 0);
}

uint64_t sub_24746F354()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *id v4 = v0;
  v4[1] = sub_24746DA8C;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 40, 405, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746F5F4(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24746F66C, 0, 0);
}

uint64_t sub_24746F66C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_24746DEB8;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 48, 405, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_24746F7A4(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_24746F7C4, 0, 0);
}

void sub_24746F7C4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (void *)(*(void *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v5 = *(void *)(v3 + 64) + **(int **)(v3 + 64);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *id v4 = v0;
  v4[1] = sub_24746F928;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746F928()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24746FA58;
  }
  else {
    uint64_t v2 = sub_24746FA3C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746FA3C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 25));
}

uint64_t sub_24746FA58()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_24746FBEC(uint64_t a1, void *aBlock, void *a3)
{
  v3[4] = a1;
  v3[5] = a3;
  v3[6] = _Block_copy(aBlock);
  id v5 = a3;
  return MEMORY[0x270FA2498](sub_24746FC68, 0, 0);
}

void sub_24746FC68()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (void *)(*(void *)(v0 + 40) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = 0;
  uint64_t v5 = *(void *)(v3 + 64) + **(int **)(v3 + 64);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746FDCC;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_24746FDCC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24746FF60;
  }
  else {
    uint64_t v2 = sub_24746FEE0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24746FEE0()
{
  uint64_t v1 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, void, void))(v1 + 16))(v1, *(unsigned __int8 *)(v0 + 25), 0);
  _Block_release(*(const void **)(v0 + 48));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24746FF60()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);

  uint64_t v3 = (void *)sub_2474B0B90();
  (*(void (**)(uint64_t, void, void *))(v2 + 16))(v2, 0, v3);

  _Block_release(*(const void **)(v0 + 48));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_247470004()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_247470024, 0, 0);
}

uint64_t sub_247470024()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 24) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 40)
                                                                                        + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = sub_2474736DC(0, (unint64_t *)&unk_26B12CC90);
  *uint64_t v4 = v0;
  v4[1] = sub_247470170;
  return v7(v0 + 16, 601, v5, &protocol witness table for ASCodableFriendList, v2, v3);
}

uint64_t sub_247470170()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247470350;
  }
  else {
    uint64_t v2 = sub_247470284;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247470284()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = (id)ASFriendsFromCodableFriendList();
    sub_2474736DC(0, &qword_26B12CB80);
    sub_247473674();
    uint64_t v3 = sub_2474B1140();
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_247470350()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2474704D0(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247470594;
  v5[3] = v4;
  return MEMORY[0x270FA2498](sub_247470024, 0, 0);
}

uint64_t sub_247470594(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  if (v3)
  {
    a1 = sub_2474B0B90();

    uint64_t v8 = 0;
    uint64_t v9 = (void *)a1;
  }
  else if (a1)
  {
    sub_2474736DC(0, &qword_26B12CB80);
    sub_247473674();
    uint64_t v8 = sub_2474B1120();
    swift_bridgeObjectRelease();
    a1 = 0;
    uint64_t v9 = (void *)v8;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  id v10 = *(void (***)(void, void, void))(v5 + 24);
  v10[2](v10, v8, a1);

  _Block_release(v10);
  uint64_t v11 = *(uint64_t (**)(void))(v7 + 8);
  return v11();
}

uint64_t sub_247470750(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return MEMORY[0x270FA2498](sub_247470774, 0, 0);
}

void sub_247470774()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[5];
  uint64_t v3 = (void *)(v0[7] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v0[2] = v2;
  v0[3] = v1;
  uint64_t v6 = *(void *)(v4 + 56) + **(int **)(v4 + 56);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  sub_2474736DC(0, &qword_26B12C868);
  *uint64_t v5 = v0;
  v5[1] = sub_247470904;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_247470904()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247450A28;
  }
  else {
    uint64_t v2 = sub_247470A34;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247470A34()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = objc_msgSend(self, sel_friendWithCodableFriend_, v1);
  }
  else
  {
    id v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_247470C50(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247470D3C;
  v9[6] = v7;
  v9[7] = v8;
  v9[5] = v5;
  return MEMORY[0x270FA2498](sub_247470774, 0, 0);
}

uint64_t sub_247470D3C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  id v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    uint64_t v9 = (void *)sub_2474B0B90();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  id v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_247470EF8(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_247470F1C, 0, 0);
}

uint64_t sub_247470F1C()
{
  if (!ASSecureCloudEnabled())
  {
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[11];
    id v10 = (void *)(v0[13] + OBJC_IVAR____ASActivitySharingClient_transportClient);
    uint64_t v11 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    v0[7] = v9;
    v0[8] = v8;
    uint64_t v15 = *(void *)(v11 + 64) + **(int **)(v11 + 64);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[16] = v12;
    void *v12 = v0;
    v12[1] = sub_247471438;
    __asm { BRAA            X9, X16 }
  }
  sub_247473568(v0[13] + OBJC_IVAR____ASActivitySharingClient_secureCloudClient, (uint64_t)(v0 + 2), &qword_26B12C878);
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v3 = v0[11];
    uint64_t v2 = v0[12];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    v0[9] = v3;
    v0[10] = v2;
    uint64_t v14 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v4 + 32)
                                                                                            + **(int **)(v4 + 32));
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_247471238;
    uint64_t v6 = MEMORY[0x263F8D310];
    return v14(1157, v0 + 9, v6, &protocol witness table for String, v1, v4);
  }
  else
  {
    sub_2474443AC((uint64_t)(v0 + 2), &qword_26B12C878);
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(1);
  }
}

uint64_t sub_247471238()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_2474713D0;
  }
  else {
    uint64_t v2 = sub_247471368;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247471368()
{
  sub_2474735CC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_2474713D0()
{
  sub_2474735CC(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_247471438()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_247471584;
  }
  else {
    uint64_t v2 = sub_247471568;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247471568()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 144));
}

uint64_t sub_247471584()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_24747171C(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247476BEC;
  v9[12] = v7;
  v9[13] = v8;
  v9[11] = v5;
  return MEMORY[0x270FA2498](sub_247470F1C, 0, 0);
}

uint64_t sub_247471808()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_247471828, 0, 0);
}

uint64_t sub_247471828()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746DA8C;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 40, 604, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_247471AC8(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_247471B40, 0, 0);
}

uint64_t sub_247471B40()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_24746DEB8;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 48, 604, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_247471C78(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_247471C98, 0, 0);
}

void sub_247471C98()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)(v0[4] + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v0[2] = v1;
  uint64_t v6 = *(void *)(v3 + 64) + **(int **)(v3 + 64);
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  sub_2474736DC(0, &qword_26B12C870);
  *uint64_t v5 = v0;
  v5[1] = sub_247471E1C;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_247471E1C()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_247471F64;
  }
  else {
    uint64_t v3 = sub_247471F48;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_247471F48()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_247471F64()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_2474720FC(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  uint64_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  void *v8 = v3;
  v8[1] = sub_2474721D8;
  v8[3] = v6;
  v8[4] = v7;
  return MEMORY[0x270FA2498](sub_247471C98, 0, 0);
}

uint64_t sub_2474721D8(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  id v7 = *(void **)(*v2 + 24);
  uint64_t v8 = *(void **)(*v2 + 16);
  uint64_t v9 = *v2;
  swift_task_dealloc();

  uint64_t v10 = *(void *)(v5 + 32);
  if (v3)
  {
    uint64_t v11 = (void *)sub_2474B0B90();

    (*(void (**)(uint64_t, void, void *))(v10 + 16))(v10, 0, v11);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v10 + 16))(v10, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 32));
  uint64_t v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

uint64_t sub_247472388()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_2474723A8, 0, 0);
}

uint64_t sub_2474723A8()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 24) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  id v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_2474724E0;
  uint64_t v5 = MEMORY[0x263F8D6C8];
  return v7(v0 + 16, 801, v5, &protocol witness table for Int, v2, v3);
}

uint64_t sub_2474724E0()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247476BC8;
  }
  else {
    uint64_t v2 = sub_2474725F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474725F4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_247472778(const void *a1, void *a2)
{
  *(void *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_2474727F0, 0, 0);
}

uint64_t sub_2474727F0()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 24) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  id v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *id v4 = v0;
  v4[1] = sub_247472928;
  uint64_t v5 = MEMORY[0x263F8D6C8];
  return v7(v0 + 16, 801, v5, &protocol witness table for Int, v2, v3);
}

uint64_t sub_247472928()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247472ABC;
  }
  else {
    uint64_t v2 = sub_247472A3C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247472A3C()
{
  uint64_t v1 = *(void *)(v0 + 32);

  (*(void (**)(uint64_t, void, void))(v1 + 16))(v1, *(void *)(v0 + 16), 0);
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_247472ABC()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);

  uint64_t v3 = (void *)sub_2474B0B90();
  (*(void (**)(uint64_t))(v2 + 16))(v2);

  _Block_release(*(const void **)(v0 + 32));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_247472B5C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_247472B7C, 0, 0);
}

uint64_t sub_247472B7C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  id v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24746DA8C;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 40, 901, v5, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_247472E1C(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_247472E94, 0, 0);
}

uint64_t sub_247472E94()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 16) + OBJC_IVAR____ASActivitySharingClient_transportClient);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  id v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                        + **(int **)(v3 + 48));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *id v4 = v0;
  v4[1] = sub_24746DEB8;
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return v7(v0 + 48, 901, v5, &protocol witness table for Bool, v2, v3);
}

id ActivitySharingClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_247473060(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *id v4 = v3;
  v4[1] = sub_24745B0A0;
  return v6();
}

uint64_t sub_24747312C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B1110();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2474B1100();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2474443AC(a1, &qword_26B12CC80);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2474B10D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2474732D8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_2474733B4;
  return v6(a1);
}

uint64_t sub_2474733B4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_2474734AC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_2474B13A0();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_247473550(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_247473568(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2474735CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_247473620(uint64_t a1)
{
  return a1;
}

unint64_t sub_247473674()
{
  unint64_t result = qword_26B12CCA0;
  if (!qword_26B12CCA0)
  {
    sub_2474736DC(255, &qword_26B12CB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12CCA0);
  }
  return result;
}

uint64_t sub_2474736DC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t method lookup function for ActivitySharingClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ActivitySharingClient);
}

uint64_t dispatch thunk of ActivitySharingClient.__allocating_init(activitySharingDaemonEnabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ActivitySharingClient.activate()()
{
  long long v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x78);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_24745B0A0;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.invalidate()()
{
  long long v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x80);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_24745B0A0;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.sendFriendInvite(to:callerID:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)((*MEMORY[0x263F8EED0] & *v6) + 0x88);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_247476BF4;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ActivitySharingClient.acceptFriendInvite(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x90);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.withdrawFriendInvite(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x98);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.ignoreFriendInvite(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xA0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.setMuteEnabled(_:friendUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x263F8EED0] & *v3) + 0xA8);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247476BF4;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of ActivitySharingClient.setActivityDataVisible(_:friendUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x263F8EED0] & *v3) + 0xB0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247476BF4;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of ActivitySharingClient.sendCompetitionInvite(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xB8);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.acceptCompetitionInvite(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xC0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.ignoreCompetitionInvite(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xC8);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.completeCompetition(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xD0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.rollCompetition(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0xD8);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.pushActivityData()()
{
  long long v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0xE0);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.immediateFetchActivityData()()
{
  long long v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0xE8);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2474747D8;
  return v5();
}

uint64_t sub_2474747D8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.fetchActivityData(lastFetchElapsedMinimum:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x263F8EED0] & *v1) + 0xF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  return v7(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.isCloudKitAccountActive()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0xF8);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.expireChangeToken()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x100);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.areMultipleDevicesSharingData(forSnapshotIndex:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x263F8EED0] & *v1) + 0x108);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  return v7(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.allFriends()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x110);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2474747D8;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.friend(withRemoteRelationshipUUID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x118);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.removeFriend(withUUID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x263F8EED0] & *v2) + 0x120);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ActivitySharingClient.removeAllFriends()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x128);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.handleNotificationResponse(_:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x263F8EED0] & *v1) + 0x130);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  return v7(a1);
}

uint64_t dispatch thunk of ActivitySharingClient.appBadgeCount()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x138);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return v5();
}

uint64_t dispatch thunk of ActivitySharingClient.pushFakeActivityData()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x140);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return v5();
}

uint64_t sub_2474754AC()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250C20 + dword_269250C20);
  return v5(v2, v3);
}

uint64_t sub_24747555C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269250C30 + dword_269250C30);
  return v6(v2, v3, v4);
}

uint64_t sub_247475620(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_269250C40 + dword_269250C40);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_2474756EC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_247475724(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2474577A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269250C50 + dword_269250C50);
  return v6(a1, v4);
}

uint64_t sub_2474757E0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250C60 + dword_269250C60);
  return v5(v2, v3);
}

uint64_t sub_247475898()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_269250C80 + dword_269250C80);
  return v6(v2, v3, v4);
}

uint64_t sub_247475958()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250CA0 + dword_269250CA0);
  return v5(v2, v3);
}

uint64_t sub_247475A10()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250CC0 + dword_269250CC0);
  return v6(v2, v3, v4);
}

uint64_t sub_247475AD0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250CE0 + dword_269250CE0);
  return v6(v2, v3, v4);
}

uint64_t sub_247475B90()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250D00 + dword_269250D00);
  return v5(v2, v3);
}

uint64_t sub_247475C48()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_269250D20 + dword_269250D20);
  return v6(v2, v3, v4);
}

uint64_t sub_247475D08()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250D40 + dword_269250D40);
  return v5(v2, v3);
}

uint64_t sub_247475DC0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250D60 + dword_269250D60);
  return v5(v2, v3);
}

uint64_t objectdestroy_195Tm()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_247475EB8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_269250D80 + dword_269250D80);
  return v6(v2, v3, v4);
}

uint64_t sub_247475F78()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_2474577A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250DA0 + dword_269250DA0);
  return v5(v2, v3);
}

uint64_t sub_247476030()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250DC0 + dword_269250DC0);
  return v5(v2, v3);
}

uint64_t sub_2474760E8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250DE0 + dword_269250DE0);
  return v6(v2, v3, v4);
}

uint64_t sub_2474761A8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250E00 + dword_269250E00);
  return v6(v2, v3, v4);
}

uint64_t sub_247476268()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250E20 + dword_269250E20);
  return v6(v2, v3, v4);
}

uint64_t sub_247476328()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250E40 + dword_269250E40);
  return v6(v2, v3, v4);
}

uint64_t sub_2474763E8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250E60 + dword_269250E60);
  return v6(v2, v3, v4);
}

uint64_t sub_2474764A8()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v5 = *(void **)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_24745B0A0;
  uint64_t v7 = (uint64_t (*)(char, int, void *, void *))((char *)&dword_269250E80 + dword_269250E80);
  return v7(v2, v3, v4, v5);
}

uint64_t objectdestroy_360Tm()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2474765C0()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v5 = *(void **)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_24745B0A0;
  uint64_t v7 = (uint64_t (*)(char, int, void *, void *))((char *)&dword_269250EA0 + dword_269250EA0);
  return v7(v2, v3, v4, v5);
}

uint64_t sub_247476690()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250EC0 + dword_269250EC0);
  return v6(v2, v3, v4);
}

uint64_t sub_247476750()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250EE0 + dword_269250EE0);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_120Tm()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_247476858()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_269250F00 + dword_269250F00);
  return v6(v2, v3, v4);
}

uint64_t sub_247476914()
{
  _Block_release(*(const void **)(v0 + 40));
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24747696C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(int, int, int, void *, void *))((char *)&dword_269250F20 + dword_269250F20);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_247476A40()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250F40 + dword_269250F40);
  return v5(v2, v3);
}

uint64_t sub_247476AF8()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24745B0A0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_269250F60 + dword_269250F60);
  return v5(v2, v3);
}

uint64_t Collection.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a4;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  v6[8] = swift_task_alloc();
  v6[9] = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(void *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_2474B1210();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a3 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  unsigned char v6[16] = v10;
  v6[17] = *(void *)(v10 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247476E1C, 0, 0);
}

uint64_t sub_247476E1C()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  v0[2] = sub_2474B1070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_2474B0FE0();
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = v12;
    void *v12 = v0;
    v12[1] = sub_247477074;
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[8];
    return v15(v14, v13);
  }
}

uint64_t sub_247477074()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2474773D0;
  }
  else
  {
    uint64_t v2 = sub_247477190;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247477190()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_2474B10B0();
  sub_2474B10A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v7 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  else
  {
    uint64_t v10 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_247477074;
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[8];
    return v14(v13, v12);
  }
}

uint64_t sub_2474773D0()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Collection.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a4;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  uint64_t v10 = sub_2474B1210();
  v6[8] = v10;
  v6[9] = *(void *)(v10 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = *(void *)(a4 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  unsigned char v6[16] = *(void *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  sub_2474B1210();
  v6[18] = swift_task_alloc();
  v6[19] = *(void *)(a3 - 8);
  v6[20] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v6[21] = v12;
  v6[22] = *(void *)(v12 - 8);
  v6[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247477768, 0, 0);
}

uint64_t sub_247477768()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  v0[2] = sub_2474B1070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_2474B0FE0();
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[16];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[24] = v12;
    void *v12 = v0;
    v12[1] = sub_2474779DC;
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[10];
    return v15(v14, v13);
  }
}

uint64_t sub_2474779DC()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_247477E1C;
  }
  else
  {
    uint64_t v2 = sub_247477AF8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247477AF8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  uint64_t v6 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v7 = v0[15];
  if (v4 == 1)
  {
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[9];
    (*(void (**)(void, void))(v6 + 8))(v0[17], v0[15]);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  }
  else
  {
    uint64_t v11 = v0[12];
    uint64_t v10 = v0[13];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v11, v10, v3);
    sub_2474B10B0();
    sub_2474B10A0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t v12 = v0[18];
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[16];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    uint64_t v15 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(v15);
  }
  else
  {
    uint64_t v18 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v18 + *v18);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[24] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_2474779DC;
    uint64_t v20 = v0[17];
    uint64_t v21 = v0[10];
    return v22(v21, v20);
  }
}

uint64_t sub_247477E1C()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Collection.asyncFlatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a3;
  v7[6] = a4;
  v7[3] = a1;
  v7[4] = a2;
  v7[9] = swift_task_alloc();
  v7[10] = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[11] = AssociatedTypeWitness;
  v7[12] = *(void *)(AssociatedTypeWitness - 8);
  v7[13] = swift_task_alloc();
  sub_2474B1210();
  v7[14] = swift_task_alloc();
  v7[15] = *(void *)(a3 - 8);
  unsigned char v7[16] = swift_task_alloc();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v7[17] = v11;
  v7[18] = *(void *)(v11 - 8);
  v7[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247478130, 0, 0);
}

uint64_t sub_247478130()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  v0[20] = swift_getAssociatedTypeWitness();
  v0[2] = sub_2474B1070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_2474B0FE0();
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[12] + 32))(v0[13], v0[14], v0[11]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[21] = v12;
    void *v12 = v0;
    v12[1] = sub_2474783B0;
    uint64_t v13 = v0[13];
    uint64_t v14 = v0[9];
    return v15(v14, v13);
  }
}

uint64_t sub_2474783B0()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24747871C;
  }
  else
  {
    uint64_t v2 = sub_2474784CC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474784CC()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  sub_2474B10B0();
  sub_2474B1090();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    uint64_t v7 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  else
  {
    uint64_t v10 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[12] + 32))(v0[13], v0[14], v0[11]);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[21] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_2474783B0;
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[9];
    return v14(v13, v12);
  }
}

uint64_t sub_24747871C()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Collection.asyncForEach(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[4] = a3;
  v5[5] = v4;
  id v5[2] = a1;
  v5[3] = a2;
  v5[6] = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  sub_2474B1210();
  v5[10] = swift_task_alloc();
  v5[11] = *(void *)(a3 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2474789E4, 0, 0);
}

uint64_t sub_2474789E4()
{
  (*(void (**)(void, void, void))(v0[11] + 16))(v0[12], v0[5], v0[4]);
  sub_2474B0FE0();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[2];
    (*(void (**)(void, void, void))(v0[8] + 32))(v0[9], v0[10], v0[7]);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_247478C00;
    uint64_t v8 = v0[9];
    return v9(v8);
  }
}

uint64_t sub_247478C00()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247478F0C;
  }
  else {
    uint64_t v2 = sub_247478D14;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247478D14()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[2];
    (*(void (**)(void, void, void))(v0[8] + 32))(v0[9], v0[10], v0[7]);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_247478C00;
    uint64_t v8 = v0[9];
    return v9(v8);
  }
}

uint64_t sub_247478F0C()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Collection.asyncFilter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  v5[6] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[7] = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[8] = AssociatedTypeWitness;
  v5[9] = *(void *)(AssociatedTypeWitness - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  sub_2474B1210();
  v5[12] = swift_task_alloc();
  v5[13] = *(void *)(a3 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  v5[15] = v8;
  v5[16] = *(void *)(v8 - 8);
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2474791D8, 0, 0);
}

uint64_t sub_2474791D8()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  v0[2] = sub_2474B1070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_2474B0FE0();
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[8];
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[9] + 32))(v0[11], v0[12], v0[8]);
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[18] = v12;
    void *v12 = v0;
    v12[1] = sub_247479428;
    uint64_t v13 = v0[11];
    return v14(v13);
  }
}

uint64_t sub_247479428(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2474797B4;
  }
  else
  {
    *(unsigned char *)(v4 + 160) = a1 & 1;
    uint64_t v5 = sub_24747955C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24747955C()
{
  if (*(unsigned char *)(v0 + 160))
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 72) + 16))(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 64));
    sub_2474B10B0();
    sub_2474B10A0();
  }
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  swift_getAssociatedConformanceWitness();
  sub_2474B1220();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    uint64_t v4 = *(void *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v5(v4);
  }
  else
  {
    uint64_t v7 = *(int **)(v0 + 24);
    (*(void (**)(void, void, void))(*(void *)(v0 + 72) + 32))(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 64));
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v8;
    void *v8 = v0;
    v8[1] = sub_247479428;
    uint64_t v9 = *(void *)(v0 + 88);
    return v10(v9);
  }
}

uint64_t sub_2474797B4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

ActivitySharingClient::SetActivityDataVisibleTransportItem __swiftcall SetActivityDataVisibleTransportItem.init(isActivityDataVisible:friendUUID:)(Swift::Bool isActivityDataVisible, Swift::String friendUUID)
{
  *(unsigned char *)uint64_t v2 = isActivityDataVisible;
  *(Swift::String *)(v2 + 8) = friendUUID;
  result.friendUUID = friendUUID;
  result.isActivityDataVisible = isActivityDataVisible;
  return result;
}

uint64_t SetActivityDataVisibleTransportItem.isActivityDataVisible.getter()
{
  return *v0;
}

uint64_t SetActivityDataVisibleTransportItem.friendUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SetActivityDataVisibleTransportItem.description.getter()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_2474799D8()
{
  if (*v0) {
    return 0x5555646E65697266;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_247479A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24747A1DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_247479A44(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_247479A50(uint64_t a1)
{
  unint64_t v2 = sub_247479C3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247479A8C(uint64_t a1)
{
  unint64_t v2 = sub_247479C3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetActivityDataVisibleTransportItem.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250FA8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247479C3C();
  sub_2474B1550();
  char v12 = 0;
  sub_2474B1410();
  if (!v2)
  {
    char v11 = 1;
    sub_2474B1400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_247479C3C()
{
  unint64_t result = qword_269250FB0;
  if (!qword_269250FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250FB0);
  }
  return result;
}

uint64_t SetActivityDataVisibleTransportItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269250FB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247479C3C();
  sub_2474B1540();
  if (!v2)
  {
    char v16 = 0;
    char v9 = sub_2474B13D0();
    char v15 = 1;
    uint64_t v11 = sub_2474B13C0();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_247479E38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetActivityDataVisibleTransportItem.init(from:)(a1, a2);
}

uint64_t sub_247479E50(void *a1)
{
  return SetActivityDataVisibleTransportItem.encode(to:)(a1);
}

uint64_t destroy for SetActivityDataVisibleTransportItem()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s21ActivitySharingClient35SetActivityDataVisibleTransportItemVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SetActivityDataVisibleTransportItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetActivityDataVisibleTransportItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetActivityDataVisibleTransportItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetActivityDataVisibleTransportItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetActivityDataVisibleTransportItem()
{
  return &type metadata for SetActivityDataVisibleTransportItem;
}

unsigned char *storeEnumTagSinglePayload for SetActivityDataVisibleTransportItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24747A09CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetActivityDataVisibleTransportItem.CodingKeys()
{
  return &type metadata for SetActivityDataVisibleTransportItem.CodingKeys;
}

unint64_t sub_24747A0D8()
{
  unint64_t result = qword_269250FC0;
  if (!qword_269250FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250FC0);
  }
  return result;
}

unint64_t sub_24747A130()
{
  unint64_t result = qword_269250FC8;
  if (!qword_269250FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250FC8);
  }
  return result;
}

unint64_t sub_24747A188()
{
  unint64_t result = qword_269250FD0;
  if (!qword_269250FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269250FD0);
  }
  return result;
}

uint64_t sub_24747A1DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002474B6F60 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5555646E65697266 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id LocalTransport.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t sub_24747A30C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  int v3 = (void *)(*a2 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *int v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_24747A378()
{
  return swift_retain();
}

uint64_t sub_24747A3C4(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *int v3 = a1;
  return swift_release();
}

uint64_t (*sub_24747A418())()
{
  return j__swift_endAccess;
}

uint64_t sub_24747A474(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  int v3 = (void *)(*a2 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  *int v3 = v2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_24747A4E0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_24747A52C(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  *int v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_24747A580())()
{
  return j_j__swift_endAccess;
}

id LocalTransport.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService;
  type metadata accessor for TransportDispatchService();
  uint64_t v2 = swift_allocObject();
  int v3 = v0;
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = MEMORY[0x263F8EE80];
  *(void *)&v0[v1] = v2;
  *(void *)&v3[OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for LocalTransport();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for LocalTransport()
{
  return self;
}

id LocalTransport.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocalTransport();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24747A7AC()
{
  return swift_retain();
}

uint64_t LocalTransport.invalidate()()
{
  return sub_24747A838(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24747A838(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t LocalTransport.sendItem(_:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_24747A860, 0, 0);
}

uint64_t sub_24747A860()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = xmmword_2474B2410;
  unsigned int v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  *unsigned int v4 = v0;
  v4[1] = sub_24747A970;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000019, 0x80000002474B6F80, sub_24747C848, v3, v5);
}

uint64_t sub_24747A970()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24747AAF0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24747AA8C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24747AA8C()
{
  sub_24743E498(v0[2], v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24747AAF0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t LocalTransport.sendItem<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v6 = sub_2474B1210();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24747AC20, 0, 0);
}

uint64_t sub_24747AC20()
{
  uint64_t v1 = v0 + 9;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  (*(void (**)(uint64_t, void, void))(v0[10] + 16))(v2, v0[5], v0[9]);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = v0[10];
    unint64_t v6 = 0xF000000000000000;
  }
  else
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v0[7] + 8))(v0[6]);
    unint64_t v6 = v7;
    uint64_t v1 = v0 + 6;
  }
  uint64_t v8 = *v1;
  v0[12] = v5;
  v0[13] = v6;
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[4];
  (*(void (**)(void, uint64_t))(v4 + 8))(v0[11], v8);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  v11[2] = v9;
  v11[3] = v10;
  v11[4] = v5;
  v11[5] = v6;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  void *v12 = v0;
  v12[1] = sub_24747AE78;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000019, 0x80000002474B6F80, sub_24747E1E0, v11, v13);
}

uint64_t sub_24747AE78()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24747B01C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24747AF94;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24747AF94()
{
  uint64_t v1 = v0[12];
  unint64_t v2 = v0[13];
  sub_24743E498(v0[2], v0[3]);
  sub_24743E498(v1, v2);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24747B01C()
{
  unint64_t v1 = v0[13];
  uint64_t v2 = v0[12];
  swift_task_dealloc();
  sub_24743E498(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t LocalTransport.sendItem<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x270FA2498](sub_24747B0C0, 0, 0);
}

{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  unint64_t v6 = sub_2474B1210();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24747B4B8, 0, 0);
}

uint64_t sub_24747B0C0()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = xmmword_2474B2410;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  *uint64_t v4 = v0;
  v4[1] = sub_24747B1D4;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000019, 0x80000002474B6F80, sub_24747E1E0, v3, v5);
}

uint64_t sub_24747B1D4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24747B388;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24747B2F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24747B2F0()
{
  (*(void (**)(void, void))(v0[7] + 16))(v0[2], v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24747B388()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24747B4B8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[12] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = xmmword_2474B2410;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  *uint64_t v4 = v0;
  v4[1] = sub_24747B5CC;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000019, 0x80000002474B6F80, sub_24747E1E0, v3, v5);
}

uint64_t sub_24747B5CC()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24747B8C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24747B6E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24747B6E8()
{
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[2];
  unint64_t v5 = v0[3];
  unint64_t v6 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16);
  sub_247446DC4(v4, v5);
  v6(v4, v5, v3, v2);
  if (v1) {
    goto LABEL_4;
  }
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[6];
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[10] + 8))(v7, v0[9]);
    sub_247446DD8();
    swift_allocError();
    unsigned char *v10 = 1;
    swift_willThrow();
LABEL_4:
    sub_24743E498(v4, v5);
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    goto LABEL_6;
  }
  uint64_t v12 = v0[4];
  sub_24743E498(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v7, v8);
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v11();
}

uint64_t sub_24747B8C0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t LocalTransport.sendItem<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = sub_2474B1210();
  v8[12] = v9;
  v8[13] = *(void *)(v9 - 8);
  v8[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24747B9FC, 0, 0);
}

{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = sub_2474B1210();
  v8[12] = v9;
  v8[13] = *(void *)(v9 - 8);
  v8[14] = swift_task_alloc();
  uint64_t v10 = sub_2474B1210();
  v8[15] = v10;
  unsigned char v8[16] = *(void *)(v10 - 8);
  v8[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24747BFEC, 0, 0);
}

uint64_t sub_24747B9FC()
{
  uint64_t v1 = v0 + 12;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[7];
  (*(void (**)(uint64_t, void, void))(v0[13] + 16))(v2, v0[6], v0[12]);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = v0[13];
    unint64_t v6 = 0xF000000000000000;
  }
  else
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v0[9] + 8))(v0[7]);
    unint64_t v6 = v7;
    uint64_t v1 = v0 + 7;
  }
  uint64_t v8 = *v1;
  v0[15] = v5;
  v0[16] = v6;
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[5];
  (*(void (**)(void, uint64_t))(v4 + 8))(v0[14], v8);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[17] = v11;
  v11[2] = v9;
  v11[3] = v10;
  v11[4] = v5;
  v11[5] = v6;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[18] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  void *v12 = v0;
  v12[1] = sub_24747BC58;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000019, 0x80000002474B6F80, sub_24747E1E0, v11, v13);
}

uint64_t sub_24747BC58()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24747BE3C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24747BD74;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24747BD74()
{
  (*(void (**)(void, void))(v0[10] + 16))(v0[2], v0[3]);
  sub_24743E498(v0[15], v0[16]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24747BE3C()
{
  unint64_t v1 = v0[16];
  uint64_t v2 = v0[15];
  swift_task_dealloc();
  sub_24743E498(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24747BFEC()
{
  unint64_t v1 = v0 + 15;
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[7];
  (*(void (**)(uint64_t, void, void))(v0[16] + 16))(v2, v0[6], v0[15]);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = v0[16];
    unint64_t v6 = 0xF000000000000000;
  }
  else
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v0[9] + 8))(v0[7]);
    unint64_t v6 = v7;
    unint64_t v1 = v0 + 7;
  }
  uint64_t v8 = *v1;
  v0[18] = v5;
  v0[19] = v6;
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[5];
  (*(void (**)(void, uint64_t))(v4 + 8))(v0[17], v8);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[20] = v11;
  v11[2] = v9;
  v11[3] = v10;
  v11[4] = v5;
  v11[5] = v6;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  void *v12 = v0;
  v12[1] = sub_24747C254;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000019, 0x80000002474B6F80, sub_24747E1E0, v11, v13);
}

uint64_t sub_24747C254()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24747C59C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24747C370;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24747C370()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[2];
  unint64_t v4 = v0[3];
  unint64_t v6 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16);
  sub_247446DC4(v5, v4);
  v6(v5, v4, v3, v2);
  if (v1)
  {
    uint64_t v8 = v0[18];
    unint64_t v7 = v0[19];
    sub_24743E498(v5, v4);
    uint64_t v9 = v8;
    unint64_t v10 = v7;
LABEL_5:
    sub_24743E498(v9, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_7;
  }
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[8];
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  uint64_t v16 = v0[18];
  unint64_t v15 = v0[19];
  if (v14 == 1)
  {
    (*(void (**)(uint64_t, void))(v0[13] + 8))(v11, v0[12]);
    sub_247446DD8();
    swift_allocError();
    *uint64_t v17 = 1;
    swift_willThrow();
    sub_24743E498(v5, v4);
    uint64_t v9 = v16;
    unint64_t v10 = v15;
    goto LABEL_5;
  }
  uint64_t v19 = v0[4];
  sub_24743E498(v5, v4);
  sub_24743E498(v16, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v19, v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v18();
}

uint64_t sub_24747C59C()
{
  unint64_t v1 = v0[19];
  uint64_t v2 = v0[18];
  swift_task_dealloc();
  sub_24743E498(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_24747C624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void **)(a2 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if (v13)
  {
    swift_unknownObjectRetain();
    if (a5 >> 60 == 15) {
      int v14 = 0;
    }
    else {
      int v14 = (void *)sub_2474B0BB0();
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    aBlock[4] = sub_24747E154;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_247495598;
    aBlock[3] = &block_descriptor_1;
    uint64_t v17 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v13, sel_transportRequest_data_completion_, a3, v14, v17);
    swift_unknownObjectRelease();
    _Block_release(v17);
  }
}

void sub_24747C848(uint64_t a1)
{
  sub_24747C624(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24747C854(uint64_t a1, unint64_t a2, id a3)
{
  if (a3)
  {
    id v3 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
    return sub_2474B10E0();
  }
  else
  {
    if (a2 >> 60 != 15) {
      sub_247442FA0(a1, a2);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
    return sub_2474B10F0();
  }
}

uint64_t sub_24747C8DC()
{
  return sub_24747A838(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24747C910(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  v5[4] = a1;
  v5[5] = v4;
  return MEMORY[0x270FA2498](sub_24747A860, 0, 0);
}

uint64_t sub_24747C9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24745B0A0;
  return LocalTransport.sendItem<A>(_:payload:)(a1, a2, a3, a4);
}

uint64_t sub_24747CA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_24745B0A0;
  v11[7] = a4;
  v11[8] = v10;
  v11[5] = a2;
  v11[6] = a3;
  v11[4] = a1;
  return MEMORY[0x270FA2498](sub_24747B0C0, 0, 0);
}

uint64_t sub_24747CB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24745B0A0;
  return LocalTransport.sendItem<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_24747CC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *unint64_t v15 = v7;
  v15[1] = sub_24745B0A0;
  return LocalTransport.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_24747CD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *unint64_t v15 = v7;
  v15[1] = sub_2474577A0;
  return LocalTransport.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t LocalTransport.transportRequest(_:data:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CC80);
  MEMORY[0x270FA5388](v12 - 8);
  int v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_2474B0EC0();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD000000000000071, 0x80000002474B6FA0, 0xD000000000000024, 0x80000002474B7020);
  uint64_t v16 = sub_2474B1110();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v6;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  v17[9] = a5;
  id v18 = v6;
  sub_247446DC4(a2, a3);
  swift_retain();
  sub_24747D41C((uint64_t)v14, (uint64_t)&unk_269251030, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_24747CFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a8;
  v8[13] = v10;
  v8[10] = a6;
  v8[11] = a7;
  v8[8] = a4;
  v8[9] = a5;
  return MEMORY[0x270FA2498](sub_24747CFD4, 0, 0);
}

uint64_t sub_24747CFD4()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *(void *)(v0 + 112) = *v1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 56) = -1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24747D0C4;
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  return sub_247458320(v5, v3, v4, v0 + 40);
}

uint64_t sub_24747D0C4(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 128) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[14];
    uint64_t v8 = sub_24747D294;
  }
  else
  {
    swift_release();
    v6[17] = a2;
    v6[18] = a1;
    uint64_t v8 = sub_24747D20C;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_24747D20C()
{
  unint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  (*(void (**)(uint64_t, unint64_t, void))(v0 + 96))(v1, v2, 0);
  sub_24743E498(v1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24747D294()
{
  return MEMORY[0x270FA2498](sub_24747D2B0, 0, 0);
}

uint64_t sub_24747D2B0()
{
  uint64_t v1 = (void *)v0[16];
  unint64_t v2 = (void (*)(void, unint64_t, void *))v0[12];
  swift_release();
  id v3 = v1;
  v2(0, 0xF000000000000000, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24747D350()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_24745B0A0;
  *(_OWORD *)(v4 + 96) = v5;
  *(void *)(v4 + 80) = v2;
  *(void *)(v4 + 88) = v3;
  *(_OWORD *)(v4 + 64) = v7;
  return MEMORY[0x270FA2498](sub_24747CFD4, 0, 0);
}

uint64_t sub_24747D41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B1110();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2474B1100();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24747DCC4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2474B10D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24747D5C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_transportDispatchService);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_24747D61C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC21ActivitySharingClient14LocalTransport_proxy);
  swift_beginAccess();
  *a2 = *v3;
  return swift_unknownObjectRetain();
}

uint64_t method lookup function for LocalTransport(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LocalTransport);
}

uint64_t dispatch thunk of LocalTransport.transportDispatchService.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of LocalTransport.transportDispatchService.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LocalTransport.transportDispatchService.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of LocalTransport.proxy.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of LocalTransport.proxy.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of LocalTransport.proxy.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t sub_24747D7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B1110();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2474B1100();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24747DCC4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2474B10D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269251090);
  return swift_task_create();
}

uint64_t sub_24747DBB4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24747DBEC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_247482984(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_24747DBF8()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_2474577A0;
  *(_OWORD *)(v4 + 96) = v5;
  *(void *)(v4 + 80) = v2;
  *(void *)(v4 + 88) = v3;
  *(_OWORD *)(v4 + 64) = v7;
  return MEMORY[0x270FA2498](sub_24747CFD4, 0, 0);
}

uint64_t sub_24747DCC4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CC80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24747DD24(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  long long v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_24747DE04;
  return v5(v2 + 32);
}

uint64_t sub_24747DE04()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_24747DF18()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24747DF50(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2474577A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251080 + dword_269251080);
  return v6(a1, v4);
}

uint64_t sub_24747E008(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251098 + dword_269251098);
  return v6(a1, v4);
}

uint64_t sub_24747E0C0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24747E154(uint64_t a1, unint64_t a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  return sub_24747C854(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for CodableError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CodableError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24747E350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError()
{
  return &type metadata for CodableError;
}

unint64_t sub_24747E38C()
{
  unint64_t result = qword_2692510A8;
  if (!qword_2692510A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692510A8);
  }
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.buildNumber.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for SecureCloudRepairMessageProtobuf()
{
  uint64_t result = qword_269251130;
  if (!qword_269251130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24747E490@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24747E4F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.buildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.buildNumber.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudRepairMessageProtobuf.hasBuildNumber.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearBuildNumber()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 20));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

double SecureCloudRepairMessageProtobuf.date.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24);
  double result = *(double *)v1;
  if (*(unsigned char *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.date.setter(double a1)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 24);
  *(double *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(unsigned char *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_247440458;
}

BOOL SecureCloudRepairMessageProtobuf.hasDate.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearDate()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 24);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
}

uint64_t SecureCloudRepairMessageProtobuf.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24747E804@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24747E868(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudRepairMessageProtobuf.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 28));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudRepairMessageProtobuf.secureCloudShareItem.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_247446DC4(*v1, v2);
  return v3;
}

uint64_t sub_24747EA38(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32));
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  sub_247442FA0(v2, v3);
  uint64_t result = sub_24743E498(v5, v6);
  *unint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.secureCloudShareItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32);
  uint64_t result = sub_24743E498(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.secureCloudShareItem.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_247446DC4(v5, v6);
  return sub_247451B34;
}

BOOL SecureCloudRepairMessageProtobuf.hasSecureCloudShareItem.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32) + 8) >> 60 != 15;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearSecureCloudShareItem()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32);
  sub_24743E498(*(void *)v1, *(void *)(v1 + 8));
  *(_OWORD *)uint64_t v1 = xmmword_2474B2410;
}

uint64_t SecureCloudRepairMessageProtobuf.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  unint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  if (*((unsigned char *)v4 + 9))
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v7 = *((unsigned char *)v4 + 8);
    uint64_t v5 = *v4;
    char v6 = v7 & 1;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.type.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v5 = v1 + *(int *)(result + 36);
  *(void *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 9) = 0;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.type.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 36);
  *(_DWORD *)(a1 + 12) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((unsigned char *)v4 + 9))
  {
    uint64_t v5 = 0;
    char v6 = 1;
  }
  else
  {
    char v7 = *((unsigned char *)v4 + 8);
    uint64_t v5 = *v4;
    char v6 = v7 & 1;
  }
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  return sub_247451CC0;
}

BOOL SecureCloudRepairMessageProtobuf.hasType.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 36) + 9) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearType()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 36);
  *(void *)uint64_t v1 = 0;
  *(_WORD *)(v1 + 8) = 256;
}

uint64_t SecureCloudRepairMessageProtobuf.version.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t SecureCloudRepairMessageProtobuf.version.setter(int a1)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t (*SecureCloudRepairMessageProtobuf.version.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2474415E0;
}

BOOL SecureCloudRepairMessageProtobuf.hasVersion.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40) + 4) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudRepairMessageProtobuf.clearVersion()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 40);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t SecureCloudRepairMessageProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudRepairMessageProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudRepairMessageProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

void SecureCloudRepairMessageProtobuf.MessageType.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t SecureCloudRepairMessageProtobuf.MessageType.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.MessageType.rawValue.getter()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t sub_24747EFB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_24747F984();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

double SecureCloudRepairMessageProtobuf.init()@<D0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t v2 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v3 = (void *)(a1 + v2[5]);
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = a1 + v2[6];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  int v5 = (void *)(a1 + v2[7]);
  *int v5 = 0;
  v5[1] = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + v2[8]) = xmmword_2474B2410;
  uint64_t v7 = a1 + v2[9];
  *(void *)uint64_t v7 = 0;
  *(_WORD *)(v7 + 8) = 256;
  uint64_t v8 = a1 + v2[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  return result;
}

void sub_24747F088()
{
  qword_2692510B0 = (uint64_t)&unk_26FB90170;
}

uint64_t static SecureCloudRepairMessageProtobuf.MessageType.allCases.getter()
{
  if (qword_2692503C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SecureCloudRepairMessageProtobuf.MessageType.allCases.setter(uint64_t a1)
{
  if (qword_2692503C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2692510B0 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SecureCloudRepairMessageProtobuf.MessageType.allCases.modify())()
{
  if (qword_2692503C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24747F21C@<X0>(void *a1@<X8>)
{
  if (qword_2692503C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_2692510B0;
  return swift_bridgeObjectRetain();
}

unint64_t static SecureCloudRepairMessageProtobuf.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_24747F2B8()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_2692510B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692510B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B2420;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "buildNumber";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "date";
  *(void *)(v10 + 8) = 4;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "identifier";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  int v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)int v14 = "secureCloudShareItem";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "type";
  *((void *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  id v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)id v18 = "version";
  *((void *)v18 + 1) = 7;
  v18[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudRepairMessageProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247453048(&qword_2692503C8, (uint64_t)qword_2692510B8, a1);
}

uint64_t SecureCloudRepairMessageProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
      case 3:
        type metadata accessor for SecureCloudRepairMessageProtobuf();
        sub_2474B0D80();
        break;
      case 2:
        type metadata accessor for SecureCloudRepairMessageProtobuf();
        sub_2474B0D70();
        break;
      case 4:
        type metadata accessor for SecureCloudRepairMessageProtobuf();
        sub_2474B0D60();
        break;
      case 5:
        sub_24747F724();
        break;
      case 6:
        type metadata accessor for SecureCloudRepairMessageProtobuf();
        sub_2474B0D90();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_24747F724()
{
  return sub_2474B0D50();
}

uint64_t SecureCloudRepairMessageProtobuf.traverse<A>(visitor:)()
{
  char v2 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  if (!*(void *)(v0 + v2[5] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
  {
    if ((*(unsigned char *)(v0 + v2[6] + 8) & 1) != 0 || (uint64_t result = sub_2474B0E30(), !v1))
    {
      if (!*(void *)(v0 + v2[7] + 8) || (uint64_t result = sub_2474B0E40(), !v1))
      {
        uint64_t v4 = v0 + v2[8];
        unint64_t v5 = *(void *)(v4 + 8);
        if (v5 >> 60 == 15
          || (uint64_t v6 = *(void *)v4,
              sub_247442FA0(*(void *)v4, *(void *)(v4 + 8)),
              sub_2474B0E20(),
              uint64_t result = sub_24743E498(v6, v5),
              !v1))
        {
          if ((*(unsigned char *)(v0 + v2[9] + 9) & 1) != 0 || (sub_24747F984(), uint64_t result = sub_2474B0E10(), !v1))
          {
            if (*(unsigned char *)(v0 + v2[10] + 4)) {
              return sub_2474B0CC0();
            }
            uint64_t result = sub_2474B0E50();
            if (!v1) {
              return sub_2474B0CC0();
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_24747F984()
{
  unint64_t result = qword_2692510E8;
  if (!qword_2692510E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692510E8);
  }
  return result;
}

uint64_t SecureCloudRepairMessageProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

double sub_24747FA64@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2474B0CD0();
  uint64_t v4 = a1[6];
  unint64_t v5 = (void *)(a2 + a1[5]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = a2 + v4;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = a1[8];
  uint64_t v8 = (void *)(a2 + a1[7]);
  void *v8 = 0;
  v8[1] = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v7) = xmmword_2474B2410;
  uint64_t v10 = a1[10];
  uint64_t v11 = a2 + a1[9];
  *(void *)uint64_t v11 = 0;
  *(_WORD *)(v11 + 8) = 256;
  uint64_t v12 = a2 + v10;
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  return result;
}

unint64_t sub_24747FAE0()
{
  return 0xD000000000000020;
}

uint64_t sub_24747FAFC()
{
  return SecureCloudRepairMessageProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_24747FB14()
{
  return SecureCloudRepairMessageProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_24747FB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24748152C(&qword_269251140, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_24747FBA8@<X0>(uint64_t a1@<X8>)
{
  return sub_247453104(&qword_2692503C8, (uint64_t)qword_2692510B8, a1);
}

uint64_t sub_24747FBCC(uint64_t a1)
{
  uint64_t v2 = sub_24748152C(&qword_2692505F8, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_24747FC38()
{
  sub_24748152C(&qword_2692505F8, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
  return sub_2474B0DF0();
}

uint64_t sub_24747FCB8()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_2692510D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692510D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B3060;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "request";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "response";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudRepairMessageProtobuf.MessageType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247453048(&qword_2692503D0, (uint64_t)qword_2692510D0, a1);
}

uint64_t sub_24747FE94@<X0>(uint64_t a1@<X8>)
{
  return sub_247453104(&qword_2692503D0, (uint64_t)qword_2692510D0, a1);
}

uint64_t sub_24747FEB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_2474A7BE0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_24747FF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2474B0B60();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_2474B0B80();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2474B0B70();
  sub_2474A7BE0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_247480048(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x2474802B0);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_247442FA0(a3, a4);
                  sub_247442FA0(a1, a2);
                  char v17 = sub_24747FF90((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_24743E4AC(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_247442FA0(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_24747FF90(v21, v22, v20, a3, a4);
                  sub_24743E4AC(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_247442FA0(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_247442FA0(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_24747FEB8(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_24743E4AC(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s21ActivitySharingClient32SecureCloudRepairMessageProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v54[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v54[-v9];
  BOOL v11 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (v16) {
      goto LABEL_25;
    }
    goto LABEL_10;
  }
  if (!v16) {
    goto LABEL_25;
  }
  BOOL v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (char v18 = 0, (sub_2474B1470() & 1) != 0))
  {
LABEL_10:
    uint64_t v19 = v11[6];
    uint64_t v20 = (double *)(a1 + v19);
    char v21 = *(unsigned char *)(a1 + v19 + 8);
    uint64_t v22 = (double *)(a2 + v19);
    int v23 = *(unsigned __int8 *)(a2 + v19 + 8);
    if (v21)
    {
      if (!v23) {
        goto LABEL_25;
      }
    }
    else
    {
      if (*v20 != *v22) {
        LOBYTE(v23) = 1;
      }
      if (v23) {
        goto LABEL_25;
      }
    }
    uint64_t v24 = v11[7];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = *(void *)(a1 + v24 + 8);
    id v27 = (void *)(a2 + v24);
    uint64_t v28 = v27[1];
    if (v26)
    {
      if (!v28) {
        goto LABEL_25;
      }
      if (*v25 != *v27 || v26 != v28)
      {
        char v18 = 0;
        if ((sub_2474B1470() & 1) == 0) {
          return v18 & 1;
        }
      }
    }
    else if (v28)
    {
      goto LABEL_25;
    }
    uint64_t v31 = v11[8];
    uint64_t v32 = *(void *)(a1 + v31);
    unint64_t v33 = *(void *)(a1 + v31 + 8);
    long long v34 = (uint64_t *)(a2 + v31);
    uint64_t v35 = *v34;
    unint64_t v36 = v34[1];
    if (v33 >> 60 == 15)
    {
      if (v36 >> 60 == 15)
      {
LABEL_33:
        uint64_t v38 = v11[9];
        uint64_t v39 = (uint64_t *)(a1 + v38);
        char v40 = *(unsigned char *)(a1 + v38 + 9);
        uint64_t v41 = (uint64_t *)(a2 + v38);
        if (v40)
        {
          if ((*((unsigned char *)v41 + 9) & 1) == 0) {
            goto LABEL_25;
          }
        }
        else
        {
          if (*((unsigned char *)v41 + 9)) {
            goto LABEL_25;
          }
          uint64_t v42 = *v39;
          char v43 = *((unsigned char *)v39 + 8);
          uint64_t v44 = *v41;
          char v45 = *((unsigned char *)v41 + 8);
          uint64_t v46 = v42 != 0;
          if ((v43 & 1) == 0) {
            uint64_t v46 = v42;
          }
          if (v45)
          {
            if (v44)
            {
              if (v46 != 1) {
                goto LABEL_25;
              }
            }
            else if (v46)
            {
              goto LABEL_25;
            }
          }
          else if (v46 != v44)
          {
            goto LABEL_25;
          }
        }
        uint64_t v47 = v11[10];
        uint64_t v48 = (_DWORD *)(a1 + v47);
        char v49 = *(unsigned char *)(a1 + v47 + 4);
        unint64_t v50 = (_DWORD *)(a2 + v47);
        int v51 = *(unsigned __int8 *)(a2 + v47 + 4);
        if ((v49 & 1) == 0)
        {
          if (*v48 != *v50) {
            LOBYTE(v51) = 1;
          }
          if (v51) {
            goto LABEL_25;
          }
LABEL_52:
          uint64_t v52 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
          v52(v10, a1, v4);
          v52(v8, a2, v4);
          sub_24748152C(&qword_269250420, MEMORY[0x263F50560]);
          char v18 = sub_2474B0F30();
          uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
          v53(v8, v4);
          v53(v10, v4);
          return v18 & 1;
        }
        if (v51) {
          goto LABEL_52;
        }
LABEL_25:
        char v18 = 0;
        return v18 & 1;
      }
    }
    else if (v36 >> 60 != 15)
    {
      uint64_t v56 = v32;
      sub_247446DC4(v32, v33);
      sub_247446DC4(v35, v36);
      int v55 = sub_247480048(v56, v33, v35, v36);
      sub_24743E498(v35, v36);
      sub_24743E498(v56, v33);
      if ((v55 & 1) == 0) {
        goto LABEL_25;
      }
      goto LABEL_33;
    }
    uint64_t v37 = v32;
    sub_247446DC4(v32, v33);
    sub_247446DC4(v35, v36);
    sub_24743E498(v37, v33);
    sub_24743E498(v35, v36);
    char v18 = 0;
  }
  return v18 & 1;
}

unint64_t sub_2474806BC()
{
  unint64_t result = qword_2692510F8;
  if (!qword_2692510F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692510F8);
  }
  return result;
}

unint64_t sub_247480714()
{
  unint64_t result = qword_269251100;
  if (!qword_269251100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251100);
  }
  return result;
}

unint64_t sub_24748076C()
{
  unint64_t result = qword_269251108;
  if (!qword_269251108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251108);
  }
  return result;
}

unint64_t sub_2474807C4()
{
  unint64_t result = qword_269251110;
  if (!qword_269251110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269251118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251110);
  }
  return result;
}

uint64_t sub_247480820()
{
  return sub_24748152C(&qword_269251120, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_247480868()
{
  return sub_24748152C(&qword_2692505F8, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_2474808B0()
{
  return sub_24748152C(&qword_2692510F0, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_2474808F8()
{
  return sub_24748152C(&qword_269251128, (void (*)(uint64_t))type metadata accessor for SecureCloudRepairMessageProtobuf);
}

uint64_t sub_247480948@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v5 = a1 + *(int *)(result + 24);
  double v6 = *(double *)v5;
  if (*(unsigned char *)(v5 + 8)) {
    double v6 = 0.0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247480994(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 24);
  *(void *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_2474809D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudRepairMessageProtobuf() + 32));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *v3;
  }
  unint64_t v7 = 0xC000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a2 = v6;
  a2[1] = v7;
  return sub_247446DC4(v4, v5);
}

uint64_t sub_247480A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  unint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 36));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)v5 + 8);
  int v8 = *((unsigned __int8 *)v5 + 9);
  if (v8) {
    uint64_t v6 = 0;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_247480A94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v6 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  *(unsigned char *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_247480AE0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  unint64_t v5 = (int *)(a1 + *(int *)(result + 40));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247480B28(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudRepairMessageProtobuf(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    BOOL v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    BOOL v17 = (uint64_t *)((char *)a1 + v15);
    char v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *BOOL v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (char *)a1 + v16;
    char v21 = (uint64_t *)((char *)a2 + v16);
    unint64_t v22 = *(uint64_t *)((char *)a2 + v16 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v24 = *v21;
      sub_247442FA0(*v21, v22);
      *(void *)uint64_t v20 = v24;
      *((void *)v20 + 1) = v22;
    }
    uint64_t v25 = a3[9];
    uint64_t v26 = a3[10];
    id v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(void *)id v27 = *(void *)v28;
    *((_WORD *)v27 + 4) = *((_WORD *)v28 + 4);
    objc_super v29 = (char *)a1 + v26;
    char v30 = (char *)a2 + v26;
    *(_DWORD *)objc_super v29 = *(_DWORD *)v30;
    v29[4] = v30[4];
  }
  return a1;
}

uint64_t destroy for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v6 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return sub_24743E4AC(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  BOOL v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a1 + v15;
  uint64_t v20 = (uint64_t *)(a2 + v15);
  unint64_t v21 = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    uint64_t v22 = *v20;
    sub_247442FA0(*v20, v21);
    *(void *)uint64_t v19 = v22;
    *(void *)(v19 + 8) = v21;
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  return a1;
}

uint64_t assignWithCopy for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  *(unsigned char *)(v11 + 8) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (uint64_t *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  unint64_t v20 = *(void *)(a2 + v17 + 8);
  if (*(void *)(a1 + v17 + 8) >> 60 != 15)
  {
    if (v20 >> 60 != 15)
    {
      uint64_t v22 = *v19;
      sub_247442FA0(v22, v20);
      uint64_t v23 = *v18;
      unint64_t v24 = v18[1];
      *uint64_t v18 = v22;
      v18[1] = v20;
      sub_24743E4AC(v23, v24);
      goto LABEL_8;
    }
    sub_2474439C4((uint64_t)v18);
    goto LABEL_6;
  }
  if (v20 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_8;
  }
  uint64_t v21 = *v19;
  sub_247442FA0(v21, v20);
  *uint64_t v18 = v21;
  v18[1] = v20;
LABEL_8:
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  *(_WORD *)(v26 + 8) = *((_WORD *)v27 + 4);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  LODWORD(v28) = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  *(_DWORD *)uint64_t v30 = v28;
  return a1;
}

uint64_t initializeWithTake for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  uint64_t v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(_WORD *)(v13 + 8) = *(_WORD *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  return a1;
}

uint64_t assignWithTake for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = (void *)(a1 + v13);
  uint64_t v17 = (uint64_t *)(a2 + v13);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = *(void *)(a1 + v20 + 8);
  if (v23 >> 60 != 15)
  {
    unint64_t v24 = v22[1];
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = *v21;
      *uint64_t v21 = *v22;
      v21[1] = v24;
      sub_24743E4AC(v25, v23);
      goto LABEL_6;
    }
    sub_2474439C4((uint64_t)v21);
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_6:
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  *(_WORD *)(v28 + 8) = *(_WORD *)(v29 + 8);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2474812B8);
}

uint64_t sub_2474812B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudRepairMessageProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24748139C);
}

uint64_t sub_24748139C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_24748145C()
{
  uint64_t result = sub_2474B0CE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudRepairMessageProtobuf.MessageType()
{
  return &type metadata for SecureCloudRepairMessageProtobuf.MessageType;
}

uint64_t sub_24748152C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static InvitationDestinationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InvitationDestinationError.hash(into:)()
{
  return sub_2474B1520();
}

uint64_t InvitationDestinationError.hashValue.getter()
{
  return sub_2474B1530();
}

unint64_t sub_247481604()
{
  unint64_t result = qword_269251148;
  if (!qword_269251148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251148);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InvitationDestinationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247481724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationError()
{
  return &type metadata for InvitationDestinationError;
}

BOOL static ASCloudDevice.DeviceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ASCloudDevice.DeviceType.hash(into:)()
{
  return sub_2474B1520();
}

uint64_t ASCloudDevice.DeviceType.hashValue.getter()
{
  return sub_2474B1530();
}

BOOL ASCloudDevice.isEligibleForMigration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C3E8);
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ASCloudDevice.platform.getter((char *)v13);
  if (!LOBYTE(v13[0])) {
    return 1;
  }
  uint64_t v4 = 808333617;
  if (LOBYTE(v13[0]) == 1) {
    uint64_t v4 = 808335409;
  }
  id v5 = objc_msgSend(v0, sel_osVersion);
  uint64_t v6 = sub_2474B0F50();
  uint64_t v8 = v7;

  v13[0] = v6;
  v13[1] = v8;
  v12[0] = v4;
  v12[1] = 0xE400000000000000;
  uint64_t v9 = sub_2474B0C70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  sub_2474402DC();
  unint64_t v10 = sub_2474B1260();
  sub_2474443AC((uint64_t)v3, &qword_26B12C3E8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 < 2;
}

uint64_t ASCloudDevice.platform.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_deviceType);
  uint64_t v5 = sub_2474B0F50();
  uint64_t v7 = v6;

  sub_2474402DC();
  LOBYTE(v4) = sub_2474B1270();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    char v9 = 1;
  }
  else
  {
    id v10 = objc_msgSend(v2, sel_deviceType, 5459817, 0xE300000000000000, v5, v7);
    sub_2474B0F50();

    LOBYTE(v10) = sub_2474B1270();
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      char v9 = 2;
    }
    else {
      char v9 = 0;
    }
  }
  *a1 = v9;
  return result;
}

BOOL ASCloudDevice.isWithinTimeToLive.getter()
{
  uint64_t v0 = sub_2474B0CA0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2474B0CB0();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C3E0);
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2474B0C30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v23 = (char *)&v22 - v15;
  sub_2474B0C90();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07870], v0);
  sub_2474B0C20();
  sub_2474B0C80();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
  v22(v14, v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2474443AC((uint64_t)v9, &qword_26B12C3E0);
    return 0;
  }
  else
  {
    uint64_t v17 = v23;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v23, v9, v10);
    id v18 = objc_msgSend(v24, sel_modificationDate);
    sub_2474B0C00();

    uint64_t v19 = sub_2474B0C10();
    uint64_t v20 = v22;
    v22(v14, v10);
    BOOL v16 = v19 == 1;
    v20(v17, v10);
  }
  return v16;
}

uint64_t ASCloudDevice.deviceName.getter()
{
  ASCloudDevice.platform.getter(&v2);
  uint64_t v0 = 0x656E6F685069;
  if (v2 != 1) {
    uint64_t v0 = 0x615720656C707041;
  }
  if (v2) {
    return v0;
  }
  else {
    return 0x6E776F6E6B6E55;
  }
}

unint64_t sub_247481EB4()
{
  unint64_t result = qword_269251150;
  if (!qword_269251150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251150);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InvitationDestinationReachability(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10DeviceTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247482064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCloudDevice.DeviceType()
{
  return &type metadata for ASCloudDevice.DeviceType;
}

uint64_t dispatch thunk of TransportClient.activate()(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  return v7(a1, a2);
}

uint64_t dispatch thunk of TransportClient.invalidate()(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2474577A0;
  return v7(a1, a2);
}

uint64_t dispatch thunk of TransportClient.sendItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_24745B0A0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TransportClient.sendItem<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32)
                                                                                     + **(int **)(a6 + 32));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_24745B0A0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of TransportClient.sendItem<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 40)
                                                                                     + **(int **)(a6 + 40));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_24745B0A0;
  return v15(a1, a2, a3, a4, a5, a6);
}

{
  uint64_t v6;
  void *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 48)
                                                                                     + **(int **)(a6 + 48));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_24745B0A0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of TransportClient.sendItem<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a9 + 56) + **(int **)(a9 + 56));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = sub_24745B0A0;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

{
  uint64_t v9;
  void *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a9 + 64) + **(int **)(a9 + 64));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = sub_2474577A0;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_247482984(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15)
  {
    uint64_t v6 = 0;
    if (a3)
    {
LABEL_3:
      uint64_t v7 = sub_2474B0B90();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = (void *)sub_2474B0BB0();
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);
}

uint64_t ASXPCListener.transportDispatchService.getter()
{
  return swift_retain();
}

id ASXPCListener.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *ASXPCListener.init()()
{
  sub_2474B0F50();
  id v0 = objc_allocWithZone((Class)type metadata accessor for ASXPCListener());
  id v1 = ASXPCListener.init(machServiceName:)();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

char *ASXPCListener.__allocating_init(machServiceName:)()
{
  id v1 = objc_allocWithZone(v0);
  return ASXPCListener.init(machServiceName:)();
}

uint64_t type metadata accessor for ASXPCListener()
{
  return self;
}

char *ASXPCListener.init(machServiceName:)()
{
  id v1 = objc_allocWithZone(MEMORY[0x263F08D88]);
  uint64_t v2 = v0;
  uint64_t v3 = (void *)sub_2474B0F40();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithMachServiceName_, v3);

  *(void *)&v2[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener] = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C9F0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2474B2130;
  *(void *)(v5 + 32) = sub_2474B0F50();
  *(void *)(v5 + 40) = v6;
  *(void *)&v2[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_requiredEntitlements] = v5;
  type metadata accessor for TransportDispatchService();
  uint64_t v7 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v7 + 112) = MEMORY[0x263F8EE80];
  *(void *)&v2[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService] = v7;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for ASXPCListener();
  id v8 = (char *)objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener], sel_setDelegate_, v8);
  return v8;
}

id ASXPCListener.__deallocating_deinit()
{
  id v1 = v0;
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD000000000000063, 0x80000002474B70D0, 0x6164696C61766E69, 0xEC00000029286574);
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener], sel_setDelegate_, 0);
  objc_msgSend(v3, sel_invalidate);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ASXPCListener();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

id sub_247482F54()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2474B0EC0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD000000000000063, 0x80000002474B70D0, 0x6574617669746361, 0xEA00000000002928);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener);
  return objc_msgSend(v2, sel_resume);
}

id sub_247483014()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2474B0EC0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD000000000000063, 0x80000002474B70D0, 0x6164696C61766E69, 0xEC00000029286574);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_listener);
  objc_msgSend(v2, sel_setDelegate_, 0);
  return objc_msgSend(v2, sel_invalidate);
}

id sub_2474830F0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2474B0EC0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B12CCE8);
  id v5 = a1;
  uint64_t v6 = sub_2474B0EA0();
  os_log_type_t v7 = sub_2474B1170();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t aBlock = v10;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v11 = sub_24743FF20(0xD000000000000063, 0x80000002474B70D0, 0xD000000000000014, 0x80000002474B71C0);
    sub_247464D64(v11, v12, &aBlock);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    id v13 = v5;
    sub_2474B1230();
    *uint64_t v9 = v5;

    _os_log_impl(&dword_24743A000, v6, v7, "%s Accepting new connection: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v9, -1, -1);
    swift_arrayDestroy();
    uint64_t v14 = v10;
    uint64_t v2 = v1;
    MEMORY[0x24C557100](v14, -1, -1);
    MEMORY[0x24C557100](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_interfaceWithProtocol_, &unk_26FB97850);
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v16);

  id v17 = objc_msgSend(v15, sel_interfaceWithProtocol_, &unk_26FB97850);
  objc_msgSend(v5, sel_setExportedInterface_, v17);

  objc_msgSend(v5, sel_setExportedObject_, v2);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v5;
  uint64_t v29 = sub_247484518;
  uint64_t v30 = v18;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_247495644;
  uint64_t v28 = &block_descriptor_2;
  uint64_t v19 = _Block_copy(&aBlock);
  id v20 = v5;
  swift_release();
  objc_msgSend(v20, sel_setInterruptionHandler_, v19);
  _Block_release(v19);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  uint64_t v29 = sub_24748453C;
  uint64_t v30 = v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_247495644;
  uint64_t v28 = &block_descriptor_21;
  uint64_t v22 = _Block_copy(&aBlock);
  id v23 = v20;
  swift_release();
  objc_msgSend(v23, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  return objc_msgSend(v23, sel_resume);
}

void sub_247483534(void *a1, const char *a2)
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2474B0EC0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B12CCE8);
  id v14 = a1;
  id v5 = sub_2474B0EA0();
  os_log_type_t v6 = sub_2474B1160();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)os_log_type_t v7 = 136446210;
    id v9 = objc_msgSend(v14, sel_serviceName);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_2474B0F50();
      unint64_t v13 = v12;
    }
    else
    {
      unint64_t v13 = 0xEB00000000646569;
      uint64_t v11 = 0x6669636570736E75;
    }
    sub_247464D64(v11, v13, &v15);
    sub_2474B1230();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24743A000, v5, v6, a2, v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v8, -1, -1);
    MEMORY[0x24C557100](v7, -1, -1);
  }
  else
  {
  }
}

Swift::Bool __swiftcall ASXPCListener.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  char v4 = sub_247483FA8(shouldAcceptNewConnection.super.isa, *(void *)(v2 + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_requiredEntitlements));
  if (v4) {
    sub_2474830F0(shouldAcceptNewConnection.super.isa);
  }
  return v4 & 1;
}

uint64_t ASXPCListener.transportRequest(_:data:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  os_log_type_t v6 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CC80);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_2474B0EC0();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD000000000000063, 0x80000002474B70D0, 0xD000000000000024, 0x80000002474B7020);
  uint64_t v16 = sub_2474B1110();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  id v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v6;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  v17[8] = a4;
  v17[9] = a5;
  id v18 = v6;
  sub_247446DC4(a2, a3);
  swift_retain();
  sub_24747D41C((uint64_t)v14, (uint64_t)&unk_2692511D0, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_2474839E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v10;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  return MEMORY[0x270FA2498](sub_247483A18, 0, 0);
}

uint64_t sub_247483A18()
{
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 40)
                                   + OBJC_IVAR____TtC21ActivitySharingClient13ASXPCListener_transportDispatchService);
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = -1;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247483ADC;
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  return sub_247458320(v4, v2, v3, v0 + 16);
}

uint64_t sub_247483ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 104) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[11];
    uint64_t v8 = sub_247483CA4;
  }
  else
  {
    v6[14] = a2;
    v6[15] = a1;
    uint64_t v8 = sub_247483C1C;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_247483C1C()
{
  unint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  (*(void (**)(uint64_t, unint64_t, void))(v0 + 72))(v1, v2, 0);
  sub_24743E498(v1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_247483CA4()
{
  return MEMORY[0x270FA2498](sub_247483CC0, 0, 0);
}

uint64_t sub_247483CC0()
{
  uint64_t v1 = (void *)v0[13];
  unint64_t v2 = (void (*)(void, unint64_t, void *))v0[9];
  id v3 = v1;
  v2(0, 0xF000000000000000, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247483F94()
{
  return swift_retain();
}

uint64_t sub_247483FA8(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (unint64_t *)(a2 + 40); ; i += 2)
  {
    uint64_t v7 = *(i - 1);
    unint64_t v6 = *i;
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_2474B0F40();
    id v9 = objc_msgSend(a1, sel_valueForEntitlement_, v8);

    if (v9)
    {
      sub_2474B1280();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v17, 0, sizeof(v17));
    }
    sub_247484560((uint64_t)v17, (uint64_t)v18);
    if (!v18[3]) {
      break;
    }
    if ((swift_dynamicCast() & 1) == 0 || (v16 & 1) == 0) {
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  sub_2474845C8((uint64_t)v18);
LABEL_13:
  swift_bridgeObjectRelease();
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_2474B0EC0();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B12CCE8);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2474B0EA0();
  os_log_type_t v13 = sub_2474B1160();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v18[0] = v15;
    *(_DWORD *)uint64_t v14 = 141558274;
    *(void *)&v17[0] = 1752392040;
    sub_2474B1230();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&v17[0] = sub_247464D64(v7, v6, v18);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24743A000, v12, v13, "Rejecting connection missing entitlement: %{mask.hash}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v15, -1, -1);
    MEMORY[0x24C557100](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_247484278()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_24745B0A0;
  *(_OWORD *)(v4 + 72) = v5;
  *(void *)(v4 + 56) = v2;
  *(void *)(v4 + 64) = v3;
  *(_OWORD *)(v4 + 40) = v7;
  return MEMORY[0x270FA2498](sub_247483A18, 0, 0);
}

uint64_t method lookup function for ASXPCListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASXPCListener);
}

uint64_t dispatch thunk of ASXPCListener.__allocating_init(machServiceName:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ASXPCListener.activate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ASXPCListener.invalidate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t sub_2474843D8()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_247484414()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_2474577A0;
  *(_OWORD *)(v4 + 72) = v5;
  *(void *)(v4 + 56) = v2;
  *(void *)(v4 + 64) = v3;
  *(_OWORD *)(v4 + 40) = v7;
  return MEMORY[0x270FA2498](sub_247483A18, 0, 0);
}

uint64_t sub_2474844E0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_247484518()
{
  sub_247483534(*(void **)(v0 + 16), "XPC client connection (%{public}s) interrupted");
}

void sub_24748453C()
{
  sub_247483534(*(void **)(v0 + 16), "XPC client connection (%{public}s) invalidated");
}

uint64_t sub_247484560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2474845C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C3D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_247484630()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 6910581;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696C696261706163;
  }
}

uint64_t sub_247484698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247485044(a1, a2);
  *a3 = result;
  return result;
}

void sub_2474846C0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2474846CC(uint64_t a1)
{
  unint64_t v2 = sub_247484920();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247484708(uint64_t a1)
{
  unint64_t v2 = sub_247484920();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InvitationDestinationEndpoint.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692512B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  uint64_t v10 = v1[3];
  v12[0] = v1[4];
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247484920();
  sub_2474B1550();
  uint64_t v15 = v9;
  char v17 = 0;
  sub_24743F584();
  sub_2474B1420();
  if (!v2)
  {
    uint64_t v15 = v14;
    uint64_t v16 = v13;
    char v17 = 1;
    sub_24743F6D4();
    sub_2474B1420();
    LOBYTE(v15) = 2;
    sub_2474B1400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_247484920()
{
  unint64_t result = qword_2692512B8;
  if (!qword_2692512B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692512B8);
  }
  return result;
}

uint64_t InvitationDestinationEndpoint.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692512C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247484920();
  sub_2474B1540();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  sub_24743F530();
  sub_2474B13E0();
  uint64_t v9 = v20;
  char v22 = 1;
  sub_24743F680();
  sub_2474B13E0();
  uint64_t v19 = v9;
  uint64_t v10 = v20;
  unint64_t v11 = v21;
  LOBYTE(v20) = 2;
  sub_247442FA0(v10, v21);
  uint64_t v12 = sub_2474B13C0();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  sub_247442FA0(v10, v11);
  swift_bridgeObjectRetain();
  sub_24743E4AC(v10, v11);
  *a2 = v19;
  a2[1] = v10;
  uint64_t v16 = v18;
  a2[2] = v11;
  a2[3] = v16;
  a2[4] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_24743E4AC(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247484C08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return InvitationDestinationEndpoint.init(from:)(a1, a2);
}

uint64_t sub_247484C20(void *a1)
{
  return InvitationDestinationEndpoint.encode(to:)(a1);
}

uint64_t destroy for InvitationDestinationEndpoint(uint64_t a1)
{
  sub_24743E4AC(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InvitationDestinationEndpoint(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  unint64_t v5 = a2[2];
  sub_247442FA0(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  uint64_t v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InvitationDestinationEndpoint(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_247442FA0(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_24743E4AC(v6, v7);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InvitationDestinationEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_24743E4AC(v4, v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationDestinationEndpoint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationEndpoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationEndpoint()
{
  return &type metadata for InvitationDestinationEndpoint;
}

unsigned char *storeEnumTagSinglePayload for InvitationDestinationEndpoint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247484F04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationEndpoint.CodingKeys()
{
  return &type metadata for InvitationDestinationEndpoint.CodingKeys;
}

unint64_t sub_247484F40()
{
  unint64_t result = qword_2692512C8;
  if (!qword_2692512C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692512C8);
  }
  return result;
}

unint64_t sub_247484F98()
{
  unint64_t result = qword_2692512D0;
  if (!qword_2692512D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692512D0);
  }
  return result;
}

unint64_t sub_247484FF0()
{
  unint64_t result = qword_2692512D8;
  if (!qword_2692512D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692512D8);
  }
  return result;
}

uint64_t sub_247485044(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696C696261706163 && a2 == 0xEC00000073656974;
  if (v2 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEE00617461447265 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6910581 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

double sub_2474851C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_2474588A0(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = *(void *)(a3 + 56) + (v6 << 6);
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v12 = *(void *)(v8 + 32);
    char v13 = *(unsigned char *)(v8 + 40);
    uint64_t v14 = *(void *)(v8 + 48);
    uint64_t v15 = *(void *)(v8 + 56);
    *(void *)a4 = *(void *)v8;
    *(void *)(a4 + 8) = v9;
    *(void *)(a4 + 16) = v10;
    *(void *)(a4 + 24) = v11;
    *(void *)(a4 + 32) = v12;
    *(unsigned char *)(a4 + 40) = v13;
    *(void *)(a4 + 48) = v14;
    *(void *)(a4 + 56) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

unint64_t sub_247485278(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250890);
  uint64_t v2 = sub_2474B1390();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  uint64_t v5 = (void *)(a1 + 104);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 9);
    uint64_t v7 = *(v5 - 8);
    uint64_t v8 = *(v5 - 7);
    uint64_t v9 = *(v5 - 6);
    uint64_t v10 = *(v5 - 5);
    long long v23 = *((_OWORD *)v5 - 2);
    char v11 = *((unsigned char *)v5 - 16);
    uint64_t v13 = *(v5 - 1);
    uint64_t v12 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2474588A0(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v16 = v6;
    v16[1] = v7;
    unint64_t v17 = v3[7] + (result << 6);
    *(void *)unint64_t v17 = v8;
    *(void *)(v17 + 8) = v9;
    *(void *)(v17 + 16) = v10;
    *(_OWORD *)(v17 + 24) = v23;
    *(unsigned char *)(v17 + 40) = v11;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v12;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v5 += 10;
    v3[2] = v20;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t InvitationDestinationCache.__allocating_init(invitationDestinationMap:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t InvitationDestinationCache.init(invitationDestinationMap:)(uint64_t a1)
{
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = a1;
  return v1;
}

uint64_t InvitationDestinationCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t InvitationDestinationCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t InvitationDestinationCache.unownedExecutor.getter()
{
  return v0;
}

uint64_t InvitationDestinationCache.addInvitationDestination(_:forDestination:serviceIdentifier:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 152) = a5;
  *(void *)(v6 + 160) = v5;
  *(void *)(v6 + 136) = a3;
  *(void *)(v6 + 144) = a4;
  *(void *)(v6 + 128) = a2;
  long long v7 = a1[1];
  *(_OWORD *)(v6 + 16) = *a1;
  *(_OWORD *)(v6 + 32) = v7;
  long long v8 = a1[3];
  *(_OWORD *)(v6 + 48) = a1[2];
  *(_OWORD *)(v6 + 64) = v8;
  return MEMORY[0x270FA2498](sub_247485514, v5, 0);
}

uint64_t sub_247485514()
{
  uint64_t v1 = *(void *)(v0 + 160) + 112;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16))
  {
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2474588A0(v4, v3);
    if (v6)
    {
      unint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = sub_247485278(MEMORY[0x263F8EE78]);
LABEL_6:
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  sub_247485C30(v0 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2474594E0((long long *)(v0 + 16), v11, v10, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)v1;
  *(void *)uint64_t v1 = 0x8000000000000000;
  sub_247459368(v7, v9, v8, v13);
  *(void *)uint64_t v1 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t InvitationDestinationCache.invitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return MEMORY[0x270FA2498](sub_24748570C, v5, 0);
}

uint64_t sub_24748570C()
{
  uint64_t v1 = v0[10];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = v0[8];
    uint64_t v3 = v0[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2474588A0(v4, v3);
    if (v6)
    {
      uint64_t v8 = v0[6];
      uint64_t v7 = v0[7];
      uint64_t v9 = v0[5];
      uint64_t v10 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2474851C8(v8, v7, v10, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = (_OWORD *)v0[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      void v12[2] = 0u;
      uint64_t v12[3] = 0u;
      _OWORD *v12 = 0u;
      v12[1] = 0u;
    }
  }
  else
  {
    uint64_t v11 = (_OWORD *)v0[5];
    v11[2] = 0u;
    v11[3] = 0u;
    *uint64_t v11 = 0u;
    v11[1] = 0u;
  }
  char v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t InvitationDestinationCache.containsInvitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  return MEMORY[0x270FA2498](sub_247485874, v4, 0);
}

uint64_t sub_247485874()
{
  uint64_t v1 = v0[9];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = v0[7];
    uint64_t v3 = v0[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2474588A0(v4, v3);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v7 + 16))
      {
        uint64_t v9 = v0[5];
        uint64_t v8 = v0[6];
        swift_bridgeObjectRetain();
        sub_2474588A0(v9, v8);
        char v11 = v10;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  char v11 = 0;
LABEL_8:
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12(v11 & 1);
}

uint64_t sub_24748599C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *v5;
  uint64_t v13 = swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *(void *)uint64_t v13 = v6;
  *(void *)(v13 + 8) = sub_24745B0A0;
  *(void *)(v13 + 152) = a5;
  *(void *)(v13 + 160) = v12;
  *(void *)(v13 + 136) = a3;
  *(void *)(v13 + 144) = a4;
  *(void *)(v13 + 128) = a2;
  long long v14 = a1[3];
  *(_OWORD *)(v13 + 48) = a1[2];
  *(_OWORD *)(v13 + 64) = v14;
  long long v15 = a1[1];
  *(_OWORD *)(v13 + 16) = *a1;
  *(_OWORD *)(v13 + 32) = v15;
  return MEMORY[0x270FA2498](sub_247485514, v12, 0);
}

uint64_t sub_247485A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *v5;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_2474577A0;
  v13[9] = a5;
  v13[10] = v12;
  v13[7] = a3;
  v13[8] = a4;
  v13[5] = a1;
  v13[6] = a2;
  return MEMORY[0x270FA2498](sub_24748570C, v12, 0);
}

uint64_t sub_247485B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  char v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *char v11 = v5;
  v11[1] = sub_247465A00;
  v11[8] = a4;
  v11[9] = v10;
  v11[6] = a2;
  v11[7] = a3;
  v11[5] = a1;
  return MEMORY[0x270FA2498](sub_247485874, v10, 0);
}

uint64_t sub_247485C30(uint64_t a1)
{
  return a1;
}

uint64_t dispatch thunk of InvitationDestinationCaching.addInvitationDestination(_:forDestination:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 8)
                                                                                              + **(int **)(a7 + 8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24745B0A0;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of InvitationDestinationCaching.invitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24745B0A0;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of InvitationDestinationCaching.containsInvitationDestination(for:serviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_247466198;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for InvitationDestinationCache()
{
  return self;
}

uint64_t method lookup function for InvitationDestinationCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InvitationDestinationCache);
}

uint64_t dispatch thunk of InvitationDestinationCache.__allocating_init(invitationDestinationMap:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t InvitationDestinationGroup.destination.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationDestinationGroup.preferredDestination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t InvitationDestinationGroup.additionalDestinations.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t InvitationDestinationGroup.description.getter()
{
  sub_2474B12E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  InvitationDestination.description.getter();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2474B0FA0();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  sub_2474B12E0();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x24C556510](v0, &type metadata for InvitationDestination);
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2474B0FA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD00000000000001DLL;
}

uint64_t destroy for InvitationDestinationGroup()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InvitationDestinationGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InvitationDestinationGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for InvitationDestinationGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationDestinationGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationDestinationGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationGroup()
{
  return &type metadata for InvitationDestinationGroup;
}

uint64_t ASListener.activate()()
{
  *(void *)(v1 + 2040) = v0;
  return MEMORY[0x270FA2498](sub_247486658, 0, 0);
}

uint64_t sub_247486658()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  sub_24748A6F0(v1 + 8, v0 + 2000);
  uint64_t v2 = *(void *)(v0 + 2024);
  uint64_t v3 = *(void *)(v0 + 2032);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 2000), v2);
  sub_24748A958(v1, v0 + 64);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 80);
  v4[1] = *(_OWORD *)(v0 + 64);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 96);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251338;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2048) = v7;
  *(void *)(v7 + 16) = &unk_269251348;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2056) = v8;
  void *v8 = v0;
  v8[1] = sub_247486808;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(101, (uint64_t)&unk_269251358, v7, v2, (uint64_t)&type metadata for SendFriendInviteTransportItem, v9, v3, (uint64_t)&protocol witness table for SendFriendInviteTransportItem);
}

uint64_t sub_247486808()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247486920, 0, 0);
}

uint64_t sub_247486920()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2000);
  sub_24748A6F0(v1 + 8, v0 + 1920);
  uint64_t v2 = *(void *)(v0 + 1944);
  uint64_t v3 = *(void *)(v0 + 1952);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1920), v2);
  sub_24748A958(v1, v0 + 160);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 176);
  v4[1] = *(_OWORD *)(v0 + 160);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 192);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251368;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2064) = v7;
  *(void *)(v7 + 16) = &unk_269251378;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2072) = v8;
  void *v8 = v0;
  v8[1] = sub_247486ADC;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(102, (uint64_t)&unk_269251388, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247486ADC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247486BF4, 0, 0);
}

uint64_t sub_247486BF4()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1920);
  sub_24748A6F0(v1 + 8, v0 + 1840);
  uint64_t v2 = *(void *)(v0 + 1864);
  uint64_t v3 = *(void *)(v0 + 1872);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1840), v2);
  sub_24748A958(v1, v0 + 256);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 272);
  v4[1] = *(_OWORD *)(v0 + 256);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 288);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251398;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2080) = v7;
  *(void *)(v7 + 16) = &unk_2692513A0;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2088) = v8;
  void *v8 = v0;
  v8[1] = sub_247486DB0;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(103, (uint64_t)&unk_2692513A8, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247486DB0()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247486EC8, 0, 0);
}

uint64_t sub_247486EC8()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1840);
  sub_24748A6F0(v1 + 8, v0 + 1760);
  uint64_t v2 = *(void *)(v0 + 1784);
  uint64_t v3 = *(void *)(v0 + 1792);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1760), v2);
  sub_24748A958(v1, v0 + 352);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 368);
  v4[1] = *(_OWORD *)(v0 + 352);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 384);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_2692513B8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2096) = v7;
  *(void *)(v7 + 16) = &unk_2692513C0;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2104) = v8;
  void *v8 = v0;
  v8[1] = sub_247487084;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(104, (uint64_t)&unk_2692513C8, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247487084()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24748719C, 0, 0);
}

uint64_t sub_24748719C()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1760);
  sub_24748A6F0(v1 + 8, v0 + 1680);
  uint64_t v2 = *(void *)(v0 + 1704);
  uint64_t v3 = *(void *)(v0 + 1712);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1680), v2);
  sub_24748A958(v1, v0 + 448);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 464);
  v4[1] = *(_OWORD *)(v0 + 448);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 480);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_2692513D8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2112) = v7;
  *(void *)(v7 + 16) = &unk_2692513E8;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2120) = v8;
  void *v8 = v0;
  v8[1] = sub_247487358;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(202, (uint64_t)&unk_2692513F8, v7, v2, (uint64_t)&type metadata for SetMuteEnabledTransportItem, v9, v3, (uint64_t)&protocol witness table for SetMuteEnabledTransportItem);
}

uint64_t sub_247487358()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247487470, 0, 0);
}

uint64_t sub_247487470()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1680);
  sub_24748A6F0(v1 + 8, v0 + 1600);
  uint64_t v2 = *(void *)(v0 + 1624);
  uint64_t v3 = *(void *)(v0 + 1632);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1600), v2);
  sub_24748A958(v1, v0 + 544);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 560);
  v4[1] = *(_OWORD *)(v0 + 544);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 576);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251408;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2128) = v7;
  *(void *)(v7 + 16) = &unk_269251418;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2136) = v8;
  void *v8 = v0;
  v8[1] = sub_24748762C;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(201, (uint64_t)&unk_269251428, v7, v2, (uint64_t)&type metadata for SetActivityDataVisibleTransportItem, v9, v3, (uint64_t)&protocol witness table for SetActivityDataVisibleTransportItem);
}

uint64_t sub_24748762C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247487744, 0, 0);
}

uint64_t sub_247487744()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1600);
  sub_24748A6F0(v1 + 8, v0 + 1520);
  uint64_t v2 = *(void *)(v0 + 1544);
  uint64_t v3 = *(void *)(v0 + 1552);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1520), v2);
  sub_24748A958(v1, v0 + 640);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 656);
  v4[1] = *(_OWORD *)(v0 + 640);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 672);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251438;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2144) = v7;
  *(void *)(v7 + 16) = &unk_269251440;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2152) = v8;
  void *v8 = v0;
  v8[1] = sub_247487900;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(301, (uint64_t)&unk_269251448, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247487900()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247487A18, 0, 0);
}

uint64_t sub_247487A18()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1520);
  sub_24748A6F0(v1 + 8, v0 + 1440);
  uint64_t v2 = *(void *)(v0 + 1464);
  uint64_t v3 = *(void *)(v0 + 1472);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1440), v2);
  sub_24748A958(v1, v0 + 736);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 752);
  v4[1] = *(_OWORD *)(v0 + 736);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 768);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251458;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2160) = v7;
  *(void *)(v7 + 16) = &unk_269251460;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2168) = v8;
  void *v8 = v0;
  v8[1] = sub_247487BD4;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(302, (uint64_t)&unk_269251468, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247487BD4()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247487CEC, 0, 0);
}

uint64_t sub_247487CEC()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1440);
  sub_24748A6F0(v1 + 8, v0 + 1360);
  uint64_t v2 = *(void *)(v0 + 1384);
  uint64_t v3 = *(void *)(v0 + 1392);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1360), v2);
  sub_24748A958(v1, v0 + 832);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 848);
  v4[1] = *(_OWORD *)(v0 + 832);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 864);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251478;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2176) = v7;
  *(void *)(v7 + 16) = &unk_269251480;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2184) = v8;
  void *v8 = v0;
  v8[1] = sub_247487EA8;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(303, (uint64_t)&unk_269251488, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247487EA8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247487FC0, 0, 0);
}

uint64_t sub_247487FC0()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1360);
  sub_24748A6F0(v1 + 8, v0 + 1280);
  uint64_t v2 = *(void *)(v0 + 1304);
  uint64_t v3 = *(void *)(v0 + 1312);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1280), v2);
  sub_24748A958(v1, v0 + 928);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 944);
  v4[1] = *(_OWORD *)(v0 + 928);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 960);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251498;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2192) = v7;
  *(void *)(v7 + 16) = &unk_2692514A0;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2200) = v8;
  void *v8 = v0;
  v8[1] = sub_24748817C;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(304, (uint64_t)&unk_2692514A8, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_24748817C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247488294, 0, 0);
}

uint64_t sub_247488294()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1280);
  sub_24748A6F0(v1 + 8, v0 + 1200);
  uint64_t v2 = *(void *)(v0 + 1224);
  uint64_t v3 = *(void *)(v0 + 1232);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1200), v2);
  sub_24748A958(v1, v0 + 1024);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 1040);
  v4[1] = *(_OWORD *)(v0 + 1024);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 1056);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_2692514B8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2208) = v7;
  *(void *)(v7 + 16) = &unk_2692514C8;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2216) = v8;
  void *v8 = v0;
  v8[1] = sub_24748843C;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A>(_:handler:)(401, (uint64_t)&unk_2692514D8, v7, v2, v9, v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_24748843C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247488554, 0, 0);
}

uint64_t sub_247488554()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1200);
  sub_24748A6F0(v1 + 8, v0 + 1120);
  uint64_t v2 = *(void *)(v0 + 1144);
  uint64_t v3 = *(void *)(v0 + 1152);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1120), v2);
  sub_24748A958(v1, v0 + 16);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 32);
  v4[1] = *(_OWORD *)(v0 + 16);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 48);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_2692514E8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2224) = v7;
  *(void *)(v7 + 16) = &unk_2692514F0;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2232) = v8;
  void *v8 = v0;
  v8[1] = sub_2474886F8;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A>(_:handler:)(402, (uint64_t)&unk_2692514F8, v7, v2, v9, v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_2474886F8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247488810, 0, 0);
}

uint64_t sub_247488810()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1120);
  sub_24748A6F0(v1 + 8, v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 1184);
  uint64_t v3 = *(void *)(v0 + 1192);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1160), v2);
  sub_24748A958(v1, v0 + 976);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 992);
  v4[1] = *(_OWORD *)(v0 + 976);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 1008);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251508;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2240) = v7;
  *(void *)(v7 + 16) = &unk_269251518;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2248) = v8;
  void *v8 = v0;
  v8[1] = sub_2474889CC;
  uint64_t v9 = MEMORY[0x263F8D9D0];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(403, (uint64_t)&unk_269251528, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for UInt);
}

uint64_t sub_2474889CC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247488AE4, 0, 0);
}

uint64_t sub_247488AE4()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1160);
  sub_24748A6F0(v1 + 8, v0 + 1240);
  uint64_t v2 = *(void *)(v0 + 1264);
  uint64_t v3 = *(void *)(v0 + 1272);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1240), v2);
  sub_24748A958(v1, v0 + 880);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 896);
  v4[1] = *(_OWORD *)(v0 + 880);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 912);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251538;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2256) = v7;
  *(void *)(v7 + 16) = &unk_269251540;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2264) = v8;
  void *v8 = v0;
  v8[1] = sub_247488C88;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A>(_:handler:)(404, (uint64_t)&unk_269251548, v7, v2, v9, v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_247488C88()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247488DA0, 0, 0);
}

uint64_t sub_247488DA0()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1240);
  sub_24748A6F0(v1 + 8, v0 + 1320);
  uint64_t v2 = *(void *)(v0 + 1344);
  uint64_t v3 = *(void *)(v0 + 1352);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1320), v2);
  sub_24748A958(v1, v0 + 784);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 800);
  v4[1] = *(_OWORD *)(v0 + 784);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 816);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251558;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2272) = v7;
  *(void *)(v7 + 16) = &unk_269251560;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2280) = v8;
  void *v8 = v0;
  v8[1] = sub_247488F44;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A>(_:handler:)(405, (uint64_t)&unk_269251568, v7, v2, v9, v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_247488F44()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24748905C, 0, 0);
}

uint64_t sub_24748905C()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1320);
  sub_24748A6F0(v1 + 8, v0 + 1400);
  uint64_t v2 = *(void *)(v0 + 1424);
  uint64_t v3 = *(void *)(v0 + 1432);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1400), v2);
  sub_24748A958(v1, v0 + 688);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 704);
  v4[1] = *(_OWORD *)(v0 + 688);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 720);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251578;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2288) = v7;
  *(void *)(v7 + 16) = &unk_269251588;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2296) = v8;
  void *v8 = v0;
  v8[1] = sub_247489218;
  uint64_t v9 = MEMORY[0x263F8E5C0];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(501, (uint64_t)&unk_269251598, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for Int64);
}

uint64_t sub_247489218()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247489330, 0, 0);
}

uint64_t sub_247489330()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1400);
  sub_24748A6F0(v1 + 8, v0 + 1480);
  uint64_t v2 = *(void *)(v0 + 1504);
  uint64_t v3 = *(void *)(v0 + 1512);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1480), v2);
  sub_24748A958(v1, v0 + 592);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 608);
  v4[1] = *(_OWORD *)(v0 + 592);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 624);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 2304) = v6;
  *(void *)(v6 + 16) = &unk_2692515A8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 2312) = v7;
  uint64_t v8 = sub_2474736DC(0, (unint64_t *)&unk_26B12CC90);
  *uint64_t v7 = v0;
  v7[1] = sub_2474894C0;
  return TransportDispatching.register<A>(_:handler:)(601, (uint64_t)&unk_2692515B8, v6, v2, v8, v3, (uint64_t)&protocol witness table for ASCodableFriendList);
}

uint64_t sub_2474894C0()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2474895D8, 0, 0);
}

uint64_t sub_2474895D8()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1480);
  sub_24748A6F0(v1 + 8, v0 + 1560);
  uint64_t v2 = *(void *)(v0 + 1584);
  uint64_t v3 = *(void *)(v0 + 1592);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1560), v2);
  sub_24748A958(v1, v0 + 496);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 512);
  v4[1] = *(_OWORD *)(v0 + 496);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 528);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 2320) = v6;
  *(void *)(v6 + 16) = &unk_2692515C8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 2328) = v7;
  uint64_t v8 = sub_2474736DC(0, &qword_26B12C868);
  *uint64_t v7 = v0;
  v7[1] = sub_247489780;
  uint64_t v9 = MEMORY[0x263F8D310];
  return TransportDispatching.register<A, B>(_:handler:)(602, (uint64_t)&unk_2692515D8, v6, v2, v9, v8, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247489780()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247489898, 0, 0);
}

uint64_t sub_247489898()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1560);
  sub_24748A6F0(v1 + 8, v0 + 1640);
  uint64_t v2 = *(void *)(v0 + 1664);
  uint64_t v3 = *(void *)(v0 + 1672);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1640), v2);
  sub_24748A958(v1, v0 + 400);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 416);
  v4[1] = *(_OWORD *)(v0 + 400);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 432);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_2692515E8;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2336) = v7;
  *(void *)(v7 + 16) = &unk_2692515F0;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2344) = v8;
  void *v8 = v0;
  v8[1] = sub_247489A54;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(603, (uint64_t)&unk_2692515F8, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for String);
}

uint64_t sub_247489A54()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247489B6C, 0, 0);
}

uint64_t sub_247489B6C()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1640);
  sub_24748A6F0(v1 + 8, v0 + 1720);
  uint64_t v2 = *(void *)(v0 + 1744);
  uint64_t v3 = *(void *)(v0 + 1752);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1720), v2);
  sub_24748A958(v1, v0 + 304);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 320);
  v4[1] = *(_OWORD *)(v0 + 304);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 336);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251608;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2352) = v7;
  *(void *)(v7 + 16) = &unk_269251610;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2360) = v8;
  void *v8 = v0;
  v8[1] = sub_247489D10;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A>(_:handler:)(604, (uint64_t)&unk_269251618, v7, v2, v9, v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_247489D10()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_247489E28, 0, 0);
}

uint64_t sub_247489E28()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1720);
  sub_24748A6F0(v1 + 8, v0 + 1800);
  uint64_t v2 = *(void *)(v0 + 1824);
  uint64_t v3 = *(void *)(v0 + 1832);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1800), v2);
  sub_24748A958(v1, v0 + 208);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 224);
  v4[1] = *(_OWORD *)(v0 + 208);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 240);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251628;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2368) = v7;
  *(void *)(v7 + 16) = &unk_269251638;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2376) = v8;
  uint64_t v9 = sub_2474736DC(0, &qword_26B12C870);
  void *v8 = v0;
  v8[1] = sub_247489FFC;
  uint64_t v10 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A, B>(_:handler:)(701, (uint64_t)&unk_269251648, v7, v2, v9, v10, v3, (uint64_t)&protocol witness table for ASUserNotificationResponse);
}

uint64_t sub_247489FFC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24748A114, 0, 0);
}

uint64_t sub_24748A114()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1800);
  sub_24748A6F0(v1 + 8, v0 + 1880);
  uint64_t v2 = *(void *)(v0 + 1904);
  uint64_t v3 = *(void *)(v0 + 1912);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1880), v2);
  sub_24748A958(v1, v0 + 112);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 128);
  v4[1] = *(_OWORD *)(v0 + 112);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 144);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251658;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2384) = v7;
  *(void *)(v7 + 16) = &unk_269251668;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2392) = v8;
  void *v8 = v0;
  v8[1] = sub_24748A2B8;
  uint64_t v9 = MEMORY[0x263F8D6C8];
  return TransportDispatching.register<A>(_:handler:)(801, (uint64_t)&unk_269251678, v7, v2, v9, v3, (uint64_t)&protocol witness table for Int);
}

uint64_t sub_24748A2B8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24748A3D0, 0, 0);
}

uint64_t sub_24748A3D0()
{
  uint64_t v1 = *(void *)(v0 + 2040);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1880);
  sub_24748A6F0(v1 + 8, v0 + 1960);
  uint64_t v2 = *(void *)(v0 + 1984);
  uint64_t v3 = *(void *)(v0 + 1992);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1960), v2);
  sub_24748A958(v1, v0 + 1072);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 1088);
  v4[1] = *(_OWORD *)(v0 + 1072);
  v4[2] = v5;
  v4[3] = *(_OWORD *)(v0 + 1104);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_269251688;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2400) = v7;
  *(void *)(v7 + 16) = &unk_269251690;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2408) = v8;
  void *v8 = v0;
  v8[1] = sub_24748A578;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  return TransportDispatching.register<A>(_:handler:)(901, (uint64_t)&unk_269251698, v7, v2, v9, v3, (uint64_t)&protocol witness table for Bool);
}

uint64_t sub_24748A578()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24748A690, 0, 0);
}

uint64_t sub_24748A690()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 1960);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24748A6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24748A754(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v4;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v5;
  *long long v5 = v1;
  v5[1] = sub_24748A800;
  return sub_24748AA80(v1 + 16);
}

uint64_t sub_24748A800(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24748A93C, 0, 0);
  }
  else
  {
    long long v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_24748A93C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_24748A958(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)a2 = *(void *)a1;
  uint64_t v4 = a2 + 8;
  uint64_t v5 = a1 + 8;
  long long v6 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a2;
}

uint64_t sub_24748A9E4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  return sub_24748A754(a1);
}

uint64_t sub_24748AA80(uint64_t a1)
{
  *(void *)(v2 + 120) = v1;
  *(_OWORD *)(v2 + 128) = *(_OWORD *)a1;
  *(void *)(v2 + 144) = *(void *)(a1 + 16);
  *(_OWORD *)(v2 + 152) = *(_OWORD *)(a1 + 24);
  *(void *)(v2 + 168) = *(void *)(a1 + 40);
  return MEMORY[0x270FA2498](sub_24748AAC0, 0, 0);
}

uint64_t sub_24748AAC0()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000014, 0x80000002474B7670);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[22] = v4;
  uint64_t v5 = sub_2474B0F40();
  v0[23] = v5;
  uint64_t v6 = sub_2474B0F40();
  v0[24] = v6;
  v0[2] = v0;
  v0[7] = v0 + 26;
  v0[3] = sub_24748ACB8;
  uint64_t v7 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_442;
  v0[14] = v7;
  objc_msgSend(v3, sel_sendInviteRequestToDestination_callerID_serviceIdentifier_completion_, v4, v5, v6);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748ACB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_24748AE48;
  }
  else {
    uint64_t v2 = sub_24748ADC8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748ADC8()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 208);

  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_24748AE48()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = (void *)v0[22];
  uint64_t v2 = (void *)v0[23];
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_24748AED0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247492EF8;
  return v6(a1);
}

uint64_t sub_24748AFA8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251340 + dword_269251340);
  return v6(a1, v4);
}

uint64_t sub_24748B05C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_247492EF0;
  return v7(a2);
}

uint64_t sub_24748B138(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269251350 + dword_269251350);
  return v8(a1, a2, v6);
}

uint64_t sub_24748B200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748B394, 0, 0);
}

uint64_t sub_24748B2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748B200(a1, a2, v2 + 16);
}

uint64_t sub_24748B370(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748B394, 0, 0);
}

uint64_t sub_24748B394()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000019, 0x80000002474B7650);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_434;
  v0[14] = v5;
  objc_msgSend(v3, sel_acceptInviteRequestFromFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748B540()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_247492EEC;
  }
  else {
    uint64_t v2 = sub_247492FB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748B650(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247492EF8;
  return v8(a1, a2);
}

uint64_t sub_24748B734(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247476BF4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269251370 + dword_269251370);
  return v8(a1, a2, v6);
}

uint64_t sub_24748B7F8(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247492EF0;
  return v8(v4, v5);
}

uint64_t sub_24748B8DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_269251380 + dword_269251380);
  return v8(a1, a2, v6);
}

uint64_t sub_24748B9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748BB38, 0, 0);
}

uint64_t sub_24748BA68(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748B9A4(a1, a2, v2 + 16);
}

uint64_t sub_24748BB14(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748BB38, 0, 0);
}

uint64_t sub_24748BB38()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000019, 0x80000002474B7630);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_426;
  v0[14] = v5;
  objc_msgSend(v3, sel_sendWithdrawInviteRequestToFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748BCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748BE78, 0, 0);
}

uint64_t sub_24748BDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748BCE4(a1, a2, v2 + 16);
}

uint64_t sub_24748BE54(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748BE78, 0, 0);
}

uint64_t sub_24748BE78()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000019, 0x80000002474B7610);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_422;
  v0[14] = v5;
  objc_msgSend(v3, sel_ignoreInviteRequestFromFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748C024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  *(unsigned char *)(v2 + 16) = *(unsigned char *)a1;
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 40) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_24748C0F0;
  *(unsigned char *)(v6 + 161) = *(unsigned char *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  *(void *)(v6 + 120) = a2;
  *(void *)(v6 + 128) = v7;
  *(void *)(v6 + 136) = v8;
  return MEMORY[0x270FA2498](sub_24748C2FC, 0, 0);
}

uint64_t sub_24748C0F0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_247492FB0, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_24748C230(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247476BF4;
  return sub_24748C024(a1, v1 + 16);
}

uint64_t sub_24748C2CC(uint64_t a1)
{
  *(unsigned char *)(v2 + 161) = *(unsigned char *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 120) = v1;
  *(void *)(v2 + 128) = v3;
  *(void *)(v2 + 136) = v4;
  return MEMORY[0x270FA2498](sub_24748C2FC, 0, 0);
}

uint64_t sub_24748C2FC()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned __int8 *)(v0 + 161);
  uint64_t v2 = *(void ***)(v0 + 120);
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000012, 0x80000002474B75F0);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_2474B0F40();
  *(void *)(v0 + 144) = v5;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 160;
  *(void *)(v0 + 24) = sub_24748B540;
  uint64_t v6 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_247492CC0;
  *(void *)(v0 + 104) = &block_descriptor_418;
  *(void *)(v0 + 112) = v6;
  objc_msgSend(v4, sel_setMuteEnabled_forFriendWithUUID_completion_, v1, v5, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_24748C4B0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692513E0 + dword_2692513E0);
  return v6(a1, v4);
}

uint64_t sub_24748C564(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692513F0 + dword_2692513F0);
  return v8(a1, a2, v6);
}

uint64_t sub_24748C62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  *(unsigned char *)(v2 + 16) = *(unsigned char *)a1;
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 40) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_24748C6F8;
  *(unsigned char *)(v6 + 161) = *(unsigned char *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  *(void *)(v6 + 120) = a2;
  *(void *)(v6 + 128) = v7;
  *(void *)(v6 + 136) = v8;
  return MEMORY[0x270FA2498](sub_24748C904, 0, 0);
}

uint64_t sub_24748C6F8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_247471F64, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_24748C838(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2474747D8;
  return sub_24748C62C(a1, v1 + 16);
}

uint64_t sub_24748C8D4(uint64_t a1)
{
  *(unsigned char *)(v2 + 161) = *(unsigned char *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 120) = v1;
  *(void *)(v2 + 128) = v3;
  *(void *)(v2 + 136) = v4;
  return MEMORY[0x270FA2498](sub_24748C904, 0, 0);
}

uint64_t sub_24748C904()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned __int8 *)(v0 + 161);
  uint64_t v2 = *(void ***)(v0 + 120);
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001ALL, 0x80000002474B75D0);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_2474B0F40();
  *(void *)(v0 + 144) = v5;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 160;
  *(void *)(v0 + 24) = sub_24748CAB8;
  uint64_t v6 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_247492CC0;
  *(void *)(v0 + 104) = &block_descriptor_410;
  *(void *)(v0 + 112) = v6;
  objc_msgSend(v4, sel_setActivityDataVisible_toFriendWithUUID_completion_, v1, v5, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_24748CAB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_24748CC34;
  }
  else {
    uint64_t v2 = sub_24748CBC8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748CBC8()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 160);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_24748CC34()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_24748CCA8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24748CD80;
  return v6(a1);
}

uint64_t sub_24748CD80(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7(a1 & 1);
  }
}

uint64_t sub_24748CEB0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2474747D8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251410 + dword_269251410);
  return v6(a1, v4);
}

uint64_t sub_24748CF64(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_24748D040;
  return v7(a2);
}

uint64_t sub_24748D040(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_24748D150(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2474577A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269251420 + dword_269251420);
  return v8(a1, a2, v6);
}

uint64_t sub_24748D218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24748D2D8;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748D4B4, 0, 0);
}

uint64_t sub_24748D2D8(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t sub_24748D3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748D218(a1, a2, v2 + 16);
}

uint64_t sub_24748D490(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748D4B4, 0, 0);
}

uint64_t sub_24748D4B4()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001ALL, 0x80000002474B75B0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_402;
  v0[14] = v5;
  objc_msgSend(v3, sel_sendCompetitionRequestToFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748D660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748D82C, 0, 0);
}

uint64_t sub_24748D724(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748D660(a1, a2, v2 + 16);
}

uint64_t sub_24748D7D0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24748D808(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748D82C, 0, 0);
}

uint64_t sub_24748D82C()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001ELL, 0x80000002474B7590);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_398;
  v0[14] = v5;
  objc_msgSend(v3, sel_acceptCompetitionRequestFromFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748D9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748DB6C, 0, 0);
}

uint64_t sub_24748DA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748D9D8(a1, a2, v2 + 16);
}

uint64_t sub_24748DB48(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748DB6C, 0, 0);
}

uint64_t sub_24748DB6C()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001ELL, 0x80000002474B7570);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_394;
  v0[14] = v5;
  objc_msgSend(v3, sel_ignoreCompetitionRequestFromFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748DD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_24748DEAC, 0, 0);
}

uint64_t sub_24748DDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24748DD18(a1, a2, v2 + 16);
}

uint64_t sub_24748DE88(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748DEAC, 0, 0);
}

uint64_t sub_24748DEAC()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001ALL, 0x80000002474B7550);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748B540;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_390;
  v0[14] = v5;
  objc_msgSend(v3, sel_completeCompetitionWithFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748E058(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492EFC;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748E1BC, 0, 0);
}

uint64_t sub_24748E108()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_24748E058(v0 + 16);
}

uint64_t sub_24748E19C()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_24748E1BC, 0, 0);
}

uint64_t sub_24748E1BC()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000012, 0x80000002474B7530);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_24748E344;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_386;
  v0[14] = v4;
  objc_msgSend(v3, sel_pushActivityDataToAllFriendsWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748E344()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 128) = v1;
  if (v1) {
    uint64_t v2 = sub_247492FB8;
  }
  else {
    uint64_t v2 = sub_247492FC4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748E454(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247492EF8;
  return v4();
}

uint64_t sub_24748E520()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247476BF4;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_2692514C0 + dword_2692514C0);
  return v4(v2);
}

uint64_t sub_24748E5CC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_247492EF0;
  return v5();
}

uint64_t sub_24748E69C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692514D0 + dword_2692514D0);
  return v6(a1, v4);
}

uint64_t sub_24748E754(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492EFC;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748E8B8, 0, 0);
}

uint64_t sub_24748E804()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_24748E754(v0 + 16);
}

uint64_t sub_24748E898()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_24748E8B8, 0, 0);
}

uint64_t sub_24748E8B8()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001CLL, 0x80000002474B7510);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_24748EA40;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_378;
  v0[14] = v4;
  objc_msgSend(v3, sel_fetchAllDataWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748EA40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 128) = v1;
  if (v1) {
    uint64_t v2 = sub_24748EB50;
  }
  else {
    uint64_t v2 = sub_2474696F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748EB50()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_24748EBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247492EFC;
  v5[15] = a1;
  v5[16] = a2;
  return MEMORY[0x270FA2498](sub_24748ED30, 0, 0);
}

uint64_t sub_24748EC74(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247476BF4;
  return sub_24748EBC0(a1, v1 + 16);
}

uint64_t sub_24748ED10(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_24748ED30, 0, 0);
}

uint64_t sub_24748ED30()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = (void **)v0[16];
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000002BLL, 0x80000002474B74E0);
  uint64_t v4 = *v2;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_24748EEBC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_374;
  v0[14] = v5;
  objc_msgSend(v4, sel_fetchAllDataIfTimeSinceLastFetchIsGreaterThan_completion_, v1, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748EEBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_24748EFCC;
  }
  else {
    uint64_t v2 = sub_247471568;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748EFCC()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_24748F03C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247492EF8;
  return v6(a1);
}

uint64_t sub_24748F114(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251510 + dword_269251510);
  return v6(a1, v4);
}

uint64_t sub_24748F1C8(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_247492EF0;
  return v7(v4);
}

uint64_t sub_24748F2A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_269251520 + dword_269251520);
  return v8(a1, a2, v6);
}

uint64_t sub_24748F36C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492EFC;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748F4D0, 0, 0);
}

uint64_t sub_24748F41C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_24748F36C(v0 + 16);
}

uint64_t sub_24748F4B0()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_24748F4D0, 0, 0);
}

uint64_t sub_24748F4D0()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000019, 0x80000002474B74C0);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_24748EA40;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492D74;
  v0[13] = &block_descriptor_366;
  v0[14] = v4;
  objc_msgSend(v3, sel_cloudKitAccountStatusWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748F658(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492EFC;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_24748F7BC, 0, 0);
}

uint64_t sub_24748F708()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_24748F658(v0 + 16);
}

uint64_t sub_24748F79C()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_24748F7BC, 0, 0);
}

uint64_t sub_24748F7BC()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000013, 0x80000002474B74A0);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_24748E344;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_362;
  v0[14] = v4;
  objc_msgSend(v3, sel_expireChangeTokenWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748F944(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247492EFC;
  v5[15] = a1;
  v5[16] = a2;
  return MEMORY[0x270FA2498](sub_24748FAB4, 0, 0);
}

uint64_t sub_24748F9F8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247476BF4;
  return sub_24748F944(a1, v1 + 16);
}

uint64_t sub_24748FA94(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_24748FAB4, 0, 0);
}

uint64_t sub_24748FAB4()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[16];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000030, 0x80000002474B7440);
  uint64_t v3 = sub_2474B1500();
  v0[17] = v3;
  uint64_t v4 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 19;
  v0[3] = sub_24748FC50;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492D74;
  v0[13] = &block_descriptor_358;
  v0[14] = v5;
  objc_msgSend(v4, sel_fetchAreMultipleDevicesSharingDataForSnapshotIndex_withCompletion_, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24748FC50()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_24748FDCC;
  }
  else {
    uint64_t v2 = sub_24748FD60;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24748FD60()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 152);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_24748FDCC()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_24748FE40(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247492EF8;
  return v6(a1);
}

uint64_t sub_24748FF18(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251580 + dword_269251580);
  return v6(a1, v4);
}

uint64_t sub_24748FFCC(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_247492EF0;
  return v7(v4);
}

uint64_t sub_2474900A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_269251590 + dword_269251590);
  return v8(a1, a2, v6);
}

uint64_t sub_247490170(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492F00;
  v3[17] = a1;
  return MEMORY[0x270FA2498](sub_2474902D4, 0, 0);
}

uint64_t sub_247490220()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_247490170(v0 + 16);
}

uint64_t sub_2474902B4()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x270FA2498](sub_2474902D4, 0, 0);
}

uint64_t sub_2474902D4()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0x6E656972466C6C61, 0xEC00000029287364);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_24749045C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492E2C;
  v0[13] = &block_descriptor_350;
  v0[14] = v4;
  objc_msgSend(v3, sel_allFriendsWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24749045C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_247490588;
  }
  else {
    uint64_t v2 = sub_24749056C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24749056C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 120));
}

uint64_t sub_247490588()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2474905F4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_247492EF4;
  return v5();
}

uint64_t sub_2474906C4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692515B0 + dword_2692515B0);
  return v6(a1, v4);
}

uint64_t sub_24749077C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492F00;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return MEMORY[0x270FA2498](sub_247490910, 0, 0);
}

uint64_t sub_247490840(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_24749077C(a1, a2, v2 + 16);
}

uint64_t sub_2474908EC(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return MEMORY[0x270FA2498](sub_247490910, 0, 0);
}

uint64_t sub_247490910()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[19];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000016, 0x80000002474B73C0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[20] = v4;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_247490ABC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492E2C;
  v0[13] = &block_descriptor_344;
  v0[14] = v5;
  objc_msgSend(v3, sel_friendWithRemoteUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_247490ABC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_247490C68;
  }
  else {
    uint64_t v2 = sub_247490BCC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247490BCC()
{
  uint64_t v1 = *(void **)(v0 + 120);

  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_codableFriendIncludingCloudKitFields_, 1);
  }
  else
  {
    id v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_247490C68()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_247490CD8(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247490DBC;
  return v8(v4, v5);
}

uint64_t sub_247490DBC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_247490ECC(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2692515D0 + dword_2692515D0);
  return v8(a1, a2, v6);
}

uint64_t sub_247490F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247492EFC;
  unsigned char v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  return MEMORY[0x270FA2498](sub_247491128, 0, 0);
}

uint64_t sub_247491058(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247476BF4;
  return sub_247490F94(a1, a2, v2 + 16);
}

uint64_t sub_247491104(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_247491128, 0, 0);
}

uint64_t sub_247491128()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000017, 0x80000002474B73A0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2474B0F40();
  v0[18] = v4;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_24748CAB8;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_338;
  v0[14] = v5;
  objc_msgSend(v3, sel_removeFriendWithUUID_completion_, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2474912D4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492EFC;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_247491438, 0, 0);
}

uint64_t sub_247491384()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_2474912D4(v0 + 16);
}

uint64_t sub_247491418()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_247491438, 0, 0);
}

uint64_t sub_247491438()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000012, 0x80000002474B7380);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_24748E344;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_334;
  v0[14] = v4;
  objc_msgSend(v3, sel_clearFriendListWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2474915C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247492EFC;
  v5[15] = a1;
  v5[16] = a2;
  return MEMORY[0x270FA2498](sub_247491730, 0, 0);
}

uint64_t sub_247491674(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247476BF4;
  return sub_2474915C0(a1, v1 + 16);
}

uint64_t sub_247491710(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_247491730, 0, 0);
}

uint64_t sub_247491730()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = (void **)v0[16];
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD00000000000001ELL, 0x80000002474B7360);
  uint64_t v4 = *v2;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_2474918BC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_330;
  v0[14] = v5;
  objc_msgSend(v4, sel_handleNotificationResponse_completion_, v1, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2474918BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_247492FC0;
  }
  else {
    uint64_t v2 = sub_247476BB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474919CC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247492EF8;
  return v6(a1);
}

uint64_t sub_247491AA4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247476BF4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251630 + dword_269251630);
  return v6(a1, v4);
}

uint64_t sub_247491B58(uint64_t a1, uint64_t *a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_247492EF0;
  return v7(v4);
}

uint64_t sub_247491C34(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24745B0A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_269251640 + dword_269251640);
  return v8(a1, a2, v6);
}

uint64_t sub_247491CFC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247491DA8;
  v3[17] = a1;
  return MEMORY[0x270FA2498](sub_247491F60, 0, 0);
}

uint64_t sub_247491DA8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_247491EAC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2474747D8;
  return sub_247491CFC(v0 + 16);
}

uint64_t sub_247491F40()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x270FA2498](sub_247491F60, 0, 0);
}

uint64_t sub_247491F60()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[17];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0x6567646142707061, 0xEF2928746E756F43);
  uint64_t v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2474920EC;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492E2C;
  v0[13] = &block_descriptor_322;
  v0[14] = v4;
  objc_msgSend(v3, sel_queryAppBadgeCountWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2474920EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_247492FBC;
  }
  else {
    uint64_t v2 = sub_2474921FC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474921FC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    id v2 = objc_msgSend(*(id *)(v0 + 120), sel_integerValue);
  }
  else
  {
    id v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_247492284(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_247492350;
  return v4();
}

uint64_t sub_247492350(uint64_t a1)
{
  uint64_t v8 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  if (!v1)
  {
    uint64_t v4 = a1;
    uint64_t v5 = 0;
  }
  return v6(v4, v5);
}

uint64_t sub_247492454()
{
  id v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24745A850;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_269251660 + dword_269251660);
  return v4(v2);
}

uint64_t sub_247492500(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2474925D0;
  return v5();
}

uint64_t sub_2474925D0(uint64_t a1, char a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void *)(v6 + 16);
    *(void *)uint64_t v8 = a1;
    *(unsigned char *)(v8 + 8) = a2 & 1;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_2474926F4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269251670 + dword_269251670);
  return v6(a1, v4);
}

uint64_t sub_2474927AC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247492EFC;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_247492B38, 0, 0);
}

uint64_t sub_24749285C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247476BF4;
  return sub_2474927AC(v0 + 16);
}

uint64_t destroy for ASListener(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for ASListener(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for ASListener(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  long long v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASListener(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASListener(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASListener(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASListener()
{
  return &type metadata for ASListener;
}

uint64_t sub_247492B18()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_247492B38, 0, 0);
}

uint64_t sub_247492B38()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)v0[15];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005CLL, 0x80000002474B72B0, 0xD000000000000016, 0x80000002474B7310);
  long long v3 = *v1;
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_24748E344;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_247492CC0;
  v0[13] = &block_descriptor_0;
  v0[14] = v4;
  objc_msgSend(v3, sel_pushFakeActivityDataToAllFriendsWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_247492CC0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A08);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_247492D74(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A08);
    uint64_t v6 = swift_allocError();
    *id v7 = a4;
    id v8 = a4;
    return MEMORY[0x270FA2410](v4, v6);
  }
  else
  {
    id v9 = *(unsigned char **)(*(void *)(v4 + 64) + 40);
    *id v9 = a2;
    v9[1] = a3;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_247492E30(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A08);
    uint64_t v6 = swift_allocError();
    *id v7 = a4;
    id v8 = a4;
    return MEMORY[0x270FA2410](v4, v6);
  }
  else
  {
    uint64_t v9 = *(void *)(*(void *)(v4 + 64) + 40);
    *(void *)uint64_t v9 = a2;
    *(unsigned char *)(v9 + 8) = a3;
    id v10 = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t Array<A>.activitySharingTransportData()()
{
  swift_bridgeObjectRetain();
  CodableObjectArray.init(value:)((uint64_t *)&v3);
  uint64_t v0 = v3;
  type metadata accessor for CodableObjectArray();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v1 = TransportSerializable<>.activitySharingTransportData()();

  return v1;
}

uint64_t Array<A>.init(activitySharingTransportData:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for CodableObjectArray();
  sub_247446DC4(a1, a2);
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v6 = v5;
  TransportSerializable<>.init(activitySharingTransportData:)(a1, a2, v5, (uint64_t)&v9);
  if (v2)
  {
    sub_24743E498(a1, a2);
  }
  else
  {
    id v7 = v9;
    if (v9)
    {
      uint64_t v6 = CodableObjectArray.value.getter();
      sub_24743E498(a1, a2);
    }
    else
    {
      sub_24743E498(a1, a2);
      return 0;
    }
  }
  return v6;
}

uint64_t sub_2474931C8()
{
  return Array<A>.activitySharingTransportData()();
}

uint64_t sub_2474931EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Array<A>.init(activitySharingTransportData:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t static CloudDeviceConstants.cloudDevicesUserDefaultsKey.getter()
{
  return 0x76654464756F6C43;
}

uint64_t static CloudDeviceConstants.iOSVersionForMigration.getter()
{
  return 808335409;
}

uint64_t static CloudDeviceConstants.watchOSVersionForMigration.getter()
{
  return 808333617;
}

uint64_t static CloudDeviceConstants.validAgeInDays.getter()
{
  return 30;
}

ValueMetadata *type metadata accessor for CloudDeviceConstants()
{
  return &type metadata for CloudDeviceConstants;
}

uint64_t SecureCloudWithdrawRequestProtobuf.date.setter(double a1)
{
  uint64_t result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v4 = v1 + *(int *)(result + 20);
  *(double *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for SecureCloudWithdrawRequestProtobuf()
{
  uint64_t result = qword_269251848;
  if (!qword_269251848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.handshakeToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double SecureCloudWithdrawRequestProtobuf.date.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20);
  double result = *(double *)v1;
  if (*(unsigned char *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.handshakeToken.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t (*SecureCloudWithdrawRequestProtobuf.date.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(unsigned char *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_247440458;
}

BOOL SecureCloudWithdrawRequestProtobuf.hasDate.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20) + 8) & 1) == 0;
}

Swift::Void __swiftcall SecureCloudWithdrawRequestProtobuf.clearDate()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 20);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
}

uint64_t sub_247493498@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2474934FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudWithdrawRequestProtobuf.handshakeToken.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_24743C790;
}

BOOL SecureCloudWithdrawRequestProtobuf.hasHandshakeToken.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudWithdrawRequestProtobuf.clearHandshakeToken()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf() + 24));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudWithdrawRequestProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudWithdrawRequestProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudWithdrawRequestProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudWithdrawRequestProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v3 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  unint64_t v4 = (void *)(a1 + *(int *)(result + 24));
  *unint64_t v4 = 0;
  v4[1] = 0;
  return result;
}

unint64_t static SecureCloudWithdrawRequestProtobuf.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24749378C()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_269251820);
  __swift_project_value_buffer(v0, (uint64_t)qword_269251820);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B3060;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "date";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  id v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)id v10 = "handshakeToken";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudWithdrawRequestProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692503D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269251820);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t SecureCloudWithdrawRequestProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      type metadata accessor for SecureCloudWithdrawRequestProtobuf();
      sub_2474B0D80();
    }
    else if (result == 1)
    {
      type metadata accessor for SecureCloudWithdrawRequestProtobuf();
      sub_2474B0D70();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.traverse<A>(visitor:)()
{
  uint64_t v2 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  if ((*(unsigned char *)(v0 + *(int *)(v2 + 20) + 8) & 1) != 0 || (uint64_t result = sub_2474B0E30(), !v1))
  {
    if (!*(void *)(v0 + *(int *)(v2 + 24) + 8)) {
      return sub_2474B0CC0();
    }
    uint64_t result = sub_2474B0E40();
    if (!v1) {
      return sub_2474B0CC0();
    }
  }
  return result;
}

uint64_t SecureCloudWithdrawRequestProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

uint64_t sub_247493C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2474B0CD0();
  uint64_t v5 = *(int *)(a1 + 24);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_247493C58()
{
  return 0xD000000000000022;
}

uint64_t sub_247493C74()
{
  return SecureCloudWithdrawRequestProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_247493C8C()
{
  return SecureCloudWithdrawRequestProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_247493CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474948CC(&qword_269251858, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_247493D20@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692503D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269251820);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_247493DC8(uint64_t a1)
{
  uint64_t v2 = sub_2474948CC(&qword_2692505A8, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_247493E34()
{
  sub_2474948CC(&qword_2692505A8, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
  return sub_2474B0DF0();
}

uint64_t _s21ActivitySharingClient34SecureCloudWithdrawRequestProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_16;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_16;
    }
  }
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  if (!v19)
  {
    if (!v21)
    {
LABEL_17:
      id v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v24(v10, a1, v4);
      v24(v8, a2, v4);
      sub_2474948CC(&qword_269250420, MEMORY[0x263F50560]);
      char v23 = sub_2474B0F30();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v8, v4);
      v25(v10, v4);
      return v23 & 1;
    }
LABEL_16:
    char v23 = 0;
    return v23 & 1;
  }
  if (!v21) {
    goto LABEL_16;
  }
  if (*v18 == *v20 && v19 == v21) {
    goto LABEL_17;
  }
  char v23 = 0;
  if (sub_2474B1470()) {
    goto LABEL_17;
  }
  return v23 & 1;
}

uint64_t sub_2474940CC()
{
  return sub_2474948CC(&qword_269251840, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_247494114()
{
  return sub_2474948CC(&qword_2692505A8, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_24749415C()
{
  return sub_2474948CC(&qword_269251838, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_2474941A4()
{
  return sub_2474948CC(&qword_2692505B0, (void (*)(uint64_t))type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_2474941EC@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v5 = a1 + *(int *)(result + 20);
  double v6 = *(double *)v5;
  if (*(unsigned char *)(v5 + 8)) {
    double v6 = 0.0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_247494238(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t result = type metadata accessor for SecureCloudWithdrawRequestProtobuf();
  uint64_t v5 = a2 + *(int *)(result + 20);
  *(void *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudWithdrawRequestProtobuf(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)id v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudWithdrawRequestProtobuf(uint64_t a1)
{
  uint64_t v2 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247494688);
}

uint64_t sub_247494688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudWithdrawRequestProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24749476C);
}

uint64_t sub_24749476C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_24749482C()
{
  uint64_t result = sub_2474B0CE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2474948CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id CodableProtobuf.value.getter()
{
  return *v0;
}

uint64_t CodableProtobuf.init(value:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_247494924()
{
  uint64_t v0 = sub_2474B13B0();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_24749496C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2474949E0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_247494A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_247494ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_247494B2C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_247494924();
  *a1 = result;
  return result;
}

void sub_247494B64(void *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_247494B78()
{
  return 1635017060;
}

BOOL sub_247494B88@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_247494924();
  *a1 = result;
  return result;
}

uint64_t sub_247494BB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24744AD38();
  *a1 = result & 1;
  return result;
}

uint64_t sub_247494BE8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_247494C3C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CodableProtobuf.encode(to:)(void *a1)
{
  type metadata accessor for CodableProtobuf.CodingKeys();
  swift_getWitnessTable();
  uint64_t v15 = sub_2474B1430();
  uint64_t v3 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v5 = (char *)v14 - v4;
  uint64_t v6 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474B1550();
  id v7 = objc_msgSend(v6, sel_data);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_2474B0BC0();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xF000000000000000;
  }
  v14[2] = v9;
  v14[3] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
  sub_247494E74();
  uint64_t v12 = v15;
  sub_2474B1420();
  sub_24743E498(v9, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v12);
}

uint64_t type metadata accessor for CodableProtobuf.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_247494E74()
{
  unint64_t result = qword_269251860;
  if (!qword_269251860)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B12CB70);
    sub_24743F6D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251860);
  }
  return result;
}

uint64_t CodableProtobuf.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  type metadata accessor for CodableProtobuf.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_2474B13F0();
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474B1540();
  if (!v2)
  {
    id v7 = v18;
    uint64_t v8 = v15;
    sub_24743F680();
    sub_2474B13E0();
    uint64_t v9 = v16;
    unint64_t v10 = v17;
    sub_247442FA0(v16, v17);
    id v11 = sub_247495120(v9, v10);
    sub_24743E4AC(v9, v10);
    if (v11)
    {
      sub_24743E4AC(v9, v10);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
      *id v7 = v11;
    }
    else
    {
      sub_2474951AC();
      swift_allocError();
      *uint64_t v13 = 0;
      swift_willThrow();
      sub_24743E4AC(v9, v10);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

id sub_247495120(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    uint64_t v2 = 0;
  }
  else
  {
    sub_247442FA0(a1, a2);
    uint64_t v2 = (void *)sub_2474B0BB0();
    sub_24743E498(a1, a2);
  }
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithData_, v2);

  return v5;
}

unint64_t sub_2474951AC()
{
  unint64_t result = qword_269251868[0];
  if (!qword_269251868[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269251868);
  }
  return result;
}

uint64_t sub_247495200@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CodableProtobuf.init(from:)(a1, a2);
}

uint64_t sub_24749521C(void *a1)
{
  return CodableProtobuf.encode(to:)(a1);
}

uint64_t sub_247495234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for CodableProtobuf()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247495254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_24749525C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2474952F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247495320()
{
  return swift_getWitnessTable();
}

uint64_t sub_24749533C()
{
  return swift_getWitnessTable();
}

uint64_t sub_247495358()
{
  return swift_getWitnessTable();
}

uint64_t getEnumTagSinglePayload for TransportError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TransportError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2474954D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportError()
{
  return &type metadata for TransportError;
}

unint64_t sub_24749550C()
{
  unint64_t result = qword_269251970;
  if (!qword_269251970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251970);
  }
  return result;
}

uint64_t XPCClient.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  XPCClient.init()();
  return v0;
}

uint64_t sub_247495598(uint64_t a1, void *a2, void *a3)
{
  unsigned int v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    unsigned int v4 = (void *)sub_2474B0BC0();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_24743E498((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_247495644(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t XPCClient.init()()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 128) = 0;
  sub_2474B0F50();
  id v1 = objc_allocWithZone(MEMORY[0x263F08D68]);
  uint64_t v2 = (void *)sub_2474B0F40();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithMachServiceName_options_, v2, 0);

  *(void *)(v0 + 112) = v3;
  unsigned int v4 = self;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_interfaceWithProtocol_, &unk_26FB97850);
  objc_msgSend(v5, sel_setRemoteObjectInterface_, v6);

  return v0;
}

uint64_t XPCClient.deinit()
{
  id v1 = *(void **)(v0 + 112);
  objc_msgSend(v1, sel_setInterruptionHandler_, 0);
  objc_msgSend(v1, sel_setInvalidationHandler_, 0);
  objc_msgSend(v1, sel_invalidate);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCClient.__deallocating_deinit()
{
  id v1 = *(void **)(v0 + 112);
  objc_msgSend(v1, sel_setInterruptionHandler_, 0);
  objc_msgSend(v1, sel_setInvalidationHandler_, 0);
  objc_msgSend(v1, sel_invalidate);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

void sub_247495870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v35 = a5;
  v33[0] = a4;
  uint64_t v37 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)(a2 + 112);
  id v12 = objc_msgSend(v11, sel_serviceName, v33[0]);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_2474B0F50();
    unint64_t v16 = v15;
  }
  else
  {
    unint64_t v16 = 0xE900000000000029;
    uint64_t v14 = 0x6E776F6E6B6E7528;
  }
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v38 = a1;
  long long v34 = v17;
  v17((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v36 = v9;
  v33[1] = v18 | 7;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v20(v19 + ((v18 + 32) & ~v18), v10, v7);
  uint64_t v44 = sub_2474989F8;
  uint64_t v45 = v19;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_247495F5C;
  char v43 = &block_descriptor_48;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v21);
  _Block_release(v21);
  sub_2474B1280();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB78);
  if (swift_dynamicCast())
  {
    char v23 = v39;
    if (v35 >> 60 == 15) {
      id v24 = 0;
    }
    else {
      id v24 = (void *)sub_2474B0BB0();
    }
    v34(v10, v38, v7);
    uint64_t v31 = swift_allocObject();
    v20(v31 + ((v18 + 16) & ~v18), v10, v7);
    uint64_t v44 = sub_24747E154;
    uint64_t v45 = v31;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v41 = 1107296256;
    uint64_t v42 = sub_247495598;
    char v43 = &block_descriptor_54;
    uint64_t v32 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v23, sel_transportRequest_data_completion_, v37, v24, v32);
    _Block_release(v32);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_26B12CCD0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_2474B0EC0();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B12CCE8);
    uint64_t v26 = sub_2474B0EA0();
    os_log_type_t v27 = sub_2474B1160();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_24743A000, v26, v27, "Invalid proxy", v28, 2u);
      MEMORY[0x24C557100](v28, -1, -1);
    }

    sub_247446DD8();
    uint64_t v29 = swift_allocError();
    unsigned char *v30 = 4;
    uint64_t aBlock = v29;
    sub_2474B10E0();
  }
}

uint64_t sub_247495CFC(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2474B0EC0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B12CCE8);
  swift_bridgeObjectRetain();
  id v7 = a1;
  swift_bridgeObjectRetain();
  id v8 = a1;
  uint64_t v9 = sub_2474B0EA0();
  os_log_type_t v10 = sub_2474B1160();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    swift_bridgeObjectRetain();
    sub_247464D64(a2, a3, &v17);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_247440298();
    sub_247464D64(v13, v14, &v17);
    sub_2474B1230();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24743A000, v9, v10, "Error encountered on remote proxy %{public}s: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v12, -1, -1);
    MEMORY[0x24C557100](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = (uint64_t)a1;
  id v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  return sub_2474B10E0();
}

void sub_247495F5C(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t XPCClient.unownedExecutor.getter()
{
  return v0;
}

uint64_t XPCClient.activate()()
{
  *(void *)(v1 + 64) = v0;
  return MEMORY[0x270FA2498](sub_247495FF0, v0, 0);
}

uint64_t sub_247495FF0()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000005FLL, 0x80000002474B7690, 0x6574617669746361, 0xEA00000000002928);
  if (!*(unsigned char *)(v1 + 128))
  {
    uint64_t v3 = v0[8];
    id v4 = *(void **)(v3 + 112);
    objc_msgSend(v4, sel_setExportedObject_, v3);
    v0[6] = sub_247496208;
    v0[7] = 0;
    uint64_t v5 = MEMORY[0x263EF8330];
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_247495644;
    v0[5] = &block_descriptor_3;
    uint64_t v6 = _Block_copy(v0 + 2);
    objc_msgSend(v4, sel_setInterruptionHandler_, v6);
    _Block_release(v6);
    v0[6] = sub_2474964C4;
    v0[7] = v3;
    v0[2] = v5;
    v0[3] = 1107296256;
    v0[4] = sub_247495644;
    v0[5] = &block_descriptor_3;
    id v7 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_setInvalidationHandler_, v7);
    _Block_release(v7);
    objc_msgSend(v4, sel_resume);
    *(unsigned char *)(v1 + 128) = 1;
  }
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_247496208()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_2474B0EC0();
  __swift_project_value_buffer(v0, (uint64_t)qword_26B12CCE8);
  oslog = sub_2474B0EA0();
  os_log_type_t v1 = sub_2474B1160();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_24743A000, oslog, v1, "XPC connection interrupted", v2, 2u);
    MEMORY[0x24C557100](v2, -1, -1);
  }
}

uint64_t sub_2474962F0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CC80);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_2474B0EC0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B12CCE8);
  id v4 = sub_2474B0EA0();
  os_log_type_t v5 = sub_2474B1160();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_24743A000, v4, v5, "XPC connection invalidated", v6, 2u);
    MEMORY[0x24C557100](v6, -1, -1);
  }

  uint64_t v7 = sub_2474B1110();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v8;
  sub_24747D7C8((uint64_t)v2, (uint64_t)&unk_269251A08, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_2474964C4()
{
  return sub_2474962F0();
}

uint64_t sub_2474964CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return MEMORY[0x270FA2498](sub_2474964EC, 0, 0);
}

uint64_t sub_2474964EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_2474965B4, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_2474965B4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v1 + 128) == 2)
  {
    swift_release();
    uint64_t v2 = sub_247498C2C;
  }
  else
  {
    *(unsigned char *)(v1 + 128) = 2;
    uint64_t v3 = *(void **)(v1 + 112);
    objc_msgSend(v3, sel_setInterruptionHandler_, 0);
    objc_msgSend(v3, sel_setInvalidationHandler_, 0);
    objc_msgSend(v3, sel_invalidate);
    swift_release();
    uint64_t v2 = sub_247496688;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247496688()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t XPCClient.invalidate()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2474966D0, v0, 0);
}

uint64_t sub_2474966D0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v1 + 128) != 2)
  {
    *(unsigned char *)(v1 + 128) = 2;
    uint64_t v2 = *(void **)(v1 + 112);
    objc_msgSend(v2, sel_setInterruptionHandler_, 0);
    objc_msgSend(v2, sel_setInvalidationHandler_, 0);
    objc_msgSend(v2, sel_invalidate);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t XPCClient.sendItem(_:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_24749679C, v1, 0);
}

uint64_t sub_24749679C()
{
  uint64_t v1 = v0[5];
  if (*(unsigned char *)(v1 + 128) == 1)
  {
    uint64_t v2 = v0[4];
    unint64_t v3 = sub_247496AB8();
    uint64_t v4 = swift_task_alloc();
    v0[6] = v4;
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v2;
    *(_OWORD *)(v4 + 32) = xmmword_2474B2410;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[7] = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
    *uint64_t v5 = v0;
    v5[1] = sub_247496930;
    return MEMORY[0x270FA2360](v0 + 2, v1, v3, 0xD000000000000019, 0x80000002474B6F80, sub_247496B30, v4, v6);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_247496930()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = sub_247496A54;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    uint64_t v4 = sub_24747AA8C;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247496A54()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_247496AB8()
{
  unint64_t result = qword_26B12CB08;
  if (!qword_26B12CB08)
  {
    type metadata accessor for XPCClient();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12CB08);
  }
  return result;
}

uint64_t type metadata accessor for XPCClient()
{
  return self;
}

void sub_247496B30(uint64_t a1)
{
  sub_247495870(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t XPCClient.sendItem<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v6 = sub_2474B1210();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247496C08, v4, 0);
}

uint64_t sub_247496C08()
{
  uint64_t v1 = v0 + 9;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  (*(void (**)(uint64_t, void, void))(v0[10] + 16))(v2, v0[5], v0[9]);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = v0[10];
    unint64_t v6 = 0xF000000000000000;
  }
  else
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v0[7] + 8))(v0[6]);
    unint64_t v6 = v7;
    uint64_t v1 = v0 + 6;
  }
  uint64_t v8 = *v1;
  v0[12] = v5;
  v0[13] = v6;
  uint64_t v9 = v0[8];
  (*(void (**)(void, uint64_t))(v4 + 8))(v0[11], v8);
  if (*(unsigned char *)(v9 + 128) == 1)
  {
    uint64_t v10 = v0[8];
    uint64_t v11 = v0[4];
    unint64_t v12 = sub_247496AB8();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[14] = v13;
    void v13[2] = v10;
    v13[3] = v11;
    v13[4] = v5;
    v13[5] = v6;
    unint64_t v14 = (void *)swift_task_alloc();
    v0[15] = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
    void *v14 = v0;
    v14[1] = sub_247496EB4;
    return MEMORY[0x270FA2360](v0 + 2, v10, v12, 0xD000000000000019, 0x80000002474B6F80, sub_247498C30, v13, v15);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *unint64_t v16 = 0;
    swift_willThrow();
    sub_24743E498(v0[12], v0[13]);
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_247496EB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = sub_247496FDC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 64);
    swift_task_dealloc();
    uint64_t v4 = sub_24747AF94;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247496FDC()
{
  swift_task_dealloc();
  sub_24743E498(v0[12], v0[13]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t XPCClient.sendItem<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return MEMORY[0x270FA2498](sub_247497078, v4, 0);
}

{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  unint64_t v6 = sub_2474B1210();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2474973FC, v4, 0);
}

uint64_t sub_247497078()
{
  uint64_t v1 = v0[8];
  if (*(unsigned char *)(v1 + 128) == 1)
  {
    uint64_t v2 = v0[5];
    unint64_t v3 = sub_247496AB8();
    uint64_t v4 = swift_task_alloc();
    v0[9] = v4;
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v2;
    *(_OWORD *)(v4 + 32) = xmmword_2474B2410;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[10] = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
    *uint64_t v5 = v0;
    v5[1] = sub_24749720C;
    return MEMORY[0x270FA2360](v0 + 2, v1, v3, 0xD000000000000019, 0x80000002474B6F80, sub_247498C30, v4, v6);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_24749720C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = sub_24747B388;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 64);
    swift_task_dealloc();
    uint64_t v4 = sub_24747B2F0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2474973FC()
{
  uint64_t v1 = v0[8];
  if (*(unsigned char *)(v1 + 128) == 1)
  {
    uint64_t v2 = v0[5];
    unint64_t v3 = sub_247496AB8();
    uint64_t v4 = swift_task_alloc();
    v0[12] = v4;
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v2;
    *(_OWORD *)(v4 + 32) = xmmword_2474B2410;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[13] = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
    *uint64_t v5 = v0;
    v5[1] = sub_247497598;
    return MEMORY[0x270FA2360](v0 + 2, v1, v3, 0xD000000000000019, 0x80000002474B6F80, sub_247498C30, v4, v6);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_247497598()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = sub_24747B8C0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 64);
    swift_task_dealloc();
    uint64_t v4 = sub_24747B6E8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t XPCClient.sendItem<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = sub_2474B1210();
  v8[12] = v9;
  v8[13] = *(void *)(v9 - 8);
  v8[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247497790, v7, 0);
}

{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = sub_2474B1210();
  v8[12] = v9;
  v8[13] = *(void *)(v9 - 8);
  v8[14] = swift_task_alloc();
  uint64_t v10 = sub_2474B1210();
  v8[15] = v10;
  unsigned char v8[16] = *(void *)(v10 - 8);
  v8[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247497D10, v7, 0);
}

uint64_t sub_247497790()
{
  uint64_t v1 = v0 + 12;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[7];
  (*(void (**)(uint64_t, void, void))(v0[13] + 16))(v2, v0[6], v0[12]);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = v0[13];
    unint64_t v6 = 0xF000000000000000;
  }
  else
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v0[9] + 8))(v0[7]);
    unint64_t v6 = v7;
    uint64_t v1 = v0 + 7;
  }
  uint64_t v8 = *v1;
  v0[15] = v5;
  v0[16] = v6;
  uint64_t v9 = v0[11];
  (*(void (**)(void, uint64_t))(v4 + 8))(v0[14], v8);
  if (*(unsigned char *)(v9 + 128) == 1)
  {
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[5];
    unint64_t v12 = sub_247496AB8();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[17] = v13;
    void v13[2] = v10;
    v13[3] = v11;
    v13[4] = v5;
    v13[5] = v6;
    unint64_t v14 = (void *)swift_task_alloc();
    v0[18] = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
    void *v14 = v0;
    v14[1] = sub_247497A40;
    return MEMORY[0x270FA2360](v0 + 2, v10, v12, 0xD000000000000019, 0x80000002474B6F80, sub_247498C30, v13, v15);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *unint64_t v16 = 0;
    swift_willThrow();
    sub_24743E498(v0[15], v0[16]);
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_247497A40()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = sub_247497B68;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 88);
    swift_task_dealloc();
    uint64_t v4 = sub_24747BD74;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247497B68()
{
  swift_task_dealloc();
  sub_24743E498(v0[15], v0[16]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247497D10()
{
  uint64_t v1 = v0 + 15;
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[7];
  (*(void (**)(uint64_t, void, void))(v0[16] + 16))(v2, v0[6], v0[15]);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = 0;
    uint64_t v4 = v0[16];
    unint64_t v6 = 0xF000000000000000;
  }
  else
  {
    uint64_t v5 = (*(uint64_t (**)(void))(v0[9] + 8))(v0[7]);
    unint64_t v6 = v7;
    uint64_t v1 = v0 + 7;
  }
  uint64_t v8 = *v1;
  v0[18] = v5;
  v0[19] = v6;
  uint64_t v9 = v0[11];
  (*(void (**)(void, uint64_t))(v4 + 8))(v0[17], v8);
  if (*(unsigned char *)(v9 + 128) == 1)
  {
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[5];
    unint64_t v12 = sub_247496AB8();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[20] = v13;
    void v13[2] = v10;
    v13[3] = v11;
    v13[4] = v5;
    v13[5] = v6;
    unint64_t v14 = (void *)swift_task_alloc();
    v0[21] = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB70);
    void *v14 = v0;
    v14[1] = sub_247497FCC;
    return MEMORY[0x270FA2360](v0 + 2, v10, v12, 0xD000000000000019, 0x80000002474B6F80, sub_247498C30, v13, v15);
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *unint64_t v16 = 0;
    swift_willThrow();
    sub_24743E498(v0[18], v0[19]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_247497FCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = sub_2474980F4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 88);
    swift_task_dealloc();
    uint64_t v4 = sub_24747C370;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2474980F4()
{
  swift_task_dealloc();
  sub_24743E498(v0[18], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247498174()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24745B0A0;
  v3[8] = v2;
  return MEMORY[0x270FA2498](sub_247495FF0, v2, 0);
}

uint64_t sub_247498220()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24745B0A0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_2474966D0, v2, 0);
}

uint64_t sub_2474982C8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24745B0A0;
  v5[4] = a1;
  v5[5] = v4;
  return MEMORY[0x270FA2498](sub_24749679C, v4, 0);
}

uint64_t sub_247498378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24745B0A0;
  return XPCClient.sendItem<A>(_:payload:)(a1, a2, a3, a4);
}

uint64_t sub_247498438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_24745B0A0;
  v11[7] = a4;
  v11[8] = v10;
  v11[5] = a2;
  v11[6] = a3;
  v11[4] = a1;
  return MEMORY[0x270FA2498](sub_247497078, v10, 0);
}

uint64_t sub_24749850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_24745B0A0;
  return XPCClient.sendItem<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_2474985D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24745B0A0;
  return XPCClient.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2474986B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_2474577A0;
  return XPCClient.sendItem<A, B>(_:payload:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t method lookup function for XPCClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for XPCClient);
}

uint64_t dispatch thunk of XPCClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unsigned char *storeEnumTagSinglePayload for XPCClient.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247498898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCClient.State()
{
  return &type metadata for XPCClient.State;
}

unint64_t sub_2474988D4()
{
  unint64_t result = qword_2692519F8;
  if (!qword_2692519F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2692519F8);
  }
  return result;
}

uint64_t sub_247498928()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2474989F8(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);
  return sub_247495CFC(a1, v3, v4);
}

uint64_t sub_247498A70()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12CB40);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_247498B04()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_247498B3C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_247498B7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2474577A0;
  v5[5] = a1;
  v5[6] = v4;
  return MEMORY[0x270FA2498](sub_2474964EC, 0, 0);
}

uint64_t SecureCloudPingResponseProtobuf.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t type metadata accessor for SecureCloudPingResponseProtobuf()
{
  uint64_t result = qword_269251A38;
  if (!qword_269251A38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.requestIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SecureCloudPingResponseProtobuf.requestIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_247498DBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247498E20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudPingResponseProtobuf.identifier.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudPingResponseProtobuf.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudPingResponseProtobuf.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 20));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t sub_247498F58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247498FBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(a2 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t (*SecureCloudPingResponseProtobuf.requestIdentifier.modify(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_2474406A0;
}

BOOL SecureCloudPingResponseProtobuf.hasRequestIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24) + 8) != 0;
}

Swift::Void __swiftcall SecureCloudPingResponseProtobuf.clearRequestIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf() + 24));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t SecureCloudPingResponseProtobuf.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SecureCloudPingResponseProtobuf.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_2474B0CE0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*SecureCloudPingResponseProtobuf.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t SecureCloudPingResponseProtobuf.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2474B0CD0();
  uint64_t result = type metadata accessor for SecureCloudPingResponseProtobuf();
  uint64_t v3 = (void *)(a1 + *(int *)(result + 20));
  *uint64_t v3 = 0;
  v3[1] = 0;
  unint64_t v4 = (void *)(a1 + *(int *)(result + 24));
  *unint64_t v4 = 0;
  v4[1] = 0;
  return result;
}

unint64_t static SecureCloudPingResponseProtobuf.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_247499244()
{
  uint64_t v0 = sub_2474B0E90();
  __swift_allocate_value_buffer(v0, qword_269251A10);
  __swift_project_value_buffer(v0, (uint64_t)qword_269251A10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250428);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269250430) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2474B3060;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "identifier";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2474B0E70();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "requestIdentifier";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_2474B0E80();
}

uint64_t static SecureCloudPingResponseProtobuf._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692503E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269251A10);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t SecureCloudPingResponseProtobuf.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_2474B0D40();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2 || result == 1)
    {
      type metadata accessor for SecureCloudPingResponseProtobuf();
      sub_2474B0D80();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.traverse<A>(visitor:)()
{
  uint64_t v2 = type metadata accessor for SecureCloudPingResponseProtobuf();
  if (!*(void *)(v0 + *(int *)(v2 + 20) + 8) || (uint64_t result = sub_2474B0E40(), !v1))
  {
    if (!*(void *)(v0 + *(int *)(v2 + 24) + 8)) {
      return sub_2474B0CC0();
    }
    uint64_t result = sub_2474B0E40();
    if (!v1) {
      return sub_2474B0CC0();
    }
  }
  return result;
}

uint64_t SecureCloudPingResponseProtobuf.hashValue.getter()
{
  return sub_2474B1530();
}

uint64_t sub_2474996AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2474B0CD0();
  uint64_t v5 = *(int *)(a1 + 24);
  unint64_t v6 = (void *)(a2 + *(int *)(a1 + 20));
  *unint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_2474996E8()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_247499704()
{
  return SecureCloudPingResponseProtobuf.decodeMessage<A>(decoder:)();
}

uint64_t sub_24749971C()
{
  return SecureCloudPingResponseProtobuf.traverse<A>(visitor:)();
}

uint64_t sub_247499734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24749A300(&qword_269251A48, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2474997B0@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692503E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2474B0E90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269251A10);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_247499858(uint64_t a1)
{
  uint64_t v2 = sub_24749A300(&qword_269250588, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2474998C4()
{
  sub_24749A300(&qword_269250588, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
  return sub_2474B0DF0();
}

uint64_t _s21ActivitySharingClient31SecureCloudPingResponseProtobufV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2474B0CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for SecureCloudPingResponseProtobuf();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (v16) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  if (!v16) {
    goto LABEL_19;
  }
  BOOL v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (char v18 = 0, (sub_2474B1470() & 1) != 0))
  {
LABEL_10:
    uint64_t v19 = *(int *)(v11 + 24);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = *(void *)(a1 + v19 + 8);
    id v22 = (void *)(a2 + v19);
    uint64_t v23 = v22[1];
    if (v21)
    {
      if (v23)
      {
        if (*v20 != *v22 || v21 != v23)
        {
          char v18 = 0;
          if ((sub_2474B1470() & 1) == 0) {
            return v18 & 1;
          }
        }
LABEL_20:
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v25(v10, a1, v4);
        v25(v8, a2, v4);
        sub_24749A300(&qword_269250420, MEMORY[0x263F50560]);
        char v18 = sub_2474B0F30();
        uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
        v26(v8, v4);
        v26(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v23)
    {
      goto LABEL_20;
    }
LABEL_19:
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_247499B74()
{
  return sub_24749A300(&qword_269251A30, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_247499BBC()
{
  return sub_24749A300(&qword_269250588, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_247499C04()
{
  return sub_24749A300(&qword_269251A28, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_247499C4C()
{
  return sub_24749A300(&qword_269250590, (void (*)(uint64_t))type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureCloudPingResponseProtobuf(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2474B0CE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SecureCloudPingResponseProtobuf(uint64_t a1)
{
  uint64_t v2 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24749A0C4);
}

uint64_t sub_24749A0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2474B0CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudPingResponseProtobuf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24749A1A8);
}

uint64_t sub_24749A1A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2474B0CE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_24749A268()
{
  uint64_t result = sub_2474B0CE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24749A300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *ActivitySharingFriendQuery.__allocating_init(activitySharingClient:updateHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  uint64_t v8 = sub_24749B0A0(a1, a2, a3);

  swift_release();
  return v8;
}

char *ActivitySharingFriendQuery.init(activitySharingClient:updateHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_24749B0A0(a1, a2, a3);

  swift_release();
  return v4;
}

void sub_24749A3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x24C5571A0](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (qword_26B12CCD0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_2474B0EC0();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B12CCE8);
    sub_24743FD94(0xD00000000000006CLL, 0x80000002474B7880, 0xD000000000000018, 0x80000002474B78F0);
    _s21ActivitySharingClient0aB11FriendQueryC24fitnessAppsStateObserver_018applicationInstallH29DidChangeForBundleIdentifiersySo09FIFitnessghI0C_SaySSGtF_0();
  }
}

void sub_24749A550(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    sub_2474736DC(0, &qword_26B12CB80);
    sub_24749B7D8((unint64_t *)&qword_26B12CCA0, &qword_26B12CB80);
    uint64_t v5 = (void *)sub_2474B1120();
  }
  if (a2) {
    uint64_t v6 = sub_2474B0B90();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

void _s21ActivitySharingClient0aB11FriendQueryC24fitnessAppsStateObserver_018applicationInstallH29DidChangeForBundleIdentifiersySo09FIFitnessghI0C_SaySSGtF_0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CC80);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2474B0EC0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000006CLL, 0x80000002474B7880, 0xD000000000000011, 0x80000002474B7910);
  id v5 = objc_msgSend(self, sel_sharedBehavior);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_isAppleWatch);

    uint64_t v7 = sub_2474B0F50();
    unint64_t v9 = v8;
    unint64_t v10 = *(void **)(v0 + OBJC_IVAR____ASActivitySharingFriendQuery_fitnessAppsStateObserver);
    int v11 = (void *)sub_2474B0F40();
    id v12 = objc_msgSend(v10, sel_installStateForBundleIdentifier_, v11);

    if (v12 == (id)1)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_2474B1110();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = 0;
      v15[3] = 0;
      v15[4] = v14;
      sub_24747D41C((uint64_t)v3, (uint64_t)&unk_269251AE8, (uint64_t)v15);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_2474B0EA0();
      os_log_type_t v17 = sub_2474B1170();
      if (os_log_type_enabled(v16, v17))
      {
        char v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v21 = v19;
        *(_DWORD *)char v18 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_247464D64(v7, v9, &v21);
        sub_2474B1230();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24743A000, v16, v17, "App with bundle id %s not installed, not updating friend list", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C557100](v19, -1, -1);
        MEMORY[0x24C557100](v18, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24749AA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  return MEMORY[0x270FA2498](sub_24749AA94, 0, 0);
}

uint64_t sub_24749AA94()
{
  uint64_t v1 = v0[11] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x24C5571A0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void **)(v2 + OBJC_IVAR____ASActivitySharingFriendQuery_activitySharingClient);
    v0[12] = v4;
    v4;

    id v5 = (void *)swift_task_alloc();
    v0[13] = v5;
    *id v5 = v0;
    v5[1] = sub_24749AC1C;
    return sub_247470004();
  }
  else
  {
    uint64_t v7 = v0[11] + 16;
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x24C5571A0](v7);
    if (v8)
    {
      unint64_t v9 = (void *)v8;
      unint64_t v10 = *(void (**)(void, void))(v8 + OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler);
      swift_retain();

      v10(0, 0);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    int v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_24749AC1C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_24749AE1C;
  }
  else
  {

    *(void *)(v4 + 120) = a1;
    id v5 = sub_24749AD4C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24749AD4C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[11] + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x24C5571A0](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(void (**)(uint64_t, void))(v3 + OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler);
    swift_retain();

    v5(v1, 0);
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_24749AE1C()
{
  uint64_t v1 = *(void *)(v0 + 88);

  swift_beginAccess();
  uint64_t v2 = MEMORY[0x24C5571A0](v1 + 16);
  uint64_t v3 = *(void **)(v0 + 112);
  if (v2)
  {
    uint64_t v4 = (void *)v2;
    id v5 = *(void (**)(void, void *))(v2 + OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler);
    swift_retain();

    id v6 = v3;
    v5(0, v3);

    swift_release();
  }

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

id ActivitySharingFriendQuery.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ActivitySharingFriendQuery.init()()
{
}

id ActivitySharingFriendQuery.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivitySharingFriendQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_24749B0A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26B12CA00);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_2474B11B0();
  uint64_t v10 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB28);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_2474B11D0();
  uint64_t v37 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  char v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____ASActivitySharingFriendQuery_cancellable] = MEMORY[0x263F8EE78];
  *(void *)&v3[OBJC_IVAR____ASActivitySharingFriendQuery_activitySharingClient] = a1;
  uint64_t v19 = &v3[OBJC_IVAR____ASActivitySharingFriendQuery_updateHandler];
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = a3;
  id v20 = objc_allocWithZone(MEMORY[0x263F3D160]);
  uint64_t v21 = v3;
  id v22 = a1;
  swift_retain();
  id v23 = objc_msgSend(v20, sel_init);
  *(void *)&v21[OBJC_IVAR____ASActivitySharingFriendQuery_fitnessAppsStateObserver] = v23;

  id v24 = (objc_class *)type metadata accessor for ActivitySharingFriendQuery();
  v39.receiver = v21;
  v39.super_class = v24;
  uint64_t v25 = (char *)objc_msgSendSuper2(&v39, sel_init);
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____ASActivitySharingFriendQuery_fitnessAppsStateObserver];
  os_log_type_t v27 = v25;
  objc_msgSend(v26, sel_setDelegate_, v27);
  _s21ActivitySharingClient0aB11FriendQueryC24fitnessAppsStateObserver_018applicationInstallH29DidChangeForBundleIdentifiersySo09FIFitnessghI0C_SaySSGtF_0();
  id v28 = objc_msgSend(self, sel_defaultCenter);
  sub_2474B11E0();

  sub_2474B11A0();
  sub_2474736DC(0, &qword_26B12CB60);
  id v38 = (id)sub_2474B11C0();
  uint64_t v29 = sub_2474B1190();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
  sub_24749B780();
  sub_24749B7D8((unint64_t *)&unk_26B12CB50, &qword_26B12CB60);
  uint64_t v30 = v33;
  sub_2474B0EE0();
  sub_24749B81C((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_24749B884((unint64_t *)&unk_26B12CB18, &qword_26B12CB28);
  uint64_t v31 = v35;
  sub_2474B0EF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v31);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12CB30);
  sub_24749B884(&qword_26B12CB38, &qword_26B12CB30);
  sub_2474B0ED0();
  swift_endAccess();
  swift_release();

  (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v30);
  return v27;
}

uint64_t type metadata accessor for ActivitySharingFriendQuery()
{
  return self;
}

uint64_t method lookup function for ActivitySharingFriendQuery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ActivitySharingFriendQuery);
}

uint64_t dispatch thunk of ActivitySharingFriendQuery.__allocating_init(activitySharingClient:updateHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_24749B61C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24749B654(void *a1, uint64_t a2)
{
  sub_24749A550(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24749B65C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24749B694()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24749B6D4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2474577A0;
  v3[11] = v2;
  return MEMORY[0x270FA2498](sub_24749AA94, 0, 0);
}

unint64_t sub_24749B780()
{
  unint64_t result = qword_26B12CB68;
  if (!qword_26B12CB68)
  {
    sub_2474B11D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12CB68);
  }
  return result;
}

uint64_t sub_24749B7D8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2474736DC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24749B81C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B12CA00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24749B87C(uint64_t a1)
{
  sub_24749A3EC(a1, v1);
}

uint64_t sub_24749B884(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __swiftcall SendFriendInviteTransportItem.init(destination:callerID:serviceIdentifier:)(ActivitySharingClient::SendFriendInviteTransportItem *__return_ptr retstr, Swift::String destination, Swift::String callerID, Swift::String serviceIdentifier)
{
  retstr->destination = destination;
  retstr->callerID = callerID;
  retstr->serviceIdentifier = serviceIdentifier;
}

uint64_t SendFriendInviteTransportItem.destination.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SendFriendInviteTransportItem.callerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SendFriendInviteTransportItem.serviceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SendFriendInviteTransportItem.description.getter()
{
  return 0;
}

uint64_t sub_24749BAD4()
{
  unint64_t v1 = 0x444972656C6C6163;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74616E6974736564;
  }
}

uint64_t sub_24749BB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24749C4EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24749BB64(uint64_t a1)
{
  unint64_t v2 = sub_24749BD90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24749BBA0(uint64_t a1)
{
  unint64_t v2 = sub_24749BD90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SendFriendInviteTransportItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251AF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24749BD90();
  sub_2474B1550();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_2474B1400();
  if (!v9)
  {
    char v13 = 1;
    sub_2474B1400();
    char v12 = 2;
    sub_2474B1400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24749BD90()
{
  unint64_t result = qword_269251AF8;
  if (!qword_269251AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251AF8);
  }
  return result;
}

uint64_t SendFriendInviteTransportItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251B00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24749BD90();
  sub_2474B1540();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_2474B13C0();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2474B13C0();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_2474B13C0();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24749C084@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SendFriendInviteTransportItem.init(from:)(a1, a2);
}

uint64_t sub_24749C09C(void *a1)
{
  return SendFriendInviteTransportItem.encode(to:)(a1);
}

uint64_t destroy for SendFriendInviteTransportItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SendFriendInviteTransportItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SendFriendInviteTransportItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SendFriendInviteTransportItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SendFriendInviteTransportItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SendFriendInviteTransportItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SendFriendInviteTransportItem()
{
  return &type metadata for SendFriendInviteTransportItem;
}

unsigned char *storeEnumTagSinglePayload for SendFriendInviteTransportItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24749C3ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SendFriendInviteTransportItem.CodingKeys()
{
  return &type metadata for SendFriendInviteTransportItem.CodingKeys;
}

unint64_t sub_24749C3E8()
{
  unint64_t result = qword_269251B08;
  if (!qword_269251B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B08);
  }
  return result;
}

unint64_t sub_24749C440()
{
  unint64_t result = qword_269251B10;
  if (!qword_269251B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B10);
  }
  return result;
}

unint64_t sub_24749C498()
{
  unint64_t result = qword_269251B18;
  if (!qword_269251B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B18);
  }
  return result;
}

uint64_t sub_24749C4EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444972656C6C6163 && a2 == 0xE800000000000000 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002474B6BF0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

ValueMetadata *type metadata accessor for VoidTransportSerializable()
{
  return &type metadata for VoidTransportSerializable;
}

uint64_t sub_24749C668()
{
  return 0;
}

uint64_t sub_24749C674@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_24749C6A4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24749C6B0(uint64_t a1)
{
  unint64_t v2 = sub_24749C860();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24749C6EC(uint64_t a1)
{
  unint64_t v2 = sub_24749C860();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24749C728(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24749C750(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251B20);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24749C860();
  sub_2474B1550();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24749C860()
{
  unint64_t result = qword_269251B28;
  if (!qword_269251B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B28);
  }
  return result;
}

ValueMetadata *type metadata accessor for VoidTransportSerializable.CodingKeys()
{
  return &type metadata for VoidTransportSerializable.CodingKeys;
}

unint64_t sub_24749C8C8()
{
  unint64_t result = qword_269251B30;
  if (!qword_269251B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B30);
  }
  return result;
}

unint64_t sub_24749C920()
{
  unint64_t result = qword_269251B38;
  if (!qword_269251B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B38);
  }
  return result;
}

ActivitySharingClient::SetMuteEnabledTransportItem __swiftcall SetMuteEnabledTransportItem.init(isMuteEnabled:friendUUID:)(Swift::Bool isMuteEnabled, Swift::String friendUUID)
{
  *(unsigned char *)uint64_t v2 = isMuteEnabled;
  *(Swift::String *)(v2 + 8) = friendUUID;
  result.friendUUID = friendUUID;
  result.isMuteEnabled = isMuteEnabled;
  return result;
}

uint64_t SetMuteEnabledTransportItem.isMuteEnabled.getter()
{
  return *v0;
}

uint64_t SetMuteEnabledTransportItem.friendUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SetMuteEnabledTransportItem.description.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_24749CABC()
{
  if (*v0) {
    return 0x5555646E65697266;
  }
  else {
    return 0x6E456574754D7369;
  }
}

uint64_t sub_24749CB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24749D168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24749CB30(uint64_t a1)
{
  unint64_t v2 = sub_24749CD1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24749CB6C(uint64_t a1)
{
  unint64_t v2 = sub_24749CD1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetMuteEnabledTransportItem.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251B40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24749CD1C();
  sub_2474B1550();
  char v12 = 0;
  sub_2474B1410();
  if (!v2)
  {
    char v11 = 1;
    sub_2474B1400();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24749CD1C()
{
  unint64_t result = qword_269251B48;
  if (!qword_269251B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B48);
  }
  return result;
}

uint64_t SetMuteEnabledTransportItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251B50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24749CD1C();
  sub_2474B1540();
  if (!v2)
  {
    char v16 = 0;
    char v9 = sub_2474B13D0();
    char v15 = 1;
    uint64_t v11 = sub_2474B13C0();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24749CF18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetMuteEnabledTransportItem.init(from:)(a1, a2);
}

uint64_t sub_24749CF30(void *a1)
{
  return SetMuteEnabledTransportItem.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SetMuteEnabledTransportItem()
{
  return &type metadata for SetMuteEnabledTransportItem;
}

unsigned char *storeEnumTagSinglePayload for SetMuteEnabledTransportItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24749D028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetMuteEnabledTransportItem.CodingKeys()
{
  return &type metadata for SetMuteEnabledTransportItem.CodingKeys;
}

unint64_t sub_24749D064()
{
  unint64_t result = qword_269251B58;
  if (!qword_269251B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B58);
  }
  return result;
}

unint64_t sub_24749D0BC()
{
  unint64_t result = qword_269251B60;
  if (!qword_269251B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B60);
  }
  return result;
}

unint64_t sub_24749D114()
{
  unint64_t result = qword_269251B68;
  if (!qword_269251B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251B68);
  }
  return result;
}

uint64_t sub_24749D168(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E456574754D7369 && a2 == 0xED000064656C6261;
  if (v2 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5555646E65697266 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24749D28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_2474747D8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_24749D3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return MEMORY[0x270FA2498](sub_24749D3CC, 0, 0);
}

uint64_t sub_24749D3CC()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = v1[2];
  v0[15] = v2;
  if (v2)
  {
    int v3 = (int *)v0[12];
    uint64_t v4 = MEMORY[0x263F8EE78];
    v0[16] = 0;
    v0[17] = v4;
    uint64_t v5 = v1[4];
    uint64_t v6 = v1[5];
    swift_bridgeObjectRetain();
    v0[10] = v5;
    v0[11] = v6;
    uint64_t v11 = (int *)((char *)v3 + *v3);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[18] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24749D53C;
    return ((uint64_t (*)(void *, void *))v11)(v0 + 2, v0 + 10);
  }
  else
  {
    char v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = MEMORY[0x263F8EE78];
    return v9(v10);
  }
}

uint64_t sub_24749D53C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24749D894;
  }
  else
  {
    uint64_t v2 = sub_24749D658;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24749D658()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    long long v17 = *(_OWORD *)(v0 + 40);
    char v5 = *(unsigned char *)(v0 + 56);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *(void **)(v0 + 136);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v7 = sub_247464A88(0, v7[2] + 1, 1, *(void **)(v0 + 136));
    }
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    if (v9 >= v8 >> 1) {
      uint64_t v7 = sub_247464A88((void *)(v8 > 1), v9 + 1, 1, v7);
    }
    v7[2] = v9 + 1;
    uint64_t v10 = &v7[8 * v9];
    v10[4] = v1;
    v10[5] = v2;
    v10[6] = v3;
    *(_OWORD *)(v10 + 7) = v17;
    *((unsigned char *)v10 + 72) = v5;
    v10[10] = v18;
    v10[11] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void **)(v0 + 136);
  }
  uint64_t v11 = *(void *)(v0 + 128) + 1;
  if (v11 == *(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(void *))(v0 + 8);
    return v12(v7);
  }
  else
  {
    *(void *)(v0 + 128) = v11;
    *(void *)(v0 + 136) = v7;
    uint64_t v14 = *(int **)(v0 + 96);
    uint64_t v15 = *(void *)(*(void *)(v0 + 112) + 16 * v11 + 40);
    *(void *)(v0 + 80) = *(void *)(*(void *)(v0 + 112) + 16 * v11 + 32);
    *(void *)(v0 + 88) = v15;
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)v14 + *v14);
    swift_bridgeObjectRetain();
    char v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v16;
    *char v16 = v0;
    v16[1] = sub_24749D53C;
    return v19(v0 + 16, v0 + 80);
  }
}

uint64_t sub_24749D894()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24749D904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_24749D928, 0, 0);
}

uint64_t sub_24749D928()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v1[2];
  v0[7] = v2;
  if (v2)
  {
    uint64_t v3 = (int *)v0[4];
    uint64_t v4 = MEMORY[0x263F8EE78];
    v0[8] = 0;
    v0[9] = v4;
    uint64_t v6 = v1[4];
    uint64_t v5 = v1[5];
    swift_bridgeObjectRetain();
    v0[2] = v6;
    v0[3] = v5;
    uint64_t v11 = (uint64_t (*)(void *))((char *)v3 + *v3);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24749DA88;
    return v11(v0 + 2);
  }
  else
  {
    unint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = MEMORY[0x263F8EE78];
    return v9(v10);
  }
}

uint64_t sub_24749DA88(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_24749DDB8;
  }
  else
  {
    *(unsigned char *)(v4 + 96) = a1 & 1;
    uint64_t v5 = sub_24749DBBC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24749DBBC()
{
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v1 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = *(void **)(v0 + 72);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v4 = sub_247464978(0, v4[2] + 1, 1, *(void **)(v0 + 72));
    }
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_247464978((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    v4[2] = v6 + 1;
    uint64_t v7 = &v4[2 * v6];
    v7[4] = v2;
    v7[5] = v1;
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 72);
  }
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  swift_bridgeObjectRelease();
  if (v8 + 1 == v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = *(uint64_t (**)(void *))(v0 + 8);
    return v10(v4);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 64) + 1;
    *(void *)(v0 + 64) = v12;
    *(void *)(v0 + 72) = v4;
    uint64_t v13 = *(int **)(v0 + 32);
    uint64_t v14 = *(void *)(*(void *)(v0 + 48) + 16 * v12 + 40);
    *(void *)(v0 + 16) = *(void *)(*(void *)(v0 + 48) + 16 * v12 + 32);
    *(void *)(v0 + 24) = v14;
    char v16 = (uint64_t (*)(uint64_t))((char *)v13 + *v13);
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_24749DA88;
    return v16(v0 + 16);
  }
}

uint64_t sub_24749DDB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24749DE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x270FA2498](sub_24749DE4C, 0, 0);
}

uint64_t sub_24749DE4C()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  if (v1)
  {
    uint64_t v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    uint64_t v37 = v0;
    while (1)
    {
      uint64_t v5 = *(v2 - 1);
      unint64_t v4 = *v2;
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_24749E334(v5, v4);
      if (v7) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_4:
      v0[7] = v3;
      v2 += 2;
      if (!--v1)
      {
        uint64_t v30 = v0[4];
        uint64_t v31 = v0[5];
        swift_bridgeObjectRelease();
        uint64_t v32 = (void *)swift_task_alloc();
        v0[8] = v32;
        _OWORD v32[2] = v3;
        v32[3] = v30;
        v32[4] = v31;
        uint64_t v33 = (void *)swift_task_alloc();
        v0[9] = v33;
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251BB8);
        *uint64_t v33 = v0;
        v33[1] = sub_24749E1A4;
        unint64_t v14 = 0x80000002474B7980;
        uint64_t v15 = sub_2474A1834;
        uint64_t v21 = (uint64_t)(v0 + 2);
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        unint64_t v13 = 0xD00000000000001DLL;
        char v16 = v32;
        return MEMORY[0x270FA2360](v21, v11, v12, v13, v14, v15, v16, v17);
      }
    }
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v38 = v5;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v18 = sub_2474588A0(v8, v9);
    uint64_t v19 = v3[2];
    BOOL v20 = (v11 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      return MEMORY[0x270FA2360](v21, v11, v12, v13, v14, v15, v16, v17);
    }
    char v22 = v11;
    if (v3[3] < v21)
    {
      sub_2474A84AC(v21, isUniquelyReferenced_nonNull_native);
      uint64_t v21 = sub_2474588A0(v8, v9);
      if ((v22 & 1) != (v11 & 1))
      {
        return sub_2474B14B0();
      }
      unint64_t v18 = v21;
      uint64_t v23 = v38;
      if ((v22 & 1) == 0) {
        goto LABEL_15;
      }
LABEL_13:
      uint64_t v24 = (uint64_t *)(v3[7] + 16 * v18);
      swift_bridgeObjectRelease();
      *uint64_t v24 = v23;
      v24[1] = v4;
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v0 = v37;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v23 = v38;
      if (v11) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v21 = (uint64_t)sub_24745AC94();
      uint64_t v23 = v38;
      if (v22) {
        goto LABEL_13;
      }
    }
LABEL_15:
    v3[(v18 >> 6) + 8] |= 1 << v18;
    char v25 = (uint64_t *)(v3[6] + 16 * v18);
    uint64_t *v25 = v8;
    v25[1] = v9;
    char v26 = (uint64_t *)(v3[7] + 16 * v18);
    *char v26 = v23;
    v26[1] = v4;
    uint64_t v27 = v3[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_28;
    }
    v3[2] = v29;
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  uint64_t v34 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v35 = MEMORY[0x263F8EE78];
  return v34(v35);
}

uint64_t sub_24749E1A4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24749E2C8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_2474725F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24749E2C8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24749E334(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)sub_2474B0F40();
  int IsEmail = ASDestinationIsEmail();

  uint64_t v6 = (void *)sub_2474B0F40();
  if (IsEmail)
  {
    uint64_t v7 = (void *)MEMORY[0x24C556A90]();

    if (!v7) {
      return 0;
    }
  }
  else
  {
    int IsPhoneNumber = ASDestinationIsPhoneNumber();

    if (!IsPhoneNumber)
    {
      if (qword_269250378 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_2474B0EC0();
      __swift_project_value_buffer(v11, (uint64_t)qword_269257DE8);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_2474B0EA0();
      os_log_type_t v13 = sub_2474B1160();
      if (os_log_type_enabled(v12, v13))
      {
        unint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v17 = v15;
        *(_DWORD *)unint64_t v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_247464D64(a1, a2, &v17);
        sub_2474B1230();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24743A000, v12, v13, "Unknown destination type %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C557100](v15, -1, -1);
        MEMORY[0x24C557100](v14, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
    uint64_t v9 = (void *)sub_2474B0F40();
    uint64_t v7 = (void *)IDSCopyIDForPhoneNumber();

    if (!v7) {
      return 0;
    }
  }
  uint64_t v10 = sub_2474B0F50();

  return v10;
}

void sub_24749E570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251BC0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = objc_msgSend(self, sel_sharedInstance);
  if (v39)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    os_log_type_t v13 = sub_2474A174C(v12);
    swift_bridgeObjectRelease();
    sub_24749E988((uint64_t)v13);
    swift_release();
    uint64_t v38 = sub_2474B1040();
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_2474B0F40();
    id v36 = objc_msgSend(self, sel_refreshIDInfo);
    uint64_t v35 = sub_2474B0F40();
    sub_2474736DC(0, &qword_26B12CB60);
    uint64_t v14 = sub_2474B11C0();
    v33[1] = a1;
    uint64_t v34 = (void *)v14;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    uint64_t v15 = a3;
    unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v16, v11, v8);
    *(void *)(v18 + v17) = a2;
    uint64_t v19 = (void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v19 = v15;
    v19[1] = a4;
    aBlock[4] = sub_2474A1904;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24749FDA4;
    aBlock[3] = &block_descriptor_4;
    BOOL v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v21 = (void *)v38;
    id v22 = v39;
    uint64_t v24 = v36;
    uint64_t v23 = (void *)v37;
    char v26 = v34;
    char v25 = (void *)v35;
    LOBYTE(v17) = objc_msgSend(v39, sel_idInfoForDestinations_service_infoTypes_options_listenerID_queue_completionBlock_, v38, v37, 1, v36, v35, v34, v20);
    _Block_release(v20);

    if ((v17 & 1) == 0)
    {
      if (qword_269250378 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_2474B0EC0();
      __swift_project_value_buffer(v27, (uint64_t)qword_269257DE8);
      BOOL v28 = sub_2474B0EA0();
      os_log_type_t v29 = sub_2474B1160();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_24743A000, v28, v29, "IDS identity query failed to initiate", v30, 2u);
        MEMORY[0x24C557100](v30, -1, -1);
      }

      sub_2474A19C4();
      uint64_t v31 = swift_allocError();
      unsigned char *v32 = 0;
      aBlock[0] = v31;
      sub_2474B10E0();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24749E988(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2474A8B10(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2474A8B10(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2474A8B10(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_2474A20CC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24749EAB0(uint64_t a1, id a2)
{
  if (a2)
  {
    id v3 = a2;
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_2474B0EC0();
    __swift_project_value_buffer(v4, (uint64_t)qword_269257DE8);
    id v5 = a2;
    id v6 = a2;
    uint64_t v7 = sub_2474B0EA0();
    os_log_type_t v8 = sub_2474B1160();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      id v11 = a2;
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      sub_2474B1230();
      void *v10 = v26;

      _os_log_impl(&dword_24743A000, v7, v8, "IDS identity query returned an error: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v10, -1, -1);
      MEMORY[0x24C557100](v9, -1, -1);
    }
    else
    {
    }
    uint64_t v26 = (uint64_t)a2;
  }
  else
  {
    if (a1)
    {
      uint64_t v12 = sub_24749EEE0(a1);
      if (v12)
      {
        unint64_t v13 = MEMORY[0x270FA5388](v12);
        sub_2474A1C24(v13, (void (*)(void **__return_ptr, id, id))sub_2474A1A18);
        uint64_t v15 = v14;
        swift_bridgeObjectRelease();
        uint64_t v26 = v15;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269251BC0);
        return sub_2474B10F0();
      }
    }
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_2474B0EC0();
    __swift_project_value_buffer(v17, (uint64_t)qword_269257DE8);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_2474B0EA0();
    os_log_type_t v19 = sub_2474B1160();
    if (os_log_type_enabled(v18, v19))
    {
      BOOL v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v21;
      *(_DWORD *)BOOL v20 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269251BD0);
      uint64_t v22 = sub_2474B0F60();
      sub_247464D64(v22, v23, &v26);
      sub_2474B1230();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24743A000, v18, v19, "Invalid results from IDS identity query: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v21, -1, -1);
      MEMORY[0x24C557100](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_2474A19C4();
    uint64_t v24 = swift_allocError();
    unsigned char *v25 = 1;
    uint64_t v26 = v24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269251BC0);
  return sub_2474B10E0();
}

uint64_t sub_24749EEE0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269251BF0);
    uint64_t v2 = sub_2474B1390();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v11 = (v5 - 1) & v5;
      unint64_t v12 = __clz(__rbit64(v5)) | (v8 << 6);
      int64_t v13 = v8;
      goto LABEL_28;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v27) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    int64_t v13 = v8 + 1;
    if (!v15)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_42;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v13);
      if (!v15)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_42;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_42;
          }
          unint64_t v15 = *(void *)(v28 + 8 * v13);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_28:
    sub_2474A2010(*(void *)(a1 + 48) + 40 * v12, (uint64_t)v34);
    sub_247466074(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v35 + 8);
    v32[0] = v35[0];
    v32[1] = v35[1];
    uint64_t v33 = v36;
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v17 = (void *)sub_2474B12B0();
    self;
    uint64_t v18 = swift_dynamicCastObjCClass();
    if (!v18)
    {

      sub_2474A206C((uint64_t)v31);
      swift_release();
      goto LABEL_41;
    }
    uint64_t v19 = v18;
    sub_247466074((uint64_t)v32 + 8, (uint64_t)v30);
    sub_2474A206C((uint64_t)v31);
    sub_2474736DC(0, &qword_269251BE0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_release();
LABEL_41:
      sub_2474A2008();
      swift_release();
      return 0;
    }
    uint64_t result = sub_2474B1200();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = 8 * v9;
    *(void *)(*(void *)(v2 + 48) + v10) = v19;
    *(void *)(*(void *)(v2 + 56) + v10) = v29;
    ++*(void *)(v2 + 16);
    int64_t v8 = v13;
    unint64_t v5 = v11;
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_42:
    swift_release();
    sub_2474A2008();
    return v2;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v13);
    ++v16;
    if (v15) {
      goto LABEL_27;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_24749F2E0(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v9 = sub_2474B0F50();
  unint64_t v11 = v10;
  if (!*(void *)(a2 + 16)) {
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_2474588A0(v9, v11);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_2474B0EC0();
    __swift_project_value_buffer(v43, (uint64_t)qword_269257DE8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_2474B0EA0();
    os_log_type_t v45 = sub_2474B1160();
    if (!os_log_type_enabled(v44, v45))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_29;
    }
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    int v87 = (void *)v47;
    *(_DWORD *)uint64_t v46 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_247464D64(v9, v11, (uint64_t *)&v87);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_2474B0F10();
    char v49 = a5;
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t v88 = sub_247464D64(v48, v51, (uint64_t *)&v87);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    a5 = v49;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24743A000, v44, v45, "Failed to map result destination to raw destination %s, %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v47, -1, -1);
    uint64_t v52 = v46;
LABEL_27:
    MEMORY[0x24C557100](v52, -1, -1);

LABEL_29:
    a5[2] = 0u;
    a5[3] = 0u;
    *a5 = 0u;
    a5[1] = 0u;
    return;
  }
  uint64_t v78 = a3;
  uint64_t v79 = v9;
  int64_t v14 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v12);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(a1, sel_status);
  if ((unint64_t)v17 >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_2474B0EC0();
    __swift_project_value_buffer(v53, (uint64_t)qword_269257DE8);
    id v54 = a1;
    uint64_t v44 = sub_2474B0EA0();
    os_log_type_t v55 = sub_2474B1160();
    if (!os_log_type_enabled(v44, v55))
    {

      goto LABEL_29;
    }
    uint64_t v56 = swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 134218242;
    objc_msgSend(v54, sel_status);
    sub_2474B1230();
    *(_WORD *)(v56 + 12) = 2112;
    int v87 = v54;
    uint64_t v58 = a5;
    id v59 = v54;
    sub_2474B1230();
    *uint64_t v57 = v54;

    a5 = v58;
    _os_log_impl(&dword_24743A000, v44, v55, "Failed to parse reachability %ld, %@", (uint8_t *)v56, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v57, -1, -1);
    uint64_t v52 = v56;
    goto LABEL_27;
  }
  uint64_t v18 = (uint64_t)v17;
  unint64_t v80 = v11;
  id v19 = objc_msgSend(a1, sel_endpoints);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_269250378 == -1)
    {
LABEL_36:
      uint64_t v60 = sub_2474B0EC0();
      __swift_project_value_buffer(v60, (uint64_t)qword_269257DE8);
      id v61 = a1;
      uint64_t v44 = sub_2474B0EA0();
      os_log_type_t v62 = sub_2474B1160();
      if (!os_log_type_enabled(v44, v62))
      {

        goto LABEL_29;
      }
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 138412290;
      int v87 = v61;
      uint64_t v65 = a5;
      id v66 = v61;
      sub_2474B1230();
      void *v64 = v61;

      a5 = v65;
      _os_log_impl(&dword_24743A000, v44, v62, "IDS identity query didn't return any endpoints: %@", v63, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v64, -1, -1);
      uint64_t v52 = (uint64_t)v63;
      goto LABEL_27;
    }
LABEL_48:
    swift_once();
    goto LABEL_36;
  }
  uint64_t v20 = v19;
  uint64_t v75 = v15;
  uint64_t v76 = v18;
  sub_2474736DC(0, &qword_269251BE8);
  unint64_t v21 = sub_2474B1050();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_2474B1360();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = a4;
  uint64_t v77 = (uint64_t *)a5;
  if (v22)
  {
    int v87 = (void *)MEMORY[0x263F8EE78];
    sub_2474A8B30(0, v22 & ~(v22 >> 63), 0);
    if ((v22 & 0x8000000000000000) == 0)
    {
      unint64_t v24 = 0;
      unint64_t v83 = v21 & 0xC000000000000001;
      uint64_t v82 = *MEMORY[0x263F4A1A8];
      buf = (uint8_t *)v22;
      unint64_t v85 = v21;
      do
      {
        if (v83) {
          id v25 = (id)MEMORY[0x24C5567B0](v24, v21);
        }
        else {
          id v25 = *(id *)(v21 + 8 * (void)v24 + 32);
        }
        uint64_t v26 = v25;
        id v27 = objc_msgSend(v25, sel_capabilities);
        id v28 = objc_msgSend(v27, sel_valueForCapability_, v82);

        if (v28 == (id)1) {
          uint64_t v29 = qword_26FB90208;
        }
        else {
          uint64_t v29 = 0;
        }
        id v30 = objc_msgSend(v26, sel_pushToken);
        uint64_t v31 = sub_2474B0BC0();
        uint64_t v33 = v32;

        id v34 = objc_msgSend(v26, sel_URI);
        id v35 = objc_msgSend(v34, sel_prefixedURI);

        uint64_t v36 = sub_2474B0F50();
        uint64_t v38 = v37;

        uint64_t v39 = (uint64_t)v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2474A8B30(0, v87[2] + 1, 1);
          uint64_t v39 = (uint64_t)v87;
        }
        unint64_t v41 = *(void *)(v39 + 16);
        unint64_t v40 = *(void *)(v39 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_2474A8B30(v40 > 1, v41 + 1, 1);
          uint64_t v39 = (uint64_t)v87;
        }
        ++v24;
        *(void *)(v39 + 16) = v41 + 1;
        uint64_t v42 = (void *)(v39 + 40 * v41);
        v42[4] = v29;
        v42[5] = v31;
        v42[6] = v33;
        v42[7] = v36;
        v42[8] = v38;
        unint64_t v21 = v85;
      }
      while (buf != v24);
      swift_bridgeObjectRelease();
      uint64_t v23 = a4;
      goto LABEL_39;
    }
    __break(1u);
    goto LABEL_48;
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = MEMORY[0x263F8EE78];
LABEL_39:
  uint64_t v67 = qword_269250378;
  swift_bridgeObjectRetain();
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_2474B0EC0();
  __swift_project_value_buffer(v68, (uint64_t)qword_269257DE8);
  unint64_t v69 = v80;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v70 = sub_2474B0EA0();
  os_log_type_t v71 = sub_2474B1170();
  if (os_log_type_enabled(v70, v71))
  {
    unint64_t v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    uint64_t v88 = v86;
    *(_DWORD *)unint64_t v72 = 136315138;
    uint64_t v73 = v75;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2474B0FA0();
    swift_bridgeObjectRetain();
    uint64_t v74 = v78;
    sub_2474B0FA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    int v87 = (void *)sub_247464D64(v75, v16, &v88);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v69 = v80;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24743A000, v70, v71, "Found invitation destination: %s", v72, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v86, -1, -1);
    MEMORY[0x24C557100](v72, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v74 = v78;
    uint64_t v73 = v75;
  }
  *uint64_t v77 = v79;
  v77[1] = v69;
  v77[2] = v73;
  v77[3] = v16;
  v77[4] = v39;
  v77[5] = v76;
  v77[6] = v74;
  v77[7] = v23;
}

uint64_t sub_24749FDA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_2474B0F00();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24749FE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  return MEMORY[0x270FA2498](sub_24749FE74, 0, 0);
}

uint64_t sub_24749FE74()
{
  uint64_t v22 = v0;
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2474B0EC0();
  v0[18] = __swift_project_value_buffer(v1, (uint64_t)qword_26B12CCE8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_2474B0EA0();
  os_log_type_t v3 = sub_2474B1170();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[16];
  if (v4)
  {
    uint64_t v18 = v0[15];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x24C556510](v7, MEMORY[0x263F8D310]);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[12] = sub_247464D64(v8, v10, &v21);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[13] = sub_247464D64(v18, v5, &v21);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24743A000, v2, v3, "Querying destinations %s on service %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v19, -1, -1);
    MEMORY[0x24C557100](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v13 = v0[15];
  int64_t v14 = (void *)swift_task_alloc();
  v0[19] = v14;
  v14[2] = v11;
  v14[3] = v13;
  void v14[4] = v12;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269251B90 + dword_269251B90);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[20] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_2474A0174;
  uint64_t v16 = v0[14];
  return v20((uint64_t)&unk_269251B88, (uint64_t)v14, v16);
}

uint64_t sub_2474A0174(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2474A0294, 0, 0);
}

uint64_t sub_2474A0294()
{
  uint64_t v33 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_2474B0EA0();
  os_log_type_t v2 = sub_2474B1170();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = v0[21];
  if (v3)
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v29 = v27;
    *(_DWORD *)unint64_t v5 = 136315138;
    int64_t v6 = *(void *)(v4 + 16);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v6)
    {
      id v25 = v5;
      uint64_t v26 = v1;
      uint64_t v8 = v0[21];
      uint64_t v30 = MEMORY[0x263F8EE78];
      sub_2474A8AF0(0, v6, 0);
      uint64_t v7 = v30;
      unint64_t v9 = (uint64_t *)(v8 + 48);
      do
      {
        uint64_t v10 = v9[1];
        uint64_t v31 = *v9;
        uint64_t v32 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_2474B0FA0();
        swift_bridgeObjectRetain();
        sub_2474B0FA0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2474B0FA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v31;
        uint64_t v30 = v7;
        unint64_t v13 = *(void *)(v7 + 16);
        unint64_t v12 = *(void *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_2474A8AF0(v12 > 1, v13 + 1, 1);
          uint64_t v7 = v30;
        }
        *(void *)(v7 + 16) = v13 + 1;
        uint64_t v14 = v7 + 16 * v13;
        *(void *)(v14 + 32) = v11;
        *(void *)(v14 + 40) = v10;
        v9 += 8;
        --v6;
      }
      while (v6);
      unint64_t v5 = v25;
      uint64_t v1 = v26;
    }
    uint64_t v15 = MEMORY[0x24C556510](v7, MEMORY[0x263F8D310]);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[11] = sub_247464D64(v15, v17, &v29);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24743A000, v1, v2, "Found cached results %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v27, -1, -1);
    MEMORY[0x24C557100](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v19 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v20 = v0[15];
  uint64_t v21 = (void *)swift_task_alloc();
  v0[22] = v21;
  v21[2] = v18;
  v21[3] = v20;
  v21[4] = v19;
  id v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269251BA8 + dword_269251BA8);
  uint64_t v22 = (void *)swift_task_alloc();
  v0[23] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_2474A062C;
  uint64_t v23 = v0[14];
  return v28((uint64_t)&unk_269251BA0, (uint64_t)v21, v23);
}

uint64_t sub_2474A062C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 192) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v3 + 200) = v5;
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = sub_2474A07BC;
  uint64_t v6 = *(void *)(v3 + 120);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v3 + 128);
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = v6;
  return MEMORY[0x270FA2498](sub_24749DE4C, 0, 0);
}

uint64_t sub_2474A07BC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2474A092C, 0, 0);
  }
}

uint64_t sub_2474A092C()
{
  uint64_t v44 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_2474B0EA0();
  os_log_type_t v2 = sub_2474B1170();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = *(void *)(v0 + 208);
  if (v3)
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v40 = v38;
    *(_DWORD *)uint64_t v5 = 136315138;
    int64_t v6 = *(void *)(v4 + 16);
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (v6)
    {
      uint64_t v33 = v5;
      uint64_t v34 = v1;
      uint64_t v8 = *(void *)(v0 + 208);
      uint64_t v41 = MEMORY[0x263F8EE78];
      sub_2474A8AF0(0, v6, 0);
      uint64_t v7 = v41;
      unint64_t v9 = (uint64_t *)(v8 + 48);
      do
      {
        uint64_t v10 = v9[1];
        uint64_t v42 = *v9;
        uint64_t v43 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_2474B0FA0();
        swift_bridgeObjectRetain();
        sub_2474B0FA0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2474B0FA0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v42;
        uint64_t v41 = v7;
        unint64_t v13 = *(void *)(v7 + 16);
        unint64_t v12 = *(void *)(v7 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_2474A8AF0(v12 > 1, v13 + 1, 1);
          uint64_t v7 = v41;
        }
        *(void *)(v7 + 16) = v13 + 1;
        uint64_t v14 = v7 + 16 * v13;
        *(void *)(v14 + 32) = v11;
        *(void *)(v14 + 40) = v10;
        v9 += 8;
        --v6;
      }
      while (v6);
      uint64_t v5 = v33;
      uint64_t v1 = v34;
    }
    uint64_t v15 = MEMORY[0x24C556510](v7, MEMORY[0x263F8D310]);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_247464D64(v15, v17, &v40);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24743A000, v1, v2, "Fetched new results %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v38, -1, -1);
    MEMORY[0x24C557100](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v18 = *(void *)(v0 + 208);
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v0 + 216) = v19;
  if (v19)
  {
    uint64_t v20 = *(void **)(v0 + 136);
    *(void *)(v0 + 224) = 0;
    uint64_t v21 = *(void *)(v18 + 32);
    uint64_t v22 = *(void *)(v18 + 40);
    *(void *)(v0 + 232) = v22;
    uint64_t v23 = *(void *)(v18 + 56);
    uint64_t v37 = *(void *)(v18 + 48);
    uint64_t v39 = v21;
    *(void *)(v0 + 240) = v23;
    uint64_t v24 = *(void *)(v18 + 64);
    *(void *)(v0 + 248) = v24;
    char v35 = *(unsigned char *)(v18 + 72);
    uint64_t v25 = *(void *)(v18 + 80);
    uint64_t v26 = *(void *)(v18 + 88);
    *(void *)(v0 + 256) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v20[3];
    uint64_t v28 = v20[4];
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v20, v27);
    *(void *)(v0 + 16) = v39;
    *(void *)(v0 + 24) = v22;
    *(void *)(v0 + 32) = v37;
    *(void *)(v0 + 40) = v23;
    *(void *)(v0 + 48) = v24;
    *(unsigned char *)(v0 + 56) = v35;
    *(void *)(v0 + 64) = v25;
    *(void *)(v0 + 72) = v26;
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8)
                                                                                                + **(int **)(v28 + 8));
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_2474A0DF0;
    return v36(v0 + 16, v37, v23, v25, v26, v27, v28);
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 168);
    sub_2474A5C5C(v18);
    uint64_t v31 = v42;
    uint64_t v32 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v32(v31);
  }
}

uint64_t sub_2474A0DF0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2474A0EEC, 0, 0);
}

uint64_t sub_2474A0EEC()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v0 + 168);
    sub_2474A5C5C(*(void *)(v0 + 208));
    BOOL v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v20);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 224) + 1;
    *(void *)(v0 + 224) = v5;
    int64_t v6 = *(void **)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 208) + (v5 << 6);
    uint64_t v8 = *(void *)(v7 + 40);
    uint64_t v19 = *(void *)(v7 + 32);
    *(void *)(v0 + 232) = v8;
    uint64_t v10 = *(void *)(v7 + 48);
    uint64_t v9 = *(void *)(v7 + 56);
    *(void *)(v0 + 240) = v9;
    uint64_t v11 = *(void *)(v7 + 64);
    *(void *)(v0 + 248) = v11;
    char v17 = *(unsigned char *)(v7 + 72);
    uint64_t v12 = *(void *)(v7 + 80);
    uint64_t v13 = *(void *)(v7 + 88);
    *(void *)(v0 + 256) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v6[3];
    uint64_t v15 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v14);
    *(void *)(v0 + 16) = v19;
    *(void *)(v0 + 24) = v8;
    *(void *)(v0 + 32) = v10;
    *(void *)(v0 + 40) = v9;
    *(void *)(v0 + 48) = v11;
    *(unsigned char *)(v0 + 56) = v17;
    *(void *)(v0 + 64) = v12;
    *(void *)(v0 + 72) = v13;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8)
                                                                                                + **(int **)(v15 + 8));
    unint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v16;
    *unint64_t v16 = v0;
    v16[1] = sub_2474A0DF0;
    return v18(v0 + 16, v10, v9, v12, v13, v14, v15);
  }
}

uint64_t sub_2474A1138(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  id v5[2] = a1;
  v5[3] = a3;
  uint64_t v6 = a2[1];
  v5[6] = *a2;
  v5[7] = v6;
  return MEMORY[0x270FA2498](sub_2474A1164, 0, 0);
}

uint64_t sub_2474A1164()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16)
                                                                                              + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2474A1274;
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[2];
  return v11(v9, v5, v6, v7, v8, v2, v3);
}

uint64_t sub_2474A1274()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2474A136C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a2;
  v4[3] = a3;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  v4[4] = a4;
  v4[5] = v5;
  v4[6] = v6;
  return MEMORY[0x270FA2498](sub_2474A1398, 0, 0);
}

uint64_t sub_2474A1398()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24)
                                                                                     + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2474A14A4;
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  return v10(v6, v5, v7, v8, v2, v3);
}

uint64_t sub_2474A14A4(char a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(BOOL))(v5 + 8);
  return v3((a1 & 1) == 0);
}

uint64_t sub_2474A15A8(uint64_t a1, uint64_t *a2)
{
  long long v11 = *(_OWORD *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(_OWORD *)(v7 + 24) = v11;
  *(void *)(v7 + 8) = sub_2474577A0;
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  *(void *)(v7 + 40) = v6;
  *(void *)(v7 + 48) = v8;
  *(void *)(v7 + 56) = v9;
  return MEMORY[0x270FA2498](sub_2474A1164, 0, 0);
}

uint64_t sub_2474A167C(uint64_t *a1)
{
  long long v9 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_2474747D8;
  *(_OWORD *)(v5 + 16) = v9;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v6;
  *(void *)(v5 + 48) = v7;
  return MEMORY[0x270FA2498](sub_2474A1398, 0, 0);
}

void *sub_2474A174C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C9F0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2474A1A24((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2474A2008();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void sub_2474A1834(uint64_t a1)
{
  sub_24749E570(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2474A1840()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251BC0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_2474A1904(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269251BC0);
  return sub_24749EAB0(a1, a2);
}

unint64_t sub_2474A19C4()
{
  unint64_t result = qword_269251BC8;
  if (!qword_269251BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251BC8);
  }
  return result;
}

void sub_2474A1A18(void *a1@<X1>, _OWORD *a2@<X8>)
{
  sub_24749F2E0(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_2474A1A24(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    id v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  long long v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *long long v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_2474A1C24(unint64_t a1, void (*a2)(void **__return_ptr, id, id))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v35 = 0;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = sub_2474B1330() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v35 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v33 = (void *)MEMORY[0x263F8EE78];
  int64_t v34 = (unint64_t)(v3 + 64) >> 6;
LABEL_8:
  int64_t v10 = v9;
  unint64_t v11 = v4;
  while (1)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      uint64_t v20 = sub_2474B1340();
      if (!v20) {
        goto LABEL_39;
      }
      uint64_t v22 = v21;
      uint64_t v43 = v20;
      sub_2474736DC(0, &qword_269251BD8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v36;
      swift_unknownObjectRelease();
      uint64_t v43 = v22;
      sub_2474736DC(0, &qword_269251BE0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v16 = v36;
      swift_unknownObjectRelease();
      int64_t v9 = v10;
      uint64_t v4 = v11;
      if (!v15) {
        goto LABEL_39;
      }
      goto LABEL_11;
    }
    if (!v11) {
      break;
    }
    uint64_t v4 = (v11 - 1) & v11;
    unint64_t v12 = __clz(__rbit64(v11)) | (v10 << 6);
    int64_t v9 = v10;
LABEL_10:
    uint64_t v13 = 8 * v12;
    int64_t v14 = *(void **)(*(void *)(v5 + 56) + v13);
    id v15 = *(id *)(*(void *)(v5 + 48) + v13);
    id v16 = v14;
    if (!v15) {
      goto LABEL_39;
    }
LABEL_11:
    a2(&v36, v15, v16);

    uint64_t v17 = v37;
    int64_t v10 = v9;
    unint64_t v11 = v4;
    if (v37)
    {
      uint64_t v24 = v36;
      uint64_t v25 = v38;
      long long v29 = v39;
      uint64_t v31 = v41;
      char v32 = v40;
      uint64_t v30 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_247464A88(0, v33[2] + 1, 1, v33);
      }
      unint64_t v27 = v33[2];
      unint64_t v26 = v33[3];
      if (v27 >= v26 >> 1) {
        uint64_t v33 = sub_247464A88((void *)(v26 > 1), v27 + 1, 1, v33);
      }
      void v33[2] = v27 + 1;
      uint64_t v28 = &v33[8 * v27];
      v28[4] = v24;
      v28[5] = v17;
      v28[6] = v25;
      *(_OWORD *)(v28 + 7) = v29;
      *((unsigned char *)v28 + 72) = v32;
      v28[10] = v31;
      v28[11] = v30;
      goto LABEL_8;
    }
  }
  int64_t v9 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v9 >= v34) {
      goto LABEL_39;
    }
    unint64_t v18 = *(void *)(v35 + 8 * v9);
    if (!v18)
    {
      int64_t v19 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_39;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (v18) {
        goto LABEL_23;
      }
      int64_t v19 = v10 + 3;
      if (v10 + 3 >= v34) {
        goto LABEL_39;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (v18) {
        goto LABEL_23;
      }
      int64_t v19 = v10 + 4;
      if (v10 + 4 >= v34) {
        goto LABEL_39;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (v18)
      {
LABEL_23:
        int64_t v9 = v19;
      }
      else
      {
        int64_t v9 = v10 + 5;
        if (v10 + 5 >= v34) {
          goto LABEL_39;
        }
        unint64_t v18 = *(void *)(v35 + 8 * v9);
        if (!v18)
        {
          int64_t v23 = v10 + 6;
          while (v34 != v23)
          {
            unint64_t v18 = *(void *)(v35 + 8 * v23++);
            if (v18)
            {
              int64_t v9 = v23 - 1;
              goto LABEL_24;
            }
          }
LABEL_39:
          sub_2474A2008();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v4 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_2474A2008()
{
  return swift_release();
}

uint64_t sub_2474A2010(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2474A206C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251BF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_2474A20CC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

ValueMetadata *type metadata accessor for InvitationDestinationQuery()
{
  return &type metadata for InvitationDestinationQuery;
}

ActivitySharingClient::InvitationDestinationReachability_optional __swiftcall InvitationDestinationReachability.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (ActivitySharingClient::InvitationDestinationReachability_optional)rawValue;
}

uint64_t InvitationDestinationReachability.rawValue.getter()
{
  return *v0;
}

unint64_t sub_2474A210C()
{
  unint64_t result = qword_269251C00;
  if (!qword_269251C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251C00);
  }
  return result;
}

ActivitySharingClient::InvitationDestinationReachability_optional sub_2474A2160(Swift::Int *a1)
{
  return InvitationDestinationReachability.init(rawValue:)(*a1);
}

uint64_t sub_2474A2168()
{
  return sub_2474B1030();
}

uint64_t sub_2474A21C8()
{
  return sub_2474B0FF0();
}

unsigned char *storeEnumTagSinglePayload for InvitationDestinationReachability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2474A22E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationDestinationReachability()
{
  return &type metadata for InvitationDestinationReachability;
}

unint64_t sub_2474A231C()
{
  unint64_t result = qword_269251C08;
  if (!qword_269251C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251C08);
  }
  return result;
}

uint64_t SecureCloudClient.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t result = XPCClient.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for XPCClient;
  *a1 = result;
  return result;
}

uint64_t SecureCloudClient.activate()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24744F3DC, 0, 0);
}

uint64_t SecureCloudClient.acceptInvite(from:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A240C, 0, 0);
}

uint64_t sub_2474A240C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  int64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  unsigned int v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_2474A2544;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1105, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t sub_2474A2544()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2474504D4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t SecureCloudClient.withdrawInvite(to:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A269C, 0, 0);
}

uint64_t sub_2474A269C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  int64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  unsigned int v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1106, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t sub_2474A27D4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247451080, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t SecureCloudClient.ignoreInvite(from:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A292C, 0, 0);
}

uint64_t sub_2474A292C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  int64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  unsigned int v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1107, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.setMuteEnabled(setMuteEnabledTransportItem:)(uint64_t a1)
{
  *(unsigned char *)(v2 + 80) = *(unsigned char *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 40) = v1;
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v4;
  return MEMORY[0x270FA2498](sub_2474A2A94, 0, 0);
}

uint64_t sub_2474A2A94()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 40);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v1;
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v6 + 32)
                                                                                                + **(int **)(v6 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2474A2BD0;
  return v9(1158, v0 + 16, &type metadata for SetMuteEnabledTransportItem, &protocol witness table for SetMuteEnabledTransportItem, v5, v6);
}

uint64_t sub_2474A2BD0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247451084, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t SecureCloudClient.setActivityDataVisible(setActivityDataVisibleTransportItem:)(uint64_t a1)
{
  *(unsigned char *)(v2 + 80) = *(unsigned char *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 40) = v1;
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v4;
  return MEMORY[0x270FA2498](sub_2474A2D34, 0, 0);
}

uint64_t sub_2474A2D34()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 40);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v1;
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v6 + 32)
                                                                                                + **(int **)(v6 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2474A2E70;
  return v9(1159, v0 + 16, &type metadata for SetActivityDataVisibleTransportItem, &protocol witness table for SetActivityDataVisibleTransportItem, v5, v6);
}

uint64_t sub_2474A2E70()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247450A28, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t SecureCloudClient.removeFriend(_:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A2FC8, 0, 0);
}

uint64_t sub_2474A2FC8()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  int64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1157, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.invalidate()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24744F4FC, 0, 0);
}

uint64_t SecureCloudClient.pushData()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2474A3140, 0, 0);
}

uint64_t sub_2474A3140()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24744F5FC;
  return v6(1101, v2, v3);
}

uint64_t SecureCloudClient.fetchData()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2474A3264, 0, 0);
}

uint64_t sub_2474A3264()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24745106C;
  return v6(1102, v2, v3);
}

uint64_t SecureCloudClient.sendInvitation(destination:callerIdentifier:serviceIdentifier:additionalServiceIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[15] = a7;
  unsigned char v8[16] = v7;
  v8[13] = a5;
  v8[14] = a6;
  v8[11] = a3;
  v8[12] = a4;
  v8[9] = a1;
  v8[10] = a2;
  return MEMORY[0x270FA2498](sub_2474A3394, 0, 0);
}

uint64_t sub_2474A3394()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = (void *)v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v9 = v1[4];
  uint64_t v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v13);
  v0[2] = v7;
  v0[3] = v8;
  v0[4] = v5;
  v0[5] = v6;
  v0[6] = v4;
  v0[7] = v3;
  v0[8] = v2;
  unint64_t v12 = (uint64_t (*)(uint64_t, void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v9 + 32)
                                                                                                  + **(int **)(v9 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[17] = v10;
  void *v10 = v0;
  v10[1] = sub_2474A3508;
  return v12(1103, v0 + 2, &type metadata for InvitationRequestItem, &protocol witness table for InvitationRequestItem, v13, v9);
}

uint64_t sub_2474A3508()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2474A36C4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2474A36C4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SecureCloudClient.pingDestination(_:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A3700, 0, 0);
}

uint64_t sub_2474A3700()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1150, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.upgradeFriend(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A385C, 0, 0);
}

uint64_t sub_2474A385C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1108, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.migrateFriend(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A39B8, 0, 0);
}

uint64_t sub_2474A39B8()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1110, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.fetchCloudDevices()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_2474A3B10, 0, 0);
}

uint64_t sub_2474A3B10()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v3 + 48)
                                                                                             + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C710);
  unint64_t v6 = sub_2474A3D64();
  *uint64_t v4 = v0;
  v4[1] = sub_2474A3C50;
  return v8(v0 + 16, 1111, v5, v6, v2, v3);
}

uint64_t sub_2474A3C50()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247470350;
  }
  else {
    uint64_t v2 = sub_2474725F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

unint64_t sub_2474A3D64()
{
  unint64_t result = qword_26B12C7F0;
  if (!qword_26B12C7F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B12C710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B12C7F0);
  }
  return result;
}

uint64_t SecureCloudClient.requestDowngrade(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A3DF4, 0, 0);
}

uint64_t sub_2474A3DF4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  unint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1153, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.acknowledgeDowngradeRequest(friendIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A3F50, 0, 0);
}

uint64_t sub_2474A3F50()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  unint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1156, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

uint64_t SecureCloudClient.repairFriend(_:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_2474A40AC, 0, 0);
}

uint64_t sub_2474A40AC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  v0[2] = v3;
  v0[3] = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v5 + 32)
                                                                                         + **(int **)(v5 + 32));
  unint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_2474A27D4;
  uint64_t v7 = MEMORY[0x263F8D310];
  return v9(1160, v0 + 2, v7, &protocol witness table for String, v4, v5);
}

ValueMetadata *type metadata accessor for SecureCloudClient()
{
  return &type metadata for SecureCloudClient;
}

void __swiftcall InvitationRequestItem.init(destination:localCallerIdentifier:preferredServiceIdentifier:additionalServiceIdentifiers:)(ActivitySharingClient::InvitationRequestItem *__return_ptr retstr, Swift::String destination, Swift::String localCallerIdentifier, Swift::String preferredServiceIdentifier, Swift::OpaquePointer additionalServiceIdentifiers)
{
  retstr->destination = destination;
  retstr->localCallerIdentifier = localCallerIdentifier;
  retstr->preferredServiceIdentifier = preferredServiceIdentifier;
  retstr->additionalServiceIdentifiers = additionalServiceIdentifiers;
}

uint64_t InvitationRequestItem.destination.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationRequestItem.localCallerIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationRequestItem.preferredServiceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InvitationRequestItem.additionalServiceIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_2474A42A0(char a1)
{
  unint64_t result = 0x74616E6974736564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2474A4348()
{
  return sub_2474A42A0(*v0);
}

uint64_t sub_2474A4350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2474A4ED0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2474A4378(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2474A4384(uint64_t a1)
{
  unint64_t v2 = sub_2474A4628();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2474A43C0(uint64_t a1)
{
  unint64_t v2 = sub_2474A4628();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InvitationRequestItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251CA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v16 = v1[3];
  uint64_t v17 = v7;
  uint64_t v8 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v8;
  uint64_t v13 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474A4628();
  sub_2474B1550();
  char v23 = 0;
  uint64_t v9 = v18;
  sub_2474B1400();
  if (!v9)
  {
    uint64_t v10 = v13;
    char v22 = 1;
    sub_2474B1400();
    char v21 = 2;
    sub_2474B1400();
    uint64_t v19 = v10;
    char v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250978);
    sub_2474660D0(&qword_269250A18);
    sub_2474B1420();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2474A4628()
{
  unint64_t result = qword_269251CA8;
  if (!qword_269251CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CA8);
  }
  return result;
}

uint64_t InvitationRequestItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269251CB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474A4628();
  sub_2474B1540();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_2474B13C0();
  uint64_t v11 = v10;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2474B13C0();
  uint64_t v24 = v13;
  uint64_t v21 = v12;
  uint64_t v22 = v9;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v20 = sub_2474B13C0();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250978);
  char v26 = 3;
  sub_2474660D0(&qword_269250980);
  swift_bridgeObjectRetain();
  sub_2474B13E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v25;
  swift_bridgeObjectRetain();
  uint64_t v18 = v15;
  uint64_t v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v11;
  a2[2] = v21;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v18;
  a2[6] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2474A4A10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return InvitationRequestItem.init(from:)(a1, a2);
}

uint64_t sub_2474A4A28(void *a1)
{
  return InvitationRequestItem.encode(to:)(a1);
}

uint64_t destroy for InvitationRequestItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InvitationRequestItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InvitationRequestItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InvitationRequestItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvitationRequestItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvitationRequestItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationRequestItem()
{
  return &type metadata for InvitationRequestItem;
}

unsigned char *storeEnumTagSinglePayload for InvitationRequestItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2474A4D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvitationRequestItem.CodingKeys()
{
  return &type metadata for InvitationRequestItem.CodingKeys;
}

unint64_t sub_2474A4DCC()
{
  unint64_t result = qword_269251CB8;
  if (!qword_269251CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CB8);
  }
  return result;
}

unint64_t sub_2474A4E24()
{
  unint64_t result = qword_269251CC0;
  if (!qword_269251CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CC0);
  }
  return result;
}

unint64_t sub_2474A4E7C()
{
  unint64_t result = qword_269251CC8;
  if (!qword_269251CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CC8);
  }
  return result;
}

uint64_t sub_2474A4ED0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002474B7A00 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002474B7A20 || (sub_2474B1470() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002474B7A40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2474A508C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t InvitationDestinationEndpointCapabilities.rawValue.getter()
{
  return *(void *)v0;
}

ActivitySharingClient::InvitationDestinationEndpointCapabilities __swiftcall InvitationDestinationEndpointCapabilities.init(rawValue:)(ActivitySharingClient::InvitationDestinationEndpointCapabilities rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

unint64_t sub_2474A50F8()
{
  unint64_t result = qword_269251CD0;
  if (!qword_269251CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CD0);
  }
  return result;
}

unint64_t sub_2474A5150()
{
  unint64_t result = qword_269251CD8;
  if (!qword_269251CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CD8);
  }
  return result;
}

unint64_t sub_2474A51A8()
{
  unint64_t result = qword_269251CE0;
  if (!qword_269251CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CE0);
  }
  return result;
}

unint64_t sub_2474A5200()
{
  unint64_t result = qword_269251CE8;
  if (!qword_269251CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251CE8);
  }
  return result;
}

void *sub_2474A5254@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_2474A5268@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_2474A527C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2474A5290(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2474A52C0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2474A52EC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_2474A5310(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2474A5324(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_2474A5338(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_2474A534C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2474A5360(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2474A5374(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2474A5388(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2474A539C()
{
  return *v0 == 0;
}

uint64_t sub_2474A53AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_2474A53C4(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_2474A53D8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_2474A53EC()
{
  return sub_2474B1030();
}

uint64_t sub_2474A544C()
{
  return sub_2474B0FF0();
}

ValueMetadata *type metadata accessor for InvitationDestinationEndpointCapabilities()
{
  return &type metadata for InvitationDestinationEndpointCapabilities;
}

uint64_t sub_2474A54B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = (uint64_t (*)(void *))result;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a3 + 48);
    uint64_t v7 = MEMORY[0x263F8EE78];
    while (v5 < *(void *)(a3 + 16))
    {
      uint64_t v8 = *(v6 - 1);
      long long v22 = *(_OWORD *)(v6 + 1);
      char v9 = *((unsigned char *)v6 + 24);
      uint64_t v10 = v6[4];
      uint64_t v11 = v6[5];
      uint64_t v20 = *v6;
      uint64_t v21 = *(v6 - 2);
      v23[0] = v21;
      v23[1] = v8;
      v23[2] = v20;
      long long v24 = v22;
      char v19 = v9;
      char v25 = v9;
      uint64_t v18 = v10;
      uint64_t v26 = v10;
      uint64_t v27 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = v17(v23);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v12)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = v7;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_2474A8B50(0, *(void *)(v7 + 16) + 1, 1);
          uint64_t v7 = v28;
        }
        unint64_t v14 = *(void *)(v7 + 16);
        unint64_t v13 = *(void *)(v7 + 24);
        uint64_t v3 = 0;
        if (v14 >= v13 >> 1)
        {
          unint64_t result = sub_2474A8B50(v13 > 1, v14 + 1, 1);
          uint64_t v3 = 0;
          uint64_t v7 = v28;
        }
        *(void *)(v7 + 16) = v14 + 1;
        uint64_t v15 = v7 + (v14 << 6);
        *(void *)(v15 + 32) = v21;
        *(void *)(v15 + 40) = v8;
        *(void *)(v15 + 48) = v20;
        *(_OWORD *)(v15 + 56) = v22;
        *(unsigned char *)(v15 + 72) = v19;
        *(void *)(v15 + 80) = v18;
        *(void *)(v15 + 88) = v11;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        uint64_t v3 = 0;
      }
      ++v5;
      v6 += 8;
      if (v16 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_16:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_2474A56DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2474A8B70(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (unint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_247442FA0(v5, *v4);
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_2474A8B70(v7 > 1, v8 + 1, 1);
      }
      v4 += 5;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2474A57B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return MEMORY[0x270FA2498](sub_2474A57DC, 0, 0);
}

uint64_t sub_2474A57DC()
{
  v0[4] = MEMORY[0x263F8EE78];
  int64_t v1 = (void *)v0[8];
  uint64_t v2 = v1[2];
  v0[9] = v2;
  if (v2)
  {
    uint64_t v3 = (int *)v0[6];
    v0[10] = 0;
    uint64_t v4 = v1[4];
    uint64_t v5 = v1[5];
    swift_bridgeObjectRetain();
    v0[2] = v4;
    v0[3] = v5;
    uint64_t v10 = (int *)((char *)v3 + *v3);
    swift_bridgeObjectRetain();
    unint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    *unint64_t v6 = v0;
    v6[1] = sub_2474A5954;
    return ((uint64_t (*)(void *, void *))v10)(v0 + 5, v0 + 2);
  }
  else
  {
    unint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v9 = MEMORY[0x263F8EE78];
    return v8(v9);
  }
}

uint64_t sub_2474A5954()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2474A5BEC;
  }
  else
  {
    uint64_t v2 = sub_2474A5A70;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2474A5A70()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10] + 1;
  sub_2474A5C5C(v0[5]);
  swift_bridgeObjectRelease();
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = v0[4];
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(v3);
  }
  else
  {
    uint64_t v6 = v0[10] + 1;
    v0[10] = v6;
    unint64_t v7 = (int *)v0[6];
    uint64_t v8 = *(void *)(v0[8] + 16 * v6 + 40);
    v0[2] = *(void *)(v0[8] + 16 * v6 + 32);
    v0[3] = v8;
    uint64_t v10 = (int *)((char *)v7 + *v7);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[11] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_2474A5954;
    return ((uint64_t (*)(void *, void *))v10)(v0 + 5, v0 + 2);
  }
}

uint64_t sub_2474A5BEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2474A5C5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_247464A88(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t InvitationDestinationService.init(cache:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247473550(a1, a2);
}

uint64_t sub_2474A5DB8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a1;
  v4[11] = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  v4[12] = a4;
  v4[13] = v5;
  v4[14] = v6;
  return MEMORY[0x270FA2498](sub_2474A5DE4, 0, 0);
}

uint64_t sub_2474A5DE4()
{
  sub_24748A6F0(v0[11], (uint64_t)(v0 + 2));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2474A5E8C;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  return sub_24749FE50(v4, v2, v3);
}

uint64_t sub_2474A5E8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_2474A6024;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_2474A5FB4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2474A5FB4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = (void *)v0[10];
  sub_2474ADFC4((uint64_t)(v0 + 2));
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_2474A6024()
{
  uint64_t v24 = v0;
  sub_2474ADFC4(v0 + 16);
  if (qword_269250378 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = sub_2474B0EC0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269257DE8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v1;
  uint64_t v5 = sub_2474B0EA0();
  os_log_type_t v6 = sub_2474B1160();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 128);
  unint64_t v9 = *(void *)(v0 + 112);
  if (v7)
  {
    uint64_t v20 = *(void *)(v0 + 104);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x24C556510](v11, MEMORY[0x263F8D310]);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 56) = sub_247464D64(v12, v14, &v23);
    sub_2474B1230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_247464D64(v20, v9, &v23);
    sub_2474B1230();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2112;
    id v15 = v8;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 72) = v16;
    sub_2474B1230();
    *uint64_t v21 = v16;

    _os_log_impl(&dword_24743A000, v5, v6, "Failed to query destinations %s on service identifier %s, error: %@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C398);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C557100](v22, -1, -1);
    MEMORY[0x24C557100](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = *(void **)(v0 + 80);

  *uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_2474A6384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = a3;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2474A54B0((uint64_t)sub_2474ADE60, (uint64_t)v19, v5);
  swift_bridgeObjectRetain();
  sub_2474A92C8(&v22);
  swift_bridgeObjectRelease();
  if (*(void *)(v22 + 16))
  {
    uint64_t v9 = *(void *)(v22 + 40);
    uint64_t v10 = *(void *)(v22 + 56);
    uint64_t v16 = *(void *)(v22 + 48);
    uint64_t v17 = *(void *)(v22 + 32);
    uint64_t v11 = *(void *)(v22 + 64);
    uint64_t v18 = *(unsigned __int8 *)(v22 + 72);
    uint64_t v13 = *(void *)(v22 + 80);
    uint64_t v12 = *(void *)(v22 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    *a5 = a1;
    a5[1] = a2;
    a5[2] = v17;
    a5[3] = v9;
    a5[4] = v16;
    a5[5] = v10;
    a5[6] = v11;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v15 = v18;
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v12 = 0;
    uint64_t v5 = 0;
    a5[6] = 0;
    *((_OWORD *)a5 + 1) = 0u;
    *((_OWORD *)a5 + 2) = 0u;
    *(_OWORD *)a5 = 0u;
  }
  a5[7] = v15;
  a5[8] = v13;
  a5[9] = v12;
  a5[10] = v5;
  return result;
}

uint64_t sub_2474A64E4(uint64_t *a1, uint64_t a2)
{
  if (*((unsigned char *)a1 + 40) != 1) {
    goto LABEL_36;
  }
  uint64_t v2 = a1[1];
  uint64_t v42 = *a1;
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[6];
  unint64_t v6 = a1[7];
  if ((v7 != 0xD00000000000002ELL || v6 != 0x80000002474B6580) && (sub_2474B1470() & 1) == 0)
  {
    if (sub_2474B0F50() == v7 && v20 == v6) {
      goto LABEL_30;
    }
    char v22 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v22)
    {
LABEL_29:
      char v19 = 1;
      return v19 & 1;
    }
    if (sub_2474B0F50() == v7 && v23 == v6)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      char v19 = 1;
      return v19 & 1;
    }
    char v25 = sub_2474B1470();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_29;
    }
    uint64_t v39 = v4;
    uint64_t v41 = v7;
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_2474B0EC0();
    __swift_project_value_buffer(v26, (uint64_t)qword_269257DE8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_2474B0EA0();
    uint64_t v28 = v3;
    os_log_type_t v29 = sub_2474B1160();
    if (os_log_type_enabled(v27, v29))
    {
      unint64_t v30 = v6;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v56 = v48;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_bridgeObjectRetain();
      sub_247464D64(v41, v30, &v56);
      sub_2474B1230();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      *((void *)&v49 + 1) = v2;
      uint64_t v50 = v39;
      uint64_t v51 = v28;
      uint64_t v52 = v5;
      char v53 = 1;
      uint64_t v54 = v41;
      unint64_t v55 = v30;
      unint64_t v32 = InvitationDestination.description.getter();
      *(void *)&long long v49 = sub_247464D64(v32, v33, &v56);
      sub_2474B1230();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24743A000, v27, v29, "Unexpected service %s for %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v48, -1, -1);
      MEMORY[0x24C557100](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
LABEL_36:
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v38 = v4;
  uint64_t v40 = v7;
  unint64_t v37 = v6;
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v35 = v5;
    uint64_t v36 = v2;
    uint64_t v9 = swift_bridgeObjectRetain() + 48;
    uint64_t v10 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v16 = *(void *)(v9 - 8);
      uint64_t v17 = *(void *)(v9 + 32);
      uint64_t v18 = *(void *)(v9 + 40);
      if (v17 != 0xD00000000000002ELL || v18 != 0x80000002474B6580)
      {
        char type = *(unsigned char *)(v9 + 24);
        uint64_t v44 = *(void *)v9;
        uint64_t v45 = *(void *)(v9 - 16);
        long long v47 = *(_OWORD *)(v9 + 8);
        if ((sub_2474B1470() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          *(void *)&long long v49 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2474A8B50(0, *(void *)(v10 + 16) + 1, 1);
            uint64_t v10 = v49;
          }
          char v11 = type;
          unint64_t v13 = *(void *)(v10 + 16);
          unint64_t v12 = *(void *)(v10 + 24);
          long long v14 = v47;
          if (v13 >= v12 >> 1)
          {
            sub_2474A8B50(v12 > 1, v13 + 1, 1);
            char v11 = type;
            long long v14 = v47;
            uint64_t v10 = v49;
          }
          *(void *)(v10 + 16) = v13 + 1;
          uint64_t v15 = v10 + (v13 << 6);
          *(void *)(v15 + 32) = v45;
          *(void *)(v15 + 40) = v16;
          *(void *)(v15 + 48) = v44;
          *(_OWORD *)(v15 + 56) = v14;
          *(unsigned char *)(v15 + 72) = v11;
          *(void *)(v15 + 80) = v17;
          *(void *)(v15 + 88) = v18;
        }
      }
      v9 += 64;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v2 = v36;
    uint64_t v5 = v35;
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  *(void *)&long long v49 = v42;
  *((void *)&v49 + 1) = v2;
  uint64_t v50 = v38;
  uint64_t v51 = v3;
  uint64_t v52 = v5;
  char v53 = 1;
  uint64_t v54 = v40;
  unint64_t v55 = v37;
  char v19 = sub_2474A6A54(&v49, v10);
  swift_release();
  return v19 & 1;
}

uint64_t sub_2474A6A54(long long *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v3 = a1[3];
  long long v45 = a1[2];
  long long v46 = v3;
  long long v4 = a1[1];
  long long v43 = *a1;
  long long v44 = v4;
  uint64_t v5 = *(void *)(v45 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v45 + 32 + 40 * v6);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      unint64_t v10 = v7[2];
      sub_247442FA0(v8, v10);
      uint64_t v11 = qword_269250370;
      swift_bridgeObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v12 = *(void *)(qword_269257DE0 + 16);
      if (v12) {
        break;
      }
LABEL_3:
      ++v6;
      sub_24743E4AC(v8, v10);
      swift_bridgeObjectRelease();
      if (v6 == v5)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v2 = a2;
        goto LABEL_19;
      }
    }
    unint64_t v13 = (uint64_t *)(qword_269257DE0 + 32);
    while (1)
    {
      uint64_t v14 = *v13++;
      if ((v14 & ~v9) != 0) {
        break;
      }
      if (!--v12) {
        goto LABEL_3;
      }
    }
    sub_24743E4AC(v8, v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_2474B0EC0();
    __swift_project_value_buffer(v15, (uint64_t)qword_269257DE8);
    sub_247485C30((uint64_t)&v43);
    sub_247485C30((uint64_t)&v43);
    uint64_t v16 = sub_2474B0EA0();
    os_log_type_t v17 = sub_2474B1160();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v42 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v38 = *((void *)&v43 + 1);
      long long v39 = v44;
      long long v40 = v45;
      long long v41 = v46;
      unint64_t v20 = InvitationDestination.description.getter();
      uint64_t v37 = sub_247464D64(v20, v21, &v42);
      sub_2474B1230();
      swift_bridgeObjectRelease();
      sub_2474ADE80((uint64_t)&v43);
      sub_2474ADE80((uint64_t)&v43);
      _os_log_impl(&dword_24743A000, v16, v17, "Some endpoints on invitation destination are missing capabilities %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v19, -1, -1);
      MEMORY[0x24C557100](v18, -1, -1);
    }
    else
    {
      sub_2474ADE80((uint64_t)&v43);
      sub_2474ADE80((uint64_t)&v43);
    }

    return 0;
  }
LABEL_19:
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_2474A56DC(v23);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_2474ADED4(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v2 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t *)(v2 + 48);
    while (1)
    {
      uint64_t v28 = v27[4];
      uint64_t v29 = v27[5];
      char v30 = *((unsigned char *)v27 + 24);
      uint64_t v32 = v27[1];
      uint64_t v31 = v27[2];
      uint64_t v34 = *(v27 - 1);
      uint64_t v33 = *v27;
      uint64_t v37 = *(v27 - 2);
      uint64_t v38 = v34;
      *(void *)&long long v39 = v33;
      *((void *)&v39 + 1) = v32;
      *(void *)&long long v40 = v31;
      BYTE8(v40) = v30;
      *(void *)&long long v41 = v28;
      *((void *)&v41 + 1) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v35 = sub_2474A6E34(&v37, v25, (uint64_t)&v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        break;
      }
      v27 += 8;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_2474A6E34(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1[3];
  unint64_t v6 = a1[7];
  uint64_t v30 = a1[2];
  uint64_t v31 = a1[6];
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_2474A56DC(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_2474ADED4(v8);
  swift_bridgeObjectRelease();
  char v10 = sub_2474ACF28(a2, v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    uint64_t v28 = a3;
    if (qword_269250378 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_2474B0EC0();
    __swift_project_value_buffer(v11, (uint64_t)qword_269257DE8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2474B0EA0();
    os_log_type_t type = sub_2474B1170();
    char v29 = v10;
    if (os_log_type_enabled(v12, type))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v33 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_247464D64(v30, v5, &v33);
      sub_2474B1230();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_247464D64(v31, v6, &v33);
      sub_2474B1230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24743A000, v12, type, "Invite service missing endpoints from %s - %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v14, -1, -1);
      MEMORY[0x24C557100](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247485C30(a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247485C30(a3);
    uint64_t v15 = sub_2474B0EA0();
    os_log_type_t v16 = sub_2474B1170();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = v32;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = MEMORY[0x24C556510](v18, &type metadata for InvitationDestinationEndpoint);
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      sub_247464D64(v19, v21, &v33);
      sub_2474B1230();
      swift_bridgeObjectRelease();
      sub_2474ADE80(v28);
      sub_2474ADE80(v28);
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = MEMORY[0x24C556510](v22, &type metadata for InvitationDestinationEndpoint);
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      sub_247464D64(v23, v25, &v33);
      sub_2474B1230();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24743A000, v15, v16, "Invite service endpoints: %s, other endpoints: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C557100](v32, -1, -1);
      MEMORY[0x24C557100](v17, -1, -1);
    }
    else
    {
      sub_2474ADE80(a3);
      sub_2474ADE80(a3);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    char v10 = v29;
  }
  return v10 & 1;
}

uint64_t InvitationDestinationService.fetchInvitationDestinationGroups(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2474A737C, 0, 0);
}

uint64_t sub_2474A737C()
{
  if (qword_26B12CCD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2474B0EC0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B12CCE8);
  sub_24743FD94(0xD00000000000007ALL, 0x80000002474B7A60, 0xD000000000000026, 0x80000002474B7AE0);
  if (qword_26B12C7E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26B12CCE0;
  int8x16_t v6 = v0[1];
  sub_24743FD94(0xD00000000000007ALL, 0x80000002474B7A60, 0xD000000000000033, 0x80000002474B7B10);
  long long v3 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v3;
  v3[1] = vextq_s8(v6, v6, 8uLL);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269251D08 + dword_269251D08);
  long long v4 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v4;
  *long long v4 = v0;
  v4[1] = sub_2474A754C;
  return v7((uint64_t)&unk_269251D00, (uint64_t)v3, v2);
}

uint64_t sub_2474A754C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2474A766C, 0, 0);
}

uint64_t sub_2474A766C()
{
  uint64_t v1 = *(void *)(v0[6] + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    uint64_t v4 = v2 + 48;
    while (1)
    {
      uint64_t v7 = *(void *)(v4 - 16);
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v8 = *(void *)v4;
      long long v37 = *(_OWORD *)(v4 + 8);
      char v9 = *(unsigned char *)(v4 + 24);
      uint64_t v10 = *(void *)(v4 + 40);
      uint64_t v35 = *(void *)(v4 + 32);
      uint64_t v11 = v3[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v34 = v1;
      char v36 = v9;
      if (v11)
      {
        swift_bridgeObjectRetain();
        unint64_t v12 = sub_2474588A0(v8, v37);
        uint64_t v13 = (void *)MEMORY[0x263F8EE78];
        if (v14)
        {
          uint64_t v13 = *(void **)(v3[7] + 8 * v12);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_247464A88(0, v13[2] + 1, 1, v13);
      }
      unint64_t v16 = v13[2];
      unint64_t v15 = v13[3];
      if (v16 >= v15 >> 1) {
        uint64_t v13 = sub_247464A88((void *)(v15 > 1), v16 + 1, 1, v13);
      }
      void v13[2] = v16 + 1;
      uint64_t v17 = &v13[8 * v16];
      v17[4] = v7;
      v17[5] = v6;
      v17[6] = v8;
      *(_OWORD *)(v17 + 7) = v37;
      *((unsigned char *)v17 + 72) = v36;
      v17[10] = v35;
      v17[11] = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v20 = sub_2474588A0(v8, v37);
      uint64_t v21 = v3[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t result = v21 + v22;
      if (__OFADD__(v21, v22))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return result;
      }
      char v24 = v19;
      if (v3[3] >= result)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v19) {
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t result = (uint64_t)sub_24745AE50();
          if (v24) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        sub_2474A87D4(result, isUniquelyReferenced_nonNull_native, &qword_269250878);
        uint64_t result = sub_2474588A0(v8, v37);
        if ((v24 & 1) != (v25 & 1))
        {
          return sub_2474B14B0();
        }
        unint64_t v20 = result;
        if (v24)
        {
LABEL_3:
          uint64_t v5 = v3[7];
          swift_bridgeObjectRelease();
          *(void *)(v5 + 8 * v20) = v13;
          goto LABEL_4;
        }
      }
      v3[(v20 >> 6) + 8] |= 1 << v20;
      uint64_t v26 = (uint64_t *)(v3[6] + 16 * v20);
      *uint64_t v26 = v8;
      v26[1] = v37;
      *(void *)(v3[7] + 8 * v20) = v13;
      uint64_t v27 = v3[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_34;
      }
      v3[2] = v29;
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 64;
      uint64_t v1 = v34 - 1;
      if (v34 == 1)
      {
        uint64_t v0 = v33;
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE80];
LABEL_27:
  uint64_t v30 = v0[3];
  swift_bridgeObjectRelease();
  *(void *)(swift_task_alloc() + 16) = v30;
  uint64_t v31 = sub_2474ADA94((uint64_t)v3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_2474A8AE8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(uint64_t))v0[1];
  return v32(v31);
}

uint64_t sub_2474A7A6C(uint64_t a1, void *a2)
{
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v2 + 16);
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_2474577A0;
  *(_OWORD *)(v6 + 88) = v7;
  *(void *)(v6 + 80) = a1;
  uint64_t v8 = a2[1];
  *(void *)(v6 + 104) = *a2;
  *(void *)(v6 + 112) = v8;
  return MEMORY[0x270FA2498](sub_2474A5DE4, 0, 0);
}

uint64_t sub_2474A7B34(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_247491DA8;
  return MEMORY[0x270FA2498](sub_2474A737C, 0, 0);
}

uint64_t sub_2474A7BE0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  long long v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_247442FA0(a2, a3);
      uint64_t v10 = (char *)sub_2474B0B60();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_2474B0B80();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_2474B0B70();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x2474A7E44);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      uint64_t __s1 = sub_24743E4AC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_2474B0B60();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_2474B0B80();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_2474B0B70();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      uint64_t __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        uint64_t __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_2474A7E54(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C390);
  uint64_t result = sub_2474B1380();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v29 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_2474B1510();
      sub_2474B1520();
      uint64_t result = sub_2474B1530();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2474A812C(uint64_t a1, char a2)
{
  return sub_2474A87D4(a1, a2, &qword_269250888);
}

uint64_t sub_2474A8138(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250890);
  char v40 = a2;
  uint64_t v6 = sub_2474B1380();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      unint64_t v32 = *(void *)(v5 + 56) + (v21 << 6);
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v43 = *(void *)(v32 + 16);
      long long v44 = *(_OWORD *)(v32 + 24);
      char v42 = *(unsigned char *)(v32 + 40);
      uint64_t v35 = *(void *)(v32 + 56);
      uint64_t v41 = *(void *)(v32 + 48);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2474B1510();
      sub_2474B0F80();
      uint64_t result = sub_2474B1530();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      unint64_t v19 = *(void *)(v7 + 56) + (v17 << 6);
      *(void *)unint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(void *)(v19 + 16) = v43;
      *(_OWORD *)(v19 + 24) = v44;
      *(unsigned char *)(v19 + 40) = v42;
      *(void *)(v19 + 48) = v41;
      *(void *)(v19 + 56) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2474A84AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269250880);
  char v42 = a2;
  uint64_t v6 = sub_2474B1380();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2474B1510();
    sub_2474B0F80();
    uint64_t result = sub_2474B1530();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2474A87D4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_2474B1380();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2474B1510();
    sub_2474B0F80();
    uint64_t result = sub_2474B1530();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2474A8AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_2474A6384(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_2474A8AF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2474A8B90(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2474A8B10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2474A8CFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2474A8B30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2474A8E6C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2474A8B50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2474A8FF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2474A8B70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2474A915C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2474A8B90(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B12C9F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_2474A8CFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C830);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_2474A8E6C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269251D40);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_2474A8FF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269250A00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_2474A915C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269251D28);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

uint64_t sub_2474A92C8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2474ADA80(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2474A9334(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2474A9334(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_2474B1440();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_272;
    }
    if (v4) {
      return sub_2474AA360(0, v4, 1, a1);
    }
    return result;
  }
  uint64_t v181 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_280;
  }
  uint64_t v185 = v4;
  v179 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v9 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v180 = MEMORY[0x263F8EE78];
    if (v4 != 1)
    {
      uint64_t v192 = v1;
      unint64_t v84 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_236:
      if (v84 >= 2)
      {
        uint64_t v170 = *v179;
        do
        {
          unint64_t v171 = v84 - 2;
          if (v84 < 2) {
            goto LABEL_265;
          }
          if (!v170) {
            goto LABEL_279;
          }
          v172 = v10;
          v173 = v10 + 32;
          uint64_t v174 = *(void *)&v10[16 * v171 + 32];
          uint64_t v175 = *(void *)&v10[16 * v84 + 24];
          v176 = v9;
          sub_2474AA814((char *)(v170 + (v174 << 6)), (char *)(v170 + (*(void *)&v173[16 * v84 - 16] << 6)), v170 + (v175 << 6), v9);
          if (v192) {
            break;
          }
          if (v175 < v174) {
            goto LABEL_267;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v172 = sub_2474AB35C((uint64_t)v172);
          }
          if (v171 >= *((void *)v172 + 2)) {
            goto LABEL_268;
          }
          v177 = &v172[16 * v171 + 32];
          *(void *)v177 = v174;
          *((void *)v177 + 1) = v175;
          unint64_t v178 = *((void *)v172 + 2);
          if (v84 > v178) {
            goto LABEL_269;
          }
          uint64_t v10 = v172;
          memmove(&v172[16 * v84 + 16], &v172[16 * v84 + 32], 16 * (v178 - v84));
          *((void *)v172 + 2) = v178 - 1;
          unint64_t v84 = v178 - 1;
          uint64_t v9 = v176;
        }
        while (v178 > 2);
      }
LABEL_247:
      swift_bridgeObjectRelease();
      *(void *)(v180 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_2474B1080();
    *(void *)(v8 + 16) = v7;
    uint64_t v180 = v8;
    uint64_t v9 = (char *)(v8 + 32);
  }
  __dst = v9;
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v13 = v185;
  uint64_t v195 = *a1;
  while (1)
  {
    v183 = v10;
    uint64_t v14 = v11++;
    uint64_t v15 = v13;
    uint64_t v202 = v14;
    if (v11 >= v13) {
      goto LABEL_120;
    }
    uint64_t v187 = v11;
    uint64_t v190 = v2;
    uint64_t v16 = v12 + (v11 << 6);
    uint64_t v18 = *(void *)(v16 + 48);
    uint64_t v17 = *(void *)(v16 + 56);
    uint64_t v19 = v12 + (v14 << 6);
    uint64_t v20 = *(void *)(v19 + 56);
    uint64_t v207 = *(void *)(v19 + 48);
    uint64_t v21 = qword_26B12C7E8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_26B12CCE0;
    unint64_t v24 = *(void *)(qword_26B12CCE0 + 16);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v31 = 0;
      uint64_t v14 = v202;
      goto LABEL_55;
    }
    uint64_t v26 = *(void *)(qword_26B12CCE0 + 32);
    uint64_t v25 = *(void *)(qword_26B12CCE0 + 40);
    uint64_t v27 = v22;
    if (v26 == v18 && v25 == v22)
    {
      uint64_t v29 = 0;
      if (v18 == v207 && v27 == v20)
      {
        uint64_t v30 = 0;
        goto LABEL_53;
      }
LABEL_40:
      if (sub_2474B1470())
      {
        uint64_t v30 = 0;
        goto LABEL_53;
      }
      if (v24 <= 1) {
        uint64_t v36 = 1;
      }
      else {
        uint64_t v36 = v24;
      }
      char v37 = (void *)(v23 + 56);
      uint64_t v38 = 1;
      while (v24 != v38)
      {
        uint64_t v30 = v38;
        if (v36 == v38) {
          goto LABEL_270;
        }
        if (*(v37 - 1) != v207 || v20 != *v37)
        {
          char v40 = sub_2474B1470();
          uint64_t v38 = v30 + 1;
          v37 += 2;
          if ((v40 & 1) == 0) {
            continue;
          }
        }
        goto LABEL_53;
      }
LABEL_233:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v31 = 0;
      goto LABEL_54;
    }
    if ((sub_2474B1470() & 1) == 0)
    {
      uint64_t v200 = v25;
      uint64_t v32 = (void *)(v23 + 56);
      uint64_t v33 = 1;
      while (v24 != v33)
      {
        uint64_t v29 = v33;
        if (*(v32 - 1) != v18 || *v32 != v27)
        {
          char v35 = sub_2474B1470();
          uint64_t v33 = v29 + 1;
          v32 += 2;
          if ((v35 & 1) == 0) {
            continue;
          }
        }
        if (v26 == v207 && v200 == v20)
        {
          uint64_t v30 = 0;
          goto LABEL_53;
        }
        goto LABEL_40;
      }
      goto LABEL_233;
    }
    uint64_t v29 = 0;
    if (v26 != v207 || v25 != v20) {
      goto LABEL_40;
    }
    uint64_t v30 = 0;
LABEL_53:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v31 = v30 >= v29;
LABEL_54:
    uint64_t v2 = v190;
    uint64_t v15 = v185;
    uint64_t v14 = v202;
LABEL_55:
    uint64_t v41 = v14 + 2;
    uint64_t v12 = v195;
    uint64_t v42 = v187;
    if (v14 + 2 < v15)
    {
      uint64_t v191 = v2;
      unint64_t v43 = *(void *)(qword_26B12CCE0 + 16);
      if (v43 <= 1) {
        uint64_t v44 = 1;
      }
      else {
        uint64_t v44 = *(void *)(qword_26B12CCE0 + 16);
      }
      uint64_t v208 = v44;
      uint64_t v206 = qword_26B12CCE0;
      uint64_t v204 = qword_26B12CCE0 + 56;
      BOOL v205 = v31;
      while (1)
      {
        if (!v43)
        {
          if (v31) {
            goto LABEL_231;
          }
          goto LABEL_61;
        }
        uint64_t v45 = v12 + (v41 << 6);
        uint64_t v46 = *(void *)(v45 + 48);
        uint64_t v47 = *(void *)(v45 + 56);
        uint64_t v48 = v12 + (v42 << 6);
        uint64_t v49 = *(void *)(v48 + 48);
        uint64_t v50 = *(void *)(v48 + 56);
        uint64_t v51 = *(void *)(v206 + 32);
        if (v51 == v46 && *(void *)(v206 + 40) == v47)
        {
          if (v46 == v49 && v47 == v50) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v53 = *(void *)(v206 + 40);
          if ((sub_2474B1470() & 1) == 0)
          {
            uint64_t v203 = v53;
            uint64_t v58 = (void *)v204;
            uint64_t v59 = 1;
            do
            {
              if (v43 == v59)
              {
                uint64_t v15 = v185;
                uint64_t v12 = v195;
                uint64_t v14 = v202;
                BOOL v31 = v205;
                if (!v205) {
                  goto LABEL_61;
                }
                goto LABEL_231;
              }
              uint64_t v56 = v59;
              if (*(v58 - 1) == v46 && *v58 == v47) {
                break;
              }
              char v61 = sub_2474B1470();
              uint64_t v59 = v56 + 1;
              v58 += 2;
            }
            while ((v61 & 1) == 0);
            if (v51 != v49)
            {
              uint64_t v15 = v185;
              uint64_t v14 = v202;
              goto LABEL_78;
            }
            uint64_t v15 = v185;
            uint64_t v14 = v202;
            BOOL v31 = v205;
            if (v203 != v50) {
              goto LABEL_78;
            }
            uint64_t v12 = v195;
            if (v205) {
              goto LABEL_109;
            }
            goto LABEL_61;
          }
          BOOL v54 = v51 == v49 && v53 == v50;
          uint64_t v12 = v195;
          if (v54)
          {
LABEL_80:
            uint64_t v15 = v185;
            uint64_t v14 = v202;
            if (!v31)
            {
              uint64_t v11 = v41;
              uint64_t v2 = v191;
              goto LABEL_120;
            }
            goto LABEL_61;
          }
        }
        uint64_t v56 = 0;
        uint64_t v15 = v185;
        uint64_t v14 = v202;
LABEL_78:
        if (sub_2474B1470())
        {
          uint64_t v57 = 0;
LABEL_101:
          BOOL v31 = v205;
          uint64_t v12 = v195;
          if (((v205 ^ (v57 < v56)) & 1) == 0) {
            goto LABEL_109;
          }
        }
        else
        {
          os_log_type_t v62 = (void *)v204;
          uint64_t v63 = 1;
          while (v43 != v63)
          {
            uint64_t v57 = v63;
            if (v208 == v63) {
              goto LABEL_253;
            }
            if (*(v62 - 1) != v49 || v50 != *v62)
            {
              char v65 = sub_2474B1470();
              uint64_t v63 = v57 + 1;
              v62 += 2;
              if ((v65 & 1) == 0) {
                continue;
              }
            }
            goto LABEL_101;
          }
          uint64_t v12 = v195;
          BOOL v31 = v205;
          if (v205)
          {
LABEL_231:
            uint64_t v2 = v191;
            if (v41 < v14) {
              goto LABEL_273;
            }
LABEL_112:
            if (v14 < v41)
            {
              uint64_t v66 = v41 << 6;
              uint64_t v67 = v14 << 6;
              uint64_t v68 = v41;
              uint64_t v69 = v14;
              do
              {
                if (v69 != --v68)
                {
                  if (!v12) {
                    goto LABEL_278;
                  }
                  uint64_t v70 = (_OWORD *)(v12 + v67);
                  long long v71 = *(_OWORD *)(v12 + v67);
                  uint64_t v72 = v12 + v66;
                  uint64_t v73 = *(void *)(v12 + v67 + 16);
                  char v74 = *(unsigned char *)(v12 + v67 + 40);
                  uint64_t v75 = *(void *)(v12 + v67 + 48);
                  uint64_t v76 = *(void *)(v12 + v67 + 56);
                  long long v77 = *(_OWORD *)(v12 + v67 + 24);
                  long long v78 = *(_OWORD *)(v12 + v66 - 16);
                  long long v80 = *(_OWORD *)(v12 + v66 - 64);
                  long long v79 = *(_OWORD *)(v12 + v66 - 48);
                  v70[2] = *(_OWORD *)(v12 + v66 - 32);
                  v70[3] = v78;
                  *uint64_t v70 = v80;
                  v70[1] = v79;
                  *(_OWORD *)(v72 - 64) = v71;
                  *(void *)(v72 - 48) = v73;
                  *(_OWORD *)(v72 - 40) = v77;
                  *(unsigned char *)(v72 - 24) = v74;
                  *(void *)(v72 - 16) = v75;
                  *(void *)(v72 - 8) = v76;
                }
                ++v69;
                v66 -= 64;
                v67 += 64;
              }
              while (v69 < v68);
            }
            uint64_t v11 = v41;
            goto LABEL_120;
          }
        }
LABEL_61:
        uint64_t v42 = v41++;
        if (v41 == v15)
        {
          uint64_t v41 = v15;
LABEL_109:
          uint64_t v2 = v191;
          break;
        }
      }
    }
    uint64_t v11 = v41;
    if (v31)
    {
      if (v41 < v14) {
        goto LABEL_273;
      }
      goto LABEL_112;
    }
LABEL_120:
    uint64_t v192 = v2;
    if (v11 >= v15) {
      goto LABEL_128;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_271;
    }
    if (v11 - v14 >= v181)
    {
LABEL_128:
      if (v11 < v14) {
        goto LABEL_266;
      }
      goto LABEL_129;
    }
    uint64_t v81 = v14 + v181;
    if (__OFADD__(v14, v181)) {
      goto LABEL_274;
    }
    if (v81 >= v15) {
      uint64_t v81 = v15;
    }
    if (v81 < v14) {
      break;
    }
    uint64_t v184 = v81;
    if (v11 == v81) {
      goto LABEL_128;
    }
    do
    {
      uint64_t v136 = v12 + (v11 << 6);
      uint64_t v138 = *(void *)(v136 + 48);
      uint64_t v137 = *(void *)(v136 + 56);
      uint64_t v189 = v11;
      while (1)
      {
        uint64_t v199 = v11;
        v139 = (void *)(v12 + ((v11 - 1) << 6));
        v197 = v139 + 4;
        uint64_t v201 = v139[6];
        v198 = v139 + 6;
        v196 = v139;
        uint64_t v140 = v139[7];
        uint64_t v141 = qword_26B12C7E8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v141 != -1) {
          swift_once();
        }
        uint64_t v142 = qword_26B12CCE0;
        unint64_t v143 = *(void *)(qword_26B12CCE0 + 16);
        if (!v143)
        {
LABEL_176:
          uint64_t v14 = v202;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = v195;
          goto LABEL_177;
        }
        BOOL v144 = *(void *)(qword_26B12CCE0 + 32) == v138 && *(void *)(qword_26B12CCE0 + 40) == v137;
        BOOL v145 = !v144;
        uint64_t v14 = v202;
        uint64_t v193 = *(void *)(qword_26B12CCE0 + 40);
        uint64_t v194 = v11 - 1;
        if (v144)
        {
          uint64_t v148 = 0;
          uint64_t v147 = v201;
          if (v138 == v201 && v137 == v140) {
            goto LABEL_205;
          }
        }
        else
        {
          uint64_t v146 = *(void *)(qword_26B12CCE0 + 32);
          uint64_t v147 = v201;
          if (sub_2474B1470())
          {
            uint64_t v148 = 0;
            if (v146 == v201)
            {
              uint64_t v14 = v202;
              if (v193 == v140)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v12 = v195;
                uint64_t v149 = v199;
                goto LABEL_223;
              }
            }
            else
            {
              uint64_t v14 = v202;
            }
          }
          else
          {
            uint64_t v186 = v146;
            v150 = (void *)(v142 + 56);
            uint64_t v151 = 1;
            do
            {
              if (v143 == v151) {
                goto LABEL_176;
              }
              uint64_t v148 = v151;
              if (*(v150 - 1) == v138 && *v150 == v137) {
                break;
              }
              char v153 = sub_2474B1470();
              uint64_t v151 = v148 + 1;
              v150 += 2;
            }
            while ((v153 & 1) == 0);
            uint64_t v14 = v202;
            if (v186 == v201 && v193 == v140)
            {
LABEL_205:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v12 = v195;
              uint64_t v149 = v199;
              if (!v145) {
                goto LABEL_223;
              }
              goto LABEL_177;
            }
          }
        }
        if (sub_2474B1470()) {
          break;
        }
        if (v143 <= 1) {
          uint64_t v154 = 1;
        }
        else {
          uint64_t v154 = v143;
        }
        v155 = (void *)(v142 + 56);
        uint64_t v156 = 1;
        do
        {
          if (v143 == v156) {
            goto LABEL_176;
          }
          uint64_t v157 = v156;
          if (v154 == v156)
          {
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
            goto LABEL_275;
          }
          if (*(v155 - 1) == v147 && v140 == *v155) {
            break;
          }
          char v159 = sub_2474B1470();
          uint64_t v156 = v157 + 1;
          v155 += 2;
        }
        while ((v159 & 1) == 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v195;
        uint64_t v14 = v202;
        uint64_t v149 = v199;
        if (v157 < v148) {
          goto LABEL_177;
        }
LABEL_223:
        if (!v12) {
          goto LABEL_276;
        }
        uint64_t v160 = v12 + (v149 << 6);
        uint64_t v162 = *(void *)v160;
        uint64_t v161 = *(void *)(v160 + 8);
        uint64_t v163 = *(void *)(v160 + 16);
        uint64_t v164 = *(void *)(v160 + 24);
        uint64_t v165 = *(void *)(v160 + 32);
        char v166 = *(unsigned char *)(v160 + 40);
        uint64_t v138 = *(void *)(v160 + 48);
        uint64_t v137 = *(void *)(v160 + 56);
        long long v167 = *((_OWORD *)v196 + 1);
        *(_OWORD *)uint64_t v160 = *(_OWORD *)v196;
        *(_OWORD *)(v160 + 16) = v167;
        long long v168 = *((_OWORD *)v196 + 3);
        *(_OWORD *)(v160 + 32) = *((_OWORD *)v196 + 2);
        *(_OWORD *)(v160 + 48) = v168;
        void *v196 = v162;
        v196[1] = v161;
        v196[2] = v163;
        v196[3] = v164;
        void *v197 = v165;
        *((unsigned char *)v196 + 40) = v166;
        uint64_t v11 = v194;
        void *v198 = v138;
        v198[1] = v137;
        if (v194 == v14) {
          goto LABEL_177;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v195;
      uint64_t v149 = v199;
      if (v148 <= 0) {
        goto LABEL_223;
      }
LABEL_177:
      uint64_t v11 = v189 + 1;
    }
    while (v189 + 1 != v184);
    uint64_t v11 = v184;
    if (v184 < v14) {
      goto LABEL_266;
    }
LABEL_129:
    uint64_t v10 = v183;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_2474AB1A4(0, *((void *)v183 + 2) + 1, 1, v183);
    }
    uint64_t v9 = __dst;
    unint64_t v83 = *((void *)v10 + 2);
    unint64_t v82 = *((void *)v10 + 3);
    unint64_t v84 = v83 + 1;
    uint64_t v12 = v195;
    if (v83 >= v82 >> 1)
    {
      v169 = sub_2474AB1A4((char *)(v82 > 1), v83 + 1, 1, v10);
      uint64_t v9 = __dst;
      uint64_t v10 = v169;
      uint64_t v12 = v195;
    }
    *((void *)v10 + 2) = v84;
    unint64_t v85 = v10 + 32;
    uint64_t v86 = &v10[16 * v83 + 32];
    *(void *)uint64_t v86 = v14;
    *((void *)v86 + 1) = v11;
    if (v83)
    {
      uint64_t v188 = v11;
      while (1)
      {
        unint64_t v87 = v84 - 1;
        if (v84 >= 4)
        {
          uint64_t v92 = &v85[16 * v84];
          uint64_t v93 = *((void *)v92 - 8);
          uint64_t v94 = *((void *)v92 - 7);
          BOOL v98 = __OFSUB__(v94, v93);
          uint64_t v95 = v94 - v93;
          if (v98) {
            goto LABEL_254;
          }
          uint64_t v97 = *((void *)v92 - 6);
          uint64_t v96 = *((void *)v92 - 5);
          BOOL v98 = __OFSUB__(v96, v97);
          uint64_t v90 = v96 - v97;
          char v91 = v98;
          if (v98) {
            goto LABEL_255;
          }
          unint64_t v99 = v84 - 2;
          v100 = &v85[16 * v84 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v98 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v98) {
            goto LABEL_257;
          }
          BOOL v98 = __OFADD__(v90, v103);
          uint64_t v104 = v90 + v103;
          if (v98) {
            goto LABEL_260;
          }
          if (v104 >= v95)
          {
            v122 = &v85[16 * v87];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v98 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v98) {
              goto LABEL_264;
            }
            BOOL v115 = v90 < v125;
            goto LABEL_166;
          }
        }
        else
        {
          if (v84 != 3)
          {
            uint64_t v116 = *((void *)v10 + 4);
            uint64_t v117 = *((void *)v10 + 5);
            BOOL v98 = __OFSUB__(v117, v116);
            uint64_t v109 = v117 - v116;
            char v110 = v98;
            goto LABEL_160;
          }
          uint64_t v89 = *((void *)v10 + 4);
          uint64_t v88 = *((void *)v10 + 5);
          BOOL v98 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          char v91 = v98;
        }
        if (v91) {
          goto LABEL_256;
        }
        unint64_t v99 = v84 - 2;
        v105 = &v85[16 * v84 - 32];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v108 = __OFSUB__(v106, v107);
        uint64_t v109 = v106 - v107;
        char v110 = v108;
        if (v108) {
          goto LABEL_259;
        }
        v111 = &v85[16 * v87];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v98 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v98) {
          goto LABEL_262;
        }
        if (__OFADD__(v109, v114)) {
          goto LABEL_263;
        }
        if (v109 + v114 >= v90)
        {
          BOOL v115 = v90 < v114;
LABEL_166:
          if (v115) {
            unint64_t v87 = v99;
          }
          goto LABEL_168;
        }
LABEL_160:
        if (v110) {
          goto LABEL_258;
        }
        v118 = &v85[16 * v87];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v98 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v98) {
          goto LABEL_261;
        }
        if (v121 < v109) {
          goto LABEL_227;
        }
LABEL_168:
        unint64_t v126 = v87 - 1;
        if (v87 - 1 >= v84) {
          goto LABEL_249;
        }
        if (!v12) {
          goto LABEL_277;
        }
        v127 = v10;
        v128 = &v85[16 * v126];
        uint64_t v129 = *(void *)v128;
        v130 = v85;
        unint64_t v131 = v87;
        v132 = &v85[16 * v87];
        uint64_t v133 = *((void *)v132 + 1);
        v134 = v9;
        sub_2474AA814((char *)(v12 + (*(void *)v128 << 6)), (char *)(v12 + (*(void *)v132 << 6)), v12 + (v133 << 6), v9);
        if (v192) {
          goto LABEL_247;
        }
        if (v133 < v129) {
          goto LABEL_250;
        }
        if (v131 > *((void *)v127 + 2)) {
          goto LABEL_251;
        }
        *(void *)v128 = v129;
        *(void *)&v130[16 * v126 + 8] = v133;
        unint64_t v135 = *((void *)v127 + 2);
        if (v131 >= v135) {
          goto LABEL_252;
        }
        uint64_t v10 = v127;
        unint64_t v84 = v135 - 1;
        memmove(v132, v132 + 16, 16 * (v135 - 1 - v131));
        unint64_t v85 = v130;
        *((void *)v127 + 2) = v135 - 1;
        uint64_t v12 = v195;
        uint64_t v11 = v188;
        uint64_t v9 = v134;
        if (v135 <= 2) {
          goto LABEL_227;
        }
      }
    }
    unint64_t v84 = 1;
LABEL_227:
    uint64_t v13 = v185;
    uint64_t v2 = v192;
    if (v11 >= v185) {
      goto LABEL_236;
    }
  }
LABEL_275:
  __break(1u);
LABEL_276:
  __break(1u);
LABEL_277:
  __break(1u);
LABEL_278:
  __break(1u);
LABEL_279:
  __break(1u);
LABEL_280:
  uint64_t result = sub_2474B1350();
  __break(1u);
  return result;
}

uint64_t sub_2474AA360(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v40 = result;
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v42 = *a4;
LABEL_6:
    uint64_t v5 = v4 + (a3 << 6);
    uint64_t v7 = *(void *)(v5 + 48);
    uint64_t v6 = *(void *)(v5 + 56);
    uint64_t v39 = a3;
    while (1)
    {
      uint64_t v43 = a3 - 1;
      uint64_t v44 = a3;
      uint64_t v8 = v4 + ((a3 - 1) << 6);
      uint64_t v45 = *(void *)(v8 + 48);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = qword_26B12C7E8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_26B12CCE0;
      unint64_t v12 = *(void *)(qword_26B12CCE0 + 16);
      if (!v12) {
        goto LABEL_4;
      }
      BOOL v13 = *(void *)(qword_26B12CCE0 + 32) == v7 && *(void *)(qword_26B12CCE0 + 40) == v6;
      char v14 = !v13;
      if (v13)
      {
        uint64_t v17 = 0;
        if (v7 == v45 && v6 == v9)
        {
LABEL_33:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v4 = v42;
          uint64_t v18 = v44;
          if (v14) {
            goto LABEL_5;
          }
          goto LABEL_50;
        }
      }
      else
      {
        char v15 = v14;
        uint64_t v41 = *(void *)(qword_26B12CCE0 + 40);
        uint64_t v16 = *(void *)(qword_26B12CCE0 + 32);
        if ((sub_2474B1470() & 1) == 0)
        {
          uint64_t v37 = v16;
          char v38 = v15;
          uint64_t v19 = (void *)(v11 + 56);
          uint64_t v20 = 1;
          while (v12 != v20)
          {
            uint64_t v17 = v20;
            if (*(v19 - 1) != v7 || *v19 != v6)
            {
              char v22 = sub_2474B1470();
              uint64_t v20 = v17 + 1;
              v19 += 2;
              if ((v22 & 1) == 0) {
                continue;
              }
            }
            char v14 = v38;
            if (v37 != v45 || v41 != v9) {
              goto LABEL_35;
            }
            goto LABEL_33;
          }
          goto LABEL_4;
        }
        uint64_t v17 = 0;
        if (v16 == v45 && v41 == v9)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v4 = v42;
          uint64_t v18 = v44;
          goto LABEL_50;
        }
      }
LABEL_35:
      uint64_t result = sub_2474B1470();
      if ((result & 1) == 0)
      {
        if (v12 <= 1) {
          uint64_t v23 = 1;
        }
        else {
          uint64_t v23 = v12;
        }
        unint64_t v24 = (void *)(v11 + 56);
        uint64_t v25 = 1;
        while (v12 != v25)
        {
          uint64_t v26 = v25;
          if (v23 == v25)
          {
            __break(1u);
            goto LABEL_54;
          }
          if (*(v24 - 1) != v45 || v9 != *v24)
          {
            uint64_t result = sub_2474B1470();
            uint64_t v25 = v26 + 1;
            v24 += 2;
            if ((result & 1) == 0) {
              continue;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v4 = v42;
          uint64_t v18 = v44;
          if (v26 < v17) {
            goto LABEL_5;
          }
          goto LABEL_50;
        }
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v42;
LABEL_5:
        a3 = v39 + 1;
        if (v39 + 1 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = v42;
      uint64_t v18 = v44;
      if (v17 > 0) {
        goto LABEL_5;
      }
LABEL_50:
      if (!v4)
      {
LABEL_54:
        __break(1u);
        return result;
      }
      BOOL v28 = (uint64_t *)(v4 + (v18 << 6));
      uint64_t v29 = *v28;
      uint64_t result = v28[1];
      uint64_t v30 = v28[2];
      uint64_t v31 = v28[3];
      uint64_t v32 = v28[4];
      char v33 = *((unsigned char *)v28 + 40);
      uint64_t v7 = v28[6];
      uint64_t v6 = v28[7];
      long long v34 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)BOOL v28 = *(_OWORD *)v8;
      *((_OWORD *)v28 + 1) = v34;
      long long v35 = *(_OWORD *)(v8 + 48);
      *((_OWORD *)v28 + 2) = *(_OWORD *)(v8 + 32);
      *((_OWORD *)v28 + 3) = v35;
      *(void *)uint64_t v8 = v29;
      *(void *)(v8 + 8) = result;
      *(void *)(v8 + 16) = v30;
      *(void *)(v8 + 24) = v31;
      *(void *)(v8 + 32) = v32;
      *(unsigned char *)(v8 + 40) = v33;
      a3 = v43;
      *(void *)(v8 + 48) = v7;
      *(void *)(v8 + 56) = v6;
      if (v43 == v40) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_2474AA814(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = __src;
  uint64_t v6 = a2 - __src;
  uint64_t v7 = a2 - __src + 63;
  if (a2 - __src >= 0) {
    uint64_t v7 = a2 - __src;
  }
  uint64_t v8 = v7 >> 6;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 63;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 6;
  uint64_t v94 = __src;
  uint64_t v93 = __dst;
  if (v8 >= v10 >> 6)
  {
    if (v9 < -63) {
      goto LABEL_136;
    }
    if (__dst != a2 || &a2[64 * v11] <= __dst)
    {
      uint64_t v43 = a2;
      memmove(__dst, a2, v11 << 6);
      a2 = v43;
    }
    uint64_t v44 = &v4[64 * v11];
    uint64_t v92 = v44;
    uint64_t v94 = a2;
    uint64_t v45 = (char *)a3;
    if (v5 >= a2 || v9 < 64)
    {
LABEL_133:
      sub_2474AB2A0((void **)&v94, (const void **)&v93, &v92);
      return 1;
    }
    unint64_t v87 = v5;
    long long v79 = v4;
    while (1)
    {
      uint64_t v50 = *((void *)v44 - 2);
      uint64_t v49 = *((void *)v44 - 1);
      unint64_t v82 = v44;
      uint64_t v51 = *((void *)a2 - 1);
      uint64_t v85 = *((void *)a2 - 2);
      char v91 = a2;
      uint64_t v52 = qword_26B12C7E8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52 != -1) {
        swift_once();
      }
      uint64_t v89 = v45;
      unint64_t v83 = v45 - 64;
      uint64_t v53 = qword_26B12CCE0;
      unint64_t v54 = *(void *)(qword_26B12CCE0 + 16);
      if (!v54) {
        goto LABEL_125;
      }
      uint64_t v55 = *(void *)(qword_26B12CCE0 + 32);
      BOOL v56 = v55 == v50 && *(void *)(qword_26B12CCE0 + 40) == v49;
      char v57 = !v56;
      if (v56)
      {
        uint64_t v58 = 0;
        if (v50 == v85 && v49 == v51)
        {
LABEL_105:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0) {
            goto LABEL_122;
          }
          goto LABEL_126;
        }
      }
      else
      {
        uint64_t v77 = *(void *)(qword_26B12CCE0 + 40);
        if ((sub_2474B1470() & 1) == 0)
        {
          char v75 = v57;
          uint64_t v59 = (void *)(v53 + 56);
          uint64_t v60 = 1;
          while (v54 != v60)
          {
            uint64_t v58 = v60;
            if (*(v59 - 1) != v50 || *v59 != v49)
            {
              char v62 = sub_2474B1470();
              uint64_t v60 = v58 + 1;
              v59 += 2;
              if ((v62 & 1) == 0) {
                continue;
              }
            }
            char v57 = v75;
            if (v55 != v85 || v77 != v51) {
              goto LABEL_107;
            }
            goto LABEL_105;
          }
          goto LABEL_125;
        }
        uint64_t v58 = 0;
        if (v55 == v85 && v77 == v51)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_122:
          uint64_t v69 = v91 - 64;
          unint64_t v70 = (unint64_t)v87;
          uint64_t v45 = v83;
          uint64_t v44 = v82;
          if (v89 != v91 || v83 >= v91)
          {
            long long v46 = *(_OWORD *)v69;
            long long v47 = *((_OWORD *)v91 - 3);
            long long v48 = *((_OWORD *)v91 - 1);
            *((_OWORD *)v83 + 2) = *((_OWORD *)v91 - 2);
            *((_OWORD *)v83 + 3) = v48;
            *(_OWORD *)unint64_t v83 = v46;
            *((_OWORD *)v83 + 1) = v47;
          }
          uint64_t v94 = v91 - 64;
          if (v82 <= v79) {
            goto LABEL_133;
          }
          goto LABEL_78;
        }
      }
LABEL_107:
      if ((sub_2474B1470() & 1) == 0)
      {
        if (v54 <= 1) {
          uint64_t v63 = 1;
        }
        else {
          uint64_t v63 = v54;
        }
        uint64_t v64 = (void *)(v53 + 56);
        uint64_t v65 = 1;
        while (v54 != v65)
        {
          uint64_t v66 = v65;
          if (v63 == v65)
          {
            __break(1u);
LABEL_135:
            __break(1u);
            goto LABEL_136;
          }
          if (*(v64 - 1) != v85 || v51 != *v64)
          {
            char v68 = sub_2474B1470();
            uint64_t v65 = v66 + 1;
            v64 += 2;
            if ((v68 & 1) == 0) {
              continue;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v66 < v58) {
            goto LABEL_126;
          }
          goto LABEL_122;
        }
LABEL_125:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_126;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v58 <= 0) {
        goto LABEL_122;
      }
LABEL_126:
      uint64_t v44 = v82 - 64;
      uint64_t v92 = v82 - 64;
      unint64_t v70 = (unint64_t)v87;
      uint64_t v45 = v83;
      if (v89 < v82 || v83 >= v82 || v89 != v82)
      {
        long long v71 = *(_OWORD *)v44;
        long long v72 = *((_OWORD *)v82 - 3);
        long long v73 = *((_OWORD *)v82 - 1);
        *((_OWORD *)v83 + 2) = *((_OWORD *)v82 - 2);
        *((_OWORD *)v83 + 3) = v73;
        *(_OWORD *)unint64_t v83 = v71;
        *((_OWORD *)v83 + 1) = v72;
      }
      uint64_t v69 = v91;
      if (v44 <= v79) {
        goto LABEL_133;
      }
LABEL_78:
      a2 = v69;
      if ((unint64_t)v69 <= v70) {
        goto LABEL_133;
      }
    }
  }
  if (v6 >= -63)
  {
    if (__dst != __src || &__src[64 * v8] <= __dst)
    {
      unint64_t v12 = a2;
      memmove(__dst, __src, v8 << 6);
      a2 = v12;
    }
    uint64_t v81 = &v4[64 * v8];
    uint64_t v92 = v81;
    if ((unint64_t)a2 < a3 && v6 >= 64)
    {
      BOOL v13 = v4;
      while (1)
      {
        long long v78 = v4;
        uint64_t v86 = v5;
        uint64_t v15 = *((void *)a2 + 6);
        uint64_t v14 = *((void *)a2 + 7);
        uint64_t v90 = a2;
        uint64_t v17 = *((void *)v13 + 6);
        uint64_t v16 = *((void *)v13 + 7);
        unint64_t v84 = v13;
        uint64_t v18 = qword_26B12C7E8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18 != -1) {
          swift_once();
        }
        uint64_t v19 = qword_26B12CCE0;
        unint64_t v20 = *(void *)(qword_26B12CCE0 + 16);
        if (!v20) {
          goto LABEL_60;
        }
        uint64_t v21 = *(void *)(qword_26B12CCE0 + 32);
        BOOL v22 = v21 == v15 && *(void *)(qword_26B12CCE0 + 40) == v14;
        char v23 = !v22;
        if (v22)
        {
          uint64_t v25 = 0;
          if (v15 == v17 && v14 == v16)
          {
LABEL_40:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v23) {
              goto LABEL_61;
            }
            goto LABEL_57;
          }
        }
        else
        {
          char v80 = v23;
          uint64_t v24 = *(void *)(qword_26B12CCE0 + 40);
          if ((sub_2474B1470() & 1) == 0)
          {
            uint64_t v76 = v21;
            uint64_t v26 = (void *)(v19 + 56);
            uint64_t v27 = 1;
            while (v20 != v27)
            {
              uint64_t v25 = v27;
              if (*(v26 - 1) != v15 || *v26 != v14)
              {
                char v29 = sub_2474B1470();
                uint64_t v27 = v25 + 1;
                v26 += 2;
                if ((v29 & 1) == 0) {
                  continue;
                }
              }
              if (v76 == v17)
              {
                BOOL v22 = v24 == v16;
                char v23 = v80;
                if (v22) {
                  goto LABEL_40;
                }
              }
              goto LABEL_42;
            }
            goto LABEL_60;
          }
          uint64_t v25 = 0;
          if (v21 == v17 && v24 == v16)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
        }
LABEL_42:
        if ((sub_2474B1470() & 1) == 0)
        {
          if (v20 <= 1) {
            uint64_t v30 = 1;
          }
          else {
            uint64_t v30 = v20;
          }
          uint64_t v31 = (void *)(v19 + 56);
          uint64_t v32 = 1;
          while (v20 != v32)
          {
            uint64_t v33 = v32;
            if (v30 == v32) {
              goto LABEL_135;
            }
            if (*(v31 - 1) != v17 || v16 != *v31)
            {
              char v35 = sub_2474B1470();
              uint64_t v32 = v33 + 1;
              v31 += 2;
              if ((v35 & 1) == 0) {
                continue;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v33 < v25) {
              goto LABEL_61;
            }
            goto LABEL_57;
          }
LABEL_60:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_61:
          uint64_t v36 = v84;
          uint64_t v4 = v84 + 64;
          uint64_t v39 = v86;
          unint64_t v37 = a3;
          char v38 = v90;
          BOOL v13 = v84 + 64;
          if (v86 == v84 && v86 < v4) {
            goto LABEL_66;
          }
          goto LABEL_65;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25 > 0) {
          goto LABEL_61;
        }
LABEL_57:
        unint64_t v37 = a3;
        uint64_t v36 = v90;
        char v38 = v90 + 64;
        uint64_t v39 = v86;
        BOOL v13 = v84;
        if (v86 == v90)
        {
          uint64_t v4 = v78;
          if (v86 < v38) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v4 = v78;
        }
LABEL_65:
        long long v40 = *(_OWORD *)v36;
        long long v41 = *((_OWORD *)v36 + 1);
        long long v42 = *((_OWORD *)v36 + 3);
        *((_OWORD *)v39 + 2) = *((_OWORD *)v36 + 2);
        *((_OWORD *)v39 + 3) = v42;
        *(_OWORD *)uint64_t v39 = v40;
        *((_OWORD *)v39 + 1) = v41;
LABEL_66:
        uint64_t v5 = v39 + 64;
        if (v13 < v81)
        {
          a2 = v38;
          if ((unint64_t)v38 < v37) {
            continue;
          }
        }
        uint64_t v93 = v4;
        uint64_t v94 = v5;
        goto LABEL_133;
      }
    }
    goto LABEL_133;
  }
LABEL_136:
  uint64_t result = sub_2474B13A0();
  __break(1u);
  return result;
}

char *sub_2474AB1A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269251D20);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2474AB2A0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 63;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -64)
  {
    uint64_t result = (char *)sub_2474B13A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
    {
      return (char *)memmove(result, v3, v7 << 6);
    }
  }
  return result;
}

char *sub_2474AB35C(uint64_t a1)
{
  return sub_2474AB1A4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2474AB370(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v95 = *MEMORY[0x263EF8340];
  uint64_t v6 = *v3;
  sub_2474B1510();
  swift_bridgeObjectRetain();
  sub_2474B0BD0();
  uint64_t v7 = sub_2474B1530();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t __s1 = *(void *)v81;
    *(void *)uint64_t v81 = 0x8000000000000000;
    sub_247442FA0(a2, a3);
    sub_2474AC09C(a2, a3, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v81 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v86 = ~v8;
  unint64_t v11 = a3 >> 62;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v83 = v6;
  size_t __n = BYTE6(a3);
  uint64_t v85 = v6 + 56;
  uint64_t v79 = (a2 >> 32) - (int)a2;
  uint64_t v80 = a2 >> 32;
  unint64_t v78 = a3;
  while (2)
  {
    BOOL v13 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_247442FA0(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    size_t v19 = __n;
    switch((int)v11)
    {
      case 1:
        size_t v19 = HIDWORD(a2) - (int)a2;
        if (v84) {
          goto LABEL_121;
        }
        goto LABEL_19;
      case 2:
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v20 = *(void *)(a2 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        size_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_19;
        }
        goto LABEL_122;
      case 3:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_24743E4AC(v14, v15);
          goto LABEL_8;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              uint64_t v27 = (char *)sub_2474B0B60();
              if (!v27) {
                goto LABEL_33;
              }
              uint64_t v28 = sub_2474B0B80();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_125;
              }
              v27 += (int)v14 - v28;
LABEL_33:
              sub_2474B0B70();
              uint64_t v10 = v85;
              if (v11)
              {
                if (v11 == 1)
                {
                  if (v80 < (int)a2) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  char v29 = (char *)sub_2474B0B60();
                  if (v29)
                  {
                    uint64_t v30 = sub_2474B0B80();
                    if (__OFSUB__((int)a2, v30)) {
                      goto LABEL_141;
                    }
                    v29 += (int)a2 - v30;
                  }
                  uint64_t v31 = sub_2474B0B70();
                  size_t v32 = (a2 >> 32) - (int)a2;
                  if (v31 < v79) {
                    size_t v32 = v31;
                  }
                  if (!v27) {
                    goto LABEL_143;
                  }
                  if (!v29) {
                    goto LABEL_144;
                  }
                  int v33 = memcmp(v27, v29, v32);
                  sub_24743E4AC(a2, a3);
                }
                else
                {
                  uint64_t v66 = *(void *)(a2 + 16);
                  uint64_t v65 = *(void *)(a2 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = (char *)sub_2474B0B60();
                  if (v67)
                  {
                    uint64_t v68 = sub_2474B0B80();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v22 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v22) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = sub_2474B0B70();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  if (!v27) {
                    goto LABEL_154;
                  }
                  a3 = v78;
                  uint64_t v6 = v83;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v33 = memcmp(v27, v67, v71);
                  swift_release();
LABEL_112:
                  swift_release();
                }
                sub_24743E4AC(v14, v15);
LABEL_114:
                uint64_t v10 = v85;
                if (!v33) {
                  goto LABEL_118;
                }
              }
              else
              {
                *(void *)uint64_t __s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v27) {
                  goto LABEL_153;
                }
                long long v47 = (uint64_t *)__s1;
                long long v46 = v27;
LABEL_99:
                int v45 = memcmp(v46, v47, __n);
LABEL_100:
                sub_24743E4AC(v14, v15);
                if (!v45) {
                  goto LABEL_118;
                }
              }
              break;
            case 2uLL:
              uint64_t v34 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              char v35 = (char *)sub_2474B0B60();
              if (!v35) {
                goto LABEL_47;
              }
              uint64_t v36 = sub_2474B0B80();
              if (__OFSUB__(v34, v36)) {
                goto LABEL_124;
              }
              v35 += v34 - v36;
LABEL_47:
              sub_2474B0B70();
              uint64_t v6 = v83;
              if (!v11)
              {
                *(void *)uint64_t __s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v35) {
                  goto LABEL_150;
                }
                int v33 = memcmp(v35, __s1, __n);
                swift_release();
                goto LABEL_112;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_128;
                }
                swift_retain();
                unint64_t v37 = (char *)sub_2474B0B60();
                if (v37)
                {
                  uint64_t v38 = sub_2474B0B80();
                  if (__OFSUB__((int)a2, v38)) {
                    goto LABEL_139;
                  }
                  v37 += (int)a2 - v38;
                }
                uint64_t v39 = sub_2474B0B70();
                size_t v40 = (a2 >> 32) - (int)a2;
                if (v39 < v79) {
                  size_t v40 = v39;
                }
                if (!v35) {
                  goto LABEL_145;
                }
                if (!v37) {
                  goto LABEL_146;
                }
                int v33 = memcmp(v35, v37, v40);
                sub_24743E4AC(a2, a3);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a2 + 16);
                uint64_t v77 = *(void *)(a2 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_2474B0B60();
                if (v60)
                {
                  uint64_t v61 = sub_2474B0B80();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v22 = __OFSUB__(v77, v59);
                int64_t v62 = v77 - v59;
                if (v22) {
                  goto LABEL_133;
                }
                uint64_t v63 = sub_2474B0B70();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v35) {
                  goto LABEL_151;
                }
                a3 = v78;
                if (!v60) {
                  goto LABEL_152;
                }
                int v33 = memcmp(v35, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_24743E4AC(v14, v15);
              uint64_t v6 = v83;
              goto LABEL_114;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)uint64_t __s1 = 0;
              if (!v11) {
                goto LABEL_67;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_127;
                }
                sub_247442FA0(a2, a3);
                uint64_t v41 = sub_2474B0B60();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v24 = v41;
                uint64_t v42 = sub_2474B0B80();
                uint64_t v26 = (int)a2 - v42;
                if (__OFSUB__((int)a2, v42)) {
                  goto LABEL_132;
                }
LABEL_63:
                uint64_t v43 = sub_2474B0B70();
                if (v43 >= v79) {
                  size_t v44 = (a2 >> 32) - (int)a2;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v24 + v26), v44);
                a3 = v78;
                sub_24743E4AC(a2, v78);
                goto LABEL_100;
              }
              uint64_t v54 = *(void *)(a2 + 16);
              uint64_t v55 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_2474B0B60();
              if (v50)
              {
                uint64_t v56 = sub_2474B0B80();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v22 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v22) {
                goto LABEL_130;
              }
              uint64_t v53 = sub_2474B0B70();
              if (!v50) {
                goto LABEL_149;
              }
LABEL_79:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_24743E4AC(v14, v15);
              uint64_t v6 = v83;
              uint64_t v10 = v85;
              if (!v58) {
                goto LABEL_118;
              }
              break;
            default:
              *(void *)uint64_t __s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              if (!v11)
              {
LABEL_67:
                uint64_t v88 = a2;
                __int16 v89 = a3;
                char v90 = BYTE2(a3);
                char v91 = BYTE3(a3);
                char v92 = BYTE4(a3);
                char v93 = BYTE5(a3);
                long long v46 = __s1;
                long long v47 = &v88;
                goto LABEL_99;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_126;
                }
                sub_247442FA0(a2, a3);
                uint64_t v23 = sub_2474B0B60();
                if (!v23)
                {
                  sub_2474B0B70();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  sub_2474B0B70();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x2474ABD8CLL);
                }
                uint64_t v24 = v23;
                uint64_t v25 = sub_2474B0B80();
                uint64_t v26 = (int)a2 - v25;
                if (__OFSUB__((int)a2, v25)) {
                  goto LABEL_131;
                }
                goto LABEL_63;
              }
              uint64_t v48 = *(void *)(a2 + 16);
              uint64_t v49 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_2474B0B60();
              if (v50)
              {
                uint64_t v51 = sub_2474B0B80();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v22 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v22) {
                goto LABEL_129;
              }
              uint64_t v53 = sub_2474B0B70();
              if (!v50) {
                goto LABEL_148;
              }
              goto LABEL_79;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v86;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_24743E4AC(v14, v15);
LABEL_118:
        swift_bridgeObjectRelease();
        sub_24743E4AC(a2, a3);
        char v74 = (uint64_t *)(*(void *)(*(void *)v81 + 48) + 16 * v9);
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        *a1 = *v74;
        a1[1] = v76;
        sub_247442FA0(v75, v76);
        return 0;
    }
  }
}

uint64_t sub_2474ABDBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269251D38);
  uint64_t v3 = sub_2474B12D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      size_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_2474B1510();
      sub_2474B0BD0();
      uint64_t result = sub_2474B1530();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2474AC09C(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  uint64_t v96 = *MEMORY[0x263EF8340];
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_2474ABDBC();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (uint64_t)sub_2474ACAC0();
        goto LABEL_123;
      }
      sub_2474ACC74();
    }
    uint64_t v11 = *v4;
    sub_2474B1510();
    sub_2474B0BD0();
    uint64_t result = sub_2474B1530();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v88 = ~v12;
      uint64_t v84 = v11;
      uint64_t v86 = v11 + 56;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v85 = v14;
      unint64_t v87 = a2 >> 62;
      uint64_t v82 = (v8 >> 32) - (int)v8;
      uint64_t v83 = v8 >> 32;
      uint64_t v81 = v4;
      while (1)
      {
        unint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
            }
            uint64_t v18 = HIDWORD(v17) - (int)v17;
LABEL_21:
            sub_247442FA0(v17, v16);
LABEL_22:
            uint64_t v21 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v21 = HIDWORD(v8) - (int)v8;
                if (v85) {
                  goto LABEL_127;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = *(void *)(v8 + 16);
                uint64_t v22 = *(void *)(v8 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_128;
              case 3uLL:
                if (v18) {
                  goto LABEL_14;
                }
                goto LABEL_163;
              default:
LABEL_26:
                if (v18 != v21)
                {
LABEL_14:
                  uint64_t result = sub_24743E4AC(v17, v16);
                  goto LABEL_15;
                }
                if (v18 < 1) {
                  goto LABEL_163;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            uint64_t v18 = v19 - v20;
            if (!__OFSUB__(v19, v20)) {
              goto LABEL_21;
            }
            goto LABEL_126;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_22;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_130;
            }
            uint64_t v43 = (unsigned char *)sub_2474B0B60();
            if (!v43) {
              goto LABEL_63;
            }
            uint64_t v44 = sub_2474B0B80();
            if (__OFSUB__((int)v17, v44)) {
              goto LABEL_132;
            }
            v43 += (int)v17 - v44;
LABEL_63:
            sub_2474B0B70();
            uint64_t v13 = v86;
            if (!v87)
            {
              *(void *)uint64_t __s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v43) {
                goto LABEL_158;
              }
              uint64_t v50 = (uint64_t *)__s1;
              uint64_t v49 = v43;
LABEL_107:
              int v68 = memcmp(v49, v50, BYTE6(a2));
              uint64_t result = sub_24743E4AC(v17, v16);
              if (!v68) {
                goto LABEL_164;
              }
              goto LABEL_15;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_141;
              }
              swift_retain();
              uint64_t v45 = sub_2474B0B60();
              if (v45)
              {
                uint64_t v46 = sub_2474B0B80();
                if (__OFSUB__((int)v8, v46)) {
                  goto LABEL_148;
                }
                v45 += (int)v8 - v46;
              }
              uint64_t v47 = sub_2474B0B70();
              uint64_t v48 = (v8 >> 32) - (int)v8;
              if (v47 < v82) {
                uint64_t v48 = v47;
              }
              if (!v43) {
                goto LABEL_153;
              }
              if (!v45) {
                goto LABEL_154;
              }
              size_t v41 = v48;
              uint64_t v42 = v43;
              size_t v40 = (const void *)v45;
              goto LABEL_74;
            }
            uint64_t v69 = *(void *)(v8 + 16);
            uint64_t v70 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            size_t v71 = (char *)sub_2474B0B60();
            if (v71)
            {
              uint64_t v72 = sub_2474B0B80();
              if (__OFSUB__(v69, v72)) {
                goto LABEL_147;
              }
              v71 += v69 - v72;
            }
            BOOL v24 = __OFSUB__(v70, v69);
            int64_t v73 = v70 - v69;
            if (v24) {
              goto LABEL_142;
            }
            uint64_t v74 = sub_2474B0B70();
            if (v74 >= v73) {
              size_t v75 = v73;
            }
            else {
              size_t v75 = v74;
            }
            uint64_t v5 = v81;
            if (!v43) {
              goto LABEL_161;
            }
            uint64_t v11 = v84;
            if (!v71) {
              goto LABEL_162;
            }
            int v36 = memcmp(v43, v71, v75);
            swift_release();
            goto LABEL_119;
          case 2uLL:
            uint64_t v29 = *(void *)(v17 + 16);
            swift_retain();
            swift_retain();
            uint64_t v30 = (char *)sub_2474B0B60();
            if (!v30) {
              goto LABEL_39;
            }
            uint64_t v31 = sub_2474B0B80();
            if (__OFSUB__(v29, v31)) {
              goto LABEL_131;
            }
            v30 += v29 - v31;
LABEL_39:
            sub_2474B0B70();
            uint64_t v11 = v84;
            if (v87)
            {
              if (v87 == 1)
              {
                if (v83 < (int)v8) {
                  goto LABEL_135;
                }
                swift_retain();
                size_t v32 = (char *)sub_2474B0B60();
                if (v32)
                {
                  uint64_t v33 = sub_2474B0B80();
                  if (__OFSUB__((int)v8, v33)) {
                    goto LABEL_146;
                  }
                  v32 += (int)v8 - v33;
                }
                uint64_t v34 = sub_2474B0B70();
                size_t v35 = (v8 >> 32) - (int)v8;
                if (v34 < v82) {
                  size_t v35 = v34;
                }
                if (!v30) {
                  goto LABEL_150;
                }
                if (!v32) {
                  goto LABEL_151;
                }
                int v36 = memcmp(v30, v32, v35);
                sub_24743E4AC(v8, a2);
                swift_release();
              }
              else
              {
                uint64_t v62 = *(void *)(v8 + 16);
                uint64_t v80 = *(void *)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_2474B0B60();
                if (v63)
                {
                  uint64_t v64 = sub_2474B0B80();
                  if (__OFSUB__(v62, v64)) {
                    goto LABEL_145;
                  }
                  v63 += v62 - v64;
                }
                BOOL v24 = __OFSUB__(v80, v62);
                int64_t v65 = v80 - v62;
                if (v24) {
                  goto LABEL_140;
                }
                uint64_t v66 = sub_2474B0B70();
                if (v66 >= v65) {
                  size_t v67 = v65;
                }
                else {
                  size_t v67 = v66;
                }
                if (!v30) {
                  goto LABEL_159;
                }
                uint64_t v11 = v84;
                if (!v63) {
                  goto LABEL_160;
                }
                int v36 = memcmp(v30, v63, v67);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              uint64_t result = sub_24743E4AC(v17, v16);
              uint64_t v5 = v81;
            }
            else
            {
              *(void *)uint64_t __s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v30) {
                goto LABEL_157;
              }
              int v36 = memcmp(v30, __s1, BYTE6(a2));
              swift_release();
LABEL_119:
              swift_release();
LABEL_120:
              uint64_t result = sub_24743E4AC(v17, v16);
            }
            uint64_t v13 = v86;
            if (!v36) {
              goto LABEL_164;
            }
            goto LABEL_15;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)uint64_t __s1 = 0;
            if (!v87) {
              goto LABEL_75;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_134;
              }
              sub_247442FA0(v8, a2);
              uint64_t v37 = sub_2474B0B60();
              if (!v37) {
                goto LABEL_152;
              }
              uint64_t v26 = v37;
              uint64_t v38 = sub_2474B0B80();
              uint64_t v28 = (int)v8 - v38;
              if (__OFSUB__((int)v8, v38)) {
                goto LABEL_139;
              }
              goto LABEL_55;
            }
            uint64_t v57 = *(void *)(v8 + 16);
            uint64_t v58 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_2474B0B60();
            if (v53)
            {
              uint64_t v59 = sub_2474B0B80();
              if (__OFSUB__(v57, v59)) {
                goto LABEL_144;
              }
              v53 += v57 - v59;
            }
            BOOL v24 = __OFSUB__(v58, v57);
            int64_t v55 = v58 - v57;
            if (v24) {
              goto LABEL_137;
            }
            uint64_t v56 = sub_2474B0B70();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_156;
            }
            goto LABEL_87;
          default:
            *(void *)uint64_t __s1 = v17;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v87)
            {
LABEL_75:
              uint64_t v89 = v8;
              __int16 v90 = a2;
              char v91 = BYTE2(a2);
              char v92 = BYTE3(a2);
              char v93 = BYTE4(a2);
              char v94 = BYTE5(a2);
              uint64_t v49 = __s1;
              uint64_t v50 = &v89;
              goto LABEL_107;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_133;
              }
              sub_247442FA0(v8, a2);
              uint64_t v25 = sub_2474B0B60();
              if (!v25)
              {
                sub_2474B0B70();
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                sub_2474B0B70();
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                sub_24743E4AC(v17, v16);
LABEL_164:
                sub_2474B14A0();
                __break(1u);
                JUMPOUT(0x2474ACA90);
              }
              uint64_t v26 = v25;
              uint64_t v27 = sub_2474B0B80();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_138;
              }
LABEL_55:
              uint64_t v39 = sub_2474B0B70();
              size_t v40 = (const void *)(v26 + v28);
              if (v39 >= v82) {
                size_t v41 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v41 = v39;
              }
              uint64_t v42 = __s1;
LABEL_74:
              int v36 = memcmp(v42, v40, v41);
              sub_24743E4AC(v8, a2);
              goto LABEL_120;
            }
            uint64_t v51 = *(void *)(v8 + 16);
            uint64_t v52 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_2474B0B60();
            if (v53)
            {
              uint64_t v54 = sub_2474B0B80();
              if (__OFSUB__(v51, v54)) {
                goto LABEL_143;
              }
              v53 += v51 - v54;
            }
            BOOL v24 = __OFSUB__(v52, v51);
            int64_t v55 = v52 - v51;
            if (v24) {
              goto LABEL_136;
            }
            uint64_t v56 = sub_2474B0B70();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_155;
            }
LABEL_87:
            if (v56 >= v55) {
              size_t v60 = v55;
            }
            else {
              size_t v60 = v56;
            }
            int v61 = memcmp(__s1, v53, v60);
            swift_release();
            swift_release();
            uint64_t result = sub_24743E4AC(v17, v16);
            uint64_t v13 = v86;
            if (!v61) {
              goto LABEL_164;
            }
LABEL_15:
            a3 = (a3 + 1) & v88;
            if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              goto LABEL_123;
            }
            break;
        }
      }
    }
  }
LABEL_123:
  uint64_t v76 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v77 = (uint64_t *)(*(void *)(v76 + 48) + 16 * a3);
  *uint64_t v77 = v8;
  v77[1] = a2;
  uint64_t v78 = *(void *)(v76 + 16);
  BOOL v24 = __OFADD__(v78, 1);
  uint64_t v79 = v78 + 1;
  if (v24) {
    goto LABEL_129;
  }
  *(void *)(v76 + 16) = v79;
  return result;
}

void *sub_2474ACAC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269251D38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2474B12C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_247442FA0(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2474ACC74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269251D38);
  uint64_t v3 = sub_2474B12D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_2474B1510();
    sub_247442FA0(v20, v21);
    sub_2474B0BD0();
    uint64_t result = sub_2474B1530();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2474ACF28(uint64_t a1, uint64_t a2)
{
  uint64_t v103 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v91 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v87 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v90 = v3;
  uint64_t v94 = v4;
  uint64_t v96 = v8;
  unint64_t v10 = v7;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v11 = (v10 - 1) & v10;
  unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
  int64_t v13 = v9;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_143;
  }
LABEL_23:
  unint64_t v88 = v11;
  int64_t v89 = v13;
  unint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
  uint64_t v19 = *v17;
  unint64_t v18 = v17[1];
  sub_2474B1510();
  sub_247442FA0(v19, v18);
  unint64_t v97 = v18;
  sub_2474B0BD0();
  uint64_t v20 = sub_2474B1530();
  uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v22 = v20 & ~v21;
  if (((*(void *)(v8 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
  {
LABEL_140:
    sub_24743E4AC(v19, v97);
    uint64_t v2 = 0;
    goto LABEL_141;
  }
  unint64_t v23 = v18 >> 62;
  uint64_t v98 = ~v21;
  BOOL v24 = __OFSUB__(HIDWORD(v19), v19);
  BOOL v95 = v24;
  uint64_t v92 = (v19 >> 32) - (int)v19;
  uint64_t v93 = v19 >> 32;
  while (2)
  {
    char v25 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    uint64_t v28 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v27), v27))
        {
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
        }
        uint64_t v28 = HIDWORD(v27) - (int)v27;
LABEL_36:
        sub_247442FA0(v27, v26);
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v27 + 16);
        uint64_t v29 = *(void *)(v27 + 24);
        uint64_t v28 = v29 - v30;
        if (!__OFSUB__(v29, v30)) {
          goto LABEL_36;
        }
        goto LABEL_146;
      case 3uLL:
        break;
      default:
        uint64_t v28 = BYTE6(v26);
        break;
    }
    uint64_t v31 = BYTE6(v97);
    switch((int)v23)
    {
      case 1:
        uint64_t v31 = HIDWORD(v19) - (int)v19;
        if (v95) {
          goto LABEL_147;
        }
        goto LABEL_41;
      case 2:
        uint64_t v33 = *(void *)(v19 + 16);
        uint64_t v32 = *(void *)(v19 + 24);
        BOOL v34 = __OFSUB__(v32, v33);
        uint64_t v31 = v32 - v33;
        if (!v34) {
          goto LABEL_41;
        }
        goto LABEL_148;
      case 3:
        if (v28) {
          goto LABEL_29;
        }
        goto LABEL_137;
      default:
LABEL_41:
        if (v28 != v31)
        {
LABEL_29:
          sub_24743E4AC(v27, v26);
          goto LABEL_30;
        }
        if (v28 >= 1)
        {
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v27 > v27 >> 32) {
                goto LABEL_149;
              }
              uint64_t v39 = sub_2474B0B60();
              if (v39)
              {
                uint64_t v40 = v39;
                uint64_t v41 = sub_2474B0B80();
                if (__OFSUB__((int)v27, v41)) {
                  goto LABEL_151;
                }
                uint64_t v42 = (const void *)(v40 + (int)v27 - v41);
                sub_2474B0B70();
                if (!v23)
                {
LABEL_92:
                  *(void *)uint64_t __s1 = v19;
                  *(_DWORD *)&__s1[8] = v97;
                  *(_WORD *)&__s1[12] = WORD2(v97);
                  if (!v42) {
                    goto LABEL_176;
                  }
                  int v57 = memcmp(v42, __s1, BYTE6(v97));
                  goto LABEL_134;
                }
              }
              else
              {
                uint64_t v42 = 0;
                sub_2474B0B70();
                if (!v23) {
                  goto LABEL_92;
                }
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_159;
                }
                swift_retain();
                uint64_t v43 = sub_2474B0B60();
                if (v43)
                {
                  uint64_t v44 = sub_2474B0B80();
                  if (__OFSUB__((int)v19, v44)) {
                    goto LABEL_168;
                  }
                  v43 += (int)v19 - v44;
                }
                uint64_t v45 = sub_2474B0B70();
                uint64_t v46 = (v19 >> 32) - (int)v19;
                if (v45 < v92) {
                  uint64_t v46 = v45;
                }
                if (!v42) {
                  goto LABEL_171;
                }
                if (!v43) {
                  goto LABEL_172;
                }
                size_t v47 = v46;
                uint64_t v48 = v42;
                uint64_t v49 = (const void *)v43;
LABEL_88:
                int v57 = memcmp(v48, v49, v47);
                sub_24743E4AC(v19, v97);
              }
              else
              {
                uint64_t v79 = *(void *)(v19 + 16);
                uint64_t v78 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v80 = (char *)sub_2474B0B60();
                if (v80)
                {
                  uint64_t v81 = sub_2474B0B80();
                  if (__OFSUB__(v79, v81)) {
                    goto LABEL_167;
                  }
                  v80 += v79 - v81;
                }
                BOOL v34 = __OFSUB__(v78, v79);
                int64_t v82 = v78 - v79;
                if (v34) {
                  goto LABEL_161;
                }
                uint64_t v83 = sub_2474B0B70();
                if (v83 >= v82) {
                  size_t v84 = v82;
                }
                else {
                  size_t v84 = v83;
                }
                if (!v42) {
                  goto LABEL_182;
                }
                uint64_t v3 = v90;
                uint64_t v4 = v94;
                if (!v80) {
                  goto LABEL_183;
                }
                int v57 = memcmp(v42, v80, v84);
                swift_release();
LABEL_133:
                swift_release();
              }
LABEL_134:
              sub_24743E4AC(v27, v26);
LABEL_135:
              uint64_t v8 = v96;
              if (!v57) {
                goto LABEL_138;
              }
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v27 + 16);
              swift_retain();
              swift_retain();
              uint64_t v51 = (char *)sub_2474B0B60();
              if (!v51) {
                goto LABEL_68;
              }
              uint64_t v52 = sub_2474B0B80();
              if (__OFSUB__(v50, v52)) {
                goto LABEL_150;
              }
              v51 += v50 - v52;
LABEL_68:
              sub_2474B0B70();
              uint64_t v4 = v94;
              if (!v23)
              {
                *(void *)uint64_t __s1 = v19;
                *(_DWORD *)&__s1[8] = v97;
                *(_WORD *)&__s1[12] = WORD2(v97);
                if (!v51) {
                  goto LABEL_179;
                }
                int v57 = memcmp(v51, __s1, BYTE6(v97));
                swift_release();
                goto LABEL_133;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_154;
                }
                swift_retain();
                uint64_t v53 = (char *)sub_2474B0B60();
                if (v53)
                {
                  uint64_t v54 = sub_2474B0B80();
                  if (__OFSUB__((int)v19, v54)) {
                    goto LABEL_166;
                  }
                  v53 += (int)v19 - v54;
                }
                uint64_t v55 = sub_2474B0B70();
                size_t v56 = (v19 >> 32) - (int)v19;
                if (v55 < v92) {
                  size_t v56 = v55;
                }
                if (!v51) {
                  goto LABEL_173;
                }
                if (!v53) {
                  goto LABEL_174;
                }
                int v57 = memcmp(v51, v53, v56);
                sub_24743E4AC(v19, v97);
                swift_release();
              }
              else
              {
                uint64_t v72 = *(void *)(v19 + 16);
                uint64_t v86 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                int64_t v73 = (char *)sub_2474B0B60();
                if (v73)
                {
                  uint64_t v74 = sub_2474B0B80();
                  if (__OFSUB__(v72, v74)) {
                    goto LABEL_165;
                  }
                  v73 += v72 - v74;
                }
                BOOL v34 = __OFSUB__(v86, v72);
                int64_t v75 = v86 - v72;
                if (v34) {
                  goto LABEL_160;
                }
                uint64_t v76 = sub_2474B0B70();
                if (v76 >= v75) {
                  size_t v77 = v75;
                }
                else {
                  size_t v77 = v76;
                }
                if (!v51) {
                  goto LABEL_180;
                }
                uint64_t v3 = v90;
                if (!v73) {
                  goto LABEL_181;
                }
                int v57 = memcmp(v51, v73, v77);
                swift_release();
                swift_release();
LABEL_121:
                swift_release();
              }
              swift_release();
              sub_24743E4AC(v27, v26);
              uint64_t v4 = v94;
              goto LABEL_135;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)uint64_t __s1 = 0;
              if (!v23) {
                goto LABEL_89;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_153;
                }
                sub_247442FA0(v19, v97);
                uint64_t v58 = sub_2474B0B60();
                if (!v58) {
                  goto LABEL_175;
                }
                uint64_t v36 = v58;
                uint64_t v59 = sub_2474B0B80();
                uint64_t v38 = (int)v19 - v59;
                if (__OFSUB__((int)v19, v59)) {
                  goto LABEL_158;
                }
LABEL_84:
                uint64_t v60 = sub_2474B0B70();
                uint64_t v49 = (const void *)(v36 + v38);
                if (v60 >= v92) {
                  size_t v47 = (v19 >> 32) - (int)v19;
                }
                else {
                  size_t v47 = v60;
                }
                uint64_t v48 = __s1;
                goto LABEL_88;
              }
              uint64_t v68 = *(void *)(v19 + 16);
              uint64_t v69 = *(void *)(v19 + 24);
              swift_retain();
              swift_retain();
              uint64_t v64 = (char *)sub_2474B0B60();
              if (v64)
              {
                uint64_t v70 = sub_2474B0B80();
                if (__OFSUB__(v68, v70)) {
                  goto LABEL_164;
                }
                v64 += v68 - v70;
              }
              BOOL v34 = __OFSUB__(v69, v68);
              int64_t v66 = v69 - v68;
              if (v34) {
                goto LABEL_156;
              }
              uint64_t v67 = sub_2474B0B70();
              if (!v64) {
                goto LABEL_178;
              }
LABEL_105:
              if (v67 >= v66) {
                size_t v71 = v66;
              }
              else {
                size_t v71 = v67;
              }
              int v57 = memcmp(__s1, v64, v71);
              goto LABEL_121;
            default:
              *(void *)uint64_t __s1 = v27;
              *(_WORD *)&__s1[8] = v26;
              __s1[10] = BYTE2(v26);
              __s1[11] = BYTE3(v26);
              __s1[12] = BYTE4(v26);
              __s1[13] = BYTE5(v26);
              if (!v23)
              {
LABEL_89:
                uint64_t __s2 = v19;
                int v100 = v97;
                __int16 v101 = WORD2(v97);
                int v61 = memcmp(__s1, &__s2, BYTE6(v97));
                sub_24743E4AC(v27, v26);
                if (!v61) {
                  goto LABEL_138;
                }
                break;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_152;
                }
                sub_247442FA0(v19, v97);
                uint64_t v35 = sub_2474B0B60();
                if (!v35)
                {
                  sub_2474B0B70();
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  sub_2474B0B70();
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
                  JUMPOUT(0x2474ADA50);
                }
                uint64_t v36 = v35;
                uint64_t v37 = sub_2474B0B80();
                uint64_t v38 = (int)v19 - v37;
                if (__OFSUB__((int)v19, v37)) {
                  goto LABEL_157;
                }
                goto LABEL_84;
              }
              uint64_t v62 = *(void *)(v19 + 16);
              uint64_t v63 = *(void *)(v19 + 24);
              swift_retain();
              swift_retain();
              uint64_t v64 = (char *)sub_2474B0B60();
              if (v64)
              {
                uint64_t v65 = sub_2474B0B80();
                if (__OFSUB__(v62, v65)) {
                  goto LABEL_163;
                }
                v64 += v62 - v65;
              }
              BOOL v34 = __OFSUB__(v63, v62);
              int64_t v66 = v63 - v62;
              if (v34) {
                goto LABEL_155;
              }
              uint64_t v67 = sub_2474B0B70();
              if (!v64) {
                goto LABEL_177;
              }
              goto LABEL_105;
          }
LABEL_30:
          unint64_t v22 = (v22 + 1) & v98;
          if (((*(void *)(v8 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            goto LABEL_140;
          }
          continue;
        }
LABEL_137:
        sub_24743E4AC(v27, v26);
LABEL_138:
        sub_24743E4AC(v19, v97);
        int64_t v9 = v89;
        unint64_t v10 = v88;
        if (v88) {
          goto LABEL_7;
        }
LABEL_9:
        int64_t v14 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_162;
        }
        if (v14 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v14);
        int64_t v13 = v9 + 1;
        if (v15) {
          goto LABEL_22;
        }
        int64_t v13 = v9 + 2;
        if (v9 + 2 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v13);
        if (v15) {
          goto LABEL_22;
        }
        int64_t v13 = v9 + 3;
        if (v9 + 3 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v13);
        if (v15) {
          goto LABEL_22;
        }
        int64_t v16 = v9 + 4;
        if (v9 + 4 >= v87)
        {
LABEL_144:
          uint64_t v2 = 1;
          goto LABEL_141;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            int64_t v13 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_169;
            }
            if (v13 >= v87) {
              goto LABEL_144;
            }
            unint64_t v15 = *(void *)(v91 + 8 * v13);
            ++v16;
            if (v15) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v9 + 4;
LABEL_22:
        uint64_t v11 = (v15 - 1) & v15;
        unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
        if (*(void *)(v4 + 16)) {
          goto LABEL_23;
        }
LABEL_143:
        uint64_t v2 = 0;
LABEL_141:
        sub_2474A2008();
        return v2;
    }
  }
}

uint64_t sub_2474ADA80(uint64_t a1)
{
  return sub_2474A8FF0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2474ADA94(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v43 = (void *)MEMORY[0x263F8EE78];
  if (!v7) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v10 << 6))
  {
    int64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v34, v14, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = v35;
    if (v35)
    {
      uint64_t v28 = v37;
      uint64_t v29 = v36;
      uint64_t v26 = v34;
      uint64_t v27 = v38;
      long long v30 = v39;
      char v33 = v40;
      uint64_t v31 = v41;
      long long v32 = v42;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_247464B98(0, v43[2] + 1, 1, v43);
        uint64_t v43 = (void *)result;
      }
      unint64_t v22 = v43[2];
      unint64_t v21 = v43[3];
      unint64_t v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_247464B98((void *)(v21 > 1), v22 + 1, 1, v43);
        unint64_t v23 = v22 + 1;
        uint64_t v43 = (void *)result;
      }
      BOOL v24 = v43;
      v43[2] = v23;
      char v25 = &v24[11 * v22];
      v25[4] = v26;
      v25[5] = v17;
      v25[6] = v29;
      v25[7] = v28;
      v25[8] = v27;
      *(_OWORD *)(v25 + 9) = v30;
      *((unsigned char *)v25 + 88) = v33;
      v25[12] = v31;
      *(_OWORD *)(v25 + 13) = v32;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v8) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v8) {
        goto LABEL_29;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v8) {
          goto LABEL_29;
        }
        unint64_t v19 = *(void *)(v4 + 8 * v10);
        if (!v19)
        {
          int64_t v10 = v18 + 3;
          if (v18 + 3 >= v8) {
            goto LABEL_29;
          }
          unint64_t v19 = *(void *)(v4 + 8 * v10);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v43;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of InvitationDestinationServiceProtocol.fetchInvitationDestinationGroups(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_2474747D8;
  return v9(a1, a2, a3);
}

ValueMetadata *type metadata accessor for InvitationDestinationService()
{
  return &type metadata for InvitationDestinationService;
}

uint64_t sub_2474ADE60(uint64_t *a1)
{
  return sub_2474A64E4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_2474ADE80(uint64_t a1)
{
  return a1;
}

uint64_t sub_2474ADED4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2474ADF70();
  uint64_t result = sub_2474B1150();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_247442FA0(v5, *v4);
      sub_2474AB370(v7, v5, v6);
      sub_24743E4AC(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_2474ADF70()
{
  unint64_t result = qword_269251D30;
  if (!qword_269251D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269251D30);
  }
  return result;
}

uint64_t sub_2474ADFC4(uint64_t a1)
{
  return a1;
}

BOOL static SecureCloudRepairMessage.MessageType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SecureCloudRepairMessage.MessageType.hash(into:)()
{
  return sub_2474B1520();
}

uint64_t SecureCloudRepairMessage.MessageType.hashValue.getter()
{
  return sub_2474B1530();
}

uint64_t SecureCloudRepairMessage.buildNumber.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureCloudRepairMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 20);
  uint64_t v4 = sub_2474B0C30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SecureCloudRepairMessage()
{
  uint64_t result = qword_26B12C490;
  if (!qword_26B12C490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SecureCloudRepairMessage.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

id SecureCloudRepairMessage.secureCloudShareItem.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 28));
  return v1;
}

uint64_t SecureCloudRepairMessage.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SecureCloudRepairMessage();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SecureCloudRepairMessage.version.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SecureCloudRepairMessage() + 36));
}

uint64_t SecureCloudRepairMessage.init(buildNumber:date:identifier:secureCloudShareItem:type:version:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  char v15 = *a7;
  *a9 = a1;
  a9[1] = a2;
  uint64_t v16 = (int *)type metadata accessor for SecureCloudRepairMessage();
  uint64_t v17 = (char *)a9 + v16[5];
  uint64_t v18 = sub_2474B0C30();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a3, v18);
  int64_t v20 = (void *)((char *)a9 + v16[6]);
  *int64_t v20 = a4;
  v20[1] = a5;
  *(void *)((char *)a9 + v16[7]) = a6;
  *((unsigned char *)a9 + v16[8]) = v15;
  *(void *)((char *)a9 + v16[9]) = a8;
  return result;
}

uint64_t SecureCloudRepairMessage.protobuf()()
{
  return sub_2474B0E00();
}

uint64_t sub_2474AE3C8(uint64_t a1, void *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v6 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  unint64_t v7 = (void *)(a1 + v6[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *unint64_t v7 = v5;
  v7[1] = v4;
  uint64_t v8 = (int *)type metadata accessor for SecureCloudRepairMessage();
  sub_2474B0BF0();
  uint64_t v9 = a1 + v6[6];
  *(void *)uint64_t v9 = v10;
  *(unsigned char *)(v9 + 8) = 0;
  unint64_t v11 = (void *)((char *)a2 + v8[6]);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = (void *)(a1 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void *v14 = v13;
  v14[1] = v12;
  id v15 = objc_msgSend(*(id *)((char *)a2 + v8[7]), sel_codableShareItem);
  if (v15 && (v16 = v15, id v17 = objc_msgSend(v15, sel_data), v16, v17))
  {
    uint64_t v18 = sub_2474B0BC0();
    uint64_t v20 = v19;

    uint64_t v21 = a1 + v6[8];
    uint64_t result = sub_24743E498(*(void *)v21, *(void *)(v21 + 8));
    *(void *)uint64_t v21 = v18;
    *(void *)(v21 + 8) = v20;
    unint64_t v23 = *(void *)((char *)a2 + v8[9]);
    if ((v23 & 0x8000000000000000) != 0 || HIDWORD(v23))
    {
      uint64_t result = sub_2474B1350();
      __break(1u);
    }
    else
    {
      uint64_t v24 = a1 + v6[10];
      *(_DWORD *)uint64_t v24 = v23;
      *(unsigned char *)(v24 + 4) = 0;
      uint64_t v25 = a1 + v6[9];
      *(void *)uint64_t v25 = (*((unsigned char *)a2 + v8[8]) & 1) != 0;
      *(_WORD *)(v25 + 8) = 1;
    }
  }
  else
  {
    sub_247446DD8();
    swift_allocError();
    *uint64_t v26 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t SecureCloudRepairMessage.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v39 = a2;
  uint64_t v4 = sub_2474B0C30();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = (int *)type metadata accessor for SecureCloudRepairMessageProtobuf();
  uint64_t v8 = (uint64_t *)(a1 + v7[5]);
  unint64_t v9 = v8[1];
  if (v9)
  {
    uint64_t v38 = *v8;
    unint64_t v42 = v9;
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v42 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  sub_2474B0BE0();
  uint64_t v10 = (uint64_t *)(a1 + v7[7]);
  unint64_t v11 = v10[1];
  uint64_t v40 = v2;
  if (v11)
  {
    uint64_t v37 = *v10;
    unint64_t v41 = v11;
  }
  else
  {
    uint64_t v37 = 0;
    unint64_t v41 = 0xE000000000000000;
  }
  uint64_t v12 = (unsigned int *)(a1 + v7[10]);
  if (*((unsigned char *)v12 + 4)) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = *v12;
  }
  uint64_t v36 = v13;
  uint64_t v14 = (uint64_t *)(a1 + v7[8]);
  uint64_t v16 = *v14;
  unint64_t v15 = v14[1];
  if (v15 >> 60 == 15) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = *v14;
  }
  if (v15 >> 60 == 15) {
    unint64_t v18 = 0xC000000000000000;
  }
  else {
    unint64_t v18 = v14[1];
  }
  id v19 = objc_allocWithZone(MEMORY[0x263F23B98]);
  swift_bridgeObjectRetain();
  sub_247446DC4(v16, v15);
  uint64_t v20 = (void *)sub_2474B0BB0();
  sub_24743E4AC(v17, v18);
  id v21 = objc_msgSend(v19, sel_initWithData_, v20);

  if (!v21) {
    goto LABEL_21;
  }
  id v22 = objc_msgSend(self, sel_shareItemWithCodableShareItem_, v21);
  if (!v22)
  {

LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247446DD8();
    swift_allocError();
    *uint64_t v26 = 1;
    swift_willThrow();
    goto LABEL_22;
  }
  unint64_t v23 = v22;
  uint64_t v24 = a1 + v7[9];
  if ((*(unsigned char *)(v24 + 9) & 1) == 0)
  {
    if (*(unsigned char *)(v24 + 8))
    {
      BOOL v25 = *(void *)v24 != 0;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247446DD8();
    swift_allocError();
    *uint64_t v28 = 1;
    swift_willThrow();

LABEL_22:
    sub_2474AE994(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  }
  BOOL v25 = 0;
LABEL_26:

  sub_2474AE994(a1);
  uint64_t v29 = (int *)type metadata accessor for SecureCloudRepairMessage();
  long long v30 = v39;
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))((char *)v39 + v29[5], v6, v44);
  uint64_t v31 = v37;
  unint64_t v32 = v42;
  void *v30 = v38;
  v30[1] = v32;
  char v33 = (void *)((char *)v30 + v29[6]);
  unint64_t v34 = v41;
  *char v33 = v31;
  v33[1] = v34;
  *(void *)((char *)v30 + v29[7]) = v23;
  *((unsigned char *)v30 + v29[8]) = v25;
  *(void *)((char *)v30 + v29[9]) = v36;
  return result;
}

uint64_t sub_2474AE994(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureCloudRepairMessageProtobuf();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2474AE9F4()
{
  unint64_t result = qword_269251D48[0];
  if (!qword_269251D48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269251D48);
  }
  return result;
}

uint64_t sub_2474AEA48()
{
  return sub_2474AEAB0(&qword_2692505F8);
}

uint64_t sub_2474AEA7C()
{
  return sub_2474AEAB0(&qword_269251128);
}

uint64_t sub_2474AEAB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SecureCloudRepairMessageProtobuf();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2474AEAF4()
{
  return sub_2474B0E00();
}

uint64_t sub_2474AEB88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return SecureCloudRepairMessage.init(_:)(a1, a2);
}

void *initializeBufferWithCopyOfBuffer for SecureCloudRepairMessage(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2474B0C30();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    unint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *unint64_t v15 = *v16;
    v15[1] = v17;
    unint64_t v18 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v18;
    uint64_t v19 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)v4 + v19) = *(void *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    id v20 = v18;
  }
  return v4;
}

void destroy for SecureCloudRepairMessage(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2474B0C30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void **)(a1 + *(int *)(a2 + 28));
}

void *initializeWithCopy for SecureCloudRepairMessage(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2474B0C30();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  unint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v17;
  uint64_t v18 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  id v19 = v17;
  return a1;
}

void *assignWithCopy for SecureCloudRepairMessage(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2474B0C30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void **)((char *)a2 + v13);
  unint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for SecureCloudRepairMessage(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2474B0C30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  return a1;
}

void *assignWithTake for SecureCloudRepairMessage(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2474B0C30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  uint64_t v18 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureCloudRepairMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2474AF0EC);
}

uint64_t sub_2474AF0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2474B0C30();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SecureCloudRepairMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2474AF1B0);
}

uint64_t sub_2474AF1B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2474B0C30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2474AF258()
{
  uint64_t result = sub_2474B0C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SecureCloudRepairMessage.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2474AF3E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudRepairMessage.MessageType()
{
  return &type metadata for SecureCloudRepairMessage.MessageType;
}

uint64_t sub_2474AF41C(uint64_t a1)
{
  return sub_24744EFB8(a1);
}

void destroy for TransportMetadata(uint64_t a1)
{
}

uint64_t _s21ActivitySharingClient17TransportMetadataOwCP_0(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24745B068(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TransportMetadata(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24745B068(*(void **)a2, v4, v5);
  unsigned int v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24745B090(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TransportMetadata(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24745B090(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2474AF5D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2474AF5DC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TransportMetadata()
{
  return &type metadata for TransportMetadata;
}

uint64_t CodableObjectArray.init(value:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2474B1040();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t CodableObjectArray.value.getter()
{
  unint64_t v1 = *v0;
  sub_2474736DC(0, (unint64_t *)&unk_26B12C810);
  sub_2474B10B0();
  id v2 = v1;
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return sub_2474B1070();
  }
}

id CodableObject.value.getter()
{
  return *v0;
}

uint64_t CodableObject.init(value:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_2474AF6E4()
{
  return sub_2474AFE88();
}

uint64_t sub_2474AF6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2474AF764(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_2474AF7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2474AF840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_2474AF8B0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2474AFE88();
  *a1 = result;
  return result;
}

BOOL sub_2474AF8F0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2474AFE88();
  *a1 = result;
  return result;
}

uint64_t sub_2474AF928(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2474AF97C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CodableObject.encode(to:)(void *a1, uint64_t a2)
{
  return sub_2474B0254(a1, a2, (void (*)(uint64_t, void))type metadata accessor for CodableObject.CodingKeys);
}

uint64_t CodableObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v35 = a3;
  v38[4] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for CodableObject.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_2474B13F0();
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v31 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474B1540();
  if (v3) {
    goto LABEL_12;
  }
  uint64_t v33 = a2;
  unint64_t v34 = a1;
  sub_24743F680();
  sub_2474B13E0();
  id v10 = v38[0];
  id v9 = v38[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C830);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2474B2130;
  uint64_t v12 = v33;
  *(void *)(v11 + 56) = swift_getMetatypeMetadata();
  *(void *)(v11 + 32) = v12;
  sub_2474736DC(0, (unint64_t *)&unk_26B12C800);
  uint64_t v13 = (void *)MEMORY[0x24C5566A0](v11);
  v38[0] = 0;
  sub_2474B1130();
  if (!v38[0])
  {
    sub_2474951AC();
    swift_allocError();
    unsigned char *v25 = 3;
    swift_willThrow();

    uint64_t v26 = (uint64_t)v10;
    unint64_t v27 = (unint64_t)v9;
    goto LABEL_9;
  }
  id v32 = v13;
  unint64_t v14 = (unint64_t)v9;
  uint64_t v15 = (uint64_t)v10;
  uint64_t v16 = self;
  uint64_t v17 = (void *)sub_2474B1120();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_2474B0BB0();
  v38[0] = 0;
  id v19 = objc_msgSend(v16, sel__strictlyUnarchivedObjectOfClasses_fromData_error_, v17, v18, v38);

  if (!v19)
  {
    id v28 = v38[0];
    sub_2474B0BA0();

    swift_willThrow();
    uint64_t v26 = v15;
    unint64_t v27 = v14;
LABEL_9:
    sub_24743E4AC(v26, v27);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
    goto LABEL_11;
  }
  id v20 = v38[0];
  sub_2474B1280();
  swift_unknownObjectRelease();
  char v21 = swift_dynamicCast();
  uint64_t v22 = v36;
  if ((v21 & 1) == 0)
  {
    sub_2474951AC();
    swift_allocError();
    unsigned char *v30 = 1;
    swift_willThrow();

    sub_24743E4AC(v15, v14);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
LABEL_11:
    a1 = v34;
LABEL_12:
    uint64_t v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }

  sub_24743E4AC(v15, v14);
  uint64_t v23 = v37;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  uint64_t v24 = (uint64_t)v34;
  *uint64_t v35 = v23;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

BOOL sub_2474AFE7C()
{
  return sub_2474AFE88();
}

BOOL sub_2474AFE88()
{
  uint64_t v0 = sub_2474B13B0();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_2474AFECC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return CodableObject.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_2474AFEE8(void *a1, uint64_t a2)
{
  return CodableObject.encode(to:)(a1, a2);
}

uint64_t sub_2474AFF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2474AFF74(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_2474AFFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2474B0050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_2474B00C0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2474AFE88();
  *a1 = result;
  return result;
}

BOOL sub_2474B0100@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2474AFE88();
  *a1 = result;
  return result;
}

uint64_t sub_2474B0138(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2474B018C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CodableObjectArray.encode(to:)(void *a1, uint64_t a2)
{
  return sub_2474B0254(a1, a2, (void (*)(uint64_t, void))type metadata accessor for CodableObjectArray.CodingKeys);
}

uint64_t sub_2474B0254(void *a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  v20[2] = *(id *)MEMORY[0x263EF8340];
  a3(255, *(void *)(a2 + 16));
  swift_getWitnessTable();
  uint64_t v19 = sub_2474B1430();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474B1550();
  id v9 = self;
  v20[0] = 0;
  id v10 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, v20);
  id v11 = v20[0];
  if (v10)
  {
    uint64_t v12 = (void *)sub_2474B0BC0();
    unint64_t v14 = v13;

    v20[0] = v12;
    v20[1] = v14;
    sub_24743F6D4();
    uint64_t v15 = v19;
    sub_2474B1420();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
    return sub_24743E4AC((uint64_t)v12, (unint64_t)v14);
  }
  else
  {
    uint64_t v17 = v11;
    sub_2474B0BA0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  }
}

uint64_t CodableObjectArray.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v36 = a3;
  v38[4] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for CodableObjectArray.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_2474B13F0();
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2474B1540();
  if (v3) {
    goto LABEL_12;
  }
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  sub_24743F680();
  sub_2474B13E0();
  id v10 = v38[0];
  id v9 = v38[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C830);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2474B3060;
  uint64_t v12 = sub_2474736DC(0, (unint64_t *)&unk_26B12C810);
  *(void *)(v11 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B12C820);
  *(void *)(v11 + 32) = v12;
  uint64_t v13 = v34;
  *(void *)(v11 + 88) = swift_getMetatypeMetadata();
  *(void *)(v11 + 64) = v13;
  sub_2474736DC(0, (unint64_t *)&unk_26B12C800);
  unint64_t v14 = (void *)MEMORY[0x24C5566A0](v11);
  v38[0] = 0;
  sub_2474B1130();
  if (!v38[0])
  {
    sub_2474951AC();
    swift_allocError();
    *uint64_t v24 = 3;
    swift_willThrow();

    uint64_t v25 = (uint64_t)v10;
    unint64_t v26 = (unint64_t)v9;
    goto LABEL_10;
  }
  id v33 = v14;
  uint64_t v15 = self;
  unint64_t v16 = (unint64_t)v9;
  uint64_t v17 = (uint64_t)v10;
  uint64_t v18 = (void *)sub_2474B1120();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_2474B0BB0();
  v38[0] = 0;
  id v20 = objc_msgSend(v15, sel__strictlyUnarchivedObjectOfClasses_fromData_error_, v18, v19, v38);

  if (!v20)
  {
    id v27 = v38[0];
    sub_2474B0BA0();

    swift_willThrow();
    uint64_t v25 = v17;
    unint64_t v26 = v16;
    goto LABEL_10;
  }
  unint64_t v31 = v16;
  uint64_t v32 = v17;
  id v21 = v38[0];
  sub_2474B1280();
  swift_unknownObjectRelease();
  sub_2474B10B0();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_2474951AC();
    swift_allocError();
    *id v28 = 2;
    swift_willThrow();

    unint64_t v26 = v31;
    uint64_t v25 = v32;
LABEL_10:
    sub_24743E4AC(v25, v26);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
    a1 = v35;
LABEL_12:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  uint64_t v22 = sub_2474B1040();

  swift_bridgeObjectRelease();
  sub_24743E4AC(v32, v31);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
  uint64_t v23 = (uint64_t)v35;
  uint64_t *v36 = v22;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_2474B08F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return CodableObjectArray.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_2474B090C(void *a1, uint64_t a2)
{
  return CodableObjectArray.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for CodableObject.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CodableObjectArray.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CodableObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CodableObjectArray()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_2474B098C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *BOOL result = a2;
        return result;
      case 2:
        *(_WORD *)BOOL result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)BOOL result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *BOOL result = 0;
      break;
    case 2:
      *(_WORD *)BOOL result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2474B0A28);
    case 4:
      *(_DWORD *)BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2474B0A50()
{
  return swift_getWitnessTable();
}

uint64_t sub_2474B0A6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2474B0A88()
{
  return swift_getWitnessTable();
}

uint64_t sub_2474B0AA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2474B0AC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2474B0ADC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2474B0B00()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_2474B0B10()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_2474B0B20()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_2474B0B30()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_2474B0B40()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_2474B0B50()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_2474B0B60()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_2474B0B70()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_2474B0B80()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_2474B0B90()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_2474B0BA0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2474B0BB0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_2474B0BC0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2474B0BD0()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_2474B0BE0()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_2474B0BF0()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_2474B0C00()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_2474B0C10()
{
  return MEMORY[0x270EF0BD0]();
}

uint64_t sub_2474B0C20()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_2474B0C30()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_2474B0C40()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_2474B0C50()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_2474B0C60()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2474B0C70()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_2474B0C80()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_2474B0C90()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_2474B0CA0()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_2474B0CB0()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_2474B0CC0()
{
  return MEMORY[0x270F44A18]();
}

uint64_t sub_2474B0CD0()
{
  return MEMORY[0x270F44A20]();
}

uint64_t sub_2474B0CE0()
{
  return MEMORY[0x270F44A28]();
}

uint64_t sub_2474B0CF0()
{
  return MEMORY[0x270F44AA8]();
}

uint64_t sub_2474B0D00()
{
  return MEMORY[0x270F44AB0]();
}

uint64_t sub_2474B0D10()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t sub_2474B0D40()
{
  return MEMORY[0x270F44B10]();
}

uint64_t sub_2474B0D50()
{
  return MEMORY[0x270F44B48]();
}

uint64_t sub_2474B0D60()
{
  return MEMORY[0x270F44B78]();
}

uint64_t sub_2474B0D70()
{
  return MEMORY[0x270F44BD8]();
}

uint64_t sub_2474B0D80()
{
  return MEMORY[0x270F44BF0]();
}

uint64_t sub_2474B0D90()
{
  return MEMORY[0x270F44C00]();
}

uint64_t sub_2474B0DA0()
{
  return MEMORY[0x270F44C38]();
}

uint64_t sub_2474B0DB0()
{
  return MEMORY[0x270F44C98]();
}

uint64_t sub_2474B0DC0()
{
  return MEMORY[0x270F44CA0]();
}

uint64_t sub_2474B0DD0()
{
  return MEMORY[0x270F44CA8]();
}

uint64_t sub_2474B0DF0()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t sub_2474B0E00()
{
  return MEMORY[0x270F44CE0]();
}

uint64_t sub_2474B0E10()
{
  return MEMORY[0x270F44D68]();
}

uint64_t sub_2474B0E20()
{
  return MEMORY[0x270F44D88]();
}

uint64_t sub_2474B0E30()
{
  return MEMORY[0x270F44DC8]();
}

uint64_t sub_2474B0E40()
{
  return MEMORY[0x270F44DD8]();
}

uint64_t sub_2474B0E50()
{
  return MEMORY[0x270F44DE0]();
}

uint64_t sub_2474B0E60()
{
  return MEMORY[0x270F44E00]();
}

uint64_t sub_2474B0E70()
{
  return MEMORY[0x270F44E10]();
}

uint64_t sub_2474B0E80()
{
  return MEMORY[0x270F44E18]();
}

uint64_t sub_2474B0E90()
{
  return MEMORY[0x270F44E28]();
}

uint64_t sub_2474B0EA0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2474B0EB0()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_2474B0EC0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2474B0ED0()
{
  return MEMORY[0x270EE3BA0]();
}

uint64_t sub_2474B0EE0()
{
  return MEMORY[0x270EE3F90]();
}

uint64_t sub_2474B0EF0()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_2474B0F00()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_2474B0F10()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_2474B0F20()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_2474B0F30()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2474B0F40()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_2474B0F50()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2474B0F60()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_2474B0F70()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_2474B0F80()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_2474B0F90()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_2474B0FA0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2474B0FB0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2474B0FC0()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_2474B0FD0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_2474B0FE0()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_2474B0FF0()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_2474B1030()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_2474B1040()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_2474B1050()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2474B1060()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2474B1070()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_2474B1080()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_2474B1090()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_2474B10A0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_2474B10B0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_2474B10C0()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_2474B10D0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_2474B10E0()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_2474B10F0()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_2474B1100()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_2474B1110()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_2474B1120()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_2474B1130()
{
  return MEMORY[0x270EF1CB8]();
}

uint64_t sub_2474B1140()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_2474B1150()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_2474B1160()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_2474B1170()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_2474B1180()
{
  return MEMORY[0x270EF1F60]();
}

uint64_t sub_2474B1190()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_2474B11A0()
{
  return MEMORY[0x270FA0D00]();
}

uint64_t sub_2474B11B0()
{
  return MEMORY[0x270FA0D20]();
}

uint64_t sub_2474B11C0()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_2474B11D0()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_2474B11E0()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_2474B11F0()
{
  return MEMORY[0x270EF2050]();
}

uint64_t sub_2474B1200()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_2474B1210()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2474B1220()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_2474B1230()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2474B1240()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2474B1250()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_2474B1260()
{
  return MEMORY[0x270EF2590]();
}

uint64_t sub_2474B1270()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_2474B1280()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_2474B12A0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2474B12B0()
{
  return MEMORY[0x270EF2608]();
}

uint64_t sub_2474B12C0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_2474B12D0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2474B12E0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2474B12F0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2474B1300()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2474B1310()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2474B1320()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2474B1330()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_2474B1340()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_2474B1350()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2474B1360()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2474B1370()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_2474B1380()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2474B1390()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2474B13A0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2474B13B0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2474B13C0()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2474B13D0()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2474B13E0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2474B13F0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_2474B1400()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2474B1410()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_2474B1420()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2474B1430()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_2474B1440()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2474B1450()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2474B1460()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_2474B1470()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2474B14A0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2474B14B0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2474B14C0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2474B14D0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2474B14E0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2474B14F0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2474B1500()
{
  return MEMORY[0x270EF26E0]();
}

uint64_t sub_2474B1510()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2474B1520()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2474B1530()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2474B1540()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2474B1550()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_2474B1580()
{
  return MEMORY[0x270FA0128]();
}

uint64_t ASActivitySharingDaemonEnabled()
{
  return MEMORY[0x270F0ABD0]();
}

uint64_t ASDestinationIsEmail()
{
  return MEMORY[0x270F0AD20]();
}

uint64_t ASDestinationIsPhoneNumber()
{
  return MEMORY[0x270F0AD28]();
}

uint64_t ASFriendsFromCodableFriendList()
{
  return MEMORY[0x270F0AD70]();
}

uint64_t ASSecureCloudEnabled()
{
  return MEMORY[0x270F0AE20]();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return MEMORY[0x270F3C980]();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return MEMORY[0x270F3C988]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

mach_port_t pthread_mach_thread_np(pthread_t a1)
{
  return MEMORY[0x270EDAF38](a1);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x270EDB010]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x270FA2408]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}